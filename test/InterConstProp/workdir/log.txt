  %obj = alloca %struct.stType, align 8
  call void @initialize(%struct.stType* %obj)
  %1 = getelementptr inbounds %struct.stType, %struct.stType* %obj, i32 0, i32 0
  %2 = getelementptr inbounds %struct.COORD, %struct.COORD* %1, i32 0, i32 0
  store i32 4, i32* %2, align 4
  %3 = getelementptr inbounds %struct.stType, %struct.stType* %obj, i32 0, i32 0
  %4 = getelementptr inbounds %struct.COORD, %struct.COORD* %3, i32 0, i32 1
  store i32 8, i32* %4, align 4
  %5 = getelementptr inbounds %struct.stType, %struct.stType* %obj, i32 0, i32 2
  %6 = getelementptr inbounds [8 x i32], [8 x i32]* %5, i64 0, i64 0
  store i32 12, i32* %6, align 4
  %7 = getelementptr inbounds %struct.stType, %struct.stType* %obj, i32 0, i32 2
  %8 = getelementptr inbounds [8 x i32], [8 x i32]* %7, i64 0, i64 1
  store i32 12, i32* %8, align 4
  %9 = getelementptr inbounds %struct.stType, %struct.stType* %obj, i32 0, i32 2
  %10 = getelementptr inbounds [8 x i32], [8 x i32]* %9, i64 0, i64 2
  store i32 12, i32* %10, align 4
  %11 = getelementptr inbounds %struct.stType, %struct.stType* %obj, i32 0, i32 1
  %12 = getelementptr inbounds [100 x i8], [100 x i8]* %11, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %12, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.5, i32 0, i32 0), i64 11, i32 1, i1 false)
  ret void
  call void @branchPruned(%struct.stType* byval align 8 %obj)
  %1 = getelementptr inbounds %struct.stType, %struct.stType* %obj, i32 0, i32 0
  %2 = getelementptr inbounds %struct.COORD, %struct.COORD* %1, i32 0, i32 0
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 4, 4
  br i1 %4, label %5, label %7
mergePredecessors
  %6 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i32 0, i32 0))
  br label %28
mergePredecessors
  %8 = getelementptr inbounds %struct.stType, %struct.stType* %obj, i32 0, i32 0
  %9 = getelementptr inbounds %struct.COORD, %struct.COORD* %8, i32 0, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 8, 8
  br i1 %11, label %12, label %14
mergePredecessors
  %13 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i32 0, i32 0))
  br label %28
mergePredecessors
1
checking for

; <label>:14                                      ; preds = %7
  %15 = getelementptr inbounds %struct.stType, %struct.stType* %obj, i32 0, i32 2
  %16 = getelementptr inbounds [8 x i32], [8 x i32]* %15, i64 0, i64 1
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %17, 12
  br i1 %18, label %19, label %21

--------------------------------
  %15 = getelementptr inbounds %struct.stType, %struct.stType* %obj, i32 0, i32 2
  %16 = getelementptr inbounds [8 x i32], [8 x i32]* %15, i64 0, i64 1
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 12, 12
  br i1 %18, label %19, label %21
mergePredecessors
1
checking for

; <label>:28                                      ; preds = %26, %21, %19, %12, %5
  ret void

--------------------------------
  %20 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i32 0, i32 0))
  br label %28
mergePredecessors
1
checking for

; <label>:21                                      ; preds = %14
  %22 = getelementptr inbounds %struct.stType, %struct.stType* %obj, i32 0, i32 1
  %23 = getelementptr inbounds [100 x i8], [100 x i8]* %22, i32 0, i32 0
  %24 = call i32 @strcmp(i8* %23, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i32 0, i32 0)) #4
  %25 = icmp ne i32 %24, 0
  br i1 %25, label %28, label %26

--------------------------------
  %22 = getelementptr inbounds %struct.stType, %struct.stType* %obj, i32 0, i32 1
  %23 = getelementptr inbounds [100 x i8], [100 x i8]* %22, i32 0, i32 0
  %24 = call i32 @strcmp(i8* %23, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i32 0, i32 0)) #4
  %24 = getelementptr [11 x i8], [11 x i8]* @0, i64 0, i64 0
  %25 = call i32 @strcmp(i8* %24, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i32 0, i32 0)) #4
  %26 = icmp ne i32 0, 0
  br i1 %26, label %29, label %27
mergePredecessors
1
checking for

; <label>:29                                      ; preds = %27, %21, %19, %12, %5
  ret void

*******************allMutual******************

; <label>:21                                      ; preds = %14
  %22 = getelementptr inbounds %struct.stType, %struct.stType* %obj, i32 0, i32 1
  %23 = getelementptr inbounds [100 x i8], [100 x i8]* %22, i32 0, i32 0
  %24 = getelementptr [11 x i8], [11 x i8]* @0, i64 0, i64 0
  %25 = call i32 @strcmp(i8* %24, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i32 0, i32 0)) #4
  %26 = icmp ne i32 0, 0
  br i1 %26, label %29, label %27
 is BB

; <label>:14                                      ; preds = %7
  %15 = getelementptr inbounds %struct.stType, %struct.stType* %obj, i32 0, i32 2
  %16 = getelementptr inbounds [8 x i32], [8 x i32]* %15, i64 0, i64 1
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 12, 12
  br i1 %18, label %19, label %21
 is predecessor
**********************************************
--------------------------------
  %28 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.4, i32 0, i32 0))
  br label %29
mergePredecessors
1
checking for

; <label>:29                                      ; preds = %27, %21, %19, %12, %5
  ret void

*******************allMutual******************

; <label>:27                                      ; preds = %21
  %28 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.4, i32 0, i32 0))
  br label %29
 is BB

; <label>:21                                      ; preds = %14
  %22 = getelementptr inbounds %struct.stType, %struct.stType* %obj, i32 0, i32 1
  %23 = getelementptr inbounds [100 x i8], [100 x i8]* %22, i32 0, i32 0
  %24 = getelementptr [11 x i8], [11 x i8]* @0, i64 0, i64 0
  %25 = call i32 @strcmp(i8* %24, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i32 0, i32 0)) #4
  %26 = icmp ne i32 0, 0
  br i1 %26, label %29, label %27
 is predecessor
**********************************************
--------------------------------
  ret void
  ret i32 0
  %obj = alloca %struct.stType, align 8
  call void @initialize(%struct.stType* %obj)
  %1 = getelementptr inbounds %struct.stType, %struct.stType* %obj, i32 0, i32 0
  %2 = getelementptr inbounds %struct.COORD, %struct.COORD* %1, i32 0, i32 0
  store i32 4, i32* %2, align 4
  %3 = getelementptr inbounds %struct.stType, %struct.stType* %obj, i32 0, i32 0
  %4 = getelementptr inbounds %struct.COORD, %struct.COORD* %3, i32 0, i32 1
  store i32 8, i32* %4, align 4
  %5 = getelementptr inbounds %struct.stType, %struct.stType* %obj, i32 0, i32 2
  %6 = getelementptr inbounds [8 x i32], [8 x i32]* %5, i64 0, i64 0
  store i32 12, i32* %6, align 4
  %7 = getelementptr inbounds %struct.stType, %struct.stType* %obj, i32 0, i32 2
  %8 = getelementptr inbounds [8 x i32], [8 x i32]* %7, i64 0, i64 1
  store i32 12, i32* %8, align 4
  %9 = getelementptr inbounds %struct.stType, %struct.stType* %obj, i32 0, i32 2
  %10 = getelementptr inbounds [8 x i32], [8 x i32]* %9, i64 0, i64 2
  store i32 12, i32* %10, align 4
  %11 = getelementptr inbounds %struct.stType, %struct.stType* %obj, i32 0, i32 1
  %12 = getelementptr inbounds [100 x i8], [100 x i8]* %11, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %12, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.5, i32 0, i32 0), i64 11, i32 1, i1 false)
  ret void
  call void @branchPruned_clone(%struct.stType* %obj)
  %1 = getelementptr inbounds %struct.stType, %struct.stType* %obj, i32 0, i32 0
  %2 = getelementptr inbounds %struct.COORD, %struct.COORD* %1, i32 0, i32 0
  %3 = load i32, i32* %2, align 8
  br i1 true, label %4, label %6
mergePredecessors
  %5 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i32 0, i32 0))
  br label %24
mergePredecessors
  %7 = getelementptr inbounds %struct.stType, %struct.stType* %obj, i32 0, i32 0
  %8 = getelementptr inbounds %struct.COORD, %struct.COORD* %7, i32 0, i32 1
  %9 = load i32, i32* %8, align 4
  br i1 true, label %10, label %12
mergePredecessors
  %11 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i32 0, i32 0))
  br label %24
mergePredecessors
1
checking for

; <label>:12                                      ; preds = %6
  %13 = getelementptr inbounds %struct.stType, %struct.stType* %obj, i32 0, i32 2
  %14 = getelementptr inbounds [8 x i32], [8 x i32]* %13, i64 0, i64 1
  %15 = load i32, i32* %14, align 4
  br i1 true, label %16, label %18

--------------------------------
  %13 = getelementptr inbounds %struct.stType, %struct.stType* %obj, i32 0, i32 2
  %14 = getelementptr inbounds [8 x i32], [8 x i32]* %13, i64 0, i64 1
  %15 = load i32, i32* %14, align 4
  br i1 true, label %16, label %18
mergePredecessors
1
checking for

; <label>:24                                      ; preds = %22, %18, %16, %10, %4
  ret void

--------------------------------
  %17 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i32 0, i32 0))
  br label %24
mergePredecessors
1
checking for

; <label>:18                                      ; preds = %12
  %19 = getelementptr inbounds %struct.stType, %struct.stType* %obj, i32 0, i32 1
  %20 = getelementptr inbounds [100 x i8], [100 x i8]* %19, i32 0, i32 0
  %21 = call i32 @strcmp(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @0, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i32 0, i32 0)) #4
  br i1 false, label %24, label %22

--------------------------------
  %19 = getelementptr inbounds %struct.stType, %struct.stType* %obj, i32 0, i32 1
  %20 = getelementptr inbounds [100 x i8], [100 x i8]* %19, i32 0, i32 0
  %21 = call i32 @strcmp(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @0, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i32 0, i32 0)) #4
  br i1 false, label %24, label %22
mergePredecessors
1
checking for

; <label>:24                                      ; preds = %22, %18, %16, %10, %4
  ret void

*******************allMutual******************

; <label>:18                                      ; preds = %12
  %19 = getelementptr inbounds %struct.stType, %struct.stType* %obj, i32 0, i32 1
  %20 = getelementptr inbounds [100 x i8], [100 x i8]* %19, i32 0, i32 0
  %21 = call i32 @strcmp(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @0, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i32 0, i32 0)) #4
  br i1 false, label %24, label %22
 is BB

; <label>:12                                      ; preds = %6
  %13 = getelementptr inbounds %struct.stType, %struct.stType* %obj, i32 0, i32 2
  %14 = getelementptr inbounds [8 x i32], [8 x i32]* %13, i64 0, i64 1
  %15 = load i32, i32* %14, align 4
  br i1 true, label %16, label %18
 is predecessor
**********************************************
--------------------------------
  %23 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.4, i32 0, i32 0))
  br label %24
mergePredecessors
1
checking for

; <label>:24                                      ; preds = %22, %18, %16, %10, %4
  ret void

*******************allMutual******************

; <label>:22                                      ; preds = %18
  %23 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.4, i32 0, i32 0))
  br label %24
 is BB

; <label>:18                                      ; preds = %12
  %19 = getelementptr inbounds %struct.stType, %struct.stType* %obj, i32 0, i32 1
  %20 = getelementptr inbounds [100 x i8], [100 x i8]* %19, i32 0, i32 0
  %21 = call i32 @strcmp(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @0, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i32 0, i32 0)) #4
  br i1 false, label %24, label %22
 is predecessor
**********************************************
--------------------------------
  ret void
  ret i32 0
Test passed
running test 17
