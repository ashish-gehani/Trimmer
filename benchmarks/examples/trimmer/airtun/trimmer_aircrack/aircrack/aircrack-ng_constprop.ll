; ModuleID = './aircrack/aircrack-ng_constprop.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.options = type { i32, i32, i32, [33 x i8], [6 x i8], i32, i32, [64 x i8], [64 x i32], [6 x i8], i32, i32, float, i32, i32, i32, i32, i32, i32, i32, i32, [128 x i8*], %struct._IO_FILE*, i32, i32, [128 x i32], i32, i32, i32, i32, [17 x i32], [64 x i32], i32, i32, i8*, i8*, %struct.mergeBSSID*, %struct.AP_info*, i32, i32, i32, i32, i8* }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }
%struct.mergeBSSID = type { [6 x i8], [2 x i8], i32, %struct.mergeBSSID* }
%struct.AP_info = type { %struct.AP_info*, [6 x i8], [33 x i8], [4 x i8], i8*, i8**, i64, i64, i64, i64, i32, i32, i32, %struct.ST_info*, %struct.WPA_hdsk, %struct.PTW_attackstate*, %struct.PTW_attackstate* }
%struct.ST_info = type { %struct.AP_info*, %struct.ST_info*, %struct.WPA_hdsk, [6 x i8] }
%struct.WPA_hdsk = type { [6 x i8], [32 x i8], [32 x i8], [16 x i8], [256 x i8], i32, i32, i32 }
%struct.PTW_attackstate = type { i32, [2097152 x i8], i32, [10000 x %struct.PTW_session], [29 x [256 x %struct.PTW_tableentry]], %struct.PTW_session*, i32 }
%struct.PTW_session = type { [3 x i8], [32 x i8], i32 }
%struct.PTW_tableentry = type { i32, i8 }
%struct.WEP_data = type { [64 x i8], i8*, i32, i64, i64, [64 x i32], [64 x i32], [64 x [256 x %struct.vote]] }
%struct.vote = type { i32, i32 }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon, %union.anon, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon = type { i64 }
%struct.timeval = type { i64, i64 }
%struct.WPA_data = type { %struct.AP_info*, i32, i32, i8*, i32, i32, [128 x i8], %union.pthread_cond_t, %union.pthread_mutex_t }
%struct.option = type { i8*, i32, i32*, i32 }
%struct.env_md_st = type { i32, i32, i32, i64, i32 (%struct.env_md_ctx_st*)*, i32 (%struct.env_md_ctx_st*, i8*, i64)*, i32 (%struct.env_md_ctx_st*, i8*)*, i32 (%struct.env_md_ctx_st*, %struct.env_md_ctx_st*)*, i32 (%struct.env_md_ctx_st*)*, i32 (i32, i8*, i32, i8*, i32*, i8*)*, i32 (i32, i8*, i32, i8*, i32, i8*)*, [5 x i32], i32, i32, i32 (%struct.env_md_ctx_st*, i32, i32, i8*)* }
%struct.env_md_ctx_st = type { %struct.env_md_st*, %struct.engine_st*, i64, i8*, %struct.evp_pkey_ctx_st*, i32 (%struct.env_md_ctx_st*, i8*, i64)* }
%struct.engine_st = type opaque
%struct.evp_pkey_ctx_st = type opaque
%struct.read_buf = type { i32, i32, i8*, i8* }
%struct.ivs2_pkthdr = type { i16, i16 }
%struct.ivs2_filehdr = type { i16 }
%struct.pcap_pkthdr = type { i32, i32, i32, i32 }
%struct.pcap_file_header = type { i32, i16, i16, i32, i32, i32, i32 }
%struct.winsize = type { i16, i16, i16, i16 }
%union.pthread_mutexattr_t = type { i32 }
%union.pthread_attr_t = type { i64, [48 x i8] }
%struct.rc4_key_st = type { i32, i32, [256 x i32] }
%struct.SHAstate_st = type { i32, i32, i32, i32, i32, i32, i32, [16 x i32], i32 }
%struct.hmac_ctx_st = type { %struct.env_md_st*, %struct.env_md_ctx_st, %struct.env_md_ctx_st, %struct.env_md_ctx_st, i32, [128 x i8] }
%struct.WPA_ST_info = type { %struct.WPA_ST_info*, [6 x i8], [6 x i8], [32 x i8], [32 x i8], [20 x i8], [256 x i8], [80 x i8], i32, i64, i64, i32, i32 }
%struct.Michael = type { i64, i64, i64, i64, i64, i64, [8 x i8] }
%struct.aes_key_st = type { [60 x i32], i32 }
%struct.doublesorthelper = type { i32, double }
%struct.sorthelper = type { i32, i8, i32 }
%struct.rc4state = type { i8, i8, [256 x i8] }

@nb_eof = dso_local global i32 0, align 4
@nb_pkt = dso_local global i64 0, align 8
@wepkey_crack_success = dso_local global i32 0, align 4
@close_aircrack = dso_local global i32 0, align 4
@id = dso_local global i32 0, align 4
@wpa_wordlists_done = dso_local global i32 0, align 4
@K_COEFF = dso_local global [17 x i32] [i32 15, i32 13, i32 12, i32 12, i32 12, i32 5, i32 5, i32 5, i32 3, i32 4, i32 3, i32 4, i32 3, i32 13, i32 4, i32 4, i32 -20], align 16, !track !0
@PTW_DEFAULTWEIGHT = dso_local global [1 x i32] [i32 256], align 4
@PTW_DEFAULTBF = dso_local global [29 x i32] zeroinitializer, align 16
@R = dso_local constant [256 x i8] c"\00\01\02\03\04\05\06\07\08\09\0A\0B\0C\0D\0E\0F\10\11\12\13\14\15\16\17\18\19\1A\1B\1C\1D\1E\1F !\22#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\5C]^_`abcdefghijklmnopqrstuvwxyz{|}~\7F\80\81\82\83\84\85\86\87\88\89\8A\8B\8C\8D\8E\8F\90\91\92\93\94\95\96\97\98\99\9A\9B\9C\9D\9E\9F\A0\A1\A2\A3\A4\A5\A6\A7\A8\A9\AA\AB\AC\AD\AE\AF\B0\B1\B2\B3\B4\B5\B6\B7\B8\B9\BA\BB\BC\BD\BE\BF\C0\C1\C2\C3\C4\C5\C6\C7\C8\C9\CA\CB\CC\CD\CE\CF\D0\D1\D2\D3\D4\D5\D6\D7\D8\D9\DA\DB\DC\DD\DE\DF\E0\E1\E2\E3\E4\E5\E6\E7\E8\E9\EA\EB\EC\ED\EE\EF\F0\F1\F2\F3\F4\F5\F6\F7\F8\F9\FA\FB\FC\FD\FE\FF", align 16
@usage = dso_local global [1799 x i8] c"\0A  %s - (C) 2006, 2007, 2008, 2009 Thomas d'Otreppe\0A  Original work: Christophe Devine\0A  http://www.aircrack-ng.org\0A\0A  usage: aircrack-ng [options] <.cap / .ivs file(s)>\0A\0A  Common options:\0A\0A      -a <amode> : force attack mode (1/WEP, 2/WPA-PSK)\0A      -e <essid> : target selection: network identifier\0A      -b <bssid> : target selection: access point's MAC\0A      -p <nbcpu> : # of CPU to use  (default: all CPUs)\0A      -q         : enable quiet mode (no status output)\0A      -C <macs>  : merge the given APs to a virtual one\0A      -l <file>  : write key to file\0A\0A  Static WEP cracking options:\0A\0A      -c         : search alpha-numeric characters only\0A      -t         : search binary coded decimal chr only\0A      -h         : search the numeric key for Fritz!BOX\0A      -d <mask>  : use masking of the key (A1:XX:CF:YY)\0A      -m <maddr> : MAC address to filter usable packets\0A      -n <nbits> : WEP key length :  64/128/152/256/512\0A      -i <index> : WEP key index (1 to 4), default: any\0A      -f <fudge> : bruteforce fudge factor,  default: 2\0A      -k <korek> : disable one attack method  (1 to 17)\0A      -x or -x0  : disable bruteforce for last keybytes\0A      -x1        : last keybyte bruteforcing  (default)\0A      -x2        : enable last  2 keybytes bruteforcing%s      -y         : experimental  single bruteforce mode\0A      -K         : use only old KoreK attacks (pre-PTW)\0A      -s         : show the key in ASCII while cracking\0A      -M <num>   : specify maximum number of IVs to use\0A      -D         : WEP decloak, skips broken keystreams\0A      -P <num>   : PTW debug:  1: disable Klein, 2: PTW\0A      -1         : run only 1 try to crack key with PTW\0A\0A  WEP and WPA-PSK cracking options:\0A\0A      -w <words> : path to wordlist(s) filename(s)\0A\0A      --help     : Displays this usage screen\0A\0A\00", align 16, !track !1
@intr_read = dso_local global i32 0, align 4
@opt = common dso_local global %struct.options zeroinitializer, align 8, !track !2
@mc_pipe = common dso_local global [256 x [2 x i32]] zeroinitializer, align 16
@bf_pipe = common dso_local global [256 x [2 x i32]] zeroinitializer, align 16
@tid = common dso_local global [128 x i64] zeroinitializer, align 16, !track !3
@wep = common dso_local global %struct.WEP_data zeroinitializer, align 8, !track !4
@ap_1st = common dso_local global %struct.AP_info* null, align 8, !track !5
@mx_eof = common dso_local global %union.pthread_mutex_t zeroinitializer, align 8
@cv_eof = common dso_local global %union.pthread_cond_t zeroinitializer, align 8
@mx_apl = common dso_local global %union.pthread_mutex_t zeroinitializer, align 8
@mx_ivb = common dso_local global %union.pthread_mutex_t zeroinitializer, align 8
@cm_pipe = common dso_local global [256 x [2 x i32]] zeroinitializer, align 16
@t_stats = common dso_local global %struct.timeval zeroinitializer, align 8
@t_begin = common dso_local global %struct.timeval zeroinitializer, align 8
@progname = common dso_local global i8* null, align 8, !track !6
@nb_tried = common dso_local global i64 0, align 8
@bf_nkeys = common dso_local global [256 x i32] zeroinitializer, align 16, !track !7
@bf_wepkey = common dso_local global [64 x i8] zeroinitializer, align 16, !track !8
@t_kprev = common dso_local global %struct.timeval zeroinitializer, align 8
@nb_kprev = common dso_local global i64 0, align 8
@wpa_data = common dso_local global [128 x %struct.WPA_data] zeroinitializer, align 16, !track !9
@.str = private unnamed_addr constant [7 x i8] c"%-14s \00", align 1
@.str.1 = private unnamed_addr constant [5 x i8] c"%.2X\00", align 1
@.str.2 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.3 = private unnamed_addr constant [26 x i8] c"\0AQuitting aircrack-ng...\0A\00", align 1
@stdout = external dso_local global %struct._IO_FILE*, align 8
@.str.4 = private unnamed_addr constant [6 x i8] c"EXIT\0D\00", align 1
@.str.5 = private unnamed_addr constant [6 x i8] c"\1B[2J\0A\00", align 1
@.str.6 = private unnamed_addr constant [2 x i8] c",\00", align 1
@.str.7 = private unnamed_addr constant [14 x i8] c"malloc failed\00", align 1
@.str.8 = private unnamed_addr constant [30 x i8] c"%02X:%02X:%02X:%02X:%02X:%02X\00", align 1
@.str.9 = private unnamed_addr constant [12 x i8] c"Opening %s\0A\00", align 1
@.str.10 = private unnamed_addr constant [2 x i8] c"-\00", align 1
@.str.11 = private unnamed_addr constant [12 x i8] c"open failed\00", align 1
@.str.12 = private unnamed_addr constant [25 x i8] c"read(file header) failed\00", align 1
@.str.13 = private unnamed_addr constant [5 x i8] c"\BF\CA\84\D4\00", align 1
@.str.14 = private unnamed_addr constant [5 x i8] c"\AEx\D1\FF\00", align 1
@stderr = external dso_local global %struct._IO_FILE*, align 8
@.str.15 = private unnamed_addr constant [51 x i8] c"Unsupported file format (not a pcap or IVs file).\0A\00", align 1
@.str.16 = private unnamed_addr constant [55 x i8] c"This file is not a regular 802.11 (wireless) capture.\0A\00", align 1
@.str.17 = private unnamed_addr constant [37 x i8] c"Can't use decloak wep mode with ivs\0A\00", align 1
@.str.18 = private unnamed_addr constant [58 x i8] c"Error, wrong %s version: %d. Supported up to version %d.\0A\00", align 1
@.str.19 = private unnamed_addr constant [4 x i8] c"ivs\00", align 1
@.str.20 = private unnamed_addr constant [84 x i8] c"Can't do PTW with old IVS files, recapture without --ivs or use airodump-ng >= 1.0\0A\00", align 1
@.str.21 = private unnamed_addr constant [25 x i8] c"fcntl(O_NONBLOCK) failed\00", align 1
@.str.22 = private unnamed_addr constant [53 x i8] c"\0AInvalid packet capture length %d - corrupted file?\0A\00", align 1
@.str.23 = private unnamed_addr constant [7 x i8] c"\FF\FF\FF\FF\FF\FF\00", align 1
@ZERO = internal global [32 x i8] zeroinitializer, align 16, !track !10
@.str.24 = private unnamed_addr constant [21 x i8] c"PTW_newattackstate()\00", align 1
@.str.25 = private unnamed_addr constant [15 x i8] c"realloc failed\00", align 1
@.str.26 = private unnamed_addr constant [7 x i8] c"\01\80\C2\00\00\00\00", align 1
@.str.27 = private unnamed_addr constant [12 x i8] c"read failed\00", align 1
@.str.28 = private unnamed_addr constant [13 x i8] c"write failed\00", align 1
@show_wep_stats.is_cleared = internal global i32 0, align 4
@.str.29 = private unnamed_addr constant [6 x i8] c"\1B[40m\00", align 1
@.str.30 = private unnamed_addr constant [5 x i8] c"\1B[2J\00", align 1
@.str.31 = private unnamed_addr constant [8 x i8] c"\1B[34;1m\00", align 1
@.str.32 = private unnamed_addr constant [12 x i8] c"\1B[2;%dH%s\0A\0A\00", align 1
@.str.33 = private unnamed_addr constant [8 x i8] c"\1B[33;1m\00", align 1
@.str.34 = private unnamed_addr constant [56 x i8] c"\1B[5;%dH[%02d:%02d:%02d] Tested %d keys (got %ld IVs)\1B[K\00", align 1
@.str.35 = private unnamed_addr constant [58 x i8] c"\1B[5;%dH[%02d:%02d:%02d] Tested %lld keys (got %ld IVs)\1B[K\00", align 1
@.str.36 = private unnamed_addr constant [9 x i8] c"\1B[32;22m\00", align 1
@.str.37 = private unnamed_addr constant [32 x i8] c"\1B[7;4HKB    depth   byte(vote)\0A\00", align 1
@.str.38 = private unnamed_addr constant [28 x i8] c"   %2d  \1B[1m%3d\1B[22m/%3d   \00", align 1
@.str.39 = private unnamed_addr constant [19 x i8] c"   %2d  %3d/%3d   \00", align 1
@.str.40 = private unnamed_addr constant [20 x i8] c"\1B[1m%02X\1B[22m(%4d) \00", align 1
@.str.41 = private unnamed_addr constant [11 x i8] c"%02X(%4d) \00", align 1
@.str.42 = private unnamed_addr constant [21 x i8] c"\1B[1m%02X\1B[22m(+inf) \00", align 1
@.str.43 = private unnamed_addr constant [12 x i8] c"%02X(+inf) \00", align 1
@.str.44 = private unnamed_addr constant [5 x i8] c"  %c\00", align 1
@.str.45 = private unnamed_addr constant [4 x i8] c"\1B[J\00", align 1
@.str.150 = private unnamed_addr constant [14 x i8] c"KEY FOUND! [ \00", align 1
@.str.62 = private unnamed_addr constant [8 x i8] c"\1B[31;1m\00", align 1
@.str.151 = private unnamed_addr constant [22 x i8] c"\1B[K\1B[%dCKEY FOUND! [ \00", align 1
@.str.152 = private unnamed_addr constant [6 x i8] c"%02X:\00", align 1
@.str.153 = private unnamed_addr constant [8 x i8] c"%02X ] \00", align 1
@.str.154 = private unnamed_addr constant [9 x i8] c"(ASCII: \00", align 1
@.str.155 = private unnamed_addr constant [3 x i8] c"%c\00", align 1
@.str.156 = private unnamed_addr constant [3 x i8] c" )\00", align 1
@.str.157 = private unnamed_addr constant [29 x i8] c"\0A\09Decrypted correctly: %d%%\0A\00", align 1
@.str.64 = private unnamed_addr constant [2 x i8] c"w\00", align 1
@.str.158 = private unnamed_addr constant [5 x i8] c"%02X\00", align 1
@.str.46 = private unnamed_addr constant [125 x i8] c"Not enough IVs available. You need about 250.000 IVs to crack\0A40-bit WEP, and more than 800.000 IVs to crack a 104-bit key.\0A\00", align 1
@.str.47 = private unnamed_addr constant [34 x i8] c"Read %ld packets, got %ld IVs...\0D\00", align 1
@.str.48 = private unnamed_addr constant [69 x i8] c"On which keybyte do you want to remove votes (Hit Enter when done)? \00", align 1
@.str.49 = private unnamed_addr constant [81 x i8] c"From which keybyte value do you want to remove the votes (Hit Enter to cancel)? \00", align 1
@do_wep_crack1.k = internal global i32 0, align 4
@.str.50 = private unnamed_addr constant [17 x i8] c"write pmk failed\00", align 1
@.str.51 = private unnamed_addr constant [123 x i8] c"Not enough IVs available. This option is only meant to be used\0Aif the standard attack method fails with more than %d IVs.\0A\00", align 1
@mx_wpastats = internal global %union.pthread_mutex_t zeroinitializer, align 8
@.str.52 = private unnamed_addr constant [53 x i8] c"\1B[5;20H[%02d:%02d:%02d] %lld keys tested (%2.2f k/s)\00", align 1
@.str.53 = private unnamed_addr constant [8 x i8] c"\1B[37;1m\00", align 1
@.str.54 = private unnamed_addr constant [31 x i8] c"\1B[8;24HCurrent passphrase: %s\0A\00", align 1
@.str.55 = private unnamed_addr constant [25 x i8] c"\1B[11;7HMaster Key     : \00", align 1
@.str.56 = private unnamed_addr constant [8 x i8] c"\1B[32;1m\00", align 1
@.str.57 = private unnamed_addr constant [7 x i8] c"\0A\1B[23C\00", align 1
@.str.58 = private unnamed_addr constant [6 x i8] c"%02X \00", align 1
@.str.59 = private unnamed_addr constant [25 x i8] c"\1B[14;7HTransient Key  : \00", align 1
@.str.60 = private unnamed_addr constant [25 x i8] c"\1B[19;7HEAPOL HMAC     : \00", align 1
@.str.61 = private unnamed_addr constant [23 x i8] c"Pairwise key expansion\00", align 1
@mx_nb = internal global %union.pthread_mutex_t zeroinitializer, align 8
@.str.63 = private unnamed_addr constant [35 x i8] c"\1B[8;%dH\1B[2KKEY FOUND! [ %s ]\1B[11B\0A\00", align 1
@.str.65 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@stdin = external dso_local global %struct._IO_FILE*, align 8
@.str.66 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@.str.67 = private unnamed_addr constant [25 x i8] c"fopen(dictionary) failed\00", align 1
@.str.68 = private unnamed_addr constant [18 x i8] c"Empty dictionary\0A\00", align 1
@.str.69 = private unnamed_addr constant [9 x i8] c"\1B[37;40m\00", align 1
@.str.70 = private unnamed_addr constant [10 x i8] c"\1B[2;34H%s\00", align 1
@.str.71 = private unnamed_addr constant [2 x i8] c":\00", align 1
@.str.72 = private unnamed_addr constant [3 x i8] c"%x\00", align 1
@.str.73 = private unnamed_addr constant [19 x i8] c"allocation failed!\00", align 1
@.str.74 = private unnamed_addr constant [3 x i8] c"h:\00", align 1
@.str.75 = private unnamed_addr constant [79 x i8] c"\0A%ld IVs is below the minimum required for a dictionary attack (%d IVs min.)!\0A\00", align 1
@.str.76 = private unnamed_addr constant [12 x i8] c"Aircrack-ng\00", align 1
@.str.86 = private unnamed_addr constant [50 x i8] c"r:a:e:b:p:qcthd:l:m:n:i:f:k:x::Xysw:0HKC:M:DP:zV1\00", align 1
@main.long_options = internal global [10 x %struct.option] [%struct.option { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.77, i32 0, i32 0), i32 1, i32* null, i32 98 }, %struct.option { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.78, i32 0, i32 0), i32 1, i32* null, i32 100 }, %struct.option { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.79, i32 0, i32 0), i32 0, i32* null, i32 67 }, %struct.option { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.80, i32 0, i32 0), i32 0, i32* null, i32 72 }, %struct.option { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.81, i32 0, i32 0), i32 0, i32* null, i32 68 }, %struct.option { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.82, i32 0, i32 0), i32 0, i32* null, i32 80 }, %struct.option { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.83, i32 0, i32 0), i32 0, i32* null, i32 86 }, %struct.option { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.84, i32 0, i32 0), i32 0, i32* null, i32 49 }, %struct.option { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.85, i32 0, i32 0), i32 0, i32* null, i32 117 }, %struct.option zeroinitializer], align 16
@.str.87 = private unnamed_addr constant [23 x i8] c"\22%s --help\22 for help.\0A\00", align 1
@.str.88 = private unnamed_addr constant [21 x i8] c"Nb CPU detected: %d \00", align 1
@.str.89 = private unnamed_addr constant [17 x i8] c" (MMX available)\00", align 1
@.str.90 = private unnamed_addr constant [18 x i8] c" (SSE2 available)\00", align 1
@.str.91 = private unnamed_addr constant [47 x i8] c"Visual inspection can only be used with KoreK\0A\00", align 1
@.str.92 = private unnamed_addr constant [27 x i8] c"Use \22%s --help\22 for help.\0A\00", align 1
@optarg = external dso_local global i8*, align 8
@.str.93 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.94 = private unnamed_addr constant [4 x i8] c"wep\00", align 1
@.str.95 = private unnamed_addr constant [4 x i8] c"wpa\00", align 1
@.str.96 = private unnamed_addr constant [41 x i8] c"Invalid attack mode. [1,2] or [wep,wpa]\0A\00", align 1
@.str.97 = private unnamed_addr constant [28 x i8] c"Invalid BSSID (not a MAC).\0A\00", align 1
@.str.98 = private unnamed_addr constant [47 x i8] c"Invalid number of processes (recommended: %d)\0A\00", align 1
@.str.99 = private unnamed_addr constant [20 x i8] c"Invalid debug key.\0A\00", align 1
@.str.100 = private unnamed_addr constant [29 x i8] c"Invalid MAC address filter.\0A\00", align 1
@.str.101 = private unnamed_addr constant [46 x i8] c"Invalid WEP key length. [64,128,152,256,512]\0A\00", align 1
@.str.102 = private unnamed_addr constant [30 x i8] c"Invalid WEP key index. [1-4]\0A\00", align 1
@.str.103 = private unnamed_addr constant [3 x i8] c"%f\00", align 1
@.str.104 = private unnamed_addr constant [29 x i8] c"Invalid fudge factor. [>=1]\0A\00", align 1
@.str.105 = private unnamed_addr constant [39 x i8] c"Invalid KoreK attack strategy. [1-%d]\0A\00", align 1
@.str.106 = private unnamed_addr constant [25 x i8] c"Error allocating memory\0A\00", align 1
@.str.107 = private unnamed_addr constant [33 x i8] c"Invalid number of max. ivs [>1]\0A\00", align 1
@.str.108 = private unnamed_addr constant [36 x i8] c"Invalid number for ptw debug [0-2]\0A\00", align 1
@.str.109 = private unnamed_addr constant [28 x i8] c"Invalid option -x%s. [0-4]\0A\00", align 1
@.str.110 = private unnamed_addr constant [56 x i8] c"Error: Aircrack-ng wasn't compiled with sqlite support\0A\00", align 1
@.str.111 = private unnamed_addr constant [44 x i8] c"Invalid bssids (-C).\0A\22%s --help\22 for help.\0A\00", align 1
@.str.112 = private unnamed_addr constant [50 x i8] c"Merging BSSID disabled, only one BSSID specified\0A\00", align 1
@optind = external dso_local global i32, align 4
@.str.113 = private unnamed_addr constant [58 x i8] c"\0A      -X         : disable  bruteforce   multithreading\0A\00", align 1
@.str.114 = private unnamed_addr constant [29 x i8] c"No file to crack specified.\0A\00", align 1
@.str.115 = private unnamed_addr constant [42 x i8] c"Please specify a dictionary (option -w).\0A\00", align 1
@.str.116 = private unnamed_addr constant [35 x i8] c"Please specify an ESSID or BSSID.\0A\00", align 1
@.str.117 = private unnamed_addr constant [22 x i8] c"pthread_create failed\00", align 1
@.str.118 = private unnamed_addr constant [51 x i8] c"Only using the first %d files, ignoring the rest.\0A\00", align 1
@.str.119 = private unnamed_addr constant [33 x i8] c"Reading packets, please wait...\0D\00", align 1
@.str.120 = private unnamed_addr constant [23 x i8] c"\1B[KRead %ld packets.\0A\0A\00", align 1
@.str.121 = private unnamed_addr constant [29 x i8] c"No networks found, exiting.\0A\00", align 1
@.str.122 = private unnamed_addr constant [37 x i8] c"   #  BSSID%14sESSID%21sEncryption\0A\0A\00", align 1
@.str.123 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.124 = private unnamed_addr constant [44 x i8] c"%4d  %02X:%02X:%02X:%02X:%02X:%02X  %-24s  \00", align 1
@.str.125 = private unnamed_addr constant [7 x i8] c"EAPOL+\00", align 1
@.str.126 = private unnamed_addr constant [20 x i8] c"None (%d.%d.%d.%d)\0A\00", align 1
@.str.127 = private unnamed_addr constant [22 x i8] c"No data - WEP or WPA\0A\00", align 1
@.str.128 = private unnamed_addr constant [15 x i8] c"WEP (%ld IVs)\0A\00", align 1
@.str.129 = private unnamed_addr constant [20 x i8] c"WPA (%d handshake)\0A\00", align 1
@.str.130 = private unnamed_addr constant [9 x i8] c"Unknown\0A\00", align 1
@.str.131 = private unnamed_addr constant [34 x i8] c"Index number of target network ? \00", align 1
@.str.132 = private unnamed_addr constant [6 x i8] c"%127s\00", align 1
@.str.133 = private unnamed_addr constant [35 x i8] c"Choosing first network as target.\0A\00", align 1
@.str.135 = private unnamed_addr constant [6 x i8] c"essid\00", align 1
@.str.77 = private unnamed_addr constant [6 x i8] c"bssid\00", align 1
@.str.134 = private unnamed_addr constant [44 x i8] c"No matching network found - check your %s.\0A\00", align 1
@.str.136 = private unnamed_addr constant [40 x i8] c"Target network doesn't seem encrypted.\0A\00", align 1
@.str.137 = private unnamed_addr constant [42 x i8] c"Got no data packets from target network!\0A\00", align 1
@.str.138 = private unnamed_addr constant [61 x i8] c"Bruteforcing more then 4 bytes will take too long, aborting!\00", align 1
@.str.139 = private unnamed_addr constant [49 x i8] c"Attack will be restarted every %d captured ivs.\0A\00", align 1
@.str.140 = private unnamed_addr constant [35 x i8] c"Starting PTW attack with %ld ivs.\0A\00", align 1
@.str.141 = private unnamed_addr constant [211 x i8] c"   Attack failed. Possible reasons:\0A\0A     * Out of luck: you must capture more IVs. Usually, 104-bit WEP\0A       can be cracked with about 80.000 IVs, sometimes more.\0A\0A     * Try to raise the fudge factor (-f).\0A\00", align 1
@.str.142 = private unnamed_addr constant [31 x i8] c"Failed. Next try with %d IVs.\0A\00", align 1
@.str.143 = private unnamed_addr constant [461 x i8] c"   Attack failed. Possible reasons:\0A\0A     * Out of luck: you must capture more IVs. Usually, 104-bit WEP\0A       can be cracked with about one million IVs, sometimes more.\0A\0A     * If all votes seem equal, or if there are many negative votes,\0A       then the capture file is corrupted, or the key is not static.\0A\0A     * A false positive prevented the key from being found.  Try to\0A       disable each korek attack (-k 1 .. 17), raise the fudge factor\0A       (-f)\00", align 1
@.str.144 = private unnamed_addr constant [50 x i8] c"and try the experimental bruteforce attacks (-y).\00", align 1
@.str.145 = private unnamed_addr constant [56 x i8] c"or try the standard attack mode instead (no -y option).\00", align 1
@.str.146 = private unnamed_addr constant [32 x i8] c"No valid WPA handshakes found.\0A\00", align 1
@.str.147 = private unnamed_addr constant [38 x i8] c"An ESSID is required. Try option -e.\0A\00", align 1
@.str.148 = private unnamed_addr constant [19 x i8] c"KEY FOUND! [ %s ]\0A\00", align 1
@.str.149 = private unnamed_addr constant [32 x i8] c"\0APassphrase not in dictionary \0A\00", align 1
@.str.78 = private unnamed_addr constant [6 x i8] c"debug\00", align 1
@.str.79 = private unnamed_addr constant [8 x i8] c"combine\00", align 1
@.str.80 = private unnamed_addr constant [5 x i8] c"help\00", align 1
@.str.81 = private unnamed_addr constant [12 x i8] c"wep-decloak\00", align 1
@.str.82 = private unnamed_addr constant [10 x i8] c"ptw-debug\00", align 1
@.str.83 = private unnamed_addr constant [18 x i8] c"visual-inspection\00", align 1
@.str.84 = private unnamed_addr constant [8 x i8] c"oneshot\00", align 1
@.str.85 = private unnamed_addr constant [11 x i8] c"cpu-detect\00", align 1
@crc_tbl = dso_local constant [256 x i64] [i64 0, i64 1996959894, i64 3993919788, i64 2567524794, i64 124634137, i64 1886057615, i64 3915621685, i64 2657392035, i64 249268274, i64 2044508324, i64 3772115230, i64 2547177864, i64 162941995, i64 2125561021, i64 3887607047, i64 2428444049, i64 498536548, i64 1789927666, i64 4089016648, i64 2227061214, i64 450548861, i64 1843258603, i64 4107580753, i64 2211677639, i64 325883990, i64 1684777152, i64 4251122042, i64 2321926636, i64 335633487, i64 1661365465, i64 4195302755, i64 2366115317, i64 997073096, i64 1281953886, i64 3579855332, i64 2724688242, i64 1006888145, i64 1258607687, i64 3524101629, i64 2768942443, i64 901097722, i64 1119000684, i64 3686517206, i64 2898065728, i64 853044451, i64 1172266101, i64 3705015759, i64 2882616665, i64 651767980, i64 1373503546, i64 3369554304, i64 3218104598, i64 565507253, i64 1454621731, i64 3485111705, i64 3099436303, i64 671266974, i64 1594198024, i64 3322730930, i64 2970347812, i64 795835527, i64 1483230225, i64 3244367275, i64 3060149565, i64 1994146192, i64 31158534, i64 2563907772, i64 4023717930, i64 1907459465, i64 112637215, i64 2680153253, i64 3904427059, i64 2013776290, i64 251722036, i64 2517215374, i64 3775830040, i64 2137656763, i64 141376813, i64 2439277719, i64 3865271297, i64 1802195444, i64 476864866, i64 2238001368, i64 4066508878, i64 1812370925, i64 453092731, i64 2181625025, i64 4111451223, i64 1706088902, i64 314042704, i64 2344532202, i64 4240017532, i64 1658658271, i64 366619977, i64 2362670323, i64 4224994405, i64 1303535960, i64 984961486, i64 2747007092, i64 3569037538, i64 1256170817, i64 1037604311, i64 2765210733, i64 3554079995, i64 1131014506, i64 879679996, i64 2909243462, i64 3663771856, i64 1141124467, i64 855842277, i64 2852801631, i64 3708648649, i64 1342533948, i64 654459306, i64 3188396048, i64 3373015174, i64 1466479909, i64 544179635, i64 3110523913, i64 3462522015, i64 1591671054, i64 702138776, i64 2966460450, i64 3352799412, i64 1504918807, i64 783551873, i64 3082640443, i64 3233442989, i64 3988292384, i64 2596254646, i64 62317068, i64 1957810842, i64 3939845945, i64 2647816111, i64 81470997, i64 1943803523, i64 3814918930, i64 2489596804, i64 225274430, i64 2053790376, i64 3826175755, i64 2466906013, i64 167816743, i64 2097651377, i64 4027552580, i64 2265490386, i64 503444072, i64 1762050814, i64 4150417245, i64 2154129355, i64 426522225, i64 1852507879, i64 4275313526, i64 2312317920, i64 282753626, i64 1742555852, i64 4189708143, i64 2394877945, i64 397917763, i64 1622183637, i64 3604390888, i64 2714866558, i64 953729732, i64 1340076626, i64 3518719985, i64 2797360999, i64 1068828381, i64 1219638859, i64 3624741850, i64 2936675148, i64 906185462, i64 1090812512, i64 3747672003, i64 2825379669, i64 829329135, i64 1181335161, i64 3412177804, i64 3160834842, i64 628085408, i64 1382605366, i64 3423369109, i64 3138078467, i64 570562233, i64 1426400815, i64 3317316542, i64 2998733608, i64 733239954, i64 1555261956, i64 3268935591, i64 3050360625, i64 752459403, i64 1541320221, i64 2607071920, i64 3965973030, i64 1969922972, i64 40735498, i64 2617837225, i64 3943577151, i64 1913087877, i64 83908371, i64 2512341634, i64 3803740692, i64 2075208622, i64 213261112, i64 2463272603, i64 3855990285, i64 2094854071, i64 198958881, i64 2262029012, i64 4057260610, i64 1759359992, i64 534414190, i64 2176718541, i64 4139329115, i64 1873836001, i64 414664567, i64 2282248934, i64 4279200368, i64 1711684554, i64 285281116, i64 2405801727, i64 4167216745, i64 1634467795, i64 376229701, i64 2685067896, i64 3608007406, i64 1308918612, i64 956543938, i64 2808555105, i64 3495958263, i64 1231636301, i64 1047427035, i64 2932959818, i64 3654703836, i64 1088359270, i64 936918000, i64 2847714899, i64 3736837829, i64 1202900863, i64 817233897, i64 3183342108, i64 3401237130, i64 1404277552, i64 615818150, i64 3134207493, i64 3453421203, i64 1423857449, i64 601450431, i64 3009837614, i64 3294710456, i64 1567103746, i64 711928724, i64 3020668471, i64 3272380065, i64 1510334235, i64 755167117], align 16
@crc_chop_tbl = dso_local constant [256 x [4 x i8]] [[4 x i8] c"&pj\0F", [4 x i8] c"gv\1B\D4", [4 x i8] c"\E5z\F9b", [4 x i8] c"\A4|\88\B9", [4 x i8] c"\A0eL\D4", [4 x i8] c"\E1c=\0F", [4 x i8] c"co\DF\B9", [4 x i8] c"\22i\AEb", [4 x i8] c"k]Wb", [4 x i8] c"*[&\B9", [4 x i8] c"\A8W\C4\0F", [4 x i8] c"\E9Q\B5\D4", [4 x i8] c"\EDHq\B9", [4 x i8] c"\ACN\00b", [4 x i8] c".B\E2\D4", [4 x i8] c"oD\93\0F", [4 x i8] c"\BC*\10\D5", [4 x i8] c"\FD,a\0E", [4 x i8] c"\7F \83\B8", [4 x i8] c">&\F2c", [4 x i8] c":?6\0E", [4 x i8] c"{9G\D5", [4 x i8] c"\F95\A5c", [4 x i8] c"\B83\D4\B8", [4 x i8] c"\F1\07-\B8", [4 x i8] c"\B0\01\5Cc", [4 x i8] c"2\0D\BE\D5", [4 x i8] c"s\0B\CF\0E", [4 x i8] c"w\12\0Bc", [4 x i8] c"6\14z\B8", [4 x i8] c"\B4\18\98\0E", [4 x i8] c"\F5\1E\E9\D5", [4 x i8] c"S\C3\EF`", [4 x i8] c"\12\C5\9E\BB", [4 x i8] c"\90\C9|\0D", [4 x i8] c"\D1\CF\0D\D6", [4 x i8] c"\D5\D6\C9\BB", [4 x i8] c"\94\D0\B8`", [4 x i8] c"\16\DCZ\D6", [4 x i8] c"W\DA+\0D", [4 x i8] c"\1E\EE\D2\0D", [4 x i8] c"_\E8\A3\D6", [4 x i8] c"\DD\E4A`", [4 x i8] c"\9C\E20\BB", [4 x i8] c"\98\FB\F4\D6", [4 x i8] c"\D9\FD\85\0D", [4 x i8] c"[\F1g\BB", [4 x i8] c"\1A\F7\16`", [4 x i8] c"\C9\99\95\BA", [4 x i8] c"\88\9F\E4a", [4 x i8] c"\0A\93\06\D7", [4 x i8] c"K\95w\0C", [4 x i8] c"O\8C\B3a", [4 x i8] c"\0E\8A\C2\BA", [4 x i8] c"\8C\86 \0C", [4 x i8] c"\CD\80Q\D7", [4 x i8] c"\84\B4\A8\D7", [4 x i8] c"\C5\B2\D9\0C", [4 x i8] c"G\BE;\BA", [4 x i8] c"\06\B8Ja", [4 x i8] c"\02\A1\8E\0C", [4 x i8] c"C\A7\FF\D7", [4 x i8] c"\C1\AB\1Da", [4 x i8] c"\80\ADl\BA", [4 x i8] c"\CC\16a\D0", [4 x i8] c"\8D\10\10\0B", [4 x i8] c"\0F\1C\F2\BD", [4 x i8] c"N\1A\83f", [4 x i8] c"J\03G\0B", [4 x i8] c"\0B\056\D0", [4 x i8] c"\89\09\D4f", [4 x i8] c"\C8\0F\A5\BD", [4 x i8] c"\81;\5C\BD", [4 x i8] c"\C0=-f", [4 x i8] c"B1\CF\D0", [4 x i8] c"\037\BE\0B", [4 x i8] c"\07.zf", [4 x i8] c"F(\0B\BD", [4 x i8] c"\C4$\E9\0B", [4 x i8] c"\85\22\98\D0", [4 x i8] c"VL\1B\0A", [4 x i8] c"\17Jj\D1", [4 x i8] c"\95F\88g", [4 x i8] c"\D4@\F9\BC", [4 x i8] c"\D0Y=\D1", [4 x i8] c"\91_L\0A", [4 x i8] c"\13S\AE\BC", [4 x i8] c"RU\DFg", [4 x i8] c"\1Ba&g", [4 x i8] c"ZgW\BC", [4 x i8] c"\D8k\B5\0A", [4 x i8] c"\99m\C4\D1", [4 x i8] c"\9Dt\00\BC", [4 x i8] c"\DCrqg", [4 x i8] c"^~\93\D1", [4 x i8] c"\1Fx\E2\0A", [4 x i8] c"\B9\A5\E4\BF", [4 x i8] c"\F8\A3\95d", [4 x i8] c"z\AFw\D2", [4 x i8] c";\A9\06\09", [4 x i8] c"?\B0\C2d", [4 x i8] c"~\B6\B3\BF", [4 x i8] c"\FC\BAQ\09", [4 x i8] c"\BD\BC \D2", [4 x i8] c"\F4\88\D9\D2", [4 x i8] c"\B5\8E\A8\09", [4 x i8] c"7\82J\BF", [4 x i8] c"v\84;d", [4 x i8] c"r\9D\FF\09", [4 x i8] c"3\9B\8E\D2", [4 x i8] c"\B1\97ld", [4 x i8] c"\F0\91\1D\BF", [4 x i8] c"#\FF\9Ee", [4 x i8] c"b\F9\EF\BE", [4 x i8] c"\E0\F5\0D\08", [4 x i8] c"\A1\F3|\D3", [4 x i8] c"\A5\EA\B8\BE", [4 x i8] c"\E4\EC\C9e", [4 x i8] c"f\E0+\D3", [4 x i8] c"'\E6Z\08", [4 x i8] c"n\D2\A3\08", [4 x i8] c"/\D4\D2\D3", [4 x i8] c"\AD\D80e", [4 x i8] c"\EC\DEA\BE", [4 x i8] c"\E8\C7\85\D3", [4 x i8] c"\A9\C1\F4\08", [4 x i8] c"+\CD\16\BE", [4 x i8] c"j\CBge", [4 x i8] c"\B3\BB\0Dj", [4 x i8] c"\F2\BD|\B1", [4 x i8] c"p\B1\9E\07", [4 x i8] c"1\B7\EF\DC", [4 x i8] c"5\AE+\B1", [4 x i8] c"t\A8Zj", [4 x i8] c"\F6\A4\B8\DC", [4 x i8] c"\B7\A2\C9\07", [4 x i8] c"\FE\960\07", [4 x i8] c"\BF\90A\DC", [4 x i8] c"=\9C\A3j", [4 x i8] c"|\9A\D2\B1", [4 x i8] c"x\83\16\DC", [4 x i8] c"9\85g\07", [4 x i8] c"\BB\89\85\B1", [4 x i8] c"\FA\8F\F4j", [4 x i8] c")\E1w\B0", [4 x i8] c"h\E7\06k", [4 x i8] c"\EA\EB\E4\DD", [4 x i8] c"\AB\ED\95\06", [4 x i8] c"\AF\F4Qk", [4 x i8] c"\EE\F2 \B0", [4 x i8] c"l\FE\C2\06", [4 x i8] c"-\F8\B3\DD", [4 x i8] c"d\CCJ\DD", [4 x i8] c"%\CA;\06", [4 x i8] c"\A7\C6\D9\B0", [4 x i8] c"\E6\C0\A8k", [4 x i8] c"\E2\D9l\06", [4 x i8] c"\A3\DF\1D\DD", [4 x i8] c"!\D3\FFk", [4 x i8] c"`\D5\8E\B0", [4 x i8] c"\C6\08\88\05", [4 x i8] c"\87\0E\F9\DE", [4 x i8] c"\05\02\1Bh", [4 x i8] c"D\04j\B3", [4 x i8] c"@\1D\AE\DE", [4 x i8] c"\01\1B\DF\05", [4 x i8] c"\83\17=\B3", [4 x i8] c"\C2\11Lh", [4 x i8] c"\8B%\B5h", [4 x i8] c"\CA#\C4\B3", [4 x i8] c"H/&\05", [4 x i8] c"\09)W\DE", [4 x i8] c"\0D0\93\B3", [4 x i8] c"L6\E2h", [4 x i8] c"\CE:\00\DE", [4 x i8] c"\8F<q\05", [4 x i8] c"\5CR\F2\DF", [4 x i8] c"\1DT\83\04", [4 x i8] c"\9FXa\B2", [4 x i8] c"\DE^\10i", [4 x i8] c"\DAG\D4\04", [4 x i8] c"\9BA\A5\DF", [4 x i8] c"\19MGi", [4 x i8] c"XK6\B2", [4 x i8] c"\11\7F\CF\B2", [4 x i8] c"Py\BEi", [4 x i8] c"\D2u\5C\DF", [4 x i8] c"\93s-\04", [4 x i8] c"\97j\E9i", [4 x i8] c"\D6l\98\B2", [4 x i8] c"T`z\04", [4 x i8] c"\15f\0B\DF", [4 x i8] c"Y\DD\06\B5", [4 x i8] c"\18\DBwn", [4 x i8] c"\9A\D7\95\D8", [4 x i8] c"\DB\D1\E4\03", [4 x i8] c"\DF\C8 n", [4 x i8] c"\9E\CEQ\B5", [4 x i8] c"\1C\C2\B3\03", [4 x i8] c"]\C4\C2\D8", [4 x i8] c"\14\F0;\D8", [4 x i8] c"U\F6J\03", [4 x i8] c"\D7\FA\A8\B5", [4 x i8] c"\96\FC\D9n", [4 x i8] c"\92\E5\1D\03", [4 x i8] c"\D3\E3l\D8", [4 x i8] c"Q\EF\8En", [4 x i8] c"\10\E9\FF\B5", [4 x i8] c"\C3\87|o", [4 x i8] c"\82\81\0D\B4", [4 x i8] c"\00\8D\EF\02", [4 x i8] c"A\8B\9E\D9", [4 x i8] c"E\92Z\B4", [4 x i8] c"\04\94+o", [4 x i8] c"\86\98\C9\D9", [4 x i8] c"\C7\9E\B8\02", [4 x i8] c"\8E\AAA\02", [4 x i8] c"\CF\AC0\D9", [4 x i8] c"M\A0\D2o", [4 x i8] c"\0C\A6\A3\B4", [4 x i8] c"\08\BFg\D9", [4 x i8] c"I\B9\16\02", [4 x i8] c"\CB\B5\F4\B4", [4 x i8] c"\8A\B3\85o", [4 x i8] c",n\83\DA", [4 x i8] c"mh\F2\01", [4 x i8] c"\EFd\10\B7", [4 x i8] c"\AEbal", [4 x i8] c"\AA{\A5\01", [4 x i8] c"\EB}\D4\DA", [4 x i8] c"iq6l", [4 x i8] c"(wG\B7", [4 x i8] c"aC\BE\B7", [4 x i8] c" E\CFl", [4 x i8] c"\A2I-\DA", [4 x i8] c"\E3O\5C\01", [4 x i8] c"\E7V\98l", [4 x i8] c"\A6P\E9\B7", [4 x i8] c"$\5C\0B\01", [4 x i8] c"eZz\DA", [4 x i8] c"\B64\F9\00", [4 x i8] c"\F72\88\DB", [4 x i8] c"u>jm", [4 x i8] c"48\1B\B6", [4 x i8] c"0!\DF\DB", [4 x i8] c"q'\AE\00", [4 x i8] c"\F3+L\B6", [4 x i8] c"\B2-=m", [4 x i8] c"\FB\19\C4m", [4 x i8] c"\BA\1F\B5\B6", [4 x i8] c"8\13W\00", [4 x i8] c"y\15&\DB", [4 x i8] c"}\0C\E2\B6", [4 x i8] c"<\0A\93m", [4 x i8] c"\BE\06q\DB", [4 x i8] c"\FF\00\00\00"], align 16
@TkipSbox = dso_local constant [2 x [256 x i16]] [[256 x i16] [i16 -14683, i16 -1916, i16 -4455, i16 -2419, i16 -243, i16 -10563, i16 -8527, i16 -28332, i16 24656, i16 515, i16 -12631, i16 22141, i16 -6375, i16 -19102, i16 19942, i16 -4966, i16 -28859, i16 8093, i16 -30400, i16 -1401, i16 -4331, i16 -19733, i16 -28983, i16 -1269, i16 16876, i16 -19609, i16 24573, i16 17898, i16 9151, i16 21495, i16 -7018, i16 -25765, i16 30146, i16 -7908, i16 15790, i16 19562, i16 27738, i16 32321, i16 -2814, i16 -31921, i16 26716, i16 20980, i16 -11980, i16 -1784, i16 -7533, i16 -21645, i16 25171, i16 10815, i16 2060, i16 -27310, i16 18021, i16 -25250, i16 12328, i16 14241, i16 2575, i16 12213, i16 3593, i16 9270, i16 7067, i16 -8387, i16 -13018, i16 20073, i16 32717, i16 -5473, i16 4635, i16 7582, i16 22644, i16 13358, i16 13869, i16 -9038, i16 -19218, i16 23547, i16 -23306, i16 30285, i16 -18591, i16 32206, i16 21115, i16 -8898, i16 24177, i16 5015, i16 -22795, i16 -18072, i16 0, i16 -16084, i16 16480, i16 -7393, i16 31176, i16 -18707, i16 -11074, i16 -29370, i16 26585, i16 29259, i16 -27426, i16 -26412, i16 -20248, i16 -31414, i16 -17557, i16 -15062, i16 20453, i16 -4842, i16 -31035, i16 -25897, i16 26197, i16 4500, i16 -30001, i16 -5872, i16 1030, i16 -383, i16 -24336, i16 30788, i16 9658, i16 19427, i16 -23821, i16 24062, i16 -32576, i16 1418, i16 16301, i16 8636, i16 28744, i16 -3836, i16 25567, i16 30657, i16 -20619, i16 16995, i16 8240, i16 -6886, i16 -754, i16 -16531, i16 -32436, i16 6164, i16 9781, i16 -15569, i16 -16671, i16 13730, i16 -30516, i16 11833, i16 -27817, i16 22002, i16 -894, i16 31303, i16 -14164, i16 -17689, i16 12843, i16 -6507, i16 -16224, i16 6552, i16 -24879, i16 -23681, i16 17510, i16 21630, i16 15275, i16 2947, i16 -29494, i16 -14551, i16 27603, i16 10300, i16 -22663, i16 -17182, i16 5661, i16 -21130, i16 -9413, i16 25686, i16 29774, i16 5150, i16 -27941, i16 3082, i16 18540, i16 -18204, i16 -24739, i16 -17042, i16 17391, i16 -15194, i16 14760, i16 12708, i16 -11465, i16 -3445, i16 -10958, i16 -29885, i16 28249, i16 -9545, i16 396, i16 -20124, i16 -25390, i16 18912, i16 -10060, i16 -21254, i16 -3321, i16 -12507, i16 -13649, i16 -2930, i16 18409, i16 4120, i16 28629, i16 -3960, i16 19055, i16 23666, i16 14372, i16 22513, i16 29639, i16 -26799, i16 -13533, i16 -24196, i16 -5988, i16 15905, i16 -26915, i16 25052, i16 3462, i16 3973, i16 -8048, i16 31810, i16 29124, i16 -13142, i16 -28456, i16 1541, i16 -2303, i16 7186, i16 -15709, i16 27231, i16 -20743, i16 27088, i16 6033, i16 -26280, i16 14887, i16 10169, i16 -9928, i16 -5357, i16 11187, i16 8755, i16 -11589, i16 -22160, i16 1929, i16 13223, i16 11702, i16 15394, i16 5522, i16 -14048, i16 -30903, i16 -21761, i16 20600, i16 -23174, i16 911, i16 23032, i16 2432, i16 6679, i16 26074, i16 -10447, i16 -31546, i16 -12104, i16 -32061, i16 10672, i16 23159, i16 7697, i16 31691, i16 -22276, i16 28118, i16 11322], [256 x i16] [i16 -23098, i16 -31496, i16 -26130, i16 -29194, i16 3583, i16 -16938, i16 -20002, i16 21649, i16 20576, i16 770, i16 -22066, i16 32086, i16 6631, i16 25269, i16 -6579, i16 -25876, i16 17807, i16 -25313, i16 16521, i16 -30726, i16 5615, i16 -5198, i16 -13938, i16 3067, i16 -5055, i16 26547, i16 -673, i16 -5563, i16 -16605, i16 -2221, i16 -26908, i16 23451, i16 -15755, i16 7393, i16 -20931, i16 27212, i16 23148, i16 16766, i16 757, i16 20355, i16 23656, i16 -2991, i16 13521, i16 2297, i16 -27678, i16 29611, i16 21346, i16 16170, i16 3080, i16 21141, i16 25926, i16 24221, i16 10288, i16 -24265, i16 3850, i16 -19153, i16 2318, i16 13860, i16 -25829, i16 15839, i16 9933, i16 26958, i16 -12929, i16 -24598, i16 6930, i16 -25059, i16 29784, i16 11828, i16 11574, i16 -19748, i16 -4428, i16 -1189, i16 -2396, i16 19830, i16 25015, i16 -12675, i16 31570, i16 16093, i16 29022, i16 -26861, i16 -2650, i16 26809, i16 0, i16 11457, i16 24640, i16 8163, i16 -14215, i16 -4682, i16 -16684, i16 18061, i16 -9881, i16 19314, i16 -8556, i16 -11112, i16 -5968, i16 19077, i16 27579, i16 10949, i16 -6833, i16 5869, i16 -14970, i16 -10342, i16 21862, i16 -27631, i16 -12406, i16 4329, i16 1540, i16 -32258, i16 -3936, i16 17528, i16 -17883, i16 -7349, i16 -3166, i16 -419, i16 -16256, i16 -30203, i16 -21185, i16 -17375, i16 18544, i16 1265, i16 -8349, i16 -16009, i16 30127, i16 25410, i16 12320, i16 6885, i16 3837, i16 28095, i16 19585, i16 5144, i16 13606, i16 12227, i16 -7746, i16 -24011, i16 -13176, i16 14638, i16 22419, i16 -3499, i16 -32004, i16 18298, i16 -21304, i16 -6214, i16 11058, i16 -27162, i16 -24384, i16 -26599, i16 -11874, i16 32675, i16 26180, i16 32340, i16 -21701, i16 -31989, i16 -13684, i16 10695, i16 -11413, i16 15400, i16 31143, i16 -7492, i16 7446, i16 30381, i16 15323, i16 22116, i16 20084, i16 7700, i16 -9326, i16 2572, i16 27720, i16 -6984, i16 23967, i16 28349, i16 -4285, i16 -22844, i16 -22471, i16 -23503, i16 14291, i16 -29710, i16 13013, i16 17291, i16 22894, i16 -18470, i16 -29695, i16 25777, i16 -11620, i16 -8119, i16 -19240, i16 -1364, i16 2035, i16 9679, i16 -20534, i16 -28940, i16 -5817, i16 6160, i16 -10897, i16 -30480, i16 28490, i16 29276, i16 9272, i16 -3753, i16 -14477, i16 20887, i16 9163, i16 31905, i16 -25368, i16 8510, i16 -8810, i16 -9119, i16 -31219, i16 -31473, i16 -28448, i16 17020, i16 -15247, i16 -21812, i16 -10096, i16 1286, i16 503, i16 4636, i16 -23614, i16 24426, i16 -1618, i16 -12183, i16 -28393, i16 22681, i16 10042, i16 -18137, i16 14553, i16 5099, i16 -19669, i16 13090, i16 -17454, i16 28841, i16 -30457, i16 -22733, i16 -18899, i16 8764, i16 -28139, i16 8393, i16 18823, i16 -86, i16 30800, i16 31397, i16 -28925, i16 -1959, i16 -32759, i16 5914, i16 -9627, i16 12759, i16 -14716, i16 -18224, i16 -15486, i16 -20439, i16 30554, i16 4382, i16 -13445, i16 -856, i16 -10643, i16 14892]], align 16
@.str.159 = private unnamed_addr constant [23 x i8] c"Pairwise key expansion\00", align 1
@.str.1.160 = private unnamed_addr constant [3 x i8] c"33\00", align 1
@.str.2.161 = private unnamed_addr constant [7 x i8] c"\FF\FF\FF\FF\FF\FF\00", align 1
@.str.3.162 = private unnamed_addr constant [7 x i8] c"\01\80\C2\00\00\00\00", align 1
@.str.4.163 = private unnamed_addr constant [7 x i8] c"\01\00\0C\CC\CC\CC\00", align 1
@.str.5.166 = private unnamed_addr constant [9 x i8] c"\AA\AA\03\00\00\00\08\06\00", align 1
@.str.6.167 = private unnamed_addr constant [7 x i8] c"\00\01\08\00\06\04\00", align 1
@.str.7.168 = private unnamed_addr constant [3 x i8] c"\00\01\00", align 1
@.str.8.169 = private unnamed_addr constant [3 x i8] c"\00\02\00", align 1
@.str.9.170 = private unnamed_addr constant [9 x i8] c"BB\03\00\00\00\00\00\00", align 1
@.str.10.171 = private unnamed_addr constant [8 x i8] c"\AA\AA\03\00\00\0C \00", align 1
@.str.11.172 = private unnamed_addr constant [9 x i8] c"\AA\AA\03\00\00\00\08\00\00", align 1
@.str.12.173 = private unnamed_addr constant [3 x i8] c"E\00\00", align 1
@.str.13.174 = private unnamed_addr constant [3 x i8] zeroinitializer, align 1
@.str.14.175 = private unnamed_addr constant [3 x i8] c"@\00\00", align 1
@.str.15.176 = private unnamed_addr constant [7 x i8] c"weight\00", align 1
@.str.16.177 = private unnamed_addr constant [9 x i8] c"crypto.c\00", align 1
@__PRETTY_FUNCTION__.known_clear = private unnamed_addr constant [60 x i8] c"int known_clear(void *, int *, int *, unsigned char *, int)\00", align 1
@.str.17.178 = private unnamed_addr constant [9 x i8] zeroinitializer, align 1
@.str.18.179 = private unnamed_addr constant [8 x i8] c"Blub 2:\00", align 1
@.str.19.180 = private unnamed_addr constant [6 x i8] c"%02X \00", align 1
@.str.20.181 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.21.182 = private unnamed_addr constant [8 x i8] c"Blub 1:\00", align 1
@.str.22.183 = private unnamed_addr constant [8 x i8] c"Blub 3:\00", align 1
@.str.23.184 = private unnamed_addr constant [2 x i8] c"Z\00", align 1
@ZERO.185 = internal global [32 x i8] zeroinitializer, align 16
@.str.186 = private unnamed_addr constant [14 x i8] c"/proc/meminfo\00", align 1
@.str.1.187 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@.str.2.188 = private unnamed_addr constant [12 x i8] c"fopen fails\00", align 1
@.str.3.189 = private unnamed_addr constant [6 x i8] c"%s %d\00", align 1
@.str.4.190 = private unnamed_addr constant [9 x i8] c"MemTotal\00", align 1
@.str.5.193 = private unnamed_addr constant [9 x i8] c"%s %d.%d\00", align 1
@.str.6.194 = private unnamed_addr constant [4 x i8] c".%d\00", align 1
@.str.7.195 = private unnamed_addr constant [6 x i8] c" rc%d\00", align 1
@.str.8.196 = private unnamed_addr constant [8 x i8] c" beta%d\00", align 1
@.str.9.197 = private unnamed_addr constant [5 x i8] c" r%d\00", align 1
@.str.10.200 = private unnamed_addr constant [14 x i8] c"/proc/cpuinfo\00", align 1
@.str.11.201 = private unnamed_addr constant [10 x i8] c"processor\00", align 1
@.str.12.202 = private unnamed_addr constant [30 x i8] c"%02X:%02X:%02X:%02X:%02X:%02X\00", align 1
@hexCharToInt.table_created = internal global i32 0, align 4
@hexCharToInt.table = internal global [256 x i32] zeroinitializer, align 16
@.str.13.207 = private unnamed_addr constant [3 x i8] c"%x\00", align 1
@tried = common dso_local global i32 0, align 4
@max_tries = common dso_local global i32 0, align 4
@depth = common dso_local global [29 x i32] zeroinitializer, align 16
@keytable = common dso_local global [29 x [256 x %struct.PTW_tableentry]] zeroinitializer, align 16, !track !11
@.str.222 = private unnamed_addr constant [27 x i8] c"could not allocate memory\0A\00", align 1
@eval = internal constant [13 x double] [double 0x3F75E381C9B66998, double 0x3F75C8326DCE6C47, double 0x3F75C39070455B06, double 0x3F75A8FF7DF66AE8, double 0x3F758B7C75B3FAC1, double 0x3F75685AB224FECA, double 0x3F75437FCDD71938, double 0x3F7515C4F01E415C, double 0x3F74E856F2B97ECC, double 0x3F74B4640EBF1C9C, double 0x3F748026EDE8B20E, double 0x3F7447705D26E843, double 0x3F7410493F7B69E4], align 16
@.str.1.223 = private unnamed_addr constant [36 x i8] c"hit with strongbyte for keybyte %d\0A\00", align 1
@rc4initial = internal constant [256 x i8] c"\00\01\02\03\04\05\06\07\08\09\0A\0B\0C\0D\0E\0F\10\11\12\13\14\15\16\17\18\19\1A\1B\1C\1D\1E\1F !\22#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\5C]^_`abcdefghijklmnopqrstuvwxyz{|}~\7F\80\81\82\83\84\85\86\87\88\89\8A\8B\8C\8D\8E\8F\90\91\92\93\94\95\96\97\98\99\9A\9B\9C\9D\9E\9F\A0\A1\A2\A3\A4\A5\A6\A7\A8\A9\AA\AB\AC\AD\AE\AF\B0\B1\B2\B3\B4\B5\B6\B7\B8\B9\BA\BB\BC\BD\BE\BF\C0\C1\C2\C3\C4\C5\C6\C7\C8\C9\CA\CB\CC\CD\CE\CF\D0\D1\D2\D3\D4\D5\D6\D7\D8\D9\DA\DB\DC\DD\DE\DF\E0\E1\E2\E3\E4\E5\E6\E7\E8\E9\EA\EB\EC\ED\EE\EF\F0\F1\F2\F3\F4\F5\F6\F7\F8\F9\FA\FB\FC\FD\FE\FF", align 16
@0 = private constant [11 x i8] c"aircrack-ng"
@1 = private constant [2 x i8] c"-w"
@2 = private constant [12 x i8] c"password.lst"
@3 = private constant [7 x i8] c"wpa.cap"
@__argv_new__ = global i8** null, !track !12
@4 = constant [12 x i8] c"Aircrack-ng\00"
@5 = constant [13 x i8] c"password.lst\00"
@6 = constant [13 x i8] c"password.lst\00"
@7 = constant [3 x i8] c"h:\00"
@8 = constant [2 x i8] c"-\00"
@9 = constant [2 x i8] c"-\00"
@10 = constant [2 x i8] c"-\00"
@11 = constant [2 x i8] c"-\00"
@12 = constant [2 x i8] c"-\00"
@13 = constant [2 x i8] c"-\00"
@14 = constant [2 x i8] c"-\00"
@15 = constant [2 x i8] c"-\00"
@16 = constant [2 x i8] c"-\00"
@17 = constant [2 x i8] c"-\00"
@18 = constant [2 x i8] c"-\00"
@19 = constant [2 x i8] c"-\00"
@20 = constant [2 x i8] c"-\00"
@21 = constant [2 x i8] c"-\00"
@22 = constant [2 x i8] c"-\00"
@23 = constant [2 x i8] c"-\00"
@24 = constant [2 x i8] c"-\00"
@25 = constant [2 x i8] c"-\00"
@26 = constant [2 x i8] c"-\00"
@27 = constant [2 x i8] c"-\00"
@28 = constant [2 x i8] c"-\00"

; Function Attrs: noinline nounwind uwtable
define dso_local void @show_result(i8*, i8*) #0 {
  %3 = getelementptr [7 x i8], [7 x i8]* @.str, i32 0, i32 0
  %4 = call i32 (i8*, ...) @printf(i8* %3, i8* %0)
  br label %5

; <label>:5:                                      ; preds = %2, %5
  %indvars.iv = phi i64 [ 0, %2 ], [ %indvars.iv.next, %5 ]
  %scevgep = getelementptr i8, i8* %1, i64 %indvars.iv
  %6 = load i8, i8* %scevgep, align 1
  %7 = zext i8 %6 to i32
  %8 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0), i32 %7)
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp ne i64 %indvars.iv.next, 32
  br i1 %exitcond, label %5, label %9

; <label>:9:                                      ; preds = %5
  %10 = getelementptr [2 x i8], [2 x i8]* @.str.2, i32 0, i32 0
  %11 = call i32 (i8*, ...) @printf(i8* %10)
  ret void
}

declare dso_local i32 @printf(i8*, ...) #1

; Function Attrs: noinline nounwind uwtable
define dso_local void @calc_4pmk(i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*) #0 {
  %10 = alloca [36 x i8], align 16, !track !15
  %11 = alloca [128 x i8], align 16, !track !16
  %12 = alloca [128 x i8], align 16, !track !17
  %13 = alloca [128 x i8], align 16, !track !18
  %14 = alloca [128 x i8], align 16, !track !19
  %15 = alloca [512 x i8], align 16, !track !20
  %16 = alloca [256 x i8], align 16, !track !21
  %17 = alloca [80 x i8], align 16, !track !22
  %18 = alloca [256 x i8], align 16, !track !23
  %19 = alloca [80 x i8], align 16, !track !24
  %20 = alloca [256 x i8], align 16, !track !25
  %21 = alloca [80 x i8], align 16, !track !26
  %22 = alloca [1280 x i8], align 16, !track !27
  %23 = getelementptr inbounds [36 x i8], [36 x i8]* %10, i32 0, i32 0
  %24 = call i8* @strncpy(i8* %23, i8* %4, i64 35) #9, !track !28
  %25 = getelementptr inbounds [128 x i8], [128 x i8]* %11, i32 0, i32 0
  %26 = call i8* @strncpy(i8* %25, i8* %0, i64 127) #9, !track !29
  %27 = getelementptr inbounds [128 x i8], [128 x i8]* %12, i32 0, i32 0
  %28 = call i8* @strncpy(i8* %27, i8* %1, i64 127) #9, !track !30
  %29 = getelementptr inbounds [128 x i8], [128 x i8]* %13, i32 0, i32 0
  %30 = call i8* @strncpy(i8* %29, i8* %2, i64 127) #9, !track !31
  %31 = getelementptr inbounds [128 x i8], [128 x i8]* %14, i32 0, i32 0
  %32 = call i8* @strncpy(i8* %31, i8* %3, i64 127) #9, !track !32
  %33 = getelementptr inbounds [36 x i8], [36 x i8]* %10, i32 0, i32 0
  %34 = call i64 @strlen(i8* %33) #10
  %35 = getelementptr inbounds [256 x i8], [256 x i8]* %16, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* align 16 %35, i8 0, i64 256, i1 false)
  %36 = getelementptr inbounds [256 x i8], [256 x i8]* %18, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* align 16 %36, i8 0, i64 256, i1 false)
  %37 = getelementptr inbounds [256 x i8], [256 x i8]* %16, i32 0, i32 0
  %38 = getelementptr inbounds [128 x i8], [128 x i8]* %11, i32 0, i32 0
  %39 = getelementptr inbounds [128 x i8], [128 x i8]* %11, i32 0, i32 0
  %40 = call i64 @strlen(i8* %39) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %37, i8* align 16 %38, i64 %40, i1 false), !track !33
  %41 = getelementptr inbounds [256 x i8], [256 x i8]* %18, i32 0, i32 0
  %42 = getelementptr inbounds [128 x i8], [128 x i8]* %11, i32 0, i32 0
  %43 = getelementptr inbounds [128 x i8], [128 x i8]* %11, i32 0, i32 0
  %44 = call i64 @strlen(i8* %43) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %41, i8* align 16 %42, i64 %44, i1 false), !track !34
  %45 = getelementptr inbounds [256 x i8], [256 x i8]* %16, i32 0, i32 0
  %46 = getelementptr inbounds i8, i8* %45, i64 64
  %47 = getelementptr inbounds [128 x i8], [128 x i8]* %12, i32 0, i32 0
  %48 = getelementptr inbounds [128 x i8], [128 x i8]* %12, i32 0, i32 0
  %49 = call i64 @strlen(i8* %48) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %46, i8* align 16 %47, i64 %49, i1 false), !track !35
  %50 = getelementptr inbounds [256 x i8], [256 x i8]* %18, i32 0, i32 0
  %51 = getelementptr inbounds i8, i8* %50, i64 64
  %52 = getelementptr inbounds [128 x i8], [128 x i8]* %12, i32 0, i32 0
  %53 = getelementptr inbounds [128 x i8], [128 x i8]* %12, i32 0, i32 0
  %54 = call i64 @strlen(i8* %53) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %51, i8* align 16 %52, i64 %54, i1 false), !track !36
  %55 = getelementptr inbounds [256 x i8], [256 x i8]* %16, i32 0, i32 0
  %56 = getelementptr inbounds i8, i8* %55, i64 128
  %57 = getelementptr inbounds [128 x i8], [128 x i8]* %13, i32 0, i32 0
  %58 = getelementptr inbounds [128 x i8], [128 x i8]* %13, i32 0, i32 0
  %59 = call i64 @strlen(i8* %58) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %56, i8* align 16 %57, i64 %59, i1 false), !track !37
  %60 = getelementptr inbounds [256 x i8], [256 x i8]* %18, i32 0, i32 0
  %61 = getelementptr inbounds i8, i8* %60, i64 128
  %62 = getelementptr inbounds [128 x i8], [128 x i8]* %13, i32 0, i32 0
  %63 = getelementptr inbounds [128 x i8], [128 x i8]* %13, i32 0, i32 0
  %64 = call i64 @strlen(i8* %63) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %61, i8* align 16 %62, i64 %64, i1 false), !track !38
  %65 = getelementptr inbounds [256 x i8], [256 x i8]* %16, i32 0, i32 0
  %66 = getelementptr inbounds i8, i8* %65, i64 192
  %67 = getelementptr inbounds [128 x i8], [128 x i8]* %14, i32 0, i32 0
  %68 = getelementptr inbounds [128 x i8], [128 x i8]* %14, i32 0, i32 0
  %69 = call i64 @strlen(i8* %68) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %66, i8* align 16 %67, i64 %69, i1 false), !track !39
  %70 = getelementptr inbounds [256 x i8], [256 x i8]* %18, i32 0, i32 0
  %71 = getelementptr inbounds i8, i8* %70, i64 192
  %72 = getelementptr inbounds [128 x i8], [128 x i8]* %14, i32 0, i32 0
  %73 = getelementptr inbounds [128 x i8], [128 x i8]* %14, i32 0, i32 0
  %74 = call i64 @strlen(i8* %73) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %71, i8* align 16 %72, i64 %74, i1 false), !track !40
  %scevgep16 = getelementptr [256 x i8], [256 x i8]* %16, i64 0, i64 192
  br label %75

; <label>:75:                                     ; preds = %9, %75
  %lsr.iv17 = phi i64 [ 0, %9 ], [ %lsr.iv.next18, %75 ]
  %scevgep19 = getelementptr i8, i8* %scevgep16, i64 %lsr.iv17
  %scevgep1920 = bitcast i8* %scevgep19 to i32*
  %scevgep21 = getelementptr i32, i32* %scevgep1920, i64 -16
  %scevgep22 = getelementptr i32, i32* %scevgep1920, i64 -32
  %scevgep23 = getelementptr i32, i32* %scevgep1920, i64 -48
  %76 = shl i64 %lsr.iv17, 2
  %scevgep24 = getelementptr [256 x i8], [256 x i8]* %20, i64 0, i64 %76
  %scevgep2425 = bitcast i8* %scevgep24 to i32*
  call void @unroll_loop(i32 4)
  %77 = load i32, i32* %scevgep23, align 4
  %78 = xor i32 %77, 909522486
  store i32 %78, i32* %scevgep2425, align 4
  %79 = load i32, i32* %scevgep22, align 4
  %80 = xor i32 %79, 909522486
  %scevgep27 = getelementptr i32, i32* %scevgep2425, i64 1
  store i32 %80, i32* %scevgep27, align 4
  %81 = load i32, i32* %scevgep21, align 4
  %82 = xor i32 %81, 909522486
  %scevgep28 = getelementptr i32, i32* %scevgep2425, i64 2
  store i32 %82, i32* %scevgep28, align 4
  %83 = load i32, i32* %scevgep1920, align 4
  %84 = xor i32 %83, 909522486
  %scevgep29 = getelementptr i32, i32* %scevgep2425, i64 3
  store i32 %84, i32* %scevgep29, align 4
  %lsr.iv.next18 = add nuw nsw i64 %lsr.iv17, 4
  %tmp26 = trunc i64 %lsr.iv.next18 to i32
  %exitcond27 = icmp ne i32 %tmp26, 64
  br i1 %exitcond27, label %75, label %85

; <label>:85:                                     ; preds = %75
  %86 = getelementptr inbounds [512 x i8], [512 x i8]* %15, i32 0, i32 0
  %87 = getelementptr inbounds [512 x i8], [512 x i8]* %15, i32 0, i32 0
  %88 = getelementptr inbounds [80 x i8], [80 x i8]* %17, i32 0, i32 0
  %89 = call i32 @shasse2_init(i8* %88)
  %90 = getelementptr inbounds [80 x i8], [80 x i8]* %17, i32 0, i32 0
  %91 = getelementptr inbounds [256 x i8], [256 x i8]* %20, i32 0, i32 0
  %92 = getelementptr inbounds [1280 x i8], [1280 x i8]* %22, i32 0, i32 0
  %93 = call i32 @shasse2_data(i8* %90, i8* %91, i8* %92)
  %scevgep = getelementptr [256 x i8], [256 x i8]* %18, i64 0, i64 192
  br label %94

; <label>:94:                                     ; preds = %85, %94
  %lsr.iv3 = phi i64 [ 0, %85 ], [ %lsr.iv.next4, %94 ]
  %scevgep5 = getelementptr i8, i8* %scevgep, i64 %lsr.iv3
  %scevgep56 = bitcast i8* %scevgep5 to i32*
  %scevgep7 = getelementptr i32, i32* %scevgep56, i64 -16
  %scevgep8 = getelementptr i32, i32* %scevgep56, i64 -32
  %scevgep9 = getelementptr i32, i32* %scevgep56, i64 -48
  %95 = shl i64 %lsr.iv3, 2
  %scevgep10 = getelementptr [256 x i8], [256 x i8]* %20, i64 0, i64 %95
  %scevgep1011 = bitcast i8* %scevgep10 to i32*
  call void @unroll_loop(i32 5)
  %96 = load i32, i32* %scevgep9, align 4
  %97 = xor i32 %96, 1549556828
  store i32 %97, i32* %scevgep1011, align 4
  %98 = load i32, i32* %scevgep8, align 4
  %99 = xor i32 %98, 1549556828
  %scevgep12 = getelementptr i32, i32* %scevgep1011, i64 1
  store i32 %99, i32* %scevgep12, align 4
  %100 = load i32, i32* %scevgep7, align 4
  %101 = xor i32 %100, 1549556828
  %scevgep13 = getelementptr i32, i32* %scevgep1011, i64 2
  store i32 %101, i32* %scevgep13, align 4
  %102 = load i32, i32* %scevgep56, align 4
  %103 = xor i32 %102, 1549556828
  %scevgep14 = getelementptr i32, i32* %scevgep1011, i64 3
  store i32 %103, i32* %scevgep14, align 4
  %lsr.iv.next4 = add nuw nsw i64 %lsr.iv3, 4
  %tmp = trunc i64 %lsr.iv.next4 to i32
  %exitcond20 = icmp ne i32 %tmp, 64
  br i1 %exitcond20, label %94, label %104

; <label>:104:                                    ; preds = %94
  %105 = getelementptr inbounds [512 x i8], [512 x i8]* %15, i32 0, i32 0
  %106 = getelementptr inbounds i8, i8* %105, i64 128
  %107 = add i64 %34, 4
  %108 = getelementptr inbounds i8, i8* %87, i64 384
  %109 = getelementptr inbounds [512 x i8], [512 x i8]* %15, i32 0, i32 0
  %110 = getelementptr inbounds i8, i8* %86, i64 256
  %111 = trunc i64 %107 to i32
  %112 = getelementptr inbounds [80 x i8], [80 x i8]* %19, i32 0, i32 0
  %113 = call i32 @shasse2_init(i8* %112)
  %114 = getelementptr inbounds [80 x i8], [80 x i8]* %19, i32 0, i32 0
  %115 = getelementptr inbounds [256 x i8], [256 x i8]* %20, i32 0, i32 0
  %116 = getelementptr inbounds [1280 x i8], [1280 x i8]* %22, i32 0, i32 0
  %117 = call i32 @shasse2_data(i8* %114, i8* %115, i8* %116)
  %118 = getelementptr inbounds [256 x i8], [256 x i8]* %20, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* align 16 %118, i8 0, i64 256, i1 false)
  %119 = getelementptr inbounds [256 x i8], [256 x i8]* %20, i64 0, i64 92
  store i8 -128, i8* %119, align 4
  %120 = getelementptr inbounds [256 x i8], [256 x i8]* %20, i64 0, i64 88
  store i8 -128, i8* %120, align 8
  %121 = getelementptr inbounds [256 x i8], [256 x i8]* %20, i64 0, i64 84
  store i8 -128, i8* %121, align 4
  %122 = getelementptr inbounds [256 x i8], [256 x i8]* %20, i64 0, i64 80
  store i8 -128, i8* %122, align 16
  %123 = getelementptr inbounds [256 x i8], [256 x i8]* %20, i64 0, i64 254
  store i8 2, i8* %123, align 2
  %124 = getelementptr inbounds [256 x i8], [256 x i8]* %20, i64 0, i64 250
  store i8 2, i8* %124, align 2
  %125 = getelementptr inbounds [256 x i8], [256 x i8]* %20, i64 0, i64 246
  store i8 2, i8* %125, align 2
  %126 = getelementptr inbounds [256 x i8], [256 x i8]* %20, i64 0, i64 242
  store i8 2, i8* %126, align 2
  %127 = getelementptr inbounds [256 x i8], [256 x i8]* %20, i64 0, i64 255
  store i8 -96, i8* %127, align 1
  %128 = getelementptr inbounds [256 x i8], [256 x i8]* %20, i64 0, i64 251
  store i8 -96, i8* %128, align 1
  %129 = getelementptr inbounds [256 x i8], [256 x i8]* %20, i64 0, i64 247
  store i8 -96, i8* %129, align 1
  %130 = getelementptr inbounds [256 x i8], [256 x i8]* %20, i64 0, i64 243
  store i8 -96, i8* %130, align 1
  %131 = sub nsw i32 %111, 1
  %132 = sext i32 %131 to i64
  %133 = getelementptr inbounds [36 x i8], [36 x i8]* %10, i64 0, i64 %132
  store i8 1, i8* %133, align 1
  %134 = call %struct.env_md_st* @EVP_sha1()
  %135 = getelementptr inbounds [128 x i8], [128 x i8]* %11, i32 0, i32 0
  %136 = getelementptr inbounds [128 x i8], [128 x i8]* %11, i32 0, i32 0
  %137 = call i64 @strlen(i8* %136) #10
  %138 = trunc i64 %137 to i32
  %139 = getelementptr inbounds [36 x i8], [36 x i8]* %10, i32 0, i32 0
  %140 = sext i32 %111 to i64
  %141 = call i8* @HMAC(%struct.env_md_st* %134, i8* %135, i32 %138, i8* %139, i64 %140, i8* %109, i32* null)
  %142 = call %struct.env_md_st* @EVP_sha1()
  %143 = getelementptr inbounds [128 x i8], [128 x i8]* %12, i32 0, i32 0
  %144 = getelementptr inbounds [128 x i8], [128 x i8]* %12, i32 0, i32 0
  %145 = call i64 @strlen(i8* %144) #10
  %146 = trunc i64 %145 to i32
  %147 = getelementptr inbounds [36 x i8], [36 x i8]* %10, i32 0, i32 0
  %148 = sext i32 %111 to i64
  %149 = call i8* @HMAC(%struct.env_md_st* %142, i8* %143, i32 %146, i8* %147, i64 %148, i8* %106, i32* null)
  %150 = call %struct.env_md_st* @EVP_sha1()
  %151 = getelementptr inbounds [128 x i8], [128 x i8]* %13, i32 0, i32 0
  %152 = getelementptr inbounds [128 x i8], [128 x i8]* %13, i32 0, i32 0
  %153 = call i64 @strlen(i8* %152) #10
  %154 = trunc i64 %153 to i32
  %155 = getelementptr inbounds [36 x i8], [36 x i8]* %10, i32 0, i32 0
  %156 = sext i32 %111 to i64
  %157 = call i8* @HMAC(%struct.env_md_st* %150, i8* %151, i32 %154, i8* %155, i64 %156, i8* %110, i32* null)
  %158 = call %struct.env_md_st* @EVP_sha1()
  %159 = getelementptr inbounds [128 x i8], [128 x i8]* %14, i32 0, i32 0
  %160 = getelementptr inbounds [128 x i8], [128 x i8]* %14, i32 0, i32 0
  %161 = call i64 @strlen(i8* %160) #10
  %162 = trunc i64 %161 to i32
  %163 = getelementptr inbounds [36 x i8], [36 x i8]* %10, i32 0, i32 0
  %164 = sext i32 %111 to i64
  %165 = call i8* @HMAC(%struct.env_md_st* %158, i8* %159, i32 %162, i8* %163, i64 %164, i8* %108, i32* null)
  %166 = bitcast i8* %109 to i32*
  %167 = bitcast i8* %106 to i32*
  %168 = bitcast i8* %110 to i32*
  %169 = bitcast i8* %108 to i32*
  %170 = getelementptr inbounds [256 x i8], [256 x i8]* %20, i32 0, i32 0
  %171 = bitcast i8* %170 to i32*
  %172 = getelementptr inbounds i32, i32* %166, i32 1
  %173 = load i32, i32* %166, align 4
  %174 = getelementptr inbounds i32, i32* %171, i32 1
  store i32 %173, i32* %171, align 4
  %175 = getelementptr inbounds i32, i32* %167, i32 1
  %176 = load i32, i32* %167, align 4
  %177 = getelementptr inbounds i32, i32* %174, i32 1
  store i32 %176, i32* %174, align 4
  %178 = getelementptr inbounds i32, i32* %168, i32 1
  %179 = load i32, i32* %168, align 4
  %180 = getelementptr inbounds i32, i32* %177, i32 1
  store i32 %179, i32* %177, align 4
  %181 = getelementptr inbounds i32, i32* %169, i32 1
  %182 = load i32, i32* %169, align 4
  %183 = getelementptr inbounds i32, i32* %180, i32 1
  store i32 %182, i32* %180, align 4
  %184 = getelementptr inbounds i32, i32* %172, i32 1
  %185 = load i32, i32* %172, align 4
  %186 = getelementptr inbounds i32, i32* %183, i32 1
  store i32 %185, i32* %183, align 4
  %187 = getelementptr inbounds i32, i32* %175, i32 1
  %188 = load i32, i32* %175, align 4
  %189 = getelementptr inbounds i32, i32* %186, i32 1
  store i32 %188, i32* %186, align 4
  %190 = getelementptr inbounds i32, i32* %178, i32 1
  %191 = load i32, i32* %178, align 4
  %192 = getelementptr inbounds i32, i32* %189, i32 1
  store i32 %191, i32* %189, align 4
  %193 = getelementptr inbounds i32, i32* %181, i32 1
  %194 = load i32, i32* %181, align 4
  %195 = getelementptr inbounds i32, i32* %192, i32 1
  store i32 %194, i32* %192, align 4
  %196 = getelementptr inbounds i32, i32* %184, i32 1
  %197 = load i32, i32* %184, align 4
  %198 = getelementptr inbounds i32, i32* %195, i32 1
  store i32 %197, i32* %195, align 4
  %199 = getelementptr inbounds i32, i32* %187, i32 1
  %200 = load i32, i32* %187, align 4
  %201 = getelementptr inbounds i32, i32* %198, i32 1
  store i32 %200, i32* %198, align 4
  %202 = getelementptr inbounds i32, i32* %190, i32 1
  %203 = load i32, i32* %190, align 4
  %204 = getelementptr inbounds i32, i32* %201, i32 1
  store i32 %203, i32* %201, align 4
  %205 = getelementptr inbounds i32, i32* %193, i32 1
  %206 = load i32, i32* %193, align 4
  %207 = getelementptr inbounds i32, i32* %204, i32 1
  store i32 %206, i32* %204, align 4
  %208 = getelementptr inbounds i32, i32* %196, i32 1
  %209 = load i32, i32* %196, align 4
  %210 = getelementptr inbounds i32, i32* %207, i32 1
  store i32 %209, i32* %207, align 4
  %211 = getelementptr inbounds i32, i32* %199, i32 1
  %212 = load i32, i32* %199, align 4
  %213 = getelementptr inbounds i32, i32* %210, i32 1
  store i32 %212, i32* %210, align 4
  %214 = getelementptr inbounds i32, i32* %202, i32 1
  %215 = load i32, i32* %202, align 4
  %216 = getelementptr inbounds i32, i32* %213, i32 1
  store i32 %215, i32* %213, align 4
  %217 = getelementptr inbounds i32, i32* %205, i32 1
  %218 = load i32, i32* %205, align 4
  %219 = getelementptr inbounds i32, i32* %216, i32 1
  store i32 %218, i32* %216, align 4
  %220 = load i32, i32* %208, align 4
  %221 = getelementptr inbounds i32, i32* %219, i32 1
  store i32 %220, i32* %219, align 4
  %222 = load i32, i32* %211, align 4
  %223 = getelementptr inbounds i32, i32* %221, i32 1
  store i32 %222, i32* %221, align 4
  %224 = load i32, i32* %214, align 4
  %225 = getelementptr inbounds i32, i32* %223, i32 1
  store i32 %224, i32* %223, align 4
  %226 = load i32, i32* %217, align 4
  store i32 %226, i32* %225, align 4
  %227 = getelementptr inbounds [80 x i8], [80 x i8]* %21, i32 0, i32 0
  %228 = getelementptr inbounds [80 x i8], [80 x i8]* %17, i32 0, i32 0
  %229 = getelementptr inbounds [80 x i8], [80 x i8]* %21, i32 0, i32 0
  %230 = getelementptr inbounds [256 x i8], [256 x i8]* %20, i32 0, i32 0
  %231 = getelementptr inbounds [1280 x i8], [1280 x i8]* %22, i32 0, i32 0
  %232 = getelementptr inbounds [80 x i8], [80 x i8]* %21, i32 0, i32 0
  %233 = getelementptr inbounds [256 x i8], [256 x i8]* %20, i32 0, i32 0
  %234 = getelementptr inbounds [80 x i8], [80 x i8]* %21, i32 0, i32 0
  %235 = getelementptr inbounds [80 x i8], [80 x i8]* %19, i32 0, i32 0
  %236 = getelementptr inbounds [80 x i8], [80 x i8]* %21, i32 0, i32 0
  %237 = getelementptr inbounds [256 x i8], [256 x i8]* %20, i32 0, i32 0
  %238 = getelementptr inbounds [1280 x i8], [1280 x i8]* %22, i32 0, i32 0
  %239 = getelementptr inbounds [80 x i8], [80 x i8]* %21, i32 0, i32 0
  %240 = getelementptr inbounds [256 x i8], [256 x i8]* %20, i32 0, i32 0
  %241 = bitcast i8* %109 to i32*
  %242 = bitcast i8* %106 to i32*
  %243 = bitcast i8* %110 to i32*
  %244 = bitcast i8* %108 to i32*
  %245 = getelementptr inbounds [256 x i8], [256 x i8]* %20, i32 0, i32 0
  %246 = bitcast i8* %245 to i32*
  %247 = getelementptr inbounds i32, i32* %246, i32 1
  %248 = getelementptr inbounds i32, i32* %241, i32 1
  %249 = getelementptr inbounds i32, i32* %247, i32 1
  %250 = getelementptr inbounds i32, i32* %242, i32 1
  %251 = getelementptr inbounds i32, i32* %249, i32 1
  %252 = getelementptr inbounds i32, i32* %243, i32 1
  %253 = getelementptr inbounds i32, i32* %251, i32 1
  %254 = getelementptr inbounds i32, i32* %244, i32 1
  %255 = getelementptr inbounds i32, i32* %253, i32 1
  %256 = getelementptr inbounds i32, i32* %248, i32 1
  %257 = getelementptr inbounds i32, i32* %255, i32 1
  %258 = getelementptr inbounds i32, i32* %250, i32 1
  %259 = getelementptr inbounds i32, i32* %257, i32 1
  %260 = getelementptr inbounds i32, i32* %252, i32 1
  %261 = getelementptr inbounds i32, i32* %259, i32 1
  %262 = getelementptr inbounds i32, i32* %254, i32 1
  %263 = getelementptr inbounds i32, i32* %261, i32 1
  %264 = getelementptr inbounds i32, i32* %256, i32 1
  %265 = getelementptr inbounds i32, i32* %263, i32 1
  %266 = getelementptr inbounds i32, i32* %258, i32 1
  %267 = getelementptr inbounds i32, i32* %265, i32 1
  %268 = getelementptr inbounds i32, i32* %260, i32 1
  %269 = getelementptr inbounds i32, i32* %267, i32 1
  %270 = getelementptr inbounds i32, i32* %262, i32 1
  %271 = getelementptr inbounds i32, i32* %269, i32 1
  %272 = getelementptr inbounds i32, i32* %264, i32 1
  %273 = getelementptr inbounds i32, i32* %271, i32 1
  %274 = getelementptr inbounds i32, i32* %266, i32 1
  %275 = getelementptr inbounds i32, i32* %273, i32 1
  %276 = getelementptr inbounds i32, i32* %268, i32 1
  %277 = getelementptr inbounds i32, i32* %275, i32 1
  %278 = getelementptr inbounds i32, i32* %270, i32 1
  %279 = getelementptr inbounds i32, i32* %277, i32 1
  %280 = getelementptr inbounds i32, i32* %279, i32 1
  %281 = getelementptr inbounds i32, i32* %280, i32 1
  br label %282

; <label>:282:                                    ; preds = %104, %282
  %lsr.iv1 = phi i32 [ 4095, %104 ], [ %lsr.iv.next2, %282 ]
  call void @unroll_loop(i32 6)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %227, i8* align 16 %228, i64 80, i1 false), !track !41
  %283 = call i32 @shasse2_data(i8* %229, i8* %230, i8* %231)
  %284 = call i32 @shasse2_ends(i8* %232, i8* %233)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %234, i8* align 16 %235, i64 80, i1 false), !track !42
  %285 = call i32 @shasse2_data(i8* %236, i8* %237, i8* %238)
  %286 = call i32 @shasse2_ends(i8* %239, i8* %240)
  %287 = load i32, i32* %246, align 4
  %288 = load i32, i32* %241, align 4
  %289 = xor i32 %288, %287
  store i32 %289, i32* %241, align 4
  %290 = load i32, i32* %247, align 4
  %291 = load i32, i32* %242, align 4
  %292 = xor i32 %291, %290
  store i32 %292, i32* %242, align 4
  %293 = load i32, i32* %249, align 4
  %294 = load i32, i32* %243, align 4
  %295 = xor i32 %294, %293
  store i32 %295, i32* %243, align 4
  %296 = load i32, i32* %251, align 4
  %297 = load i32, i32* %244, align 4
  %298 = xor i32 %297, %296
  store i32 %298, i32* %244, align 4
  %299 = load i32, i32* %253, align 4
  %300 = load i32, i32* %248, align 4
  %301 = xor i32 %300, %299
  store i32 %301, i32* %248, align 4
  %302 = load i32, i32* %255, align 4
  %303 = load i32, i32* %250, align 4
  %304 = xor i32 %303, %302
  store i32 %304, i32* %250, align 4
  %305 = load i32, i32* %257, align 4
  %306 = load i32, i32* %252, align 4
  %307 = xor i32 %306, %305
  store i32 %307, i32* %252, align 4
  %308 = load i32, i32* %259, align 4
  %309 = load i32, i32* %254, align 4
  %310 = xor i32 %309, %308
  store i32 %310, i32* %254, align 4
  %311 = load i32, i32* %261, align 4
  %312 = load i32, i32* %256, align 4
  %313 = xor i32 %312, %311
  store i32 %313, i32* %256, align 4
  %314 = load i32, i32* %263, align 4
  %315 = load i32, i32* %258, align 4
  %316 = xor i32 %315, %314
  store i32 %316, i32* %258, align 4
  %317 = load i32, i32* %265, align 4
  %318 = load i32, i32* %260, align 4
  %319 = xor i32 %318, %317
  store i32 %319, i32* %260, align 4
  %320 = load i32, i32* %267, align 4
  %321 = load i32, i32* %262, align 4
  %322 = xor i32 %321, %320
  store i32 %322, i32* %262, align 4
  %323 = load i32, i32* %269, align 4
  %324 = load i32, i32* %264, align 4
  %325 = xor i32 %324, %323
  store i32 %325, i32* %264, align 4
  %326 = load i32, i32* %271, align 4
  %327 = load i32, i32* %266, align 4
  %328 = xor i32 %327, %326
  store i32 %328, i32* %266, align 4
  %329 = load i32, i32* %273, align 4
  %330 = load i32, i32* %268, align 4
  %331 = xor i32 %330, %329
  store i32 %331, i32* %268, align 4
  %332 = load i32, i32* %275, align 4
  %333 = load i32, i32* %270, align 4
  %334 = xor i32 %333, %332
  store i32 %334, i32* %270, align 4
  %335 = load i32, i32* %277, align 4
  %336 = load i32, i32* %272, align 4
  %337 = xor i32 %336, %335
  store i32 %337, i32* %272, align 4
  %338 = load i32, i32* %279, align 4
  %339 = load i32, i32* %274, align 4
  %340 = xor i32 %339, %338
  store i32 %340, i32* %274, align 4
  %341 = load i32, i32* %280, align 4
  %342 = load i32, i32* %276, align 4
  %343 = xor i32 %342, %341
  store i32 %343, i32* %276, align 4
  %344 = load i32, i32* %281, align 4
  %345 = load i32, i32* %278, align 4
  %346 = xor i32 %345, %344
  store i32 %346, i32* %278, align 4
  %lsr.iv.next2 = add nsw i32 %lsr.iv1, -1
  %exitcond13 = icmp ne i32 %lsr.iv.next2, 0
  br i1 %exitcond13, label %282, label %347

; <label>:347:                                    ; preds = %282
  %348 = sub nsw i32 %111, 1
  %349 = sext i32 %348 to i64
  %350 = getelementptr inbounds [36 x i8], [36 x i8]* %10, i64 0, i64 %349
  store i8 2, i8* %350, align 1
  %351 = call %struct.env_md_st* @EVP_sha1()
  %352 = getelementptr inbounds [128 x i8], [128 x i8]* %11, i32 0, i32 0
  %353 = getelementptr inbounds [128 x i8], [128 x i8]* %11, i32 0, i32 0
  %354 = call i64 @strlen(i8* %353) #10
  %355 = trunc i64 %354 to i32
  %356 = getelementptr inbounds [36 x i8], [36 x i8]* %10, i32 0, i32 0
  %357 = sext i32 %111 to i64
  %358 = getelementptr inbounds i8, i8* %109, i64 20
  %359 = call i8* @HMAC(%struct.env_md_st* %351, i8* %352, i32 %355, i8* %356, i64 %357, i8* %358, i32* null)
  %360 = call %struct.env_md_st* @EVP_sha1()
  %361 = getelementptr inbounds [128 x i8], [128 x i8]* %12, i32 0, i32 0
  %362 = getelementptr inbounds [128 x i8], [128 x i8]* %12, i32 0, i32 0
  %363 = call i64 @strlen(i8* %362) #10
  %364 = trunc i64 %363 to i32
  %365 = getelementptr inbounds [36 x i8], [36 x i8]* %10, i32 0, i32 0
  %366 = sext i32 %111 to i64
  %367 = getelementptr inbounds i8, i8* %106, i64 20
  %368 = call i8* @HMAC(%struct.env_md_st* %360, i8* %361, i32 %364, i8* %365, i64 %366, i8* %367, i32* null)
  %369 = call %struct.env_md_st* @EVP_sha1()
  %370 = getelementptr inbounds [128 x i8], [128 x i8]* %13, i32 0, i32 0
  %371 = getelementptr inbounds [128 x i8], [128 x i8]* %13, i32 0, i32 0
  %372 = call i64 @strlen(i8* %371) #10
  %373 = trunc i64 %372 to i32
  %374 = getelementptr inbounds [36 x i8], [36 x i8]* %10, i32 0, i32 0
  %375 = sext i32 %111 to i64
  %376 = getelementptr inbounds i8, i8* %110, i64 20
  %377 = call i8* @HMAC(%struct.env_md_st* %369, i8* %370, i32 %373, i8* %374, i64 %375, i8* %376, i32* null)
  %378 = call %struct.env_md_st* @EVP_sha1()
  %379 = getelementptr inbounds [128 x i8], [128 x i8]* %14, i32 0, i32 0
  %380 = getelementptr inbounds [128 x i8], [128 x i8]* %14, i32 0, i32 0
  %381 = call i64 @strlen(i8* %380) #10
  %382 = trunc i64 %381 to i32
  %383 = getelementptr inbounds [36 x i8], [36 x i8]* %10, i32 0, i32 0
  %384 = sext i32 %111 to i64
  %385 = getelementptr inbounds i8, i8* %108, i64 20
  %386 = call i8* @HMAC(%struct.env_md_st* %378, i8* %379, i32 %382, i8* %383, i64 %384, i8* %385, i32* null)
  %387 = getelementptr inbounds i8, i8* %109, i64 20
  %388 = bitcast i8* %387 to i32*
  %389 = getelementptr inbounds i8, i8* %106, i64 20
  %390 = bitcast i8* %389 to i32*
  %391 = getelementptr inbounds i8, i8* %110, i64 20
  %392 = bitcast i8* %391 to i32*
  %393 = getelementptr inbounds i8, i8* %108, i64 20
  %394 = bitcast i8* %393 to i32*
  %395 = getelementptr inbounds [256 x i8], [256 x i8]* %20, i32 0, i32 0
  %396 = bitcast i8* %395 to i32*
  %397 = getelementptr inbounds i32, i32* %388, i32 1
  %398 = load i32, i32* %388, align 4
  %399 = getelementptr inbounds i32, i32* %396, i32 1
  store i32 %398, i32* %396, align 4
  %400 = getelementptr inbounds i32, i32* %390, i32 1
  %401 = load i32, i32* %390, align 4
  %402 = getelementptr inbounds i32, i32* %399, i32 1
  store i32 %401, i32* %399, align 4
  %403 = getelementptr inbounds i32, i32* %392, i32 1
  %404 = load i32, i32* %392, align 4
  %405 = getelementptr inbounds i32, i32* %402, i32 1
  store i32 %404, i32* %402, align 4
  %406 = getelementptr inbounds i32, i32* %394, i32 1
  %407 = load i32, i32* %394, align 4
  %408 = getelementptr inbounds i32, i32* %405, i32 1
  store i32 %407, i32* %405, align 4
  %409 = getelementptr inbounds i32, i32* %397, i32 1
  %410 = load i32, i32* %397, align 4
  %411 = getelementptr inbounds i32, i32* %408, i32 1
  store i32 %410, i32* %408, align 4
  %412 = getelementptr inbounds i32, i32* %400, i32 1
  %413 = load i32, i32* %400, align 4
  %414 = getelementptr inbounds i32, i32* %411, i32 1
  store i32 %413, i32* %411, align 4
  %415 = getelementptr inbounds i32, i32* %403, i32 1
  %416 = load i32, i32* %403, align 4
  %417 = getelementptr inbounds i32, i32* %414, i32 1
  store i32 %416, i32* %414, align 4
  %418 = getelementptr inbounds i32, i32* %406, i32 1
  %419 = load i32, i32* %406, align 4
  %420 = getelementptr inbounds i32, i32* %417, i32 1
  store i32 %419, i32* %417, align 4
  %421 = getelementptr inbounds i32, i32* %409, i32 1
  %422 = load i32, i32* %409, align 4
  %423 = getelementptr inbounds i32, i32* %420, i32 1
  store i32 %422, i32* %420, align 4
  %424 = getelementptr inbounds i32, i32* %412, i32 1
  %425 = load i32, i32* %412, align 4
  %426 = getelementptr inbounds i32, i32* %423, i32 1
  store i32 %425, i32* %423, align 4
  %427 = getelementptr inbounds i32, i32* %415, i32 1
  %428 = load i32, i32* %415, align 4
  %429 = getelementptr inbounds i32, i32* %426, i32 1
  store i32 %428, i32* %426, align 4
  %430 = getelementptr inbounds i32, i32* %418, i32 1
  %431 = load i32, i32* %418, align 4
  %432 = getelementptr inbounds i32, i32* %429, i32 1
  store i32 %431, i32* %429, align 4
  %433 = getelementptr inbounds i32, i32* %421, i32 1
  %434 = load i32, i32* %421, align 4
  %435 = getelementptr inbounds i32, i32* %432, i32 1
  store i32 %434, i32* %432, align 4
  %436 = getelementptr inbounds i32, i32* %424, i32 1
  %437 = load i32, i32* %424, align 4
  %438 = getelementptr inbounds i32, i32* %435, i32 1
  store i32 %437, i32* %435, align 4
  %439 = getelementptr inbounds i32, i32* %427, i32 1
  %440 = load i32, i32* %427, align 4
  %441 = getelementptr inbounds i32, i32* %438, i32 1
  store i32 %440, i32* %438, align 4
  %442 = getelementptr inbounds i32, i32* %430, i32 1
  %443 = load i32, i32* %430, align 4
  %444 = getelementptr inbounds i32, i32* %441, i32 1
  store i32 %443, i32* %441, align 4
  %445 = load i32, i32* %433, align 4
  %446 = getelementptr inbounds i32, i32* %444, i32 1
  store i32 %445, i32* %444, align 4
  %447 = load i32, i32* %436, align 4
  %448 = getelementptr inbounds i32, i32* %446, i32 1
  store i32 %447, i32* %446, align 4
  %449 = load i32, i32* %439, align 4
  %450 = getelementptr inbounds i32, i32* %448, i32 1
  store i32 %449, i32* %448, align 4
  %451 = load i32, i32* %442, align 4
  store i32 %451, i32* %450, align 4
  %452 = getelementptr inbounds [80 x i8], [80 x i8]* %21, i32 0, i32 0
  %453 = getelementptr inbounds [80 x i8], [80 x i8]* %17, i32 0, i32 0
  %454 = getelementptr inbounds [80 x i8], [80 x i8]* %21, i32 0, i32 0
  %455 = getelementptr inbounds [256 x i8], [256 x i8]* %20, i32 0, i32 0
  %456 = getelementptr inbounds [1280 x i8], [1280 x i8]* %22, i32 0, i32 0
  %457 = getelementptr inbounds [80 x i8], [80 x i8]* %21, i32 0, i32 0
  %458 = getelementptr inbounds [256 x i8], [256 x i8]* %20, i32 0, i32 0
  %459 = getelementptr inbounds [80 x i8], [80 x i8]* %21, i32 0, i32 0
  %460 = getelementptr inbounds [80 x i8], [80 x i8]* %19, i32 0, i32 0
  %461 = getelementptr inbounds [80 x i8], [80 x i8]* %21, i32 0, i32 0
  %462 = getelementptr inbounds [256 x i8], [256 x i8]* %20, i32 0, i32 0
  %463 = getelementptr inbounds [1280 x i8], [1280 x i8]* %22, i32 0, i32 0
  %464 = getelementptr inbounds [80 x i8], [80 x i8]* %21, i32 0, i32 0
  %465 = getelementptr inbounds [256 x i8], [256 x i8]* %20, i32 0, i32 0
  %466 = getelementptr inbounds i8, i8* %109, i64 20
  %467 = bitcast i8* %466 to i32*
  %468 = getelementptr inbounds i8, i8* %106, i64 20
  %469 = bitcast i8* %468 to i32*
  %470 = getelementptr inbounds i8, i8* %110, i64 20
  %471 = bitcast i8* %470 to i32*
  %472 = getelementptr inbounds i8, i8* %108, i64 20
  %473 = bitcast i8* %472 to i32*
  %474 = getelementptr inbounds [256 x i8], [256 x i8]* %20, i32 0, i32 0
  %475 = bitcast i8* %474 to i32*
  %476 = getelementptr inbounds i32, i32* %475, i32 1
  %477 = getelementptr inbounds i32, i32* %467, i32 1
  %478 = getelementptr inbounds i32, i32* %476, i32 1
  %479 = getelementptr inbounds i32, i32* %469, i32 1
  %480 = getelementptr inbounds i32, i32* %478, i32 1
  %481 = getelementptr inbounds i32, i32* %471, i32 1
  %482 = getelementptr inbounds i32, i32* %480, i32 1
  %483 = getelementptr inbounds i32, i32* %473, i32 1
  %484 = getelementptr inbounds i32, i32* %482, i32 1
  %485 = getelementptr inbounds i32, i32* %477, i32 1
  %486 = getelementptr inbounds i32, i32* %484, i32 1
  %487 = getelementptr inbounds i32, i32* %479, i32 1
  %488 = getelementptr inbounds i32, i32* %486, i32 1
  %489 = getelementptr inbounds i32, i32* %481, i32 1
  %490 = getelementptr inbounds i32, i32* %488, i32 1
  %491 = getelementptr inbounds i32, i32* %483, i32 1
  %492 = getelementptr inbounds i32, i32* %490, i32 1
  %493 = getelementptr inbounds i32, i32* %492, i32 1
  %494 = getelementptr inbounds i32, i32* %493, i32 1
  br label %495

; <label>:495:                                    ; preds = %347, %495
  %lsr.iv = phi i32 [ 4095, %347 ], [ %lsr.iv.next, %495 ]
  call void @unroll_loop(i32 7)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %452, i8* align 16 %453, i64 80, i1 false), !track !43
  %496 = call i32 @shasse2_data(i8* %454, i8* %455, i8* %456)
  %497 = call i32 @shasse2_ends(i8* %457, i8* %458)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %459, i8* align 16 %460, i64 80, i1 false), !track !44
  %498 = call i32 @shasse2_data(i8* %461, i8* %462, i8* %463)
  %499 = call i32 @shasse2_ends(i8* %464, i8* %465)
  %500 = load i32, i32* %475, align 4
  %501 = load i32, i32* %467, align 4
  %502 = xor i32 %501, %500
  store i32 %502, i32* %467, align 4
  %503 = load i32, i32* %476, align 4
  %504 = load i32, i32* %469, align 4
  %505 = xor i32 %504, %503
  store i32 %505, i32* %469, align 4
  %506 = load i32, i32* %478, align 4
  %507 = load i32, i32* %471, align 4
  %508 = xor i32 %507, %506
  store i32 %508, i32* %471, align 4
  %509 = load i32, i32* %480, align 4
  %510 = load i32, i32* %473, align 4
  %511 = xor i32 %510, %509
  store i32 %511, i32* %473, align 4
  %512 = load i32, i32* %482, align 4
  %513 = load i32, i32* %477, align 4
  %514 = xor i32 %513, %512
  store i32 %514, i32* %477, align 4
  %515 = load i32, i32* %484, align 4
  %516 = load i32, i32* %479, align 4
  %517 = xor i32 %516, %515
  store i32 %517, i32* %479, align 4
  %518 = load i32, i32* %486, align 4
  %519 = load i32, i32* %481, align 4
  %520 = xor i32 %519, %518
  store i32 %520, i32* %481, align 4
  %521 = load i32, i32* %488, align 4
  %522 = load i32, i32* %483, align 4
  %523 = xor i32 %522, %521
  store i32 %523, i32* %483, align 4
  %524 = load i32, i32* %490, align 4
  %525 = load i32, i32* %485, align 4
  %526 = xor i32 %525, %524
  store i32 %526, i32* %485, align 4
  %527 = load i32, i32* %492, align 4
  %528 = load i32, i32* %487, align 4
  %529 = xor i32 %528, %527
  store i32 %529, i32* %487, align 4
  %530 = load i32, i32* %493, align 4
  %531 = load i32, i32* %489, align 4
  %532 = xor i32 %531, %530
  store i32 %532, i32* %489, align 4
  %533 = load i32, i32* %494, align 4
  %534 = load i32, i32* %491, align 4
  %535 = xor i32 %534, %533
  store i32 %535, i32* %491, align 4
  %lsr.iv.next = add nsw i32 %lsr.iv, -1
  %exitcond = icmp ne i32 %lsr.iv.next, 0
  br i1 %exitcond, label %495, label %536

; <label>:536:                                    ; preds = %495
  %537 = getelementptr inbounds i32, i32* %211, i32 1
  %538 = getelementptr inbounds i32, i32* %217, i32 1
  %539 = getelementptr inbounds i32, i32* %208, i32 1
  %540 = getelementptr inbounds i32, i32* %214, i32 1
  %541 = getelementptr inbounds i32, i32* %225, i32 1
  %542 = getelementptr inbounds i32, i32* %433, i32 1
  %543 = getelementptr inbounds i32, i32* %436, i32 1
  %544 = getelementptr inbounds i32, i32* %439, i32 1
  %545 = getelementptr inbounds i32, i32* %442, i32 1
  %546 = getelementptr inbounds i32, i32* %450, i32 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %7, i8* align 1 %110, i64 32, i1 false), !track !45
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %8, i8* align 1 %108, i64 32, i1 false), !track !46
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %5, i8* align 1 %109, i64 32, i1 false), !track !47
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %6, i8* align 1 %106, i64 32, i1 false), !track !48
  ret void
}

; Function Attrs: nounwind
declare dso_local i8* @strncpy(i8*, i8*, i64) #2

; Function Attrs: nounwind readonly
declare dso_local i64 @strlen(i8*) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1) #4

declare dso_local i32 @shasse2_init(i8*) #1

declare dso_local i32 @shasse2_data(i8*, i8*, i8*) #1

declare dso_local %struct.env_md_st* @EVP_sha1() #1

declare dso_local i8* @HMAC(%struct.env_md_st*, i8*, i32, i8*, i64, i8*, i32*) #1

declare dso_local i32 @shasse2_ends(i8*, i8*) #1

; Function Attrs: noinline nounwind uwtable
define dso_local void @clean_exit(i32) #0 {
  %2 = alloca [128 x i8], align 16
  %3 = getelementptr inbounds [128 x i8], [128 x i8]* %2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* align 16 %3, i8 0, i64 128, i1 false)
  %4 = icmp ne i32 %0, 0
  br i1 %4, label %5, label %14

; <label>:5:                                      ; preds = %1
  %6 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 6
  %7 = load i32, i32* %6, align 8
  %8 = icmp ne i32 %7, 0
  br i1 %8, label %14, label %9

; <label>:9:                                      ; preds = %5
  %10 = getelementptr [26 x i8], [26 x i8]* @.str.3, i32 0, i32 0
  %11 = call i32 (i8*, ...) @printf(i8* %10)
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %13 = call i32 @fflush(%struct._IO_FILE* %12)
  br label %14

; <label>:14:                                     ; preds = %9, %5, %1
  store i32 1, i32* @close_aircrack, align 4
  %15 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 5
  %16 = load i32, i32* %15, align 4
  %17 = icmp slt i32 0, %16
  br i1 %17, label %.lr.ph14.preheader, label %._crit_edge15

.lr.ph14.preheader:                               ; preds = %14
  %18 = getelementptr inbounds [128 x i8], [128 x i8]* %2, i32 0, i32 0
  br label %.lr.ph14

.lr.ph14:                                         ; preds = %.lr.ph14.preheader, %.lr.ph14
  %indvars.iv16 = phi i64 [ %indvars.iv.next17, %.lr.ph14 ], [ 0, %.lr.ph14.preheader ]
  call void @unroll_loop(i32 8)
  %19 = shl i64 %indvars.iv16, 3
  %20 = inttoptr i64 %19 to i32*
  %uglygep2 = getelementptr i8, i8* bitcast ([256 x [2 x i32]]* @mc_pipe to i8*), i64 %19
  %uglygep23 = bitcast i8* %uglygep2 to i32*
  %scevgep = getelementptr i32, i32* %uglygep23, i64 1
  %21 = load i32, i32* %scevgep, align 4
  %22 = call i32 @safe_write(i32 %21, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i64 0, i64 0), i64 5)
  %23 = shl i64 %indvars.iv16, 3
  %24 = inttoptr i64 %23 to i32*
  %uglygep4 = getelementptr i8, i8* bitcast ([256 x [2 x i32]]* @bf_pipe to i8*), i64 %23
  %uglygep45 = bitcast i8* %uglygep4 to i32*
  %scevgep6 = getelementptr i32, i32* %uglygep45, i64 1
  %25 = load i32, i32* %scevgep6, align 4
  %26 = call i32 @safe_write(i32 %25, i8* %18, i64 64)
  %indvars.iv.next17 = add nuw nsw i64 %indvars.iv16, 1
  %27 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 5), align 4
  %28 = sext i32 %27 to i64
  %29 = icmp slt i64 %indvars.iv.next17, %28
  br i1 %29, label %.lr.ph14, label %._crit_edge15.loopexit

._crit_edge15.loopexit:                           ; preds = %.lr.ph14
  br label %._crit_edge15

._crit_edge15:                                    ; preds = %._crit_edge15.loopexit, %14
  %30 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 0
  %31 = load i32, i32* %30, align 8
  %32 = icmp ne i32 %31, 2
  %33 = load i32, i32* @id, align 4
  %34 = icmp slt i32 0, %33
  %or.cond = and i1 %32, %34
  br i1 %or.cond, label %.lr.ph10.preheader, label %._crit_edge11

.lr.ph10.preheader:                               ; preds = %._crit_edge15
  br label %.lr.ph10

.lr.ph10:                                         ; preds = %.lr.ph10.preheader, %.lr.ph10
  %indvars.iv = phi i64 [ %indvars.iv.next, %.lr.ph10 ], [ 0, %.lr.ph10.preheader ]
  call void @unroll_loop(i32 9)
  %35 = shl i64 %indvars.iv, 3
  %36 = inttoptr i64 %35 to i64*
  %uglygep = getelementptr i8, i8* bitcast ([128 x i64]* @tid to i8*), i64 %35
  %uglygep1 = bitcast i8* %uglygep to i64*
  %37 = load i64, i64* %uglygep1, align 8
  %38 = call i32 @pthread_join(i64 %37, i8** null)
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %39 = load i32, i32* @id, align 4
  %40 = sext i32 %39 to i64
  %41 = icmp slt i64 %indvars.iv.next, %40
  br i1 %41, label %.lr.ph10, label %._crit_edge11.loopexit

._crit_edge11.loopexit:                           ; preds = %.lr.ph10
  br label %._crit_edge11

._crit_edge11:                                    ; preds = %._crit_edge11.loopexit, %._crit_edge15
  %42 = getelementptr %struct.WEP_data, %struct.WEP_data* @wep, i32 0, i32 1
  %43 = load i8*, i8** %42, align 8
  %44 = icmp ne i8* %43, null
  br i1 %44, label %45, label %49

; <label>:45:                                     ; preds = %._crit_edge11
  %46 = getelementptr %struct.WEP_data, %struct.WEP_data* @wep, i32 0, i32 1
  %47 = load i8*, i8** %46, align 8
  call void @free(i8* %47) #9
  %48 = getelementptr %struct.WEP_data, %struct.WEP_data* @wep, i32 0, i32 1
  store i8* null, i8** %48, align 8
  br label %49

; <label>:49:                                     ; preds = %45, %._crit_edge11
  %50 = load %struct.AP_info*, %struct.AP_info** @ap_1st, align 8
  %51 = icmp ne %struct.AP_info* %50, null
  br i1 %51, label %.lr.ph6.preheader, label %._crit_edge7

.lr.ph6.preheader:                                ; preds = %49
  br label %.lr.ph6

.lr.ph6:                                          ; preds = %.lr.ph6.preheader, %109
  %.014 = phi %struct.AP_info* [ %111, %109 ], [ %50, %.lr.ph6.preheader ]
  call void @unroll_loop(i32 10)
  %52 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.014, i32 0, i32 4
  %53 = load i8*, i8** %52, align 8
  %54 = icmp ne i8* %53, null
  br i1 %54, label %55, label %59

; <label>:55:                                     ; preds = %.lr.ph6
  %56 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.014, i32 0, i32 4
  %57 = load i8*, i8** %56, align 8
  call void @free(i8* %57) #9
  %58 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.014, i32 0, i32 4
  store i8* null, i8** %58, align 8
  br label %59

; <label>:59:                                     ; preds = %55, %.lr.ph6
  %60 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.014, i32 0, i32 5
  %61 = load i8**, i8*** %60, align 8
  call void @uniqueiv_wipe(i8** %61)
  %62 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.014, i32 0, i32 15
  %63 = load %struct.PTW_attackstate*, %struct.PTW_attackstate** %62, align 8
  %64 = icmp ne %struct.PTW_attackstate* %63, null
  br i1 %64, label %65, label %85

; <label>:65:                                     ; preds = %59
  %66 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.014, i32 0, i32 15
  %67 = load %struct.PTW_attackstate*, %struct.PTW_attackstate** %66, align 8
  %68 = getelementptr inbounds %struct.PTW_attackstate, %struct.PTW_attackstate* %67, i32 0, i32 5
  %69 = load %struct.PTW_session*, %struct.PTW_session** %68, align 8
  %70 = icmp ne %struct.PTW_session* %69, null
  br i1 %70, label %71, label %80

; <label>:71:                                     ; preds = %65
  %72 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.014, i32 0, i32 15
  %73 = load %struct.PTW_attackstate*, %struct.PTW_attackstate** %72, align 8
  %74 = getelementptr inbounds %struct.PTW_attackstate, %struct.PTW_attackstate* %73, i32 0, i32 5
  %75 = load %struct.PTW_session*, %struct.PTW_session** %74, align 8
  %76 = bitcast %struct.PTW_session* %75 to i8*
  call void @free(i8* %76) #9
  %77 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.014, i32 0, i32 15
  %78 = load %struct.PTW_attackstate*, %struct.PTW_attackstate** %77, align 8
  %79 = getelementptr inbounds %struct.PTW_attackstate, %struct.PTW_attackstate* %78, i32 0, i32 5
  store %struct.PTW_session* null, %struct.PTW_session** %79, align 8
  br label %80

; <label>:80:                                     ; preds = %71, %65
  %81 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.014, i32 0, i32 15
  %82 = load %struct.PTW_attackstate*, %struct.PTW_attackstate** %81, align 8
  %83 = bitcast %struct.PTW_attackstate* %82 to i8*
  call void @free(i8* %83) #9
  %84 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.014, i32 0, i32 15
  store %struct.PTW_attackstate* null, %struct.PTW_attackstate** %84, align 8
  br label %85

; <label>:85:                                     ; preds = %80, %59
  %86 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.014, i32 0, i32 16
  %87 = load %struct.PTW_attackstate*, %struct.PTW_attackstate** %86, align 8
  %88 = icmp ne %struct.PTW_attackstate* %87, null
  br i1 %88, label %89, label %109

; <label>:89:                                     ; preds = %85
  %90 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.014, i32 0, i32 16
  %91 = load %struct.PTW_attackstate*, %struct.PTW_attackstate** %90, align 8
  %92 = getelementptr inbounds %struct.PTW_attackstate, %struct.PTW_attackstate* %91, i32 0, i32 5
  %93 = load %struct.PTW_session*, %struct.PTW_session** %92, align 8
  %94 = icmp ne %struct.PTW_session* %93, null
  br i1 %94, label %95, label %104

; <label>:95:                                     ; preds = %89
  %96 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.014, i32 0, i32 16
  %97 = load %struct.PTW_attackstate*, %struct.PTW_attackstate** %96, align 8
  %98 = getelementptr inbounds %struct.PTW_attackstate, %struct.PTW_attackstate* %97, i32 0, i32 5
  %99 = load %struct.PTW_session*, %struct.PTW_session** %98, align 8
  %100 = bitcast %struct.PTW_session* %99 to i8*
  call void @free(i8* %100) #9
  %101 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.014, i32 0, i32 16
  %102 = load %struct.PTW_attackstate*, %struct.PTW_attackstate** %101, align 8
  %103 = getelementptr inbounds %struct.PTW_attackstate, %struct.PTW_attackstate* %102, i32 0, i32 5
  store %struct.PTW_session* null, %struct.PTW_session** %103, align 8
  br label %104

; <label>:104:                                    ; preds = %95, %89
  %105 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.014, i32 0, i32 16
  %106 = load %struct.PTW_attackstate*, %struct.PTW_attackstate** %105, align 8
  %107 = bitcast %struct.PTW_attackstate* %106 to i8*
  call void @free(i8* %107) #9
  %108 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.014, i32 0, i32 16
  store %struct.PTW_attackstate* null, %struct.PTW_attackstate** %108, align 8
  br label %109

; <label>:109:                                    ; preds = %104, %85
  %110 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.014, i32 0, i32 0
  %111 = load %struct.AP_info*, %struct.AP_info** %110, align 8
  %112 = icmp ne %struct.AP_info* %111, null
  br i1 %112, label %.lr.ph6, label %._crit_edge7.loopexit

._crit_edge7.loopexit:                            ; preds = %109
  br label %._crit_edge7

._crit_edge7:                                     ; preds = %._crit_edge7.loopexit, %49
  %113 = load %struct.AP_info*, %struct.AP_info** @ap_1st, align 8
  %114 = icmp ne %struct.AP_info* %113, null
  br i1 %114, label %.lr.ph.preheader, label %._crit_edge

.lr.ph.preheader:                                 ; preds = %._crit_edge7
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %120
  %.123 = phi %struct.AP_info* [ %116, %120 ], [ %113, %.lr.ph.preheader ]
  call void @unroll_loop(i32 11)
  %115 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.123, i32 0, i32 0
  %116 = load %struct.AP_info*, %struct.AP_info** %115, align 8
  %117 = icmp ne %struct.AP_info* %.123, null
  br i1 %117, label %118, label %120

; <label>:118:                                    ; preds = %.lr.ph
  %119 = bitcast %struct.AP_info* %.123 to i8*
  call void @free(i8* %119) #9
  br label %120

; <label>:120:                                    ; preds = %118, %.lr.ph
  %121 = icmp ne %struct.AP_info* %116, null
  br i1 %121, label %.lr.ph, label %._crit_edge.loopexit

._crit_edge.loopexit:                             ; preds = %120
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %._crit_edge7
  %122 = call i32 @fork() #9
  %123 = icmp eq i32 %122, -1
  %124 = icmp ne i32 %122, 0
  br i1 %124, label %125, label %126

; <label>:125:                                    ; preds = %._crit_edge
  call void @exit(i32 0) #11
  unreachable

; <label>:126:                                    ; preds = %._crit_edge
  call void @_exit(i32 %0) #12
  unreachable
}

declare dso_local i32 @fflush(%struct._IO_FILE*) #1

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @safe_write(i32, i8*, i64) #0 {
  %4 = icmp ult i64 0, %2
  br i1 %4, label %.lr.ph.preheader, label %.outer._crit_edge

.lr.ph.preheader:                                 ; preds = %3
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %.outer
  %5 = phi i1 [ %21, %.outer ], [ %4, %.lr.ph.preheader ]
  %.01.ph13 = phi i8* [ %20, %.outer ], [ %1, %.lr.ph.preheader ]
  %.02.ph12 = phi i64 [ %18, %.outer ], [ 0, %.lr.ph.preheader ]
  call void @unroll_loop(i32 23)
  %6 = sub i64 %2, %.02.ph12
  br label %8

; <label>:7:                                      ; preds = %12
  br i1 %5, label %8, label %.outer._crit_edge.loopexit

; <label>:8:                                      ; preds = %.lr.ph, %7
  call void @unroll_loop(i32 24)
  %9 = call i64 @write(i32 %0, i8* %.01.ph13, i64 %6)
  %10 = trunc i64 %9 to i32
  %11 = icmp slt i32 %10, 0
  br i1 %11, label %12, label %.outer

; <label>:12:                                     ; preds = %8
  %13 = call i32* @__errno_location() #13
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, 4
  br i1 %15, label %7, label %.loopexit.loopexit

.outer:                                           ; preds = %8
  %.lcssa3 = phi i64 [ %9, %8 ]
  %16 = trunc i64 %.lcssa3 to i32
  %17 = sext i32 %16 to i64
  %18 = add i64 %.02.ph12, %17
  %19 = sext i32 %16 to i64
  %20 = getelementptr inbounds i8, i8* %.01.ph13, i64 %19
  %21 = icmp ult i64 %18, %2
  br i1 %21, label %.lr.ph, label %.outer._crit_edge.loopexit1

.outer._crit_edge.loopexit:                       ; preds = %7
  %.02.lcssa.ph = phi i64 [ %.02.ph12, %7 ]
  br label %.outer._crit_edge

.outer._crit_edge.loopexit1:                      ; preds = %.outer
  %.02.lcssa.ph2 = phi i64 [ %18, %.outer ]
  br label %.outer._crit_edge

.outer._crit_edge:                                ; preds = %.outer._crit_edge.loopexit1, %.outer._crit_edge.loopexit, %3
  %.02.lcssa = phi i64 [ 0, %3 ], [ %.02.lcssa.ph, %.outer._crit_edge.loopexit ], [ %.02.lcssa.ph2, %.outer._crit_edge.loopexit1 ]
  %22 = trunc i64 %.02.lcssa to i32
  br label %.loopexit

.loopexit.loopexit:                               ; preds = %12
  %.lcssa = phi i64 [ %9, %12 ]
  %23 = trunc i64 %.lcssa to i32
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit.loopexit, %.outer._crit_edge
  %.0 = phi i32 [ %22, %.outer._crit_edge ], [ %23, %.loopexit.loopexit ]
  ret i32 %.0
}

declare dso_local i32 @pthread_join(i64, i8**) #1

; Function Attrs: nounwind
declare dso_local void @free(i8*) #2

; Function Attrs: nounwind
declare dso_local i32 @fork() #2

; Function Attrs: noreturn nounwind
declare dso_local void @exit(i32) #5

; Function Attrs: noreturn
declare dso_local void @_exit(i32) #6

declare dso_local i64 @write(i32, i8*, i64) #1

; Function Attrs: nounwind readnone
declare dso_local i32* @__errno_location() #7

; Function Attrs: noinline nounwind uwtable
define dso_local void @sighandler(i32) #0 {
  %2 = call void (i32)* @signal(i32 %0, void (i32)* @sighandler) #9
  switch i32 %0, label %9 [
    i32 3, label %3
    i32 15, label %4
    i32 2, label %5
    i32 28, label %6
  ]

; <label>:3:                                      ; preds = %1
  call void @clean_exit(i32 0)
  br label %9

; <label>:4:                                      ; preds = %1
  call void @clean_exit(i32 1)
  br label %9

; <label>:5:                                      ; preds = %1
  call void @clean_exit(i32 1)
  br label %9

; <label>:6:                                      ; preds = %1
  %7 = getelementptr [6 x i8], [6 x i8]* @.str.5, i32 0, i32 0
  %8 = call i32 (i8*, ...) @printf(i8* %7)
  br label %9

; <label>:9:                                      ; preds = %5, %4, %3, %1, %6
  ret void
}

; Function Attrs: nounwind
declare dso_local void (i32)* @signal(i32, void (i32)*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @eof_wait(i32*) #0 {
  %2 = load i32, i32* %0, align 4
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %4, label %10

; <label>:4:                                      ; preds = %1
  store i32 1, i32* %0, align 4
  %5 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* @mx_eof) #9
  %6 = load i32, i32* @nb_eof, align 4
  %7 = add nsw i32 %6, 1
  store i32 %7, i32* @nb_eof, align 4
  %8 = call i32 @pthread_cond_broadcast(%union.pthread_cond_t* @cv_eof) #9
  %9 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* @mx_eof) #9
  br label %10

; <label>:10:                                     ; preds = %4, %1
  %11 = call i32 @usleep(i32 100000)
  ret void
}

; Function Attrs: nounwind
declare dso_local i32 @pthread_mutex_lock(%union.pthread_mutex_t*) #2

; Function Attrs: nounwind
declare dso_local i32 @pthread_cond_broadcast(%union.pthread_cond_t*) #2

; Function Attrs: nounwind
declare dso_local i32 @pthread_mutex_unlock(%union.pthread_mutex_t*) #2

declare dso_local i32 @usleep(i32) #1

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @wpa_send_passphrase(i8*, %struct.WPA_data*, i32) #0 {
  %4 = getelementptr inbounds %struct.WPA_data, %struct.WPA_data* %1, i32 0, i32 8
  %5 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %4) #9
  %6 = getelementptr inbounds %struct.WPA_data, %struct.WPA_data* %1, i32 0, i32 5
  %7 = load i32, i32* %6, align 4
  %8 = add nsw i32 %7, 1
  %9 = getelementptr inbounds %struct.WPA_data, %struct.WPA_data* %1, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = srem i32 %8, %10
  %12 = getelementptr inbounds %struct.WPA_data, %struct.WPA_data* %1, i32 0, i32 4
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %11, %13
  br i1 %14, label %15, label %24

; <label>:15:                                     ; preds = %3
  %16 = icmp ne i32 %2, 0
  br i1 %16, label %17, label %21

; <label>:17:                                     ; preds = %15
  %18 = getelementptr inbounds %struct.WPA_data, %struct.WPA_data* %1, i32 0, i32 7
  %19 = getelementptr inbounds %struct.WPA_data, %struct.WPA_data* %1, i32 0, i32 8
  %20 = call i32 @pthread_cond_wait(%union.pthread_cond_t* %18, %union.pthread_mutex_t* %19)
  br label %24

; <label>:21:                                     ; preds = %15
  %22 = getelementptr inbounds %struct.WPA_data, %struct.WPA_data* %1, i32 0, i32 8
  %23 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %22) #9
  br label %41

; <label>:24:                                     ; preds = %17, %3
  %25 = getelementptr inbounds %struct.WPA_data, %struct.WPA_data* %1, i32 0, i32 3
  %26 = load i8*, i8** %25, align 8
  %27 = getelementptr inbounds %struct.WPA_data, %struct.WPA_data* %1, i32 0, i32 5
  %28 = load i32, i32* %27, align 4
  %29 = mul nsw i32 %28, 128
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds i8, i8* %26, i64 %30
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %31, i8* align 1 %0, i64 128, i1 false), !track !49
  %32 = getelementptr inbounds %struct.WPA_data, %struct.WPA_data* %1, i32 0, i32 5
  %33 = load i32, i32* %32, align 4
  %34 = add nsw i32 %33, 1
  %35 = getelementptr inbounds %struct.WPA_data, %struct.WPA_data* %1, i32 0, i32 2
  %36 = load i32, i32* %35, align 4
  %37 = srem i32 %34, %36
  %38 = getelementptr inbounds %struct.WPA_data, %struct.WPA_data* %1, i32 0, i32 5
  store i32 %37, i32* %38, align 4
  %39 = getelementptr inbounds %struct.WPA_data, %struct.WPA_data* %1, i32 0, i32 8
  %40 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %39) #9
  br label %41

; <label>:41:                                     ; preds = %24, %21
  %.0 = phi i32 [ 1, %24 ], [ 0, %21 ]
  ret i32 %.0
}

declare dso_local i32 @pthread_cond_wait(%union.pthread_cond_t*, %union.pthread_mutex_t*) #1

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @wpa_receive_passphrase(i8*, %struct.WPA_data*) #0 {
  %3 = getelementptr inbounds %struct.WPA_data, %struct.WPA_data* %1, i32 0, i32 8
  %4 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %3) #9
  %5 = getelementptr inbounds %struct.WPA_data, %struct.WPA_data* %1, i32 0, i32 4
  %6 = load i32, i32* %5, align 8
  %7 = getelementptr inbounds %struct.WPA_data, %struct.WPA_data* %1, i32 0, i32 5
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %6, %8
  br i1 %9, label %10, label %13

; <label>:10:                                     ; preds = %2
  %11 = getelementptr inbounds %struct.WPA_data, %struct.WPA_data* %1, i32 0, i32 8
  %12 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %11) #9
  br label %32

; <label>:13:                                     ; preds = %2
  %14 = getelementptr inbounds %struct.WPA_data, %struct.WPA_data* %1, i32 0, i32 3
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr inbounds %struct.WPA_data, %struct.WPA_data* %1, i32 0, i32 4
  %17 = load i32, i32* %16, align 8
  %18 = mul nsw i32 %17, 128
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds i8, i8* %15, i64 %19
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %0, i8* align 1 %20, i64 128, i1 false), !track !50
  %21 = getelementptr inbounds %struct.WPA_data, %struct.WPA_data* %1, i32 0, i32 4
  %22 = load i32, i32* %21, align 8
  %23 = add nsw i32 %22, 1
  %24 = getelementptr inbounds %struct.WPA_data, %struct.WPA_data* %1, i32 0, i32 2
  %25 = load i32, i32* %24, align 4
  %26 = srem i32 %23, %25
  %27 = getelementptr inbounds %struct.WPA_data, %struct.WPA_data* %1, i32 0, i32 4
  store i32 %26, i32* %27, align 8
  %28 = getelementptr inbounds %struct.WPA_data, %struct.WPA_data* %1, i32 0, i32 7
  %29 = call i32 @pthread_cond_signal(%union.pthread_cond_t* %28) #9
  %30 = getelementptr inbounds %struct.WPA_data, %struct.WPA_data* %1, i32 0, i32 8
  %31 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %30) #9
  br label %32

; <label>:32:                                     ; preds = %13, %10
  %.0 = phi i32 [ 0, %10 ], [ 1, %13 ]
  ret i32 %.0
}

; Function Attrs: nounwind
declare dso_local i32 @pthread_cond_signal(%union.pthread_cond_t*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @checkbssids(i8*) #0 {
  %2 = alloca i8*, align 8, !track !51
  %3 = icmp eq i8* %0, null
  br i1 %3, label %.loopexit, label %4

; <label>:4:                                      ; preds = %1
  %5 = call noalias i8* @strdup(i8* %0) #9, !track !52
  store i8* %5, i8** %2, align 8
  br label %6

; <label>:6:                                      ; preds = %283, %4
  %.02 = phi i32 [ 1, %4 ], [ %.13, %283 ]
  %.01 = phi i32 [ 0, %4 ], [ %10, %283 ]
  call void @unroll_loop(i32 25)
  %7 = call i8* @strsep(i8** %2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0)) #9
  %8 = icmp eq i8* %7, null
  br i1 %8, label %.loopexit.loopexit1, label %9

; <label>:9:                                      ; preds = %6
  %10 = add nuw nsw i32 %.01, 1
  %11 = call i64 @strlen(i8* %7) #10
  %12 = icmp ne i64 %11, 17
  br i1 %12, label %.loopexit.loopexit1, label %13

; <label>:13:                                     ; preds = %9
  %14 = getelementptr inbounds i8, i8* %7, i64 0
  %15 = load i8, i8* %14, align 1
  %16 = sext i8 %15 to i32
  %17 = icmp eq i32 %16, 88
  br i1 %17, label %28, label %18

; <label>:18:                                     ; preds = %13
  %19 = getelementptr inbounds i8, i8* %7, i64 0
  %20 = load i8, i8* %19, align 1
  %21 = sext i8 %20 to i32
  %22 = icmp eq i32 %21, 120
  br i1 %22, label %28, label %23

; <label>:23:                                     ; preds = %18
  %24 = getelementptr inbounds i8, i8* %7, i64 0
  %25 = load i8, i8* %24, align 1
  %26 = call i32 @hexCharToInt(i8 zeroext %25)
  %27 = icmp sgt i32 %26, -1
  br i1 %27, label %28, label %.loopexit.loopexit1

; <label>:28:                                     ; preds = %23, %18, %13
  %29 = getelementptr inbounds i8, i8* %7, i64 1
  %30 = load i8, i8* %29, align 1
  %31 = sext i8 %30 to i32
  %32 = icmp eq i32 %31, 88
  br i1 %32, label %43, label %33

; <label>:33:                                     ; preds = %28
  %34 = getelementptr inbounds i8, i8* %7, i64 1
  %35 = load i8, i8* %34, align 1
  %36 = sext i8 %35 to i32
  %37 = icmp eq i32 %36, 120
  br i1 %37, label %43, label %38

; <label>:38:                                     ; preds = %33
  %39 = getelementptr inbounds i8, i8* %7, i64 1
  %40 = load i8, i8* %39, align 1
  %41 = call i32 @hexCharToInt(i8 zeroext %40)
  %42 = icmp sgt i32 %41, -1
  br i1 %42, label %43, label %.loopexit.loopexit1

; <label>:43:                                     ; preds = %38, %33, %28
  %44 = getelementptr inbounds i8, i8* %7, i64 2
  %45 = load i8, i8* %44, align 1
  %46 = sext i8 %45 to i32
  %47 = icmp eq i32 %46, 95
  br i1 %47, label %58, label %48

; <label>:48:                                     ; preds = %43
  %49 = getelementptr inbounds i8, i8* %7, i64 2
  %50 = load i8, i8* %49, align 1
  %51 = sext i8 %50 to i32
  %52 = icmp eq i32 %51, 45
  br i1 %52, label %58, label %53

; <label>:53:                                     ; preds = %48
  %54 = getelementptr inbounds i8, i8* %7, i64 2
  %55 = load i8, i8* %54, align 1
  %56 = sext i8 %55 to i32
  %57 = icmp eq i32 %56, 58
  br i1 %57, label %58, label %.loopexit.loopexit1

; <label>:58:                                     ; preds = %53, %48, %43
  %59 = getelementptr inbounds i8, i8* %7, i64 3
  %60 = load i8, i8* %59, align 1
  %61 = sext i8 %60 to i32
  %62 = icmp eq i32 %61, 88
  br i1 %62, label %73, label %63

; <label>:63:                                     ; preds = %58
  %64 = getelementptr inbounds i8, i8* %7, i64 3
  %65 = load i8, i8* %64, align 1
  %66 = sext i8 %65 to i32
  %67 = icmp eq i32 %66, 120
  br i1 %67, label %73, label %68

; <label>:68:                                     ; preds = %63
  %69 = getelementptr inbounds i8, i8* %7, i64 3
  %70 = load i8, i8* %69, align 1
  %71 = call i32 @hexCharToInt(i8 zeroext %70)
  %72 = icmp sgt i32 %71, -1
  br i1 %72, label %73, label %.loopexit.loopexit1

; <label>:73:                                     ; preds = %68, %63, %58
  %74 = getelementptr inbounds i8, i8* %7, i64 4
  %75 = load i8, i8* %74, align 1
  %76 = sext i8 %75 to i32
  %77 = icmp eq i32 %76, 88
  br i1 %77, label %88, label %78

; <label>:78:                                     ; preds = %73
  %79 = getelementptr inbounds i8, i8* %7, i64 4
  %80 = load i8, i8* %79, align 1
  %81 = sext i8 %80 to i32
  %82 = icmp eq i32 %81, 120
  br i1 %82, label %88, label %83

; <label>:83:                                     ; preds = %78
  %84 = getelementptr inbounds i8, i8* %7, i64 4
  %85 = load i8, i8* %84, align 1
  %86 = call i32 @hexCharToInt(i8 zeroext %85)
  %87 = icmp sgt i32 %86, -1
  br i1 %87, label %88, label %.loopexit.loopexit1

; <label>:88:                                     ; preds = %83, %78, %73
  %89 = getelementptr inbounds i8, i8* %7, i64 5
  %90 = load i8, i8* %89, align 1
  %91 = sext i8 %90 to i32
  %92 = icmp eq i32 %91, 95
  br i1 %92, label %103, label %93

; <label>:93:                                     ; preds = %88
  %94 = getelementptr inbounds i8, i8* %7, i64 5
  %95 = load i8, i8* %94, align 1
  %96 = sext i8 %95 to i32
  %97 = icmp eq i32 %96, 45
  br i1 %97, label %103, label %98

; <label>:98:                                     ; preds = %93
  %99 = getelementptr inbounds i8, i8* %7, i64 5
  %100 = load i8, i8* %99, align 1
  %101 = sext i8 %100 to i32
  %102 = icmp eq i32 %101, 58
  br i1 %102, label %103, label %.loopexit.loopexit1

; <label>:103:                                    ; preds = %98, %93, %88
  %104 = getelementptr inbounds i8, i8* %7, i64 6
  %105 = load i8, i8* %104, align 1
  %106 = sext i8 %105 to i32
  %107 = icmp eq i32 %106, 88
  br i1 %107, label %118, label %108

; <label>:108:                                    ; preds = %103
  %109 = getelementptr inbounds i8, i8* %7, i64 6
  %110 = load i8, i8* %109, align 1
  %111 = sext i8 %110 to i32
  %112 = icmp eq i32 %111, 120
  br i1 %112, label %118, label %113

; <label>:113:                                    ; preds = %108
  %114 = getelementptr inbounds i8, i8* %7, i64 6
  %115 = load i8, i8* %114, align 1
  %116 = call i32 @hexCharToInt(i8 zeroext %115)
  %117 = icmp sgt i32 %116, -1
  br i1 %117, label %118, label %.loopexit.loopexit1

; <label>:118:                                    ; preds = %113, %108, %103
  %119 = getelementptr inbounds i8, i8* %7, i64 7
  %120 = load i8, i8* %119, align 1
  %121 = sext i8 %120 to i32
  %122 = icmp eq i32 %121, 88
  br i1 %122, label %133, label %123

; <label>:123:                                    ; preds = %118
  %124 = getelementptr inbounds i8, i8* %7, i64 7
  %125 = load i8, i8* %124, align 1
  %126 = sext i8 %125 to i32
  %127 = icmp eq i32 %126, 120
  br i1 %127, label %133, label %128

; <label>:128:                                    ; preds = %123
  %129 = getelementptr inbounds i8, i8* %7, i64 7
  %130 = load i8, i8* %129, align 1
  %131 = call i32 @hexCharToInt(i8 zeroext %130)
  %132 = icmp sgt i32 %131, -1
  br i1 %132, label %133, label %.loopexit.loopexit1

; <label>:133:                                    ; preds = %128, %123, %118
  %134 = getelementptr inbounds i8, i8* %7, i64 8
  %135 = load i8, i8* %134, align 1
  %136 = sext i8 %135 to i32
  %137 = icmp eq i32 %136, 95
  br i1 %137, label %148, label %138

; <label>:138:                                    ; preds = %133
  %139 = getelementptr inbounds i8, i8* %7, i64 8
  %140 = load i8, i8* %139, align 1
  %141 = sext i8 %140 to i32
  %142 = icmp eq i32 %141, 45
  br i1 %142, label %148, label %143

; <label>:143:                                    ; preds = %138
  %144 = getelementptr inbounds i8, i8* %7, i64 8
  %145 = load i8, i8* %144, align 1
  %146 = sext i8 %145 to i32
  %147 = icmp eq i32 %146, 58
  br i1 %147, label %148, label %.loopexit.loopexit1

; <label>:148:                                    ; preds = %143, %138, %133
  %149 = getelementptr inbounds i8, i8* %7, i64 9
  %150 = load i8, i8* %149, align 1
  %151 = sext i8 %150 to i32
  %152 = icmp eq i32 %151, 88
  br i1 %152, label %163, label %153

; <label>:153:                                    ; preds = %148
  %154 = getelementptr inbounds i8, i8* %7, i64 9
  %155 = load i8, i8* %154, align 1
  %156 = sext i8 %155 to i32
  %157 = icmp eq i32 %156, 120
  br i1 %157, label %163, label %158

; <label>:158:                                    ; preds = %153
  %159 = getelementptr inbounds i8, i8* %7, i64 9
  %160 = load i8, i8* %159, align 1
  %161 = call i32 @hexCharToInt(i8 zeroext %160)
  %162 = icmp sgt i32 %161, -1
  br i1 %162, label %163, label %.loopexit.loopexit1

; <label>:163:                                    ; preds = %158, %153, %148
  %164 = getelementptr inbounds i8, i8* %7, i64 10
  %165 = load i8, i8* %164, align 1
  %166 = sext i8 %165 to i32
  %167 = icmp eq i32 %166, 88
  br i1 %167, label %178, label %168

; <label>:168:                                    ; preds = %163
  %169 = getelementptr inbounds i8, i8* %7, i64 10
  %170 = load i8, i8* %169, align 1
  %171 = sext i8 %170 to i32
  %172 = icmp eq i32 %171, 120
  br i1 %172, label %178, label %173

; <label>:173:                                    ; preds = %168
  %174 = getelementptr inbounds i8, i8* %7, i64 10
  %175 = load i8, i8* %174, align 1
  %176 = call i32 @hexCharToInt(i8 zeroext %175)
  %177 = icmp sgt i32 %176, -1
  br i1 %177, label %178, label %.loopexit.loopexit1

; <label>:178:                                    ; preds = %173, %168, %163
  %179 = getelementptr inbounds i8, i8* %7, i64 11
  %180 = load i8, i8* %179, align 1
  %181 = sext i8 %180 to i32
  %182 = icmp eq i32 %181, 95
  br i1 %182, label %193, label %183

; <label>:183:                                    ; preds = %178
  %184 = getelementptr inbounds i8, i8* %7, i64 11
  %185 = load i8, i8* %184, align 1
  %186 = sext i8 %185 to i32
  %187 = icmp eq i32 %186, 45
  br i1 %187, label %193, label %188

; <label>:188:                                    ; preds = %183
  %189 = getelementptr inbounds i8, i8* %7, i64 11
  %190 = load i8, i8* %189, align 1
  %191 = sext i8 %190 to i32
  %192 = icmp eq i32 %191, 58
  br i1 %192, label %193, label %.loopexit.loopexit1

; <label>:193:                                    ; preds = %188, %183, %178
  %194 = getelementptr inbounds i8, i8* %7, i64 12
  %195 = load i8, i8* %194, align 1
  %196 = sext i8 %195 to i32
  %197 = icmp eq i32 %196, 88
  br i1 %197, label %208, label %198

; <label>:198:                                    ; preds = %193
  %199 = getelementptr inbounds i8, i8* %7, i64 12
  %200 = load i8, i8* %199, align 1
  %201 = sext i8 %200 to i32
  %202 = icmp eq i32 %201, 120
  br i1 %202, label %208, label %203

; <label>:203:                                    ; preds = %198
  %204 = getelementptr inbounds i8, i8* %7, i64 12
  %205 = load i8, i8* %204, align 1
  %206 = call i32 @hexCharToInt(i8 zeroext %205)
  %207 = icmp sgt i32 %206, -1
  br i1 %207, label %208, label %.loopexit.loopexit1

; <label>:208:                                    ; preds = %203, %198, %193
  %209 = getelementptr inbounds i8, i8* %7, i64 13
  %210 = load i8, i8* %209, align 1
  %211 = sext i8 %210 to i32
  %212 = icmp eq i32 %211, 88
  br i1 %212, label %223, label %213

; <label>:213:                                    ; preds = %208
  %214 = getelementptr inbounds i8, i8* %7, i64 13
  %215 = load i8, i8* %214, align 1
  %216 = sext i8 %215 to i32
  %217 = icmp eq i32 %216, 120
  br i1 %217, label %223, label %218

; <label>:218:                                    ; preds = %213
  %219 = getelementptr inbounds i8, i8* %7, i64 13
  %220 = load i8, i8* %219, align 1
  %221 = call i32 @hexCharToInt(i8 zeroext %220)
  %222 = icmp sgt i32 %221, -1
  br i1 %222, label %223, label %.loopexit.loopexit1

; <label>:223:                                    ; preds = %218, %213, %208
  %224 = getelementptr inbounds i8, i8* %7, i64 14
  %225 = load i8, i8* %224, align 1
  %226 = sext i8 %225 to i32
  %227 = icmp eq i32 %226, 95
  br i1 %227, label %238, label %228

; <label>:228:                                    ; preds = %223
  %229 = getelementptr inbounds i8, i8* %7, i64 14
  %230 = load i8, i8* %229, align 1
  %231 = sext i8 %230 to i32
  %232 = icmp eq i32 %231, 45
  br i1 %232, label %238, label %233

; <label>:233:                                    ; preds = %228
  %234 = getelementptr inbounds i8, i8* %7, i64 14
  %235 = load i8, i8* %234, align 1
  %236 = sext i8 %235 to i32
  %237 = icmp eq i32 %236, 58
  br i1 %237, label %238, label %.loopexit.loopexit1

; <label>:238:                                    ; preds = %233, %228, %223
  %239 = getelementptr inbounds i8, i8* %7, i64 15
  %240 = load i8, i8* %239, align 1
  %241 = sext i8 %240 to i32
  %242 = icmp eq i32 %241, 88
  br i1 %242, label %253, label %243

; <label>:243:                                    ; preds = %238
  %244 = getelementptr inbounds i8, i8* %7, i64 15
  %245 = load i8, i8* %244, align 1
  %246 = sext i8 %245 to i32
  %247 = icmp eq i32 %246, 120
  br i1 %247, label %253, label %248

; <label>:248:                                    ; preds = %243
  %249 = getelementptr inbounds i8, i8* %7, i64 15
  %250 = load i8, i8* %249, align 1
  %251 = call i32 @hexCharToInt(i8 zeroext %250)
  %252 = icmp sgt i32 %251, -1
  br i1 %252, label %253, label %.loopexit.loopexit1

; <label>:253:                                    ; preds = %248, %243, %238
  %254 = getelementptr inbounds i8, i8* %7, i64 16
  %255 = load i8, i8* %254, align 1
  %256 = sext i8 %255 to i32
  %257 = icmp eq i32 %256, 88
  br i1 %257, label %268, label %258

; <label>:258:                                    ; preds = %253
  %259 = getelementptr inbounds i8, i8* %7, i64 16
  %260 = load i8, i8* %259, align 1
  %261 = sext i8 %260 to i32
  %262 = icmp eq i32 %261, 120
  br i1 %262, label %268, label %263

; <label>:263:                                    ; preds = %258
  %264 = getelementptr inbounds i8, i8* %7, i64 16
  %265 = load i8, i8* %264, align 1
  %266 = call i32 @hexCharToInt(i8 zeroext %265)
  %267 = icmp sgt i32 %266, -1
  br i1 %267, label %268, label %.loopexit.loopexit1

; <label>:268:                                    ; preds = %263, %258, %253
  %269 = icmp ne i32 %.02, 0
  br i1 %269, label %.preheader.preheader, label %283

.preheader.preheader:                             ; preds = %268
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %277
  %indvars.iv = phi i64 [ %indvars.iv.next, %277 ], [ 0, %.preheader.preheader ]
  call void @unroll_loop(i32 26)
  %scevgep = getelementptr i8, i8* %7, i64 %indvars.iv
  %270 = load i8, i8* %scevgep, align 1
  %271 = sext i8 %270 to i32
  %272 = icmp eq i32 %271, 88
  br i1 %272, label %.loopexit.loopexit, label %273

; <label>:273:                                    ; preds = %.preheader
  %scevgep3 = getelementptr i8, i8* %7, i64 %indvars.iv
  %274 = load i8, i8* %scevgep3, align 1
  %275 = sext i8 %274 to i32
  %276 = icmp eq i32 %275, 120
  br i1 %276, label %.loopexit.loopexit, label %277

; <label>:277:                                    ; preds = %273
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %278 = icmp ult i64 %indvars.iv.next, 17
  br i1 %278, label %.preheader, label %279

; <label>:279:                                    ; preds = %277
  %280 = call noalias i8* @malloc(i64 1) #9, !track !53
  store i8* %280, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 35), align 8
  %281 = load i8*, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 35), align 8
  %282 = call i32 @getmac(i8* %7, i32 1, i8* %281)
  br label %283

; <label>:283:                                    ; preds = %268, %279
  %.13 = phi i32 [ 0, %279 ], [ %.02, %268 ]
  %284 = load i8*, i8** %2, align 8
  %285 = icmp ne i8* %284, null
  br i1 %285, label %6, label %.loopexit.loopexit1

.loopexit.loopexit:                               ; preds = %273, %.preheader
  %.0.ph = phi i32 [ -1, %273 ], [ -1, %.preheader ]
  br label %.loopexit

.loopexit.loopexit1:                              ; preds = %9, %23, %38, %53, %68, %83, %98, %113, %128, %143, %158, %173, %188, %203, %218, %233, %248, %263, %283, %6
  %.0.ph2 = phi i32 [ -1, %9 ], [ -1, %23 ], [ -1, %38 ], [ -1, %53 ], [ -1, %68 ], [ -1, %83 ], [ -1, %98 ], [ -1, %113 ], [ -1, %128 ], [ -1, %143 ], [ -1, %158 ], [ -1, %173 ], [ -1, %188 ], [ -1, %203 ], [ -1, %218 ], [ -1, %233 ], [ -1, %248 ], [ -1, %263 ], [ %.01, %6 ], [ %10, %283 ]
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit.loopexit1, %.loopexit.loopexit, %1
  %.0 = phi i32 [ -1, %1 ], [ %.0.ph, %.loopexit.loopexit ], [ %.0.ph2, %.loopexit.loopexit1 ]
  ret i32 %.0
}

; Function Attrs: nounwind
declare dso_local noalias i8* @strdup(i8*) #2

; Function Attrs: nounwind
declare dso_local i8* @strsep(i8**, i8*) #2

; Function Attrs: nounwind
declare dso_local noalias i8* @malloc(i64) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @mergebssids(i8*, i8*) #0 {
  %3 = alloca i8*, align 8, !track !54
  store i8* null, i8** %3, align 8
  %4 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 35
  %5 = load i8*, i8** %4, align 8
  %6 = call i32 @memcmp(i8* %5, i8* %1, i64 6) #10
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %127, label %8

; <label>:8:                                      ; preds = %2
  %9 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 36
  %10 = load %struct.mergeBSSID*, %struct.mergeBSSID** %9, align 8
  %11 = icmp ne %struct.mergeBSSID* %10, null
  br i1 %11, label %.lr.ph.preheader, label %._crit_edge

.lr.ph.preheader:                                 ; preds = %8
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %26
  %.0410 = phi %struct.mergeBSSID* [ %28, %26 ], [ %10, %.lr.ph.preheader ]
  call void @unroll_loop(i32 27)
  %12 = getelementptr inbounds %struct.mergeBSSID, %struct.mergeBSSID* %.0410, i32 0, i32 0
  %13 = getelementptr inbounds [6 x i8], [6 x i8]* %12, i32 0, i32 0
  %14 = call i32 @memcmp(i8* %13, i8* %1, i64 6) #10
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %26

; <label>:16:                                     ; preds = %.lr.ph
  %.04.lcssa7 = phi %struct.mergeBSSID* [ %.0410, %.lr.ph ]
  %17 = getelementptr inbounds %struct.mergeBSSID, %struct.mergeBSSID* %.04.lcssa7, i32 0, i32 2
  %18 = load i32, i32* %17, align 8
  %19 = icmp ne i32 %18, 0
  br i1 %19, label %20, label %23

; <label>:20:                                     ; preds = %16
  %21 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 35
  %22 = load i8*, i8** %21, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %22, i64 6, i1 false), !track !55
  br label %23

; <label>:23:                                     ; preds = %20, %16
  %24 = getelementptr inbounds %struct.mergeBSSID, %struct.mergeBSSID* %.04.lcssa7, i32 0, i32 2
  %25 = load i32, i32* %24, align 8
  br label %127

; <label>:26:                                     ; preds = %.lr.ph
  %27 = getelementptr inbounds %struct.mergeBSSID, %struct.mergeBSSID* %.0410, i32 0, i32 3
  %28 = load %struct.mergeBSSID*, %struct.mergeBSSID** %27, align 8
  %29 = icmp ne %struct.mergeBSSID* %28, null
  br i1 %29, label %.lr.ph, label %._crit_edge.loopexit

._crit_edge.loopexit:                             ; preds = %26
  %.03.lcssa.ph = phi %struct.mergeBSSID* [ %.0410, %26 ]
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %8
  %.03.lcssa = phi %struct.mergeBSSID* [ null, %8 ], [ %.03.lcssa.ph, %._crit_edge.loopexit ]
  %30 = call noalias i8* @malloc(i64 18) #9
  %31 = icmp ne i8* %30, null
  br i1 %31, label %34, label %32

; <label>:32:                                     ; preds = %._crit_edge
  %33 = getelementptr [14 x i8], [14 x i8]* @.str.7, i32 0, i32 0
  call void @perror(i8* %33)
  br label %127

; <label>:34:                                     ; preds = %._crit_edge
  %35 = getelementptr inbounds i8, i8* %1, i64 0
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i32
  %38 = getelementptr inbounds i8, i8* %1, i64 1
  %39 = load i8, i8* %38, align 1
  %40 = zext i8 %39 to i32
  %41 = getelementptr inbounds i8, i8* %1, i64 2
  %42 = load i8, i8* %41, align 1
  %43 = zext i8 %42 to i32
  %44 = getelementptr inbounds i8, i8* %1, i64 3
  %45 = load i8, i8* %44, align 1
  %46 = zext i8 %45 to i32
  %47 = getelementptr inbounds i8, i8* %1, i64 4
  %48 = load i8, i8* %47, align 1
  %49 = zext i8 %48 to i32
  %50 = getelementptr inbounds i8, i8* %1, i64 5
  %51 = load i8, i8* %50, align 1
  %52 = zext i8 %51 to i32
  %53 = getelementptr [30 x i8], [30 x i8]* @.str.8, i32 0, i32 0
  %54 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %30, i64 18, i8* %53, i32 %37, i32 %40, i32 %43, i32 %46, i32 %49, i32 %52) #9
  %55 = getelementptr inbounds i8, i8* %30, i64 17
  store i8 0, i8* %55, align 1
  %56 = call noalias i8* @strdup(i8* %0) #9, !track !56
  store i8* %56, i8** %3, align 8
  %57 = getelementptr [2 x i8], [2 x i8]* @.str.6, i32 0, i32 0
  %58 = call i8* @strsep(i8** %3, i8* %57) #9
  br label %59

; <label>:59:                                     ; preds = %91, %34
  call void @unroll_loop(i32 28)
  %60 = call i8* @strsep(i8** %3, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0)) #9
  %61 = icmp eq i8* %60, null
  br i1 %61, label %.loopexit8, label %.preheader.preheader

.preheader.preheader:                             ; preds = %59
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %88
  %indvars.iv = phi i64 [ %indvars.iv.next, %88 ], [ 0, %.preheader.preheader ]
  call void @unroll_loop(i32 29)
  %scevgep = getelementptr i8, i8* %60, i64 %indvars.iv
  %62 = load i8, i8* %scevgep, align 1
  %63 = sext i8 %62 to i32
  %64 = icmp eq i32 %63, 88
  br i1 %64, label %88, label %65

; <label>:65:                                     ; preds = %.preheader
  %scevgep1 = getelementptr i8, i8* %60, i64 %indvars.iv
  %66 = load i8, i8* %scevgep1, align 1
  %67 = sext i8 %66 to i32
  %68 = icmp eq i32 %67, 120
  br i1 %68, label %88, label %69

; <label>:69:                                     ; preds = %65
  %scevgep2 = getelementptr i8, i8* %60, i64 %indvars.iv
  %70 = load i8, i8* %scevgep2, align 1
  %71 = sext i8 %70 to i32
  %72 = icmp eq i32 %71, 95
  br i1 %72, label %88, label %73

; <label>:73:                                     ; preds = %69
  %scevgep3 = getelementptr i8, i8* %60, i64 %indvars.iv
  %74 = load i8, i8* %scevgep3, align 1
  %75 = sext i8 %74 to i32
  %76 = icmp eq i32 %75, 45
  br i1 %76, label %88, label %77

; <label>:77:                                     ; preds = %73
  %scevgep4 = getelementptr i8, i8* %60, i64 %indvars.iv
  %78 = load i8, i8* %scevgep4, align 1
  %79 = sext i8 %78 to i32
  %80 = icmp eq i32 %79, 58
  br i1 %80, label %88, label %81

; <label>:81:                                     ; preds = %77
  %scevgep5 = getelementptr i8, i8* %60, i64 %indvars.iv
  %82 = load i8, i8* %scevgep5, align 1
  %83 = sext i8 %82 to i32
  %84 = call i32 @toupper(i32 %83) #10
  %scevgep6 = getelementptr i8, i8* %30, i64 %indvars.iv
  %85 = load i8, i8* %scevgep6, align 1
  %86 = sext i8 %85 to i32
  %87 = icmp ne i32 %84, %86
  br i1 %87, label %.loopexit, label %88

; <label>:88:                                     ; preds = %81, %.preheader, %65, %69, %73, %77
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %89 = icmp ult i64 %indvars.iv.next, 17
  br i1 %89, label %.preheader, label %.loopexit

.loopexit:                                        ; preds = %88, %81
  %.05 = phi i32 [ 1, %81 ], [ 0, %88 ]
  %90 = icmp eq i32 %.05, 0
  br i1 %90, label %.loopexit8, label %91

; <label>:91:                                     ; preds = %.loopexit
  %92 = load i8*, i8** %3, align 8
  %93 = icmp ne i8* %92, null
  br i1 %93, label %59, label %.loopexit8

.loopexit8:                                       ; preds = %91, %.loopexit, %59
  %.01 = phi i32 [ 0, %59 ], [ 1, %.loopexit ], [ 0, %91 ]
  %94 = icmp ne i8* %30, null
  br i1 %94, label %95, label %96

; <label>:95:                                     ; preds = %.loopexit8
  call void @free(i8* %30) #9
  br label %96

; <label>:96:                                     ; preds = %95, %.loopexit8
  %97 = icmp ne i8* %56, null
  br i1 %97, label %98, label %99

; <label>:98:                                     ; preds = %96
  call void @free(i8* %56) #9
  br label %99

; <label>:99:                                     ; preds = %98, %96
  %100 = call noalias i8* @malloc(i64 24) #9, !track !57
  %101 = bitcast i8* %100 to %struct.mergeBSSID*
  %102 = icmp ne %struct.mergeBSSID* %101, null
  br i1 %102, label %105, label %103

; <label>:103:                                    ; preds = %99
  %104 = getelementptr [14 x i8], [14 x i8]* @.str.7, i32 0, i32 0
  call void @perror(i8* %104)
  br label %127

; <label>:105:                                    ; preds = %99
  %106 = getelementptr inbounds %struct.mergeBSSID, %struct.mergeBSSID* %101, i32 0, i32 2
  store i32 %.01, i32* %106, align 8
  %107 = getelementptr inbounds %struct.mergeBSSID, %struct.mergeBSSID* %101, i32 0, i32 3
  store %struct.mergeBSSID* null, %struct.mergeBSSID** %107, align 8
  %108 = getelementptr inbounds %struct.mergeBSSID, %struct.mergeBSSID* %101, i32 0, i32 0
  %109 = getelementptr inbounds [6 x i8], [6 x i8]* %108, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %109, i8* align 1 %1, i64 6, i1 false), !track !58
  %110 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 36
  %111 = load %struct.mergeBSSID*, %struct.mergeBSSID** %110, align 8
  %112 = icmp eq %struct.mergeBSSID* %111, null
  br i1 %112, label %113, label %115

; <label>:113:                                    ; preds = %105
  %114 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 36
  store %struct.mergeBSSID* %101, %struct.mergeBSSID** %114, align 8
  br label %117

; <label>:115:                                    ; preds = %105
  %116 = getelementptr inbounds %struct.mergeBSSID, %struct.mergeBSSID* %.03.lcssa, i32 0, i32 3
  store %struct.mergeBSSID* %101, %struct.mergeBSSID** %116, align 8
  br label %117

; <label>:117:                                    ; preds = %115, %113
  %118 = getelementptr inbounds %struct.mergeBSSID, %struct.mergeBSSID* %101, i32 0, i32 2
  %119 = load i32, i32* %118, align 8
  %120 = icmp ne i32 %119, 0
  br i1 %120, label %121, label %124

; <label>:121:                                    ; preds = %117
  %122 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 35
  %123 = load i8*, i8** %122, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %123, i64 6, i1 false), !track !59
  br label %124

; <label>:124:                                    ; preds = %121, %117
  %125 = getelementptr inbounds %struct.mergeBSSID, %struct.mergeBSSID* %101, i32 0, i32 2
  %126 = load i32, i32* %125, align 8
  br label %127

; <label>:127:                                    ; preds = %2, %124, %103, %32, %23
  %.0 = phi i32 [ %25, %23 ], [ %126, %124 ], [ -1, %103 ], [ -1, %32 ], [ 1, %2 ]
  ret i32 %.0
}

; Function Attrs: nounwind readonly
declare dso_local i32 @memcmp(i8*, i8*, i64) #3

declare dso_local void @perror(i8*) #1

; Function Attrs: nounwind
declare dso_local i32 @snprintf(i8*, i64, i8*, ...) #2

; Function Attrs: nounwind readonly
declare dso_local i32 @toupper(i32) #3

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @atomic_read(%struct.read_buf*, i32, i32, i8*) #0 {
  %5 = load i32, i32* @close_aircrack, align 4
  %6 = icmp ne i32 %5, 0
  br i1 %6, label %107, label %7

; <label>:7:                                      ; preds = %4
  %8 = getelementptr inbounds %struct.read_buf, %struct.read_buf* %0, i32 0, i32 2
  %9 = load i8*, i8** %8, align 8
  %10 = icmp eq i8* %9, null
  br i1 %10, label %11, label %26

; <label>:11:                                     ; preds = %7
  %12 = call noalias i8* @malloc(i64 65536) #9, !track !60
  %13 = getelementptr inbounds %struct.read_buf, %struct.read_buf* %0, i32 0, i32 2
  store i8* %12, i8** %13, align 8
  %14 = call noalias i8* @malloc(i64 65536) #9, !track !61
  %15 = getelementptr inbounds %struct.read_buf, %struct.read_buf* %0, i32 0, i32 3
  store i8* %14, i8** %15, align 8
  %16 = getelementptr inbounds %struct.read_buf, %struct.read_buf* %0, i32 0, i32 2
  %17 = load i8*, i8** %16, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %107, label %19

; <label>:19:                                     ; preds = %11
  %20 = getelementptr inbounds %struct.read_buf, %struct.read_buf* %0, i32 0, i32 3
  %21 = load i8*, i8** %20, align 8
  %22 = icmp eq i8* %21, null
  br i1 %22, label %107, label %23

; <label>:23:                                     ; preds = %19
  %24 = getelementptr inbounds %struct.read_buf, %struct.read_buf* %0, i32 0, i32 0
  store i32 0, i32* %24, align 8
  %25 = getelementptr inbounds %struct.read_buf, %struct.read_buf* %0, i32 0, i32 1
  store i32 0, i32* %25, align 4
  br label %26

; <label>:26:                                     ; preds = %23, %7
  %27 = getelementptr inbounds %struct.read_buf, %struct.read_buf* %0, i32 0, i32 0
  %28 = load i32, i32* %27, align 8
  %29 = sub nsw i32 65536, %28
  %30 = icmp sgt i32 %2, %29
  br i1 %30, label %31, label %56

; <label>:31:                                     ; preds = %26
  %32 = getelementptr inbounds %struct.read_buf, %struct.read_buf* %0, i32 0, i32 0
  %33 = load i32, i32* %32, align 8
  %34 = getelementptr inbounds %struct.read_buf, %struct.read_buf* %0, i32 0, i32 1
  %35 = load i32, i32* %34, align 4
  %36 = sub nsw i32 %35, %33
  store i32 %36, i32* %34, align 4
  %37 = getelementptr inbounds %struct.read_buf, %struct.read_buf* %0, i32 0, i32 3
  %38 = load i8*, i8** %37, align 8
  %39 = getelementptr inbounds %struct.read_buf, %struct.read_buf* %0, i32 0, i32 2
  %40 = load i8*, i8** %39, align 8
  %41 = getelementptr inbounds %struct.read_buf, %struct.read_buf* %0, i32 0, i32 0
  %42 = load i32, i32* %41, align 8
  %43 = sext i32 %42 to i64
  %44 = getelementptr i8, i8* %40, i64 %43
  %45 = getelementptr inbounds %struct.read_buf, %struct.read_buf* %0, i32 0, i32 1
  %46 = load i32, i32* %45, align 4
  %47 = sext i32 %46 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %38, i8* align 1 %44, i64 %47, i1 false), !track !62
  %48 = getelementptr inbounds %struct.read_buf, %struct.read_buf* %0, i32 0, i32 2
  %49 = load i8*, i8** %48, align 8
  %50 = getelementptr inbounds %struct.read_buf, %struct.read_buf* %0, i32 0, i32 3
  %51 = load i8*, i8** %50, align 8
  %52 = getelementptr inbounds %struct.read_buf, %struct.read_buf* %0, i32 0, i32 1
  %53 = load i32, i32* %52, align 4
  %54 = sext i32 %53 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %49, i8* align 1 %51, i64 %54, i1 false), !track !63
  %55 = getelementptr inbounds %struct.read_buf, %struct.read_buf* %0, i32 0, i32 0
  store i32 0, i32* %55, align 8
  br label %56

; <label>:56:                                     ; preds = %31, %26
  %57 = getelementptr inbounds %struct.read_buf, %struct.read_buf* %0, i32 0, i32 1
  %58 = load i32, i32* %57, align 4
  %59 = getelementptr inbounds %struct.read_buf, %struct.read_buf* %0, i32 0, i32 0
  %60 = load i32, i32* %59, align 8
  %61 = sub nsw i32 %58, %60
  %62 = icmp sge i32 %61, %2
  %63 = getelementptr inbounds %struct.read_buf, %struct.read_buf* %0, i32 0, i32 2
  %64 = load i8*, i8** %63, align 8
  br i1 %62, label %65, label %74

; <label>:65:                                     ; preds = %56
  %66 = getelementptr inbounds %struct.read_buf, %struct.read_buf* %0, i32 0, i32 0
  %67 = load i32, i32* %66, align 8
  %68 = sext i32 %67 to i64
  %69 = getelementptr i8, i8* %64, i64 %68
  %70 = sext i32 %2 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %3, i8* align 1 %69, i64 %70, i1 false), !track !64
  %71 = getelementptr inbounds %struct.read_buf, %struct.read_buf* %0, i32 0, i32 0
  %72 = load i32, i32* %71, align 8
  %73 = add nsw i32 %72, %2
  store i32 %73, i32* %71, align 8
  br label %107

; <label>:74:                                     ; preds = %56
  %75 = getelementptr inbounds %struct.read_buf, %struct.read_buf* %0, i32 0, i32 1
  %76 = load i32, i32* %75, align 4
  %77 = sext i32 %76 to i64
  %78 = getelementptr i8, i8* %64, i64 %77
  %79 = getelementptr inbounds %struct.read_buf, %struct.read_buf* %0, i32 0, i32 1
  %80 = load i32, i32* %79, align 4
  %81 = sub nsw i32 65536, %80
  %82 = sext i32 %81 to i64
  %83 = call i64 @read(i32 %1, i8* %78, i64 %82)
  %84 = trunc i64 %83 to i32
  %85 = icmp sle i32 %84, 0
  br i1 %85, label %107, label %86

; <label>:86:                                     ; preds = %74
  %87 = getelementptr inbounds %struct.read_buf, %struct.read_buf* %0, i32 0, i32 1
  %88 = load i32, i32* %87, align 4
  %89 = add nsw i32 %88, %84
  store i32 %89, i32* %87, align 4
  %90 = getelementptr inbounds %struct.read_buf, %struct.read_buf* %0, i32 0, i32 1
  %91 = load i32, i32* %90, align 4
  %92 = getelementptr inbounds %struct.read_buf, %struct.read_buf* %0, i32 0, i32 0
  %93 = load i32, i32* %92, align 8
  %94 = sub nsw i32 %91, %93
  %95 = icmp sge i32 %94, %2
  br i1 %95, label %96, label %107

; <label>:96:                                     ; preds = %86
  %97 = getelementptr inbounds %struct.read_buf, %struct.read_buf* %0, i32 0, i32 2
  %98 = load i8*, i8** %97, align 8
  %99 = getelementptr inbounds %struct.read_buf, %struct.read_buf* %0, i32 0, i32 0
  %100 = load i32, i32* %99, align 8
  %101 = sext i32 %100 to i64
  %102 = getelementptr i8, i8* %98, i64 %101
  %103 = sext i32 %2 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %3, i8* align 1 %102, i64 %103, i1 false), !track !65
  %104 = getelementptr inbounds %struct.read_buf, %struct.read_buf* %0, i32 0, i32 0
  %105 = load i32, i32* %104, align 8
  %106 = add nsw i32 %105, %2
  store i32 %106, i32* %104, align 8
  br label %107

; <label>:107:                                    ; preds = %86, %74, %11, %19, %4, %96, %65
  %.0 = phi i32 [ 1, %65 ], [ 1, %96 ], [ 100000, %4 ], [ 0, %19 ], [ 0, %11 ], [ 0, %74 ], [ 0, %86 ]
  ret i32 %.0
}

declare dso_local i64 @read(i32, i8*, i64) #1

; Function Attrs: noinline nounwind uwtable
define dso_local void @read_thread(i8*) #0 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.read_buf, align 8, !track !66
  %4 = alloca [6 x i8], align 1, !track !67
  %5 = alloca [6 x i8], align 1, !track !68
  %6 = alloca [6 x i8], align 1, !track !69
  %7 = alloca [16 x i32], align 16, !track !70
  %8 = alloca %struct.ivs2_pkthdr, align 2, !track !71
  %9 = alloca %struct.ivs2_filehdr, align 2, !track !72
  %10 = alloca %struct.pcap_pkthdr, align 4, !track !73
  %11 = alloca %struct.pcap_file_header, align 4, !track !74
  %12 = alloca [2048 x i8], align 16, !track !75
  %13 = alloca i32, align 4
  %14 = alloca [16 x i32], align 16
  store i32 0, i32* %2, align 4
  %15 = call void (i32)* @signal(i32 2, void (i32)* @sighandler) #9
  %16 = bitcast %struct.read_buf* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 24, i1 false)
  %17 = bitcast %struct.pcap_file_header* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %17, i8 0, i64 24, i1 false)
  %18 = call noalias i8* @malloc(i64 65536) #9, !track !76
  %19 = icmp eq i8* %18, null
  br i1 %19, label %20, label %22

; <label>:20:                                     ; preds = %1
  %21 = getelementptr [14 x i8], [14 x i8]* @.str.7, i32 0, i32 0
  call void @perror(i8* %21)
  br label %._crit_edge87

; <label>:22:                                     ; preds = %1
  %23 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 6
  %24 = load i32, i32* %23, align 8
  %25 = icmp ne i32 %24, 0
  br i1 %25, label %29, label %26

; <label>:26:                                     ; preds = %22
  %27 = getelementptr [12 x i8], [12 x i8]* @.str.9, i32 0, i32 0
  %28 = call i32 (i8*, ...) @printf(i8* %27, i8* %0)
  br label %29

; <label>:29:                                     ; preds = %26, %22
  %30 = getelementptr [2 x i8], [2 x i8]* @.str.10, i32 0, i32 0
  %31 = call i32 @strcmp(i8* %0, i8* %30) #10
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %38, label %33

; <label>:33:                                     ; preds = %29
  %34 = call i32 (i8*, i32, ...) @open64(i8* %0, i32 0)
  %35 = icmp slt i32 %34, 0
  br i1 %35, label %36, label %38

; <label>:36:                                     ; preds = %33
  %37 = getelementptr [12 x i8], [12 x i8]* @.str.11, i32 0, i32 0
  call void @perror(i8* %37)
  br label %._crit_edge87

; <label>:38:                                     ; preds = %33, %29
  %.01 = phi i32 [ 0, %29 ], [ %34, %33 ]
  %39 = bitcast %struct.pcap_file_header* %11 to i8*
  %40 = call i32 @atomic_read(%struct.read_buf* %3, i32 %.01, i32 4, i8* %39)
  %41 = icmp ne i32 %40, 0
  br i1 %41, label %44, label %42

; <label>:42:                                     ; preds = %38
  %43 = getelementptr [25 x i8], [25 x i8]* @.str.12, i32 0, i32 0
  call void @perror(i8* %43)
  br label %._crit_edge87

; <label>:44:                                     ; preds = %38
  %45 = bitcast %struct.pcap_file_header* %11 to i8*
  %46 = getelementptr [5 x i8], [5 x i8]* @.str.13, i32 0, i32 0
  %47 = call i32 @memcmp(i8* %45, i8* %46, i64 4) #10
  %48 = icmp ne i32 %47, 0
  br i1 %48, label %49, label %118

; <label>:49:                                     ; preds = %44
  %50 = bitcast %struct.pcap_file_header* %11 to i8*
  %51 = getelementptr [5 x i8], [5 x i8]* @.str.14, i32 0, i32 0
  %52 = call i32 @memcmp(i8* %50, i8* %51, i64 4) #10
  %53 = icmp ne i32 %52, 0
  br i1 %53, label %54, label %118

; <label>:54:                                     ; preds = %49
  %55 = getelementptr inbounds %struct.pcap_file_header, %struct.pcap_file_header* %11, i32 0, i32 0
  %56 = load i32, i32* %55, align 4
  %57 = icmp ne i32 %56, -1582119980
  br i1 %57, label %58, label %66

; <label>:58:                                     ; preds = %54
  %59 = getelementptr inbounds %struct.pcap_file_header, %struct.pcap_file_header* %11, i32 0, i32 0
  %60 = load i32, i32* %59, align 4
  %61 = icmp ne i32 %60, -725372255
  br i1 %61, label %62, label %66

; <label>:62:                                     ; preds = %58
  %63 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %64 = getelementptr [51 x i8], [51 x i8]* @.str.15, i32 0, i32 0
  %65 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %63, i8* %64)
  br label %._crit_edge87

; <label>:66:                                     ; preds = %58, %54
  %67 = bitcast %struct.pcap_file_header* %11 to i8*
  %68 = getelementptr inbounds i8, i8* %67, i64 4
  %69 = call i32 @atomic_read(%struct.read_buf* %3, i32 %.01, i32 20, i8* %68)
  %70 = icmp ne i32 %69, 0
  br i1 %70, label %73, label %71

; <label>:71:                                     ; preds = %66
  %72 = getelementptr [25 x i8], [25 x i8]* @.str.12, i32 0, i32 0
  call void @perror(i8* %72)
  br label %._crit_edge87

; <label>:73:                                     ; preds = %66
  %74 = getelementptr inbounds %struct.pcap_file_header, %struct.pcap_file_header* %11, i32 0, i32 0
  %75 = load i32, i32* %74, align 4
  %76 = icmp eq i32 %75, -725372255
  br i1 %76, label %77, label %98

; <label>:77:                                     ; preds = %73
  %78 = getelementptr inbounds %struct.pcap_file_header, %struct.pcap_file_header* %11, i32 0, i32 6
  %79 = load i32, i32* %78, align 4
  %80 = lshr i32 %79, 24
  %81 = and i32 %80, 255
  %82 = getelementptr inbounds %struct.pcap_file_header, %struct.pcap_file_header* %11, i32 0, i32 6
  %83 = load i32, i32* %82, align 4
  %84 = lshr i32 %83, 8
  %85 = and i32 %84, 65280
  %86 = or i32 %81, %85
  %87 = getelementptr inbounds %struct.pcap_file_header, %struct.pcap_file_header* %11, i32 0, i32 6
  %88 = load i32, i32* %87, align 4
  %89 = shl i32 %88, 8
  %90 = and i32 %89, 16711680
  %91 = or i32 %86, %90
  %92 = getelementptr inbounds %struct.pcap_file_header, %struct.pcap_file_header* %11, i32 0, i32 6
  %93 = load i32, i32* %92, align 4
  %94 = shl i32 %93, 24
  %95 = and i32 %94, -16777216
  %96 = or i32 %91, %95
  %97 = getelementptr inbounds %struct.pcap_file_header, %struct.pcap_file_header* %11, i32 0, i32 6
  store i32 %96, i32* %97, align 4
  br label %98

; <label>:98:                                     ; preds = %77, %73
  %99 = getelementptr inbounds %struct.pcap_file_header, %struct.pcap_file_header* %11, i32 0, i32 6
  %100 = load i32, i32* %99, align 4
  %101 = icmp ne i32 %100, 105
  br i1 %101, label %102, label %153

; <label>:102:                                    ; preds = %98
  %103 = getelementptr inbounds %struct.pcap_file_header, %struct.pcap_file_header* %11, i32 0, i32 6
  %104 = load i32, i32* %103, align 4
  %105 = icmp ne i32 %104, 119
  br i1 %105, label %106, label %153

; <label>:106:                                    ; preds = %102
  %107 = getelementptr inbounds %struct.pcap_file_header, %struct.pcap_file_header* %11, i32 0, i32 6
  %108 = load i32, i32* %107, align 4
  %109 = icmp ne i32 %108, 127
  br i1 %109, label %110, label %153

; <label>:110:                                    ; preds = %106
  %111 = getelementptr inbounds %struct.pcap_file_header, %struct.pcap_file_header* %11, i32 0, i32 6
  %112 = load i32, i32* %111, align 4
  %113 = icmp ne i32 %112, 192
  br i1 %113, label %114, label %153

; <label>:114:                                    ; preds = %110
  %115 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %116 = getelementptr [55 x i8], [55 x i8]* @.str.16, i32 0, i32 0
  %117 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %115, i8* %116)
  br label %._crit_edge87

; <label>:118:                                    ; preds = %49, %44
  %119 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 38
  %120 = load i32, i32* %119, align 8
  %121 = icmp ne i32 %120, 0
  br i1 %121, label %122, label %124

; <label>:122:                                    ; preds = %118
  %123 = getelementptr [37 x i8], [37 x i8]* @.str.17, i32 0, i32 0
  call void (i32, i8*, ...) @errx(i32 1, i8* %123) #12
  unreachable

; <label>:124:                                    ; preds = %118
  %125 = bitcast %struct.pcap_file_header* %11 to i8*
  %126 = getelementptr [5 x i8], [5 x i8]* @.str.14, i32 0, i32 0
  %127 = call i32 @memcmp(i8* %125, i8* %126, i64 4) #10
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %129, label %147

; <label>:129:                                    ; preds = %124
  %130 = bitcast %struct.ivs2_filehdr* %9 to i8*
  %131 = call i32 @atomic_read(%struct.read_buf* %3, i32 %.01, i32 2, i8* %130)
  %132 = icmp ne i32 %131, 0
  br i1 %132, label %135, label %133

; <label>:133:                                    ; preds = %129
  %134 = getelementptr [25 x i8], [25 x i8]* @.str.12, i32 0, i32 0
  call void @perror(i8* %134)
  br label %._crit_edge87

; <label>:135:                                    ; preds = %129
  %136 = getelementptr inbounds %struct.ivs2_filehdr, %struct.ivs2_filehdr* %9, i32 0, i32 0
  %137 = load i16, i16* %136, align 2
  %138 = zext i16 %137 to i32
  %139 = icmp sgt i32 %138, 1
  br i1 %139, label %140, label %153

; <label>:140:                                    ; preds = %135
  %141 = getelementptr inbounds %struct.ivs2_filehdr, %struct.ivs2_filehdr* %9, i32 0, i32 0
  %142 = load i16, i16* %141, align 2
  %143 = zext i16 %142 to i32
  %144 = getelementptr [58 x i8], [58 x i8]* @.str.18, i32 0, i32 0
  %145 = getelementptr [4 x i8], [4 x i8]* @.str.19, i32 0, i32 0
  %146 = call i32 (i8*, ...) @printf(i8* %144, i8* %145, i32 %143, i32 1)
  br label %._crit_edge87

; <label>:147:                                    ; preds = %124
  %148 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 20
  %149 = load i32, i32* %148, align 4
  %150 = icmp ne i32 %149, 0
  br i1 %150, label %151, label %153

; <label>:151:                                    ; preds = %147
  %152 = getelementptr [84 x i8], [84 x i8]* @.str.20, i32 0, i32 0
  call void (i32, i8*, ...) @errx(i32 1, i8* %152) #12
  unreachable

; <label>:153:                                    ; preds = %135, %147, %98, %102, %106, %110
  %.15 = phi i32 [ 1, %110 ], [ 1, %106 ], [ 1, %102 ], [ 1, %98 ], [ 3, %135 ], [ 2, %147 ]
  %154 = call i32 (i32, i32, ...) @fcntl(i32 %.01, i32 4, i32 2048)
  %155 = icmp slt i32 %154, 0
  br i1 %155, label %156, label %158

; <label>:156:                                    ; preds = %153
  %157 = getelementptr [25 x i8], [25 x i8]* @.str.21, i32 0, i32 0
  call void @perror(i8* %157)
  br label %._crit_edge87

; <label>:158:                                    ; preds = %153
  %159 = load i32, i32* @close_aircrack, align 4
  %160 = icmp ne i32 %159, 0
  br i1 %160, label %._crit_edge87, label %.lr.ph86.preheader

.lr.ph86.preheader:                               ; preds = %158
  %161 = bitcast %struct.pcap_pkthdr* %10 to i8*
  %162 = icmp eq i32 %.15, 1
  %163 = bitcast %struct.ivs2_pkthdr* %8 to i8*
  %164 = getelementptr inbounds %struct.pcap_pkthdr, %struct.pcap_pkthdr* %10, i32 0, i32 2
  %165 = getelementptr inbounds %struct.pcap_file_header, %struct.pcap_file_header* %11, i32 0, i32 0
  %166 = getelementptr inbounds [6 x i8], [6 x i8]* %4, i32 0, i32 0
  %167 = getelementptr inbounds [6 x i8], [6 x i8]* %4, i32 0, i32 0
  %168 = getelementptr inbounds i8, i8* %18, i64 0
  %169 = getelementptr inbounds %struct.ivs2_pkthdr, %struct.ivs2_pkthdr* %8, i32 0, i32 0
  %170 = getelementptr inbounds %struct.pcap_pkthdr, %struct.pcap_pkthdr* %10, i32 0, i32 2
  %171 = getelementptr inbounds %struct.pcap_pkthdr, %struct.pcap_pkthdr* %10, i32 0, i32 2
  %172 = getelementptr inbounds %struct.pcap_pkthdr, %struct.pcap_pkthdr* %10, i32 0, i32 2
  %173 = getelementptr inbounds %struct.pcap_pkthdr, %struct.pcap_pkthdr* %10, i32 0, i32 2
  %174 = getelementptr inbounds %struct.pcap_pkthdr, %struct.pcap_pkthdr* %10, i32 0, i32 2
  %175 = getelementptr inbounds %struct.pcap_pkthdr, %struct.pcap_pkthdr* %10, i32 0, i32 2
  %176 = getelementptr inbounds [6 x i8], [6 x i8]* %4, i32 0, i32 0
  %177 = getelementptr inbounds i8, i8* %18, i64 0
  %178 = getelementptr inbounds [6 x i8], [6 x i8]* %4, i64 0, i64 0
  %179 = getelementptr inbounds [6 x i8], [6 x i8]* %4, i32 0, i32 0
  %180 = getelementptr inbounds i8, i8* %179, i64 1
  %181 = getelementptr inbounds [6 x i8], [6 x i8]* %4, i32 0, i32 0
  %182 = getelementptr inbounds %struct.ivs2_pkthdr, %struct.ivs2_pkthdr* %8, i32 0, i32 1
  %183 = getelementptr inbounds %struct.pcap_pkthdr, %struct.pcap_pkthdr* %10, i32 0, i32 2
  %184 = getelementptr inbounds [6 x i8], [6 x i8]* %4, i32 0, i32 0
  %185 = getelementptr inbounds [6 x i8], [6 x i8]* %4, i32 0, i32 0
  %186 = getelementptr inbounds [6 x i8], [6 x i8]* %4, i32 0, i32 0
  %187 = getelementptr inbounds [6 x i8], [6 x i8]* %4, i32 0, i32 0
  %188 = getelementptr inbounds %struct.pcap_pkthdr, %struct.pcap_pkthdr* %10, i32 0, i32 2
  %189 = getelementptr inbounds [6 x i8], [6 x i8]* %5, i32 0, i32 0
  %190 = getelementptr inbounds [6 x i8], [6 x i8]* %5, i32 0, i32 0
  %191 = getelementptr inbounds [6 x i8], [6 x i8]* %5, i32 0, i32 0
  %192 = getelementptr inbounds [6 x i8], [6 x i8]* %5, i32 0, i32 0
  %193 = getelementptr inbounds %struct.ivs2_pkthdr, %struct.ivs2_pkthdr* %8, i32 0, i32 1
  %194 = getelementptr inbounds [6 x i8], [6 x i8]* %5, i64 0, i64 0
  %195 = getelementptr inbounds [6 x i8], [6 x i8]* %4, i32 0, i32 0
  %196 = getelementptr inbounds %struct.pcap_file_header, %struct.pcap_file_header* %11, i32 0, i32 6
  %197 = getelementptr inbounds i8, i8* %18, i64 7
  %198 = getelementptr inbounds %struct.pcap_file_header, %struct.pcap_file_header* %11, i32 0, i32 6
  %199 = getelementptr inbounds %struct.ivs2_pkthdr, %struct.ivs2_pkthdr* %8, i32 0, i32 0
  %200 = getelementptr inbounds i8, i8* %18, i64 4
  %201 = bitcast i8* %200 to i32*
  %202 = getelementptr inbounds %struct.pcap_file_header, %struct.pcap_file_header* %11, i32 0, i32 0
  %203 = getelementptr inbounds %struct.pcap_file_header, %struct.pcap_file_header* %11, i32 0, i32 6
  %204 = getelementptr inbounds [6 x i8], [6 x i8]* %4, i32 0, i32 0
  %205 = getelementptr inbounds [6 x i8], [6 x i8]* %6, i32 0, i32 0
  %206 = getelementptr inbounds [6 x i8], [6 x i8]* %6, i32 0, i32 0
  %207 = getelementptr inbounds %struct.ivs2_pkthdr, %struct.ivs2_pkthdr* %8, i32 0, i32 1
  %208 = getelementptr inbounds %struct.ivs2_pkthdr, %struct.ivs2_pkthdr* %8, i32 0, i32 0
  %209 = getelementptr inbounds %struct.pcap_pkthdr, %struct.pcap_pkthdr* %10, i32 0, i32 2
  %210 = getelementptr inbounds %struct.pcap_pkthdr, %struct.pcap_pkthdr* %10, i32 0, i32 2
  %211 = getelementptr inbounds [6 x i8], [6 x i8]* %6, i32 0, i32 0
  %212 = getelementptr inbounds [6 x i8], [6 x i8]* %6, i32 0, i32 0
  %213 = getelementptr inbounds %struct.ivs2_pkthdr, %struct.ivs2_pkthdr* %8, i32 0, i32 0
  %214 = getelementptr inbounds %struct.pcap_pkthdr, %struct.pcap_pkthdr* %10, i32 0, i32 2
  %215 = getelementptr inbounds %struct.pcap_pkthdr, %struct.pcap_pkthdr* %10, i32 0, i32 2
  %216 = getelementptr inbounds %struct.pcap_pkthdr, %struct.pcap_pkthdr* %10, i32 0, i32 2
  %217 = getelementptr inbounds %struct.pcap_pkthdr, %struct.pcap_pkthdr* %10, i32 0, i32 2
  %218 = getelementptr inbounds %struct.pcap_pkthdr, %struct.pcap_pkthdr* %10, i32 0, i32 2
  %219 = getelementptr inbounds %struct.ivs2_pkthdr, %struct.ivs2_pkthdr* %8, i32 0, i32 1
  %220 = getelementptr inbounds i8, i8* %18, i64 4
  %221 = getelementptr inbounds i8, i8* %18, i64 3
  %222 = getelementptr inbounds i8, i8* %18, i64 5
  %223 = getelementptr inbounds i8, i8* %18, i64 4
  %224 = getelementptr inbounds i8, i8* %18, i64 3
  %225 = getelementptr inbounds i8, i8* %18, i64 4
  %226 = getelementptr inbounds %struct.ivs2_pkthdr, %struct.ivs2_pkthdr* %8, i32 0, i32 0
  %227 = getelementptr inbounds %struct.pcap_pkthdr, %struct.pcap_pkthdr* %10, i32 0, i32 2
  %228 = getelementptr inbounds %struct.pcap_pkthdr, %struct.pcap_pkthdr* %10, i32 0, i32 2
  %229 = getelementptr inbounds i8, i8* %18, i64 4
  %230 = getelementptr inbounds %struct.ivs2_pkthdr, %struct.ivs2_pkthdr* %8, i32 0, i32 1
  %231 = getelementptr inbounds i8, i8* %18, i64 5
  %232 = getelementptr inbounds i8, i8* %18, i64 6
  %233 = getelementptr inbounds i8, i8* %18, i64 3
  %234 = getelementptr inbounds i8, i8* %18, i64 7
  %235 = getelementptr inbounds i8, i8* %18, i64 4
  %236 = getelementptr inbounds i8, i8* %18, i64 3
  %237 = getelementptr inbounds i8, i8* %18, i64 4
  %238 = getelementptr inbounds %struct.pcap_pkthdr, %struct.pcap_pkthdr* %10, i32 0, i32 2
  %239 = getelementptr inbounds [6 x i8], [6 x i8]* %6, i32 0, i32 0
  %240 = getelementptr inbounds i8, i8* %18, i64 4
  %241 = getelementptr inbounds i8, i8* %18, i64 4
  %242 = getelementptr inbounds %struct.pcap_pkthdr, %struct.pcap_pkthdr* %10, i32 0, i32 2
  %243 = getelementptr inbounds [16 x i32], [16 x i32]* %7, i32 0, i32 0
  %244 = bitcast i32* %243 to i8*
  %245 = getelementptr inbounds i8, i8* %18, i64 6
  %246 = getelementptr inbounds [16 x i32], [16 x i32]* %7, i32 0, i32 0
  %247 = getelementptr inbounds i8, i8* %18, i64 4
  %248 = getelementptr inbounds %struct.pcap_pkthdr, %struct.pcap_pkthdr* %10, i32 0, i32 2
  %249 = getelementptr inbounds %struct.pcap_pkthdr, %struct.pcap_pkthdr* %10, i32 0, i32 2
  %250 = getelementptr inbounds %struct.pcap_pkthdr, %struct.pcap_pkthdr* %10, i32 0, i32 2
  %251 = getelementptr inbounds [16 x i32], [16 x i32]* %14, i32 0, i32 0
  %252 = bitcast i32* %251 to i8*
  %253 = getelementptr inbounds [2048 x i8], [2048 x i8]* %12, i32 0, i32 0
  %254 = getelementptr inbounds [2048 x i8], [2048 x i8]* %12, i32 0, i32 0
  %255 = getelementptr inbounds [16 x i32], [16 x i32]* %14, i32 0, i32 0
  %256 = getelementptr inbounds i8, i8* %18, i64 3
  %257 = getelementptr inbounds i8, i8* %18, i64 3
  %258 = getelementptr inbounds i8, i8* %18, i64 3
  %259 = getelementptr inbounds i8, i8* %18, i64 4
  %260 = getelementptr inbounds i8, i8* %18, i64 4
  %261 = getelementptr inbounds [2048 x i8], [2048 x i8]* %12, i32 0, i32 0
  %262 = getelementptr inbounds [16 x i32], [16 x i32]* %14, i32 0, i32 0
  %263 = getelementptr inbounds [2048 x i8], [2048 x i8]* %12, i32 0, i32 0
  %264 = getelementptr inbounds [16 x i32], [16 x i32]* %14, i32 0, i32 0
  %265 = getelementptr inbounds [6 x i8], [6 x i8]* %6, i32 0, i32 0
  %266 = getelementptr inbounds %struct.pcap_pkthdr, %struct.pcap_pkthdr* %10, i32 0, i32 3
  %267 = getelementptr inbounds %struct.pcap_pkthdr, %struct.pcap_pkthdr* %10, i32 0, i32 3
  br label %.lr.ph86

.lr.ph86:                                         ; preds = %.lr.ph86.preheader, %.backedge
  %.0684 = phi i8* [ %.06.be, %.backedge ], [ %18, %.lr.ph86.preheader ]
  %.01280 = phi %struct.AP_info* [ %.012.be, %.backedge ], [ null, %.lr.ph86.preheader ]
  call void @unroll_loop(i32 30)
  switch i32 %.15, label %341 [
    i32 2, label %268
    i32 3, label %300
  ]

; <label>:268:                                    ; preds = %.lr.ph86
  %269 = call i32 @atomic_read(%struct.read_buf* %3, i32 %.01, i32 1, i8* %18)
  %270 = icmp ne i32 %269, 0
  %271 = xor i1 %270, true
  br i1 %271, label %.lr.ph45.preheader, label %._crit_edge46

.lr.ph45.preheader:                               ; preds = %268
  br label %.lr.ph45

.lr.ph45:                                         ; preds = %.lr.ph45.preheader, %.lr.ph45
  call void @unroll_loop(i32 31)
  call void @eof_wait(i32* %2)
  %272 = call i32 @atomic_read(%struct.read_buf* %3, i32 %.01, i32 1, i8* %18)
  %273 = icmp ne i32 %272, 0
  %274 = xor i1 %273, true
  br i1 %274, label %.lr.ph45, label %._crit_edge46.loopexit

._crit_edge46.loopexit:                           ; preds = %.lr.ph45
  br label %._crit_edge46

._crit_edge46:                                    ; preds = %._crit_edge46.loopexit, %268
  %275 = load i32, i32* @close_aircrack, align 4
  %276 = icmp ne i32 %275, 0
  br i1 %276, label %._crit_edge87.loopexit, label %277

; <label>:277:                                    ; preds = %._crit_edge46
  %278 = load i8, i8* %168, align 1
  %279 = zext i8 %278 to i32
  %280 = icmp ne i32 %279, 255
  br i1 %280, label %281, label %291

; <label>:281:                                    ; preds = %277
  %282 = load i8, i8* %177, align 1
  store i8 %282, i8* %178, align 1
  %283 = call i32 @atomic_read(%struct.read_buf* %3, i32 %.01, i32 5, i8* %180)
  %284 = icmp ne i32 %283, 0
  %285 = xor i1 %284, true
  br i1 %285, label %.lr.ph48.preheader, label %._crit_edge49

.lr.ph48.preheader:                               ; preds = %281
  br label %.lr.ph48

.lr.ph48:                                         ; preds = %.lr.ph48.preheader, %.lr.ph48
  call void @unroll_loop(i32 32)
  call void @eof_wait(i32* %2)
  %286 = call i32 @atomic_read(%struct.read_buf* %3, i32 %.01, i32 5, i8* %180)
  %287 = icmp ne i32 %286, 0
  %288 = xor i1 %287, true
  br i1 %288, label %.lr.ph48, label %._crit_edge49.loopexit

._crit_edge49.loopexit:                           ; preds = %.lr.ph48
  br label %._crit_edge49

._crit_edge49:                                    ; preds = %._crit_edge49.loopexit, %281
  %289 = load i32, i32* @close_aircrack, align 4
  %290 = icmp ne i32 %289, 0
  br i1 %290, label %._crit_edge87.loopexit, label %291

; <label>:291:                                    ; preds = %._crit_edge49, %277
  %292 = call i32 @atomic_read(%struct.read_buf* %3, i32 %.01, i32 5, i8* %18)
  %293 = icmp ne i32 %292, 0
  %294 = xor i1 %293, true
  br i1 %294, label %.lr.ph51.preheader, label %._crit_edge52

.lr.ph51.preheader:                               ; preds = %291
  br label %.lr.ph51

.lr.ph51:                                         ; preds = %.lr.ph51.preheader, %.lr.ph51
  call void @unroll_loop(i32 33)
  call void @eof_wait(i32* %2)
  %295 = call i32 @atomic_read(%struct.read_buf* %3, i32 %.01, i32 5, i8* %18)
  %296 = icmp ne i32 %295, 0
  %297 = xor i1 %296, true
  br i1 %297, label %.lr.ph51, label %._crit_edge52.loopexit

._crit_edge52.loopexit:                           ; preds = %.lr.ph51
  br label %._crit_edge52

._crit_edge52:                                    ; preds = %._crit_edge52.loopexit, %291
  %298 = load i32, i32* @close_aircrack, align 4
  %299 = icmp ne i32 %298, 0
  br i1 %299, label %._crit_edge87.loopexit, label %472

; <label>:300:                                    ; preds = %.lr.ph86
  %301 = call i32 @atomic_read(%struct.read_buf* %3, i32 %.01, i32 4, i8* %163)
  %302 = icmp ne i32 %301, 0
  %303 = xor i1 %302, true
  br i1 %303, label %.lr.ph36.preheader, label %._crit_edge37

.lr.ph36.preheader:                               ; preds = %300
  br label %.lr.ph36

.lr.ph36:                                         ; preds = %.lr.ph36.preheader, %.lr.ph36
  call void @unroll_loop(i32 34)
  call void @eof_wait(i32* %2)
  %304 = call i32 @atomic_read(%struct.read_buf* %3, i32 %.01, i32 4, i8* %163)
  %305 = icmp ne i32 %304, 0
  %306 = xor i1 %305, true
  br i1 %306, label %.lr.ph36, label %._crit_edge37.loopexit

._crit_edge37.loopexit:                           ; preds = %.lr.ph36
  br label %._crit_edge37

._crit_edge37:                                    ; preds = %._crit_edge37.loopexit, %300
  %307 = load i32, i32* @close_aircrack, align 4
  %308 = icmp ne i32 %307, 0
  br i1 %308, label %._crit_edge87.loopexit, label %309

; <label>:309:                                    ; preds = %._crit_edge37
  %310 = load i16, i16* %169, align 2
  %311 = zext i16 %310 to i32
  %312 = and i32 %311, 1
  %313 = icmp ne i32 %312, 0
  br i1 %313, label %314, label %328

; <label>:314:                                    ; preds = %309
  %315 = call i32 @atomic_read(%struct.read_buf* %3, i32 %.01, i32 6, i8* %181)
  %316 = icmp ne i32 %315, 0
  %317 = xor i1 %316, true
  br i1 %317, label %.lr.ph39.preheader, label %._crit_edge40

.lr.ph39.preheader:                               ; preds = %314
  br label %.lr.ph39

.lr.ph39:                                         ; preds = %.lr.ph39.preheader, %.lr.ph39
  call void @unroll_loop(i32 35)
  call void @eof_wait(i32* %2)
  %318 = call i32 @atomic_read(%struct.read_buf* %3, i32 %.01, i32 6, i8* %181)
  %319 = icmp ne i32 %318, 0
  %320 = xor i1 %319, true
  br i1 %320, label %.lr.ph39, label %._crit_edge40.loopexit

._crit_edge40.loopexit:                           ; preds = %.lr.ph39
  br label %._crit_edge40

._crit_edge40:                                    ; preds = %._crit_edge40.loopexit, %314
  %321 = load i32, i32* @close_aircrack, align 4
  %322 = icmp ne i32 %321, 0
  br i1 %322, label %._crit_edge87.loopexit, label %323

; <label>:323:                                    ; preds = %._crit_edge40
  %324 = load i16, i16* %193, align 2
  %325 = zext i16 %324 to i32
  %326 = sub nsw i32 %325, 6
  %327 = trunc i32 %326 to i16
  store i16 %327, i16* %193, align 2
  br label %328

; <label>:328:                                    ; preds = %323, %309
  %329 = load i16, i16* %182, align 2
  %330 = zext i16 %329 to i32
  %331 = call i32 @atomic_read(%struct.read_buf* %3, i32 %.01, i32 %330, i8* %18)
  %332 = icmp ne i32 %331, 0
  %333 = xor i1 %332, true
  br i1 %333, label %.lr.ph42.preheader, label %._crit_edge43

.lr.ph42.preheader:                               ; preds = %328
  br label %.lr.ph42

.lr.ph42:                                         ; preds = %.lr.ph42.preheader, %.lr.ph42
  call void @unroll_loop(i32 36)
  call void @eof_wait(i32* %2)
  %334 = load i16, i16* %182, align 2
  %335 = zext i16 %334 to i32
  %336 = call i32 @atomic_read(%struct.read_buf* %3, i32 %.01, i32 %335, i8* %18)
  %337 = icmp ne i32 %336, 0
  %338 = xor i1 %337, true
  br i1 %338, label %.lr.ph42, label %._crit_edge43.loopexit

._crit_edge43.loopexit:                           ; preds = %.lr.ph42
  br label %._crit_edge43

._crit_edge43:                                    ; preds = %._crit_edge43.loopexit, %328
  %339 = load i32, i32* @close_aircrack, align 4
  %340 = icmp ne i32 %339, 0
  br i1 %340, label %._crit_edge87.loopexit, label %472

; <label>:341:                                    ; preds = %.lr.ph86
  %342 = call i32 @atomic_read(%struct.read_buf* %3, i32 %.01, i32 16, i8* %161)
  %343 = icmp ne i32 %342, 0
  %344 = xor i1 %343, true
  br i1 %344, label %.lr.ph.preheader, label %._crit_edge

.lr.ph.preheader:                                 ; preds = %341
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %.lr.ph
  call void @unroll_loop(i32 37)
  call void @eof_wait(i32* %2)
  %345 = call i32 @atomic_read(%struct.read_buf* %3, i32 %.01, i32 16, i8* %161)
  %346 = icmp ne i32 %345, 0
  %347 = xor i1 %346, true
  br i1 %347, label %.lr.ph, label %._crit_edge.loopexit

._crit_edge.loopexit:                             ; preds = %.lr.ph
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %341
  %348 = load i32, i32* @close_aircrack, align 4
  %349 = icmp ne i32 %348, 0
  br i1 %349, label %._crit_edge87.loopexit, label %350

; <label>:350:                                    ; preds = %._crit_edge
  %351 = load i32, i32* %165, align 4
  %352 = icmp eq i32 %351, -725372255
  br i1 %352, label %353, label %369

; <label>:353:                                    ; preds = %350
  %354 = load i32, i32* %170, align 4
  %355 = lshr i32 %354, 24
  %356 = and i32 %355, 255
  %357 = load i32, i32* %171, align 4
  %358 = lshr i32 %357, 8
  %359 = and i32 %358, 65280
  %360 = or i32 %356, %359
  %361 = load i32, i32* %172, align 4
  %362 = shl i32 %361, 8
  %363 = and i32 %362, 16711680
  %364 = or i32 %360, %363
  %365 = load i32, i32* %173, align 4
  %366 = shl i32 %365, 24
  %367 = and i32 %366, -16777216
  %368 = or i32 %364, %367
  store i32 %368, i32* %174, align 4
  br label %369

; <label>:369:                                    ; preds = %353, %350
  %370 = load i32, i32* %175, align 4
  %371 = icmp ule i32 %370, 0
  br i1 %371, label %375, label %372

; <label>:372:                                    ; preds = %369
  %373 = load i32, i32* %183, align 4
  %374 = icmp ugt i32 %373, 65535
  br i1 %374, label %375, label %381

; <label>:375:                                    ; preds = %372, %369
  %376 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %377 = getelementptr inbounds %struct.pcap_pkthdr, %struct.pcap_pkthdr* %10, i32 0, i32 2
  %378 = load i32, i32* %377, align 4
  %379 = getelementptr [53 x i8], [53 x i8]* @.str.22, i32 0, i32 0
  %380 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %376, i8* %379, i32 %378)
  call void @eof_wait(i32* %2)
  call void @_exit(i32 1) #12
  unreachable

; <label>:381:                                    ; preds = %372
  %382 = load i32, i32* %188, align 4
  %383 = call i32 @atomic_read(%struct.read_buf* %3, i32 %.01, i32 %382, i8* %18)
  %384 = icmp ne i32 %383, 0
  %385 = xor i1 %384, true
  br i1 %385, label %.lr.ph33.preheader, label %._crit_edge34

.lr.ph33.preheader:                               ; preds = %381
  br label %.lr.ph33

.lr.ph33:                                         ; preds = %.lr.ph33.preheader, %.lr.ph33
  call void @unroll_loop(i32 38)
  call void @eof_wait(i32* %2)
  %386 = load i32, i32* %188, align 4
  %387 = call i32 @atomic_read(%struct.read_buf* %3, i32 %.01, i32 %386, i8* %18)
  %388 = icmp ne i32 %387, 0
  %389 = xor i1 %388, true
  br i1 %389, label %.lr.ph33, label %._crit_edge34.loopexit

._crit_edge34.loopexit:                           ; preds = %.lr.ph33
  br label %._crit_edge34

._crit_edge34:                                    ; preds = %._crit_edge34.loopexit, %381
  %390 = load i32, i32* @close_aircrack, align 4
  %391 = icmp ne i32 %390, 0
  br i1 %391, label %._crit_edge87.loopexit, label %392

; <label>:392:                                    ; preds = %._crit_edge34
  %393 = load i32, i32* %196, align 4
  %394 = icmp eq i32 %393, 119
  br i1 %394, label %395, label %425

; <label>:395:                                    ; preds = %392
  %396 = load i8, i8* %197, align 1
  %397 = zext i8 %396 to i32
  %398 = icmp eq i32 %397, 64
  br i1 %398, label %415, label %399

; <label>:399:                                    ; preds = %395
  %400 = load i32, i32* %201, align 4
  %401 = load i32, i32* %202, align 4
  %402 = icmp eq i32 %401, -725372255
  br i1 %402, label %403, label %415

; <label>:403:                                    ; preds = %399
  %404 = ashr i32 %400, 24
  %405 = and i32 %404, 255
  %406 = ashr i32 %400, 8
  %407 = and i32 %406, 65280
  %408 = or i32 %405, %407
  %409 = shl i32 %400, 8
  %410 = and i32 %409, 16711680
  %411 = or i32 %408, %410
  %412 = shl i32 %400, 24
  %413 = and i32 %412, -16777216
  %414 = or i32 %411, %413
  br label %415

; <label>:415:                                    ; preds = %399, %403, %395
  %.1 = phi i32 [ 64, %395 ], [ %414, %403 ], [ %400, %399 ]
  %416 = icmp slt i32 %.1, 8
  br i1 %416, label %.backedge, label %417

; <label>:417:                                    ; preds = %415
  %418 = load i32, i32* %209, align 4
  %419 = icmp sge i32 %.1, %418
  br i1 %419, label %.backedge, label %420

; <label>:420:                                    ; preds = %417
  %421 = sext i32 %.1 to i64
  %422 = getelementptr inbounds i8, i8* %18, i64 %421
  %423 = load i32, i32* %214, align 4
  %424 = sub i32 %423, %.1
  store i32 %424, i32* %214, align 4
  br label %425

; <label>:425:                                    ; preds = %420, %392
  %.17 = phi i8* [ %422, %420 ], [ %18, %392 ]
  %426 = load i32, i32* %198, align 4
  %427 = icmp eq i32 %426, 127
  br i1 %427, label %428, label %442

; <label>:428:                                    ; preds = %425
  %429 = getelementptr inbounds i8, i8* %.17, i64 2
  %430 = bitcast i8* %429 to i16*
  %431 = load i16, i16* %430, align 2
  %432 = zext i16 %431 to i32
  %433 = icmp sle i32 %432, 0
  br i1 %433, label %.backedge, label %434

; <label>:434:                                    ; preds = %428
  %435 = load i32, i32* %210, align 4
  %436 = icmp sge i32 %432, %435
  br i1 %436, label %.backedge, label %437

; <label>:437:                                    ; preds = %434
  %438 = sext i32 %432 to i64
  %439 = getelementptr inbounds i8, i8* %.17, i64 %438
  %440 = load i32, i32* %215, align 4
  %441 = sub i32 %440, %432
  store i32 %441, i32* %215, align 4
  br label %442

; <label>:442:                                    ; preds = %437, %425
  %.28 = phi i8* [ %439, %437 ], [ %.17, %425 ]
  %443 = load i32, i32* %203, align 4
  %444 = icmp eq i32 %443, 192
  br i1 %444, label %445, label %472

; <label>:445:                                    ; preds = %442
  %446 = getelementptr inbounds i8, i8* %.28, i64 2
  %447 = bitcast i8* %446 to i16*
  %448 = load i16, i16* %447, align 2
  %449 = zext i16 %448 to i32
  %450 = icmp sle i32 %449, 0
  br i1 %450, label %.backedge, label %451

; <label>:451:                                    ; preds = %445
  %452 = load i32, i32* %216, align 4
  %453 = icmp sge i32 %449, %452
  br i1 %453, label %.backedge, label %454

; <label>:454:                                    ; preds = %451
  %455 = icmp eq i32 %449, 24
  br i1 %455, label %456, label %462

; <label>:456:                                    ; preds = %454
  %457 = getelementptr inbounds i8, i8* %.28, i64 8
  %458 = bitcast i8* %457 to i16*
  %459 = load i16, i16* %458, align 2
  %460 = zext i16 %459 to i32
  %461 = icmp eq i32 %460, 2
  %spec.select = select i1 %461, i32 32, i32 %449
  br label %462

; <label>:462:                                    ; preds = %456, %454
  %.2 = phi i32 [ %449, %454 ], [ %spec.select, %456 ]
  %463 = icmp sle i32 %.2, 0
  br i1 %463, label %.backedge, label %464

; <label>:464:                                    ; preds = %462
  %465 = load i32, i32* %242, align 4
  %466 = icmp sge i32 %.2, %465
  br i1 %466, label %.backedge, label %467

; <label>:467:                                    ; preds = %464
  %468 = sext i32 %.2 to i64
  %469 = getelementptr inbounds i8, i8* %.28, i64 %468
  %470 = load i32, i32* %248, align 4
  %471 = sub i32 %470, %.2
  store i32 %471, i32* %248, align 4
  br label %472

; <label>:472:                                    ; preds = %._crit_edge43, %467, %442, %._crit_edge52
  %.5 = phi i8* [ %.0684, %._crit_edge52 ], [ %.0684, %._crit_edge43 ], [ %469, %467 ], [ %.28, %442 ]
  %473 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* @mx_apl) #9
  %474 = load i64, i64* @nb_pkt, align 8
  %475 = add nsw i64 %474, 1
  store i64 %475, i64* @nb_pkt, align 8
  br i1 %162, label %476, label %520

; <label>:476:                                    ; preds = %472
  %477 = load i32, i32* %164, align 4
  %478 = icmp ult i32 %477, 24
  br i1 %478, label %1589, label %479

; <label>:479:                                    ; preds = %476
  %480 = getelementptr inbounds i8, i8* %.5, i64 0
  %481 = load i8, i8* %480, align 1
  %482 = zext i8 %481 to i32
  %483 = and i32 %482, 12
  %484 = icmp eq i32 %483, 4
  br i1 %484, label %1589, label %485

; <label>:485:                                    ; preds = %479
  %486 = getelementptr inbounds i8, i8* %.5, i64 1
  %487 = load i8, i8* %486, align 1
  %488 = zext i8 %487 to i32
  %489 = and i32 %488, 3
  switch i32 %489, label %498 [
    i32 0, label %490
    i32 1, label %492
    i32 2, label %494
    i32 3, label %496
  ]

; <label>:490:                                    ; preds = %485
  %491 = getelementptr inbounds i8, i8* %.5, i64 16
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %184, i8* align 1 %491, i64 6, i1 false), !track !77
  br label %499

; <label>:492:                                    ; preds = %485
  %493 = getelementptr inbounds i8, i8* %.5, i64 4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %185, i8* align 1 %493, i64 6, i1 false), !track !78
  br label %499

; <label>:494:                                    ; preds = %485
  %495 = getelementptr inbounds i8, i8* %.5, i64 10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %186, i8* align 1 %495, i64 6, i1 false), !track !79
  br label %499

; <label>:496:                                    ; preds = %485
  %497 = getelementptr inbounds i8, i8* %.5, i64 10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %187, i8* align 1 %497, i64 6, i1 false), !track !80
  br label %499

; <label>:498:                                    ; preds = %485
  unreachable

; <label>:499:                                    ; preds = %496, %494, %492, %490
  %500 = getelementptr inbounds i8, i8* %.5, i64 1
  %501 = load i8, i8* %500, align 1
  %502 = zext i8 %501 to i32
  %503 = and i32 %502, 3
  switch i32 %503, label %512 [
    i32 0, label %504
    i32 1, label %506
    i32 2, label %508
    i32 3, label %510
  ]

; <label>:504:                                    ; preds = %499
  %505 = getelementptr inbounds i8, i8* %.5, i64 4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %189, i8* align 1 %505, i64 6, i1 false), !track !81
  br label %513

; <label>:506:                                    ; preds = %499
  %507 = getelementptr inbounds i8, i8* %.5, i64 16
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %190, i8* align 1 %507, i64 6, i1 false), !track !82
  br label %513

; <label>:508:                                    ; preds = %499
  %509 = getelementptr inbounds i8, i8* %.5, i64 4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %191, i8* align 1 %509, i64 6, i1 false), !track !83
  br label %513

; <label>:510:                                    ; preds = %499
  %511 = getelementptr inbounds i8, i8* %.5, i64 16
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %192, i8* align 1 %511, i64 6, i1 false), !track !84
  br label %513

; <label>:512:                                    ; preds = %499
  unreachable

; <label>:513:                                    ; preds = %510, %508, %506, %504
  %514 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 38), align 8
  %515 = icmp ne i32 %514, 0
  br i1 %515, label %516, label %520

; <label>:516:                                    ; preds = %513
  %517 = load i8, i8* %194, align 1
  %518 = zext i8 %517 to i32
  %519 = icmp eq i32 %518, 1
  br i1 %519, label %1589, label %520

; <label>:520:                                    ; preds = %513, %516, %472
  %521 = load i8*, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 34), align 8
  %522 = icmp ne i8* %521, null
  br i1 %522, label %523, label %526

; <label>:523:                                    ; preds = %520
  %524 = load i8*, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 34), align 8
  %525 = call i32 @mergebssids(i8* %524, i8* %166)
  br label %526

; <label>:526:                                    ; preds = %523, %520
  %527 = call i32 @memcmp(i8* %167, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.23, i64 0, i64 0), i64 6) #10
  %528 = icmp eq i32 %527, 0
  br i1 %528, label %1589, label %529

; <label>:529:                                    ; preds = %526
  %530 = call i32 @memcmp(i8* %176, i8* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 4, i64 0), i64 6) #10
  %531 = icmp ne i32 %530, 0
  br i1 %531, label %1589, label %532

; <label>:532:                                    ; preds = %529
  %533 = call i32 @memcmp(i8* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 9, i64 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @ZERO, i64 0, i64 0), i64 6) #10
  %534 = icmp ne i32 %533, 0
  br i1 %534, label %535, label %550

; <label>:535:                                    ; preds = %532
  %536 = call i32 @memcmp(i8* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 9, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.23, i64 0, i64 0), i64 6) #10
  %537 = icmp ne i32 %536, 0
  br i1 %537, label %538, label %550

; <label>:538:                                    ; preds = %535
  %539 = getelementptr inbounds i8, i8* %.5, i64 4
  %540 = call i32 @memcmp(i8* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 9, i64 0), i8* %539, i64 6) #10
  %541 = icmp ne i32 %540, 0
  br i1 %541, label %542, label %550

; <label>:542:                                    ; preds = %538
  %543 = getelementptr inbounds i8, i8* %.5, i64 10
  %544 = call i32 @memcmp(i8* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 9, i64 0), i8* %543, i64 6) #10
  %545 = icmp ne i32 %544, 0
  br i1 %545, label %546, label %550

; <label>:546:                                    ; preds = %542
  %547 = getelementptr inbounds i8, i8* %.5, i64 16
  %548 = call i32 @memcmp(i8* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 9, i64 0), i8* %547, i64 6) #10
  %549 = icmp ne i32 %548, 0
  br i1 %549, label %1589, label %550

; <label>:550:                                    ; preds = %538, %542, %546, %535, %532
  %551 = load %struct.AP_info*, %struct.AP_info** @ap_1st, align 8
  %552 = icmp ne %struct.AP_info* %551, null
  br i1 %552, label %.lr.ph56, label %._crit_edge3

.lr.ph56:                                         ; preds = %550
  %553 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %551, i32 0, i32 1
  %554 = getelementptr inbounds [6 x i8], [6 x i8]* %553, i32 0, i32 0
  %555 = call i32 @memcmp(i8* %554, i8* %195, i64 6) #10
  %556 = icmp ne i32 %555, 0
  br i1 %556, label %.lr.ph2.preheader, label %._crit_edge3

.lr.ph2.preheader:                                ; preds = %.lr.ph56
  br label %.lr.ph2

; <label>:557:                                    ; preds = %.lr.ph2
  %.11353 = phi %struct.AP_info* [ %563, %.lr.ph2 ]
  %558 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.11353, i32 0, i32 1
  %559 = getelementptr inbounds [6 x i8], [6 x i8]* %558, i32 0, i32 0
  %560 = call i32 @memcmp(i8* %559, i8* %195, i64 6) #10
  %561 = icmp ne i32 %560, 0
  br i1 %561, label %.lr.ph2, label %._crit_edge3.loopexit

.lr.ph2:                                          ; preds = %.lr.ph2.preheader, %557
  %.113531 = phi %struct.AP_info* [ %.11353, %557 ], [ %551, %.lr.ph2.preheader ]
  call void @unroll_loop(i32 39)
  %562 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.113531, i32 0, i32 0
  %563 = load %struct.AP_info*, %struct.AP_info** %562, align 8
  %564 = icmp ne %struct.AP_info* %563, null
  br i1 %564, label %557, label %._crit_edge3.loopexit

._crit_edge3.loopexit:                            ; preds = %557, %.lr.ph2
  %.113.lcssa.ph = phi %struct.AP_info* [ %.11353, %557 ], [ %563, %.lr.ph2 ]
  %.011.lcssa.ph = phi %struct.AP_info* [ %.113531, %557 ], [ %.113531, %.lr.ph2 ]
  br label %._crit_edge3

._crit_edge3:                                     ; preds = %._crit_edge3.loopexit, %550, %.lr.ph56
  %.113.lcssa = phi %struct.AP_info* [ %551, %.lr.ph56 ], [ %551, %550 ], [ %.113.lcssa.ph, %._crit_edge3.loopexit ]
  %.011.lcssa = phi %struct.AP_info* [ null, %.lr.ph56 ], [ null, %550 ], [ %.011.lcssa.ph, %._crit_edge3.loopexit ]
  %565 = icmp eq %struct.AP_info* %.113.lcssa, null
  br i1 %565, label %566, label %605

; <label>:566:                                    ; preds = %._crit_edge3
  %567 = call noalias i8* @malloc(i64 504) #9, !track !85
  %568 = bitcast i8* %567 to %struct.AP_info*
  %569 = icmp ne %struct.AP_info* %568, null
  br i1 %569, label %572, label %570

; <label>:570:                                    ; preds = %566
  %571 = getelementptr [14 x i8], [14 x i8]* @.str.7, i32 0, i32 0
  call void @perror(i8* %571)
  br label %._crit_edge87

; <label>:572:                                    ; preds = %566
  %573 = bitcast %struct.AP_info* %568 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %573, i8 0, i64 504, i1 false)
  %574 = load %struct.AP_info*, %struct.AP_info** @ap_1st, align 8
  %575 = icmp eq %struct.AP_info* %574, null
  br i1 %575, label %576, label %577

; <label>:576:                                    ; preds = %572
  store %struct.AP_info* %568, %struct.AP_info** @ap_1st, align 8
  br label %579

; <label>:577:                                    ; preds = %572
  %578 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.011.lcssa, i32 0, i32 0
  store %struct.AP_info* %568, %struct.AP_info** %578, align 8
  br label %579

; <label>:579:                                    ; preds = %577, %576
  %580 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %568, i32 0, i32 1
  %581 = getelementptr inbounds [6 x i8], [6 x i8]* %580, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %581, i8* align 1 %204, i64 6, i1 false), !track !86
  %582 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %568, i32 0, i32 10
  store i32 -1, i32* %582, align 8
  %583 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 20), align 4
  %584 = icmp eq i32 %583, 1
  br i1 %584, label %585, label %605

; <label>:585:                                    ; preds = %579
  %586 = call %struct.PTW_attackstate* (...) bitcast (%struct.PTW_attackstate* ()* @PTW_newattackstate to %struct.PTW_attackstate* (...)*)()
  %587 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %568, i32 0, i32 15
  store %struct.PTW_attackstate* %586, %struct.PTW_attackstate** %587, align 8
  %588 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %568, i32 0, i32 15
  %589 = load %struct.PTW_attackstate*, %struct.PTW_attackstate** %588, align 8
  %590 = icmp ne %struct.PTW_attackstate* %589, null
  br i1 %590, label %595, label %591

; <label>:591:                                    ; preds = %585
  %.lcssa1 = phi i8* [ %567, %585 ]
  %592 = bitcast i8* %.lcssa1 to %struct.AP_info*
  %593 = getelementptr [21 x i8], [21 x i8]* @.str.24, i32 0, i32 0
  call void @perror(i8* %593)
  %594 = bitcast %struct.AP_info* %592 to i8*
  call void @free(i8* %594) #9
  br label %._crit_edge87

; <label>:595:                                    ; preds = %585
  %596 = call %struct.PTW_attackstate* (...) bitcast (%struct.PTW_attackstate* ()* @PTW_newattackstate to %struct.PTW_attackstate* (...)*)()
  %597 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %568, i32 0, i32 16
  store %struct.PTW_attackstate* %596, %struct.PTW_attackstate** %597, align 8
  %598 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %568, i32 0, i32 16
  %599 = load %struct.PTW_attackstate*, %struct.PTW_attackstate** %598, align 8
  %600 = icmp ne %struct.PTW_attackstate* %599, null
  br i1 %600, label %605, label %601

; <label>:601:                                    ; preds = %595
  %.lcssa = phi i8* [ %567, %595 ]
  %602 = bitcast i8* %.lcssa to %struct.AP_info*
  %603 = getelementptr [21 x i8], [21 x i8]* @.str.24, i32 0, i32 0
  call void @perror(i8* %603)
  %604 = bitcast %struct.AP_info* %602 to i8*
  call void @free(i8* %604) #9
  br label %._crit_edge87

; <label>:605:                                    ; preds = %579, %595, %._crit_edge3
  %.214 = phi %struct.AP_info* [ %.113.lcssa, %._crit_edge3 ], [ %568, %595 ], [ %568, %579 ]
  switch i32 %.15, label %861 [
    i32 2, label %606
    i32 3, label %656
  ]

; <label>:606:                                    ; preds = %605
  %607 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.214, i32 0, i32 10
  store i32 2, i32* %607, align 8
  br label %608

; <label>:608:                                    ; preds = %1195, %1199, %606
  %609 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.214, i32 0, i32 7
  %610 = load i64, i64* %609, align 8
  %611 = icmp eq i64 %610, 0
  br i1 %611, label %612, label %615

; <label>:612:                                    ; preds = %608
  %613 = call i8** @uniqueiv_init()
  %614 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.214, i32 0, i32 5
  store i8** %613, i8*** %614, align 8
  br label %615

; <label>:615:                                    ; preds = %612, %608
  %616 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.214, i32 0, i32 5
  %617 = load i8**, i8*** %616, align 8
  %618 = call i32 @uniqueiv_check(i8** %617, i8* %18)
  %619 = icmp eq i32 %618, 0
  br i1 %619, label %620, label %1589

; <label>:620:                                    ; preds = %615
  %621 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.214, i32 0, i32 7
  %622 = load i64, i64* %621, align 8
  %623 = mul nsw i64 %622, 5
  %624 = trunc i64 %623 to i32
  %625 = add nsw i32 %624, 5
  %626 = sext i32 %625 to i64
  %627 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.214, i32 0, i32 6
  %628 = load i64, i64* %627, align 8
  %629 = icmp sgt i64 %626, %628
  br i1 %629, label %630, label %645

; <label>:630:                                    ; preds = %620
  %631 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.214, i32 0, i32 6
  %632 = load i64, i64* %631, align 8
  %633 = add nsw i64 %632, 131072
  store i64 %633, i64* %631, align 8
  %634 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.214, i32 0, i32 4
  %635 = load i8*, i8** %634, align 8
  %636 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.214, i32 0, i32 6
  %637 = load i64, i64* %636, align 8
  %638 = call i8* @realloc(i8* %635, i64 %637) #9, !track !87
  %639 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.214, i32 0, i32 4
  store i8* %638, i8** %639, align 8
  %640 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.214, i32 0, i32 4
  %641 = load i8*, i8** %640, align 8
  %642 = icmp eq i8* %641, null
  br i1 %642, label %643, label %645

; <label>:643:                                    ; preds = %630
  %644 = getelementptr [15 x i8], [15 x i8]* @.str.25, i32 0, i32 0
  call void @perror(i8* %644)
  br label %._crit_edge87

; <label>:645:                                    ; preds = %630, %620
  %646 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.214, i32 0, i32 4
  %647 = load i8*, i8** %646, align 8
  %648 = sext i32 %624 to i64
  %649 = getelementptr inbounds i8, i8* %647, i64 %648
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %649, i8* align 1 %18, i64 5, i1 false), !track !88
  %650 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.214, i32 0, i32 5
  %651 = load i8**, i8*** %650, align 8
  %652 = call i32 @uniqueiv_mark(i8** %651, i8* %18)
  %653 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.214, i32 0, i32 7
  %654 = load i64, i64* %653, align 8
  %655 = add nsw i64 %654, 1
  store i64 %655, i64* %653, align 8
  br label %1589

; <label>:656:                                    ; preds = %605
  %657 = load i16, i16* %199, align 2
  %658 = zext i16 %657 to i32
  %659 = and i32 %658, 2
  %660 = icmp ne i32 %659, 0
  br i1 %660, label %661, label %666

; <label>:661:                                    ; preds = %656
  %662 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.214, i32 0, i32 2
  %663 = getelementptr inbounds [33 x i8], [33 x i8]* %662, i32 0, i32 0
  %664 = load i16, i16* %207, align 2
  %665 = zext i16 %664 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %663, i8* align 1 %18, i64 %665, i1 false), !track !89
  br label %1589

; <label>:666:                                    ; preds = %656
  %667 = load i16, i16* %208, align 2
  %668 = zext i16 %667 to i32
  %669 = and i32 %668, 8
  %670 = icmp ne i32 %669, 0
  br i1 %670, label %671, label %757

; <label>:671:                                    ; preds = %666
  %672 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.214, i32 0, i32 10
  store i32 2, i32* %672, align 8
  %673 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 20), align 4
  %674 = icmp ne i32 %673, 0
  br i1 %674, label %675, label %699

; <label>:675:                                    ; preds = %671
  %676 = load i16, i16* %219, align 2
  %677 = zext i16 %676 to i32
  %678 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %679 = add nsw i32 %678, 3
  %680 = icmp slt i32 %677, %679
  br i1 %680, label %1589, label %681

; <label>:681:                                    ; preds = %675
  %682 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.214, i32 0, i32 15
  %683 = load %struct.PTW_attackstate*, %struct.PTW_attackstate** %682, align 8
  %684 = call i32 @PTW_addsession(%struct.PTW_attackstate* %683, i8* %18, i8* %229, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @PTW_DEFAULTWEIGHT, i64 0, i64 0), i32 1)
  %685 = icmp ne i32 %684, 0
  br i1 %685, label %686, label %690

; <label>:686:                                    ; preds = %681
  %687 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.214, i32 0, i32 8
  %688 = load i64, i64* %687, align 8
  %689 = add nsw i64 %688, 1
  store i64 %689, i64* %687, align 8
  br label %690

; <label>:690:                                    ; preds = %686, %681
  %691 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.214, i32 0, i32 16
  %692 = load %struct.PTW_attackstate*, %struct.PTW_attackstate** %691, align 8
  %693 = call i32 @PTW_addsession(%struct.PTW_attackstate* %692, i8* %18, i8* %240, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @PTW_DEFAULTWEIGHT, i64 0, i64 0), i32 1)
  %694 = icmp ne i32 %693, 0
  br i1 %694, label %695, label %1589

; <label>:695:                                    ; preds = %690
  %696 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.214, i32 0, i32 9
  %697 = load i64, i64* %696, align 8
  %698 = add nsw i64 %697, 1
  store i64 %698, i64* %696, align 8
  br label %1589

; <label>:699:                                    ; preds = %671
  %700 = load i8, i8* %220, align 1
  store i8 %700, i8* %221, align 1
  %701 = load i8, i8* %222, align 1
  store i8 %701, i8* %223, align 1
  %702 = load i8, i8* %224, align 1
  %703 = zext i8 %702 to i32
  %704 = xor i32 %703, 170
  %705 = trunc i32 %704 to i8
  store i8 %705, i8* %224, align 1
  %706 = load i8, i8* %225, align 1
  %707 = zext i8 %706 to i32
  %708 = xor i32 %707, 170
  %709 = trunc i32 %708 to i8
  store i8 %709, i8* %225, align 1
  %710 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.214, i32 0, i32 7
  %711 = load i64, i64* %710, align 8
  %712 = icmp eq i64 %711, 0
  br i1 %712, label %713, label %716

; <label>:713:                                    ; preds = %699
  %714 = call i8** @uniqueiv_init()
  %715 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.214, i32 0, i32 5
  store i8** %714, i8*** %715, align 8
  br label %716

; <label>:716:                                    ; preds = %713, %699
  %717 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.214, i32 0, i32 5
  %718 = load i8**, i8*** %717, align 8
  %719 = call i32 @uniqueiv_check(i8** %718, i8* %18)
  %720 = icmp eq i32 %719, 0
  br i1 %720, label %721, label %1589

; <label>:721:                                    ; preds = %716
  %722 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.214, i32 0, i32 7
  %723 = load i64, i64* %722, align 8
  %724 = mul nsw i64 %723, 5
  %725 = trunc i64 %724 to i32
  %726 = add nsw i32 %725, 5
  %727 = sext i32 %726 to i64
  %728 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.214, i32 0, i32 6
  %729 = load i64, i64* %728, align 8
  %730 = icmp sgt i64 %727, %729
  br i1 %730, label %731, label %746

; <label>:731:                                    ; preds = %721
  %732 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.214, i32 0, i32 6
  %733 = load i64, i64* %732, align 8
  %734 = add nsw i64 %733, 131072
  store i64 %734, i64* %732, align 8
  %735 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.214, i32 0, i32 4
  %736 = load i8*, i8** %735, align 8
  %737 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.214, i32 0, i32 6
  %738 = load i64, i64* %737, align 8
  %739 = call i8* @realloc(i8* %736, i64 %738) #9, !track !90
  %740 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.214, i32 0, i32 4
  store i8* %739, i8** %740, align 8
  %741 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.214, i32 0, i32 4
  %742 = load i8*, i8** %741, align 8
  %743 = icmp eq i8* %742, null
  br i1 %743, label %744, label %746

; <label>:744:                                    ; preds = %731
  %745 = getelementptr [15 x i8], [15 x i8]* @.str.25, i32 0, i32 0
  call void @perror(i8* %745)
  br label %._crit_edge87

; <label>:746:                                    ; preds = %731, %721
  %747 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.214, i32 0, i32 4
  %748 = load i8*, i8** %747, align 8
  %749 = sext i32 %725 to i64
  %750 = getelementptr inbounds i8, i8* %748, i64 %749
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %750, i8* align 1 %18, i64 5, i1 false), !track !91
  %751 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.214, i32 0, i32 5
  %752 = load i8**, i8*** %751, align 8
  %753 = call i32 @uniqueiv_mark(i8** %752, i8* %18)
  %754 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.214, i32 0, i32 7
  %755 = load i64, i64* %754, align 8
  %756 = add nsw i64 %755, 1
  store i64 %756, i64* %754, align 8
  br label %1589

; <label>:757:                                    ; preds = %666
  %758 = load i16, i16* %213, align 2
  %759 = zext i16 %758 to i32
  %760 = and i32 %759, 16
  %761 = icmp ne i32 %760, 0
  br i1 %761, label %762, label %852

; <label>:762:                                    ; preds = %757
  %763 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.214, i32 0, i32 10
  store i32 2, i32* %763, align 8
  %764 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 20), align 4
  %765 = icmp ne i32 %764, 0
  br i1 %765, label %766, label %794

; <label>:766:                                    ; preds = %762
  %767 = load i16, i16* %230, align 2
  %768 = zext i16 %767 to i32
  %769 = load i8, i8* %231, align 1
  %770 = zext i8 %769 to i32
  %771 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %772 = icmp slt i32 %770, %771
  br i1 %772, label %1589, label %773

; <label>:773:                                    ; preds = %766
  %774 = load i8, i8* %241, align 1
  %775 = zext i8 %774 to i32
  %776 = mul nsw i32 %775, 32
  %777 = add nsw i32 6, %776
  %778 = add nsw i32 %777, 64
  %779 = icmp slt i32 %768, %778
  br i1 %779, label %1589, label %780

; <label>:780:                                    ; preds = %773
  %781 = sext i32 %768 to i64
  %782 = getelementptr inbounds i8, i8* %18, i64 %781
  %783 = getelementptr inbounds i8, i8* %782, i64 -60
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %244, i8* align 1 %783, i64 64, i1 false), !track !92
  %784 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.214, i32 0, i32 16
  %785 = load %struct.PTW_attackstate*, %struct.PTW_attackstate** %784, align 8
  %786 = load i8, i8* %247, align 1
  %787 = zext i8 %786 to i32
  %788 = call i32 @PTW_addsession(%struct.PTW_attackstate* %785, i8* %18, i8* %245, i32* %246, i32 %787)
  %789 = icmp ne i32 %788, 0
  br i1 %789, label %790, label %1589

; <label>:790:                                    ; preds = %780
  %791 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.214, i32 0, i32 9
  %792 = load i64, i64* %791, align 8
  %793 = add nsw i64 %792, 1
  store i64 %793, i64* %791, align 8
  br label %1589

; <label>:794:                                    ; preds = %762
  %795 = load i8, i8* %232, align 1
  store i8 %795, i8* %233, align 1
  %796 = load i8, i8* %234, align 1
  store i8 %796, i8* %235, align 1
  %797 = load i8, i8* %236, align 1
  %798 = zext i8 %797 to i32
  %799 = xor i32 %798, 170
  %800 = trunc i32 %799 to i8
  store i8 %800, i8* %236, align 1
  %801 = load i8, i8* %237, align 1
  %802 = zext i8 %801 to i32
  %803 = xor i32 %802, 170
  %804 = trunc i32 %803 to i8
  store i8 %804, i8* %237, align 1
  %805 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.214, i32 0, i32 7
  %806 = load i64, i64* %805, align 8
  %807 = icmp eq i64 %806, 0
  br i1 %807, label %808, label %811

; <label>:808:                                    ; preds = %794
  %809 = call i8** @uniqueiv_init()
  %810 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.214, i32 0, i32 5
  store i8** %809, i8*** %810, align 8
  br label %811

; <label>:811:                                    ; preds = %808, %794
  %812 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.214, i32 0, i32 5
  %813 = load i8**, i8*** %812, align 8
  %814 = call i32 @uniqueiv_check(i8** %813, i8* %18)
  %815 = icmp eq i32 %814, 0
  br i1 %815, label %816, label %1589

; <label>:816:                                    ; preds = %811
  %817 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.214, i32 0, i32 7
  %818 = load i64, i64* %817, align 8
  %819 = mul nsw i64 %818, 5
  %820 = trunc i64 %819 to i32
  %821 = add nsw i32 %820, 5
  %822 = sext i32 %821 to i64
  %823 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.214, i32 0, i32 6
  %824 = load i64, i64* %823, align 8
  %825 = icmp sgt i64 %822, %824
  br i1 %825, label %826, label %841

; <label>:826:                                    ; preds = %816
  %827 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.214, i32 0, i32 6
  %828 = load i64, i64* %827, align 8
  %829 = add nsw i64 %828, 131072
  store i64 %829, i64* %827, align 8
  %830 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.214, i32 0, i32 4
  %831 = load i8*, i8** %830, align 8
  %832 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.214, i32 0, i32 6
  %833 = load i64, i64* %832, align 8
  %834 = call i8* @realloc(i8* %831, i64 %833) #9, !track !93
  %835 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.214, i32 0, i32 4
  store i8* %834, i8** %835, align 8
  %836 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.214, i32 0, i32 4
  %837 = load i8*, i8** %836, align 8
  %838 = icmp eq i8* %837, null
  br i1 %838, label %839, label %841

; <label>:839:                                    ; preds = %826
  %840 = getelementptr [15 x i8], [15 x i8]* @.str.25, i32 0, i32 0
  call void @perror(i8* %840)
  br label %._crit_edge87

; <label>:841:                                    ; preds = %826, %816
  %842 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.214, i32 0, i32 4
  %843 = load i8*, i8** %842, align 8
  %844 = sext i32 %820 to i64
  %845 = getelementptr inbounds i8, i8* %843, i64 %844
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %845, i8* align 1 %18, i64 5, i1 false), !track !94
  %846 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.214, i32 0, i32 5
  %847 = load i8**, i8*** %846, align 8
  %848 = call i32 @uniqueiv_mark(i8** %847, i8* %18)
  %849 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.214, i32 0, i32 7
  %850 = load i64, i64* %849, align 8
  %851 = add nsw i64 %850, 1
  store i64 %851, i64* %849, align 8
  br label %1589

; <label>:852:                                    ; preds = %757
  %853 = load i16, i16* %226, align 2
  %854 = zext i16 %853 to i32
  %855 = and i32 %854, 4
  %856 = icmp ne i32 %855, 0
  br i1 %856, label %857, label %1589

; <label>:857:                                    ; preds = %852
  %858 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.214, i32 0, i32 10
  store i32 3, i32* %858, align 8
  %859 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.214, i32 0, i32 14
  %860 = bitcast %struct.WPA_hdsk* %859 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %860, i8* align 1 %18, i64 356, i1 false), !track !95
  br label %1589

; <label>:861:                                    ; preds = %605
  %862 = getelementptr inbounds i8, i8* %.5, i64 1
  %863 = load i8, i8* %862, align 1
  %864 = zext i8 %863 to i32
  %865 = and i32 %864, 3
  switch i32 %865, label %913 [
    i32 0, label %866
    i32 1, label %868
    i32 2, label %870
  ]

; <label>:866:                                    ; preds = %861
  %867 = getelementptr inbounds i8, i8* %.5, i64 10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %205, i8* align 1 %867, i64 6, i1 false), !track !96
  br label %878

; <label>:868:                                    ; preds = %861
  %869 = getelementptr inbounds i8, i8* %.5, i64 10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %206, i8* align 1 %869, i64 6, i1 false), !track !97
  br label %878

; <label>:870:                                    ; preds = %861
  %871 = getelementptr inbounds i8, i8* %.5, i64 4
  %872 = load i8, i8* %871, align 1
  %873 = zext i8 %872 to i32
  %874 = srem i32 %873, 2
  %875 = icmp ne i32 %874, 0
  br i1 %875, label %913, label %876

; <label>:876:                                    ; preds = %870
  %877 = getelementptr inbounds i8, i8* %.5, i64 4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %212, i8* align 1 %877, i64 6, i1 false), !track !98
  br label %878

; <label>:878:                                    ; preds = %876, %868, %866
  %879 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.214, i32 0, i32 13
  %880 = load %struct.ST_info*, %struct.ST_info** %879, align 8
  %881 = icmp ne %struct.ST_info* %880, null
  br i1 %881, label %.lr.ph61, label %._crit_edge8

.lr.ph61:                                         ; preds = %878
  %882 = getelementptr inbounds %struct.ST_info, %struct.ST_info* %880, i32 0, i32 3
  %883 = getelementptr inbounds [6 x i8], [6 x i8]* %882, i32 0, i32 0
  %884 = call i32 @memcmp(i8* %883, i8* %211, i64 6) #10
  %885 = icmp ne i32 %884, 0
  br i1 %885, label %.lr.ph7.preheader, label %._crit_edge8

.lr.ph7.preheader:                                ; preds = %.lr.ph61
  br label %.lr.ph7

; <label>:886:                                    ; preds = %.lr.ph7
  %.01758 = phi %struct.ST_info* [ %892, %.lr.ph7 ]
  %887 = getelementptr inbounds %struct.ST_info, %struct.ST_info* %.01758, i32 0, i32 3
  %888 = getelementptr inbounds [6 x i8], [6 x i8]* %887, i32 0, i32 0
  %889 = call i32 @memcmp(i8* %888, i8* %211, i64 6) #10
  %890 = icmp ne i32 %889, 0
  br i1 %890, label %.lr.ph7, label %._crit_edge8.loopexit

.lr.ph7:                                          ; preds = %.lr.ph7.preheader, %886
  %.017586 = phi %struct.ST_info* [ %.01758, %886 ], [ %880, %.lr.ph7.preheader ]
  call void @unroll_loop(i32 40)
  %891 = getelementptr inbounds %struct.ST_info, %struct.ST_info* %.017586, i32 0, i32 1
  %892 = load %struct.ST_info*, %struct.ST_info** %891, align 8
  %893 = icmp ne %struct.ST_info* %892, null
  br i1 %893, label %886, label %._crit_edge8.loopexit

._crit_edge8.loopexit:                            ; preds = %886, %.lr.ph7
  %.017.lcssa.ph = phi %struct.ST_info* [ %.01758, %886 ], [ %892, %.lr.ph7 ]
  %.016.lcssa.ph = phi %struct.ST_info* [ %.017586, %886 ], [ %.017586, %.lr.ph7 ]
  br label %._crit_edge8

._crit_edge8:                                     ; preds = %._crit_edge8.loopexit, %878, %.lr.ph61
  %.017.lcssa = phi %struct.ST_info* [ %880, %.lr.ph61 ], [ %880, %878 ], [ %.017.lcssa.ph, %._crit_edge8.loopexit ]
  %.016.lcssa = phi %struct.ST_info* [ null, %.lr.ph61 ], [ null, %878 ], [ %.016.lcssa.ph, %._crit_edge8.loopexit ]
  %894 = icmp eq %struct.ST_info* %.017.lcssa, null
  br i1 %894, label %895, label %913

; <label>:895:                                    ; preds = %._crit_edge8
  %896 = call noalias i8* @malloc(i64 384) #9, !track !99
  %897 = bitcast i8* %896 to %struct.ST_info*
  %898 = icmp ne %struct.ST_info* %897, null
  br i1 %898, label %901, label %899

; <label>:899:                                    ; preds = %895
  %900 = getelementptr [14 x i8], [14 x i8]* @.str.7, i32 0, i32 0
  call void @perror(i8* %900)
  br label %._crit_edge87

; <label>:901:                                    ; preds = %895
  %902 = bitcast %struct.ST_info* %897 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %902, i8 0, i64 384, i1 false)
  %903 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.214, i32 0, i32 13
  %904 = load %struct.ST_info*, %struct.ST_info** %903, align 8
  %905 = icmp eq %struct.ST_info* %904, null
  br i1 %905, label %906, label %908

; <label>:906:                                    ; preds = %901
  %907 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.214, i32 0, i32 13
  store %struct.ST_info* %897, %struct.ST_info** %907, align 8
  br label %910

; <label>:908:                                    ; preds = %901
  %909 = getelementptr inbounds %struct.ST_info, %struct.ST_info* %.016.lcssa, i32 0, i32 1
  store %struct.ST_info* %897, %struct.ST_info** %909, align 8
  br label %910

; <label>:910:                                    ; preds = %908, %906
  %911 = getelementptr inbounds %struct.ST_info, %struct.ST_info* %897, i32 0, i32 3
  %912 = getelementptr inbounds [6 x i8], [6 x i8]* %911, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %912, i8* align 1 %239, i64 6, i1 false), !track !100
  br label %913

; <label>:913:                                    ; preds = %._crit_edge8, %910, %861, %870
  %.219 = phi %struct.ST_info* [ null, %870 ], [ null, %861 ], [ %897, %910 ], [ %.017.lcssa, %._crit_edge8 ]
  %914 = getelementptr inbounds i8, i8* %.5, i64 0
  %915 = load i8, i8* %914, align 1
  %916 = zext i8 %915 to i32
  %917 = icmp eq i32 %916, 128
  br i1 %917, label %923, label %918

; <label>:918:                                    ; preds = %913
  %919 = getelementptr inbounds i8, i8* %.5, i64 0
  %920 = load i8, i8* %919, align 1
  %921 = zext i8 %920 to i32
  %922 = icmp eq i32 %921, 80
  br i1 %922, label %923, label %.loopexit29

; <label>:923:                                    ; preds = %918, %913
  %924 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.214, i32 0, i32 10
  %925 = load i32, i32* %924, align 8
  %926 = icmp slt i32 %925, 0
  br i1 %926, label %927, label %934

; <label>:927:                                    ; preds = %923
  %928 = getelementptr inbounds i8, i8* %.5, i64 34
  %929 = load i8, i8* %928, align 1
  %930 = zext i8 %929 to i32
  %931 = and i32 %930, 16
  %932 = ashr i32 %931, 4
  %933 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.214, i32 0, i32 10
  store i32 %932, i32* %933, align 8
  br label %934

; <label>:934:                                    ; preds = %927, %923
  %935 = getelementptr inbounds i8, i8* %.5, i64 36
  %936 = load i32, i32* %217, align 4
  %937 = zext i32 %936 to i64
  %938 = getelementptr inbounds i8, i8* %.5, i64 %937
  %939 = icmp ult i8* %935, %938
  br i1 %939, label %.lr.ph66.preheader, label %.loopexit29

.lr.ph66.preheader:                               ; preds = %934
  %940 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.214, i32 0, i32 2
  %941 = getelementptr inbounds [33 x i8], [33 x i8]* %940, i32 0, i32 0
  %942 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.214, i32 0, i32 2
  %943 = getelementptr inbounds [33 x i8], [33 x i8]* %942, i32 0, i32 0
  br label %.lr.ph66

.lr.ph66:                                         ; preds = %.lr.ph66.preheader, %981
  %.0964 = phi i8* [ %987, %981 ], [ %935, %.lr.ph66.preheader ]
  call void @unroll_loop(i32 41)
  %944 = getelementptr inbounds i8, i8* %.0964, i64 2
  %945 = getelementptr inbounds i8, i8* %.0964, i64 1
  %946 = load i8, i8* %945, align 1
  %947 = zext i8 %946 to i32
  %948 = sext i32 %947 to i64
  %949 = getelementptr inbounds i8, i8* %944, i64 %948
  %950 = load i32, i32* %227, align 4
  %951 = zext i32 %950 to i64
  %952 = getelementptr inbounds i8, i8* %.5, i64 %951
  %953 = icmp ugt i8* %949, %952
  br i1 %953, label %.loopexit29.loopexit, label %954

; <label>:954:                                    ; preds = %.lr.ph66
  %955 = load i8, i8* %.0964, align 1
  %956 = zext i8 %955 to i32
  %957 = icmp eq i32 %956, 0
  br i1 %957, label %958, label %981

; <label>:958:                                    ; preds = %954
  %959 = getelementptr inbounds i8, i8* %.0964, i64 1
  %960 = load i8, i8* %959, align 1
  %961 = zext i8 %960 to i32
  %962 = icmp sgt i32 %961, 0
  br i1 %962, label %963, label %981

; <label>:963:                                    ; preds = %958
  %964 = getelementptr inbounds i8, i8* %.0964, i64 2
  %965 = load i8, i8* %964, align 1
  %966 = zext i8 %965 to i32
  %967 = icmp ne i32 %966, 0
  br i1 %967, label %968, label %981

; <label>:968:                                    ; preds = %963
  %969 = getelementptr inbounds i8, i8* %.0964, i64 1
  %970 = load i8, i8* %969, align 1
  %971 = zext i8 %970 to i32
  %972 = icmp sgt i32 %971, 32
  br i1 %972, label %977, label %973

; <label>:973:                                    ; preds = %968
  %974 = getelementptr inbounds i8, i8* %.0964, i64 1
  %975 = load i8, i8* %974, align 1
  %976 = zext i8 %975 to i32
  br label %977

; <label>:977:                                    ; preds = %968, %973
  %978 = phi i32 [ %976, %973 ], [ 32, %968 ]
  call void @llvm.memset.p0i8.i64(i8* align 2 %941, i8 0, i64 33, i1 false)
  %979 = getelementptr inbounds i8, i8* %.0964, i64 2
  %980 = sext i32 %978 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %943, i8* align 1 %979, i64 %980, i1 false), !track !101
  br label %981

; <label>:981:                                    ; preds = %977, %963, %958, %954
  %982 = getelementptr inbounds i8, i8* %.0964, i64 1
  %983 = load i8, i8* %982, align 1
  %984 = zext i8 %983 to i32
  %985 = add nsw i32 2, %984
  %986 = sext i32 %985 to i64
  %987 = getelementptr inbounds i8, i8* %.0964, i64 %986
  %988 = load i32, i32* %217, align 4
  %989 = zext i32 %988 to i64
  %990 = getelementptr inbounds i8, i8* %.5, i64 %989
  %991 = icmp ult i8* %987, %990
  br i1 %991, label %.lr.ph66, label %.loopexit29.loopexit

.loopexit29.loopexit:                             ; preds = %981, %.lr.ph66
  br label %.loopexit29

.loopexit29:                                      ; preds = %.loopexit29.loopexit, %934, %918
  %992 = getelementptr inbounds i8, i8* %.5, i64 0
  %993 = load i8, i8* %992, align 1
  %994 = zext i8 %993 to i32
  %995 = icmp eq i32 %994, 0
  br i1 %995, label %996, label %.loopexit

; <label>:996:                                    ; preds = %.loopexit29
  %997 = getelementptr inbounds i8, i8* %.5, i64 28
  %998 = load i32, i32* %218, align 4
  %999 = zext i32 %998 to i64
  %1000 = getelementptr inbounds i8, i8* %.5, i64 %999
  %1001 = icmp ult i8* %997, %1000
  br i1 %1001, label %.lr.ph69.preheader, label %.loopexit

.lr.ph69.preheader:                               ; preds = %996
  %1002 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.214, i32 0, i32 2
  %1003 = getelementptr inbounds [33 x i8], [33 x i8]* %1002, i32 0, i32 0
  %1004 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.214, i32 0, i32 2
  %1005 = getelementptr inbounds [33 x i8], [33 x i8]* %1004, i32 0, i32 0
  br label %.lr.ph69

.lr.ph69:                                         ; preds = %.lr.ph69.preheader, %1043
  %.11067 = phi i8* [ %1049, %1043 ], [ %997, %.lr.ph69.preheader ]
  call void @unroll_loop(i32 42)
  %1006 = getelementptr inbounds i8, i8* %.11067, i64 2
  %1007 = getelementptr inbounds i8, i8* %.11067, i64 1
  %1008 = load i8, i8* %1007, align 1
  %1009 = zext i8 %1008 to i32
  %1010 = sext i32 %1009 to i64
  %1011 = getelementptr inbounds i8, i8* %1006, i64 %1010
  %1012 = load i32, i32* %228, align 4
  %1013 = zext i32 %1012 to i64
  %1014 = getelementptr inbounds i8, i8* %.5, i64 %1013
  %1015 = icmp ugt i8* %1011, %1014
  br i1 %1015, label %.loopexit.loopexit, label %1016

; <label>:1016:                                   ; preds = %.lr.ph69
  %1017 = load i8, i8* %.11067, align 1
  %1018 = zext i8 %1017 to i32
  %1019 = icmp eq i32 %1018, 0
  br i1 %1019, label %1020, label %1043

; <label>:1020:                                   ; preds = %1016
  %1021 = getelementptr inbounds i8, i8* %.11067, i64 1
  %1022 = load i8, i8* %1021, align 1
  %1023 = zext i8 %1022 to i32
  %1024 = icmp sgt i32 %1023, 0
  br i1 %1024, label %1025, label %1043

; <label>:1025:                                   ; preds = %1020
  %1026 = getelementptr inbounds i8, i8* %.11067, i64 2
  %1027 = load i8, i8* %1026, align 1
  %1028 = zext i8 %1027 to i32
  %1029 = icmp ne i32 %1028, 0
  br i1 %1029, label %1030, label %1043

; <label>:1030:                                   ; preds = %1025
  %1031 = getelementptr inbounds i8, i8* %.11067, i64 1
  %1032 = load i8, i8* %1031, align 1
  %1033 = zext i8 %1032 to i32
  %1034 = icmp sgt i32 %1033, 32
  br i1 %1034, label %1039, label %1035

; <label>:1035:                                   ; preds = %1030
  %1036 = getelementptr inbounds i8, i8* %.11067, i64 1
  %1037 = load i8, i8* %1036, align 1
  %1038 = zext i8 %1037 to i32
  br label %1039

; <label>:1039:                                   ; preds = %1030, %1035
  %1040 = phi i32 [ %1038, %1035 ], [ 32, %1030 ]
  call void @llvm.memset.p0i8.i64(i8* align 2 %1003, i8 0, i64 33, i1 false)
  %1041 = getelementptr inbounds i8, i8* %.11067, i64 2
  %1042 = sext i32 %1040 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %1005, i8* align 1 %1041, i64 %1042, i1 false), !track !102
  br label %1043

; <label>:1043:                                   ; preds = %1039, %1025, %1020, %1016
  %1044 = getelementptr inbounds i8, i8* %.11067, i64 1
  %1045 = load i8, i8* %1044, align 1
  %1046 = zext i8 %1045 to i32
  %1047 = add nsw i32 2, %1046
  %1048 = sext i32 %1047 to i64
  %1049 = getelementptr inbounds i8, i8* %.11067, i64 %1048
  %1050 = load i32, i32* %218, align 4
  %1051 = zext i32 %1050 to i64
  %1052 = getelementptr inbounds i8, i8* %.5, i64 %1051
  %1053 = icmp ult i8* %1049, %1052
  br i1 %1053, label %.lr.ph69, label %.loopexit.loopexit

.loopexit.loopexit:                               ; preds = %1043, %.lr.ph69
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit.loopexit, %996, %.loopexit29
  %1054 = getelementptr inbounds i8, i8* %.5, i64 0
  %1055 = load i8, i8* %1054, align 1
  %1056 = zext i8 %1055 to i32
  %1057 = icmp eq i32 %1056, 16
  %1058 = icmp ne %struct.ST_info* %.219, null
  %or.cond = and i1 %1057, %1058
  br i1 %or.cond, label %1059, label %1062

; <label>:1059:                                   ; preds = %.loopexit
  %1060 = getelementptr inbounds %struct.ST_info, %struct.ST_info* %.219, i32 0, i32 2
  %1061 = getelementptr inbounds %struct.WPA_hdsk, %struct.WPA_hdsk* %1060, i32 0, i32 7
  store i32 0, i32* %1061, align 8
  br label %1062

; <label>:1062:                                   ; preds = %1059, %.loopexit
  %1063 = getelementptr inbounds i8, i8* %.5, i64 0
  %1064 = load i8, i8* %1063, align 1
  %1065 = zext i8 %1064 to i32
  %1066 = and i32 %1065, 12
  %1067 = icmp ne i32 %1066, 8
  br i1 %1067, label %1589, label %1068

; <label>:1068:                                   ; preds = %1062
  %1069 = getelementptr inbounds i8, i8* %.5, i64 1
  %1070 = load i8, i8* %1069, align 1
  %1071 = zext i8 %1070 to i32
  %1072 = and i32 %1071, 3
  %1073 = icmp ne i32 %1072, 3
  %1074 = select i1 %1073, i32 24, i32 30
  %1075 = getelementptr inbounds i8, i8* %.5, i64 0
  %1076 = load i8, i8* %1075, align 1
  %1077 = zext i8 %1076 to i32
  %1078 = and i32 %1077, 128
  %1079 = icmp eq i32 %1078, 128
  %1080 = add nsw i32 %1074, 2
  %spec.select1 = select i1 %1079, i32 %1080, i32 %1074
  %1081 = add nsw i32 %spec.select1, 16
  %1082 = load i32, i32* %238, align 4
  %1083 = icmp sgt i32 %1081, %1082
  br i1 %1083, label %1589, label %1084

; <label>:1084:                                   ; preds = %1068
  %1085 = sext i32 %spec.select1 to i64
  %1086 = getelementptr inbounds i8, i8* %.5, i64 %1085
  %1087 = load i8, i8* %1086, align 1
  %1088 = zext i8 %1087 to i32
  %1089 = add nsw i32 %spec.select1, 1
  %1090 = sext i32 %1089 to i64
  %1091 = getelementptr inbounds i8, i8* %.5, i64 %1090
  %1092 = load i8, i8* %1091, align 1
  %1093 = zext i8 %1092 to i32
  %1094 = icmp ne i32 %1088, %1093
  br i1 %1094, label %1102, label %1095

; <label>:1095:                                   ; preds = %1084
  %1096 = add nsw i32 %spec.select1, 2
  %1097 = sext i32 %1096 to i64
  %1098 = getelementptr inbounds i8, i8* %.5, i64 %1097
  %1099 = load i8, i8* %1098, align 1
  %1100 = zext i8 %1099 to i32
  %1101 = icmp ne i32 %1100, 3
  br i1 %1101, label %1102, label %1210

; <label>:1102:                                   ; preds = %1095, %1084
  %1103 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.214, i32 0, i32 10
  store i32 2, i32* %1103, align 8
  %1104 = add nsw i32 %spec.select1, 3
  %1105 = sext i32 %1104 to i64
  %1106 = getelementptr inbounds i8, i8* %.5, i64 %1105
  %1107 = load i8, i8* %1106, align 1
  %1108 = zext i8 %1107 to i32
  %1109 = and i32 %1108, 32
  %1110 = icmp ne i32 %1109, 0
  br i1 %1110, label %1111, label %1113

; <label>:1111:                                   ; preds = %1102
  %1112 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.214, i32 0, i32 10
  store i32 3, i32* %1112, align 8
  br label %1113

; <label>:1113:                                   ; preds = %1111, %1102
  %1114 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 11), align 8
  %1115 = icmp ne i32 %1114, 0
  br i1 %1115, label %1116, label %1126

; <label>:1116:                                   ; preds = %1113
  %1117 = add nsw i32 %spec.select1, 3
  %1118 = sext i32 %1117 to i64
  %1119 = getelementptr inbounds i8, i8* %.5, i64 %1118
  %1120 = load i8, i8* %1119, align 1
  %1121 = zext i8 %1120 to i32
  %1122 = ashr i32 %1121, 6
  %1123 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 11), align 8
  %1124 = sub nsw i32 %1123, 1
  %1125 = icmp ne i32 %1122, %1124
  br i1 %1125, label %1589, label %1126

; <label>:1126:                                   ; preds = %1116, %1113
  %1127 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 20), align 4
  %1128 = icmp ne i32 %1127, 0
  %1129 = sext i32 %spec.select1 to i64
  %1130 = getelementptr inbounds i8, i8* %.5, i64 %1129
  br i1 %1128, label %1131, label %1188

; <label>:1131:                                   ; preds = %1126
  %1132 = load i32, i32* %250, align 4
  %1133 = zext i32 %1132 to i64
  %1134 = ptrtoint i8* %1130 to i64
  %1135 = ptrtoint i8* %.5 to i64
  %1136 = sub i64 %1134, %1135
  %1137 = sub nsw i64 %1133, %1136
  %1138 = sub nsw i64 %1137, 4
  %1139 = sub nsw i64 %1138, 4
  %1140 = trunc i64 %1139 to i32
  %1141 = getelementptr inbounds i8, i8* %.5, i64 1
  %1142 = load i8, i8* %1141, align 1
  %1143 = zext i8 %1142 to i32
  %1144 = and i32 %1143, 3
  %1145 = icmp eq i32 %1144, 3
  %1146 = getelementptr inbounds i8, i8* %1130, i64 6
  %1147 = sub nsw i32 %1140, 6
  %.022 = select i1 %1145, i8* %1146, i8* %1130
  %.021 = select i1 %1145, i32 %1147, i32 %1140
  call void @llvm.memset.p0i8.i64(i8* align 16 %252, i8 0, i64 64, i1 false)
  call void @llvm.memset.p0i8.i64(i8* align 16 %253, i8 0, i64 2048, i1 false)
  %1148 = call i32 @known_clear(i8* %254, i32* %13, i32* %255, i8* %.5, i32 %.021)
  %1149 = load i32, i32* %13, align 4
  %1150 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %1151 = add nsw i32 %1150, 3
  %1152 = icmp slt i32 %1149, %1151
  br i1 %1152, label %1589, label %1153

; <label>:1153:                                   ; preds = %1131
  %1154 = icmp slt i32 0, %1148
  br i1 %1154, label %.lr.ph76, label %._crit_edge77

.lr.ph76:                                         ; preds = %1153
  %1155 = zext i32 %1148 to i64
  %scevgep = getelementptr i8, i8* %.022, i64 4
  br label %1156

; <label>:1156:                                   ; preds = %.lr.ph76, %._crit_edge73
  %lsr.iv = phi [2048 x i8]* [ %12, %.lr.ph76 ], [ %1168, %._crit_edge73 ]
  %indvars.iv78 = phi i64 [ 0, %.lr.ph76 ], [ %indvars.iv.next79, %._crit_edge73 ]
  call void @unroll_loop(i32 43)
  %1157 = load i32, i32* %13, align 4
  %1158 = icmp slt i32 0, %1157
  br i1 %1158, label %.lr.ph72.preheader, label %._crit_edge73

.lr.ph72.preheader:                               ; preds = %1156
  br label %.lr.ph72

.lr.ph72:                                         ; preds = %.lr.ph72.preheader, %.lr.ph72
  %indvars.iv = phi i64 [ %indvars.iv.next, %.lr.ph72 ], [ 0, %.lr.ph72.preheader ]
  call void @unroll_loop(i32 44)
  %scevgep2 = getelementptr i8, i8* %scevgep, i64 %indvars.iv
  %1159 = load i8, i8* %scevgep2, align 1
  %1160 = zext i8 %1159 to i32
  %scevgep4 = getelementptr [2048 x i8], [2048 x i8]* %lsr.iv, i64 0, i64 %indvars.iv
  %1161 = load i8, i8* %scevgep4, align 1
  %1162 = zext i8 %1161 to i32
  %1163 = xor i32 %1162, %1160
  %1164 = trunc i32 %1163 to i8
  store i8 %1164, i8* %scevgep4, align 1
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %1165 = load i32, i32* %13, align 4
  %1166 = sext i32 %1165 to i64
  %1167 = icmp slt i64 %indvars.iv.next, %1166
  br i1 %1167, label %.lr.ph72, label %._crit_edge73.loopexit

._crit_edge73.loopexit:                           ; preds = %.lr.ph72
  br label %._crit_edge73

._crit_edge73:                                    ; preds = %._crit_edge73.loopexit, %1156
  %indvars.iv.next79 = add nuw nsw i64 %indvars.iv78, 1
  %scevgep3 = getelementptr [2048 x i8], [2048 x i8]* %lsr.iv, i64 0, i64 32
  %1168 = bitcast i8* %scevgep3 to [2048 x i8]*
  %exitcond11 = icmp ne i64 %indvars.iv.next79, %1155
  br i1 %exitcond11, label %1156, label %._crit_edge77.loopexit

._crit_edge77.loopexit:                           ; preds = %._crit_edge73
  br label %._crit_edge77

._crit_edge77:                                    ; preds = %._crit_edge77.loopexit, %1153
  %1169 = icmp eq i32 %1148, 1
  br i1 %1169, label %1170, label %1179

; <label>:1170:                                   ; preds = %._crit_edge77
  %1171 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.214, i32 0, i32 15
  %1172 = load %struct.PTW_attackstate*, %struct.PTW_attackstate** %1171, align 8
  %1173 = call i32 @PTW_addsession(%struct.PTW_attackstate* %1172, i8* %.022, i8* %261, i32* %262, i32 %1148)
  %1174 = icmp ne i32 %1173, 0
  br i1 %1174, label %1175, label %1179

; <label>:1175:                                   ; preds = %1170
  %1176 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.214, i32 0, i32 8
  %1177 = load i64, i64* %1176, align 8
  %1178 = add nsw i64 %1177, 1
  store i64 %1178, i64* %1176, align 8
  br label %1179

; <label>:1179:                                   ; preds = %1170, %1175, %._crit_edge77
  %1180 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.214, i32 0, i32 16
  %1181 = load %struct.PTW_attackstate*, %struct.PTW_attackstate** %1180, align 8
  %1182 = call i32 @PTW_addsession(%struct.PTW_attackstate* %1181, i8* %.022, i8* %263, i32* %264, i32 %1148)
  %1183 = icmp ne i32 %1182, 0
  br i1 %1183, label %1184, label %1589

; <label>:1184:                                   ; preds = %1179
  %1185 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.214, i32 0, i32 9
  %1186 = load i64, i64* %1185, align 8
  %1187 = add nsw i64 %1186, 1
  store i64 %1187, i64* %1185, align 8
  br label %1589

; <label>:1188:                                   ; preds = %1126
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %18, i8* align 1 %1130, i64 3, i1 false), !track !103
  %1189 = sext i32 %spec.select1 to i64
  %1190 = getelementptr inbounds i8, i8* %.5, i64 %1189
  %1191 = getelementptr inbounds i8, i8* %1190, i64 4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %256, i8* align 1 %1191, i64 2, i1 false), !track !104
  %1192 = getelementptr inbounds i8, i8* %.5, i64 4
  %1193 = call i32 @memcmp(i8* %1192, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.26, i64 0, i64 0), i64 6) #10
  %1194 = icmp eq i32 %1193, 0
  br i1 %1194, label %1199, label %1195

; <label>:1195:                                   ; preds = %1188
  %1196 = getelementptr inbounds i8, i8* %.5, i64 16
  %1197 = call i32 @memcmp(i8* %1196, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.26, i64 0, i64 0), i64 6) #10
  %1198 = icmp eq i32 %1197, 0
  br i1 %1198, label %1199, label %608

; <label>:1199:                                   ; preds = %1195, %1188
  %1200 = load i8, i8* %257, align 1
  %1201 = zext i8 %1200 to i32
  %1202 = xor i32 %1201, 66
  %1203 = xor i32 %1202, 170
  %1204 = trunc i32 %1203 to i8
  store i8 %1204, i8* %258, align 1
  %1205 = load i8, i8* %259, align 1
  %1206 = zext i8 %1205 to i32
  %1207 = xor i32 %1206, 66
  %1208 = xor i32 %1207, 170
  %1209 = trunc i32 %1208 to i8
  store i8 %1209, i8* %260, align 1
  br label %608

; <label>:1210:                                   ; preds = %1095
  %1211 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.214, i32 0, i32 10
  %1212 = load i32, i32* %1211, align 8
  %1213 = icmp slt i32 %1212, 0
  br i1 %1213, label %1214, label %1216

; <label>:1214:                                   ; preds = %1210
  %1215 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.214, i32 0, i32 10
  store i32 0, i32* %1215, align 8
  br label %1216

; <label>:1216:                                   ; preds = %1214, %1210
  %1217 = add nsw i32 %spec.select1, 6
  %1218 = add nsw i32 %1217, 20
  %1219 = load i32, i32* %249, align 4
  %1220 = icmp slt i32 %1218, %1219
  br i1 %1220, label %1221, label %1265

; <label>:1221:                                   ; preds = %1216
  %1222 = sext i32 %1217 to i64
  %1223 = getelementptr inbounds i8, i8* %.5, i64 %1222
  %1224 = load i8, i8* %1223, align 1
  %1225 = zext i8 %1224 to i32
  %1226 = icmp eq i32 %1225, 8
  br i1 %1226, label %1227, label %1246

; <label>:1227:                                   ; preds = %1221
  %1228 = add nsw i32 %1217, 1
  %1229 = sext i32 %1228 to i64
  %1230 = getelementptr inbounds i8, i8* %.5, i64 %1229
  %1231 = load i8, i8* %1230, align 1
  %1232 = zext i8 %1231 to i32
  %1233 = icmp eq i32 %1232, 0
  br i1 %1233, label %1234, label %1246

; <label>:1234:                                   ; preds = %1227
  %1235 = getelementptr inbounds i8, i8* %.5, i64 1
  %1236 = load i8, i8* %1235, align 1
  %1237 = zext i8 %1236 to i32
  %1238 = and i32 %1237, 3
  %1239 = icmp eq i32 %1238, 1
  br i1 %1239, label %1240, label %1246

; <label>:1240:                                   ; preds = %1234
  %1241 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.214, i32 0, i32 3
  %1242 = getelementptr inbounds [4 x i8], [4 x i8]* %1241, i32 0, i32 0
  %1243 = add nsw i32 %1217, 14
  %1244 = sext i32 %1243 to i64
  %1245 = getelementptr inbounds i8, i8* %.5, i64 %1244
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1242, i8* align 1 %1245, i64 4, i1 false), !track !105
  br label %1246

; <label>:1246:                                   ; preds = %1240, %1234, %1227, %1221
  %1247 = sext i32 %1217 to i64
  %1248 = getelementptr inbounds i8, i8* %.5, i64 %1247
  %1249 = load i8, i8* %1248, align 1
  %1250 = zext i8 %1249 to i32
  %1251 = icmp eq i32 %1250, 8
  br i1 %1251, label %1252, label %1265

; <label>:1252:                                   ; preds = %1246
  %1253 = add nsw i32 %1217, 1
  %1254 = sext i32 %1253 to i64
  %1255 = getelementptr inbounds i8, i8* %.5, i64 %1254
  %1256 = load i8, i8* %1255, align 1
  %1257 = zext i8 %1256 to i32
  %1258 = icmp eq i32 %1257, 6
  br i1 %1258, label %1259, label %1265

; <label>:1259:                                   ; preds = %1252
  %1260 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.214, i32 0, i32 3
  %1261 = getelementptr inbounds [4 x i8], [4 x i8]* %1260, i32 0, i32 0
  %1262 = add nsw i32 %1217, 16
  %1263 = sext i32 %1262 to i64
  %1264 = getelementptr inbounds i8, i8* %.5, i64 %1263
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1261, i8* align 1 %1264, i64 4, i1 false), !track !106
  br label %1265

; <label>:1265:                                   ; preds = %1246, %1252, %1259, %1216
  %1266 = sext i32 %1217 to i64
  %1267 = getelementptr inbounds i8, i8* %.5, i64 %1266
  %1268 = load i8, i8* %1267, align 1
  %1269 = zext i8 %1268 to i32
  %1270 = icmp ne i32 %1269, 136
  br i1 %1270, label %1589, label %1271

; <label>:1271:                                   ; preds = %1265
  %1272 = add nsw i32 %1217, 1
  %1273 = sext i32 %1272 to i64
  %1274 = getelementptr inbounds i8, i8* %.5, i64 %1273
  %1275 = load i8, i8* %1274, align 1
  %1276 = zext i8 %1275 to i32
  %1277 = icmp ne i32 %1276, 142
  br i1 %1277, label %1589, label %1278

; <label>:1278:                                   ; preds = %1271
  %1279 = add nsw i32 %1217, 2
  %1280 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.214, i32 0, i32 11
  store i32 1, i32* %1280, align 4
  %1281 = add nsw i32 %1279, 1
  %1282 = sext i32 %1281 to i64
  %1283 = getelementptr inbounds i8, i8* %.5, i64 %1282
  %1284 = load i8, i8* %1283, align 1
  %1285 = zext i8 %1284 to i32
  %1286 = icmp ne i32 %1285, 3
  br i1 %1286, label %1589, label %1287

; <label>:1287:                                   ; preds = %1278
  %1288 = add nsw i32 %1279, 4
  %1289 = sext i32 %1288 to i64
  %1290 = getelementptr inbounds i8, i8* %.5, i64 %1289
  %1291 = load i8, i8* %1290, align 1
  %1292 = zext i8 %1291 to i32
  %1293 = icmp ne i32 %1292, 254
  br i1 %1293, label %1294, label %1301

; <label>:1294:                                   ; preds = %1287
  %1295 = add nsw i32 %1279, 4
  %1296 = sext i32 %1295 to i64
  %1297 = getelementptr inbounds i8, i8* %.5, i64 %1296
  %1298 = load i8, i8* %1297, align 1
  %1299 = zext i8 %1298 to i32
  %1300 = icmp ne i32 %1299, 2
  br i1 %1300, label %1589, label %1301

; <label>:1301:                                   ; preds = %1294, %1287
  %1302 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.214, i32 0, i32 11
  store i32 0, i32* %1302, align 4
  %1303 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.214, i32 0, i32 10
  store i32 3, i32* %1303, align 8
  %1304 = icmp eq %struct.ST_info* %.219, null
  br i1 %1304, label %1305, label %1307

; <label>:1305:                                   ; preds = %1301
  %1306 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* @mx_apl) #9
  br label %.backedge

; <label>:1307:                                   ; preds = %1301
  %1308 = add nsw i32 %1279, 6
  %1309 = sext i32 %1308 to i64
  %1310 = getelementptr inbounds i8, i8* %.5, i64 %1309
  %1311 = load i8, i8* %1310, align 1
  %1312 = zext i8 %1311 to i32
  %1313 = and i32 %1312, 8
  %1314 = icmp ne i32 %1313, 0
  br i1 %1314, label %1315, label %1348

; <label>:1315:                                   ; preds = %1307
  %1316 = add nsw i32 %1279, 6
  %1317 = sext i32 %1316 to i64
  %1318 = getelementptr inbounds i8, i8* %.5, i64 %1317
  %1319 = load i8, i8* %1318, align 1
  %1320 = zext i8 %1319 to i32
  %1321 = and i32 %1320, 64
  %1322 = icmp eq i32 %1321, 0
  br i1 %1322, label %1323, label %1348

; <label>:1323:                                   ; preds = %1315
  %1324 = add nsw i32 %1279, 6
  %1325 = sext i32 %1324 to i64
  %1326 = getelementptr inbounds i8, i8* %.5, i64 %1325
  %1327 = load i8, i8* %1326, align 1
  %1328 = zext i8 %1327 to i32
  %1329 = and i32 %1328, 128
  %1330 = icmp ne i32 %1329, 0
  br i1 %1330, label %1331, label %1348

; <label>:1331:                                   ; preds = %1323
  %1332 = add nsw i32 %1279, 5
  %1333 = sext i32 %1332 to i64
  %1334 = getelementptr inbounds i8, i8* %.5, i64 %1333
  %1335 = load i8, i8* %1334, align 1
  %1336 = zext i8 %1335 to i32
  %1337 = and i32 %1336, 1
  %1338 = icmp eq i32 %1337, 0
  br i1 %1338, label %1339, label %1348

; <label>:1339:                                   ; preds = %1331
  %1340 = getelementptr inbounds %struct.ST_info, %struct.ST_info* %.219, i32 0, i32 2
  %1341 = getelementptr inbounds %struct.WPA_hdsk, %struct.WPA_hdsk* %1340, i32 0, i32 2
  %1342 = getelementptr inbounds [32 x i8], [32 x i8]* %1341, i32 0, i32 0
  %1343 = add nsw i32 %1279, 17
  %1344 = sext i32 %1343 to i64
  %1345 = getelementptr inbounds i8, i8* %.5, i64 %1344
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %1342, i8* align 1 %1345, i64 32, i1 false), !track !107
  %1346 = getelementptr inbounds %struct.ST_info, %struct.ST_info* %.219, i32 0, i32 2
  %1347 = getelementptr inbounds %struct.WPA_hdsk, %struct.WPA_hdsk* %1346, i32 0, i32 7
  store i32 1, i32* %1347, align 8
  br label %1348

; <label>:1348:                                   ; preds = %1339, %1331, %1323, %1315, %1307
  %1349 = add nsw i32 %1279, 6
  %1350 = sext i32 %1349 to i64
  %1351 = getelementptr inbounds i8, i8* %.5, i64 %1350
  %1352 = load i8, i8* %1351, align 1
  %1353 = zext i8 %1352 to i32
  %1354 = and i32 %1353, 8
  %1355 = icmp ne i32 %1354, 0
  br i1 %1355, label %1356, label %1462

; <label>:1356:                                   ; preds = %1348
  %1357 = add nsw i32 %1279, 6
  %1358 = sext i32 %1357 to i64
  %1359 = getelementptr inbounds i8, i8* %.5, i64 %1358
  %1360 = load i8, i8* %1359, align 1
  %1361 = zext i8 %1360 to i32
  %1362 = and i32 %1361, 64
  %1363 = icmp eq i32 %1362, 0
  br i1 %1363, label %1364, label %1462

; <label>:1364:                                   ; preds = %1356
  %1365 = add nsw i32 %1279, 6
  %1366 = sext i32 %1365 to i64
  %1367 = getelementptr inbounds i8, i8* %.5, i64 %1366
  %1368 = load i8, i8* %1367, align 1
  %1369 = zext i8 %1368 to i32
  %1370 = and i32 %1369, 128
  %1371 = icmp eq i32 %1370, 0
  br i1 %1371, label %1372, label %1462

; <label>:1372:                                   ; preds = %1364
  %1373 = add nsw i32 %1279, 5
  %1374 = sext i32 %1373 to i64
  %1375 = getelementptr inbounds i8, i8* %.5, i64 %1374
  %1376 = load i8, i8* %1375, align 1
  %1377 = zext i8 %1376 to i32
  %1378 = and i32 %1377, 1
  %1379 = icmp ne i32 %1378, 0
  br i1 %1379, label %1380, label %1462

; <label>:1380:                                   ; preds = %1372
  %1381 = add nsw i32 %1279, 17
  %1382 = sext i32 %1381 to i64
  %1383 = getelementptr inbounds i8, i8* %.5, i64 %1382
  %1384 = call i32 @memcmp(i8* %1383, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @ZERO, i64 0, i64 0), i64 32) #10
  %1385 = icmp ne i32 %1384, 0
  br i1 %1385, label %1386, label %1397

; <label>:1386:                                   ; preds = %1380
  %1387 = getelementptr inbounds %struct.ST_info, %struct.ST_info* %.219, i32 0, i32 2
  %1388 = getelementptr inbounds %struct.WPA_hdsk, %struct.WPA_hdsk* %1387, i32 0, i32 1
  %1389 = getelementptr inbounds [32 x i8], [32 x i8]* %1388, i32 0, i32 0
  %1390 = add nsw i32 %1279, 17
  %1391 = sext i32 %1390 to i64
  %1392 = getelementptr inbounds i8, i8* %.5, i64 %1391
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %1389, i8* align 1 %1392, i64 32, i1 false), !track !108
  %1393 = getelementptr inbounds %struct.ST_info, %struct.ST_info* %.219, i32 0, i32 2
  %1394 = getelementptr inbounds %struct.WPA_hdsk, %struct.WPA_hdsk* %1393, i32 0, i32 7
  %1395 = load i32, i32* %1394, align 8
  %1396 = or i32 %1395, 2
  store i32 %1396, i32* %1394, align 8
  br label %1397

; <label>:1397:                                   ; preds = %1386, %1380
  %1398 = getelementptr inbounds %struct.ST_info, %struct.ST_info* %.219, i32 0, i32 2
  %1399 = getelementptr inbounds %struct.WPA_hdsk, %struct.WPA_hdsk* %1398, i32 0, i32 7
  %1400 = load i32, i32* %1399, align 8
  %1401 = and i32 %1400, 4
  %1402 = icmp ne i32 %1401, 4
  br i1 %1402, label %1403, label %1462

; <label>:1403:                                   ; preds = %1397
  %1404 = add nsw i32 %1279, 2
  %1405 = sext i32 %1404 to i64
  %1406 = getelementptr inbounds i8, i8* %.5, i64 %1405
  %1407 = load i8, i8* %1406, align 1
  %1408 = zext i8 %1407 to i32
  %1409 = shl i32 %1408, 8
  %1410 = add nsw i32 %1279, 3
  %1411 = sext i32 %1410 to i64
  %1412 = getelementptr inbounds i8, i8* %.5, i64 %1411
  %1413 = load i8, i8* %1412, align 1
  %1414 = zext i8 %1413 to i32
  %1415 = add nsw i32 %1409, %1414
  %1416 = add nsw i32 %1415, 4
  %1417 = getelementptr inbounds %struct.ST_info, %struct.ST_info* %.219, i32 0, i32 2
  %1418 = getelementptr inbounds %struct.WPA_hdsk, %struct.WPA_hdsk* %1417, i32 0, i32 5
  store i32 %1416, i32* %1418, align 8
  %1419 = load i32, i32* %266, align 4
  %1420 = sub nsw i32 %1419, %1279
  %1421 = getelementptr inbounds %struct.ST_info, %struct.ST_info* %.219, i32 0, i32 2
  %1422 = getelementptr inbounds %struct.WPA_hdsk, %struct.WPA_hdsk* %1421, i32 0, i32 5
  %1423 = load i32, i32* %1422, align 8
  %1424 = icmp slt i32 %1420, %1423
  br i1 %1424, label %.backedge, label %1425

; <label>:1425:                                   ; preds = %1403
  %1426 = getelementptr inbounds %struct.ST_info, %struct.ST_info* %.219, i32 0, i32 2
  %1427 = getelementptr inbounds %struct.WPA_hdsk, %struct.WPA_hdsk* %1426, i32 0, i32 5
  %1428 = load i32, i32* %1427, align 8
  %1429 = icmp eq i32 %1428, 0
  br i1 %1429, label %.backedge, label %1430

; <label>:1430:                                   ; preds = %1425
  %1431 = getelementptr inbounds %struct.ST_info, %struct.ST_info* %.219, i32 0, i32 2
  %1432 = getelementptr inbounds %struct.WPA_hdsk, %struct.WPA_hdsk* %1431, i32 0, i32 3
  %1433 = getelementptr inbounds [16 x i8], [16 x i8]* %1432, i32 0, i32 0
  %1434 = add nsw i32 %1279, 81
  %1435 = sext i32 %1434 to i64
  %1436 = getelementptr inbounds i8, i8* %.5, i64 %1435
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %1433, i8* align 1 %1436, i64 16, i1 false), !track !109
  %1437 = getelementptr inbounds %struct.ST_info, %struct.ST_info* %.219, i32 0, i32 2
  %1438 = getelementptr inbounds %struct.WPA_hdsk, %struct.WPA_hdsk* %1437, i32 0, i32 4
  %1439 = getelementptr inbounds [256 x i8], [256 x i8]* %1438, i32 0, i32 0
  %1440 = sext i32 %1279 to i64
  %1441 = getelementptr inbounds i8, i8* %.5, i64 %1440
  %1442 = getelementptr inbounds %struct.ST_info, %struct.ST_info* %.219, i32 0, i32 2
  %1443 = getelementptr inbounds %struct.WPA_hdsk, %struct.WPA_hdsk* %1442, i32 0, i32 5
  %1444 = load i32, i32* %1443, align 8
  %1445 = sext i32 %1444 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %1439, i8* align 1 %1441, i64 %1445, i1 false), !track !110
  %1446 = getelementptr inbounds %struct.ST_info, %struct.ST_info* %.219, i32 0, i32 2
  %1447 = getelementptr inbounds %struct.WPA_hdsk, %struct.WPA_hdsk* %1446, i32 0, i32 4
  %1448 = getelementptr inbounds [256 x i8], [256 x i8]* %1447, i32 0, i32 0
  %1449 = getelementptr inbounds i8, i8* %1448, i64 81
  call void @llvm.memset.p0i8.i64(i8* align 1 %1449, i8 0, i64 16, i1 false)
  %1450 = getelementptr inbounds %struct.ST_info, %struct.ST_info* %.219, i32 0, i32 2
  %1451 = getelementptr inbounds %struct.WPA_hdsk, %struct.WPA_hdsk* %1450, i32 0, i32 7
  %1452 = load i32, i32* %1451, align 8
  %1453 = or i32 %1452, 4
  store i32 %1453, i32* %1451, align 8
  %1454 = add nsw i32 %1279, 6
  %1455 = sext i32 %1454 to i64
  %1456 = getelementptr inbounds i8, i8* %.5, i64 %1455
  %1457 = load i8, i8* %1456, align 1
  %1458 = zext i8 %1457 to i32
  %1459 = and i32 %1458, 7
  %1460 = getelementptr inbounds %struct.ST_info, %struct.ST_info* %.219, i32 0, i32 2
  %1461 = getelementptr inbounds %struct.WPA_hdsk, %struct.WPA_hdsk* %1460, i32 0, i32 6
  store i32 %1459, i32* %1461, align 4
  br label %1462

; <label>:1462:                                   ; preds = %1397, %1430, %1372, %1364, %1356, %1348
  %1463 = add nsw i32 %1279, 6
  %1464 = sext i32 %1463 to i64
  %1465 = getelementptr inbounds i8, i8* %.5, i64 %1464
  %1466 = load i8, i8* %1465, align 1
  %1467 = zext i8 %1466 to i32
  %1468 = and i32 %1467, 8
  %1469 = icmp ne i32 %1468, 0
  br i1 %1469, label %1470, label %1576

; <label>:1470:                                   ; preds = %1462
  %1471 = add nsw i32 %1279, 6
  %1472 = sext i32 %1471 to i64
  %1473 = getelementptr inbounds i8, i8* %.5, i64 %1472
  %1474 = load i8, i8* %1473, align 1
  %1475 = zext i8 %1474 to i32
  %1476 = and i32 %1475, 64
  %1477 = icmp ne i32 %1476, 0
  br i1 %1477, label %1478, label %1576

; <label>:1478:                                   ; preds = %1470
  %1479 = add nsw i32 %1279, 6
  %1480 = sext i32 %1479 to i64
  %1481 = getelementptr inbounds i8, i8* %.5, i64 %1480
  %1482 = load i8, i8* %1481, align 1
  %1483 = zext i8 %1482 to i32
  %1484 = and i32 %1483, 128
  %1485 = icmp ne i32 %1484, 0
  br i1 %1485, label %1486, label %1576

; <label>:1486:                                   ; preds = %1478
  %1487 = add nsw i32 %1279, 5
  %1488 = sext i32 %1487 to i64
  %1489 = getelementptr inbounds i8, i8* %.5, i64 %1488
  %1490 = load i8, i8* %1489, align 1
  %1491 = zext i8 %1490 to i32
  %1492 = and i32 %1491, 1
  %1493 = icmp ne i32 %1492, 0
  br i1 %1493, label %1494, label %1576

; <label>:1494:                                   ; preds = %1486
  %1495 = add nsw i32 %1279, 17
  %1496 = sext i32 %1495 to i64
  %1497 = getelementptr inbounds i8, i8* %.5, i64 %1496
  %1498 = call i32 @memcmp(i8* %1497, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @ZERO, i64 0, i64 0), i64 32) #10
  %1499 = icmp ne i32 %1498, 0
  br i1 %1499, label %1500, label %1511

; <label>:1500:                                   ; preds = %1494
  %1501 = getelementptr inbounds %struct.ST_info, %struct.ST_info* %.219, i32 0, i32 2
  %1502 = getelementptr inbounds %struct.WPA_hdsk, %struct.WPA_hdsk* %1501, i32 0, i32 2
  %1503 = getelementptr inbounds [32 x i8], [32 x i8]* %1502, i32 0, i32 0
  %1504 = add nsw i32 %1279, 17
  %1505 = sext i32 %1504 to i64
  %1506 = getelementptr inbounds i8, i8* %.5, i64 %1505
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %1503, i8* align 1 %1506, i64 32, i1 false), !track !111
  %1507 = getelementptr inbounds %struct.ST_info, %struct.ST_info* %.219, i32 0, i32 2
  %1508 = getelementptr inbounds %struct.WPA_hdsk, %struct.WPA_hdsk* %1507, i32 0, i32 7
  %1509 = load i32, i32* %1508, align 8
  %1510 = or i32 %1509, 1
  store i32 %1510, i32* %1508, align 8
  br label %1511

; <label>:1511:                                   ; preds = %1500, %1494
  %1512 = getelementptr inbounds %struct.ST_info, %struct.ST_info* %.219, i32 0, i32 2
  %1513 = getelementptr inbounds %struct.WPA_hdsk, %struct.WPA_hdsk* %1512, i32 0, i32 7
  %1514 = load i32, i32* %1513, align 8
  %1515 = and i32 %1514, 4
  %1516 = icmp ne i32 %1515, 4
  br i1 %1516, label %1517, label %1576

; <label>:1517:                                   ; preds = %1511
  %1518 = add nsw i32 %1279, 2
  %1519 = sext i32 %1518 to i64
  %1520 = getelementptr inbounds i8, i8* %.5, i64 %1519
  %1521 = load i8, i8* %1520, align 1
  %1522 = zext i8 %1521 to i32
  %1523 = shl i32 %1522, 8
  %1524 = add nsw i32 %1279, 3
  %1525 = sext i32 %1524 to i64
  %1526 = getelementptr inbounds i8, i8* %.5, i64 %1525
  %1527 = load i8, i8* %1526, align 1
  %1528 = zext i8 %1527 to i32
  %1529 = add nsw i32 %1523, %1528
  %1530 = add nsw i32 %1529, 4
  %1531 = getelementptr inbounds %struct.ST_info, %struct.ST_info* %.219, i32 0, i32 2
  %1532 = getelementptr inbounds %struct.WPA_hdsk, %struct.WPA_hdsk* %1531, i32 0, i32 5
  store i32 %1530, i32* %1532, align 8
  %1533 = load i32, i32* %267, align 4
  %1534 = sub nsw i32 %1533, %1279
  %1535 = getelementptr inbounds %struct.ST_info, %struct.ST_info* %.219, i32 0, i32 2
  %1536 = getelementptr inbounds %struct.WPA_hdsk, %struct.WPA_hdsk* %1535, i32 0, i32 5
  %1537 = load i32, i32* %1536, align 8
  %1538 = icmp slt i32 %1534, %1537
  br i1 %1538, label %.backedge, label %1539

; <label>:1539:                                   ; preds = %1517
  %1540 = getelementptr inbounds %struct.ST_info, %struct.ST_info* %.219, i32 0, i32 2
  %1541 = getelementptr inbounds %struct.WPA_hdsk, %struct.WPA_hdsk* %1540, i32 0, i32 5
  %1542 = load i32, i32* %1541, align 8
  %1543 = icmp eq i32 %1542, 0
  br i1 %1543, label %.backedge, label %1544

; <label>:1544:                                   ; preds = %1539
  %1545 = getelementptr inbounds %struct.ST_info, %struct.ST_info* %.219, i32 0, i32 2
  %1546 = getelementptr inbounds %struct.WPA_hdsk, %struct.WPA_hdsk* %1545, i32 0, i32 3
  %1547 = getelementptr inbounds [16 x i8], [16 x i8]* %1546, i32 0, i32 0
  %1548 = add nsw i32 %1279, 81
  %1549 = sext i32 %1548 to i64
  %1550 = getelementptr inbounds i8, i8* %.5, i64 %1549
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %1547, i8* align 1 %1550, i64 16, i1 false), !track !112
  %1551 = getelementptr inbounds %struct.ST_info, %struct.ST_info* %.219, i32 0, i32 2
  %1552 = getelementptr inbounds %struct.WPA_hdsk, %struct.WPA_hdsk* %1551, i32 0, i32 4
  %1553 = getelementptr inbounds [256 x i8], [256 x i8]* %1552, i32 0, i32 0
  %1554 = sext i32 %1279 to i64
  %1555 = getelementptr inbounds i8, i8* %.5, i64 %1554
  %1556 = getelementptr inbounds %struct.ST_info, %struct.ST_info* %.219, i32 0, i32 2
  %1557 = getelementptr inbounds %struct.WPA_hdsk, %struct.WPA_hdsk* %1556, i32 0, i32 5
  %1558 = load i32, i32* %1557, align 8
  %1559 = sext i32 %1558 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %1553, i8* align 1 %1555, i64 %1559, i1 false), !track !113
  %1560 = getelementptr inbounds %struct.ST_info, %struct.ST_info* %.219, i32 0, i32 2
  %1561 = getelementptr inbounds %struct.WPA_hdsk, %struct.WPA_hdsk* %1560, i32 0, i32 4
  %1562 = getelementptr inbounds [256 x i8], [256 x i8]* %1561, i32 0, i32 0
  %1563 = getelementptr inbounds i8, i8* %1562, i64 81
  call void @llvm.memset.p0i8.i64(i8* align 1 %1563, i8 0, i64 16, i1 false)
  %1564 = getelementptr inbounds %struct.ST_info, %struct.ST_info* %.219, i32 0, i32 2
  %1565 = getelementptr inbounds %struct.WPA_hdsk, %struct.WPA_hdsk* %1564, i32 0, i32 7
  %1566 = load i32, i32* %1565, align 8
  %1567 = or i32 %1566, 4
  store i32 %1567, i32* %1565, align 8
  %1568 = add nsw i32 %1279, 6
  %1569 = sext i32 %1568 to i64
  %1570 = getelementptr inbounds i8, i8* %.5, i64 %1569
  %1571 = load i8, i8* %1570, align 1
  %1572 = zext i8 %1571 to i32
  %1573 = and i32 %1572, 7
  %1574 = getelementptr inbounds %struct.ST_info, %struct.ST_info* %.219, i32 0, i32 2
  %1575 = getelementptr inbounds %struct.WPA_hdsk, %struct.WPA_hdsk* %1574, i32 0, i32 6
  store i32 %1573, i32* %1575, align 4
  br label %1576

; <label>:1576:                                   ; preds = %1511, %1544, %1486, %1478, %1470, %1462
  %1577 = getelementptr inbounds %struct.ST_info, %struct.ST_info* %.219, i32 0, i32 2
  %1578 = getelementptr inbounds %struct.WPA_hdsk, %struct.WPA_hdsk* %1577, i32 0, i32 7
  %1579 = load i32, i32* %1578, align 8
  %1580 = icmp eq i32 %1579, 7
  br i1 %1580, label %1581, label %1589

; <label>:1581:                                   ; preds = %1576
  %1582 = getelementptr inbounds %struct.ST_info, %struct.ST_info* %.219, i32 0, i32 2
  %1583 = getelementptr inbounds %struct.WPA_hdsk, %struct.WPA_hdsk* %1582, i32 0, i32 0
  %1584 = getelementptr inbounds [6 x i8], [6 x i8]* %1583, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1584, i8* align 1 %265, i64 6, i1 false), !track !114
  %1585 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.214, i32 0, i32 14
  %1586 = bitcast %struct.WPA_hdsk* %1585 to i8*
  %1587 = getelementptr inbounds %struct.ST_info, %struct.ST_info* %.219, i32 0, i32 2
  %1588 = bitcast %struct.WPA_hdsk* %1587 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1586, i8* align 8 %1588, i64 356, i1 false), !track !115
  br label %1589

; <label>:1589:                                   ; preds = %1576, %1581, %1278, %1294, %1265, %1271, %1179, %1184, %1131, %1116, %1068, %1062, %661, %841, %811, %857, %852, %716, %746, %780, %790, %773, %766, %690, %695, %675, %615, %645, %546, %529, %526, %516, %479, %476
  %.315 = phi %struct.AP_info* [ %.01280, %476 ], [ %.01280, %479 ], [ %.01280, %516 ], [ %.01280, %526 ], [ %.01280, %529 ], [ %.01280, %546 ], [ %.214, %645 ], [ %.214, %615 ], [ %.214, %675 ], [ %.214, %695 ], [ %.214, %690 ], [ %.214, %766 ], [ %.214, %773 ], [ %.214, %790 ], [ %.214, %780 ], [ %.214, %746 ], [ %.214, %716 ], [ %.214, %852 ], [ %.214, %857 ], [ %.214, %811 ], [ %.214, %841 ], [ %.214, %661 ], [ %.214, %1062 ], [ %.214, %1068 ], [ %.214, %1116 ], [ %.214, %1131 ], [ %.214, %1184 ], [ %.214, %1179 ], [ %.214, %1271 ], [ %.214, %1265 ], [ %.214, %1294 ], [ %.214, %1278 ], [ %.214, %1581 ], [ %.214, %1576 ]
  %1590 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* @mx_apl) #9
  %1591 = icmp ne %struct.AP_info* %.315, null
  br i1 %1591, label %1592, label %.backedge

; <label>:1592:                                   ; preds = %1589
  %1593 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.315, i32 0, i32 7
  %1594 = load i64, i64* %1593, align 8
  %1595 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 33), align 8
  %1596 = sext i32 %1595 to i64
  %1597 = icmp sge i64 %1594, %1596
  br i1 %1597, label %1610, label %1598

; <label>:1598:                                   ; preds = %1592
  %1599 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.315, i32 0, i32 8
  %1600 = load i64, i64* %1599, align 8
  %1601 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 33), align 8
  %1602 = sext i32 %1601 to i64
  %1603 = icmp sge i64 %1600, %1602
  br i1 %1603, label %1610, label %1604

; <label>:1604:                                   ; preds = %1598
  %1605 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.315, i32 0, i32 9
  %1606 = load i64, i64* %1605, align 8
  %1607 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 33), align 8
  %1608 = sext i32 %1607 to i64
  %1609 = icmp sge i64 %1606, %1608
  br i1 %1609, label %1610, label %.backedge

; <label>:1610:                                   ; preds = %1604, %1598, %1592
  call void @eof_wait(i32* %2)
  br label %1636

.backedge:                                        ; preds = %1589, %1604, %1517, %1539, %1403, %1425, %462, %464, %445, %451, %428, %434, %415, %417, %1305
  %.012.be = phi %struct.AP_info* [ %.214, %1305 ], [ %.01280, %417 ], [ %.01280, %415 ], [ %.01280, %434 ], [ %.01280, %428 ], [ %.01280, %451 ], [ %.01280, %445 ], [ %.01280, %464 ], [ %.01280, %462 ], [ %.214, %1425 ], [ %.214, %1403 ], [ %.214, %1539 ], [ %.214, %1517 ], [ %.315, %1604 ], [ %.315, %1589 ]
  %.06.be = phi i8* [ %.5, %1305 ], [ %18, %417 ], [ %18, %415 ], [ %.17, %434 ], [ %.17, %428 ], [ %.28, %451 ], [ %.28, %445 ], [ %.28, %464 ], [ %.28, %462 ], [ %.5, %1425 ], [ %.5, %1403 ], [ %.5, %1539 ], [ %.5, %1517 ], [ %.5, %1604 ], [ %.5, %1589 ]
  %1611 = load i32, i32* @close_aircrack, align 4
  %1612 = icmp ne i32 %1611, 0
  br i1 %1612, label %._crit_edge87.loopexit, label %.lr.ph86

._crit_edge87.loopexit:                           ; preds = %._crit_edge34, %._crit_edge, %._crit_edge43, %._crit_edge40, %._crit_edge37, %._crit_edge52, %._crit_edge49, %._crit_edge46, %.backedge
  br label %._crit_edge87

._crit_edge87:                                    ; preds = %._crit_edge87.loopexit, %570, %591, %601, %643, %744, %839, %899, %158, %156, %140, %133, %114, %71, %62, %42, %36, %20
  %1613 = getelementptr inbounds %struct.read_buf, %struct.read_buf* %3, i32 0, i32 2
  %1614 = load i8*, i8** %1613, align 8
  %1615 = icmp ne i8* %1614, null
  br i1 %1615, label %1616, label %1620

; <label>:1616:                                   ; preds = %._crit_edge87
  %1617 = getelementptr inbounds %struct.read_buf, %struct.read_buf* %3, i32 0, i32 2
  %1618 = load i8*, i8** %1617, align 8
  call void @free(i8* %1618) #9
  %1619 = getelementptr inbounds %struct.read_buf, %struct.read_buf* %3, i32 0, i32 2
  store i8* null, i8** %1619, align 8
  br label %1620

; <label>:1620:                                   ; preds = %1616, %._crit_edge87
  %1621 = getelementptr inbounds %struct.read_buf, %struct.read_buf* %3, i32 0, i32 3
  %1622 = load i8*, i8** %1621, align 8
  %1623 = icmp ne i8* %1622, null
  br i1 %1623, label %1624, label %1628

; <label>:1624:                                   ; preds = %1620
  %1625 = getelementptr inbounds %struct.read_buf, %struct.read_buf* %3, i32 0, i32 3
  %1626 = load i8*, i8** %1625, align 8
  call void @free(i8* %1626) #9
  %1627 = getelementptr inbounds %struct.read_buf, %struct.read_buf* %3, i32 0, i32 3
  store i8* null, i8** %1627, align 8
  br label %1628

; <label>:1628:                                   ; preds = %1624, %1620
  %1629 = icmp ne i8* %18, null
  br i1 %1629, label %1630, label %1631

; <label>:1630:                                   ; preds = %1628
  call void @free(i8* %18) #9
  br label %1631

; <label>:1631:                                   ; preds = %1630, %1628
  %1632 = load i32, i32* @close_aircrack, align 4
  %1633 = icmp ne i32 %1632, 0
  br i1 %1633, label %1636, label %1634

; <label>:1634:                                   ; preds = %1631
  %1635 = call i32 @kill(i32 0, i32 15) #9
  call void @_exit(i32 1) #12
  unreachable

; <label>:1636:                                   ; preds = %1631, %1610
  ret void
}

; Function Attrs: nounwind readonly
declare dso_local i32 @strcmp(i8*, i8*) #3

declare dso_local i32 @open64(i8*, i32, ...) #1

declare dso_local i32 @fprintf(%struct._IO_FILE*, i8*, ...) #1

; Function Attrs: noreturn
declare dso_local void @errx(i32, i8*, ...) #6

declare dso_local i32 @fcntl(i32, i32, ...) #1

; Function Attrs: nounwind
declare dso_local i8* @realloc(i8*, i64) #2

; Function Attrs: nounwind
declare dso_local i32 @kill(i32, i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @check_thread(i8*) #0 {
  %2 = alloca %struct.read_buf, align 8, !track !116
  %3 = alloca [6 x i8], align 1, !track !117
  %4 = alloca [6 x i8], align 1, !track !118
  %5 = alloca [6 x i8], align 1, !track !119
  %6 = alloca [16 x i32], align 16
  %7 = alloca %struct.ivs2_pkthdr, align 2, !track !120
  %8 = alloca %struct.ivs2_filehdr, align 2, !track !121
  %9 = alloca %struct.pcap_pkthdr, align 4, !track !122
  %10 = alloca %struct.pcap_file_header, align 4, !track !123
  %11 = alloca [2048 x i8], align 16, !track !124
  %12 = alloca i32, align 4
  %13 = bitcast %struct.read_buf* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 24, i1 false)
  %14 = call noalias i8* @malloc(i64 65536) #9, !track !125
  %15 = icmp eq i8* %14, null
  br i1 %15, label %16, label %18

; <label>:16:                                     ; preds = %1
  %17 = getelementptr [14 x i8], [14 x i8]* @.str.7, i32 0, i32 0
  call void @perror(i8* %17)
  br label %._crit_edge

; <label>:18:                                     ; preds = %1
  %19 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 6
  %20 = load i32, i32* %19, align 8
  %21 = icmp ne i32 %20, 0
  br i1 %21, label %25, label %22

; <label>:22:                                     ; preds = %18
  %23 = getelementptr [12 x i8], [12 x i8]* @.str.9, i32 0, i32 0
  %24 = call i32 (i8*, ...) @printf(i8* %23, i8* %0)
  br label %25

; <label>:25:                                     ; preds = %22, %18
  %26 = getelementptr [2 x i8], [2 x i8]* @.str.10, i32 0, i32 0
  %27 = call i32 @strcmp(i8* %0, i8* %26) #10
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %34, label %29

; <label>:29:                                     ; preds = %25
  %30 = call i32 (i8*, i32, ...) @open64(i8* %0, i32 0)
  %31 = icmp slt i32 %30, 0
  br i1 %31, label %32, label %34

; <label>:32:                                     ; preds = %29
  %33 = getelementptr [12 x i8], [12 x i8]* @.str.11, i32 0, i32 0
  call void @perror(i8* %33)
  br label %._crit_edge

; <label>:34:                                     ; preds = %29, %25
  %.01 = phi i32 [ 0, %25 ], [ %30, %29 ]
  %35 = bitcast %struct.pcap_file_header* %10 to i8*
  %36 = call i32 @atomic_read(%struct.read_buf* %2, i32 %.01, i32 4, i8* %35)
  %37 = icmp ne i32 %36, 0
  br i1 %37, label %40, label %38

; <label>:38:                                     ; preds = %34
  %39 = getelementptr [25 x i8], [25 x i8]* @.str.12, i32 0, i32 0
  call void @perror(i8* %39)
  br label %._crit_edge

; <label>:40:                                     ; preds = %34
  %41 = bitcast %struct.pcap_file_header* %10 to i8*
  %42 = getelementptr [5 x i8], [5 x i8]* @.str.13, i32 0, i32 0
  %43 = call i32 @memcmp(i8* %41, i8* %42, i64 4) #10
  %44 = icmp ne i32 %43, 0
  br i1 %44, label %45, label %114

; <label>:45:                                     ; preds = %40
  %46 = bitcast %struct.pcap_file_header* %10 to i8*
  %47 = getelementptr [5 x i8], [5 x i8]* @.str.14, i32 0, i32 0
  %48 = call i32 @memcmp(i8* %46, i8* %47, i64 4) #10
  %49 = icmp ne i32 %48, 0
  br i1 %49, label %50, label %114

; <label>:50:                                     ; preds = %45
  %51 = getelementptr inbounds %struct.pcap_file_header, %struct.pcap_file_header* %10, i32 0, i32 0
  %52 = load i32, i32* %51, align 4
  %53 = icmp ne i32 %52, -1582119980
  br i1 %53, label %54, label %62

; <label>:54:                                     ; preds = %50
  %55 = getelementptr inbounds %struct.pcap_file_header, %struct.pcap_file_header* %10, i32 0, i32 0
  %56 = load i32, i32* %55, align 4
  %57 = icmp ne i32 %56, -725372255
  br i1 %57, label %58, label %62

; <label>:58:                                     ; preds = %54
  %59 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %60 = getelementptr [51 x i8], [51 x i8]* @.str.15, i32 0, i32 0
  %61 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %59, i8* %60)
  br label %._crit_edge

; <label>:62:                                     ; preds = %54, %50
  %63 = bitcast %struct.pcap_file_header* %10 to i8*
  %64 = getelementptr inbounds i8, i8* %63, i64 4
  %65 = call i32 @atomic_read(%struct.read_buf* %2, i32 %.01, i32 20, i8* %64)
  %66 = icmp ne i32 %65, 0
  br i1 %66, label %69, label %67

; <label>:67:                                     ; preds = %62
  %68 = getelementptr [25 x i8], [25 x i8]* @.str.12, i32 0, i32 0
  call void @perror(i8* %68)
  br label %._crit_edge

; <label>:69:                                     ; preds = %62
  %70 = getelementptr inbounds %struct.pcap_file_header, %struct.pcap_file_header* %10, i32 0, i32 0
  %71 = load i32, i32* %70, align 4
  %72 = icmp eq i32 %71, -725372255
  br i1 %72, label %73, label %94

; <label>:73:                                     ; preds = %69
  %74 = getelementptr inbounds %struct.pcap_file_header, %struct.pcap_file_header* %10, i32 0, i32 6
  %75 = load i32, i32* %74, align 4
  %76 = lshr i32 %75, 24
  %77 = and i32 %76, 255
  %78 = getelementptr inbounds %struct.pcap_file_header, %struct.pcap_file_header* %10, i32 0, i32 6
  %79 = load i32, i32* %78, align 4
  %80 = lshr i32 %79, 8
  %81 = and i32 %80, 65280
  %82 = or i32 %77, %81
  %83 = getelementptr inbounds %struct.pcap_file_header, %struct.pcap_file_header* %10, i32 0, i32 6
  %84 = load i32, i32* %83, align 4
  %85 = shl i32 %84, 8
  %86 = and i32 %85, 16711680
  %87 = or i32 %82, %86
  %88 = getelementptr inbounds %struct.pcap_file_header, %struct.pcap_file_header* %10, i32 0, i32 6
  %89 = load i32, i32* %88, align 4
  %90 = shl i32 %89, 24
  %91 = and i32 %90, -16777216
  %92 = or i32 %87, %91
  %93 = getelementptr inbounds %struct.pcap_file_header, %struct.pcap_file_header* %10, i32 0, i32 6
  store i32 %92, i32* %93, align 4
  br label %94

; <label>:94:                                     ; preds = %73, %69
  %95 = getelementptr inbounds %struct.pcap_file_header, %struct.pcap_file_header* %10, i32 0, i32 6
  %96 = load i32, i32* %95, align 4
  %97 = icmp ne i32 %96, 105
  br i1 %97, label %98, label %149

; <label>:98:                                     ; preds = %94
  %99 = getelementptr inbounds %struct.pcap_file_header, %struct.pcap_file_header* %10, i32 0, i32 6
  %100 = load i32, i32* %99, align 4
  %101 = icmp ne i32 %100, 119
  br i1 %101, label %102, label %149

; <label>:102:                                    ; preds = %98
  %103 = getelementptr inbounds %struct.pcap_file_header, %struct.pcap_file_header* %10, i32 0, i32 6
  %104 = load i32, i32* %103, align 4
  %105 = icmp ne i32 %104, 127
  br i1 %105, label %106, label %149

; <label>:106:                                    ; preds = %102
  %107 = getelementptr inbounds %struct.pcap_file_header, %struct.pcap_file_header* %10, i32 0, i32 6
  %108 = load i32, i32* %107, align 4
  %109 = icmp ne i32 %108, 192
  br i1 %109, label %110, label %149

; <label>:110:                                    ; preds = %106
  %111 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %112 = getelementptr [55 x i8], [55 x i8]* @.str.16, i32 0, i32 0
  %113 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %111, i8* %112)
  br label %._crit_edge

; <label>:114:                                    ; preds = %45, %40
  %115 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 38
  %116 = load i32, i32* %115, align 8
  %117 = icmp ne i32 %116, 0
  br i1 %117, label %118, label %120

; <label>:118:                                    ; preds = %114
  %119 = getelementptr [37 x i8], [37 x i8]* @.str.17, i32 0, i32 0
  call void (i32, i8*, ...) @errx(i32 1, i8* %119) #12
  unreachable

; <label>:120:                                    ; preds = %114
  %121 = bitcast %struct.pcap_file_header* %10 to i8*
  %122 = getelementptr [5 x i8], [5 x i8]* @.str.14, i32 0, i32 0
  %123 = call i32 @memcmp(i8* %121, i8* %122, i64 4) #10
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %125, label %143

; <label>:125:                                    ; preds = %120
  %126 = bitcast %struct.ivs2_filehdr* %8 to i8*
  %127 = call i32 @atomic_read(%struct.read_buf* %2, i32 %.01, i32 2, i8* %126)
  %128 = icmp ne i32 %127, 0
  br i1 %128, label %131, label %129

; <label>:129:                                    ; preds = %125
  %130 = getelementptr [25 x i8], [25 x i8]* @.str.12, i32 0, i32 0
  call void @perror(i8* %130)
  br label %._crit_edge

; <label>:131:                                    ; preds = %125
  %132 = getelementptr inbounds %struct.ivs2_filehdr, %struct.ivs2_filehdr* %8, i32 0, i32 0
  %133 = load i16, i16* %132, align 2
  %134 = zext i16 %133 to i32
  %135 = icmp sgt i32 %134, 1
  br i1 %135, label %136, label %149

; <label>:136:                                    ; preds = %131
  %137 = getelementptr inbounds %struct.ivs2_filehdr, %struct.ivs2_filehdr* %8, i32 0, i32 0
  %138 = load i16, i16* %137, align 2
  %139 = zext i16 %138 to i32
  %140 = getelementptr [58 x i8], [58 x i8]* @.str.18, i32 0, i32 0
  %141 = getelementptr [4 x i8], [4 x i8]* @.str.19, i32 0, i32 0
  %142 = call i32 (i8*, ...) @printf(i8* %140, i8* %141, i32 %139, i32 1)
  br label %._crit_edge

; <label>:143:                                    ; preds = %120
  %144 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 20
  %145 = load i32, i32* %144, align 4
  %146 = icmp ne i32 %145, 0
  br i1 %146, label %147, label %149

; <label>:147:                                    ; preds = %143
  %148 = getelementptr [84 x i8], [84 x i8]* @.str.20, i32 0, i32 0
  call void (i32, i8*, ...) @errx(i32 1, i8* %148) #12
  unreachable

; <label>:149:                                    ; preds = %131, %143, %94, %98, %102, %106
  %.15 = phi i32 [ 1, %106 ], [ 1, %102 ], [ 1, %98 ], [ 1, %94 ], [ 3, %131 ], [ 2, %143 ]
  %150 = call i32 (i32, i32, ...) @fcntl(i32 %.01, i32 4, i32 2048)
  %151 = icmp slt i32 %150, 0
  br i1 %151, label %152, label %154

; <label>:152:                                    ; preds = %149
  %153 = getelementptr [25 x i8], [25 x i8]* @.str.21, i32 0, i32 0
  call void @perror(i8* %153)
  br label %._crit_edge

; <label>:154:                                    ; preds = %149
  %155 = load i32, i32* @close_aircrack, align 4
  %156 = icmp ne i32 %155, 0
  br i1 %156, label %._crit_edge, label %.lr.ph44.preheader

.lr.ph44.preheader:                               ; preds = %154
  %157 = bitcast %struct.pcap_pkthdr* %9 to i8*
  %158 = icmp eq i32 %.15, 1
  %159 = bitcast %struct.ivs2_pkthdr* %7 to i8*
  %160 = getelementptr inbounds %struct.pcap_file_header, %struct.pcap_file_header* %10, i32 0, i32 0
  %161 = getelementptr inbounds %struct.pcap_pkthdr, %struct.pcap_pkthdr* %9, i32 0, i32 2
  %162 = getelementptr inbounds i8, i8* %14, i64 0
  %163 = getelementptr inbounds %struct.ivs2_pkthdr, %struct.ivs2_pkthdr* %7, i32 0, i32 0
  %164 = getelementptr inbounds %struct.pcap_pkthdr, %struct.pcap_pkthdr* %9, i32 0, i32 2
  %165 = getelementptr inbounds %struct.pcap_pkthdr, %struct.pcap_pkthdr* %9, i32 0, i32 2
  %166 = getelementptr inbounds %struct.pcap_pkthdr, %struct.pcap_pkthdr* %9, i32 0, i32 2
  %167 = getelementptr inbounds %struct.pcap_pkthdr, %struct.pcap_pkthdr* %9, i32 0, i32 2
  %168 = getelementptr inbounds %struct.pcap_pkthdr, %struct.pcap_pkthdr* %9, i32 0, i32 2
  %169 = getelementptr inbounds %struct.pcap_pkthdr, %struct.pcap_pkthdr* %9, i32 0, i32 2
  %170 = getelementptr inbounds [6 x i8], [6 x i8]* %3, i32 0, i32 0
  %171 = getelementptr inbounds [6 x i8], [6 x i8]* %3, i32 0, i32 0
  %172 = getelementptr inbounds i8, i8* %14, i64 0
  %173 = getelementptr inbounds [6 x i8], [6 x i8]* %3, i64 0, i64 0
  %174 = getelementptr inbounds [6 x i8], [6 x i8]* %3, i32 0, i32 0
  %175 = getelementptr inbounds i8, i8* %174, i64 1
  %176 = getelementptr inbounds [6 x i8], [6 x i8]* %3, i32 0, i32 0
  %177 = getelementptr inbounds %struct.ivs2_pkthdr, %struct.ivs2_pkthdr* %7, i32 0, i32 1
  %178 = getelementptr inbounds %struct.pcap_pkthdr, %struct.pcap_pkthdr* %9, i32 0, i32 2
  %179 = getelementptr inbounds %struct.ivs2_pkthdr, %struct.ivs2_pkthdr* %7, i32 0, i32 1
  %180 = getelementptr inbounds %struct.pcap_pkthdr, %struct.pcap_pkthdr* %9, i32 0, i32 2
  %181 = getelementptr inbounds [6 x i8], [6 x i8]* %3, i32 0, i32 0
  %182 = getelementptr inbounds [6 x i8], [6 x i8]* %3, i32 0, i32 0
  %183 = getelementptr inbounds [6 x i8], [6 x i8]* %3, i32 0, i32 0
  %184 = getelementptr inbounds [6 x i8], [6 x i8]* %3, i32 0, i32 0
  %185 = getelementptr inbounds %struct.pcap_file_header, %struct.pcap_file_header* %10, i32 0, i32 6
  %186 = getelementptr inbounds [6 x i8], [6 x i8]* %4, i32 0, i32 0
  %187 = getelementptr inbounds [6 x i8], [6 x i8]* %4, i32 0, i32 0
  %188 = getelementptr inbounds [6 x i8], [6 x i8]* %4, i32 0, i32 0
  %189 = getelementptr inbounds [6 x i8], [6 x i8]* %4, i32 0, i32 0
  %190 = getelementptr inbounds [6 x i8], [6 x i8]* %3, i32 0, i32 0
  %191 = getelementptr inbounds i8, i8* %14, i64 7
  %192 = getelementptr inbounds %struct.pcap_file_header, %struct.pcap_file_header* %10, i32 0, i32 6
  %193 = getelementptr inbounds [6 x i8], [6 x i8]* %4, i64 0, i64 0
  %194 = getelementptr inbounds i8, i8* %14, i64 4
  %195 = bitcast i8* %194 to i32*
  %196 = getelementptr inbounds %struct.pcap_file_header, %struct.pcap_file_header* %10, i32 0, i32 0
  %197 = getelementptr inbounds %struct.pcap_file_header, %struct.pcap_file_header* %10, i32 0, i32 6
  %198 = getelementptr inbounds %struct.ivs2_pkthdr, %struct.ivs2_pkthdr* %7, i32 0, i32 0
  %199 = getelementptr inbounds %struct.pcap_pkthdr, %struct.pcap_pkthdr* %9, i32 0, i32 2
  %200 = getelementptr inbounds %struct.pcap_pkthdr, %struct.pcap_pkthdr* %9, i32 0, i32 2
  %201 = getelementptr inbounds [6 x i8], [6 x i8]* %3, i32 0, i32 0
  %202 = getelementptr inbounds [6 x i8], [6 x i8]* %5, i32 0, i32 0
  %203 = getelementptr inbounds [6 x i8], [6 x i8]* %5, i32 0, i32 0
  %204 = getelementptr inbounds %struct.ivs2_pkthdr, %struct.ivs2_pkthdr* %7, i32 0, i32 1
  %205 = getelementptr inbounds %struct.ivs2_pkthdr, %struct.ivs2_pkthdr* %7, i32 0, i32 0
  %206 = getelementptr inbounds %struct.pcap_pkthdr, %struct.pcap_pkthdr* %9, i32 0, i32 2
  %207 = getelementptr inbounds %struct.pcap_pkthdr, %struct.pcap_pkthdr* %9, i32 0, i32 2
  %208 = getelementptr inbounds %struct.pcap_pkthdr, %struct.pcap_pkthdr* %9, i32 0, i32 2
  %209 = getelementptr inbounds [6 x i8], [6 x i8]* %5, i32 0, i32 0
  %210 = getelementptr inbounds [6 x i8], [6 x i8]* %5, i32 0, i32 0
  %211 = getelementptr inbounds %struct.ivs2_pkthdr, %struct.ivs2_pkthdr* %7, i32 0, i32 0
  %212 = getelementptr inbounds %struct.pcap_pkthdr, %struct.pcap_pkthdr* %9, i32 0, i32 2
  %213 = getelementptr inbounds %struct.pcap_pkthdr, %struct.pcap_pkthdr* %9, i32 0, i32 2
  %214 = getelementptr inbounds %struct.ivs2_pkthdr, %struct.ivs2_pkthdr* %7, i32 0, i32 1
  %215 = getelementptr inbounds %struct.ivs2_pkthdr, %struct.ivs2_pkthdr* %7, i32 0, i32 0
  %216 = getelementptr inbounds %struct.pcap_pkthdr, %struct.pcap_pkthdr* %9, i32 0, i32 2
  %217 = getelementptr inbounds %struct.pcap_pkthdr, %struct.pcap_pkthdr* %9, i32 0, i32 2
  %218 = getelementptr inbounds %struct.ivs2_pkthdr, %struct.ivs2_pkthdr* %7, i32 0, i32 1
  %219 = getelementptr inbounds i8, i8* %14, i64 5
  %220 = getelementptr inbounds %struct.pcap_pkthdr, %struct.pcap_pkthdr* %9, i32 0, i32 2
  %221 = getelementptr inbounds %struct.pcap_pkthdr, %struct.pcap_pkthdr* %9, i32 0, i32 2
  %222 = getelementptr inbounds [6 x i8], [6 x i8]* %5, i32 0, i32 0
  %223 = getelementptr inbounds i8, i8* %14, i64 4
  %224 = getelementptr inbounds %struct.pcap_pkthdr, %struct.pcap_pkthdr* %9, i32 0, i32 2
  %225 = getelementptr inbounds %struct.pcap_pkthdr, %struct.pcap_pkthdr* %9, i32 0, i32 2
  %226 = getelementptr inbounds %struct.pcap_pkthdr, %struct.pcap_pkthdr* %9, i32 0, i32 2
  %227 = getelementptr inbounds [2048 x i8], [2048 x i8]* %11, i32 0, i32 0
  %228 = getelementptr inbounds [16 x i32], [16 x i32]* %6, i32 0, i32 0
  %229 = getelementptr inbounds [6 x i8], [6 x i8]* %5, i32 0, i32 0
  %230 = getelementptr inbounds %struct.pcap_pkthdr, %struct.pcap_pkthdr* %9, i32 0, i32 3
  %231 = getelementptr inbounds %struct.pcap_pkthdr, %struct.pcap_pkthdr* %9, i32 0, i32 3
  br label %.lr.ph44

.lr.ph44:                                         ; preds = %.lr.ph44.preheader, %.backedge
  %.0643 = phi i8* [ %.06.be, %.backedge ], [ %14, %.lr.ph44.preheader ]
  %.01239 = phi %struct.AP_info* [ %.012.be, %.backedge ], [ null, %.lr.ph44.preheader ]
  call void @unroll_loop(i32 45)
  switch i32 %.15, label %273 [
    i32 2, label %232
    i32 3, label %249
  ]

; <label>:232:                                    ; preds = %.lr.ph44
  %233 = call i32 @atomic_read(%struct.read_buf* %2, i32 %.01, i32 1, i8* %14)
  %234 = icmp ne i32 %233, 0
  %235 = xor i1 %234, true
  br i1 %235, label %._crit_edge.loopexit, label %236

; <label>:236:                                    ; preds = %232
  %237 = load i8, i8* %162, align 1
  %238 = zext i8 %237 to i32
  %239 = icmp ne i32 %238, 255
  br i1 %239, label %240, label %245

; <label>:240:                                    ; preds = %236
  %241 = load i8, i8* %172, align 1
  store i8 %241, i8* %173, align 1
  %242 = call i32 @atomic_read(%struct.read_buf* %2, i32 %.01, i32 5, i8* %175)
  %243 = icmp ne i32 %242, 0
  %244 = xor i1 %243, true
  br i1 %244, label %._crit_edge.loopexit, label %245

; <label>:245:                                    ; preds = %236, %240
  %246 = call i32 @atomic_read(%struct.read_buf* %2, i32 %.01, i32 5, i8* %14)
  %247 = icmp ne i32 %246, 0
  %248 = xor i1 %247, true
  br i1 %248, label %._crit_edge.loopexit, label %393

; <label>:249:                                    ; preds = %.lr.ph44
  %250 = call i32 @atomic_read(%struct.read_buf* %2, i32 %.01, i32 4, i8* %159)
  %251 = icmp ne i32 %250, 0
  %252 = xor i1 %251, true
  br i1 %252, label %._crit_edge.loopexit, label %253

; <label>:253:                                    ; preds = %249
  %254 = load i16, i16* %163, align 2
  %255 = zext i16 %254 to i32
  %256 = and i32 %255, 1
  %257 = icmp ne i32 %256, 0
  br i1 %257, label %258, label %267

; <label>:258:                                    ; preds = %253
  %259 = call i32 @atomic_read(%struct.read_buf* %2, i32 %.01, i32 6, i8* %176)
  %260 = icmp ne i32 %259, 0
  %261 = xor i1 %260, true
  br i1 %261, label %._crit_edge.loopexit, label %262

; <label>:262:                                    ; preds = %258
  %263 = load i16, i16* %179, align 2
  %264 = zext i16 %263 to i32
  %265 = sub nsw i32 %264, 6
  %266 = trunc i32 %265 to i16
  store i16 %266, i16* %179, align 2
  br label %267

; <label>:267:                                    ; preds = %253, %262
  %268 = load i16, i16* %177, align 2
  %269 = zext i16 %268 to i32
  %270 = call i32 @atomic_read(%struct.read_buf* %2, i32 %.01, i32 %269, i8* %14)
  %271 = icmp ne i32 %270, 0
  %272 = xor i1 %271, true
  br i1 %272, label %._crit_edge.loopexit, label %393

; <label>:273:                                    ; preds = %.lr.ph44
  %274 = call i32 @atomic_read(%struct.read_buf* %2, i32 %.01, i32 16, i8* %157)
  %275 = icmp ne i32 %274, 0
  %276 = xor i1 %275, true
  br i1 %276, label %._crit_edge.loopexit, label %277

; <label>:277:                                    ; preds = %273
  %278 = load i32, i32* %160, align 4
  %279 = icmp eq i32 %278, -725372255
  br i1 %279, label %280, label %296

; <label>:280:                                    ; preds = %277
  %281 = load i32, i32* %164, align 4
  %282 = lshr i32 %281, 24
  %283 = and i32 %282, 255
  %284 = load i32, i32* %165, align 4
  %285 = lshr i32 %284, 8
  %286 = and i32 %285, 65280
  %287 = or i32 %283, %286
  %288 = load i32, i32* %166, align 4
  %289 = shl i32 %288, 8
  %290 = and i32 %289, 16711680
  %291 = or i32 %287, %290
  %292 = load i32, i32* %167, align 4
  %293 = shl i32 %292, 24
  %294 = and i32 %293, -16777216
  %295 = or i32 %291, %294
  store i32 %295, i32* %168, align 4
  br label %296

; <label>:296:                                    ; preds = %280, %277
  %297 = load i32, i32* %169, align 4
  %298 = icmp ule i32 %297, 0
  br i1 %298, label %302, label %299

; <label>:299:                                    ; preds = %296
  %300 = load i32, i32* %178, align 4
  %301 = icmp ugt i32 %300, 65535
  br i1 %301, label %302, label %308

; <label>:302:                                    ; preds = %299, %296
  %303 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %304 = getelementptr inbounds %struct.pcap_pkthdr, %struct.pcap_pkthdr* %9, i32 0, i32 2
  %305 = load i32, i32* %304, align 4
  %306 = getelementptr [53 x i8], [53 x i8]* @.str.22, i32 0, i32 0
  %307 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %303, i8* %306, i32 %305)
  br label %._crit_edge

; <label>:308:                                    ; preds = %299
  %309 = load i32, i32* %180, align 4
  %310 = call i32 @atomic_read(%struct.read_buf* %2, i32 %.01, i32 %309, i8* %14)
  %311 = icmp ne i32 %310, 0
  %312 = xor i1 %311, true
  br i1 %312, label %._crit_edge.loopexit, label %313

; <label>:313:                                    ; preds = %308
  %314 = load i32, i32* %185, align 4
  %315 = icmp eq i32 %314, 119
  br i1 %315, label %316, label %346

; <label>:316:                                    ; preds = %313
  %317 = load i8, i8* %191, align 1
  %318 = zext i8 %317 to i32
  %319 = icmp eq i32 %318, 64
  br i1 %319, label %336, label %320

; <label>:320:                                    ; preds = %316
  %321 = load i32, i32* %195, align 4
  %322 = load i32, i32* %196, align 4
  %323 = icmp eq i32 %322, -725372255
  br i1 %323, label %324, label %336

; <label>:324:                                    ; preds = %320
  %325 = ashr i32 %321, 24
  %326 = and i32 %325, 255
  %327 = ashr i32 %321, 8
  %328 = and i32 %327, 65280
  %329 = or i32 %326, %328
  %330 = shl i32 %321, 8
  %331 = and i32 %330, 16711680
  %332 = or i32 %329, %331
  %333 = shl i32 %321, 24
  %334 = and i32 %333, -16777216
  %335 = or i32 %332, %334
  br label %336

; <label>:336:                                    ; preds = %320, %324, %316
  %.1 = phi i32 [ 64, %316 ], [ %335, %324 ], [ %321, %320 ]
  %337 = icmp slt i32 %.1, 8
  br i1 %337, label %.backedge, label %338

; <label>:338:                                    ; preds = %336
  %339 = load i32, i32* %199, align 4
  %340 = icmp sge i32 %.1, %339
  br i1 %340, label %.backedge, label %341

; <label>:341:                                    ; preds = %338
  %342 = sext i32 %.1 to i64
  %343 = getelementptr inbounds i8, i8* %14, i64 %342
  %344 = load i32, i32* %206, align 4
  %345 = sub i32 %344, %.1
  store i32 %345, i32* %206, align 4
  br label %346

; <label>:346:                                    ; preds = %341, %313
  %.17 = phi i8* [ %343, %341 ], [ %14, %313 ]
  %347 = load i32, i32* %192, align 4
  %348 = icmp eq i32 %347, 127
  br i1 %348, label %349, label %363

; <label>:349:                                    ; preds = %346
  %350 = getelementptr inbounds i8, i8* %.17, i64 2
  %351 = bitcast i8* %350 to i16*
  %352 = load i16, i16* %351, align 2
  %353 = zext i16 %352 to i32
  %354 = icmp sle i32 %353, 0
  br i1 %354, label %.backedge, label %355

; <label>:355:                                    ; preds = %349
  %356 = load i32, i32* %200, align 4
  %357 = icmp sge i32 %353, %356
  br i1 %357, label %.backedge, label %358

; <label>:358:                                    ; preds = %355
  %359 = sext i32 %353 to i64
  %360 = getelementptr inbounds i8, i8* %.17, i64 %359
  %361 = load i32, i32* %207, align 4
  %362 = sub i32 %361, %353
  store i32 %362, i32* %207, align 4
  br label %363

; <label>:363:                                    ; preds = %358, %346
  %.28 = phi i8* [ %360, %358 ], [ %.17, %346 ]
  %364 = load i32, i32* %197, align 4
  %365 = icmp eq i32 %364, 192
  br i1 %365, label %366, label %393

; <label>:366:                                    ; preds = %363
  %367 = getelementptr inbounds i8, i8* %.28, i64 2
  %368 = bitcast i8* %367 to i16*
  %369 = load i16, i16* %368, align 2
  %370 = zext i16 %369 to i32
  %371 = icmp sle i32 %370, 0
  br i1 %371, label %.backedge, label %372

; <label>:372:                                    ; preds = %366
  %373 = load i32, i32* %208, align 4
  %374 = icmp sge i32 %370, %373
  br i1 %374, label %.backedge, label %375

; <label>:375:                                    ; preds = %372
  %376 = icmp eq i32 %370, 24
  br i1 %376, label %377, label %383

; <label>:377:                                    ; preds = %375
  %378 = getelementptr inbounds i8, i8* %.28, i64 8
  %379 = bitcast i8* %378 to i16*
  %380 = load i16, i16* %379, align 2
  %381 = zext i16 %380 to i32
  %382 = icmp eq i32 %381, 2
  %spec.select = select i1 %382, i32 32, i32 %370
  br label %383

; <label>:383:                                    ; preds = %377, %375
  %.2 = phi i32 [ %370, %375 ], [ %spec.select, %377 ]
  %384 = icmp sle i32 %.2, 0
  br i1 %384, label %.backedge, label %385

; <label>:385:                                    ; preds = %383
  %386 = load i32, i32* %220, align 4
  %387 = icmp sge i32 %.2, %386
  br i1 %387, label %.backedge, label %388

; <label>:388:                                    ; preds = %385
  %389 = sext i32 %.2 to i64
  %390 = getelementptr inbounds i8, i8* %.28, i64 %389
  %391 = load i32, i32* %224, align 4
  %392 = sub i32 %391, %.2
  store i32 %392, i32* %224, align 4
  br label %393

; <label>:393:                                    ; preds = %267, %388, %363, %245
  %.5 = phi i8* [ %.0643, %245 ], [ %.0643, %267 ], [ %390, %388 ], [ %.28, %363 ]
  %394 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* @mx_apl) #9
  %395 = load i64, i64* @nb_pkt, align 8
  %396 = add nsw i64 %395, 1
  store i64 %396, i64* @nb_pkt, align 8
  br i1 %158, label %397, label %441

; <label>:397:                                    ; preds = %393
  %398 = load i32, i32* %161, align 4
  %399 = icmp ult i32 %398, 24
  br i1 %399, label %1318, label %400

; <label>:400:                                    ; preds = %397
  %401 = getelementptr inbounds i8, i8* %.5, i64 0
  %402 = load i8, i8* %401, align 1
  %403 = zext i8 %402 to i32
  %404 = and i32 %403, 12
  %405 = icmp eq i32 %404, 4
  br i1 %405, label %1318, label %406

; <label>:406:                                    ; preds = %400
  %407 = getelementptr inbounds i8, i8* %.5, i64 1
  %408 = load i8, i8* %407, align 1
  %409 = zext i8 %408 to i32
  %410 = and i32 %409, 3
  switch i32 %410, label %419 [
    i32 0, label %411
    i32 1, label %413
    i32 2, label %415
    i32 3, label %417
  ]

; <label>:411:                                    ; preds = %406
  %412 = getelementptr inbounds i8, i8* %.5, i64 16
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %181, i8* align 1 %412, i64 6, i1 false), !track !126
  br label %420

; <label>:413:                                    ; preds = %406
  %414 = getelementptr inbounds i8, i8* %.5, i64 4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %182, i8* align 1 %414, i64 6, i1 false), !track !127
  br label %420

; <label>:415:                                    ; preds = %406
  %416 = getelementptr inbounds i8, i8* %.5, i64 10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %183, i8* align 1 %416, i64 6, i1 false), !track !128
  br label %420

; <label>:417:                                    ; preds = %406
  %418 = getelementptr inbounds i8, i8* %.5, i64 10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %184, i8* align 1 %418, i64 6, i1 false), !track !129
  br label %420

; <label>:419:                                    ; preds = %406
  unreachable

; <label>:420:                                    ; preds = %417, %415, %413, %411
  %421 = getelementptr inbounds i8, i8* %.5, i64 1
  %422 = load i8, i8* %421, align 1
  %423 = zext i8 %422 to i32
  %424 = and i32 %423, 3
  switch i32 %424, label %433 [
    i32 0, label %425
    i32 1, label %427
    i32 2, label %429
    i32 3, label %431
  ]

; <label>:425:                                    ; preds = %420
  %426 = getelementptr inbounds i8, i8* %.5, i64 4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %186, i8* align 1 %426, i64 6, i1 false), !track !130
  br label %434

; <label>:427:                                    ; preds = %420
  %428 = getelementptr inbounds i8, i8* %.5, i64 16
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %187, i8* align 1 %428, i64 6, i1 false), !track !131
  br label %434

; <label>:429:                                    ; preds = %420
  %430 = getelementptr inbounds i8, i8* %.5, i64 4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %188, i8* align 1 %430, i64 6, i1 false), !track !132
  br label %434

; <label>:431:                                    ; preds = %420
  %432 = getelementptr inbounds i8, i8* %.5, i64 16
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %189, i8* align 1 %432, i64 6, i1 false), !track !133
  br label %434

; <label>:433:                                    ; preds = %420
  unreachable

; <label>:434:                                    ; preds = %431, %429, %427, %425
  %435 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 38), align 8
  %436 = icmp ne i32 %435, 0
  br i1 %436, label %437, label %441

; <label>:437:                                    ; preds = %434
  %438 = load i8, i8* %193, align 1
  %439 = zext i8 %438 to i32
  %440 = icmp eq i32 %439, 1
  br i1 %440, label %1318, label %441

; <label>:441:                                    ; preds = %434, %437, %393
  %442 = load i8*, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 34), align 8
  %443 = icmp ne i8* %442, null
  br i1 %443, label %444, label %447

; <label>:444:                                    ; preds = %441
  %445 = load i8*, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 34), align 8
  %446 = call i32 @mergebssids(i8* %445, i8* %170)
  br label %447

; <label>:447:                                    ; preds = %444, %441
  %448 = call i32 @memcmp(i8* %171, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.23, i64 0, i64 0), i64 6) #10
  %449 = icmp eq i32 %448, 0
  br i1 %449, label %1318, label %450

; <label>:450:                                    ; preds = %447
  %451 = call i32 @memcmp(i8* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 9, i64 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @ZERO, i64 0, i64 0), i64 6) #10
  %452 = icmp ne i32 %451, 0
  br i1 %452, label %453, label %468

; <label>:453:                                    ; preds = %450
  %454 = call i32 @memcmp(i8* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 9, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.23, i64 0, i64 0), i64 6) #10
  %455 = icmp ne i32 %454, 0
  br i1 %455, label %456, label %468

; <label>:456:                                    ; preds = %453
  %457 = getelementptr inbounds i8, i8* %.5, i64 4
  %458 = call i32 @memcmp(i8* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 9, i64 0), i8* %457, i64 6) #10
  %459 = icmp ne i32 %458, 0
  br i1 %459, label %460, label %468

; <label>:460:                                    ; preds = %456
  %461 = getelementptr inbounds i8, i8* %.5, i64 10
  %462 = call i32 @memcmp(i8* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 9, i64 0), i8* %461, i64 6) #10
  %463 = icmp ne i32 %462, 0
  br i1 %463, label %464, label %468

; <label>:464:                                    ; preds = %460
  %465 = getelementptr inbounds i8, i8* %.5, i64 16
  %466 = call i32 @memcmp(i8* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 9, i64 0), i8* %465, i64 6) #10
  %467 = icmp ne i32 %466, 0
  br i1 %467, label %1318, label %468

; <label>:468:                                    ; preds = %456, %460, %464, %453, %450
  %469 = load %struct.AP_info*, %struct.AP_info** @ap_1st, align 8
  %470 = icmp ne %struct.AP_info* %469, null
  br i1 %470, label %.lr.ph, label %._crit_edge3

.lr.ph:                                           ; preds = %468
  %471 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %469, i32 0, i32 1
  %472 = getelementptr inbounds [6 x i8], [6 x i8]* %471, i32 0, i32 0
  %473 = call i32 @memcmp(i8* %472, i8* %190, i64 6) #10
  %474 = icmp ne i32 %473, 0
  br i1 %474, label %.lr.ph2.preheader, label %._crit_edge3

.lr.ph2.preheader:                                ; preds = %.lr.ph
  br label %.lr.ph2

; <label>:475:                                    ; preds = %.lr.ph2
  %.11327 = phi %struct.AP_info* [ %481, %.lr.ph2 ]
  %476 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.11327, i32 0, i32 1
  %477 = getelementptr inbounds [6 x i8], [6 x i8]* %476, i32 0, i32 0
  %478 = call i32 @memcmp(i8* %477, i8* %190, i64 6) #10
  %479 = icmp ne i32 %478, 0
  br i1 %479, label %.lr.ph2, label %._crit_edge3.loopexit

.lr.ph2:                                          ; preds = %.lr.ph2.preheader, %475
  %.113271 = phi %struct.AP_info* [ %.11327, %475 ], [ %469, %.lr.ph2.preheader ]
  call void @unroll_loop(i32 46)
  %480 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.113271, i32 0, i32 0
  %481 = load %struct.AP_info*, %struct.AP_info** %480, align 8
  %482 = icmp ne %struct.AP_info* %481, null
  br i1 %482, label %475, label %._crit_edge3.loopexit

._crit_edge3.loopexit:                            ; preds = %475, %.lr.ph2
  %.113.lcssa.ph = phi %struct.AP_info* [ %.11327, %475 ], [ %481, %.lr.ph2 ]
  %.011.lcssa.ph = phi %struct.AP_info* [ %.113271, %475 ], [ %.113271, %.lr.ph2 ]
  br label %._crit_edge3

._crit_edge3:                                     ; preds = %._crit_edge3.loopexit, %468, %.lr.ph
  %.113.lcssa = phi %struct.AP_info* [ %469, %.lr.ph ], [ %469, %468 ], [ %.113.lcssa.ph, %._crit_edge3.loopexit ]
  %.011.lcssa = phi %struct.AP_info* [ null, %.lr.ph ], [ null, %468 ], [ %.011.lcssa.ph, %._crit_edge3.loopexit ]
  %483 = icmp eq %struct.AP_info* %.113.lcssa, null
  br i1 %483, label %484, label %501

; <label>:484:                                    ; preds = %._crit_edge3
  %485 = call noalias i8* @malloc(i64 504) #9, !track !134
  %486 = bitcast i8* %485 to %struct.AP_info*
  %487 = icmp ne %struct.AP_info* %486, null
  br i1 %487, label %490, label %488

; <label>:488:                                    ; preds = %484
  %489 = getelementptr [14 x i8], [14 x i8]* @.str.7, i32 0, i32 0
  call void @perror(i8* %489)
  br label %._crit_edge

; <label>:490:                                    ; preds = %484
  %491 = bitcast %struct.AP_info* %486 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %491, i8 0, i64 504, i1 false)
  %492 = load %struct.AP_info*, %struct.AP_info** @ap_1st, align 8
  %493 = icmp eq %struct.AP_info* %492, null
  br i1 %493, label %494, label %495

; <label>:494:                                    ; preds = %490
  store %struct.AP_info* %486, %struct.AP_info** @ap_1st, align 8
  br label %497

; <label>:495:                                    ; preds = %490
  %496 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.011.lcssa, i32 0, i32 0
  store %struct.AP_info* %486, %struct.AP_info** %496, align 8
  br label %497

; <label>:497:                                    ; preds = %495, %494
  %498 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %486, i32 0, i32 1
  %499 = getelementptr inbounds [6 x i8], [6 x i8]* %498, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %499, i8* align 1 %201, i64 6, i1 false), !track !135
  %500 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %486, i32 0, i32 10
  store i32 -1, i32* %500, align 8
  br label %501

; <label>:501:                                    ; preds = %497, %._crit_edge3
  %.214 = phi %struct.AP_info* [ %486, %497 ], [ %.113.lcssa, %._crit_edge3 ]
  switch i32 %.15, label %628 [
    i32 2, label %502
    i32 3, label %523
  ]

; <label>:502:                                    ; preds = %501
  %503 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.214, i32 0, i32 10
  store i32 2, i32* %503, align 8
  br label %504

; <label>:504:                                    ; preds = %946, %502
  %505 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.214, i32 0, i32 7
  %506 = load i64, i64* %505, align 8
  %507 = icmp eq i64 %506, 0
  br i1 %507, label %508, label %511

; <label>:508:                                    ; preds = %504
  %509 = call i8** @uniqueiv_init()
  %510 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.214, i32 0, i32 5
  store i8** %509, i8*** %510, align 8
  br label %511

; <label>:511:                                    ; preds = %508, %504
  %512 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.214, i32 0, i32 5
  %513 = load i8**, i8*** %512, align 8
  %514 = call i32 @uniqueiv_check(i8** %513, i8* %14)
  %515 = icmp eq i32 %514, 0
  br i1 %515, label %516, label %1318

; <label>:516:                                    ; preds = %511
  %517 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.214, i32 0, i32 5
  %518 = load i8**, i8*** %517, align 8
  %519 = call i32 @uniqueiv_mark(i8** %518, i8* %14)
  %520 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.214, i32 0, i32 7
  %521 = load i64, i64* %520, align 8
  %522 = add nsw i64 %521, 1
  store i64 %522, i64* %520, align 8
  br label %1318

; <label>:523:                                    ; preds = %501
  %524 = load i16, i16* %198, align 2
  %525 = zext i16 %524 to i32
  %526 = and i32 %525, 2
  %527 = icmp ne i32 %526, 0
  br i1 %527, label %528, label %543

; <label>:528:                                    ; preds = %523
  %529 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.214, i32 0, i32 2
  %530 = getelementptr inbounds [33 x i8], [33 x i8]* %529, i32 0, i32 0
  %531 = load i16, i16* %204, align 2
  %532 = zext i16 %531 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %530, i8* align 1 %14, i64 %532, i1 false), !track !136
  %533 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 1), align 4
  %534 = icmp ne i32 %533, 0
  br i1 %534, label %535, label %1318

; <label>:535:                                    ; preds = %528
  %536 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.214, i32 0, i32 2
  %537 = getelementptr inbounds [33 x i8], [33 x i8]* %536, i32 0, i32 0
  %538 = call i32 @strcmp(i8* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 3, i64 0), i8* %537) #10
  %539 = icmp ne i32 %538, 0
  br i1 %539, label %1318, label %540

; <label>:540:                                    ; preds = %535
  %541 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.214, i32 0, i32 1
  %542 = getelementptr inbounds [6 x i8], [6 x i8]* %541, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 4, i64 0), i8* align 8 %542, i64 6, i1 false), !track !137
  br label %1318

; <label>:543:                                    ; preds = %523
  %544 = load i16, i16* %205, align 2
  %545 = zext i16 %544 to i32
  %546 = and i32 %545, 8
  %547 = icmp ne i32 %546, 0
  br i1 %547, label %548, label %577

; <label>:548:                                    ; preds = %543
  %549 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.214, i32 0, i32 10
  store i32 2, i32* %549, align 8
  %550 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 20), align 4
  %551 = icmp ne i32 %550, 0
  br i1 %551, label %552, label %558

; <label>:552:                                    ; preds = %548
  %553 = load i16, i16* %214, align 2
  %554 = zext i16 %553 to i32
  %555 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %556 = add nsw i32 %555, 3
  %557 = icmp slt i32 %554, %556
  br i1 %557, label %1318, label %558

; <label>:558:                                    ; preds = %552, %548
  %559 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.214, i32 0, i32 7
  %560 = load i64, i64* %559, align 8
  %561 = icmp eq i64 %560, 0
  br i1 %561, label %562, label %565

; <label>:562:                                    ; preds = %558
  %563 = call i8** @uniqueiv_init()
  %564 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.214, i32 0, i32 5
  store i8** %563, i8*** %564, align 8
  br label %565

; <label>:565:                                    ; preds = %562, %558
  %566 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.214, i32 0, i32 5
  %567 = load i8**, i8*** %566, align 8
  %568 = call i32 @uniqueiv_check(i8** %567, i8* %14)
  %569 = icmp eq i32 %568, 0
  br i1 %569, label %570, label %1318

; <label>:570:                                    ; preds = %565
  %571 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.214, i32 0, i32 5
  %572 = load i8**, i8*** %571, align 8
  %573 = call i32 @uniqueiv_mark(i8** %572, i8* %14)
  %574 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.214, i32 0, i32 7
  %575 = load i64, i64* %574, align 8
  %576 = add nsw i64 %575, 1
  store i64 %576, i64* %574, align 8
  br label %1318

; <label>:577:                                    ; preds = %543
  %578 = load i16, i16* %211, align 2
  %579 = zext i16 %578 to i32
  %580 = and i32 %579, 16
  %581 = icmp ne i32 %580, 0
  br i1 %581, label %582, label %619

; <label>:582:                                    ; preds = %577
  %583 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.214, i32 0, i32 10
  store i32 2, i32* %583, align 8
  %584 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 20), align 4
  %585 = icmp ne i32 %584, 0
  br i1 %585, label %586, label %600

; <label>:586:                                    ; preds = %582
  %587 = load i16, i16* %218, align 2
  %588 = zext i16 %587 to i32
  %589 = load i8, i8* %219, align 1
  %590 = zext i8 %589 to i32
  %591 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %592 = icmp slt i32 %590, %591
  br i1 %592, label %1318, label %593

; <label>:593:                                    ; preds = %586
  %594 = load i8, i8* %223, align 1
  %595 = zext i8 %594 to i32
  %596 = mul nsw i32 %595, 32
  %597 = add nsw i32 6, %596
  %598 = add nsw i32 %597, 64
  %599 = icmp slt i32 %588, %598
  br i1 %599, label %1318, label %600

; <label>:600:                                    ; preds = %593, %582
  %601 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.214, i32 0, i32 7
  %602 = load i64, i64* %601, align 8
  %603 = icmp eq i64 %602, 0
  br i1 %603, label %604, label %607

; <label>:604:                                    ; preds = %600
  %605 = call i8** @uniqueiv_init()
  %606 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.214, i32 0, i32 5
  store i8** %605, i8*** %606, align 8
  br label %607

; <label>:607:                                    ; preds = %604, %600
  %608 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.214, i32 0, i32 5
  %609 = load i8**, i8*** %608, align 8
  %610 = call i32 @uniqueiv_check(i8** %609, i8* %14)
  %611 = icmp eq i32 %610, 0
  br i1 %611, label %612, label %1318

; <label>:612:                                    ; preds = %607
  %613 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.214, i32 0, i32 5
  %614 = load i8**, i8*** %613, align 8
  %615 = call i32 @uniqueiv_mark(i8** %614, i8* %14)
  %616 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.214, i32 0, i32 7
  %617 = load i64, i64* %616, align 8
  %618 = add nsw i64 %617, 1
  store i64 %618, i64* %616, align 8
  br label %1318

; <label>:619:                                    ; preds = %577
  %620 = load i16, i16* %215, align 2
  %621 = zext i16 %620 to i32
  %622 = and i32 %621, 4
  %623 = icmp ne i32 %622, 0
  br i1 %623, label %624, label %1318

; <label>:624:                                    ; preds = %619
  %625 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.214, i32 0, i32 10
  store i32 3, i32* %625, align 8
  %626 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.214, i32 0, i32 14
  %627 = bitcast %struct.WPA_hdsk* %626 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %627, i8* align 1 %14, i64 356, i1 false), !track !138
  br label %1318

; <label>:628:                                    ; preds = %501
  %629 = getelementptr inbounds i8, i8* %.5, i64 1
  %630 = load i8, i8* %629, align 1
  %631 = zext i8 %630 to i32
  %632 = and i32 %631, 3
  switch i32 %632, label %680 [
    i32 0, label %633
    i32 1, label %635
    i32 2, label %637
  ]

; <label>:633:                                    ; preds = %628
  %634 = getelementptr inbounds i8, i8* %.5, i64 10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %202, i8* align 1 %634, i64 6, i1 false), !track !139
  br label %645

; <label>:635:                                    ; preds = %628
  %636 = getelementptr inbounds i8, i8* %.5, i64 10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %203, i8* align 1 %636, i64 6, i1 false), !track !140
  br label %645

; <label>:637:                                    ; preds = %628
  %638 = getelementptr inbounds i8, i8* %.5, i64 4
  %639 = load i8, i8* %638, align 1
  %640 = zext i8 %639 to i32
  %641 = srem i32 %640, 2
  %642 = icmp ne i32 %641, 0
  br i1 %642, label %680, label %643

; <label>:643:                                    ; preds = %637
  %644 = getelementptr inbounds i8, i8* %.5, i64 4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %210, i8* align 1 %644, i64 6, i1 false), !track !141
  br label %645

; <label>:645:                                    ; preds = %643, %635, %633
  %646 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.214, i32 0, i32 13
  %647 = load %struct.ST_info*, %struct.ST_info** %646, align 8
  %648 = icmp ne %struct.ST_info* %647, null
  br i1 %648, label %.lr.ph32, label %._crit_edge8

.lr.ph32:                                         ; preds = %645
  %649 = getelementptr inbounds %struct.ST_info, %struct.ST_info* %647, i32 0, i32 3
  %650 = getelementptr inbounds [6 x i8], [6 x i8]* %649, i32 0, i32 0
  %651 = call i32 @memcmp(i8* %650, i8* %209, i64 6) #10
  %652 = icmp ne i32 %651, 0
  br i1 %652, label %.lr.ph7.preheader, label %._crit_edge8

.lr.ph7.preheader:                                ; preds = %.lr.ph32
  br label %.lr.ph7

; <label>:653:                                    ; preds = %.lr.ph7
  %.01730 = phi %struct.ST_info* [ %659, %.lr.ph7 ]
  %654 = getelementptr inbounds %struct.ST_info, %struct.ST_info* %.01730, i32 0, i32 3
  %655 = getelementptr inbounds [6 x i8], [6 x i8]* %654, i32 0, i32 0
  %656 = call i32 @memcmp(i8* %655, i8* %209, i64 6) #10
  %657 = icmp ne i32 %656, 0
  br i1 %657, label %.lr.ph7, label %._crit_edge8.loopexit

.lr.ph7:                                          ; preds = %.lr.ph7.preheader, %653
  %.017306 = phi %struct.ST_info* [ %.01730, %653 ], [ %647, %.lr.ph7.preheader ]
  call void @unroll_loop(i32 47)
  %658 = getelementptr inbounds %struct.ST_info, %struct.ST_info* %.017306, i32 0, i32 1
  %659 = load %struct.ST_info*, %struct.ST_info** %658, align 8
  %660 = icmp ne %struct.ST_info* %659, null
  br i1 %660, label %653, label %._crit_edge8.loopexit

._crit_edge8.loopexit:                            ; preds = %653, %.lr.ph7
  %.017.lcssa.ph = phi %struct.ST_info* [ %.01730, %653 ], [ %659, %.lr.ph7 ]
  %.016.lcssa.ph = phi %struct.ST_info* [ %.017306, %653 ], [ %.017306, %.lr.ph7 ]
  br label %._crit_edge8

._crit_edge8:                                     ; preds = %._crit_edge8.loopexit, %645, %.lr.ph32
  %.017.lcssa = phi %struct.ST_info* [ %647, %.lr.ph32 ], [ %647, %645 ], [ %.017.lcssa.ph, %._crit_edge8.loopexit ]
  %.016.lcssa = phi %struct.ST_info* [ null, %.lr.ph32 ], [ null, %645 ], [ %.016.lcssa.ph, %._crit_edge8.loopexit ]
  %661 = icmp eq %struct.ST_info* %.017.lcssa, null
  br i1 %661, label %662, label %680

; <label>:662:                                    ; preds = %._crit_edge8
  %663 = call noalias i8* @malloc(i64 384) #9, !track !142
  %664 = bitcast i8* %663 to %struct.ST_info*
  %665 = icmp ne %struct.ST_info* %664, null
  br i1 %665, label %668, label %666

; <label>:666:                                    ; preds = %662
  %667 = getelementptr [14 x i8], [14 x i8]* @.str.7, i32 0, i32 0
  call void @perror(i8* %667)
  br label %._crit_edge

; <label>:668:                                    ; preds = %662
  %669 = bitcast %struct.ST_info* %664 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %669, i8 0, i64 384, i1 false)
  %670 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.214, i32 0, i32 13
  %671 = load %struct.ST_info*, %struct.ST_info** %670, align 8
  %672 = icmp eq %struct.ST_info* %671, null
  br i1 %672, label %673, label %675

; <label>:673:                                    ; preds = %668
  %674 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.214, i32 0, i32 13
  store %struct.ST_info* %664, %struct.ST_info** %674, align 8
  br label %677

; <label>:675:                                    ; preds = %668
  %676 = getelementptr inbounds %struct.ST_info, %struct.ST_info* %.016.lcssa, i32 0, i32 1
  store %struct.ST_info* %664, %struct.ST_info** %676, align 8
  br label %677

; <label>:677:                                    ; preds = %675, %673
  %678 = getelementptr inbounds %struct.ST_info, %struct.ST_info* %664, i32 0, i32 3
  %679 = getelementptr inbounds [6 x i8], [6 x i8]* %678, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %679, i8* align 1 %222, i64 6, i1 false), !track !143
  br label %680

; <label>:680:                                    ; preds = %._crit_edge8, %677, %628, %637
  %.219 = phi %struct.ST_info* [ null, %637 ], [ null, %628 ], [ %664, %677 ], [ %.017.lcssa, %._crit_edge8 ]
  %681 = getelementptr inbounds i8, i8* %.5, i64 0
  %682 = load i8, i8* %681, align 1
  %683 = zext i8 %682 to i32
  %684 = icmp eq i32 %683, 128
  br i1 %684, label %690, label %685

; <label>:685:                                    ; preds = %680
  %686 = getelementptr inbounds i8, i8* %.5, i64 0
  %687 = load i8, i8* %686, align 1
  %688 = zext i8 %687 to i32
  %689 = icmp eq i32 %688, 80
  br i1 %689, label %690, label %.loopexit24

; <label>:690:                                    ; preds = %685, %680
  %691 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.214, i32 0, i32 10
  %692 = load i32, i32* %691, align 8
  %693 = icmp slt i32 %692, 0
  br i1 %693, label %694, label %701

; <label>:694:                                    ; preds = %690
  %695 = getelementptr inbounds i8, i8* %.5, i64 34
  %696 = load i8, i8* %695, align 1
  %697 = zext i8 %696 to i32
  %698 = and i32 %697, 16
  %699 = ashr i32 %698, 4
  %700 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.214, i32 0, i32 10
  store i32 %699, i32* %700, align 8
  br label %701

; <label>:701:                                    ; preds = %694, %690
  %702 = getelementptr inbounds i8, i8* %.5, i64 36
  %703 = load i32, i32* %212, align 4
  %704 = zext i32 %703 to i64
  %705 = getelementptr inbounds i8, i8* %.5, i64 %704
  %706 = icmp ult i8* %702, %705
  br i1 %706, label %.lr.ph36.preheader, label %.loopexit24

.lr.ph36.preheader:                               ; preds = %701
  %707 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.214, i32 0, i32 2
  %708 = getelementptr inbounds [33 x i8], [33 x i8]* %707, i32 0, i32 0
  %709 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.214, i32 0, i32 2
  %710 = getelementptr inbounds [33 x i8], [33 x i8]* %709, i32 0, i32 0
  %711 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.214, i32 0, i32 2
  %712 = getelementptr inbounds [33 x i8], [33 x i8]* %711, i32 0, i32 0
  %713 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.214, i32 0, i32 1
  %714 = getelementptr inbounds [6 x i8], [6 x i8]* %713, i32 0, i32 0
  br label %.lr.ph36

.lr.ph36:                                         ; preds = %.lr.ph36.preheader, %758
  %.0935 = phi i8* [ %764, %758 ], [ %702, %.lr.ph36.preheader ]
  call void @unroll_loop(i32 48)
  %715 = getelementptr inbounds i8, i8* %.0935, i64 2
  %716 = getelementptr inbounds i8, i8* %.0935, i64 1
  %717 = load i8, i8* %716, align 1
  %718 = zext i8 %717 to i32
  %719 = sext i32 %718 to i64
  %720 = getelementptr inbounds i8, i8* %715, i64 %719
  %721 = load i32, i32* %216, align 4
  %722 = zext i32 %721 to i64
  %723 = getelementptr inbounds i8, i8* %.5, i64 %722
  %724 = icmp ugt i8* %720, %723
  br i1 %724, label %.loopexit24.loopexit, label %725

; <label>:725:                                    ; preds = %.lr.ph36
  %726 = load i8, i8* %.0935, align 1
  %727 = zext i8 %726 to i32
  %728 = icmp eq i32 %727, 0
  br i1 %728, label %729, label %758

; <label>:729:                                    ; preds = %725
  %730 = getelementptr inbounds i8, i8* %.0935, i64 1
  %731 = load i8, i8* %730, align 1
  %732 = zext i8 %731 to i32
  %733 = icmp sgt i32 %732, 0
  br i1 %733, label %734, label %758

; <label>:734:                                    ; preds = %729
  %735 = getelementptr inbounds i8, i8* %.0935, i64 2
  %736 = load i8, i8* %735, align 1
  %737 = zext i8 %736 to i32
  %738 = icmp ne i32 %737, 0
  br i1 %738, label %739, label %758

; <label>:739:                                    ; preds = %734
  %740 = getelementptr inbounds i8, i8* %.0935, i64 1
  %741 = load i8, i8* %740, align 1
  %742 = zext i8 %741 to i32
  %743 = icmp sgt i32 %742, 32
  br i1 %743, label %748, label %744

; <label>:744:                                    ; preds = %739
  %745 = getelementptr inbounds i8, i8* %.0935, i64 1
  %746 = load i8, i8* %745, align 1
  %747 = zext i8 %746 to i32
  br label %748

; <label>:748:                                    ; preds = %739, %744
  %749 = phi i32 [ %747, %744 ], [ 32, %739 ]
  call void @llvm.memset.p0i8.i64(i8* align 2 %708, i8 0, i64 33, i1 false)
  %750 = getelementptr inbounds i8, i8* %.0935, i64 2
  %751 = sext i32 %749 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %710, i8* align 1 %750, i64 %751, i1 false), !track !144
  %752 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 1), align 4
  %753 = icmp ne i32 %752, 0
  br i1 %753, label %754, label %758

; <label>:754:                                    ; preds = %748
  %755 = call i32 @strcmp(i8* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 3, i64 0), i8* %712) #10
  %756 = icmp ne i32 %755, 0
  br i1 %756, label %758, label %757

; <label>:757:                                    ; preds = %754
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 4, i64 0), i8* align 8 %714, i64 6, i1 false), !track !145
  br label %758

; <label>:758:                                    ; preds = %748, %754, %757, %734, %729, %725
  %759 = getelementptr inbounds i8, i8* %.0935, i64 1
  %760 = load i8, i8* %759, align 1
  %761 = zext i8 %760 to i32
  %762 = add nsw i32 2, %761
  %763 = sext i32 %762 to i64
  %764 = getelementptr inbounds i8, i8* %.0935, i64 %763
  %765 = load i32, i32* %212, align 4
  %766 = zext i32 %765 to i64
  %767 = getelementptr inbounds i8, i8* %.5, i64 %766
  %768 = icmp ult i8* %764, %767
  br i1 %768, label %.lr.ph36, label %.loopexit24.loopexit

.loopexit24.loopexit:                             ; preds = %758, %.lr.ph36
  br label %.loopexit24

.loopexit24:                                      ; preds = %.loopexit24.loopexit, %701, %685
  %769 = getelementptr inbounds i8, i8* %.5, i64 0
  %770 = load i8, i8* %769, align 1
  %771 = zext i8 %770 to i32
  %772 = icmp eq i32 %771, 0
  br i1 %772, label %773, label %845

; <label>:773:                                    ; preds = %.loopexit24
  %774 = getelementptr inbounds i8, i8* %.5, i64 28
  %775 = load i32, i32* %213, align 4
  %776 = zext i32 %775 to i64
  %777 = getelementptr inbounds i8, i8* %.5, i64 %776
  %778 = icmp ult i8* %774, %777
  br i1 %778, label %.lr.ph38.preheader, label %.loopexit

.lr.ph38.preheader:                               ; preds = %773
  %779 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.214, i32 0, i32 2
  %780 = getelementptr inbounds [33 x i8], [33 x i8]* %779, i32 0, i32 0
  %781 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.214, i32 0, i32 2
  %782 = getelementptr inbounds [33 x i8], [33 x i8]* %781, i32 0, i32 0
  %783 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.214, i32 0, i32 2
  %784 = getelementptr inbounds [33 x i8], [33 x i8]* %783, i32 0, i32 0
  %785 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.214, i32 0, i32 1
  %786 = getelementptr inbounds [6 x i8], [6 x i8]* %785, i32 0, i32 0
  br label %.lr.ph38

.lr.ph38:                                         ; preds = %.lr.ph38.preheader, %830
  %.11037 = phi i8* [ %836, %830 ], [ %774, %.lr.ph38.preheader ]
  call void @unroll_loop(i32 49)
  %787 = getelementptr inbounds i8, i8* %.11037, i64 2
  %788 = getelementptr inbounds i8, i8* %.11037, i64 1
  %789 = load i8, i8* %788, align 1
  %790 = zext i8 %789 to i32
  %791 = sext i32 %790 to i64
  %792 = getelementptr inbounds i8, i8* %787, i64 %791
  %793 = load i32, i32* %217, align 4
  %794 = zext i32 %793 to i64
  %795 = getelementptr inbounds i8, i8* %.5, i64 %794
  %796 = icmp ugt i8* %792, %795
  br i1 %796, label %.loopexit.loopexit, label %797

; <label>:797:                                    ; preds = %.lr.ph38
  %798 = load i8, i8* %.11037, align 1
  %799 = zext i8 %798 to i32
  %800 = icmp eq i32 %799, 0
  br i1 %800, label %801, label %830

; <label>:801:                                    ; preds = %797
  %802 = getelementptr inbounds i8, i8* %.11037, i64 1
  %803 = load i8, i8* %802, align 1
  %804 = zext i8 %803 to i32
  %805 = icmp sgt i32 %804, 0
  br i1 %805, label %806, label %830

; <label>:806:                                    ; preds = %801
  %807 = getelementptr inbounds i8, i8* %.11037, i64 2
  %808 = load i8, i8* %807, align 1
  %809 = zext i8 %808 to i32
  %810 = icmp ne i32 %809, 0
  br i1 %810, label %811, label %830

; <label>:811:                                    ; preds = %806
  %812 = getelementptr inbounds i8, i8* %.11037, i64 1
  %813 = load i8, i8* %812, align 1
  %814 = zext i8 %813 to i32
  %815 = icmp sgt i32 %814, 32
  br i1 %815, label %820, label %816

; <label>:816:                                    ; preds = %811
  %817 = getelementptr inbounds i8, i8* %.11037, i64 1
  %818 = load i8, i8* %817, align 1
  %819 = zext i8 %818 to i32
  br label %820

; <label>:820:                                    ; preds = %811, %816
  %821 = phi i32 [ %819, %816 ], [ 32, %811 ]
  call void @llvm.memset.p0i8.i64(i8* align 2 %780, i8 0, i64 33, i1 false)
  %822 = getelementptr inbounds i8, i8* %.11037, i64 2
  %823 = sext i32 %821 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %782, i8* align 1 %822, i64 %823, i1 false), !track !146
  %824 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 1), align 4
  %825 = icmp ne i32 %824, 0
  br i1 %825, label %826, label %830

; <label>:826:                                    ; preds = %820
  %827 = call i32 @strcmp(i8* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 3, i64 0), i8* %784) #10
  %828 = icmp ne i32 %827, 0
  br i1 %828, label %830, label %829

; <label>:829:                                    ; preds = %826
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 4, i64 0), i8* align 8 %786, i64 6, i1 false), !track !147
  br label %830

; <label>:830:                                    ; preds = %820, %826, %829, %806, %801, %797
  %831 = getelementptr inbounds i8, i8* %.11037, i64 1
  %832 = load i8, i8* %831, align 1
  %833 = zext i8 %832 to i32
  %834 = add nsw i32 2, %833
  %835 = sext i32 %834 to i64
  %836 = getelementptr inbounds i8, i8* %.11037, i64 %835
  %837 = load i32, i32* %213, align 4
  %838 = zext i32 %837 to i64
  %839 = getelementptr inbounds i8, i8* %.5, i64 %838
  %840 = icmp ult i8* %836, %839
  br i1 %840, label %.lr.ph38, label %.loopexit.loopexit

.loopexit.loopexit:                               ; preds = %.lr.ph38, %830
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit.loopexit, %773
  %841 = icmp ne %struct.ST_info* %.219, null
  br i1 %841, label %842, label %845

; <label>:842:                                    ; preds = %.loopexit
  %843 = getelementptr inbounds %struct.ST_info, %struct.ST_info* %.219, i32 0, i32 2
  %844 = getelementptr inbounds %struct.WPA_hdsk, %struct.WPA_hdsk* %843, i32 0, i32 7
  store i32 0, i32* %844, align 8
  br label %845

; <label>:845:                                    ; preds = %.loopexit, %842, %.loopexit24
  %846 = getelementptr inbounds i8, i8* %.5, i64 0
  %847 = load i8, i8* %846, align 1
  %848 = zext i8 %847 to i32
  %849 = icmp eq i32 %848, 16
  %850 = icmp ne %struct.ST_info* %.219, null
  %or.cond = and i1 %849, %850
  br i1 %or.cond, label %851, label %854

; <label>:851:                                    ; preds = %845
  %852 = getelementptr inbounds %struct.ST_info, %struct.ST_info* %.219, i32 0, i32 2
  %853 = getelementptr inbounds %struct.WPA_hdsk, %struct.WPA_hdsk* %852, i32 0, i32 7
  store i32 0, i32* %853, align 8
  br label %854

; <label>:854:                                    ; preds = %851, %845
  %855 = getelementptr inbounds i8, i8* %.5, i64 0
  %856 = load i8, i8* %855, align 1
  %857 = zext i8 %856 to i32
  %858 = and i32 %857, 12
  %859 = icmp ne i32 %858, 8
  br i1 %859, label %1318, label %860

; <label>:860:                                    ; preds = %854
  %861 = getelementptr inbounds i8, i8* %.5, i64 1
  %862 = load i8, i8* %861, align 1
  %863 = zext i8 %862 to i32
  %864 = and i32 %863, 3
  %865 = icmp ne i32 %864, 3
  %866 = select i1 %865, i32 24, i32 30
  %867 = getelementptr inbounds i8, i8* %.5, i64 0
  %868 = load i8, i8* %867, align 1
  %869 = zext i8 %868 to i32
  %870 = and i32 %869, 128
  %871 = icmp eq i32 %870, 128
  %872 = add nsw i32 %866, 2
  %spec.select1 = select i1 %871, i32 %872, i32 %866
  %873 = add nsw i32 %spec.select1, 16
  %874 = load i32, i32* %221, align 4
  %875 = icmp sgt i32 %873, %874
  br i1 %875, label %1318, label %876

; <label>:876:                                    ; preds = %860
  %877 = sext i32 %spec.select1 to i64
  %878 = getelementptr inbounds i8, i8* %.5, i64 %877
  %879 = load i8, i8* %878, align 1
  %880 = zext i8 %879 to i32
  %881 = add nsw i32 %spec.select1, 1
  %882 = sext i32 %881 to i64
  %883 = getelementptr inbounds i8, i8* %.5, i64 %882
  %884 = load i8, i8* %883, align 1
  %885 = zext i8 %884 to i32
  %886 = icmp ne i32 %880, %885
  br i1 %886, label %894, label %887

; <label>:887:                                    ; preds = %876
  %888 = add nsw i32 %spec.select1, 2
  %889 = sext i32 %888 to i64
  %890 = getelementptr inbounds i8, i8* %.5, i64 %889
  %891 = load i8, i8* %890, align 1
  %892 = zext i8 %891 to i32
  %893 = icmp ne i32 %892, 3
  br i1 %893, label %894, label %949

; <label>:894:                                    ; preds = %887, %876
  %895 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.214, i32 0, i32 10
  store i32 2, i32* %895, align 8
  %896 = add nsw i32 %spec.select1, 3
  %897 = sext i32 %896 to i64
  %898 = getelementptr inbounds i8, i8* %.5, i64 %897
  %899 = load i8, i8* %898, align 1
  %900 = zext i8 %899 to i32
  %901 = and i32 %900, 32
  %902 = icmp ne i32 %901, 0
  br i1 %902, label %903, label %905

; <label>:903:                                    ; preds = %894
  %904 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.214, i32 0, i32 10
  store i32 3, i32* %904, align 8
  br label %905

; <label>:905:                                    ; preds = %903, %894
  %906 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 11), align 8
  %907 = icmp ne i32 %906, 0
  br i1 %907, label %908, label %918

; <label>:908:                                    ; preds = %905
  %909 = add nsw i32 %spec.select1, 3
  %910 = sext i32 %909 to i64
  %911 = getelementptr inbounds i8, i8* %.5, i64 %910
  %912 = load i8, i8* %911, align 1
  %913 = zext i8 %912 to i32
  %914 = ashr i32 %913, 6
  %915 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 11), align 8
  %916 = sub nsw i32 %915, 1
  %917 = icmp ne i32 %914, %916
  br i1 %917, label %1318, label %918

; <label>:918:                                    ; preds = %908, %905
  %919 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 20), align 4
  %920 = icmp ne i32 %919, 0
  br i1 %920, label %921, label %946

; <label>:921:                                    ; preds = %918
  %922 = sext i32 %spec.select1 to i64
  %923 = getelementptr inbounds i8, i8* %.5, i64 %922
  %924 = load i32, i32* %226, align 4
  %925 = zext i32 %924 to i64
  %926 = ptrtoint i8* %923 to i64
  %927 = ptrtoint i8* %.5 to i64
  %928 = sub i64 %926, %927
  %929 = sub nsw i64 %925, %928
  %930 = sub nsw i64 %929, 4
  %931 = sub nsw i64 %930, 4
  %932 = trunc i64 %931 to i32
  %933 = getelementptr inbounds i8, i8* %.5, i64 1
  %934 = load i8, i8* %933, align 1
  %935 = zext i8 %934 to i32
  %936 = and i32 %935, 3
  %937 = icmp eq i32 %936, 3
  br i1 %937, label %938, label %940

; <label>:938:                                    ; preds = %921
  %939 = sub nsw i32 %932, 6
  br label %940

; <label>:940:                                    ; preds = %938, %921
  %.0 = phi i32 [ %939, %938 ], [ %932, %921 ]
  %941 = call i32 @known_clear(i8* %227, i32* %12, i32* %228, i8* %.5, i32 %.0)
  %942 = load i32, i32* %12, align 4
  %943 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %944 = add nsw i32 %943, 3
  %945 = icmp slt i32 %942, %944
  br i1 %945, label %1318, label %946

; <label>:946:                                    ; preds = %940, %918
  %947 = sext i32 %spec.select1 to i64
  %948 = getelementptr inbounds i8, i8* %.5, i64 %947
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %14, i8* align 1 %948, i64 3, i1 false), !track !148
  br label %504

; <label>:949:                                    ; preds = %887
  %950 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.214, i32 0, i32 10
  %951 = load i32, i32* %950, align 8
  %952 = icmp slt i32 %951, 0
  br i1 %952, label %953, label %955

; <label>:953:                                    ; preds = %949
  %954 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.214, i32 0, i32 10
  store i32 0, i32* %954, align 8
  br label %955

; <label>:955:                                    ; preds = %953, %949
  %956 = add nsw i32 %spec.select1, 6
  %957 = add nsw i32 %956, 20
  %958 = load i32, i32* %225, align 4
  %959 = icmp slt i32 %957, %958
  br i1 %959, label %960, label %1004

; <label>:960:                                    ; preds = %955
  %961 = sext i32 %956 to i64
  %962 = getelementptr inbounds i8, i8* %.5, i64 %961
  %963 = load i8, i8* %962, align 1
  %964 = zext i8 %963 to i32
  %965 = icmp eq i32 %964, 8
  br i1 %965, label %966, label %985

; <label>:966:                                    ; preds = %960
  %967 = add nsw i32 %956, 1
  %968 = sext i32 %967 to i64
  %969 = getelementptr inbounds i8, i8* %.5, i64 %968
  %970 = load i8, i8* %969, align 1
  %971 = zext i8 %970 to i32
  %972 = icmp eq i32 %971, 0
  br i1 %972, label %973, label %985

; <label>:973:                                    ; preds = %966
  %974 = getelementptr inbounds i8, i8* %.5, i64 1
  %975 = load i8, i8* %974, align 1
  %976 = zext i8 %975 to i32
  %977 = and i32 %976, 3
  %978 = icmp eq i32 %977, 1
  br i1 %978, label %979, label %985

; <label>:979:                                    ; preds = %973
  %980 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.214, i32 0, i32 3
  %981 = getelementptr inbounds [4 x i8], [4 x i8]* %980, i32 0, i32 0
  %982 = add nsw i32 %956, 14
  %983 = sext i32 %982 to i64
  %984 = getelementptr inbounds i8, i8* %.5, i64 %983
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %981, i8* align 1 %984, i64 4, i1 false), !track !149
  br label %985

; <label>:985:                                    ; preds = %979, %973, %966, %960
  %986 = sext i32 %956 to i64
  %987 = getelementptr inbounds i8, i8* %.5, i64 %986
  %988 = load i8, i8* %987, align 1
  %989 = zext i8 %988 to i32
  %990 = icmp eq i32 %989, 8
  br i1 %990, label %991, label %1004

; <label>:991:                                    ; preds = %985
  %992 = add nsw i32 %956, 1
  %993 = sext i32 %992 to i64
  %994 = getelementptr inbounds i8, i8* %.5, i64 %993
  %995 = load i8, i8* %994, align 1
  %996 = zext i8 %995 to i32
  %997 = icmp eq i32 %996, 6
  br i1 %997, label %998, label %1004

; <label>:998:                                    ; preds = %991
  %999 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.214, i32 0, i32 3
  %1000 = getelementptr inbounds [4 x i8], [4 x i8]* %999, i32 0, i32 0
  %1001 = add nsw i32 %956, 16
  %1002 = sext i32 %1001 to i64
  %1003 = getelementptr inbounds i8, i8* %.5, i64 %1002
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1000, i8* align 1 %1003, i64 4, i1 false), !track !150
  br label %1004

; <label>:1004:                                   ; preds = %985, %991, %998, %955
  %1005 = sext i32 %956 to i64
  %1006 = getelementptr inbounds i8, i8* %.5, i64 %1005
  %1007 = load i8, i8* %1006, align 1
  %1008 = zext i8 %1007 to i32
  %1009 = icmp ne i32 %1008, 136
  br i1 %1009, label %1318, label %1010

; <label>:1010:                                   ; preds = %1004
  %1011 = add nsw i32 %956, 1
  %1012 = sext i32 %1011 to i64
  %1013 = getelementptr inbounds i8, i8* %.5, i64 %1012
  %1014 = load i8, i8* %1013, align 1
  %1015 = zext i8 %1014 to i32
  %1016 = icmp ne i32 %1015, 142
  br i1 %1016, label %1318, label %1017

; <label>:1017:                                   ; preds = %1010
  %1018 = add nsw i32 %956, 2
  %1019 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.214, i32 0, i32 11
  store i32 1, i32* %1019, align 4
  %1020 = add nsw i32 %1018, 1
  %1021 = sext i32 %1020 to i64
  %1022 = getelementptr inbounds i8, i8* %.5, i64 %1021
  %1023 = load i8, i8* %1022, align 1
  %1024 = zext i8 %1023 to i32
  %1025 = icmp ne i32 %1024, 3
  br i1 %1025, label %1318, label %1026

; <label>:1026:                                   ; preds = %1017
  %1027 = add nsw i32 %1018, 4
  %1028 = sext i32 %1027 to i64
  %1029 = getelementptr inbounds i8, i8* %.5, i64 %1028
  %1030 = load i8, i8* %1029, align 1
  %1031 = zext i8 %1030 to i32
  %1032 = icmp ne i32 %1031, 254
  br i1 %1032, label %1033, label %1040

; <label>:1033:                                   ; preds = %1026
  %1034 = add nsw i32 %1018, 4
  %1035 = sext i32 %1034 to i64
  %1036 = getelementptr inbounds i8, i8* %.5, i64 %1035
  %1037 = load i8, i8* %1036, align 1
  %1038 = zext i8 %1037 to i32
  %1039 = icmp ne i32 %1038, 2
  br i1 %1039, label %1318, label %1040

; <label>:1040:                                   ; preds = %1033, %1026
  %1041 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.214, i32 0, i32 11
  store i32 0, i32* %1041, align 4
  %1042 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.214, i32 0, i32 10
  store i32 3, i32* %1042, align 8
  %1043 = icmp eq %struct.ST_info* %.219, null
  br i1 %1043, label %1044, label %1046

; <label>:1044:                                   ; preds = %1040
  %1045 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* @mx_apl) #9
  br label %.backedge

; <label>:1046:                                   ; preds = %1040
  %1047 = add nsw i32 %1018, 6
  %1048 = sext i32 %1047 to i64
  %1049 = getelementptr inbounds i8, i8* %.5, i64 %1048
  %1050 = load i8, i8* %1049, align 1
  %1051 = zext i8 %1050 to i32
  %1052 = and i32 %1051, 8
  %1053 = icmp ne i32 %1052, 0
  br i1 %1053, label %1054, label %1087

; <label>:1054:                                   ; preds = %1046
  %1055 = add nsw i32 %1018, 6
  %1056 = sext i32 %1055 to i64
  %1057 = getelementptr inbounds i8, i8* %.5, i64 %1056
  %1058 = load i8, i8* %1057, align 1
  %1059 = zext i8 %1058 to i32
  %1060 = and i32 %1059, 64
  %1061 = icmp eq i32 %1060, 0
  br i1 %1061, label %1062, label %1087

; <label>:1062:                                   ; preds = %1054
  %1063 = add nsw i32 %1018, 6
  %1064 = sext i32 %1063 to i64
  %1065 = getelementptr inbounds i8, i8* %.5, i64 %1064
  %1066 = load i8, i8* %1065, align 1
  %1067 = zext i8 %1066 to i32
  %1068 = and i32 %1067, 128
  %1069 = icmp ne i32 %1068, 0
  br i1 %1069, label %1070, label %1087

; <label>:1070:                                   ; preds = %1062
  %1071 = add nsw i32 %1018, 5
  %1072 = sext i32 %1071 to i64
  %1073 = getelementptr inbounds i8, i8* %.5, i64 %1072
  %1074 = load i8, i8* %1073, align 1
  %1075 = zext i8 %1074 to i32
  %1076 = and i32 %1075, 1
  %1077 = icmp eq i32 %1076, 0
  br i1 %1077, label %1078, label %1087

; <label>:1078:                                   ; preds = %1070
  %1079 = getelementptr inbounds %struct.ST_info, %struct.ST_info* %.219, i32 0, i32 2
  %1080 = getelementptr inbounds %struct.WPA_hdsk, %struct.WPA_hdsk* %1079, i32 0, i32 2
  %1081 = getelementptr inbounds [32 x i8], [32 x i8]* %1080, i32 0, i32 0
  %1082 = add nsw i32 %1018, 17
  %1083 = sext i32 %1082 to i64
  %1084 = getelementptr inbounds i8, i8* %.5, i64 %1083
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %1081, i8* align 1 %1084, i64 32, i1 false), !track !151
  %1085 = getelementptr inbounds %struct.ST_info, %struct.ST_info* %.219, i32 0, i32 2
  %1086 = getelementptr inbounds %struct.WPA_hdsk, %struct.WPA_hdsk* %1085, i32 0, i32 7
  store i32 1, i32* %1086, align 8
  br label %1087

; <label>:1087:                                   ; preds = %1078, %1070, %1062, %1054, %1046
  %1088 = add nsw i32 %1018, 6
  %1089 = sext i32 %1088 to i64
  %1090 = getelementptr inbounds i8, i8* %.5, i64 %1089
  %1091 = load i8, i8* %1090, align 1
  %1092 = zext i8 %1091 to i32
  %1093 = and i32 %1092, 8
  %1094 = icmp ne i32 %1093, 0
  br i1 %1094, label %1095, label %1196

; <label>:1095:                                   ; preds = %1087
  %1096 = add nsw i32 %1018, 6
  %1097 = sext i32 %1096 to i64
  %1098 = getelementptr inbounds i8, i8* %.5, i64 %1097
  %1099 = load i8, i8* %1098, align 1
  %1100 = zext i8 %1099 to i32
  %1101 = and i32 %1100, 64
  %1102 = icmp eq i32 %1101, 0
  br i1 %1102, label %1103, label %1196

; <label>:1103:                                   ; preds = %1095
  %1104 = add nsw i32 %1018, 6
  %1105 = sext i32 %1104 to i64
  %1106 = getelementptr inbounds i8, i8* %.5, i64 %1105
  %1107 = load i8, i8* %1106, align 1
  %1108 = zext i8 %1107 to i32
  %1109 = and i32 %1108, 128
  %1110 = icmp eq i32 %1109, 0
  br i1 %1110, label %1111, label %1196

; <label>:1111:                                   ; preds = %1103
  %1112 = add nsw i32 %1018, 5
  %1113 = sext i32 %1112 to i64
  %1114 = getelementptr inbounds i8, i8* %.5, i64 %1113
  %1115 = load i8, i8* %1114, align 1
  %1116 = zext i8 %1115 to i32
  %1117 = and i32 %1116, 1
  %1118 = icmp ne i32 %1117, 0
  br i1 %1118, label %1119, label %1196

; <label>:1119:                                   ; preds = %1111
  %1120 = add nsw i32 %1018, 17
  %1121 = sext i32 %1120 to i64
  %1122 = getelementptr inbounds i8, i8* %.5, i64 %1121
  %1123 = call i32 @memcmp(i8* %1122, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @ZERO, i64 0, i64 0), i64 32) #10
  %1124 = icmp ne i32 %1123, 0
  br i1 %1124, label %1125, label %1136

; <label>:1125:                                   ; preds = %1119
  %1126 = getelementptr inbounds %struct.ST_info, %struct.ST_info* %.219, i32 0, i32 2
  %1127 = getelementptr inbounds %struct.WPA_hdsk, %struct.WPA_hdsk* %1126, i32 0, i32 1
  %1128 = getelementptr inbounds [32 x i8], [32 x i8]* %1127, i32 0, i32 0
  %1129 = add nsw i32 %1018, 17
  %1130 = sext i32 %1129 to i64
  %1131 = getelementptr inbounds i8, i8* %.5, i64 %1130
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %1128, i8* align 1 %1131, i64 32, i1 false), !track !152
  %1132 = getelementptr inbounds %struct.ST_info, %struct.ST_info* %.219, i32 0, i32 2
  %1133 = getelementptr inbounds %struct.WPA_hdsk, %struct.WPA_hdsk* %1132, i32 0, i32 7
  %1134 = load i32, i32* %1133, align 8
  %1135 = or i32 %1134, 2
  store i32 %1135, i32* %1133, align 8
  br label %1136

; <label>:1136:                                   ; preds = %1125, %1119
  %1137 = getelementptr inbounds %struct.ST_info, %struct.ST_info* %.219, i32 0, i32 2
  %1138 = getelementptr inbounds %struct.WPA_hdsk, %struct.WPA_hdsk* %1137, i32 0, i32 7
  %1139 = load i32, i32* %1138, align 8
  %1140 = and i32 %1139, 4
  %1141 = icmp ne i32 %1140, 4
  br i1 %1141, label %1142, label %1196

; <label>:1142:                                   ; preds = %1136
  %1143 = add nsw i32 %1018, 2
  %1144 = sext i32 %1143 to i64
  %1145 = getelementptr inbounds i8, i8* %.5, i64 %1144
  %1146 = load i8, i8* %1145, align 1
  %1147 = zext i8 %1146 to i32
  %1148 = shl i32 %1147, 8
  %1149 = add nsw i32 %1018, 3
  %1150 = sext i32 %1149 to i64
  %1151 = getelementptr inbounds i8, i8* %.5, i64 %1150
  %1152 = load i8, i8* %1151, align 1
  %1153 = zext i8 %1152 to i32
  %1154 = add nsw i32 %1148, %1153
  %1155 = add nsw i32 %1154, 4
  %1156 = getelementptr inbounds %struct.ST_info, %struct.ST_info* %.219, i32 0, i32 2
  %1157 = getelementptr inbounds %struct.WPA_hdsk, %struct.WPA_hdsk* %1156, i32 0, i32 5
  store i32 %1155, i32* %1157, align 8
  %1158 = load i32, i32* %230, align 4
  %1159 = sub nsw i32 %1158, %1018
  %1160 = getelementptr inbounds %struct.ST_info, %struct.ST_info* %.219, i32 0, i32 2
  %1161 = getelementptr inbounds %struct.WPA_hdsk, %struct.WPA_hdsk* %1160, i32 0, i32 5
  %1162 = load i32, i32* %1161, align 8
  %1163 = icmp slt i32 %1159, %1162
  br i1 %1163, label %.backedge, label %1164

; <label>:1164:                                   ; preds = %1142
  %1165 = getelementptr inbounds %struct.ST_info, %struct.ST_info* %.219, i32 0, i32 2
  %1166 = getelementptr inbounds %struct.WPA_hdsk, %struct.WPA_hdsk* %1165, i32 0, i32 3
  %1167 = getelementptr inbounds [16 x i8], [16 x i8]* %1166, i32 0, i32 0
  %1168 = add nsw i32 %1018, 81
  %1169 = sext i32 %1168 to i64
  %1170 = getelementptr inbounds i8, i8* %.5, i64 %1169
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %1167, i8* align 1 %1170, i64 16, i1 false), !track !153
  %1171 = getelementptr inbounds %struct.ST_info, %struct.ST_info* %.219, i32 0, i32 2
  %1172 = getelementptr inbounds %struct.WPA_hdsk, %struct.WPA_hdsk* %1171, i32 0, i32 4
  %1173 = getelementptr inbounds [256 x i8], [256 x i8]* %1172, i32 0, i32 0
  %1174 = sext i32 %1018 to i64
  %1175 = getelementptr inbounds i8, i8* %.5, i64 %1174
  %1176 = getelementptr inbounds %struct.ST_info, %struct.ST_info* %.219, i32 0, i32 2
  %1177 = getelementptr inbounds %struct.WPA_hdsk, %struct.WPA_hdsk* %1176, i32 0, i32 5
  %1178 = load i32, i32* %1177, align 8
  %1179 = sext i32 %1178 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %1173, i8* align 1 %1175, i64 %1179, i1 false), !track !154
  %1180 = getelementptr inbounds %struct.ST_info, %struct.ST_info* %.219, i32 0, i32 2
  %1181 = getelementptr inbounds %struct.WPA_hdsk, %struct.WPA_hdsk* %1180, i32 0, i32 4
  %1182 = getelementptr inbounds [256 x i8], [256 x i8]* %1181, i32 0, i32 0
  %1183 = getelementptr inbounds i8, i8* %1182, i64 81
  call void @llvm.memset.p0i8.i64(i8* align 1 %1183, i8 0, i64 16, i1 false)
  %1184 = getelementptr inbounds %struct.ST_info, %struct.ST_info* %.219, i32 0, i32 2
  %1185 = getelementptr inbounds %struct.WPA_hdsk, %struct.WPA_hdsk* %1184, i32 0, i32 7
  %1186 = load i32, i32* %1185, align 8
  %1187 = or i32 %1186, 4
  store i32 %1187, i32* %1185, align 8
  %1188 = add nsw i32 %1018, 6
  %1189 = sext i32 %1188 to i64
  %1190 = getelementptr inbounds i8, i8* %.5, i64 %1189
  %1191 = load i8, i8* %1190, align 1
  %1192 = zext i8 %1191 to i32
  %1193 = and i32 %1192, 7
  %1194 = getelementptr inbounds %struct.ST_info, %struct.ST_info* %.219, i32 0, i32 2
  %1195 = getelementptr inbounds %struct.WPA_hdsk, %struct.WPA_hdsk* %1194, i32 0, i32 6
  store i32 %1193, i32* %1195, align 4
  br label %1196

; <label>:1196:                                   ; preds = %1136, %1164, %1111, %1103, %1095, %1087
  %1197 = add nsw i32 %1018, 6
  %1198 = sext i32 %1197 to i64
  %1199 = getelementptr inbounds i8, i8* %.5, i64 %1198
  %1200 = load i8, i8* %1199, align 1
  %1201 = zext i8 %1200 to i32
  %1202 = and i32 %1201, 8
  %1203 = icmp ne i32 %1202, 0
  br i1 %1203, label %1204, label %1305

; <label>:1204:                                   ; preds = %1196
  %1205 = add nsw i32 %1018, 6
  %1206 = sext i32 %1205 to i64
  %1207 = getelementptr inbounds i8, i8* %.5, i64 %1206
  %1208 = load i8, i8* %1207, align 1
  %1209 = zext i8 %1208 to i32
  %1210 = and i32 %1209, 64
  %1211 = icmp ne i32 %1210, 0
  br i1 %1211, label %1212, label %1305

; <label>:1212:                                   ; preds = %1204
  %1213 = add nsw i32 %1018, 6
  %1214 = sext i32 %1213 to i64
  %1215 = getelementptr inbounds i8, i8* %.5, i64 %1214
  %1216 = load i8, i8* %1215, align 1
  %1217 = zext i8 %1216 to i32
  %1218 = and i32 %1217, 128
  %1219 = icmp ne i32 %1218, 0
  br i1 %1219, label %1220, label %1305

; <label>:1220:                                   ; preds = %1212
  %1221 = add nsw i32 %1018, 5
  %1222 = sext i32 %1221 to i64
  %1223 = getelementptr inbounds i8, i8* %.5, i64 %1222
  %1224 = load i8, i8* %1223, align 1
  %1225 = zext i8 %1224 to i32
  %1226 = and i32 %1225, 1
  %1227 = icmp ne i32 %1226, 0
  br i1 %1227, label %1228, label %1305

; <label>:1228:                                   ; preds = %1220
  %1229 = add nsw i32 %1018, 17
  %1230 = sext i32 %1229 to i64
  %1231 = getelementptr inbounds i8, i8* %.5, i64 %1230
  %1232 = call i32 @memcmp(i8* %1231, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @ZERO, i64 0, i64 0), i64 32) #10
  %1233 = icmp ne i32 %1232, 0
  br i1 %1233, label %1234, label %1245

; <label>:1234:                                   ; preds = %1228
  %1235 = getelementptr inbounds %struct.ST_info, %struct.ST_info* %.219, i32 0, i32 2
  %1236 = getelementptr inbounds %struct.WPA_hdsk, %struct.WPA_hdsk* %1235, i32 0, i32 2
  %1237 = getelementptr inbounds [32 x i8], [32 x i8]* %1236, i32 0, i32 0
  %1238 = add nsw i32 %1018, 17
  %1239 = sext i32 %1238 to i64
  %1240 = getelementptr inbounds i8, i8* %.5, i64 %1239
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %1237, i8* align 1 %1240, i64 32, i1 false), !track !155
  %1241 = getelementptr inbounds %struct.ST_info, %struct.ST_info* %.219, i32 0, i32 2
  %1242 = getelementptr inbounds %struct.WPA_hdsk, %struct.WPA_hdsk* %1241, i32 0, i32 7
  %1243 = load i32, i32* %1242, align 8
  %1244 = or i32 %1243, 1
  store i32 %1244, i32* %1242, align 8
  br label %1245

; <label>:1245:                                   ; preds = %1234, %1228
  %1246 = getelementptr inbounds %struct.ST_info, %struct.ST_info* %.219, i32 0, i32 2
  %1247 = getelementptr inbounds %struct.WPA_hdsk, %struct.WPA_hdsk* %1246, i32 0, i32 7
  %1248 = load i32, i32* %1247, align 8
  %1249 = and i32 %1248, 4
  %1250 = icmp ne i32 %1249, 4
  br i1 %1250, label %1251, label %1305

; <label>:1251:                                   ; preds = %1245
  %1252 = add nsw i32 %1018, 2
  %1253 = sext i32 %1252 to i64
  %1254 = getelementptr inbounds i8, i8* %.5, i64 %1253
  %1255 = load i8, i8* %1254, align 1
  %1256 = zext i8 %1255 to i32
  %1257 = shl i32 %1256, 8
  %1258 = add nsw i32 %1018, 3
  %1259 = sext i32 %1258 to i64
  %1260 = getelementptr inbounds i8, i8* %.5, i64 %1259
  %1261 = load i8, i8* %1260, align 1
  %1262 = zext i8 %1261 to i32
  %1263 = add nsw i32 %1257, %1262
  %1264 = add nsw i32 %1263, 4
  %1265 = getelementptr inbounds %struct.ST_info, %struct.ST_info* %.219, i32 0, i32 2
  %1266 = getelementptr inbounds %struct.WPA_hdsk, %struct.WPA_hdsk* %1265, i32 0, i32 5
  store i32 %1264, i32* %1266, align 8
  %1267 = load i32, i32* %231, align 4
  %1268 = sub nsw i32 %1267, %1018
  %1269 = getelementptr inbounds %struct.ST_info, %struct.ST_info* %.219, i32 0, i32 2
  %1270 = getelementptr inbounds %struct.WPA_hdsk, %struct.WPA_hdsk* %1269, i32 0, i32 5
  %1271 = load i32, i32* %1270, align 8
  %1272 = icmp slt i32 %1268, %1271
  br i1 %1272, label %.backedge, label %1273

; <label>:1273:                                   ; preds = %1251
  %1274 = getelementptr inbounds %struct.ST_info, %struct.ST_info* %.219, i32 0, i32 2
  %1275 = getelementptr inbounds %struct.WPA_hdsk, %struct.WPA_hdsk* %1274, i32 0, i32 3
  %1276 = getelementptr inbounds [16 x i8], [16 x i8]* %1275, i32 0, i32 0
  %1277 = add nsw i32 %1018, 81
  %1278 = sext i32 %1277 to i64
  %1279 = getelementptr inbounds i8, i8* %.5, i64 %1278
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %1276, i8* align 1 %1279, i64 16, i1 false), !track !156
  %1280 = getelementptr inbounds %struct.ST_info, %struct.ST_info* %.219, i32 0, i32 2
  %1281 = getelementptr inbounds %struct.WPA_hdsk, %struct.WPA_hdsk* %1280, i32 0, i32 4
  %1282 = getelementptr inbounds [256 x i8], [256 x i8]* %1281, i32 0, i32 0
  %1283 = sext i32 %1018 to i64
  %1284 = getelementptr inbounds i8, i8* %.5, i64 %1283
  %1285 = getelementptr inbounds %struct.ST_info, %struct.ST_info* %.219, i32 0, i32 2
  %1286 = getelementptr inbounds %struct.WPA_hdsk, %struct.WPA_hdsk* %1285, i32 0, i32 5
  %1287 = load i32, i32* %1286, align 8
  %1288 = sext i32 %1287 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %1282, i8* align 1 %1284, i64 %1288, i1 false), !track !157
  %1289 = getelementptr inbounds %struct.ST_info, %struct.ST_info* %.219, i32 0, i32 2
  %1290 = getelementptr inbounds %struct.WPA_hdsk, %struct.WPA_hdsk* %1289, i32 0, i32 4
  %1291 = getelementptr inbounds [256 x i8], [256 x i8]* %1290, i32 0, i32 0
  %1292 = getelementptr inbounds i8, i8* %1291, i64 81
  call void @llvm.memset.p0i8.i64(i8* align 1 %1292, i8 0, i64 16, i1 false)
  %1293 = getelementptr inbounds %struct.ST_info, %struct.ST_info* %.219, i32 0, i32 2
  %1294 = getelementptr inbounds %struct.WPA_hdsk, %struct.WPA_hdsk* %1293, i32 0, i32 7
  %1295 = load i32, i32* %1294, align 8
  %1296 = or i32 %1295, 4
  store i32 %1296, i32* %1294, align 8
  %1297 = add nsw i32 %1018, 6
  %1298 = sext i32 %1297 to i64
  %1299 = getelementptr inbounds i8, i8* %.5, i64 %1298
  %1300 = load i8, i8* %1299, align 1
  %1301 = zext i8 %1300 to i32
  %1302 = and i32 %1301, 7
  %1303 = getelementptr inbounds %struct.ST_info, %struct.ST_info* %.219, i32 0, i32 2
  %1304 = getelementptr inbounds %struct.WPA_hdsk, %struct.WPA_hdsk* %1303, i32 0, i32 6
  store i32 %1302, i32* %1304, align 4
  br label %1305

; <label>:1305:                                   ; preds = %1245, %1273, %1220, %1212, %1204, %1196
  %1306 = getelementptr inbounds %struct.ST_info, %struct.ST_info* %.219, i32 0, i32 2
  %1307 = getelementptr inbounds %struct.WPA_hdsk, %struct.WPA_hdsk* %1306, i32 0, i32 7
  %1308 = load i32, i32* %1307, align 8
  %1309 = icmp eq i32 %1308, 7
  br i1 %1309, label %1310, label %1318

; <label>:1310:                                   ; preds = %1305
  %1311 = getelementptr inbounds %struct.ST_info, %struct.ST_info* %.219, i32 0, i32 2
  %1312 = getelementptr inbounds %struct.WPA_hdsk, %struct.WPA_hdsk* %1311, i32 0, i32 0
  %1313 = getelementptr inbounds [6 x i8], [6 x i8]* %1312, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1313, i8* align 1 %229, i64 6, i1 false), !track !158
  %1314 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.214, i32 0, i32 14
  %1315 = bitcast %struct.WPA_hdsk* %1314 to i8*
  %1316 = getelementptr inbounds %struct.ST_info, %struct.ST_info* %.219, i32 0, i32 2
  %1317 = bitcast %struct.WPA_hdsk* %1316 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1315, i8* align 8 %1317, i64 356, i1 false), !track !159
  br label %1318

; <label>:1318:                                   ; preds = %1305, %1310, %1017, %1033, %1004, %1010, %940, %908, %860, %854, %540, %535, %528, %612, %607, %624, %619, %565, %570, %593, %586, %552, %511, %516, %464, %447, %437, %400, %397
  %.315 = phi %struct.AP_info* [ %.01239, %397 ], [ %.01239, %400 ], [ %.01239, %437 ], [ %.01239, %447 ], [ %.01239, %464 ], [ %.214, %516 ], [ %.214, %511 ], [ %.214, %552 ], [ %.214, %586 ], [ %.214, %593 ], [ %.214, %570 ], [ %.214, %565 ], [ %.214, %619 ], [ %.214, %624 ], [ %.214, %607 ], [ %.214, %612 ], [ %.214, %528 ], [ %.214, %535 ], [ %.214, %540 ], [ %.214, %854 ], [ %.214, %860 ], [ %.214, %908 ], [ %.214, %940 ], [ %.214, %1010 ], [ %.214, %1004 ], [ %.214, %1033 ], [ %.214, %1017 ], [ %.214, %1310 ], [ %.214, %1305 ]
  %1319 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* @mx_apl) #9
  %1320 = icmp ne %struct.AP_info* %.315, null
  br i1 %1320, label %1321, label %.backedge

; <label>:1321:                                   ; preds = %1318
  %1322 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.315, i32 0, i32 7
  %1323 = load i64, i64* %1322, align 8
  %1324 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 33), align 8
  %1325 = sext i32 %1324 to i64
  %1326 = icmp sge i64 %1323, %1325
  br i1 %1326, label %._crit_edge.loopexit, label %.backedge

.backedge:                                        ; preds = %1318, %1321, %1251, %1142, %383, %385, %366, %372, %349, %355, %336, %338, %1044
  %.012.be = phi %struct.AP_info* [ %.214, %1044 ], [ %.01239, %338 ], [ %.01239, %336 ], [ %.01239, %355 ], [ %.01239, %349 ], [ %.01239, %372 ], [ %.01239, %366 ], [ %.01239, %385 ], [ %.01239, %383 ], [ %.214, %1142 ], [ %.214, %1251 ], [ %.315, %1321 ], [ %.315, %1318 ]
  %.06.be = phi i8* [ %.5, %1044 ], [ %14, %338 ], [ %14, %336 ], [ %.17, %355 ], [ %.17, %349 ], [ %.28, %372 ], [ %.28, %366 ], [ %.28, %385 ], [ %.28, %383 ], [ %.5, %1142 ], [ %.5, %1251 ], [ %.5, %1321 ], [ %.5, %1318 ]
  %1327 = load i32, i32* @close_aircrack, align 4
  %1328 = icmp ne i32 %1327, 0
  br i1 %1328, label %._crit_edge.loopexit, label %.lr.ph44

._crit_edge.loopexit:                             ; preds = %232, %240, %245, %249, %258, %267, %273, %308, %1321, %.backedge
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %488, %666, %154, %302, %152, %136, %129, %110, %67, %58, %38, %32, %16
  %1329 = getelementptr inbounds %struct.read_buf, %struct.read_buf* %2, i32 0, i32 2
  %1330 = load i8*, i8** %1329, align 8
  %1331 = icmp ne i8* %1330, null
  br i1 %1331, label %1332, label %1336

; <label>:1332:                                   ; preds = %._crit_edge
  %1333 = getelementptr inbounds %struct.read_buf, %struct.read_buf* %2, i32 0, i32 2
  %1334 = load i8*, i8** %1333, align 8
  call void @free(i8* %1334) #9
  %1335 = getelementptr inbounds %struct.read_buf, %struct.read_buf* %2, i32 0, i32 2
  store i8* null, i8** %1335, align 8
  br label %1336

; <label>:1336:                                   ; preds = %1332, %._crit_edge
  %1337 = getelementptr inbounds %struct.read_buf, %struct.read_buf* %2, i32 0, i32 3
  %1338 = load i8*, i8** %1337, align 8
  %1339 = icmp ne i8* %1338, null
  br i1 %1339, label %1340, label %1344

; <label>:1340:                                   ; preds = %1336
  %1341 = getelementptr inbounds %struct.read_buf, %struct.read_buf* %2, i32 0, i32 3
  %1342 = load i8*, i8** %1341, align 8
  call void @free(i8* %1342) #9
  %1343 = getelementptr inbounds %struct.read_buf, %struct.read_buf* %2, i32 0, i32 3
  store i8* null, i8** %1343, align 8
  br label %1344

; <label>:1344:                                   ; preds = %1340, %1336
  %1345 = icmp ne i8* %14, null
  br i1 %1345, label %1346, label %1347

; <label>:1346:                                   ; preds = %1344
  call void @free(i8* %14) #9
  br label %1347

; <label>:1347:                                   ; preds = %1346, %1344
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local float @chrono(%struct.timeval*, i32) #0 {
  %3 = alloca %struct.timeval, align 8
  %4 = call i32 @gettimeofday(%struct.timeval* %3, %struct.vote* null) #9
  %5 = getelementptr inbounds %struct.timeval, %struct.timeval* %3, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %struct.timeval, %struct.timeval* %0, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = sub nsw i64 %6, %8
  %10 = sitofp i64 %9 to float
  %11 = getelementptr inbounds %struct.timeval, %struct.timeval* %3, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %struct.timeval, %struct.timeval* %0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = sub nsw i64 %12, %14
  %16 = sitofp i64 %15 to float
  %17 = fdiv float %16, 1.000000e+06
  %18 = fadd float %10, %17
  %19 = icmp ne i32 %1, 0
  br i1 %19, label %20, label %22

; <label>:20:                                     ; preds = %2
  %21 = call i32 @gettimeofday(%struct.timeval* %0, %struct.vote* null) #9
  br label %22

; <label>:22:                                     ; preds = %20, %2
  ret float %18
}

; Function Attrs: nounwind
declare dso_local i32 @gettimeofday(%struct.timeval*, %struct.vote*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @safe_read(i32, i8*, i64) #0 {
  %4 = icmp ult i64 0, %2
  br i1 %4, label %.lr.ph.preheader, label %.outer._crit_edge

.lr.ph.preheader:                                 ; preds = %3
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %.outer
  %5 = phi i1 [ %25, %.outer ], [ %4, %.lr.ph.preheader ]
  %.01.ph14 = phi i8* [ %24, %.outer ], [ %1, %.lr.ph.preheader ]
  %.02.ph13 = phi i64 [ %22, %.outer ], [ 0, %.lr.ph.preheader ]
  call void @unroll_loop(i32 50)
  %6 = sub i64 %2, %.02.ph13
  br label %8

; <label>:7:                                      ; preds = %14
  br i1 %5, label %8, label %.outer._crit_edge.loopexit

; <label>:8:                                      ; preds = %.lr.ph, %7
  call void @unroll_loop(i32 51)
  %9 = call i64 @read(i32 %0, i8* %.01.ph14, i64 %6)
  %10 = trunc i64 %9 to i32
  %11 = icmp ne i32 %10, 0
  br i1 %11, label %12, label %.loopexit.loopexit

; <label>:12:                                     ; preds = %8
  %13 = icmp slt i32 %10, 0
  br i1 %13, label %14, label %18

; <label>:14:                                     ; preds = %12
  %15 = call i32* @__errno_location() #13
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, 4
  br i1 %17, label %7, label %18

; <label>:18:                                     ; preds = %14, %12
  %.lcssa = phi i64 [ %9, %14 ], [ %9, %12 ]
  %19 = trunc i64 %.lcssa to i32
  %20 = icmp slt i32 %19, 0
  br i1 %20, label %.loopexit.loopexit1, label %.outer

.outer:                                           ; preds = %18
  %21 = sext i32 %19 to i64
  %22 = add i64 %.02.ph13, %21
  %23 = sext i32 %19 to i64
  %24 = getelementptr inbounds i8, i8* %.01.ph14, i64 %23
  %25 = icmp ult i64 %22, %2
  br i1 %25, label %.lr.ph, label %.outer._crit_edge.loopexit3

.outer._crit_edge.loopexit:                       ; preds = %7
  %.02.lcssa.ph = phi i64 [ %.02.ph13, %7 ]
  br label %.outer._crit_edge

.outer._crit_edge.loopexit3:                      ; preds = %.outer
  %.02.lcssa.ph4 = phi i64 [ %22, %.outer ]
  br label %.outer._crit_edge

.outer._crit_edge:                                ; preds = %.outer._crit_edge.loopexit3, %.outer._crit_edge.loopexit, %3
  %.02.lcssa = phi i64 [ 0, %3 ], [ %.02.lcssa.ph, %.outer._crit_edge.loopexit ], [ %.02.lcssa.ph4, %.outer._crit_edge.loopexit3 ]
  %26 = trunc i64 %.02.lcssa to i32
  br label %.loopexit

.loopexit.loopexit:                               ; preds = %8
  %.0.ph = phi i32 [ 0, %8 ]
  br label %.loopexit

.loopexit.loopexit1:                              ; preds = %18
  %.lcssa.lcssa = phi i64 [ %.lcssa, %18 ]
  %27 = trunc i64 %.lcssa.lcssa to i32
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit.loopexit1, %.loopexit.loopexit, %.outer._crit_edge
  %.0 = phi i32 [ %26, %.outer._crit_edge ], [ %.0.ph, %.loopexit.loopexit ], [ %27, %.loopexit.loopexit1 ]
  ret i32 %.0
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @crack_wep_thread(i8*) #0 {
  %2 = alloca [256 x i8], align 16, !track !160
  %3 = alloca [256 x i8], align 16, !track !161
  %4 = alloca [256 x i8], align 16, !track !162
  %5 = alloca [64 x i8], align 16, !track !163
  %6 = alloca i32, align 4
  %7 = alloca [17 x [256 x i32]], align 16, !track !164
  %8 = ptrtoint i8* %0 to i64
  %9 = trunc i64 %8 to i32
  %10 = getelementptr inbounds [256 x i8], [256 x i8]* %3, i32 0, i32 0
  %11 = getelementptr [256 x i8], [256 x i8]* @R, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %10, i8* align 16 %11, i64 256, i1 false), !track !165
  %12 = getelementptr inbounds [256 x i8], [256 x i8]* %4, i32 0, i32 0
  %13 = getelementptr [256 x i8], [256 x i8]* @R, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %12, i8* align 16 %13, i64 256, i1 false), !track !166
  %14 = sext i32 %9 to i64
  %15 = getelementptr inbounds [256 x [2 x i32]], [256 x [2 x i32]]* @mc_pipe, i64 0, i64 %14
  %16 = getelementptr inbounds [2 x i32], [2 x i32]* %15, i64 0, i64 0
  %17 = bitcast i32* %6 to i8*
  %18 = sext i32 %9 to i64
  %19 = add nsw i32 1, %9
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds [64 x i8], [64 x i8]* %5, i32 0, i32 0
  %22 = getelementptr inbounds i8, i8* %21, i64 3
  %23 = getelementptr inbounds [17 x [256 x i32]], [17 x [256 x i32]]* %7, i32 0, i32 0
  %24 = bitcast [256 x i32]* %23 to i8*
  %25 = getelementptr inbounds [64 x i8], [64 x i8]* %5, i32 0, i32 0
  %26 = getelementptr inbounds [256 x i8], [256 x i8]* %3, i64 0, i64 1
  %27 = getelementptr inbounds [256 x i8], [256 x i8]* %3, i64 0, i64 2
  %28 = getelementptr inbounds [17 x [256 x i32]], [17 x [256 x i32]]* %7, i64 0, i64 16
  %29 = getelementptr inbounds [17 x [256 x i32]], [17 x [256 x i32]]* %7, i64 0, i64 16
  %30 = getelementptr inbounds [17 x [256 x i32]], [17 x [256 x i32]]* %7, i64 0, i64 0
  %31 = getelementptr inbounds [17 x [256 x i32]], [17 x [256 x i32]]* %7, i64 0, i64 16
  %32 = getelementptr inbounds [17 x [256 x i32]], [17 x [256 x i32]]* %7, i64 0, i64 16
  %33 = getelementptr inbounds [17 x [256 x i32]], [17 x [256 x i32]]* %7, i64 0, i64 16
  %34 = getelementptr inbounds [256 x i8], [256 x i8]* %3, i64 0, i64 0
  %35 = getelementptr inbounds [17 x [256 x i32]], [17 x [256 x i32]]* %7, i64 0, i64 16
  %36 = getelementptr inbounds [17 x [256 x i32]], [17 x [256 x i32]]* %7, i64 0, i64 16
  %37 = getelementptr inbounds [256 x i8], [256 x i8]* %4, i64 0, i64 0
  %38 = getelementptr inbounds [17 x [256 x i32]], [17 x [256 x i32]]* %7, i64 0, i64 1
  %39 = getelementptr inbounds [17 x [256 x i32]], [17 x [256 x i32]]* %7, i64 0, i64 2
  %40 = getelementptr inbounds [17 x [256 x i32]], [17 x [256 x i32]]* %7, i64 0, i64 9
  %41 = getelementptr inbounds [17 x [256 x i32]], [17 x [256 x i32]]* %7, i64 0, i64 8
  %42 = getelementptr inbounds [17 x [256 x i32]], [17 x [256 x i32]]* %7, i64 0, i64 3
  %43 = getelementptr inbounds [256 x i8], [256 x i8]* %3, i64 0, i64 1
  %44 = getelementptr inbounds [17 x [256 x i32]], [17 x [256 x i32]]* %7, i64 0, i64 4
  %45 = getelementptr inbounds [17 x [256 x i32]], [17 x [256 x i32]]* %7, i64 0, i64 5
  %46 = getelementptr inbounds [256 x i8], [256 x i8]* %3, i64 0, i64 2
  %47 = getelementptr inbounds [17 x [256 x i32]], [17 x [256 x i32]]* %7, i64 0, i64 10
  %48 = getelementptr inbounds [256 x i8], [256 x i8]* %3, i64 0, i64 1
  %49 = getelementptr inbounds [256 x i8], [256 x i8]* %3, i64 0, i64 2
  %50 = getelementptr inbounds [17 x [256 x i32]], [17 x [256 x i32]]* %7, i64 0, i64 6
  %51 = getelementptr inbounds [256 x i8], [256 x i8]* %3, i64 0, i64 2
  %52 = getelementptr inbounds [17 x [256 x i32]], [17 x [256 x i32]]* %7, i64 0, i64 7
  %53 = getelementptr inbounds [256 x i8], [256 x i8]* %4, i64 0, i64 0
  %54 = getelementptr inbounds [17 x [256 x i32]], [17 x [256 x i32]]* %7, i64 0, i64 13
  %55 = getelementptr inbounds [256 x i8], [256 x i8]* %2, i64 0, i64 1
  %56 = getelementptr inbounds [256 x i8], [256 x i8]* %3, i64 0, i64 4
  %57 = getelementptr inbounds [17 x [256 x i32]], [17 x [256 x i32]]* %7, i64 0, i64 12
  %58 = getelementptr inbounds [256 x i8], [256 x i8]* %4, i64 0, i64 254
  %59 = getelementptr inbounds [17 x [256 x i32]], [17 x [256 x i32]]* %7, i64 0, i64 14
  %60 = getelementptr inbounds [256 x i8], [256 x i8]* %2, i64 0, i64 1
  %61 = getelementptr inbounds [17 x [256 x i32]], [17 x [256 x i32]]* %7, i64 0, i64 11
  %62 = getelementptr inbounds [256 x i8], [256 x i8]* %4, i64 0, i64 255
  %63 = getelementptr inbounds [17 x [256 x i32]], [17 x [256 x i32]]* %7, i64 0, i64 15
  %64 = sext i32 %9 to i64
  %65 = getelementptr inbounds [256 x [2 x i32]], [256 x [2 x i32]]* @cm_pipe, i64 0, i64 %64
  %66 = getelementptr inbounds [2 x i32], [2 x i32]* %65, i64 0, i64 1
  %67 = getelementptr inbounds [17 x [256 x i32]], [17 x [256 x i32]]* %7, i32 0, i32 0
  %68 = bitcast [256 x i32]* %67 to i8*
  %scevgep11 = getelementptr [256 x i8], [256 x i8]* %2, i64 0, i64 -1
  %scevgep14 = getelementptr [256 x i8], [256 x i8]* %4, i64 0, i64 -1
  br label %69

; <label>:69:                                     ; preds = %631, %1
  %.04 = phi i32 [ 1, %1 ], [ %.37, %631 ]
  %.0 = phi i32 [ 0, %1 ], [ %.3, %631 ]
  call void @unroll_loop(i32 52)
  %70 = icmp ne i32 %.04, 0
  br i1 %70, label %72, label %71

; <label>:71:                                     ; preds = %69
  br label %72

; <label>:72:                                     ; preds = %71, %69
  %73 = load i32, i32* %16, align 8
  %74 = call i32 @safe_read(i32 %73, i8* %17, i64 4)
  %75 = sext i32 %74 to i64
  %76 = icmp ne i64 %75, 4
  br i1 %76, label %77, label %80

; <label>:77:                                     ; preds = %72
  %78 = getelementptr [12 x i8], [12 x i8]* @.str.27, i32 0, i32 0
  call void @perror(i8* %78)
  %79 = call i32 @kill(i32 0, i32 15) #9
  call void @_exit(i32 1) #12
  unreachable

; <label>:80:                                     ; preds = %72
  %81 = load i32, i32* @close_aircrack, align 4
  %82 = icmp ne i32 %81, 0
  br i1 %82, label %639, label %83

; <label>:83:                                     ; preds = %80
  %84 = load i64, i64* getelementptr inbounds (%struct.WEP_data, %struct.WEP_data* @wep, i64 0, i32 3), align 8
  %85 = mul nsw i64 %18, %84
  %86 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 5), align 4
  %87 = sext i32 %86 to i64
  %88 = sdiv i64 %85, %87
  %89 = mul nsw i64 5, %88
  %90 = load i64, i64* getelementptr inbounds (%struct.WEP_data, %struct.WEP_data* @wep, i64 0, i32 3), align 8
  %91 = mul nsw i64 %20, %90
  %92 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 5), align 4
  %93 = sext i32 %92 to i64
  %94 = sdiv i64 %91, %93
  %95 = mul nsw i64 5, %94
  %96 = load i32, i32* %6, align 4
  %97 = add nsw i32 3, %96
  %98 = trunc i32 %97 to i8
  %99 = load i32, i32* %6, align 4
  %100 = sext i32 %99 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %22, i8* align 8 getelementptr inbounds (%struct.WEP_data, %struct.WEP_data* @wep, i64 0, i32 0, i64 0), i64 %100, i1 false), !track !167
  call void @llvm.memset.p0i8.i64(i8* align 16 %24, i8 0, i64 17408, i1 false)
  %101 = zext i8 %98 to i64
  %102 = icmp slt i64 %89, %95
  br i1 %102, label %.lr.ph31, label %.loopexit

.lr.ph31:                                         ; preds = %83
  %103 = zext i8 %98 to i64
  %104 = zext i8 %98 to i32
  %105 = icmp slt i32 0, %104
  %106 = zext i8 %98 to i64
  %107 = getelementptr inbounds [256 x i8], [256 x i8]* %3, i64 0, i64 %106
  %108 = zext i8 %98 to i32
  %109 = sub nsw i32 %108, 1
  %110 = sext i32 %109 to i64
  %111 = getelementptr inbounds [256 x i8], [256 x i8]* %2, i64 0, i64 %110
  %112 = zext i8 %98 to i32
  %113 = zext i8 %98 to i32
  %114 = zext i8 %98 to i32
  %115 = sub nsw i32 1, %114
  %116 = zext i8 %98 to i64
  %117 = getelementptr inbounds [256 x i8], [256 x i8]* %3, i64 0, i64 %116
  %118 = zext i8 %98 to i64
  %119 = getelementptr inbounds [256 x i8], [256 x i8]* %3, i64 0, i64 %118
  %120 = zext i8 %98 to i32
  %121 = zext i8 %98 to i32
  %122 = zext i8 %98 to i32
  %123 = zext i8 %98 to i32
  %124 = zext i8 %98 to i32
  %125 = zext i8 %98 to i32
  %126 = sub nsw i32 1, %125
  %127 = zext i8 %98 to i32
  %128 = zext i8 %98 to i32
  %129 = zext i8 %98 to i32
  %130 = sub nsw i32 0, %129
  %131 = and i32 %130, 255
  %132 = zext i8 %98 to i32
  %133 = zext i8 %98 to i32
  %134 = zext i8 %98 to i32
  %135 = zext i8 %98 to i32
  %136 = icmp eq i32 %135, 4
  %137 = zext i8 %98 to i32
  %138 = zext i8 %98 to i32
  %139 = icmp sgt i32 %138, 4
  %140 = zext i8 %98 to i32
  br label %141

; <label>:141:                                    ; preds = %.lr.ph31, %626
  %.127 = phi i32 [ %.0, %.lr.ph31 ], [ %.2, %626 ]
  %.0126 = phi i64 [ %89, %.lr.ph31 ], [ %627, %626 ]
  %.0225 = phi i32 [ 1, %.lr.ph31 ], [ %.13, %626 ]
  %.1524 = phi i32 [ %.04, %.lr.ph31 ], [ %spec.select, %626 ]
  call void @unroll_loop(i32 53)
  %142 = icmp eq i32 %.1524, 0
  %143 = icmp slt i32 0, %.127
  %or.cond24 = and i1 %142, %143
  br i1 %or.cond24, label %.lr.ph, label %._crit_edge

.lr.ph:                                           ; preds = %141
  %144 = zext i32 %.127 to i64
  br label %145

; <label>:145:                                    ; preds = %.lr.ph, %145
  %indvars.iv = phi i64 [ 0, %.lr.ph ], [ %indvars.iv.next, %145 ]
  call void @unroll_loop(i32 54)
  %scevgep = getelementptr [256 x i8], [256 x i8]* %4, i64 0, i64 %indvars.iv
  %tmp1 = trunc i64 %indvars.iv to i8
  store i8 %tmp1, i8* %scevgep, align 1
  %scevgep2 = getelementptr [256 x i8], [256 x i8]* %3, i64 0, i64 %indvars.iv
  %tmp = trunc i64 %indvars.iv to i8
  store i8 %tmp, i8* %scevgep2, align 1
  %scevgep3 = getelementptr [256 x i8], [256 x i8]* %2, i64 0, i64 %indvars.iv
  %146 = load i8, i8* %scevgep3, align 1
  %scevgep4 = getelementptr [256 x i8], [256 x i8]* %2, i64 0, i64 %indvars.iv
  %147 = load i8, i8* %scevgep4, align 1
  %148 = zext i8 %147 to i64
  %149 = getelementptr inbounds [256 x i8], [256 x i8]* %4, i64 0, i64 %148
  store i8 %146, i8* %149, align 1
  %scevgep5 = getelementptr [256 x i8], [256 x i8]* %2, i64 0, i64 %indvars.iv
  %150 = load i8, i8* %scevgep5, align 1
  %151 = zext i8 %150 to i64
  %152 = getelementptr inbounds [256 x i8], [256 x i8]* %3, i64 0, i64 %151
  store i8 %146, i8* %152, align 1
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond1 = icmp ne i64 %144, %indvars.iv.next
  br i1 %exitcond1, label %145, label %._crit_edge.loopexit

._crit_edge.loopexit:                             ; preds = %145
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %141
  %153 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* @mx_ivb) #9
  %154 = load i8*, i8** getelementptr inbounds (%struct.WEP_data, %struct.WEP_data* @wep, i64 0, i32 1), align 8
  %155 = getelementptr inbounds i8, i8* %154, i64 %.0126
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %25, i8* align 1 %155, i64 3, i1 false), !track !168
  br i1 %105, label %.lr.ph16.preheader, label %._crit_edge17

.lr.ph16.preheader:                               ; preds = %._crit_edge
  br label %.lr.ph16

.lr.ph16:                                         ; preds = %.lr.ph16.preheader, %.lr.ph16
  %indvars.iv18 = phi i64 [ %indvars.iv.next19, %.lr.ph16 ], [ 0, %.lr.ph16.preheader ]
  %.0814 = phi i32 [ %162, %.lr.ph16 ], [ 0, %.lr.ph16.preheader ]
  call void @unroll_loop(i32 55)
  %scevgep6 = getelementptr [256 x i8], [256 x i8]* %3, i64 0, i64 %indvars.iv18
  %156 = load i8, i8* %scevgep6, align 1
  %157 = zext i8 %156 to i32
  %158 = add nsw i32 %.0814, %157
  %scevgep9 = getelementptr [64 x i8], [64 x i8]* %5, i64 0, i64 %indvars.iv18
  %159 = load i8, i8* %scevgep9, align 1
  %160 = zext i8 %159 to i32
  %161 = add nsw i32 %158, %160
  %162 = and i32 %161, 255
  %163 = trunc i32 %162 to i8
  %scevgep10 = getelementptr [256 x i8], [256 x i8]* %2, i64 0, i64 %indvars.iv18
  store i8 %163, i8* %scevgep10, align 1
  %scevgep7 = getelementptr [256 x i8], [256 x i8]* %3, i64 0, i64 %indvars.iv18
  %164 = load i8, i8* %scevgep7, align 1
  %165 = sext i32 %162 to i64
  %166 = getelementptr inbounds [256 x i8], [256 x i8]* %3, i64 0, i64 %165
  %167 = load i8, i8* %166, align 1
  %scevgep8 = getelementptr [256 x i8], [256 x i8]* %3, i64 0, i64 %indvars.iv18
  store i8 %167, i8* %scevgep8, align 1
  %168 = sext i32 %162 to i64
  %169 = getelementptr inbounds [256 x i8], [256 x i8]* %3, i64 0, i64 %168
  store i8 %164, i8* %169, align 1
  %indvars.iv.next19 = add nuw nsw i64 %indvars.iv18, 1
  %exitcond = icmp ne i64 %103, %indvars.iv.next19
  br i1 %exitcond, label %.lr.ph16, label %._crit_edge17.loopexit

._crit_edge17.loopexit:                           ; preds = %.lr.ph16
  br label %._crit_edge17

._crit_edge17:                                    ; preds = %._crit_edge17.loopexit, %._crit_edge
  br label %170

; <label>:170:                                    ; preds = %170, %._crit_edge17
  %indvars.iv22 = phi i64 [ %indvars.iv.next23, %170 ], [ %101, %._crit_edge17 ]
  call void @unroll_loop(i32 56)
  %indvars.iv.next23 = add nsw i64 %indvars.iv22, -1
  %scevgep16 = getelementptr i8, i8* %scevgep14, i64 %indvars.iv22
  %171 = load i8, i8* %scevgep16, align 1
  %scevgep13 = getelementptr i8, i8* %scevgep11, i64 %indvars.iv22
  %172 = load i8, i8* %scevgep13, align 1
  %173 = zext i8 %172 to i64
  %174 = getelementptr inbounds [256 x i8], [256 x i8]* %4, i64 0, i64 %173
  %175 = load i8, i8* %174, align 1
  %scevgep15 = getelementptr i8, i8* %scevgep14, i64 %indvars.iv22
  store i8 %175, i8* %scevgep15, align 1
  %scevgep12 = getelementptr i8, i8* %scevgep11, i64 %indvars.iv22
  %176 = load i8, i8* %scevgep12, align 1
  %177 = zext i8 %176 to i64
  %178 = getelementptr inbounds [256 x i8], [256 x i8]* %4, i64 0, i64 %177
  store i8 %171, i8* %178, align 1
  %179 = icmp ne i64 %indvars.iv.next23, 0
  br i1 %179, label %170, label %180

; <label>:180:                                    ; preds = %170
  %181 = load i8*, i8** getelementptr inbounds (%struct.WEP_data, %struct.WEP_data* @wep, i64 0, i32 1), align 8
  %182 = add nsw i64 %.0126, 3
  %183 = getelementptr inbounds i8, i8* %181, i64 %182
  %184 = load i8, i8* %183, align 1
  %185 = zext i8 %184 to i32
  %186 = xor i32 %185, 170
  %187 = trunc i32 %186 to i8
  %188 = zext i8 %187 to i64
  %189 = getelementptr inbounds [256 x i8], [256 x i8]* %4, i64 0, i64 %188
  %190 = load i8, i8* %189, align 1
  %191 = load i8, i8* %26, align 1
  %192 = load i8*, i8** getelementptr inbounds (%struct.WEP_data, %struct.WEP_data* @wep, i64 0, i32 1), align 8
  %193 = add nsw i64 %.0126, 4
  %194 = getelementptr inbounds i8, i8* %192, i64 %193
  %195 = load i8, i8* %194, align 1
  %196 = zext i8 %195 to i32
  %197 = xor i32 %196, 170
  %198 = trunc i32 %197 to i8
  %199 = zext i8 %198 to i64
  %200 = getelementptr inbounds [256 x i8], [256 x i8]* %4, i64 0, i64 %199
  %201 = load i8, i8* %200, align 1
  %202 = load i8, i8* %27, align 2
  %203 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* @mx_ivb) #9
  %204 = icmp ne i32 %.1524, 0
  %spec.select = select i1 %204, i32 0, i32 %.1524
  %205 = icmp ne i32 %.0225, 0
  %206 = load i32, i32* %6, align 4
  %207 = add nsw i32 3, %206
  %.13 = select i1 %205, i32 0, i32 %.0225
  %.2 = select i1 %205, i32 %207, i32 %.127
  %208 = load i8, i8* %107, align 1
  %209 = zext i8 %208 to i32
  %210 = load i8, i8* %111, align 1
  %211 = zext i8 %210 to i32
  %212 = add nsw i32 %209, %211
  %213 = trunc i32 %212 to i8
  %214 = zext i8 %202 to i32
  %215 = icmp eq i32 %214, 0
  br i1 %215, label %216, label %247

; <label>:216:                                    ; preds = %180
  %217 = zext i8 %191 to i32
  %218 = icmp eq i32 %217, 2
  %219 = zext i8 %187 to i32
  %220 = icmp eq i32 %219, 2
  %or.cond = and i1 %218, %220
  br i1 %or.cond, label %221, label %236

; <label>:221:                                    ; preds = %216
  %222 = zext i8 %213 to i32
  %223 = sub nsw i32 1, %222
  %224 = trunc i32 %223 to i8
  %225 = zext i8 %224 to i64
  %226 = getelementptr inbounds [256 x i32], [256 x i32]* %28, i64 0, i64 %225
  %227 = load i32, i32* %226, align 4
  %228 = add nsw i32 %227, 1
  store i32 %228, i32* %226, align 4
  %229 = zext i8 %213 to i32
  %230 = sub nsw i32 2, %229
  %231 = trunc i32 %230 to i8
  %232 = zext i8 %231 to i64
  %233 = getelementptr inbounds [256 x i32], [256 x i32]* %29, i64 0, i64 %232
  %234 = load i32, i32* %233, align 4
  %235 = add nsw i32 %234, 1
  store i32 %235, i32* %233, align 4
  br label %260

; <label>:236:                                    ; preds = %216
  %237 = zext i8 %198 to i32
  %238 = icmp eq i32 %237, 0
  br i1 %238, label %239, label %260

; <label>:239:                                    ; preds = %236
  %240 = zext i8 %213 to i32
  %241 = sub nsw i32 2, %240
  %242 = trunc i32 %241 to i8
  %243 = zext i8 %242 to i64
  %244 = getelementptr inbounds [256 x i32], [256 x i32]* %31, i64 0, i64 %243
  %245 = load i32, i32* %244, align 4
  %246 = add nsw i32 %245, 1
  store i32 %246, i32* %244, align 4
  br label %260

; <label>:247:                                    ; preds = %180
  %248 = zext i8 %198 to i32
  %249 = icmp eq i32 %248, 0
  %250 = zext i8 %208 to i32
  %251 = icmp eq i32 %250, 0
  %or.cond3 = and i1 %249, %251
  br i1 %or.cond3, label %252, label %260

; <label>:252:                                    ; preds = %247
  %253 = zext i8 %213 to i32
  %254 = sub nsw i32 2, %253
  %255 = trunc i32 %254 to i8
  %256 = zext i8 %255 to i64
  %257 = getelementptr inbounds [256 x i32], [256 x i32]* %30, i64 0, i64 %256
  %258 = load i32, i32* %257, align 4
  %259 = add nsw i32 %258, 1
  store i32 %259, i32* %257, align 4
  br label %260

; <label>:260:                                    ; preds = %247, %252, %221, %239, %236
  %261 = zext i8 %191 to i32
  %262 = icmp eq i32 %261, 1
  br i1 %262, label %263, label %282

; <label>:263:                                    ; preds = %260
  %264 = zext i8 %187 to i32
  %265 = zext i8 %202 to i32
  %266 = icmp eq i32 %264, %265
  br i1 %266, label %267, label %282

; <label>:267:                                    ; preds = %263
  %268 = zext i8 %213 to i32
  %269 = sub nsw i32 1, %268
  %270 = trunc i32 %269 to i8
  %271 = zext i8 %270 to i64
  %272 = getelementptr inbounds [256 x i32], [256 x i32]* %32, i64 0, i64 %271
  %273 = load i32, i32* %272, align 4
  %274 = add nsw i32 %273, 1
  store i32 %274, i32* %272, align 4
  %275 = zext i8 %213 to i32
  %276 = sub nsw i32 2, %275
  %277 = trunc i32 %276 to i8
  %278 = zext i8 %277 to i64
  %279 = getelementptr inbounds [256 x i32], [256 x i32]* %33, i64 0, i64 %278
  %280 = load i32, i32* %279, align 4
  %281 = add nsw i32 %280, 1
  store i32 %281, i32* %279, align 4
  br label %282

; <label>:282:                                    ; preds = %267, %263, %260
  %283 = zext i8 %191 to i32
  %284 = icmp eq i32 %283, 0
  br i1 %284, label %285, label %306

; <label>:285:                                    ; preds = %282
  %286 = load i8, i8* %34, align 16
  %287 = zext i8 %286 to i32
  %288 = icmp eq i32 %287, 1
  %289 = zext i8 %187 to i32
  %290 = icmp eq i32 %289, 1
  %or.cond5 = and i1 %288, %290
  br i1 %or.cond5, label %291, label %306

; <label>:291:                                    ; preds = %285
  %292 = zext i8 %213 to i32
  %293 = sub nsw i32 0, %292
  %294 = trunc i32 %293 to i8
  %295 = zext i8 %294 to i64
  %296 = getelementptr inbounds [256 x i32], [256 x i32]* %35, i64 0, i64 %295
  %297 = load i32, i32* %296, align 4
  %298 = add nsw i32 %297, 1
  store i32 %298, i32* %296, align 4
  %299 = zext i8 %213 to i32
  %300 = sub nsw i32 1, %299
  %301 = trunc i32 %300 to i8
  %302 = zext i8 %301 to i64
  %303 = getelementptr inbounds [256 x i32], [256 x i32]* %36, i64 0, i64 %302
  %304 = load i32, i32* %303, align 4
  %305 = add nsw i32 %304, 1
  store i32 %305, i32* %303, align 4
  br label %306

; <label>:306:                                    ; preds = %291, %285, %282
  %307 = zext i8 %191 to i32
  %308 = icmp eq i32 %307, %112
  br i1 %308, label %309, label %356

; <label>:309:                                    ; preds = %306
  %310 = zext i8 %187 to i32
  %311 = icmp eq i32 %310, %113
  br i1 %311, label %312, label %322

; <label>:312:                                    ; preds = %309
  %313 = load i8, i8* %37, align 16
  %314 = zext i8 %313 to i32
  %315 = zext i8 %213 to i32
  %316 = sub nsw i32 %314, %315
  %317 = trunc i32 %316 to i8
  %318 = zext i8 %317 to i64
  %319 = getelementptr inbounds [256 x i32], [256 x i32]* %38, i64 0, i64 %318
  %320 = load i32, i32* %319, align 4
  %321 = add nsw i32 %320, 1
  store i32 %321, i32* %319, align 4
  br label %356

; <label>:322:                                    ; preds = %309
  %323 = zext i8 %187 to i32
  %324 = sub nsw i32 %115, %323
  %325 = and i32 %324, 255
  %326 = icmp eq i32 %325, 0
  %327 = zext i8 %190 to i32
  br i1 %326, label %328, label %336

; <label>:328:                                    ; preds = %322
  %329 = zext i8 %213 to i32
  %330 = sub nsw i32 %327, %329
  %331 = trunc i32 %330 to i8
  %332 = zext i8 %331 to i64
  %333 = getelementptr inbounds [256 x i32], [256 x i32]* %39, i64 0, i64 %332
  %334 = load i32, i32* %333, align 4
  %335 = add nsw i32 %334, 1
  store i32 %335, i32* %333, align 4
  br label %356

; <label>:336:                                    ; preds = %322
  %337 = icmp slt i32 %327, %121
  br i1 %337, label %338, label %356

; <label>:338:                                    ; preds = %336
  %339 = zext i8 %190 to i32
  %340 = sub nsw i32 %339, %123
  %341 = and i32 %340, 255
  %342 = sext i32 %341 to i64
  %343 = getelementptr inbounds [256 x i8], [256 x i8]* %4, i64 0, i64 %342
  %344 = load i8, i8* %343, align 1
  %345 = zext i8 %344 to i32
  %346 = icmp ne i32 %345, 1
  br i1 %346, label %347, label %356

; <label>:347:                                    ; preds = %338
  %348 = zext i8 %344 to i32
  %349 = zext i8 %213 to i32
  %350 = sub nsw i32 %348, %349
  %351 = trunc i32 %350 to i8
  %352 = zext i8 %351 to i64
  %353 = getelementptr inbounds [256 x i32], [256 x i32]* %41, i64 0, i64 %352
  %354 = load i32, i32* %353, align 4
  %355 = add nsw i32 %354, 1
  store i32 %355, i32* %353, align 4
  br label %356

; <label>:356:                                    ; preds = %312, %336, %347, %338, %328, %306
  %357 = zext i8 %190 to i32
  %358 = icmp eq i32 %357, 2
  br i1 %358, label %359, label %371

; <label>:359:                                    ; preds = %356
  %360 = load i8, i8* %117, align 1
  %361 = zext i8 %360 to i32
  %362 = icmp eq i32 %361, 1
  br i1 %362, label %363, label %371

; <label>:363:                                    ; preds = %359
  %364 = zext i8 %213 to i32
  %365 = sub nsw i32 1, %364
  %366 = trunc i32 %365 to i8
  %367 = zext i8 %366 to i64
  %368 = getelementptr inbounds [256 x i32], [256 x i32]* %40, i64 0, i64 %367
  %369 = load i32, i32* %368, align 4
  %370 = add nsw i32 %369, 1
  store i32 %370, i32* %368, align 4
  br label %371

; <label>:371:                                    ; preds = %363, %359, %356
  %372 = load i8, i8* %119, align 1
  %373 = zext i8 %372 to i32
  %374 = icmp eq i32 %373, %120
  br i1 %374, label %375, label %424

; <label>:375:                                    ; preds = %371
  %376 = zext i8 %191 to i32
  %377 = icmp eq i32 %376, 0
  br i1 %377, label %378, label %389

; <label>:378:                                    ; preds = %375
  %379 = zext i8 %187 to i32
  %380 = icmp eq i32 %379, %124
  br i1 %380, label %381, label %389

; <label>:381:                                    ; preds = %378
  %382 = zext i8 %213 to i32
  %383 = sub nsw i32 1, %382
  %384 = trunc i32 %383 to i8
  %385 = zext i8 %384 to i64
  %386 = getelementptr inbounds [256 x i32], [256 x i32]* %42, i64 0, i64 %385
  %387 = load i32, i32* %386, align 4
  %388 = add nsw i32 %387, 1
  store i32 %388, i32* %386, align 4
  br label %424

; <label>:389:                                    ; preds = %378, %375
  %390 = zext i8 %191 to i32
  %391 = sub nsw i32 %126, %390
  %392 = and i32 %391, 255
  %393 = icmp eq i32 %392, 0
  br i1 %393, label %394, label %406

; <label>:394:                                    ; preds = %389
  %395 = zext i8 %187 to i32
  %396 = zext i8 %191 to i32
  %397 = icmp eq i32 %395, %396
  br i1 %397, label %398, label %406

; <label>:398:                                    ; preds = %394
  %399 = zext i8 %213 to i32
  %400 = sub nsw i32 1, %399
  %401 = trunc i32 %400 to i8
  %402 = zext i8 %401 to i64
  %403 = getelementptr inbounds [256 x i32], [256 x i32]* %44, i64 0, i64 %402
  %404 = load i32, i32* %403, align 4
  %405 = add nsw i32 %404, 1
  store i32 %405, i32* %403, align 4
  br label %424

; <label>:406:                                    ; preds = %394, %389
  %407 = zext i8 %191 to i32
  %408 = icmp sge i32 %407, %131
  br i1 %408, label %409, label %424

; <label>:409:                                    ; preds = %406
  %410 = zext i8 %191 to i32
  %411 = add nsw i32 %133, %410
  %412 = zext i8 %190 to i32
  %413 = sub nsw i32 %411, %412
  %414 = and i32 %413, 255
  %415 = icmp eq i32 %414, 0
  br i1 %415, label %416, label %424

; <label>:416:                                    ; preds = %409
  %417 = zext i8 %213 to i32
  %418 = sub nsw i32 1, %417
  %419 = trunc i32 %418 to i8
  %420 = zext i8 %419 to i64
  %421 = getelementptr inbounds [256 x i32], [256 x i32]* %47, i64 0, i64 %420
  %422 = load i32, i32* %421, align 4
  %423 = add nsw i32 %422, 1
  store i32 %423, i32* %421, align 4
  br label %424

; <label>:424:                                    ; preds = %381, %406, %409, %416, %398, %371
  %425 = zext i8 %191 to i32
  %426 = icmp slt i32 %425, %122
  br i1 %426, label %427, label %455

; <label>:427:                                    ; preds = %424
  %428 = zext i8 %191 to i32
  %429 = zext i8 %191 to i64
  %430 = getelementptr inbounds [256 x i8], [256 x i8]* %3, i64 0, i64 %429
  %431 = load i8, i8* %430, align 1
  %432 = zext i8 %431 to i32
  %433 = add nsw i32 %428, %432
  %434 = sub nsw i32 %433, %127
  %435 = and i32 %434, 255
  %436 = icmp eq i32 %435, 0
  %437 = zext i8 %190 to i32
  %438 = icmp ne i32 %437, 1
  %or.cond7 = and i1 %436, %438
  br i1 %or.cond7, label %439, label %455

; <label>:439:                                    ; preds = %427
  %440 = zext i8 %190 to i32
  %441 = zext i8 %191 to i64
  %442 = getelementptr inbounds [256 x i8], [256 x i8]* %3, i64 0, i64 %441
  %443 = load i8, i8* %442, align 1
  %444 = zext i8 %443 to i32
  %445 = icmp ne i32 %440, %444
  br i1 %445, label %446, label %455

; <label>:446:                                    ; preds = %439
  %447 = zext i8 %190 to i32
  %448 = zext i8 %213 to i32
  %449 = sub nsw i32 %447, %448
  %450 = trunc i32 %449 to i8
  %451 = zext i8 %450 to i64
  %452 = getelementptr inbounds [256 x i32], [256 x i32]* %45, i64 0, i64 %451
  %453 = load i32, i32* %452, align 4
  %454 = add nsw i32 %453, 1
  store i32 %454, i32* %452, align 4
  br label %455

; <label>:455:                                    ; preds = %446, %439, %427, %424
  %456 = zext i8 %191 to i32
  %457 = icmp sgt i32 %456, %128
  br i1 %457, label %458, label %510

; <label>:458:                                    ; preds = %455
  %459 = zext i8 %202 to i32
  %460 = zext i8 %191 to i32
  %461 = add nsw i32 %459, %460
  %462 = sub nsw i32 %461, %132
  %463 = and i32 %462, 255
  %464 = icmp eq i32 %463, 0
  br i1 %464, label %465, label %510

; <label>:465:                                    ; preds = %458
  %466 = zext i8 %198 to i32
  %467 = zext i8 %191 to i32
  %468 = icmp eq i32 %466, %467
  br i1 %468, label %469, label %490

; <label>:469:                                    ; preds = %465
  %470 = zext i8 %191 to i32
  %471 = zext i8 %202 to i32
  %472 = sub nsw i32 %470, %471
  %473 = and i32 %472, 255
  %474 = sext i32 %473 to i64
  %475 = getelementptr inbounds [256 x i8], [256 x i8]* %4, i64 0, i64 %474
  %476 = load i8, i8* %475, align 1
  %477 = zext i8 %476 to i32
  %478 = icmp ne i32 %477, 1
  %479 = zext i8 %476 to i32
  %480 = icmp ne i32 %479, 2
  %or.cond9 = and i1 %478, %480
  br i1 %or.cond9, label %481, label %510

; <label>:481:                                    ; preds = %469
  %482 = zext i8 %476 to i32
  %483 = zext i8 %213 to i32
  %484 = sub nsw i32 %482, %483
  %485 = trunc i32 %484 to i8
  %486 = zext i8 %485 to i64
  %487 = getelementptr inbounds [256 x i32], [256 x i32]* %50, i64 0, i64 %486
  %488 = load i32, i32* %487, align 4
  %489 = add nsw i32 %488, 1
  store i32 %489, i32* %487, align 4
  br label %510

; <label>:490:                                    ; preds = %465
  %491 = zext i8 %198 to i32
  %492 = zext i8 %202 to i32
  %493 = sub nsw i32 2, %492
  %494 = and i32 %493, 255
  %495 = icmp eq i32 %491, %494
  br i1 %495, label %496, label %510

; <label>:496:                                    ; preds = %490
  %497 = zext i8 %201 to i32
  %498 = icmp ne i32 %497, 1
  %499 = zext i8 %201 to i32
  %500 = icmp ne i32 %499, 2
  %or.cond11 = and i1 %498, %500
  br i1 %or.cond11, label %501, label %510

; <label>:501:                                    ; preds = %496
  %502 = zext i8 %201 to i32
  %503 = zext i8 %213 to i32
  %504 = sub nsw i32 %502, %503
  %505 = trunc i32 %504 to i8
  %506 = zext i8 %505 to i64
  %507 = getelementptr inbounds [256 x i32], [256 x i32]* %52, i64 0, i64 %506
  %508 = load i32, i32* %507, align 4
  %509 = add nsw i32 %508, 1
  store i32 %509, i32* %507, align 4
  br label %510

; <label>:510:                                    ; preds = %481, %469, %496, %501, %490, %458, %455
  %511 = load i8, i8* %43, align 1
  %512 = zext i8 %511 to i32
  %513 = icmp ne i32 %512, 2
  br i1 %513, label %514, label %555

; <label>:514:                                    ; preds = %510
  %515 = load i8, i8* %46, align 2
  %516 = zext i8 %515 to i32
  %517 = icmp ne i32 %516, 0
  br i1 %517, label %518, label %555

; <label>:518:                                    ; preds = %514
  %519 = load i8, i8* %48, align 1
  %520 = zext i8 %519 to i32
  %521 = load i8, i8* %49, align 2
  %522 = zext i8 %521 to i32
  %523 = add nsw i32 %520, %522
  %524 = trunc i32 %523 to i8
  %525 = zext i8 %524 to i32
  %526 = icmp slt i32 %525, %134
  br i1 %526, label %527, label %555

; <label>:527:                                    ; preds = %518
  %528 = zext i8 %524 to i64
  %529 = getelementptr inbounds [256 x i8], [256 x i8]* %3, i64 0, i64 %528
  %530 = load i8, i8* %529, align 1
  %531 = zext i8 %530 to i32
  %532 = load i8, i8* %51, align 2
  %533 = zext i8 %532 to i32
  %534 = add nsw i32 %531, %533
  %535 = trunc i32 %534 to i8
  %536 = zext i8 %535 to i32
  %537 = icmp eq i32 %536, %137
  %538 = zext i8 %201 to i32
  %539 = icmp ne i32 %538, 1
  %or.cond13 = and i1 %537, %539
  %540 = zext i8 %201 to i32
  %541 = icmp ne i32 %540, 2
  %or.cond15 = and i1 %or.cond13, %541
  br i1 %or.cond15, label %542, label %555

; <label>:542:                                    ; preds = %527
  %543 = zext i8 %201 to i32
  %544 = zext i8 %524 to i32
  %545 = icmp ne i32 %543, %544
  br i1 %545, label %546, label %555

; <label>:546:                                    ; preds = %542
  %547 = zext i8 %201 to i32
  %548 = zext i8 %213 to i32
  %549 = sub nsw i32 %547, %548
  %550 = trunc i32 %549 to i8
  %551 = zext i8 %550 to i64
  %552 = getelementptr inbounds [256 x i32], [256 x i32]* %57, i64 0, i64 %551
  %553 = load i32, i32* %552, align 4
  %554 = add nsw i32 %553, 1
  store i32 %554, i32* %552, align 4
  br label %555

; <label>:555:                                    ; preds = %518, %546, %542, %527, %514, %510
  %556 = zext i8 %191 to i32
  %557 = icmp eq i32 %556, 2
  br i1 %557, label %558, label %623

; <label>:558:                                    ; preds = %555
  br i1 %136, label %559, label %604

; <label>:559:                                    ; preds = %558
  %560 = zext i8 %198 to i32
  %561 = icmp eq i32 %560, 0
  br i1 %561, label %562, label %572

; <label>:562:                                    ; preds = %559
  %563 = load i8, i8* %53, align 16
  %564 = zext i8 %563 to i32
  %565 = zext i8 %213 to i32
  %566 = sub nsw i32 %564, %565
  %567 = trunc i32 %566 to i8
  %568 = zext i8 %567 to i64
  %569 = getelementptr inbounds [256 x i32], [256 x i32]* %54, i64 0, i64 %568
  %570 = load i32, i32* %569, align 4
  %571 = add nsw i32 %570, 1
  store i32 %571, i32* %569, align 4
  br label %623

; <label>:572:                                    ; preds = %559
  %573 = load i8, i8* %55, align 1
  %574 = zext i8 %573 to i32
  %575 = icmp eq i32 %574, 2
  %576 = zext i8 %201 to i32
  %577 = icmp eq i32 %576, 0
  %or.cond17 = and i1 %575, %577
  br i1 %or.cond17, label %578, label %588

; <label>:578:                                    ; preds = %572
  %579 = load i8, i8* %58, align 2
  %580 = zext i8 %579 to i32
  %581 = zext i8 %213 to i32
  %582 = sub nsw i32 %580, %581
  %583 = trunc i32 %582 to i8
  %584 = zext i8 %583 to i64
  %585 = getelementptr inbounds [256 x i32], [256 x i32]* %59, i64 0, i64 %584
  %586 = load i32, i32* %585, align 4
  %587 = add nsw i32 %586, 1
  store i32 %587, i32* %585, align 4
  br label %588

; <label>:588:                                    ; preds = %578, %572
  %589 = load i8, i8* %60, align 1
  %590 = zext i8 %589 to i32
  %591 = icmp eq i32 %590, 2
  %592 = zext i8 %201 to i32
  %593 = icmp eq i32 %592, 2
  %or.cond19 = and i1 %591, %593
  br i1 %or.cond19, label %594, label %623

; <label>:594:                                    ; preds = %588
  %595 = load i8, i8* %62, align 1
  %596 = zext i8 %595 to i32
  %597 = zext i8 %213 to i32
  %598 = sub nsw i32 %596, %597
  %599 = trunc i32 %598 to i8
  %600 = zext i8 %599 to i64
  %601 = getelementptr inbounds [256 x i32], [256 x i32]* %63, i64 0, i64 %600
  %602 = load i32, i32* %601, align 4
  %603 = add nsw i32 %602, 1
  store i32 %603, i32* %601, align 4
  br label %623

; <label>:604:                                    ; preds = %558
  br i1 %139, label %605, label %623

; <label>:605:                                    ; preds = %604
  %606 = load i8, i8* %56, align 4
  %607 = zext i8 %606 to i32
  %608 = add nsw i32 %607, 2
  %609 = icmp eq i32 %608, %140
  %610 = zext i8 %201 to i32
  %611 = icmp ne i32 %610, 1
  %or.cond21 = and i1 %609, %611
  %612 = zext i8 %201 to i32
  %613 = icmp ne i32 %612, 4
  %or.cond23 = and i1 %or.cond21, %613
  br i1 %or.cond23, label %614, label %623

; <label>:614:                                    ; preds = %605
  %615 = zext i8 %201 to i32
  %616 = zext i8 %213 to i32
  %617 = sub nsw i32 %615, %616
  %618 = trunc i32 %617 to i8
  %619 = zext i8 %618 to i64
  %620 = getelementptr inbounds [256 x i32], [256 x i32]* %61, i64 0, i64 %619
  %621 = load i32, i32* %620, align 4
  %622 = add nsw i32 %621, 1
  store i32 %622, i32* %620, align 4
  br label %623

; <label>:623:                                    ; preds = %588, %594, %562, %614, %605, %604, %555
  %624 = load i32, i32* @close_aircrack, align 4
  %625 = icmp ne i32 %624, 0
  br i1 %625, label %.loopexit.loopexit, label %626

; <label>:626:                                    ; preds = %623
  %627 = add nsw i64 %.0126, 5
  %628 = icmp slt i64 %627, %95
  br i1 %628, label %141, label %.loopexit.loopexit

.loopexit.loopexit:                               ; preds = %623, %626
  %.37.ph = phi i32 [ %spec.select, %623 ], [ %spec.select, %626 ]
  %.3.ph = phi i32 [ %.2, %623 ], [ %.2, %626 ]
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit.loopexit, %83
  %.37 = phi i32 [ %.04, %83 ], [ %.37.ph, %.loopexit.loopexit ]
  %.3 = phi i32 [ %.0, %83 ], [ %.3.ph, %.loopexit.loopexit ]
  %629 = load i32, i32* @close_aircrack, align 4
  %630 = icmp ne i32 %629, 0
  br i1 %630, label %639, label %631

; <label>:631:                                    ; preds = %.loopexit
  %632 = load i32, i32* %66, align 4
  %633 = call i32 @safe_write(i32 %632, i8* %68, i64 17408)
  %634 = sext i32 %633 to i64
  %635 = icmp ne i64 %634, 17408
  br i1 %635, label %636, label %69

; <label>:636:                                    ; preds = %631
  %637 = getelementptr [13 x i8], [13 x i8]* @.str.28, i32 0, i32 0
  call void @perror(i8* %637)
  %638 = call i32 @kill(i32 0, i32 15) #9
  call void @_exit(i32 1) #12
  unreachable

; <label>:639:                                    ; preds = %.loopexit, %80
  ret i32 0
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @show_wep_stats(i32, i32, [256 x %struct.PTW_tableentry]*, i32*, i32*, i32) #0 {
  %7 = alloca %struct.winsize, align 2
  %8 = call float @chrono(%struct.timeval* @t_stats, i32 0)
  %9 = fpext float %8 to double
  %10 = fcmp olt double %9, 1.510000e+00
  %11 = load i32, i32* @wepkey_crack_success, align 4
  %12 = icmp ne i32 %11, 0
  %or.cond = or i1 %10, %12
  %13 = icmp eq i32 %1, 0
  %or.cond2 = and i1 %or.cond, %13
  br i1 %or.cond2, label %257, label %14

; <label>:14:                                     ; preds = %6
  %15 = call i32 (i32, i64, ...) @ioctl(i32 0, i64 21523, %struct.winsize* %7) #9
  %16 = icmp slt i32 %15, 0
  br i1 %16, label %17, label %20

; <label>:17:                                     ; preds = %14
  %18 = getelementptr inbounds %struct.winsize, %struct.winsize* %7, i32 0, i32 0
  store i16 25, i16* %18, align 2
  %19 = getelementptr inbounds %struct.winsize, %struct.winsize* %7, i32 0, i32 1
  store i16 80, i16* %19, align 2
  br label %20

; <label>:20:                                     ; preds = %17, %14
  %21 = call float @chrono(%struct.timeval* @t_stats, i32 1)
  %22 = call float @chrono(%struct.timeval* @t_begin, i32 0)
  %23 = fdiv float %22, 3.600000e+03
  %24 = fptosi float %23 to i32
  %25 = mul nsw i32 %24, 3600
  %26 = sitofp i32 %25 to float
  %27 = fsub float %22, %26
  %28 = fdiv float %27, 6.000000e+01
  %29 = fptosi float %28 to i32
  %30 = mul nsw i32 %24, 3600
  %31 = sitofp i32 %30 to float
  %32 = fsub float %22, %31
  %33 = mul nsw i32 %29, 60
  %34 = sitofp i32 %33 to float
  %35 = fsub float %32, %34
  %36 = fptosi float %35 to i32
  %37 = load i32, i32* @show_wep_stats.is_cleared, align 4
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %51

; <label>:39:                                     ; preds = %20
  %40 = load i32, i32* @show_wep_stats.is_cleared, align 4
  %41 = add nsw i32 %40, 1
  store i32 %41, i32* @show_wep_stats.is_cleared, align 4
  %42 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 27
  %43 = load i32, i32* %42, align 4
  %44 = icmp ne i32 %43, 0
  br i1 %44, label %45, label %48

; <label>:45:                                     ; preds = %39
  %46 = getelementptr [6 x i8], [6 x i8]* @.str.29, i32 0, i32 0
  %47 = call i32 (i8*, ...) @printf(i8* %46)
  br label %48

; <label>:48:                                     ; preds = %45, %39
  %49 = getelementptr [5 x i8], [5 x i8]* @.str.30, i32 0, i32 0
  %50 = call i32 (i8*, ...) @printf(i8* %49)
  br label %51

; <label>:51:                                     ; preds = %48, %20
  %52 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 27
  %53 = load i32, i32* %52, align 4
  %54 = icmp ne i32 %53, 0
  br i1 %54, label %55, label %58

; <label>:55:                                     ; preds = %51
  %56 = getelementptr [8 x i8], [8 x i8]* @.str.31, i32 0, i32 0
  %57 = call i32 (i8*, ...) @printf(i8* %56)
  br label %58

; <label>:58:                                     ; preds = %55, %51
  %59 = getelementptr inbounds %struct.winsize, %struct.winsize* %7, i32 0, i32 1
  %60 = load i16, i16* %59, align 2
  %61 = zext i16 %60 to i32
  %62 = sub nsw i32 %61, 12
  %63 = sdiv i32 %62, 2
  %64 = load i8*, i8** @progname, align 8
  %65 = getelementptr [12 x i8], [12 x i8]* @.str.32, i32 0, i32 0
  %66 = call i32 (i8*, ...) @printf(i8* %65, i32 %63, i8* %64)
  %67 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 27
  %68 = load i32, i32* %67, align 4
  %69 = icmp ne i32 %68, 0
  br i1 %69, label %70, label %73

; <label>:70:                                     ; preds = %58
  %71 = getelementptr [8 x i8], [8 x i8]* @.str.33, i32 0, i32 0
  %72 = call i32 (i8*, ...) @printf(i8* %71)
  br label %73

; <label>:73:                                     ; preds = %70, %58
  %74 = icmp ne [256 x %struct.PTW_tableentry]* %2, null
  %75 = getelementptr inbounds %struct.winsize, %struct.winsize* %7, i32 0, i32 1
  %76 = load i16, i16* %75, align 2
  %77 = zext i16 %76 to i32
  %78 = sub nsw i32 %77, 44
  %79 = sdiv i32 %78, 2
  br i1 %74, label %80, label %87

; <label>:80:                                     ; preds = %73
  %81 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 37
  %82 = load %struct.AP_info*, %struct.AP_info** %81, align 8
  %83 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %82, i32 0, i32 7
  %84 = load i64, i64* %83, align 8
  %85 = getelementptr [56 x i8], [56 x i8]* @.str.34, i32 0, i32 0
  %86 = call i32 (i8*, ...) @printf(i8* %85, i32 %79, i32 %24, i32 %29, i32 %36, i32 %5, i64 %84)
  br label %93

; <label>:87:                                     ; preds = %73
  %88 = load i64, i64* @nb_tried, align 8
  %89 = getelementptr %struct.WEP_data, %struct.WEP_data* @wep, i32 0, i32 4
  %90 = load i64, i64* %89, align 8
  %91 = getelementptr [58 x i8], [58 x i8]* @.str.35, i32 0, i32 0
  %92 = call i32 (i8*, ...) @printf(i8* %91, i32 %79, i32 %24, i32 %29, i32 %36, i64 %88, i64 %90)
  br label %93

; <label>:93:                                     ; preds = %87, %80
  %94 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 27
  %95 = load i32, i32* %94, align 4
  %96 = icmp ne i32 %95, 0
  br i1 %96, label %97, label %100

; <label>:97:                                     ; preds = %93
  %98 = getelementptr [9 x i8], [9 x i8]* @.str.36, i32 0, i32 0
  %99 = call i32 (i8*, ...) @printf(i8* %98)
  br label %100

; <label>:100:                                    ; preds = %97, %93
  %101 = getelementptr [32 x i8], [32 x i8]* @.str.37, i32 0, i32 0
  %102 = call i32 (i8*, ...) @printf(i8* %101)
  %103 = icmp sle i32 0, %0
  br i1 %103, label %.lr.ph17.preheader, label %._crit_edge

.lr.ph17.preheader:                               ; preds = %100
  %104 = getelementptr inbounds %struct.winsize, %struct.winsize* %7, i32 0, i32 1
  %105 = icmp ne [256 x %struct.PTW_tableentry]* %2, null
  %106 = icmp ne [256 x %struct.PTW_tableentry]* %2, null
  %107 = icmp ne [256 x %struct.PTW_tableentry]* %2, null
  %scevgep9 = getelementptr [256 x %struct.PTW_tableentry], [256 x %struct.PTW_tableentry]* %2, i64 0, i64 0, i32 1
  br label %.lr.ph17

.lr.ph17:                                         ; preds = %.lr.ph17.preheader, %244
  %lsr.iv = phi i32 [ 0, %.lr.ph17.preheader ], [ %lsr.iv.next, %244 ]
  %108 = sext i32 %lsr.iv to i64
  %109 = shl i64 %108, 11
  %scevgep10 = getelementptr i8, i8* %scevgep9, i64 %109
  %110 = sext i32 %lsr.iv to i64
  %111 = shl i64 %110, 11
  %112 = add i64 %111, 612
  call void @unroll_loop(i32 57)
  %113 = load i16, i16* %104, align 2
  %114 = zext i16 %113 to i32
  %115 = sub nsw i32 %114, 20
  %116 = sdiv i32 %115, 11
  br i1 %105, label %130, label %117

; <label>:117:                                    ; preds = %.lr.ph17
  %118 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 27), align 4
  %119 = icmp ne i32 %118, 0
  %120 = sext i32 %lsr.iv to i64
  %121 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds (%struct.WEP_data, %struct.WEP_data* @wep, i64 0, i32 6), i64 0, i64 %120
  %122 = load i32, i32* %121, align 4
  %123 = sext i32 %lsr.iv to i64
  %124 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds (%struct.WEP_data, %struct.WEP_data* @wep, i64 0, i32 5), i64 0, i64 %123
  %125 = load i32, i32* %124, align 4
  br i1 %119, label %126, label %128

; <label>:126:                                    ; preds = %117
  %127 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.38, i64 0, i64 0), i32 %lsr.iv, i32 %122, i32 %125)
  br label %138

; <label>:128:                                    ; preds = %117
  %129 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.39, i64 0, i64 0), i32 %lsr.iv, i32 %122, i32 %125)
  br label %138

; <label>:130:                                    ; preds = %.lr.ph17
  %131 = sext i32 %lsr.iv to i64
  %132 = getelementptr inbounds i32, i32* %4, i64 %131
  %133 = load i32, i32* %132, align 4
  %134 = sext i32 %lsr.iv to i64
  %135 = getelementptr inbounds i32, i32* %3, i64 %134
  %136 = load i32, i32* %135, align 4
  %137 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.39, i64 0, i64 0), i32 %lsr.iv, i32 %133, i32 %136)
  br label %138

; <label>:138:                                    ; preds = %126, %128, %130
  %139 = sext i32 %lsr.iv to i64
  br i1 %106, label %140, label %167

; <label>:140:                                    ; preds = %138
  %141 = getelementptr inbounds i32, i32* %4, i64 %139
  %142 = load i32, i32* %141, align 4
  %143 = sext i32 %lsr.iv to i64
  %144 = getelementptr inbounds i32, i32* %4, i64 %143
  %145 = load i32, i32* %144, align 4
  %146 = add nsw i32 %116, %145
  %147 = icmp slt i32 %142, %146
  br i1 %147, label %.lr.ph5, label %.loopexit

.lr.ph5:                                          ; preds = %140
  %148 = sext i32 %142 to i64
  br label %149

; <label>:149:                                    ; preds = %.lr.ph5, %162
  %indvars.iv6 = phi i64 [ %148, %.lr.ph5 ], [ %indvars.iv.next7, %162 ]
  call void @unroll_loop(i32 58)
  %150 = icmp sge i64 %indvars.iv6, 256
  br i1 %150, label %.loopexit.loopexit, label %151

; <label>:151:                                    ; preds = %149
  %152 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 27), align 4
  %153 = icmp ne i32 %152, 0
  %154 = shl i64 %indvars.iv6, 3
  %scevgep11 = getelementptr i8, i8* %scevgep10, i64 %154
  %155 = load i8, i8* %scevgep11, align 4
  %156 = zext i8 %155 to i32
  %scevgep12 = getelementptr i8, i8* %scevgep10, i64 %154
  %scevgep1213 = bitcast i8* %scevgep12 to i32*
  %scevgep14 = getelementptr i32, i32* %scevgep1213, i64 -1
  %157 = load i32, i32* %scevgep14, align 4
  br i1 %153, label %158, label %160

; <label>:158:                                    ; preds = %151
  %159 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.40, i64 0, i64 0), i32 %156, i32 %157)
  br label %162

; <label>:160:                                    ; preds = %151
  %161 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.41, i64 0, i64 0), i32 %156, i32 %157)
  br label %162

; <label>:162:                                    ; preds = %158, %160
  %indvars.iv.next7 = add nsw i64 %indvars.iv6, 1
  %163 = load i32, i32* %144, align 4
  %164 = add nsw i32 %116, %163
  %165 = sext i32 %164 to i64
  %166 = icmp slt i64 %indvars.iv.next7, %165
  br i1 %166, label %149, label %.loopexit.loopexit

; <label>:167:                                    ; preds = %138
  %168 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds (%struct.WEP_data, %struct.WEP_data* @wep, i64 0, i32 6), i64 0, i64 %139
  %169 = load i32, i32* %168, align 4
  %170 = sext i32 %lsr.iv to i64
  %171 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds (%struct.WEP_data, %struct.WEP_data* @wep, i64 0, i32 6), i64 0, i64 %170
  %172 = load i32, i32* %171, align 4
  %173 = add nsw i32 %116, %172
  %174 = icmp slt i32 %169, %173
  br i1 %174, label %.lr.ph, label %.loopexit

.lr.ph:                                           ; preds = %167
  %175 = sext i32 %169 to i64
  br label %176

; <label>:176:                                    ; preds = %.lr.ph, %204
  %indvars.iv = phi i64 [ %175, %.lr.ph ], [ %indvars.iv.next, %204 ]
  call void @unroll_loop(i32 59)
  %177 = icmp sge i64 %indvars.iv, 256
  br i1 %177, label %.loopexit.loopexit1, label %178

; <label>:178:                                    ; preds = %176
  %179 = shl i64 %indvars.iv, 3
  %180 = add i64 %112, %179
  %181 = inttoptr i64 %180 to i32*
  %scevgep = getelementptr %struct.WEP_data, %struct.WEP_data* @wep, i64 0, i32 0, i64 %180
  %scevgep3 = bitcast i8* %scevgep to i32*
  %182 = load i32, i32* %scevgep3, align 4
  %183 = icmp eq i32 %182, 32767
  %184 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 27), align 4
  %185 = icmp ne i32 %184, 0
  %186 = shl i64 %indvars.iv, 3
  %187 = add i64 %112, %186
  %188 = inttoptr i64 %187 to i32*
  %scevgep4 = getelementptr %struct.WEP_data, %struct.WEP_data* @wep, i64 0, i32 0, i64 %187
  %scevgep45 = bitcast i8* %scevgep4 to i32*
  %scevgep6 = getelementptr i32, i32* %scevgep45, i64 -1
  %189 = load i32, i32* %scevgep6, align 8
  br i1 %183, label %190, label %195

; <label>:190:                                    ; preds = %178
  br i1 %185, label %191, label %193

; <label>:191:                                    ; preds = %190
  %192 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.42, i64 0, i64 0), i32 %189)
  br label %204

; <label>:193:                                    ; preds = %190
  %194 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.43, i64 0, i64 0), i32 %189)
  br label %204

; <label>:195:                                    ; preds = %178
  %196 = shl i64 %indvars.iv, 3
  %197 = add i64 %112, %196
  %198 = inttoptr i64 %197 to i32*
  %scevgep7 = getelementptr %struct.WEP_data, %struct.WEP_data* @wep, i64 0, i32 0, i64 %197
  %scevgep78 = bitcast i8* %scevgep7 to i32*
  %199 = load i32, i32* %scevgep78, align 4
  br i1 %185, label %200, label %202

; <label>:200:                                    ; preds = %195
  %201 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.40, i64 0, i64 0), i32 %189, i32 %199)
  br label %204

; <label>:202:                                    ; preds = %195
  %203 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.41, i64 0, i64 0), i32 %189, i32 %199)
  br label %204

; <label>:204:                                    ; preds = %193, %191, %202, %200
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  %205 = load i32, i32* %171, align 4
  %206 = add nsw i32 %116, %205
  %207 = sext i32 %206 to i64
  %208 = icmp slt i64 %indvars.iv.next, %207
  br i1 %208, label %176, label %.loopexit.loopexit1

.loopexit.loopexit:                               ; preds = %162, %149
  br label %.loopexit

.loopexit.loopexit1:                              ; preds = %204, %176
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit.loopexit1, %.loopexit.loopexit, %167, %140
  %.019 = phi i32 [ %lsr.iv, %140 ], [ %lsr.iv, %167 ], [ %lsr.iv, %.loopexit.loopexit ], [ %lsr.iv, %.loopexit.loopexit1 ]
  %209 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 26), align 8
  %210 = icmp eq i32 %209, 0
  %or.cond3 = or i1 %210, %107
  br i1 %or.cond3, label %244, label %211

; <label>:211:                                    ; preds = %.loopexit
  %212 = sext i32 %.019 to i64
  %213 = getelementptr inbounds [64 x [256 x %struct.vote]], [64 x [256 x %struct.vote]]* getelementptr inbounds (%struct.WEP_data, %struct.WEP_data* @wep, i64 0, i32 7), i64 0, i64 %212
  %214 = sext i32 %.019 to i64
  %215 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds (%struct.WEP_data, %struct.WEP_data* @wep, i64 0, i32 6), i64 0, i64 %214
  %216 = load i32, i32* %215, align 4
  %217 = sext i32 %216 to i64
  %218 = getelementptr inbounds [256 x %struct.vote], [256 x %struct.vote]* %213, i64 0, i64 %217
  %219 = getelementptr inbounds %struct.vote, %struct.vote* %218, i32 0, i32 0
  %220 = load i32, i32* %219, align 8
  %221 = icmp sge i32 %220, 33
  br i1 %221, label %222, label %244

; <label>:222:                                    ; preds = %211
  %223 = sext i32 %.019 to i64
  %224 = getelementptr inbounds [64 x [256 x %struct.vote]], [64 x [256 x %struct.vote]]* getelementptr inbounds (%struct.WEP_data, %struct.WEP_data* @wep, i64 0, i32 7), i64 0, i64 %223
  %225 = sext i32 %.019 to i64
  %226 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds (%struct.WEP_data, %struct.WEP_data* @wep, i64 0, i32 6), i64 0, i64 %225
  %227 = load i32, i32* %226, align 4
  %228 = sext i32 %227 to i64
  %229 = getelementptr inbounds [256 x %struct.vote], [256 x %struct.vote]* %224, i64 0, i64 %228
  %230 = getelementptr inbounds %struct.vote, %struct.vote* %229, i32 0, i32 0
  %231 = load i32, i32* %230, align 8
  %232 = icmp sle i32 %231, 126
  br i1 %232, label %233, label %244

; <label>:233:                                    ; preds = %222
  %234 = sext i32 %.019 to i64
  %235 = getelementptr inbounds [64 x [256 x %struct.vote]], [64 x [256 x %struct.vote]]* getelementptr inbounds (%struct.WEP_data, %struct.WEP_data* @wep, i64 0, i32 7), i64 0, i64 %234
  %236 = sext i32 %.019 to i64
  %237 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds (%struct.WEP_data, %struct.WEP_data* @wep, i64 0, i32 6), i64 0, i64 %236
  %238 = load i32, i32* %237, align 4
  %239 = sext i32 %238 to i64
  %240 = getelementptr inbounds [256 x %struct.vote], [256 x %struct.vote]* %235, i64 0, i64 %239
  %241 = getelementptr inbounds %struct.vote, %struct.vote* %240, i32 0, i32 0
  %242 = load i32, i32* %241, align 8
  %243 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.44, i64 0, i64 0), i32 %242)
  br label %244

; <label>:244:                                    ; preds = %211, %222, %233, %.loopexit
  %245 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0))
  %lsr.iv.next = add i32 %lsr.iv, 1
  %246 = icmp sle i32 %lsr.iv.next, %0
  br i1 %246, label %.lr.ph17, label %._crit_edge.loopexit

._crit_edge.loopexit:                             ; preds = %244
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %100
  %247 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 10
  %248 = load i32, i32* %247, align 4
  %249 = sub nsw i32 %248, 1
  %250 = icmp slt i32 %0, %249
  br i1 %250, label %251, label %254

; <label>:251:                                    ; preds = %._crit_edge
  %252 = getelementptr [4 x i8], [4 x i8]* @.str.45, i32 0, i32 0
  %253 = call i32 (i8*, ...) @printf(i8* %252)
  br label %254

; <label>:254:                                    ; preds = %251, %._crit_edge
  %255 = getelementptr [2 x i8], [2 x i8]* @.str.2, i32 0, i32 0
  %256 = call i32 (i8*, ...) @printf(i8* %255)
  br label %257

; <label>:257:                                    ; preds = %6, %254
  ret void
}

; Function Attrs: nounwind
declare dso_local i32 @ioctl(i32, i64, ...) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @check_wep_key(i8*, i32, i32) #0 {
  %4 = alloca [64 x i8], align 16, !track !169
  %5 = alloca [256 x i8], align 16, !track !170
  %6 = icmp sle i32 %2, 0
  %7 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 10
  %8 = load i32, i32* %7, align 4
  %.04 = select i1 %6, i32 %8, i32 %2
  %9 = load i64, i64* @nb_tried, align 8
  %10 = add nsw i64 %9, 1
  store i64 %10, i64* @nb_tried, align 8
  %11 = getelementptr inbounds [64 x i8], [64 x i8]* %4, i32 0, i32 0
  %12 = getelementptr inbounds i8, i8* %11, i64 3
  %13 = sext i32 %.04 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %12, i8* align 1 %0, i64 %13, i1 false), !track !171
  %14 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 22
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** %14, align 8
  %16 = icmp ne %struct._IO_FILE* %15, null
  %17 = getelementptr %struct.WEP_data, %struct.WEP_data* @wep, i32 0, i32 3
  %18 = load i64, i64* %17, align 8
  %19 = trunc i64 %18 to i32
  %.01 = select i1 %16, i32 %19, i32 32
  %20 = icmp slt i32 %.01, 4
  %spec.select = select i1 %20, i32 4, i32 %.01
  %21 = icmp sgt i32 %spec.select, 32
  %.2 = select i1 %21, i32 32, i32 %spec.select
  %22 = icmp slt i32 0, %.2
  br i1 %22, label %.lr.ph, label %._crit_edge

.lr.ph:                                           ; preds = %3
  %23 = zext i32 %.2 to i64
  %24 = getelementptr inbounds [64 x i8], [64 x i8]* %4, i32 0, i32 0
  %25 = getelementptr inbounds [256 x i8], [256 x i8]* %5, i32 0, i32 0
  %26 = add nsw i32 3, %.04
  %27 = getelementptr inbounds [256 x i8], [256 x i8]* %5, i64 0, i64 1
  %28 = getelementptr inbounds [256 x i8], [256 x i8]* %5, i64 0, i64 1
  %29 = getelementptr inbounds [256 x i8], [256 x i8]* %5, i64 0, i64 1
  %30 = getelementptr inbounds [256 x i8], [256 x i8]* %5, i64 0, i64 1
  %31 = getelementptr inbounds [256 x i8], [256 x i8]* %5, i64 0, i64 2
  %32 = getelementptr inbounds [256 x i8], [256 x i8]* %5, i64 0, i64 2
  %33 = getelementptr inbounds [256 x i8], [256 x i8]* %5, i64 0, i64 2
  %34 = getelementptr inbounds [256 x i8], [256 x i8]* %5, i64 0, i64 2
  br label %35

; <label>:35:                                     ; preds = %.lr.ph, %142
  %indvars.iv13 = phi i64 [ 0, %.lr.ph ], [ %indvars.iv.next14, %142 ]
  %.0212 = phi i32 [ 0, %.lr.ph ], [ %.13, %142 ]
  call void @unroll_loop(i32 12)
  %36 = mul nuw nsw i64 5, %indvars.iv13
  %37 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* @mx_ivb) #9
  %38 = load i8*, i8** getelementptr inbounds (%struct.WEP_data, %struct.WEP_data* @wep, i64 0, i32 1), align 8
  %39 = getelementptr inbounds i8, i8* %38, i64 %36
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %24, i8* align 1 %39, i64 3, i1 false), !track !172
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %25, i8* align 16 getelementptr inbounds ([256 x i8], [256 x i8]* @R, i64 0, i64 0), i64 256, i1 false), !track !173
  br label %40

; <label>:40:                                     ; preds = %35, %40
  %indvars.iv = phi i64 [ 0, %35 ], [ %indvars.iv.next, %40 ]
  %.0610 = phi i32 [ 0, %35 ], [ %50, %40 ]
  call void @unroll_loop(i32 13)
  %scevgep = getelementptr [256 x i8], [256 x i8]* %5, i64 0, i64 %indvars.iv
  %41 = load i8, i8* %scevgep, align 1
  %42 = zext i8 %41 to i32
  %43 = add nsw i32 %.0610, %42
  %tmp = trunc i64 %indvars.iv to i32
  %44 = srem i32 %tmp, %26
  %45 = sext i32 %44 to i64
  %46 = getelementptr inbounds [64 x i8], [64 x i8]* %4, i64 0, i64 %45
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i32
  %49 = add nsw i32 %43, %48
  %50 = and i32 %49, 255
  %scevgep1 = getelementptr [256 x i8], [256 x i8]* %5, i64 0, i64 %indvars.iv
  %51 = load i8, i8* %scevgep1, align 1
  %52 = sext i32 %50 to i64
  %53 = getelementptr inbounds [256 x i8], [256 x i8]* %5, i64 0, i64 %52
  %54 = load i8, i8* %53, align 1
  %scevgep2 = getelementptr [256 x i8], [256 x i8]* %5, i64 0, i64 %indvars.iv
  store i8 %54, i8* %scevgep2, align 1
  %55 = sext i32 %50 to i64
  %56 = getelementptr inbounds [256 x i8], [256 x i8]* %5, i64 0, i64 %55
  store i8 %51, i8* %56, align 1
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp ne i64 %indvars.iv.next, 256
  br i1 %exitcond, label %40, label %57

; <label>:57:                                     ; preds = %40
  %58 = load i8, i8* %27, align 1
  %59 = zext i8 %58 to i32
  %60 = add nsw i32 0, %59
  %61 = and i32 %60, 255
  %62 = load i8, i8* %28, align 1
  %63 = sext i32 %61 to i64
  %64 = getelementptr inbounds [256 x i8], [256 x i8]* %5, i64 0, i64 %63
  %65 = load i8, i8* %64, align 1
  store i8 %65, i8* %29, align 1
  %66 = sext i32 %61 to i64
  %67 = getelementptr inbounds [256 x i8], [256 x i8]* %5, i64 0, i64 %66
  store i8 %62, i8* %67, align 1
  %68 = load i8*, i8** getelementptr inbounds (%struct.WEP_data, %struct.WEP_data* @wep, i64 0, i32 1), align 8
  %69 = add nuw nsw i64 %36, 3
  %70 = getelementptr inbounds i8, i8* %68, i64 %69
  %71 = load i8, i8* %70, align 1
  %72 = zext i8 %71 to i32
  %73 = load i8, i8* %30, align 1
  %74 = zext i8 %73 to i32
  %75 = sext i32 %61 to i64
  %76 = getelementptr inbounds [256 x i8], [256 x i8]* %5, i64 0, i64 %75
  %77 = load i8, i8* %76, align 1
  %78 = zext i8 %77 to i32
  %79 = add nsw i32 %74, %78
  %80 = and i32 %79, 255
  %81 = sext i32 %80 to i64
  %82 = getelementptr inbounds [256 x i8], [256 x i8]* %5, i64 0, i64 %81
  %83 = load i8, i8* %82, align 1
  %84 = zext i8 %83 to i32
  %85 = xor i32 %72, %84
  %86 = trunc i32 %85 to i8
  %87 = load i8, i8* %31, align 1
  %88 = zext i8 %87 to i32
  %89 = add nsw i32 %61, %88
  %90 = and i32 %89, 255
  %91 = load i8, i8* %32, align 1
  %92 = sext i32 %90 to i64
  %93 = getelementptr inbounds [256 x i8], [256 x i8]* %5, i64 0, i64 %92
  %94 = load i8, i8* %93, align 1
  store i8 %94, i8* %33, align 1
  %95 = sext i32 %90 to i64
  %96 = getelementptr inbounds [256 x i8], [256 x i8]* %5, i64 0, i64 %95
  store i8 %91, i8* %96, align 1
  %97 = load i8*, i8** getelementptr inbounds (%struct.WEP_data, %struct.WEP_data* @wep, i64 0, i32 1), align 8
  %98 = add nuw nsw i64 %36, 4
  %99 = getelementptr inbounds i8, i8* %97, i64 %98
  %100 = load i8, i8* %99, align 1
  %101 = zext i8 %100 to i32
  %102 = load i8, i8* %34, align 1
  %103 = zext i8 %102 to i32
  %104 = sext i32 %90 to i64
  %105 = getelementptr inbounds [256 x i8], [256 x i8]* %5, i64 0, i64 %104
  %106 = load i8, i8* %105, align 1
  %107 = zext i8 %106 to i32
  %108 = add nsw i32 %103, %107
  %109 = and i32 %108, 255
  %110 = sext i32 %109 to i64
  %111 = getelementptr inbounds [256 x i8], [256 x i8]* %5, i64 0, i64 %110
  %112 = load i8, i8* %111, align 1
  %113 = zext i8 %112 to i32
  %114 = xor i32 %101, %113
  %115 = trunc i32 %114 to i8
  %116 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* @mx_ivb) #9
  %117 = zext i8 %86 to i32
  %118 = icmp ne i32 %117, 170
  %119 = zext i8 %115 to i32
  %120 = icmp ne i32 %119, 170
  %or.cond = or i1 %118, %120
  br i1 %or.cond, label %121, label %137

; <label>:121:                                    ; preds = %57
  %122 = zext i8 %86 to i32
  %123 = icmp ne i32 %122, 224
  %124 = zext i8 %115 to i32
  %125 = icmp ne i32 %124, 224
  %or.cond3 = or i1 %123, %125
  br i1 %or.cond3, label %126, label %137

; <label>:126:                                    ; preds = %121
  %127 = zext i8 %86 to i32
  %128 = icmp ne i32 %127, 66
  %129 = zext i8 %115 to i32
  %130 = icmp ne i32 %129, 66
  %or.cond5 = or i1 %128, %130
  br i1 %or.cond5, label %131, label %137

; <label>:131:                                    ; preds = %126
  %132 = zext i8 %86 to i32
  %133 = icmp ne i32 %132, 2
  %134 = zext i8 %115 to i32
  %135 = icmp ne i32 %134, 170
  %or.cond7 = or i1 %133, %135
  %136 = add nsw i32 %.0212, 1
  %spec.select8 = select i1 %or.cond7, i32 %136, i32 %.0212
  br label %137

; <label>:137:                                    ; preds = %131, %126, %121, %57
  %.13 = phi i32 [ %.0212, %57 ], [ %.0212, %121 ], [ %.0212, %126 ], [ %spec.select8, %131 ]
  %138 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 29), align 4
  %139 = mul nsw i32 %.2, %138
  %140 = sdiv i32 %139, 100
  %141 = icmp sgt i32 %.13, %140
  br i1 %141, label %.loopexit.loopexit, label %142

; <label>:142:                                    ; preds = %137
  %indvars.iv.next14 = add nuw nsw i64 %indvars.iv13, 1
  %143 = icmp ult i64 %indvars.iv.next14, %23
  br i1 %143, label %35, label %._crit_edge.loopexit

._crit_edge.loopexit:                             ; preds = %142
  %.02.lcssa.ph = phi i32 [ %.13, %142 ]
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %3
  %.02.lcssa = phi i32 [ 0, %3 ], [ %.02.lcssa.ph, %._crit_edge.loopexit ]
  %144 = sub nsw i32 %.2, %.02.lcssa
  %145 = mul nsw i32 %144, 100
  %146 = sdiv i32 %145, %.2
  %147 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 29
  store i32 %146, i32* %147, align 4
  call void @key_found(i8* %0, i32 %.04, i32 %1)
  br label %.loopexit

.loopexit.loopexit:                               ; preds = %137
  %.0.ph = phi i32 [ 1, %137 ]
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit.loopexit, %._crit_edge
  %.0 = phi i32 [ 0, %._crit_edge ], [ %.0.ph, %.loopexit.loopexit ]
  ret i32 %.0
}

; Function Attrs: noinline nounwind uwtable
define internal void @key_found(i8*, i32, i32) #0 {
  %4 = icmp slt i32 0, %1
  br i1 %4, label %.lr.ph26, label %._crit_edge27

.lr.ph26:                                         ; preds = %3
  %5 = zext i32 %1 to i64
  br label %6

; <label>:6:                                      ; preds = %.lr.ph26, %20
  %indvars.iv28 = phi i64 [ 0, %.lr.ph26 ], [ %indvars.iv.next29, %20 ]
  %.024 = phi i32 [ 0, %.lr.ph26 ], [ %.1, %20 ]
  call void @unroll_loop(i32 0)
  %scevgep6 = getelementptr i8, i8* %0, i64 %indvars.iv28
  %7 = load i8, i8* %scevgep6, align 1
  %8 = zext i8 %7 to i32
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %18, label %10

; <label>:10:                                     ; preds = %6
  %scevgep7 = getelementptr i8, i8* %0, i64 %indvars.iv28
  %11 = load i8, i8* %scevgep7, align 1
  %12 = zext i8 %11 to i32
  %13 = icmp sge i32 %12, 32
  br i1 %13, label %14, label %20

; <label>:14:                                     ; preds = %10
  %scevgep8 = getelementptr i8, i8* %0, i64 %indvars.iv28
  %15 = load i8, i8* %scevgep8, align 1
  %16 = zext i8 %15 to i32
  %17 = icmp slt i32 %16, 127
  br i1 %17, label %18, label %20

; <label>:18:                                     ; preds = %14, %6
  %19 = add nsw i32 %.024, 1
  br label %20

; <label>:20:                                     ; preds = %10, %14, %18
  %.1 = phi i32 [ %19, %18 ], [ %.024, %14 ], [ %.024, %10 ]
  %indvars.iv.next29 = add nuw nsw i64 %indvars.iv28, 1
  %exitcond3 = icmp ne i64 %5, %indvars.iv.next29
  br i1 %exitcond3, label %6, label %._crit_edge27.loopexit

._crit_edge27.loopexit:                           ; preds = %20
  %.0.lcssa.ph = phi i32 [ %.1, %20 ]
  br label %._crit_edge27

._crit_edge27:                                    ; preds = %._crit_edge27.loopexit, %3
  %.0.lcssa = phi i32 [ 0, %3 ], [ %.0.lcssa.ph, %._crit_edge27.loopexit ]
  store i32 1, i32* @wepkey_crack_success, align 4
  %21 = sext i32 %1 to i64
  %22 = getelementptr [64 x i8], [64 x i8]* @bf_wepkey, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %22, i8* align 1 %0, i64 %21, i1 false), !track !174
  %23 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 6
  %24 = load i32, i32* %23, align 8
  %25 = icmp ne i32 %24, 0
  br i1 %25, label %26, label %29

; <label>:26:                                     ; preds = %._crit_edge27
  %27 = getelementptr [14 x i8], [14 x i8]* @.str.150, i32 0, i32 0
  %28 = call i32 (i8*, ...) @printf(i8* %27)
  br label %55

; <label>:29:                                     ; preds = %._crit_edge27
  %30 = icmp ne i32 %2, -1
  br i1 %30, label %31, label %33

; <label>:31:                                     ; preds = %29
  %32 = sub nsw i32 %2, 1
  call void @show_wep_stats(i32 %32, i32 1, [256 x %struct.PTW_tableentry]* null, i32* null, i32* null, i32 0)
  br label %33

; <label>:33:                                     ; preds = %31, %29
  %34 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 27
  %35 = load i32, i32* %34, align 4
  %36 = icmp ne i32 %35, 0
  br i1 %36, label %37, label %40

; <label>:37:                                     ; preds = %33
  %38 = getelementptr [8 x i8], [8 x i8]* @.str.62, i32 0, i32 0
  %39 = call i32 (i8*, ...) @printf(i8* %38)
  br label %40

; <label>:40:                                     ; preds = %37, %33
  %41 = mul nsw i32 %1, 3
  %42 = sub nsw i32 66, %41
  %43 = sdiv i32 %42, 2
  %44 = mul nsw i32 100, %.0.lcssa
  %45 = mul nsw i32 75, %1
  %46 = icmp sgt i32 %44, %45
  br i1 %46, label %47, label %51

; <label>:47:                                     ; preds = %40
  %48 = add nsw i32 %1, 4
  %49 = sdiv i32 %48, 2
  %50 = sub nsw i32 %43, %49
  br label %51

; <label>:51:                                     ; preds = %47, %40
  %.01 = phi i32 [ %50, %47 ], [ %43, %40 ]
  %52 = icmp sle i32 %.01, 0
  %spec.select = select i1 %52, i32 0, i32 %.01
  %53 = getelementptr [22 x i8], [22 x i8]* @.str.151, i32 0, i32 0
  %54 = call i32 (i8*, ...) @printf(i8* %53, i32 %spec.select)
  br label %55

; <label>:55:                                     ; preds = %51, %26
  %.05 = phi i32 [ %.0.lcssa, %51 ], [ %.0.lcssa, %26 ]
  %56 = sub nsw i32 %1, 1
  %57 = icmp slt i32 0, %56
  br i1 %57, label %.lr.ph17, label %68

.lr.ph17:                                         ; preds = %55
  %58 = add i32 %1, -1
  %59 = zext i32 %58 to i64
  br label %60

; <label>:60:                                     ; preds = %.lr.ph17, %60
  %indvars.iv19 = phi i64 [ 0, %.lr.ph17 ], [ %indvars.iv.next20, %60 ]
  call void @unroll_loop(i32 1)
  %scevgep5 = getelementptr i8, i8* %0, i64 %indvars.iv19
  %61 = load i8, i8* %scevgep5, align 1
  %62 = zext i8 %61 to i32
  %63 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.152, i64 0, i64 0), i32 %62)
  %indvars.iv.next20 = add nuw nsw i64 %indvars.iv19, 1
  %exitcond2 = icmp ne i64 %59, %indvars.iv.next20
  br i1 %exitcond2, label %60, label %._crit_edge18

._crit_edge18:                                    ; preds = %60
  %64 = add i32 %1, -2
  %65 = zext i32 %64 to i64
  %66 = add i64 %65, 1
  %67 = trunc i64 %66 to i32
  br label %68

; <label>:68:                                     ; preds = %._crit_edge18, %55
  %.14.lcssa = phi i32 [ %67, %._crit_edge18 ], [ 0, %55 ]
  %69 = sext i32 %.14.lcssa to i64
  %70 = getelementptr inbounds i8, i8* %0, i64 %69
  %71 = load i8, i8* %70, align 1
  %72 = zext i8 %71 to i32
  %73 = getelementptr [8 x i8], [8 x i8]* @.str.153, i32 0, i32 0
  %74 = call i32 (i8*, ...) @printf(i8* %73, i32 %72)
  %75 = icmp eq i32 %.05, %1
  br i1 %75, label %76, label %101

; <label>:76:                                     ; preds = %68
  %77 = getelementptr [9 x i8], [9 x i8]* @.str.154, i32 0, i32 0
  %78 = call i32 (i8*, ...) @printf(i8* %77)
  %79 = icmp slt i32 0, %1
  br i1 %79, label %.lr.ph11, label %._crit_edge12

.lr.ph11:                                         ; preds = %76
  %80 = sext i32 %1 to i64
  br label %81

; <label>:81:                                     ; preds = %.lr.ph11, %96
  %indvars.iv13 = phi i64 [ 0, %.lr.ph11 ], [ %indvars.iv.next14, %96 ]
  call void @unroll_loop(i32 2)
  %scevgep1 = getelementptr i8, i8* %0, i64 %indvars.iv13
  %82 = load i8, i8* %scevgep1, align 1
  %83 = zext i8 %82 to i32
  %84 = icmp sgt i32 %83, 31
  br i1 %84, label %85, label %89

; <label>:85:                                     ; preds = %81
  %scevgep2 = getelementptr i8, i8* %0, i64 %indvars.iv13
  %86 = load i8, i8* %scevgep2, align 1
  %87 = zext i8 %86 to i32
  %88 = icmp slt i32 %87, 127
  br i1 %88, label %93, label %89

; <label>:89:                                     ; preds = %85, %81
  %scevgep4 = getelementptr i8, i8* %0, i64 %indvars.iv13
  %90 = load i8, i8* %scevgep4, align 1
  %91 = zext i8 %90 to i32
  %92 = icmp sgt i32 %91, 160
  br i1 %92, label %93, label %96

; <label>:93:                                     ; preds = %89, %85
  %scevgep3 = getelementptr i8, i8* %0, i64 %indvars.iv13
  %94 = load i8, i8* %scevgep3, align 1
  %95 = zext i8 %94 to i32
  br label %96

; <label>:96:                                     ; preds = %89, %93
  %97 = phi i32 [ %95, %93 ], [ 46, %89 ]
  %98 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.155, i64 0, i64 0), i32 %97)
  %indvars.iv.next14 = add nuw nsw i64 %indvars.iv13, 1
  %exitcond = icmp ne i64 %80, %indvars.iv.next14
  br i1 %exitcond, label %81, label %._crit_edge12.loopexit

._crit_edge12.loopexit:                           ; preds = %96
  br label %._crit_edge12

._crit_edge12:                                    ; preds = %._crit_edge12.loopexit, %76
  %99 = getelementptr [3 x i8], [3 x i8]* @.str.156, i32 0, i32 0
  %100 = call i32 (i8*, ...) @printf(i8* %99)
  br label %101

; <label>:101:                                    ; preds = %._crit_edge12, %68
  %102 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 27
  %103 = load i32, i32* %102, align 4
  %104 = icmp ne i32 %103, 0
  br i1 %104, label %105, label %108

; <label>:105:                                    ; preds = %101
  %106 = getelementptr [9 x i8], [9 x i8]* @.str.36, i32 0, i32 0
  %107 = call i32 (i8*, ...) @printf(i8* %106)
  br label %108

; <label>:108:                                    ; preds = %105, %101
  %109 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 29
  %110 = load i32, i32* %109, align 4
  %111 = getelementptr [29 x i8], [29 x i8]* @.str.157, i32 0, i32 0
  %112 = call i32 (i8*, ...) @printf(i8* %111, i32 %110)
  %113 = getelementptr [2 x i8], [2 x i8]* @.str.2, i32 0, i32 0
  %114 = call i32 (i8*, ...) @printf(i8* %113)
  %115 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 42
  %116 = load i8*, i8** %115, align 8
  %117 = icmp ne i8* %116, null
  br i1 %117, label %118, label %132

; <label>:118:                                    ; preds = %108
  %119 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 42
  %120 = load i8*, i8** %119, align 8
  %121 = getelementptr [2 x i8], [2 x i8]* @.str.64, i32 0, i32 0
  %122 = call %struct._IO_FILE* @fopen64(i8* %120, i8* %121), !track !175
  %123 = icmp ne %struct._IO_FILE* %122, null
  br i1 %123, label %124, label %132

; <label>:124:                                    ; preds = %118
  %125 = icmp slt i32 0, %1
  br i1 %125, label %.lr.ph, label %._crit_edge

.lr.ph:                                           ; preds = %124
  %126 = zext i32 %1 to i64
  br label %127

; <label>:127:                                    ; preds = %.lr.ph, %127
  %indvars.iv = phi i64 [ 0, %.lr.ph ], [ %indvars.iv.next, %127 ]
  call void @unroll_loop(i32 3)
  %scevgep = getelementptr i8, i8* %0, i64 %indvars.iv
  %128 = load i8, i8* %scevgep, align 1
  %129 = zext i8 %128 to i32
  %130 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %122, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.158, i64 0, i64 0), i32 %129)
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond1 = icmp ne i64 %126, %indvars.iv.next
  br i1 %exitcond1, label %127, label %._crit_edge.loopexit

._crit_edge.loopexit:                             ; preds = %127
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %124
  %131 = call i32 @fclose(%struct._IO_FILE* %122)
  br label %132

; <label>:132:                                    ; preds = %118, %._crit_edge, %108
  ret void
}

declare dso_local %struct._IO_FILE* @fopen64(i8*, i8*) #1

declare dso_local i32 @fclose(%struct._IO_FILE*) #1

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @cmp_votes(i8*, i8*) #0 {
  %3 = bitcast i8* %0 to %struct.vote*
  %4 = getelementptr inbounds %struct.vote, %struct.vote* %3, i32 0, i32 1
  %5 = load i32, i32* %4, align 4
  %6 = bitcast i8* %1 to %struct.vote*
  %7 = getelementptr inbounds %struct.vote, %struct.vote* %6, i32 0, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = icmp slt i32 %5, %8
  br i1 %9, label %18, label %10

; <label>:10:                                     ; preds = %2
  %11 = bitcast i8* %0 to %struct.vote*
  %12 = getelementptr inbounds %struct.vote, %struct.vote* %11, i32 0, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = bitcast i8* %1 to %struct.vote*
  %15 = getelementptr inbounds %struct.vote, %struct.vote* %14, i32 0, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = icmp sgt i32 %13, %16
  %. = select i1 %17, i32 -1, i32 0
  br label %18

; <label>:18:                                     ; preds = %10, %2
  %.0 = phi i32 [ 1, %2 ], [ %., %10 ]
  ret i32 %.0
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @calc_poll(i32) #0 {
  %2 = alloca i32, align 4
  %3 = alloca [17 x [256 x i32]], align 16
  store i32 %0, i32* %2, align 4
  %4 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 30
  %5 = bitcast [17 x i32]* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 68, i1 false)
  %6 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 5
  %7 = load i32, i32* %6, align 4
  %8 = icmp slt i32 0, %7
  br i1 %8, label %.lr.ph42.preheader, label %._crit_edge43

.lr.ph42.preheader:                               ; preds = %1
  %9 = bitcast i32* %2 to i8*
  br label %.lr.ph42

.lr.ph42:                                         ; preds = %.lr.ph42.preheader, %18
  %indvars.iv44 = phi i64 [ %indvars.iv.next45, %18 ], [ 0, %.lr.ph42.preheader ]
  call void @unroll_loop(i32 14)
  %10 = shl i64 %indvars.iv44, 3
  %11 = inttoptr i64 %10 to i32*
  %uglygep = getelementptr i8, i8* bitcast ([256 x [2 x i32]]* @mc_pipe to i8*), i64 %10
  %uglygep33 = bitcast i8* %uglygep to i32*
  %scevgep34 = getelementptr i32, i32* %uglygep33, i64 1
  %12 = load i32, i32* %scevgep34, align 4
  %13 = call i32 @safe_write(i32 %12, i8* %9, i64 4)
  %14 = icmp ne i32 %13, 4
  br i1 %14, label %15, label %18

; <label>:15:                                     ; preds = %.lr.ph42
  %16 = getelementptr [13 x i8], [13 x i8]* @.str.28, i32 0, i32 0
  call void @perror(i8* %16)
  %17 = call i32 @kill(i32 0, i32 15) #9
  call void @_exit(i32 1) #12
  unreachable

; <label>:18:                                     ; preds = %.lr.ph42
  %indvars.iv.next45 = add nuw nsw i64 %indvars.iv44, 1
  %19 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 5), align 4
  %20 = sext i32 %19 to i64
  %21 = icmp slt i64 %indvars.iv.next45, %20
  br i1 %21, label %.lr.ph42, label %._crit_edge43.loopexit

._crit_edge43.loopexit:                           ; preds = %18
  br label %._crit_edge43

._crit_edge43:                                    ; preds = %._crit_edge43.loopexit, %1
  br label %22

; <label>:22:                                     ; preds = %._crit_edge43, %22
  %indvars.iv37 = phi i64 [ 0, %._crit_edge43 ], [ %indvars.iv.next38, %22 ]
  call void @unroll_loop(i32 15)
  %23 = load i32, i32* %2, align 4
  %24 = sext i32 %23 to i64
  %25 = shl i64 %24, 11
  %26 = shl i64 %indvars.iv37, 3
  %27 = add i64 %25, %26
  %28 = inttoptr i64 %27 to i32*
  %scevgep27 = getelementptr %struct.WEP_data, %struct.WEP_data* @wep, i64 0, i32 0, i64 %27
  %scevgep2728 = bitcast i8* %scevgep27 to i32*
  %scevgep29 = getelementptr i32, i32* %scevgep2728, i64 152
  %tmp26 = trunc i64 %indvars.iv37 to i32
  store i32 %tmp26, i32* %scevgep29, align 8
  %29 = load i32, i32* %2, align 4
  %30 = sext i32 %29 to i64
  %31 = shl i64 %30, 11
  %32 = shl i64 %indvars.iv37, 3
  %33 = add i64 %31, %32
  %34 = inttoptr i64 %33 to i32*
  %scevgep30 = getelementptr %struct.WEP_data, %struct.WEP_data* @wep, i64 0, i32 0, i64 %33
  %scevgep3031 = bitcast i8* %scevgep30 to i32*
  %scevgep32 = getelementptr i32, i32* %scevgep3031, i64 153
  store i32 0, i32* %scevgep32, align 4
  %indvars.iv.next38 = add nuw nsw i64 %indvars.iv37, 1
  %exitcond39 = icmp ne i64 %indvars.iv.next38, 256
  br i1 %exitcond39, label %22, label %35

; <label>:35:                                     ; preds = %22
  %36 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 5
  %37 = load i32, i32* %36, align 4
  %38 = icmp slt i32 0, %37
  br i1 %38, label %.lr.ph.preheader, label %._crit_edge

.lr.ph.preheader:                                 ; preds = %35
  %39 = getelementptr inbounds [17 x [256 x i32]], [17 x [256 x i32]]* %3, i32 0, i32 0
  %40 = bitcast [256 x i32]* %39 to i8*
  %41 = getelementptr inbounds [17 x [256 x i32]], [17 x [256 x i32]]* %3, i32 0, i32 0
  %42 = bitcast [256 x i32]* %41 to i32*
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %76
  %indvars.iv34 = phi i64 [ %indvars.iv.next35, %76 ], [ 0, %.lr.ph.preheader ]
  call void @unroll_loop(i32 16)
  %43 = getelementptr inbounds [256 x [2 x i32]], [256 x [2 x i32]]* @cm_pipe, i64 0, i64 %indvars.iv34
  %44 = getelementptr inbounds [2 x i32], [2 x i32]* %43, i64 0, i64 0
  %45 = load i32, i32* %44, align 8
  %46 = call i32 @safe_read(i32 %45, i8* %40, i64 17408)
  %47 = icmp ne i32 %46, 17408
  br i1 %47, label %48, label %51

; <label>:48:                                     ; preds = %.lr.ph
  %49 = getelementptr [12 x i8], [12 x i8]* @.str.27, i32 0, i32 0
  call void @perror(i8* %49)
  %50 = call i32 @kill(i32 0, i32 15) #9
  call void @_exit(i32 1) #12
  unreachable

; <label>:51:                                     ; preds = %.lr.ph
  br label %52

; <label>:52:                                     ; preds = %51, %75
  %indvars.iv30 = phi i64 [ 0, %51 ], [ %indvars.iv.next31, %75 ]
  %.0428 = phi i32* [ %42, %51 ], [ %scevgep, %75 ]
  %53 = getelementptr inbounds [17 x i32], [17 x i32]* @K_COEFF, i64 0, i64 %indvars.iv30
  %54 = getelementptr inbounds [17 x i32], [17 x i32]* @K_COEFF, i64 0, i64 %indvars.iv30
  %55 = getelementptr inbounds [17 x i32], [17 x i32]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 30), i64 0, i64 %indvars.iv30
  br label %56

; <label>:56:                                     ; preds = %52, %74
  %indvars.iv25 = phi i64 [ 0, %52 ], [ %indvars.iv.next26, %74 ]
  %scevgep25 = getelementptr i32, i32* %.0428, i64 %indvars.iv25
  call void @unroll_loop(i32 17)
  %57 = load i32, i32* %scevgep25, align 4
  %58 = load i32, i32* %53, align 4
  %59 = mul nsw i32 %57, %58
  %60 = load i32, i32* %2, align 4
  %61 = sext i32 %60 to i64
  %62 = shl i64 %61, 11
  %63 = shl i64 %indvars.iv25, 3
  %64 = add i64 %62, %63
  %65 = inttoptr i64 %64 to i32*
  %scevgep22 = getelementptr %struct.WEP_data, %struct.WEP_data* @wep, i64 0, i32 0, i64 %64
  %scevgep2223 = bitcast i8* %scevgep22 to i32*
  %scevgep24 = getelementptr i32, i32* %scevgep2223, i64 153
  %66 = load i32, i32* %scevgep24, align 4
  %67 = add nsw i32 %66, %59
  store i32 %67, i32* %scevgep24, align 4
  %68 = load i32, i32* %54, align 4
  %69 = icmp ne i32 %68, 0
  br i1 %69, label %70, label %74

; <label>:70:                                     ; preds = %56
  %71 = load i32, i32* %scevgep25, align 4
  %72 = load i32, i32* %55, align 4
  %73 = add nsw i32 %72, %71
  store i32 %73, i32* %55, align 4
  br label %74

; <label>:74:                                     ; preds = %56, %70
  %indvars.iv.next26 = add nuw nsw i64 %indvars.iv25, 1
  %exitcond27 = icmp ne i64 %indvars.iv.next26, 256
  br i1 %exitcond27, label %56, label %75

; <label>:75:                                     ; preds = %74
  %scevgep = getelementptr i32, i32* %.0428, i64 256
  %indvars.iv.next31 = add nuw nsw i64 %indvars.iv30, 1
  %exitcond32 = icmp ne i64 %indvars.iv.next31, 17
  br i1 %exitcond32, label %52, label %76

; <label>:76:                                     ; preds = %75
  %indvars.iv.next35 = add nuw nsw i64 %indvars.iv34, 1
  %77 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 5), align 4
  %78 = sext i32 %77 to i64
  %79 = icmp slt i64 %indvars.iv.next35, %78
  br i1 %79, label %.lr.ph, label %._crit_edge.loopexit

._crit_edge.loopexit:                             ; preds = %76
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %35
  %80 = load i32, i32* %2, align 4
  %81 = sext i32 %80 to i64
  %82 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 8
  %83 = getelementptr inbounds [64 x i32], [64 x i32]* %82, i64 0, i64 %81
  %84 = load i32, i32* %83, align 4
  %85 = icmp ne i32 %84, 0
  br i1 %85, label %86, label %99

; <label>:86:                                     ; preds = %._crit_edge
  %87 = load i32, i32* %2, align 4
  %88 = sext i32 %87 to i64
  %89 = getelementptr %struct.WEP_data, %struct.WEP_data* @wep, i32 0, i32 7
  %90 = getelementptr inbounds [64 x [256 x %struct.vote]], [64 x [256 x %struct.vote]]* %89, i64 0, i64 %88
  %91 = load i32, i32* %2, align 4
  %92 = sext i32 %91 to i64
  %93 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 7
  %94 = getelementptr inbounds [64 x i8], [64 x i8]* %93, i64 0, i64 %92
  %95 = load i8, i8* %94, align 1
  %96 = zext i8 %95 to i64
  %97 = getelementptr inbounds [256 x %struct.vote], [256 x %struct.vote]* %90, i64 0, i64 %96
  %98 = getelementptr inbounds %struct.vote, %struct.vote* %97, i32 0, i32 1
  store i32 32767, i32* %98, align 4
  br label %99

; <label>:99:                                     ; preds = %86, %._crit_edge
  %100 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 15
  %101 = load i32, i32* %100, align 8
  %102 = icmp ne i32 %101, 0
  br i1 %102, label %.preheader6.preheader, label %.loopexit5

.preheader6.preheader:                            ; preds = %99
  br label %.preheader6

.preheader6:                                      ; preds = %.preheader6.preheader, %.preheader6
  %lsr.iv17 = phi i64 [ -31, %.preheader6.preheader ], [ %lsr.iv.next18, %.preheader6 ]
  call void @unroll_loop(i32 18)
  %103 = load i32, i32* %2, align 4
  %104 = sext i32 %103 to i64
  %105 = shl i64 %104, 11
  %106 = shl i64 %lsr.iv17, 3
  %107 = add i64 %105, %106
  %108 = inttoptr i64 %107 to i32*
  %scevgep19 = getelementptr %struct.WEP_data, %struct.WEP_data* @wep, i64 0, i32 0, i64 %107
  %scevgep1920 = bitcast i8* %scevgep19 to i32*
  %scevgep21 = getelementptr i32, i32* %scevgep1920, i64 217
  store i32 -1, i32* %scevgep21, align 4
  %lsr.iv.next18 = add nsw i64 %lsr.iv17, 1
  %exitcond22 = icmp ne i64 %lsr.iv.next18, 0
  br i1 %exitcond22, label %.preheader6, label %.preheader4.preheader

.preheader4.preheader:                            ; preds = %.preheader6
  br label %.preheader4

.preheader4:                                      ; preds = %.preheader4.preheader, %.preheader4
  %lsr.iv12 = phi i64 [ -129, %.preheader4.preheader ], [ %lsr.iv.next13, %.preheader4 ]
  call void @unroll_loop(i32 19)
  %109 = load i32, i32* %2, align 4
  %110 = sext i32 %109 to i64
  %111 = shl i64 %110, 11
  %112 = shl i64 %lsr.iv12, 3
  %113 = add i64 %111, %112
  %114 = inttoptr i64 %113 to i32*
  %scevgep14 = getelementptr %struct.WEP_data, %struct.WEP_data* @wep, i64 0, i32 0, i64 %113
  %scevgep1415 = bitcast i8* %scevgep14 to i32*
  %scevgep16 = getelementptr i32, i32* %scevgep1415, i64 665
  store i32 -1, i32* %scevgep16, align 4
  %lsr.iv.next13 = add nsw i64 %lsr.iv12, 1
  %exitcond18 = icmp ne i64 %lsr.iv.next13, 0
  br i1 %exitcond18, label %.preheader4, label %.loopexit5.loopexit

.loopexit5.loopexit:                              ; preds = %.preheader4
  br label %.loopexit5

.loopexit5:                                       ; preds = %.loopexit5.loopexit, %99
  %115 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 14
  %116 = load i32, i32* %115, align 4
  %117 = icmp ne i32 %116, 0
  br i1 %117, label %.preheader3.preheader, label %.loopexit2

.preheader3.preheader:                            ; preds = %.loopexit5
  br label %.preheader3

.preheader3:                                      ; preds = %.preheader3.preheader, %.preheader3
  %lsr.iv7 = phi i64 [ -48, %.preheader3.preheader ], [ %lsr.iv.next8, %.preheader3 ]
  call void @unroll_loop(i32 20)
  %118 = load i32, i32* %2, align 4
  %119 = sext i32 %118 to i64
  %120 = shl i64 %119, 11
  %121 = shl i64 %lsr.iv7, 3
  %122 = add i64 %120, %121
  %123 = inttoptr i64 %122 to i32*
  %scevgep9 = getelementptr %struct.WEP_data, %struct.WEP_data* @wep, i64 0, i32 0, i64 %122
  %scevgep910 = bitcast i8* %scevgep9 to i32*
  %scevgep11 = getelementptr i32, i32* %scevgep910, i64 249
  store i32 -1, i32* %scevgep11, align 4
  %lsr.iv.next8 = add nsw i64 %lsr.iv7, 1
  %exitcond14 = icmp ne i64 %lsr.iv.next8, 0
  br i1 %exitcond14, label %.preheader3, label %.preheader1.preheader

.preheader1.preheader:                            ; preds = %.preheader3
  br label %.preheader1

.preheader1:                                      ; preds = %.preheader1.preheader, %.preheader1
  %lsr.iv = phi i64 [ -198, %.preheader1.preheader ], [ %lsr.iv.next, %.preheader1 ]
  call void @unroll_loop(i32 21)
  %124 = load i32, i32* %2, align 4
  %125 = sext i32 %124 to i64
  %126 = shl i64 %125, 11
  %127 = shl i64 %lsr.iv, 3
  %128 = add i64 %126, %127
  %129 = inttoptr i64 %128 to i32*
  %scevgep4 = getelementptr %struct.WEP_data, %struct.WEP_data* @wep, i64 0, i32 0, i64 %128
  %scevgep45 = bitcast i8* %scevgep4 to i32*
  %scevgep6 = getelementptr i32, i32* %scevgep45, i64 665
  store i32 -1, i32* %scevgep6, align 4
  %lsr.iv.next = add nsw i64 %lsr.iv, 1
  %exitcond10 = icmp ne i64 %lsr.iv.next, 0
  br i1 %exitcond10, label %.preheader1, label %.loopexit2.loopexit

.loopexit2.loopexit:                              ; preds = %.preheader1
  br label %.loopexit2

.loopexit2:                                       ; preds = %.loopexit2.loopexit, %.loopexit5
  %130 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 16
  %131 = load i32, i32* %130, align 4
  %132 = icmp ne i32 %131, 0
  br i1 %132, label %.preheader.preheader, label %.loopexit

.preheader.preheader:                             ; preds = %.loopexit2
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %144
  %indvars.iv = phi i64 [ %indvars.iv.next, %144 ], [ 1, %.preheader.preheader ]
  call void @unroll_loop(i32 22)
  %133 = icmp ugt i64 %indvars.iv, 153
  br i1 %133, label %137, label %134

; <label>:134:                                    ; preds = %.preheader
  %tmp = trunc i64 %indvars.iv to i32
  %135 = and i32 %tmp, 15
  %136 = icmp sgt i32 %135, 9
  br i1 %136, label %137, label %144

; <label>:137:                                    ; preds = %134, %.preheader
  %138 = load i32, i32* %2, align 4
  %139 = sext i32 %138 to i64
  %140 = shl i64 %139, 11
  %141 = shl i64 %indvars.iv, 3
  %142 = add i64 %140, %141
  %143 = inttoptr i64 %142 to i32*
  %scevgep1 = getelementptr %struct.WEP_data, %struct.WEP_data* @wep, i64 0, i32 0, i64 %142
  %scevgep12 = bitcast i8* %scevgep1 to i32*
  %scevgep3 = getelementptr i32, i32* %scevgep12, i64 153
  store i32 -1, i32* %scevgep3, align 4
  br label %144

; <label>:144:                                    ; preds = %134, %137
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp ne i64 %indvars.iv.next, 256
  br i1 %exitcond, label %.preheader, label %.loopexit.loopexit

.loopexit.loopexit:                               ; preds = %144
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit.loopexit, %.loopexit2
  %145 = load i32, i32* %2, align 4
  %146 = sext i32 %145 to i64
  %147 = getelementptr %struct.WEP_data, %struct.WEP_data* @wep, i32 0, i32 7
  %148 = getelementptr inbounds [64 x [256 x %struct.vote]], [64 x [256 x %struct.vote]]* %147, i64 0, i64 %146
  %149 = getelementptr inbounds [256 x %struct.vote], [256 x %struct.vote]* %148, i32 0, i32 0
  %150 = bitcast %struct.vote* %149 to i8*
  call void @qsort(i8* %150, i64 256, i64 8, i32 (i8*, i8*)* @cmp_votes)
  ret i32 0
}

declare dso_local void @qsort(i8*, i64, i64, i32 (i8*, i8*)*) #1

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @update_ivbuf() #0 {
  %1 = getelementptr %struct.WEP_data, %struct.WEP_data* @wep, i32 0, i32 4
  store i64 0, i64* %1, align 8
  %2 = getelementptr %struct.WEP_data, %struct.WEP_data* @wep, i32 0, i32 2
  store i32 0, i32* %2, align 8
  %3 = load %struct.AP_info*, %struct.AP_info** @ap_1st, align 8
  %4 = icmp ne %struct.AP_info* %3, null
  br i1 %4, label %.lr.ph5.preheader, label %._crit_edge6

.lr.ph5.preheader:                                ; preds = %0
  br label %.lr.ph5

.lr.ph5:                                          ; preds = %.lr.ph5.preheader, %19
  %.013 = phi %struct.AP_info* [ %21, %19 ], [ %3, %.lr.ph5.preheader ]
  call void @unroll_loop(i32 60)
  %5 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.013, i32 0, i32 10
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 2
  br i1 %7, label %8, label %19

; <label>:8:                                      ; preds = %.lr.ph5
  %9 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.013, i32 0, i32 12
  %10 = load i32, i32* %9, align 8
  %11 = icmp ne i32 %10, 0
  br i1 %11, label %12, label %19

; <label>:12:                                     ; preds = %8
  %13 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.013, i32 0, i32 7
  %14 = load i64, i64* %13, align 8
  %15 = load i64, i64* getelementptr inbounds (%struct.WEP_data, %struct.WEP_data* @wep, i64 0, i32 4), align 8
  %16 = add nsw i64 %15, %14
  store i64 %16, i64* getelementptr inbounds (%struct.WEP_data, %struct.WEP_data* @wep, i64 0, i32 4), align 8
  %17 = load i32, i32* getelementptr inbounds (%struct.WEP_data, %struct.WEP_data* @wep, i64 0, i32 2), align 8
  %18 = add nsw i32 %17, 1
  store i32 %18, i32* getelementptr inbounds (%struct.WEP_data, %struct.WEP_data* @wep, i64 0, i32 2), align 8
  br label %19

; <label>:19:                                     ; preds = %12, %8, %.lr.ph5
  %20 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.013, i32 0, i32 0
  %21 = load %struct.AP_info*, %struct.AP_info** %20, align 8
  %22 = icmp ne %struct.AP_info* %21, null
  br i1 %22, label %.lr.ph5, label %._crit_edge6.loopexit

._crit_edge6.loopexit:                            ; preds = %19
  br label %._crit_edge6

._crit_edge6:                                     ; preds = %._crit_edge6.loopexit, %0
  %23 = getelementptr %struct.WEP_data, %struct.WEP_data* @wep, i32 0, i32 3
  %24 = load i64, i64* %23, align 8
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %48, label %26

; <label>:26:                                     ; preds = %._crit_edge6
  %27 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 10
  %28 = load i32, i32* %27, align 4
  %29 = icmp eq i32 %28, 5
  br i1 %29, label %30, label %37

; <label>:30:                                     ; preds = %26
  %31 = getelementptr %struct.WEP_data, %struct.WEP_data* @wep, i32 0, i32 4
  %32 = load i64, i64* %31, align 8
  %33 = getelementptr %struct.WEP_data, %struct.WEP_data* @wep, i32 0, i32 3
  %34 = load i64, i64* %33, align 8
  %35 = sub nsw i64 %32, %34
  %36 = icmp sgt i64 %35, 20000
  br i1 %36, label %48, label %37

; <label>:37:                                     ; preds = %30, %26
  %38 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 10
  %39 = load i32, i32* %38, align 4
  %40 = icmp sge i32 %39, 13
  br i1 %40, label %41, label %100

; <label>:41:                                     ; preds = %37
  %42 = getelementptr %struct.WEP_data, %struct.WEP_data* @wep, i32 0, i32 4
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr %struct.WEP_data, %struct.WEP_data* @wep, i32 0, i32 3
  %45 = load i64, i64* %44, align 8
  %46 = sub nsw i64 %43, %45
  %47 = icmp sgt i64 %46, 40000
  br i1 %47, label %48, label %100

; <label>:48:                                     ; preds = %41, %30, %._crit_edge6
  %49 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* @mx_ivb) #9
  %50 = getelementptr %struct.WEP_data, %struct.WEP_data* @wep, i32 0, i32 1
  %51 = load i8*, i8** %50, align 8
  %52 = icmp ne i8* %51, null
  br i1 %52, label %53, label %57

; <label>:53:                                     ; preds = %48
  %54 = getelementptr %struct.WEP_data, %struct.WEP_data* @wep, i32 0, i32 1
  %55 = load i8*, i8** %54, align 8
  call void @free(i8* %55) #9
  %56 = getelementptr %struct.WEP_data, %struct.WEP_data* @wep, i32 0, i32 1
  store i8* null, i8** %56, align 8
  br label %57

; <label>:57:                                     ; preds = %53, %48
  %58 = getelementptr %struct.WEP_data, %struct.WEP_data* @wep, i32 0, i32 3
  store i64 0, i64* %58, align 8
  %59 = load %struct.AP_info*, %struct.AP_info** @ap_1st, align 8
  %60 = icmp ne %struct.AP_info* %59, null
  br i1 %60, label %.lr.ph.preheader, label %._crit_edge

.lr.ph.preheader:                                 ; preds = %57
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %95
  %.12 = phi %struct.AP_info* [ %97, %95 ], [ %59, %.lr.ph.preheader ]
  call void @unroll_loop(i32 61)
  %61 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.12, i32 0, i32 10
  %62 = load i32, i32* %61, align 8
  %63 = icmp eq i32 %62, 2
  br i1 %63, label %64, label %95

; <label>:64:                                     ; preds = %.lr.ph
  %65 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.12, i32 0, i32 12
  %66 = load i32, i32* %65, align 8
  %67 = icmp ne i32 %66, 0
  br i1 %67, label %68, label %95

; <label>:68:                                     ; preds = %64
  %69 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.12, i32 0, i32 7
  %70 = load i64, i64* %69, align 8
  %71 = trunc i64 %70 to i32
  %72 = load i8*, i8** getelementptr inbounds (%struct.WEP_data, %struct.WEP_data* @wep, i64 0, i32 1), align 8
  %73 = load i64, i64* getelementptr inbounds (%struct.WEP_data, %struct.WEP_data* @wep, i64 0, i32 3), align 8
  %74 = sext i32 %71 to i64
  %75 = add nsw i64 %73, %74
  %76 = mul nsw i64 %75, 5
  %77 = call i8* @realloc(i8* %72, i64 %76) #9, !track !176
  store i8* %77, i8** getelementptr inbounds (%struct.WEP_data, %struct.WEP_data* @wep, i64 0, i32 1), align 8
  %78 = icmp eq i8* %77, null
  br i1 %78, label %79, label %83

; <label>:79:                                     ; preds = %68
  %80 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* @mx_ivb) #9
  %81 = getelementptr [15 x i8], [15 x i8]* @.str.25, i32 0, i32 0
  call void @perror(i8* %81)
  %82 = call i32 @kill(i32 0, i32 15) #9
  call void @_exit(i32 1) #12
  unreachable

; <label>:83:                                     ; preds = %68
  %84 = load i8*, i8** getelementptr inbounds (%struct.WEP_data, %struct.WEP_data* @wep, i64 0, i32 1), align 8
  %85 = load i64, i64* getelementptr inbounds (%struct.WEP_data, %struct.WEP_data* @wep, i64 0, i32 3), align 8
  %86 = mul nsw i64 %85, 5
  %87 = getelementptr inbounds i8, i8* %84, i64 %86
  %88 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.12, i32 0, i32 4
  %89 = load i8*, i8** %88, align 8
  %90 = mul nsw i32 5, %71
  %91 = sext i32 %90 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %87, i8* align 1 %89, i64 %91, i1 false), !track !177
  %92 = sext i32 %71 to i64
  %93 = load i64, i64* getelementptr inbounds (%struct.WEP_data, %struct.WEP_data* @wep, i64 0, i32 3), align 8
  %94 = add nsw i64 %93, %92
  store i64 %94, i64* getelementptr inbounds (%struct.WEP_data, %struct.WEP_data* @wep, i64 0, i32 3), align 8
  br label %95

; <label>:95:                                     ; preds = %83, %64, %.lr.ph
  %96 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.12, i32 0, i32 0
  %97 = load %struct.AP_info*, %struct.AP_info** %96, align 8
  %98 = icmp ne %struct.AP_info* %97, null
  br i1 %98, label %.lr.ph, label %._crit_edge.loopexit

._crit_edge.loopexit:                             ; preds = %95
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %57
  %99 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* @mx_ivb) #9
  br label %100

; <label>:100:                                    ; preds = %37, %41, %._crit_edge
  %.0 = phi i32 [ 2, %._crit_edge ], [ 0, %41 ], [ 0, %37 ]
  ret i32 %.0
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @remove_votes(i32, i8 zeroext) #0 {
  %3 = zext i8 %1 to i32
  %4 = zext i8 %1 to i32
  %5 = sext i32 %0 to i64
  %6 = sext i32 %0 to i64
  %7 = getelementptr inbounds [64 x i8], [64 x i8]* getelementptr inbounds (%struct.WEP_data, %struct.WEP_data* @wep, i64 0, i32 0), i64 0, i64 %6
  %8 = shl i64 %5, 11
  %9 = add i64 %8, 608
  %scevgep = getelementptr %struct.WEP_data, %struct.WEP_data* @wep, i64 0, i32 0, i64 %9
  br label %10

; <label>:10:                                     ; preds = %2, %31
  %indvars.iv = phi i64 [ 0, %2 ], [ %indvars.iv.next, %31 ]
  %.03 = phi i32 [ 0, %2 ], [ %spec.select, %31 ]
  call void @unroll_loop(i32 62)
  %11 = shl i64 %indvars.iv, 3
  %scevgep1 = getelementptr i8, i8* %scevgep, i64 %11
  %scevgep12 = bitcast i8* %scevgep1 to i32*
  %12 = load i32, i32* %scevgep12, align 8
  %13 = icmp eq i32 %12, %3
  %spec.select = select i1 %13, i32 1, i32 %.03
  %14 = icmp ne i32 %spec.select, 0
  br i1 %14, label %15, label %31

; <label>:15:                                     ; preds = %10
  %16 = icmp eq i64 %indvars.iv, 255
  br i1 %16, label %17, label %19

; <label>:17:                                     ; preds = %15
  %18 = shl i64 %indvars.iv, 3
  %scevgep3 = getelementptr i8, i8* %scevgep, i64 %18
  %scevgep34 = bitcast i8* %scevgep3 to i32*
  store i32 %4, i32* %scevgep34, align 8
  %scevgep5 = getelementptr i8, i8* %scevgep, i64 %18
  %scevgep56 = bitcast i8* %scevgep5 to i32*
  %scevgep7 = getelementptr i32, i32* %scevgep56, i64 1
  store i32 0, i32* %scevgep7, align 4
  br label %31

; <label>:19:                                     ; preds = %15
  %20 = shl i64 %indvars.iv, 3
  %scevgep8 = getelementptr i8, i8* %scevgep, i64 %20
  %scevgep89 = bitcast i8* %scevgep8 to i32*
  %scevgep10 = getelementptr i32, i32* %scevgep89, i64 2
  %21 = load i32, i32* %scevgep10, align 8
  %22 = shl i64 %indvars.iv, 3
  %scevgep11 = getelementptr i8, i8* %scevgep, i64 %22
  %scevgep1112 = bitcast i8* %scevgep11 to i32*
  store i32 %21, i32* %scevgep1112, align 8
  %23 = shl i64 %indvars.iv, 3
  %scevgep13 = getelementptr i8, i8* %scevgep, i64 %23
  %scevgep1314 = bitcast i8* %scevgep13 to i32*
  %scevgep15 = getelementptr i32, i32* %scevgep1314, i64 3
  %24 = load i32, i32* %scevgep15, align 4
  %25 = shl i64 %indvars.iv, 3
  %scevgep16 = getelementptr i8, i8* %scevgep, i64 %25
  %scevgep1617 = bitcast i8* %scevgep16 to i32*
  %scevgep18 = getelementptr i32, i32* %scevgep1617, i64 1
  store i32 %24, i32* %scevgep18, align 4
  %26 = icmp eq i64 %indvars.iv, 0
  br i1 %26, label %27, label %31

; <label>:27:                                     ; preds = %19
  %28 = shl i64 %indvars.iv, 3
  %scevgep19 = getelementptr i8, i8* %scevgep, i64 %28
  %scevgep1920 = bitcast i8* %scevgep19 to i32*
  %29 = load i32, i32* %scevgep1920, align 8
  %30 = trunc i32 %29 to i8
  store i8 %30, i8* %7, align 1
  br label %31

; <label>:31:                                     ; preds = %10, %19, %27, %17
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp ne i64 %indvars.iv.next, 256
  br i1 %exitcond, label %10, label %32

; <label>:32:                                     ; preds = %31
  ret i32 0
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @do_wep_crack1(i32) #0 {
  %2 = alloca [4 x i8], align 1
  br label %3

; <label>:3:                                      ; preds = %26, %1
  call void @unroll_loop(i32 65)
  %4 = call i32 @update_ivbuf()
  switch i32 %4, label %5 [
    i32 1, label %.loopexit24
    i32 2, label %.loopexit5.loopexit12
  ]

; <label>:5:                                      ; preds = %3
  %6 = load i64, i64* getelementptr inbounds (%struct.WEP_data, %struct.WEP_data* @wep, i64 0, i32 4), align 8
  %7 = icmp slt i64 %6, 256
  br i1 %7, label %8, label %12

; <label>:8:                                      ; preds = %5
  %9 = load i8, i8* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 7, i64 0), align 4
  %10 = zext i8 %9 to i32
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %19, label %12

; <label>:12:                                     ; preds = %8, %5
  %13 = load i64, i64* getelementptr inbounds (%struct.WEP_data, %struct.WEP_data* @wep, i64 0, i32 4), align 8
  %14 = icmp slt i64 %13, 32
  br i1 %14, label %15, label %33

; <label>:15:                                     ; preds = %12
  %16 = load i8, i8* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 7, i64 0), align 4
  %17 = zext i8 %16 to i32
  %18 = icmp ne i32 %17, 0
  br i1 %18, label %19, label %33

; <label>:19:                                     ; preds = %15, %8
  %20 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 24), align 4
  %21 = icmp ne i32 %20, 0
  br i1 %21, label %26, label %22

; <label>:22:                                     ; preds = %19
  %23 = getelementptr [125 x i8], [125 x i8]* @.str.46, i32 0, i32 0
  %24 = call i32 (i8*, ...) @printf(i8* %23)
  %25 = call i32 @kill(i32 0, i32 15) #9
  call void @_exit(i32 1) #12
  unreachable

; <label>:26:                                     ; preds = %19
  %27 = load i64, i64* @nb_pkt, align 8
  %28 = load i64, i64* getelementptr inbounds (%struct.WEP_data, %struct.WEP_data* @wep, i64 0, i32 4), align 8
  %29 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.47, i64 0, i64 0), i64 %27, i64 %28)
  %30 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %31 = call i32 @fflush(%struct._IO_FILE* %30)
  %32 = call i32 @sleep(i32 1)
  br label %3

; <label>:33:                                     ; preds = %15, %12
  %34 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 10
  %35 = load i32, i32* %34, align 4
  %36 = icmp eq i32 %0, %35
  br i1 %36, label %37, label %46

; <label>:37:                                     ; preds = %33
  %38 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 6
  %39 = load i32, i32* %38, align 8
  %40 = icmp ne i32 %39, 0
  br i1 %40, label %43, label %41

; <label>:41:                                     ; preds = %37
  %42 = sub nsw i32 %0, 1
  call void @show_wep_stats(i32 %42, i32 0, [256 x %struct.PTW_tableentry]* null, i32* null, i32* null, i32 0)
  br label %43

; <label>:43:                                     ; preds = %41, %37
  %44 = getelementptr %struct.WEP_data, %struct.WEP_data* @wep, i32 0, i32 0, i32 0
  %45 = call i32 @check_wep_key(i8* %44, i32 %0, i32 0)
  br label %.loopexit5

; <label>:46:                                     ; preds = %33
  %47 = call i32 @calc_poll(i32 %0)
  %48 = icmp ne i32 %47, 0
  br i1 %48, label %.loopexit5, label %49

; <label>:49:                                     ; preds = %46
  %50 = sext i32 %0 to i64
  %51 = getelementptr %struct.WEP_data, %struct.WEP_data* @wep, i32 0, i32 5
  %52 = getelementptr inbounds [64 x i32], [64 x i32]* %51, i64 0, i64 %50
  store i32 1, i32* %52, align 4
  %53 = sext i32 %0 to i64
  %54 = getelementptr %struct.WEP_data, %struct.WEP_data* @wep, i32 0, i32 5
  %55 = getelementptr inbounds [64 x i32], [64 x i32]* %54, i64 0, i64 %53
  %56 = load i32, i32* %55, align 4
  %57 = icmp slt i32 %56, 256
  br i1 %57, label %.lr.ph26.preheader, label %.loopexit10

.lr.ph26.preheader:                               ; preds = %49
  %58 = sext i32 %0 to i64
  %59 = getelementptr %struct.WEP_data, %struct.WEP_data* @wep, i32 0, i32 5
  %60 = getelementptr inbounds [64 x i32], [64 x i32]* %59, i64 0, i64 %58
  %61 = sext i32 %0 to i64
  %62 = getelementptr inbounds [64 x [256 x %struct.vote]], [64 x [256 x %struct.vote]]* getelementptr inbounds (%struct.WEP_data, %struct.WEP_data* @wep, i64 0, i32 7), i64 0, i64 %61
  %63 = sext i32 %0 to i64
  %64 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds (%struct.WEP_data, %struct.WEP_data* @wep, i64 0, i32 5), i64 0, i64 %63
  %65 = sext i32 %0 to i64
  %66 = getelementptr inbounds [64 x [256 x %struct.vote]], [64 x [256 x %struct.vote]]* getelementptr inbounds (%struct.WEP_data, %struct.WEP_data* @wep, i64 0, i32 7), i64 0, i64 %65
  %67 = getelementptr inbounds [256 x %struct.vote], [256 x %struct.vote]* %66, i64 0, i64 0
  %68 = getelementptr inbounds %struct.vote, %struct.vote* %67, i32 0, i32 1
  br label %.lr.ph26

.lr.ph26:                                         ; preds = %.lr.ph26.preheader, %80
  call void @unroll_loop(i32 66)
  %69 = load i32, i32* %64, align 4
  %70 = sext i32 %69 to i64
  %71 = getelementptr inbounds [256 x %struct.vote], [256 x %struct.vote]* %62, i64 0, i64 %70
  %72 = getelementptr inbounds %struct.vote, %struct.vote* %71, i32 0, i32 1
  %73 = load i32, i32* %72, align 4
  %74 = sitofp i32 %73 to float
  %75 = load i32, i32* %68, align 4
  %76 = sitofp i32 %75 to float
  %77 = load float, float* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 12), align 4
  %78 = fdiv float %76, %77
  %79 = fcmp olt float %74, %78
  br i1 %79, label %.loopexit10.loopexit, label %80

; <label>:80:                                     ; preds = %.lr.ph26
  %81 = load i32, i32* %60, align 4
  %82 = add nsw i32 %81, 1
  store i32 %82, i32* %60, align 4
  %83 = load i32, i32* %55, align 4
  %84 = icmp slt i32 %83, 256
  br i1 %84, label %.lr.ph26, label %.loopexit10.loopexit

.loopexit10.loopexit:                             ; preds = %.lr.ph26, %80
  br label %.loopexit10

.loopexit10:                                      ; preds = %.loopexit10.loopexit, %49
  %85 = sext i32 %0 to i64
  %86 = getelementptr %struct.WEP_data, %struct.WEP_data* @wep, i32 0, i32 6
  %87 = getelementptr inbounds [64 x i32], [64 x i32]* %86, i64 0, i64 %85
  store i32 0, i32* %87, align 4
  %88 = sext i32 %0 to i64
  %89 = getelementptr %struct.WEP_data, %struct.WEP_data* @wep, i32 0, i32 6
  %90 = getelementptr inbounds [64 x i32], [64 x i32]* %89, i64 0, i64 %88
  %91 = load i32, i32* %90, align 4
  %92 = sext i32 %0 to i64
  %93 = getelementptr %struct.WEP_data, %struct.WEP_data* @wep, i32 0, i32 5
  %94 = getelementptr inbounds [64 x i32], [64 x i32]* %93, i64 0, i64 %92
  %95 = load i32, i32* %94, align 4
  %96 = icmp slt i32 %91, %95
  br i1 %96, label %.lr.ph23.preheader, label %._crit_edge24

.lr.ph23.preheader:                               ; preds = %.loopexit10
  %97 = sext i32 %0 to i64
  %98 = getelementptr inbounds [64 x [256 x %struct.vote]], [64 x [256 x %struct.vote]]* getelementptr inbounds (%struct.WEP_data, %struct.WEP_data* @wep, i64 0, i32 7), i64 0, i64 %97
  %99 = sext i32 %0 to i64
  %100 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds (%struct.WEP_data, %struct.WEP_data* @wep, i64 0, i32 6), i64 0, i64 %99
  %101 = sext i32 %0 to i64
  %102 = getelementptr inbounds [64 x i8], [64 x i8]* getelementptr inbounds (%struct.WEP_data, %struct.WEP_data* @wep, i64 0, i32 0), i64 0, i64 %101
  %103 = icmp eq i32 %0, 4
  %104 = sext i32 %0 to i64
  %105 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds (%struct.WEP_data, %struct.WEP_data* @wep, i64 0, i32 6), i64 0, i64 %104
  %106 = add nsw i32 %0, 1
  %107 = getelementptr inbounds [4 x i8], [4 x i8]* %2, i32 0, i32 0
  %108 = getelementptr inbounds [4 x i8], [4 x i8]* %2, i32 0, i32 0
  %109 = getelementptr inbounds [4 x i8], [4 x i8]* %2, i64 0, i64 0
  %110 = getelementptr inbounds [4 x i8], [4 x i8]* %2, i32 0, i32 0
  %111 = getelementptr inbounds [4 x i8], [4 x i8]* %2, i64 0, i64 0
  %112 = getelementptr inbounds [4 x i8], [4 x i8]* %2, i32 0, i32 0
  %113 = getelementptr inbounds [4 x i8], [4 x i8]* %2, i32 0, i32 0
  %114 = getelementptr inbounds [4 x i8], [4 x i8]* %2, i64 0, i64 0
  %115 = getelementptr inbounds [4 x i8], [4 x i8]* %2, i32 0, i32 0
  %116 = add nsw i32 %0, 1
  %117 = add nsw i32 %0, 1
  %118 = add nsw i32 %0, 1
  %119 = add nsw i32 %0, 1
  br label %.lr.ph23

.lr.ph23:                                         ; preds = %.lr.ph23.preheader, %.loopexit11
  call void @unroll_loop(i32 67)
  %120 = call i32 @update_ivbuf()
  switch i32 %120, label %121 [
    i32 1, label %.loopexit22
    i32 2, label %.loopexit5.loopexit10
  ]

; <label>:121:                                    ; preds = %.lr.ph23
  %122 = load i32, i32* %100, align 4
  %123 = sext i32 %122 to i64
  %124 = getelementptr inbounds [256 x %struct.vote], [256 x %struct.vote]* %98, i64 0, i64 %123
  %125 = getelementptr inbounds %struct.vote, %struct.vote* %124, i32 0, i32 0
  %126 = load i32, i32* %125, align 8
  %127 = trunc i32 %126 to i8
  store i8 %127, i8* %102, align 1
  %128 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 6), align 8
  %129 = icmp ne i32 %128, 0
  br i1 %129, label %131, label %130

; <label>:130:                                    ; preds = %121
  call void @show_wep_stats(i32 %0, i32 0, [256 x %struct.PTW_tableentry]* null, i32* null, i32* null, i32 0)
  br label %131

; <label>:131:                                    ; preds = %130, %121
  br i1 %103, label %132, label %140

; <label>:132:                                    ; preds = %131
  %133 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %134 = icmp eq i32 %133, 13
  br i1 %134, label %135, label %140

; <label>:135:                                    ; preds = %132
  %136 = call i32 @check_wep_key(i8* getelementptr inbounds (%struct.WEP_data, %struct.WEP_data* @wep, i64 0, i32 0, i64 0), i32 %0, i32 5)
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %138, label %140

; <label>:138:                                    ; preds = %135
  %139 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 10
  store i32 5, i32* %139, align 4
  br label %.loopexit5

; <label>:140:                                    ; preds = %135, %132, %131
  %141 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 17), align 8
  %142 = add nsw i32 %0, %141
  %143 = add nsw i32 %142, 1
  %144 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %145 = icmp eq i32 %143, %144
  br i1 %145, label %146, label %343

; <label>:146:                                    ; preds = %140
  %147 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 17), align 8
  %148 = icmp ne i32 %147, 0
  br i1 %148, label %149, label %343

; <label>:149:                                    ; preds = %146
  %150 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 40), align 8
  %151 = icmp eq i32 %150, 1
  br i1 %151, label %.preheader20.preheader, label %.loopexit21

.preheader20.preheader:                           ; preds = %149
  br label %.preheader20

.preheader20:                                     ; preds = %.preheader20.preheader, %.backedge
  call void @unroll_loop(i32 68)
  call void @show_wep_stats(i32 %0, i32 1, [256 x %struct.PTW_tableentry]* null, i32* null, i32* null, i32 0)
  %152 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.48, i64 0, i64 0))
  call void @llvm.memset.p0i8.i64(i8* align 1 %107, i8 0, i64 4, i1 false)
  %153 = call i32 @readLine(i8* %108, i32 3)
  %154 = load i8, i8* %109, align 1
  %155 = sext i8 %154 to i32
  %156 = icmp eq i32 %155, 0
  %157 = icmp eq i32 %153, 0
  %or.cond = or i1 %156, %157
  br i1 %or.cond, label %.loopexit21.loopexit, label %158

; <label>:158:                                    ; preds = %.preheader20
  %159 = call i32 @atoi(i8* %110) #10
  %160 = call i16** @__ctype_b_loc() #13
  %161 = load i16*, i16** %160, align 8
  %162 = load i8, i8* %111, align 1
  %163 = sext i8 %162 to i32
  %164 = sext i32 %163 to i64
  %165 = getelementptr inbounds i16, i16* %161, i64 %164
  %166 = load i16, i16* %165, align 2
  %167 = zext i16 %166 to i32
  %168 = and i32 %167, 2048
  %169 = icmp eq i32 %168, 0
  %170 = icmp slt i32 %159, 0
  %or.cond1 = or i1 %169, %170
  br i1 %or.cond1, label %.backedge, label %171

; <label>:171:                                    ; preds = %158
  %172 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %173 = icmp sge i32 %159, %172
  br i1 %173, label %.backedge, label %174

; <label>:174:                                    ; preds = %171
  %175 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([81 x i8], [81 x i8]* @.str.49, i64 0, i64 0))
  call void @llvm.memset.p0i8.i64(i8* align 1 %112, i8 0, i64 4, i1 false)
  %176 = call i32 @readLine(i8* %113, i32 3)
  %177 = load i8, i8* %114, align 1
  %178 = sext i8 %177 to i32
  %179 = icmp eq i32 %178, 0
  %180 = icmp eq i32 %176, 0
  %or.cond2 = or i1 %179, %180
  br i1 %or.cond2, label %.backedge, label %181

; <label>:181:                                    ; preds = %174
  %182 = call i32 @hexToInt(i8* %115, i32 %176)
  %183 = icmp slt i32 %182, 0
  %184 = icmp sgt i32 %182, 255
  %or.cond3 = or i1 %183, %184
  br i1 %or.cond3, label %.backedge, label %185

; <label>:185:                                    ; preds = %181
  %186 = trunc i32 %182 to i8
  %187 = call i32 @remove_votes(i32 %159, i8 zeroext %186)
  br label %.backedge

.backedge:                                        ; preds = %181, %174, %158, %171, %185
  br label %.preheader20

.loopexit21.loopexit:                             ; preds = %.preheader20
  br label %.loopexit21

.loopexit21:                                      ; preds = %.loopexit21.loopexit, %149
  %188 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 5), align 4
  %189 = icmp eq i32 %188, 1
  br i1 %189, label %193, label %190

; <label>:190:                                    ; preds = %.loopexit21
  %191 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 18), align 4
  %192 = icmp eq i32 %191, 0
  br i1 %192, label %193, label %282

; <label>:193:                                    ; preds = %190, %.loopexit21
  %194 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 17), align 8
  %195 = icmp eq i32 %194, 4
  br i1 %195, label %.preheader.preheader, label %228

.preheader.preheader:                             ; preds = %193
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %225
  %.0521 = phi i32 [ %226, %225 ], [ 0, %.preheader.preheader ]
  call void @unroll_loop(i32 69)
  %196 = trunc i32 %.0521 to i8
  %197 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 31, i64 0), align 4
  %198 = sext i32 %197 to i64
  %199 = getelementptr inbounds [64 x i8], [64 x i8]* getelementptr inbounds (%struct.WEP_data, %struct.WEP_data* @wep, i64 0, i32 0), i64 0, i64 %198
  store i8 %196, i8* %199, align 1
  br label %200

; <label>:200:                                    ; preds = %.preheader, %222
  %.0620 = phi i32 [ 0, %.preheader ], [ %223, %222 ]
  call void @unroll_loop(i32 70)
  %201 = trunc i32 %.0620 to i8
  %202 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 31, i64 1), align 4
  %203 = sext i32 %202 to i64
  %204 = getelementptr inbounds [64 x i8], [64 x i8]* getelementptr inbounds (%struct.WEP_data, %struct.WEP_data* @wep, i64 0, i32 0), i64 0, i64 %203
  store i8 %201, i8* %204, align 1
  br label %205

; <label>:205:                                    ; preds = %200, %219
  %.0119 = phi i32 [ 0, %200 ], [ %220, %219 ]
  call void @unroll_loop(i32 71)
  %206 = trunc i32 %.0119 to i8
  %207 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 31, i64 2), align 4
  %208 = sext i32 %207 to i64
  %209 = getelementptr inbounds [64 x i8], [64 x i8]* getelementptr inbounds (%struct.WEP_data, %struct.WEP_data* @wep, i64 0, i32 0), i64 0, i64 %208
  store i8 %206, i8* %209, align 1
  br label %210

; <label>:210:                                    ; preds = %205, %216
  %.0218 = phi i32 [ 0, %205 ], [ %217, %216 ]
  call void @unroll_loop(i32 72)
  %211 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 31, i64 3), align 4
  %212 = sext i32 %211 to i64
  %213 = getelementptr inbounds [64 x i8], [64 x i8]* getelementptr inbounds (%struct.WEP_data, %struct.WEP_data* @wep, i64 0, i32 0), i64 0, i64 %212
  %tmp16 = trunc i32 %.0218 to i8
  store i8 %tmp16, i8* %213, align 1
  %214 = call i32 @check_wep_key(i8* getelementptr inbounds (%struct.WEP_data, %struct.WEP_data* @wep, i64 0, i32 0, i64 0), i32 %116, i32 0)
  %215 = icmp eq i32 %214, 0
  br i1 %215, label %.loopexit5.loopexit, label %216

; <label>:216:                                    ; preds = %210
  %217 = add nuw nsw i32 %.0218, 1
  %218 = icmp ult i32 %217, 256
  br i1 %218, label %210, label %219

; <label>:219:                                    ; preds = %216
  %220 = add nuw nsw i32 %.0119, 1
  %221 = icmp ult i32 %220, 256
  br i1 %221, label %205, label %222

; <label>:222:                                    ; preds = %219
  %223 = add nuw nsw i32 %.0620, 1
  %224 = icmp ult i32 %223, 256
  br i1 %224, label %200, label %225

; <label>:225:                                    ; preds = %222
  %226 = add nuw nsw i32 %.0521, 1
  %227 = icmp ult i32 %226, 256
  br i1 %227, label %.preheader, label %.loopexit11.loopexit

; <label>:228:                                    ; preds = %193
  %229 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 17), align 8
  %230 = icmp eq i32 %229, 3
  br i1 %230, label %.preheader12.preheader, label %255

.preheader12.preheader:                           ; preds = %228
  br label %.preheader12

.preheader12:                                     ; preds = %.preheader12.preheader, %252
  %.1717 = phi i32 [ %253, %252 ], [ 0, %.preheader12.preheader ]
  call void @unroll_loop(i32 73)
  %231 = trunc i32 %.1717 to i8
  %232 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 31, i64 0), align 4
  %233 = sext i32 %232 to i64
  %234 = getelementptr inbounds [64 x i8], [64 x i8]* getelementptr inbounds (%struct.WEP_data, %struct.WEP_data* @wep, i64 0, i32 0), i64 0, i64 %233
  store i8 %231, i8* %234, align 1
  br label %235

; <label>:235:                                    ; preds = %.preheader12, %249
  %.116 = phi i32 [ 0, %.preheader12 ], [ %250, %249 ]
  call void @unroll_loop(i32 74)
  %236 = trunc i32 %.116 to i8
  %237 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 31, i64 1), align 4
  %238 = sext i32 %237 to i64
  %239 = getelementptr inbounds [64 x i8], [64 x i8]* getelementptr inbounds (%struct.WEP_data, %struct.WEP_data* @wep, i64 0, i32 0), i64 0, i64 %238
  store i8 %236, i8* %239, align 1
  br label %240

; <label>:240:                                    ; preds = %235, %246
  %.1315 = phi i32 [ 0, %235 ], [ %247, %246 ]
  call void @unroll_loop(i32 75)
  %241 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 31, i64 2), align 4
  %242 = sext i32 %241 to i64
  %243 = getelementptr inbounds [64 x i8], [64 x i8]* getelementptr inbounds (%struct.WEP_data, %struct.WEP_data* @wep, i64 0, i32 0), i64 0, i64 %242
  %tmp15 = trunc i32 %.1315 to i8
  store i8 %tmp15, i8* %243, align 1
  %244 = call i32 @check_wep_key(i8* getelementptr inbounds (%struct.WEP_data, %struct.WEP_data* @wep, i64 0, i32 0, i64 0), i32 %117, i32 0)
  %245 = icmp eq i32 %244, 0
  br i1 %245, label %.loopexit5.loopexit1, label %246

; <label>:246:                                    ; preds = %240
  %247 = add nuw nsw i32 %.1315, 1
  %248 = icmp ult i32 %247, 256
  br i1 %248, label %240, label %249

; <label>:249:                                    ; preds = %246
  %250 = add nuw nsw i32 %.116, 1
  %251 = icmp ult i32 %250, 256
  br i1 %251, label %235, label %252

; <label>:252:                                    ; preds = %249
  %253 = add nuw nsw i32 %.1717, 1
  %254 = icmp ult i32 %253, 256
  br i1 %254, label %.preheader12, label %.loopexit11.loopexit5

; <label>:255:                                    ; preds = %228
  %256 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 17), align 8
  %257 = icmp eq i32 %256, 2
  br i1 %257, label %.preheader14.preheader, label %.preheader16.preheader

.preheader16.preheader:                           ; preds = %255
  br label %.preheader16

.preheader14.preheader:                           ; preds = %255
  br label %.preheader14

.preheader14:                                     ; preds = %.preheader14.preheader, %271
  %.214 = phi i32 [ %272, %271 ], [ 0, %.preheader14.preheader ]
  call void @unroll_loop(i32 76)
  %258 = trunc i32 %.214 to i8
  %259 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 31, i64 0), align 4
  %260 = sext i32 %259 to i64
  %261 = getelementptr inbounds [64 x i8], [64 x i8]* getelementptr inbounds (%struct.WEP_data, %struct.WEP_data* @wep, i64 0, i32 0), i64 0, i64 %260
  store i8 %258, i8* %261, align 1
  br label %262

; <label>:262:                                    ; preds = %.preheader14, %268
  %.2413 = phi i32 [ 0, %.preheader14 ], [ %269, %268 ]
  call void @unroll_loop(i32 77)
  %263 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 31, i64 1), align 4
  %264 = sext i32 %263 to i64
  %265 = getelementptr inbounds [64 x i8], [64 x i8]* getelementptr inbounds (%struct.WEP_data, %struct.WEP_data* @wep, i64 0, i32 0), i64 0, i64 %264
  %tmp14 = trunc i32 %.2413 to i8
  store i8 %tmp14, i8* %265, align 1
  %266 = call i32 @check_wep_key(i8* getelementptr inbounds (%struct.WEP_data, %struct.WEP_data* @wep, i64 0, i32 0, i64 0), i32 %118, i32 0)
  %267 = icmp eq i32 %266, 0
  br i1 %267, label %.loopexit5.loopexit3, label %268

; <label>:268:                                    ; preds = %262
  %269 = add nuw nsw i32 %.2413, 1
  %270 = icmp ult i32 %269, 256
  br i1 %270, label %262, label %271

; <label>:271:                                    ; preds = %268
  %272 = add nuw nsw i32 %.214, 1
  %273 = icmp ult i32 %272, 256
  br i1 %273, label %.preheader14, label %.loopexit11.loopexit6

.preheader16:                                     ; preds = %.preheader16.preheader, %279
  %.312 = phi i32 [ %280, %279 ], [ 0, %.preheader16.preheader ]
  call void @unroll_loop(i32 78)
  %274 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 31, i64 0), align 4
  %275 = sext i32 %274 to i64
  %276 = getelementptr inbounds [64 x i8], [64 x i8]* getelementptr inbounds (%struct.WEP_data, %struct.WEP_data* @wep, i64 0, i32 0), i64 0, i64 %275
  %tmp = trunc i32 %.312 to i8
  store i8 %tmp, i8* %276, align 1
  %277 = call i32 @check_wep_key(i8* getelementptr inbounds (%struct.WEP_data, %struct.WEP_data* @wep, i64 0, i32 0, i64 0), i32 %119, i32 0)
  %278 = icmp eq i32 %277, 0
  br i1 %278, label %.loopexit5.loopexit7, label %279

; <label>:279:                                    ; preds = %.preheader16
  %280 = add nuw nsw i32 %.312, 1
  %281 = icmp ult i32 %280, 256
  br i1 %281, label %.preheader16, label %.loopexit11.loopexit9

; <label>:282:                                    ; preds = %190
  %283 = load i32, i32* @do_wep_crack1.k, align 4
  %284 = add nsw i32 %283, 1
  %285 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 5), align 4
  %286 = srem i32 %284, %285
  store i32 %286, i32* @do_wep_crack1.k, align 4
  br label %287

; <label>:287:                                    ; preds = %331, %282
  call void @unroll_loop(i32 79)
  call void @unroll_loop(i32 80)
  %288 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 5), align 4
  %289 = icmp slt i32 0, %288
  br i1 %289, label %.lr.ph31.preheader, label %.loopexit

.lr.ph31.preheader:                               ; preds = %287
  br label %.lr.ph31

.lr.ph31:                                         ; preds = %.lr.ph31.preheader, %302
  %.0829 = phi i32 [ %304, %302 ], [ 0, %.lr.ph31.preheader ]
  %290 = load i32, i32* @wepkey_crack_success, align 4
  %291 = icmp ne i32 %290, 0
  %292 = xor i1 %291, true
  br i1 %292, label %293, label %.lr.ph31..loopexit.loopexit_crit_edge

; <label>:293:                                    ; preds = %.lr.ph31
  %294 = load i32, i32* @do_wep_crack1.k, align 4
  %295 = add i32 %.0829, %294
  %296 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 5), align 4
  %297 = srem i32 %295, %296
  %298 = sext i32 %297 to i64
  %299 = getelementptr inbounds [256 x i32], [256 x i32]* @bf_nkeys, i64 0, i64 %298
  %300 = load i32, i32* %299, align 4
  %301 = icmp sgt i32 %300, 16
  br i1 %301, label %302, label %307

; <label>:302:                                    ; preds = %293
  %303 = call i32 @usleep(i32 1)
  %304 = add nuw nsw i32 %.0829, 1
  call void @unroll_loop(i32 80)
  %305 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 5), align 4
  %306 = icmp slt i32 %304, %305
  br i1 %306, label %.lr.ph31, label %.loopexit.loopexitsplit

; <label>:307:                                    ; preds = %293
  %.08.lcssa9 = phi i32 [ %.0829, %293 ]
  %308 = load i32, i32* @do_wep_crack1.k, align 4
  %309 = add nsw i32 %.08.lcssa9, %308
  %310 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 5), align 4
  %311 = srem i32 %309, %310
  %312 = sext i32 %311 to i64
  %313 = getelementptr inbounds [256 x i32], [256 x i32]* @bf_nkeys, i64 0, i64 %312
  %314 = load i32, i32* %313, align 4
  %315 = add nsw i32 %314, 1
  store i32 %315, i32* %313, align 4
  %316 = load i32, i32* @do_wep_crack1.k, align 4
  %317 = add nsw i32 %.08.lcssa9, %316
  %318 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 5), align 4
  %319 = srem i32 %317, %318
  %320 = sext i32 %319 to i64
  %321 = getelementptr inbounds [256 x [2 x i32]], [256 x [2 x i32]]* @bf_pipe, i64 0, i64 %320
  %322 = getelementptr inbounds [2 x i32], [2 x i32]* %321, i64 0, i64 1
  %323 = load i32, i32* %322, align 4
  %324 = call i32 @safe_write(i32 %323, i8* getelementptr inbounds (%struct.WEP_data, %struct.WEP_data* @wep, i64 0, i32 0, i64 0), i64 64)
  %325 = icmp ne i32 %324, 64
  br i1 %325, label %326, label %.loopexit

; <label>:326:                                    ; preds = %307
  %327 = getelementptr [17 x i8], [17 x i8]* @.str.50, i32 0, i32 0
  call void @perror(i8* %327)
  %328 = call i32 @kill(i32 0, i32 15) #9
  call void @_exit(i32 1) #12
  unreachable

.loopexit.loopexitsplit:                          ; preds = %302
  br label %.loopexit.loopexit

.lr.ph31..loopexit.loopexit_crit_edge:            ; preds = %.lr.ph31
  br label %.loopexit.loopexit

.loopexit.loopexit:                               ; preds = %.loopexit.loopexitsplit, %.lr.ph31..loopexit.loopexit_crit_edge
  %.08.lcssa.ph = phi i32 [ %.0829, %.lr.ph31..loopexit.loopexit_crit_edge ], [ %304, %.loopexit.loopexitsplit ]
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit.loopexit, %287, %307
  %.08.lcssa = phi i32 [ %.08.lcssa9, %307 ], [ 0, %287 ], [ %.08.lcssa.ph, %.loopexit.loopexit ]
  %329 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 5), align 4
  %330 = icmp sge i32 %.08.lcssa, %329
  br i1 %330, label %331, label %.critedge

; <label>:331:                                    ; preds = %.loopexit
  %332 = load i32, i32* @wepkey_crack_success, align 4
  %333 = icmp ne i32 %332, 0
  %334 = xor i1 %333, true
  br i1 %334, label %287, label %.critedge

.critedge:                                        ; preds = %.loopexit, %331
  %335 = load i32, i32* @wepkey_crack_success, align 4
  %336 = icmp ne i32 %335, 0
  br i1 %336, label %337, label %.loopexit11

; <label>:337:                                    ; preds = %.critedge
  %338 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 10
  %339 = load i32, i32* %338, align 4
  %340 = sext i32 %339 to i64
  %341 = getelementptr %struct.WEP_data, %struct.WEP_data* @wep, i32 0, i32 0, i32 0
  %342 = getelementptr [64 x i8], [64 x i8]* @bf_wepkey, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %341, i8* align 16 %342, i64 %340, i1 false), !track !178
  br label %.loopexit5

; <label>:343:                                    ; preds = %146, %140
  %344 = call i32 @do_wep_crack1(i32 %106)
  switch i32 %344, label %.loopexit11 [
    i32 0, label %.loopexit22
    i32 2, label %.loopexit5.loopexit10
  ]

.loopexit11.loopexit:                             ; preds = %225
  br label %.loopexit11

.loopexit11.loopexit5:                            ; preds = %252
  br label %.loopexit11

.loopexit11.loopexit6:                            ; preds = %271
  br label %.loopexit11

.loopexit11.loopexit9:                            ; preds = %279
  br label %.loopexit11

.loopexit11:                                      ; preds = %.loopexit11.loopexit9, %.loopexit11.loopexit6, %.loopexit11.loopexit5, %.loopexit11.loopexit, %.critedge, %343
  %345 = load i32, i32* %105, align 4
  %346 = add nsw i32 %345, 1
  store i32 %346, i32* %105, align 4
  %347 = load i32, i32* %90, align 4
  %348 = load i32, i32* %94, align 4
  %349 = icmp slt i32 %347, %348
  br i1 %349, label %.lr.ph23, label %._crit_edge24.loopexit

._crit_edge24.loopexit:                           ; preds = %.loopexit11
  br label %._crit_edge24

._crit_edge24:                                    ; preds = %._crit_edge24.loopexit, %.loopexit10
  %350 = icmp eq i32 %0, 0
  br i1 %350, label %351, label %.loopexit5

; <label>:351:                                    ; preds = %._crit_edge24
  %352 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 5
  %353 = load i32, i32* %352, align 4
  %354 = icmp slt i32 0, %353
  br i1 %354, label %.lr.ph.preheader, label %._crit_edge

.lr.ph.preheader:                                 ; preds = %351
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %.critedge4
  %indvars.iv = phi i64 [ %indvars.iv.next, %.critedge4 ], [ 0, %.lr.ph.preheader ]
  call void @unroll_loop(i32 81)
  call void @unroll_loop(i32 82)
  %355 = getelementptr inbounds [256 x i32], [256 x i32]* @bf_nkeys, i64 0, i64 %indvars.iv
  %356 = load i32, i32* %355, align 4
  %357 = icmp sgt i32 %356, 0
  br i1 %357, label %.lr.ph27.preheader, label %.critedge4

.lr.ph27.preheader:                               ; preds = %.lr.ph
  br label %.lr.ph27

.lr.ph27:                                         ; preds = %.lr.ph27.preheader, %361
  %358 = load i32, i32* @wepkey_crack_success, align 4
  %359 = icmp ne i32 %358, 0
  %360 = xor i1 %359, true
  br i1 %360, label %361, label %.critedge4.loopexit

; <label>:361:                                    ; preds = %.lr.ph27
  %362 = call i32 @usleep(i32 1)
  call void @unroll_loop(i32 82)
  %363 = load i32, i32* %355, align 4
  %364 = icmp sgt i32 %363, 0
  br i1 %364, label %.lr.ph27, label %.critedge4.loopexit

.critedge4.loopexit:                              ; preds = %.lr.ph27, %361
  br label %.critedge4

.critedge4:                                       ; preds = %.critedge4.loopexit, %.lr.ph
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %365 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 5), align 4
  %366 = sext i32 %365 to i64
  %367 = icmp slt i64 %indvars.iv.next, %366
  br i1 %367, label %.lr.ph, label %._crit_edge.loopexit

._crit_edge.loopexit:                             ; preds = %.critedge4
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %351
  %368 = load i32, i32* @wepkey_crack_success, align 4
  %369 = icmp ne i32 %368, 0
  br i1 %369, label %370, label %.loopexit5

; <label>:370:                                    ; preds = %._crit_edge
  %371 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 10
  %372 = load i32, i32* %371, align 4
  %373 = sext i32 %372 to i64
  %374 = getelementptr %struct.WEP_data, %struct.WEP_data* @wep, i32 0, i32 0, i32 0
  %375 = getelementptr [64 x i8], [64 x i8]* @bf_wepkey, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %374, i8* align 16 %375, i64 %373, i1 false), !track !179
  br label %.loopexit5

.loopexit22:                                      ; preds = %.lr.ph23, %343
  %.0.ph23 = phi i32 [ 0, %343 ], [ 1, %.lr.ph23 ]
  br label %.loopexit5

.loopexit24:                                      ; preds = %3
  %.0.ph25 = phi i32 [ 1, %3 ]
  br label %.loopexit5

.loopexit5.loopexit:                              ; preds = %210
  %.0.ph = phi i32 [ 0, %210 ]
  br label %.loopexit5

.loopexit5.loopexit1:                             ; preds = %240
  %.0.ph2 = phi i32 [ 0, %240 ]
  br label %.loopexit5

.loopexit5.loopexit3:                             ; preds = %262
  %.0.ph4 = phi i32 [ 0, %262 ]
  br label %.loopexit5

.loopexit5.loopexit7:                             ; preds = %.preheader16
  %.0.ph8 = phi i32 [ 0, %.preheader16 ]
  br label %.loopexit5

.loopexit5.loopexit10:                            ; preds = %.lr.ph23, %343
  %.0.ph11 = phi i32 [ 2, %343 ], [ 2, %.lr.ph23 ]
  br label %.loopexit5

.loopexit5.loopexit12:                            ; preds = %3
  %.0.ph13 = phi i32 [ 2, %3 ]
  br label %.loopexit5

.loopexit5:                                       ; preds = %.loopexit5.loopexit12, %.loopexit5.loopexit10, %.loopexit5.loopexit7, %.loopexit5.loopexit3, %.loopexit5.loopexit1, %.loopexit5.loopexit, %.loopexit24, %.loopexit22, %._crit_edge24, %._crit_edge, %46, %370, %337, %138, %43
  %.0 = phi i32 [ %45, %43 ], [ 0, %138 ], [ 0, %337 ], [ 0, %370 ], [ 1, %46 ], [ 1, %._crit_edge ], [ 1, %._crit_edge24 ], [ %.0.ph23, %.loopexit22 ], [ %.0.ph25, %.loopexit24 ], [ %.0.ph, %.loopexit5.loopexit ], [ %.0.ph2, %.loopexit5.loopexit1 ], [ %.0.ph4, %.loopexit5.loopexit3 ], [ %.0.ph8, %.loopexit5.loopexit7 ], [ %.0.ph11, %.loopexit5.loopexit10 ], [ %.0.ph13, %.loopexit5.loopexit12 ]
  ret i32 %.0
}

declare dso_local i32 @sleep(i32) #1

; Function Attrs: nounwind readonly
declare dso_local i32 @atoi(i8*) #3

; Function Attrs: nounwind readnone
declare dso_local i16** @__ctype_b_loc() #7

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @do_wep_crack2(i32) #0 {
  %2 = call i32 @update_ivbuf()
  switch i32 %2, label %4 [
    i32 1, label %._crit_edge8
    i32 2, label %3
  ]

; <label>:3:                                      ; preds = %1
  br label %._crit_edge8

; <label>:4:                                      ; preds = %1
  %5 = getelementptr %struct.WEP_data, %struct.WEP_data* @wep, i32 0, i32 4
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 10
  %8 = load i32, i32* %7, align 4
  %9 = sext i32 %8 to i64
  %10 = sdiv i64 %6, %9
  %11 = icmp slt i64 %10, 60000
  br i1 %11, label %12, label %19

; <label>:12:                                     ; preds = %4
  %13 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 10
  %14 = load i32, i32* %13, align 4
  %15 = mul nsw i32 %14, 60000
  %16 = getelementptr [123 x i8], [123 x i8]* @.str.51, i32 0, i32 0
  %17 = call i32 (i8*, ...) @printf(i8* %16, i32 %15)
  %18 = call i32 @kill(i32 0, i32 15) #9
  call void @_exit(i32 1) #12
  unreachable

; <label>:19:                                     ; preds = %4
  %20 = icmp sle i32 0, %0
  br i1 %20, label %.lr.ph13, label %._crit_edge14

.lr.ph13:                                         ; preds = %19
  %21 = sext i32 %0 to i64
  br label %22

; <label>:22:                                     ; preds = %.lr.ph13, %35
  %lsr.iv = phi %struct.WEP_data* [ bitcast (%struct.vote* getelementptr inbounds (%struct.WEP_data, %struct.WEP_data* @wep, i64 0, i32 7, i64 0, i64 0) to %struct.WEP_data*), %.lr.ph13 ], [ %36, %35 ]
  %indvars.iv15 = phi i64 [ 0, %.lr.ph13 ], [ %indvars.iv.next16, %35 ]
  %indvars.iv1525 = inttoptr i64 %indvars.iv15 to i8*
  %lsr.iv24 = bitcast %struct.WEP_data* %lsr.iv to i32*
  call void @unroll_loop(i32 63)
  %tmp21 = trunc i64 %indvars.iv15 to i32
  %23 = call i32 @calc_poll(i32 %tmp21)
  %24 = icmp ne i32 %23, 0
  br i1 %24, label %._crit_edge8.loopexit6, label %25

; <label>:25:                                     ; preds = %22
  %26 = load i32, i32* %lsr.iv24, align 8
  %27 = trunc i32 %26 to i8
  %scevgep26 = getelementptr %struct.WEP_data, %struct.WEP_data* @wep, i64 0, i32 0, i64 %indvars.iv15
  store i8 %27, i8* %scevgep26, align 1
  %28 = shl i64 %indvars.iv15, 2
  %29 = inttoptr i64 %28 to i32*
  %scevgep27 = getelementptr %struct.WEP_data, %struct.WEP_data* @wep, i64 0, i32 0, i64 %28
  %scevgep2728 = bitcast i8* %scevgep27 to i32*
  %scevgep29 = getelementptr i32, i32* %scevgep2728, i64 24
  store i32 1, i32* %scevgep29, align 4
  %30 = shl i64 %indvars.iv15, 2
  %31 = inttoptr i64 %30 to i32*
  %scevgep30 = getelementptr %struct.WEP_data, %struct.WEP_data* @wep, i64 0, i32 0, i64 %30
  %scevgep3031 = bitcast i8* %scevgep30 to i32*
  %scevgep32 = getelementptr i32, i32* %scevgep3031, i64 88
  store i32 0, i32* %scevgep32, align 4
  %32 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 6), align 8
  %33 = icmp ne i32 %32, 0
  br i1 %33, label %35, label %34

; <label>:34:                                     ; preds = %25
  %tmp22 = trunc i64 %indvars.iv15 to i32
  call void @show_wep_stats(i32 %tmp22, i32 0, [256 x %struct.PTW_tableentry]* null, i32* null, i32* null, i32 0)
  br label %35

; <label>:35:                                     ; preds = %25, %34
  %indvars.iv.next16 = add nuw nsw i64 %indvars.iv15, 1
  %scevgep23 = getelementptr %struct.WEP_data, %struct.WEP_data* %lsr.iv, i64 0, i32 7, i64 0, i64 180
  %36 = bitcast %struct.vote* %scevgep23 to %struct.WEP_data*
  %37 = icmp sle i64 %indvars.iv.next16, %21
  br i1 %37, label %22, label %._crit_edge14.loopexit

._crit_edge14.loopexit:                           ; preds = %35
  br label %._crit_edge14

._crit_edge14:                                    ; preds = %._crit_edge14.loopexit, %19
  %38 = sext i32 %0 to i64
  %39 = getelementptr %struct.WEP_data, %struct.WEP_data* @wep, i32 0, i32 5
  %40 = getelementptr inbounds [64 x i32], [64 x i32]* %39, i64 0, i64 %38
  store i32 1, i32* %40, align 4
  %41 = sext i32 %0 to i64
  %42 = getelementptr %struct.WEP_data, %struct.WEP_data* @wep, i32 0, i32 5
  %43 = getelementptr inbounds [64 x i32], [64 x i32]* %42, i64 0, i64 %41
  %44 = load i32, i32* %43, align 4
  %45 = icmp slt i32 %44, 256
  br i1 %45, label %.lr.ph10.preheader, label %.loopexit

.lr.ph10.preheader:                               ; preds = %._crit_edge14
  %46 = sext i32 %0 to i64
  %47 = getelementptr %struct.WEP_data, %struct.WEP_data* @wep, i32 0, i32 5
  %48 = getelementptr inbounds [64 x i32], [64 x i32]* %47, i64 0, i64 %46
  %49 = sext i32 %0 to i64
  %50 = getelementptr inbounds [64 x [256 x %struct.vote]], [64 x [256 x %struct.vote]]* getelementptr inbounds (%struct.WEP_data, %struct.WEP_data* @wep, i64 0, i32 7), i64 0, i64 %49
  %51 = sext i32 %0 to i64
  %52 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds (%struct.WEP_data, %struct.WEP_data* @wep, i64 0, i32 5), i64 0, i64 %51
  %53 = sext i32 %0 to i64
  %54 = getelementptr inbounds [64 x [256 x %struct.vote]], [64 x [256 x %struct.vote]]* getelementptr inbounds (%struct.WEP_data, %struct.WEP_data* @wep, i64 0, i32 7), i64 0, i64 %53
  %55 = getelementptr inbounds [256 x %struct.vote], [256 x %struct.vote]* %54, i64 0, i64 0
  %56 = getelementptr inbounds %struct.vote, %struct.vote* %55, i32 0, i32 1
  br label %.lr.ph10

.lr.ph10:                                         ; preds = %.lr.ph10.preheader, %68
  call void @unroll_loop(i32 64)
  %57 = load i32, i32* %52, align 4
  %58 = sext i32 %57 to i64
  %59 = getelementptr inbounds [256 x %struct.vote], [256 x %struct.vote]* %50, i64 0, i64 %58
  %60 = getelementptr inbounds %struct.vote, %struct.vote* %59, i32 0, i32 1
  %61 = load i32, i32* %60, align 4
  %62 = sitofp i32 %61 to float
  %63 = load i32, i32* %56, align 4
  %64 = sitofp i32 %63 to float
  %65 = load float, float* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 12), align 4
  %66 = fdiv float %64, %65
  %67 = fcmp olt float %62, %66
  br i1 %67, label %.loopexit.loopexit, label %68

; <label>:68:                                     ; preds = %.lr.ph10
  %69 = load i32, i32* %48, align 4
  %70 = add nsw i32 %69, 1
  store i32 %70, i32* %48, align 4
  %71 = load i32, i32* %43, align 4
  %72 = icmp slt i32 %71, 256
  br i1 %72, label %.lr.ph10, label %.loopexit.loopexit

.loopexit.loopexit:                               ; preds = %.lr.ph10, %68
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit.loopexit, %._crit_edge14
  %73 = sext i32 %0 to i64
  %74 = getelementptr %struct.WEP_data, %struct.WEP_data* @wep, i32 0, i32 6
  %75 = getelementptr inbounds [64 x i32], [64 x i32]* %74, i64 0, i64 %73
  store i32 0, i32* %75, align 4
  %76 = add i32 %0, 1
  %77 = sext i32 %76 to i64
  %78 = sext i32 %0 to i64
  %79 = getelementptr %struct.WEP_data, %struct.WEP_data* @wep, i32 0, i32 6
  %80 = getelementptr inbounds [64 x i32], [64 x i32]* %79, i64 0, i64 %78
  %81 = load i32, i32* %80, align 4
  %82 = sext i32 %0 to i64
  %83 = getelementptr %struct.WEP_data, %struct.WEP_data* @wep, i32 0, i32 5
  %84 = getelementptr inbounds [64 x i32], [64 x i32]* %83, i64 0, i64 %82
  %85 = load i32, i32* %84, align 4
  %86 = icmp slt i32 %81, %85
  br i1 %86, label %.lr.ph7.preheader, label %._crit_edge8

.lr.ph7.preheader:                                ; preds = %.loopexit
  %87 = sext i32 %0 to i64
  %88 = getelementptr inbounds [64 x [256 x %struct.vote]], [64 x [256 x %struct.vote]]* getelementptr inbounds (%struct.WEP_data, %struct.WEP_data* @wep, i64 0, i32 7), i64 0, i64 %87
  %89 = sext i32 %0 to i64
  %90 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds (%struct.WEP_data, %struct.WEP_data* @wep, i64 0, i32 6), i64 0, i64 %89
  %91 = sext i32 %0 to i64
  %92 = getelementptr inbounds [64 x i8], [64 x i8]* getelementptr inbounds (%struct.WEP_data, %struct.WEP_data* @wep, i64 0, i32 0), i64 0, i64 %91
  %93 = add nsw i32 %0, 1
  %94 = sext i32 %0 to i64
  %95 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds (%struct.WEP_data, %struct.WEP_data* @wep, i64 0, i32 6), i64 0, i64 %94
  %96 = shl i64 %77, 11
  %97 = add i64 %96, 608
  %scevgep = getelementptr %struct.WEP_data, %struct.WEP_data* @wep, i64 0, i32 0, i64 %97
  %scevgep8 = bitcast i8* %scevgep to %struct.WEP_data*
  br label %.lr.ph7

.lr.ph7:                                          ; preds = %.lr.ph7.preheader, %152
  call void @unroll_loop(i32 83)
  %98 = call i32 @update_ivbuf()
  switch i32 %98, label %99 [
    i32 1, label %._crit_edge8.loopexit3
    i32 2, label %._crit_edge8.loopexit4
  ]

; <label>:99:                                     ; preds = %.lr.ph7
  %100 = load i32, i32* %90, align 4
  %101 = sext i32 %100 to i64
  %102 = getelementptr inbounds [256 x %struct.vote], [256 x %struct.vote]* %88, i64 0, i64 %101
  %103 = getelementptr inbounds %struct.vote, %struct.vote* %102, i32 0, i32 0
  %104 = load i32, i32* %103, align 8
  %105 = trunc i32 %104 to i8
  store i8 %105, i8* %92, align 1
  %106 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 6), align 8
  %107 = icmp ne i32 %106, 0
  br i1 %107, label %109, label %108

; <label>:108:                                    ; preds = %99
  call void @show_wep_stats(i32 %0, i32 0, [256 x %struct.PTW_tableentry]* null, i32* null, i32* null, i32 0)
  br label %109

; <label>:109:                                    ; preds = %108, %99
  %110 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %111 = sub nsw i32 %110, 2
  %112 = icmp slt i32 %93, %111
  br i1 %112, label %.lr.ph.preheader, label %._crit_edge

.lr.ph.preheader:                                 ; preds = %109
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %125
  %lsr.iv9 = phi %struct.WEP_data* [ %scevgep8, %.lr.ph.preheader ], [ %129, %125 ]
  %indvars.iv = phi i64 [ %indvars.iv.next, %125 ], [ %77, %.lr.ph.preheader ]
  %lsr20 = trunc i64 %indvars.iv to i32
  %indvars.iv12 = inttoptr i64 %indvars.iv to i8*
  %lsr.iv911 = bitcast %struct.WEP_data* %lsr.iv9 to i32*
  call void @unroll_loop(i32 84)
  %113 = call i32 @calc_poll(i32 %lsr20)
  %114 = icmp ne i32 %113, 0
  br i1 %114, label %._crit_edge8.loopexit1, label %115

; <label>:115:                                    ; preds = %.lr.ph
  %116 = load i32, i32* %lsr.iv911, align 8
  %117 = trunc i32 %116 to i8
  %scevgep13 = getelementptr %struct.WEP_data, %struct.WEP_data* @wep, i64 0, i32 0, i64 %indvars.iv
  store i8 %117, i8* %scevgep13, align 1
  %118 = shl i64 %indvars.iv, 2
  %119 = inttoptr i64 %118 to i32*
  %scevgep14 = getelementptr %struct.WEP_data, %struct.WEP_data* @wep, i64 0, i32 0, i64 %118
  %scevgep1415 = bitcast i8* %scevgep14 to i32*
  %scevgep16 = getelementptr i32, i32* %scevgep1415, i64 24
  store i32 1, i32* %scevgep16, align 4
  %120 = shl i64 %indvars.iv, 2
  %121 = inttoptr i64 %120 to i32*
  %scevgep17 = getelementptr %struct.WEP_data, %struct.WEP_data* @wep, i64 0, i32 0, i64 %120
  %scevgep1718 = bitcast i8* %scevgep17 to i32*
  %scevgep19 = getelementptr i32, i32* %scevgep1718, i64 88
  store i32 0, i32* %scevgep19, align 4
  %122 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 6), align 8
  %123 = icmp ne i32 %122, 0
  br i1 %123, label %125, label %124

; <label>:124:                                    ; preds = %115
  call void @show_wep_stats(i32 %lsr20, i32 0, [256 x %struct.PTW_tableentry]* null, i32* null, i32* null, i32 0)
  br label %125

; <label>:125:                                    ; preds = %115, %124
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  %126 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %127 = sub nsw i32 %126, 2
  %128 = sext i32 %127 to i64
  %scevgep10 = getelementptr %struct.WEP_data, %struct.WEP_data* %lsr.iv9, i64 0, i32 7, i64 0, i64 180
  %129 = bitcast %struct.vote* %scevgep10 to %struct.WEP_data*
  %130 = icmp slt i64 %indvars.iv.next, %128
  br i1 %130, label %.lr.ph, label %._crit_edge.loopexit

._crit_edge.loopexit:                             ; preds = %125
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %109
  br label %131

; <label>:131:                                    ; preds = %._crit_edge, %149
  %.25 = phi i32 [ 0, %._crit_edge ], [ %150, %149 ]
  call void @unroll_loop(i32 85)
  %132 = trunc i32 %.25 to i8
  %133 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %134 = sub nsw i32 %133, 2
  %135 = sext i32 %134 to i64
  %136 = getelementptr inbounds [64 x i8], [64 x i8]* getelementptr inbounds (%struct.WEP_data, %struct.WEP_data* @wep, i64 0, i32 0), i64 0, i64 %135
  store i8 %132, i8* %136, align 1
  br label %137

; <label>:137:                                    ; preds = %131, %146
  %.014 = phi i32 [ 0, %131 ], [ %147, %146 ]
  call void @unroll_loop(i32 86)
  %138 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %139 = sub nsw i32 %138, 1
  %140 = sext i32 %139 to i64
  %141 = getelementptr inbounds [64 x i8], [64 x i8]* getelementptr inbounds (%struct.WEP_data, %struct.WEP_data* @wep, i64 0, i32 0), i64 0, i64 %140
  %tmp = trunc i32 %.014 to i8
  store i8 %tmp, i8* %141, align 1
  %142 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %143 = sub nsw i32 %142, 2
  %144 = call i32 @check_wep_key(i8* getelementptr inbounds (%struct.WEP_data, %struct.WEP_data* @wep, i64 0, i32 0, i64 0), i32 %143, i32 0)
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %._crit_edge8.loopexit, label %146

; <label>:146:                                    ; preds = %137
  %147 = add nuw nsw i32 %.014, 1
  %148 = icmp ult i32 %147, 256
  br i1 %148, label %137, label %149

; <label>:149:                                    ; preds = %146
  %150 = add nuw nsw i32 %.25, 1
  %151 = icmp ult i32 %150, 256
  br i1 %151, label %131, label %152

; <label>:152:                                    ; preds = %149
  %153 = load i32, i32* %95, align 4
  %154 = add nsw i32 %153, 1
  store i32 %154, i32* %95, align 4
  %155 = load i32, i32* %80, align 4
  %156 = load i32, i32* %84, align 4
  %157 = icmp slt i32 %155, %156
  br i1 %157, label %.lr.ph7, label %._crit_edge8.loopexit3

._crit_edge8.loopexit3:                           ; preds = %.lr.ph7, %152
  %.0.ph4 = phi i32 [ 1, %152 ], [ 1, %.lr.ph7 ]
  br label %._crit_edge8

._crit_edge8.loopexit:                            ; preds = %137
  %.0.ph = phi i32 [ 0, %137 ]
  br label %._crit_edge8

._crit_edge8.loopexit1:                           ; preds = %.lr.ph
  %.0.ph2 = phi i32 [ 1, %.lr.ph ]
  br label %._crit_edge8

._crit_edge8.loopexit4:                           ; preds = %.lr.ph7
  %.0.ph5 = phi i32 [ 2, %.lr.ph7 ]
  br label %._crit_edge8

._crit_edge8.loopexit6:                           ; preds = %22
  %.0.ph7 = phi i32 [ 1, %22 ]
  br label %._crit_edge8

._crit_edge8:                                     ; preds = %._crit_edge8.loopexit6, %._crit_edge8.loopexit4, %._crit_edge8.loopexit1, %._crit_edge8.loopexit, %._crit_edge8.loopexit3, %.loopexit, %1, %3
  %.0 = phi i32 [ 2, %3 ], [ 1, %1 ], [ 1, %.loopexit ], [ %.0.ph4, %._crit_edge8.loopexit3 ], [ %.0.ph, %._crit_edge8.loopexit ], [ %.0.ph2, %._crit_edge8.loopexit1 ], [ %.0.ph5, %._crit_edge8.loopexit4 ], [ %.0.ph7, %._crit_edge8.loopexit6 ]
  ret i32 %.0
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @inner_bruteforcer_thread(i8*) #0 {
  %2 = alloca [64 x i8], align 16, !track !180
  %3 = ptrtoint i8* %0 to i64
  %4 = load i32, i32* @close_aircrack, align 4
  %5 = icmp ne i32 %4, 0
  br i1 %5, label %._crit_edge, label %.lr.ph.preheader

.lr.ph.preheader:                                 ; preds = %1
  %6 = getelementptr inbounds [256 x [2 x i32]], [256 x [2 x i32]]* @bf_pipe, i64 0, i64 %3
  %7 = getelementptr inbounds [2 x i32], [2 x i32]* %6, i64 0, i64 0
  %8 = getelementptr inbounds [64 x i8], [64 x i8]* %2, i32 0, i32 0
  %9 = getelementptr inbounds [64 x i8], [64 x i8]* %2, i32 0, i32 0
  %10 = getelementptr inbounds [256 x i32], [256 x i32]* @bf_nkeys, i64 0, i64 %3
  %11 = getelementptr inbounds [64 x i8], [64 x i8]* %2, i32 0, i32 0
  %12 = getelementptr inbounds [64 x i8], [64 x i8]* %2, i32 0, i32 0
  %13 = getelementptr inbounds [64 x i8], [64 x i8]* %2, i32 0, i32 0
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %126
  call void @unroll_loop(i32 87)
  %14 = load i32, i32* @wepkey_crack_success, align 4
  %15 = icmp ne i32 %14, 0
  br i1 %15, label %._crit_edge.loopexit7, label %16

; <label>:16:                                     ; preds = %.lr.ph
  %17 = load i32, i32* %7, align 8
  %18 = call i32 @safe_read(i32 %17, i8* %8, i64 64)
  %19 = icmp ne i32 %18, 64
  br i1 %19, label %20, label %23

; <label>:20:                                     ; preds = %16
  %21 = getelementptr [12 x i8], [12 x i8]* @.str.27, i32 0, i32 0
  call void @perror(i8* %21)
  %22 = call i32 @kill(i32 0, i32 15) #9
  call void @_exit(i32 1) #12
  unreachable

; <label>:23:                                     ; preds = %16
  %24 = load i32, i32* @close_aircrack, align 4
  %25 = icmp ne i32 %24, 0
  br i1 %25, label %._crit_edge.loopexit7, label %26

; <label>:26:                                     ; preds = %23
  %27 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 17), align 8
  %28 = icmp eq i32 %27, 4
  br i1 %28, label %.preheader.preheader, label %63

.preheader.preheader:                             ; preds = %26
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %60
  %.0717 = phi i32 [ %61, %60 ], [ 0, %.preheader.preheader ]
  call void @unroll_loop(i32 88)
  %29 = trunc i32 %.0717 to i8
  %30 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 31, i64 0), align 4
  %31 = sext i32 %30 to i64
  %32 = getelementptr inbounds [64 x i8], [64 x i8]* %2, i64 0, i64 %31
  store i8 %29, i8* %32, align 1
  br label %33

; <label>:33:                                     ; preds = %.preheader, %57
  %.0516 = phi i32 [ 0, %.preheader ], [ %58, %57 ]
  call void @unroll_loop(i32 89)
  %34 = trunc i32 %.0516 to i8
  %35 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 31, i64 1), align 4
  %36 = sext i32 %35 to i64
  %37 = getelementptr inbounds [64 x i8], [64 x i8]* %2, i64 0, i64 %36
  store i8 %34, i8* %37, align 1
  br label %38

; <label>:38:                                     ; preds = %33, %54
  %.0115 = phi i32 [ 0, %33 ], [ %55, %54 ]
  call void @unroll_loop(i32 90)
  %39 = trunc i32 %.0115 to i8
  %40 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 31, i64 2), align 4
  %41 = sext i32 %40 to i64
  %42 = getelementptr inbounds [64 x i8], [64 x i8]* %2, i64 0, i64 %41
  store i8 %39, i8* %42, align 1
  br label %43

; <label>:43:                                     ; preds = %38, %51
  %.0214 = phi i32 [ 0, %38 ], [ %52, %51 ]
  call void @unroll_loop(i32 91)
  %44 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 31, i64 3), align 4
  %45 = sext i32 %44 to i64
  %46 = getelementptr inbounds [64 x i8], [64 x i8]* %2, i64 0, i64 %45
  %tmp10 = trunc i32 %.0214 to i8
  store i8 %tmp10, i8* %46, align 1
  %47 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %48 = sub nsw i32 %47, 2
  %49 = call i32 @check_wep_key(i8* %9, i32 %48, i32 0)
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %._crit_edge.loopexit, label %51

; <label>:51:                                     ; preds = %43
  %52 = add nuw nsw i32 %.0214, 1
  %53 = icmp ult i32 %52, 256
  br i1 %53, label %43, label %54

; <label>:54:                                     ; preds = %51
  %55 = add nuw nsw i32 %.0115, 1
  %56 = icmp ult i32 %55, 256
  br i1 %56, label %38, label %57

; <label>:57:                                     ; preds = %54
  %58 = add nuw nsw i32 %.0516, 1
  %59 = icmp ult i32 %58, 256
  br i1 %59, label %33, label %60

; <label>:60:                                     ; preds = %57
  %61 = add nuw nsw i32 %.0717, 1
  %62 = icmp ult i32 %61, 256
  br i1 %62, label %.preheader, label %.loopexit.loopexit

; <label>:63:                                     ; preds = %26
  %64 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 17), align 8
  %65 = icmp eq i32 %64, 3
  br i1 %65, label %.preheader3.preheader, label %92

.preheader3.preheader:                            ; preds = %63
  br label %.preheader3

.preheader3:                                      ; preds = %.preheader3.preheader, %89
  %.1613 = phi i32 [ %90, %89 ], [ 0, %.preheader3.preheader ]
  call void @unroll_loop(i32 92)
  %66 = trunc i32 %.1613 to i8
  %67 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 31, i64 0), align 4
  %68 = sext i32 %67 to i64
  %69 = getelementptr inbounds [64 x i8], [64 x i8]* %2, i64 0, i64 %68
  store i8 %66, i8* %69, align 1
  br label %70

; <label>:70:                                     ; preds = %.preheader3, %86
  %.112 = phi i32 [ 0, %.preheader3 ], [ %87, %86 ]
  call void @unroll_loop(i32 93)
  %71 = trunc i32 %.112 to i8
  %72 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 31, i64 1), align 4
  %73 = sext i32 %72 to i64
  %74 = getelementptr inbounds [64 x i8], [64 x i8]* %2, i64 0, i64 %73
  store i8 %71, i8* %74, align 1
  br label %75

; <label>:75:                                     ; preds = %70, %83
  %.1311 = phi i32 [ 0, %70 ], [ %84, %83 ]
  call void @unroll_loop(i32 94)
  %76 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 31, i64 2), align 4
  %77 = sext i32 %76 to i64
  %78 = getelementptr inbounds [64 x i8], [64 x i8]* %2, i64 0, i64 %77
  %tmp9 = trunc i32 %.1311 to i8
  store i8 %tmp9, i8* %78, align 1
  %79 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %80 = sub nsw i32 %79, 2
  %81 = call i32 @check_wep_key(i8* %11, i32 %80, i32 0)
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %._crit_edge.loopexit1, label %83

; <label>:83:                                     ; preds = %75
  %84 = add nuw nsw i32 %.1311, 1
  %85 = icmp ult i32 %84, 256
  br i1 %85, label %75, label %86

; <label>:86:                                     ; preds = %83
  %87 = add nuw nsw i32 %.112, 1
  %88 = icmp ult i32 %87, 256
  br i1 %88, label %70, label %89

; <label>:89:                                     ; preds = %86
  %90 = add nuw nsw i32 %.1613, 1
  %91 = icmp ult i32 %90, 256
  br i1 %91, label %.preheader3, label %.loopexit.loopexit3

; <label>:92:                                     ; preds = %63
  %93 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 17), align 8
  %94 = icmp eq i32 %93, 2
  br i1 %94, label %.preheader5.preheader, label %.preheader7.preheader

.preheader7.preheader:                            ; preds = %92
  br label %.preheader7

.preheader5.preheader:                            ; preds = %92
  br label %.preheader5

.preheader5:                                      ; preds = %.preheader5.preheader, %110
  %.210 = phi i32 [ %111, %110 ], [ 0, %.preheader5.preheader ]
  call void @unroll_loop(i32 95)
  %95 = trunc i32 %.210 to i8
  %96 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 31, i64 0), align 4
  %97 = sext i32 %96 to i64
  %98 = getelementptr inbounds [64 x i8], [64 x i8]* %2, i64 0, i64 %97
  store i8 %95, i8* %98, align 1
  br label %99

; <label>:99:                                     ; preds = %.preheader5, %107
  %.249 = phi i32 [ 0, %.preheader5 ], [ %108, %107 ]
  call void @unroll_loop(i32 96)
  %100 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 31, i64 1), align 4
  %101 = sext i32 %100 to i64
  %102 = getelementptr inbounds [64 x i8], [64 x i8]* %2, i64 0, i64 %101
  %tmp8 = trunc i32 %.249 to i8
  store i8 %tmp8, i8* %102, align 1
  %103 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %104 = sub nsw i32 %103, 2
  %105 = call i32 @check_wep_key(i8* %12, i32 %104, i32 0)
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %._crit_edge.loopexit2, label %107

; <label>:107:                                    ; preds = %99
  %108 = add nuw nsw i32 %.249, 1
  %109 = icmp ult i32 %108, 256
  br i1 %109, label %99, label %110

; <label>:110:                                    ; preds = %107
  %111 = add nuw nsw i32 %.210, 1
  %112 = icmp ult i32 %111, 256
  br i1 %112, label %.preheader5, label %.loopexit.loopexit4

.preheader7:                                      ; preds = %.preheader7.preheader, %120
  %.38 = phi i32 [ %121, %120 ], [ 0, %.preheader7.preheader ]
  call void @unroll_loop(i32 97)
  %113 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 31, i64 0), align 4
  %114 = sext i32 %113 to i64
  %115 = getelementptr inbounds [64 x i8], [64 x i8]* %2, i64 0, i64 %114
  %tmp = trunc i32 %.38 to i8
  store i8 %tmp, i8* %115, align 1
  %116 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %117 = sub nsw i32 %116, 2
  %118 = call i32 @check_wep_key(i8* %13, i32 %117, i32 0)
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %._crit_edge.loopexit5, label %120

; <label>:120:                                    ; preds = %.preheader7
  %121 = add nuw nsw i32 %.38, 1
  %122 = icmp ult i32 %121, 256
  br i1 %122, label %.preheader7, label %.loopexit.loopexit6

.loopexit.loopexit:                               ; preds = %60
  br label %.loopexit

.loopexit.loopexit3:                              ; preds = %89
  br label %.loopexit

.loopexit.loopexit4:                              ; preds = %110
  br label %.loopexit

.loopexit.loopexit6:                              ; preds = %120
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit.loopexit6, %.loopexit.loopexit4, %.loopexit.loopexit3, %.loopexit.loopexit
  br i1 true, label %123, label %126

; <label>:123:                                    ; preds = %.loopexit
  %124 = load i32, i32* %10, align 4
  %125 = add nsw i32 %124, -1
  store i32 %125, i32* %10, align 4
  br label %126

; <label>:126:                                    ; preds = %123, %.loopexit
  %127 = load i32, i32* @close_aircrack, align 4
  %128 = icmp ne i32 %127, 0
  br i1 %128, label %._crit_edge.loopexit7, label %.lr.ph

._crit_edge.loopexit:                             ; preds = %43
  br label %._crit_edge

._crit_edge.loopexit1:                            ; preds = %75
  br label %._crit_edge

._crit_edge.loopexit2:                            ; preds = %99
  br label %._crit_edge

._crit_edge.loopexit5:                            ; preds = %.preheader7
  br label %._crit_edge

._crit_edge.loopexit7:                            ; preds = %126, %.lr.ph, %23
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit7, %._crit_edge.loopexit5, %._crit_edge.loopexit2, %._crit_edge.loopexit1, %._crit_edge.loopexit, %1
  ret i32 0
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @show_wpa_stats(i8*, i32, i8*, i8*, i8*, i32) #0 {
  %7 = alloca [28 x i8], align 16, !track !181
  %8 = call float @chrono(%struct.timeval* @t_stats, i32 0)
  %9 = fpext float %8 to double
  %10 = fcmp olt double %9, 1.500000e-01
  %11 = icmp eq i32 %5, 0
  %or.cond = and i1 %10, %11
  br i1 %or.cond, label %157, label %12

; <label>:12:                                     ; preds = %6
  %13 = icmp ne i32 %5, 0
  br i1 %13, label %14, label %16

; <label>:14:                                     ; preds = %12
  %15 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* @mx_wpastats) #9
  br label %19

; <label>:16:                                     ; preds = %12
  %17 = call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* @mx_wpastats) #9
  %18 = icmp ne i32 %17, 0
  br i1 %18, label %157, label %19

; <label>:19:                                     ; preds = %16, %14
  %20 = call float @chrono(%struct.timeval* @t_stats, i32 1)
  %21 = call float @chrono(%struct.timeval* @t_begin, i32 0)
  %22 = fdiv float %21, 3.600000e+03
  %23 = fptosi float %22 to i32
  %24 = mul nsw i32 %23, 3600
  %25 = sitofp i32 %24 to float
  %26 = fsub float %21, %25
  %27 = fdiv float %26, 6.000000e+01
  %28 = fptosi float %27 to i32
  %29 = mul nsw i32 %23, 3600
  %30 = sitofp i32 %29 to float
  %31 = fsub float %21, %30
  %32 = mul nsw i32 %28, 60
  %33 = sitofp i32 %32 to float
  %34 = fsub float %31, %33
  %35 = fptosi float %34 to i32
  %36 = call float @chrono(%struct.timeval* @t_kprev, i32 0)
  %37 = fcmp oge float %36, 6.000000e+00
  br i1 %37, label %38, label %51

; <label>:38:                                     ; preds = %19
  %39 = fptosi float %36 to i32
  %40 = getelementptr %struct.timeval, %struct.timeval* @t_kprev, i32 0, i32 0
  %41 = load i64, i64* %40, align 8
  %42 = add nsw i64 %41, 3
  %43 = getelementptr %struct.timeval, %struct.timeval* @t_kprev, i32 0, i32 0
  store i64 %42, i64* %43, align 8
  %44 = call float @chrono(%struct.timeval* @t_kprev, i32 0)
  %45 = sitofp i32 %39 to float
  %46 = fdiv float %44, %45
  %47 = load i64, i64* @nb_kprev, align 8
  %48 = sitofp i64 %47 to float
  %49 = fmul float %48, %46
  %50 = fptosi float %49 to i64
  store i64 %50, i64* @nb_kprev, align 8
  br label %51

; <label>:51:                                     ; preds = %38, %19
  %.01 = phi float [ %44, %38 ], [ %36, %19 ]
  %52 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 27
  %53 = load i32, i32* %52, align 4
  %54 = icmp ne i32 %53, 0
  br i1 %54, label %55, label %58

; <label>:55:                                     ; preds = %51
  %56 = getelementptr [8 x i8], [8 x i8]* @.str.33, i32 0, i32 0
  %57 = call i32 (i8*, ...) @printf(i8* %56)
  br label %58

; <label>:58:                                     ; preds = %55, %51
  %59 = load i64, i64* @nb_tried, align 8
  %60 = load i64, i64* @nb_kprev, align 8
  %61 = sitofp i64 %60 to float
  %62 = fdiv float %61, %.01
  %63 = fpext float %62 to double
  %64 = getelementptr [53 x i8], [53 x i8]* @.str.52, i32 0, i32 0
  %65 = call i32 (i8*, ...) @printf(i8* %64, i32 %23, i32 %28, i32 %35, i64 %59, double %63)
  %66 = getelementptr inbounds [28 x i8], [28 x i8]* %7, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* align 16 %66, i8 32, i64 28, i1 false)
  %67 = getelementptr inbounds [28 x i8], [28 x i8]* %7, i32 0, i32 0
  %68 = icmp sgt i32 %1, 27
  %. = select i1 %68, i32 27, i32 %1
  %69 = sext i32 %. to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %67, i8* align 1 %0, i64 %69, i1 false), !track !182
  %70 = getelementptr inbounds [28 x i8], [28 x i8]* %7, i64 0, i64 27
  store i8 0, i8* %70, align 1
  %71 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 27
  %72 = load i32, i32* %71, align 4
  %73 = icmp ne i32 %72, 0
  br i1 %73, label %74, label %77

; <label>:74:                                     ; preds = %58
  %75 = getelementptr [8 x i8], [8 x i8]* @.str.53, i32 0, i32 0
  %76 = call i32 (i8*, ...) @printf(i8* %75)
  br label %77

; <label>:77:                                     ; preds = %74, %58
  %78 = getelementptr inbounds [28 x i8], [28 x i8]* %7, i32 0, i32 0
  %79 = getelementptr [31 x i8], [31 x i8]* @.str.54, i32 0, i32 0
  %80 = call i32 (i8*, ...) @printf(i8* %79, i8* %78)
  %81 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 27
  %82 = load i32, i32* %81, align 4
  %83 = icmp ne i32 %82, 0
  br i1 %83, label %84, label %87

; <label>:84:                                     ; preds = %77
  %85 = getelementptr [9 x i8], [9 x i8]* @.str.36, i32 0, i32 0
  %86 = call i32 (i8*, ...) @printf(i8* %85)
  br label %87

; <label>:87:                                     ; preds = %84, %77
  %88 = getelementptr [25 x i8], [25 x i8]* @.str.55, i32 0, i32 0
  %89 = call i32 (i8*, ...) @printf(i8* %88)
  %90 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 27
  %91 = load i32, i32* %90, align 4
  %92 = icmp ne i32 %91, 0
  br i1 %92, label %93, label %96

; <label>:93:                                     ; preds = %87
  %94 = getelementptr [8 x i8], [8 x i8]* @.str.56, i32 0, i32 0
  %95 = call i32 (i8*, ...) @printf(i8* %94)
  br label %96

; <label>:96:                                     ; preds = %93, %87
  br label %97

; <label>:97:                                     ; preds = %96, %101
  %indvars.iv8 = phi i64 [ 0, %96 ], [ %indvars.iv.next9, %101 ]
  call void @unroll_loop(i32 98)
  %98 = icmp eq i64 %indvars.iv8, 16
  br i1 %98, label %99, label %101

; <label>:99:                                     ; preds = %97
  %100 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.57, i64 0, i64 0))
  br label %101

; <label>:101:                                    ; preds = %99, %97
  %scevgep2 = getelementptr i8, i8* %2, i64 %indvars.iv8
  %102 = load i8, i8* %scevgep2, align 1
  %103 = zext i8 %102 to i32
  %104 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.58, i64 0, i64 0), i32 %103)
  %indvars.iv.next9 = add nuw nsw i64 %indvars.iv8, 1
  %exitcond10 = icmp ne i64 %indvars.iv.next9, 32
  br i1 %exitcond10, label %97, label %105

; <label>:105:                                    ; preds = %101
  %106 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 27
  %107 = load i32, i32* %106, align 4
  %108 = icmp ne i32 %107, 0
  br i1 %108, label %109, label %112

; <label>:109:                                    ; preds = %105
  %110 = getelementptr [9 x i8], [9 x i8]* @.str.36, i32 0, i32 0
  %111 = call i32 (i8*, ...) @printf(i8* %110)
  br label %112

; <label>:112:                                    ; preds = %109, %105
  %113 = getelementptr [25 x i8], [25 x i8]* @.str.59, i32 0, i32 0
  %114 = call i32 (i8*, ...) @printf(i8* %113)
  %115 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 27
  %116 = load i32, i32* %115, align 4
  %117 = icmp ne i32 %116, 0
  br i1 %117, label %118, label %121

; <label>:118:                                    ; preds = %112
  %119 = getelementptr [8 x i8], [8 x i8]* @.str.56, i32 0, i32 0
  %120 = call i32 (i8*, ...) @printf(i8* %119)
  br label %121

; <label>:121:                                    ; preds = %118, %112
  br label %122

; <label>:122:                                    ; preds = %121, %128
  %indvars.iv4 = phi i64 [ 0, %121 ], [ %indvars.iv.next5, %128 ]
  call void @unroll_loop(i32 99)
  %123 = icmp ugt i64 %indvars.iv4, 0
  br i1 %123, label %124, label %128

; <label>:124:                                    ; preds = %122
  %tmp = trunc i64 %indvars.iv4 to i32
  %.urem = urem i32 %tmp, 16
  %125 = icmp eq i32 %.urem, 0
  br i1 %125, label %126, label %128

; <label>:126:                                    ; preds = %124
  %127 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.57, i64 0, i64 0))
  br label %128

; <label>:128:                                    ; preds = %126, %124, %122
  %scevgep1 = getelementptr i8, i8* %3, i64 %indvars.iv4
  %129 = load i8, i8* %scevgep1, align 1
  %130 = zext i8 %129 to i32
  %131 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.58, i64 0, i64 0), i32 %130)
  %indvars.iv.next5 = add nuw nsw i64 %indvars.iv4, 1
  %exitcond6 = icmp ne i64 %indvars.iv.next5, 64
  br i1 %exitcond6, label %122, label %132

; <label>:132:                                    ; preds = %128
  %133 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 27
  %134 = load i32, i32* %133, align 4
  %135 = icmp ne i32 %134, 0
  br i1 %135, label %136, label %139

; <label>:136:                                    ; preds = %132
  %137 = getelementptr [9 x i8], [9 x i8]* @.str.36, i32 0, i32 0
  %138 = call i32 (i8*, ...) @printf(i8* %137)
  br label %139

; <label>:139:                                    ; preds = %136, %132
  %140 = getelementptr [25 x i8], [25 x i8]* @.str.60, i32 0, i32 0
  %141 = call i32 (i8*, ...) @printf(i8* %140)
  %142 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 27
  %143 = load i32, i32* %142, align 4
  %144 = icmp ne i32 %143, 0
  br i1 %144, label %145, label %148

; <label>:145:                                    ; preds = %139
  %146 = getelementptr [8 x i8], [8 x i8]* @.str.56, i32 0, i32 0
  %147 = call i32 (i8*, ...) @printf(i8* %146)
  br label %148

; <label>:148:                                    ; preds = %145, %139
  br label %149

; <label>:149:                                    ; preds = %148, %149
  %indvars.iv = phi i64 [ 0, %148 ], [ %indvars.iv.next, %149 ]
  call void @unroll_loop(i32 100)
  %scevgep = getelementptr i8, i8* %4, i64 %indvars.iv
  %150 = load i8, i8* %scevgep, align 1
  %151 = zext i8 %150 to i32
  %152 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.58, i64 0, i64 0), i32 %151)
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp ne i64 %indvars.iv.next, 16
  br i1 %exitcond, label %149, label %153

; <label>:153:                                    ; preds = %149
  %154 = getelementptr [2 x i8], [2 x i8]* @.str.2, i32 0, i32 0
  %155 = call i32 (i8*, ...) @printf(i8* %154)
  %156 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* @mx_wpastats) #9
  br label %157

; <label>:157:                                    ; preds = %16, %6, %153
  ret void
}

; Function Attrs: nounwind
declare dso_local i32 @pthread_mutex_trylock(%union.pthread_mutex_t*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @crack_wpa_thread(i8*) #0 {
  %2 = alloca [36 x i8], align 16, !track !183
  %3 = alloca [4 x [128 x i8]], align 16, !track !184
  %4 = alloca [4 x [128 x i8]], align 16, !track !185
  %5 = alloca [100 x i8], align 16, !track !186
  %6 = alloca [4 x [80 x i8]], align 16, !track !187
  %7 = alloca [4 x [20 x i8]], align 16, !track !188
  %8 = alloca i32, align 4
  store i32 0, i32* %8, align 4
  %9 = call i32 @shasse2_cpuid()
  %10 = icmp sge i32 %9, 2
  %spec.select = select i1 %10, i32 4, i32 1
  %11 = bitcast i8* %0 to %struct.WPA_data*
  %12 = getelementptr inbounds %struct.WPA_data, %struct.WPA_data* %11, i32 0, i32 0
  %13 = load %struct.AP_info*, %struct.AP_info** %12, align 8
  %14 = getelementptr inbounds %struct.WPA_data, %struct.WPA_data* %11, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = getelementptr inbounds [36 x i8], [36 x i8]* %2, i32 0, i32 0
  %17 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %13, i32 0, i32 2
  %18 = getelementptr inbounds [33 x i8], [33 x i8]* %17, i32 0, i32 0
  %19 = call i8* @strncpy(i8* %16, i8* %18, i64 36) #9, !track !189
  %20 = getelementptr inbounds [100 x i8], [100 x i8]* %5, i32 0, i32 0
  %21 = getelementptr [23 x i8], [23 x i8]* @.str.61, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %20, i8* align 1 %21, i64 23, i1 false), !track !190
  %22 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %13, i32 0, i32 14
  %23 = getelementptr inbounds %struct.WPA_hdsk, %struct.WPA_hdsk* %22, i32 0, i32 0
  %24 = getelementptr inbounds [6 x i8], [6 x i8]* %23, i32 0, i32 0
  %25 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %13, i32 0, i32 1
  %26 = getelementptr inbounds [6 x i8], [6 x i8]* %25, i32 0, i32 0
  %27 = call i32 @memcmp(i8* %24, i8* %26, i64 6) #10
  %28 = icmp slt i32 %27, 0
  %29 = getelementptr inbounds [100 x i8], [100 x i8]* %5, i32 0, i32 0
  %30 = getelementptr inbounds i8, i8* %29, i64 23
  br i1 %28, label %31, label %39

; <label>:31:                                     ; preds = %1
  %32 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %13, i32 0, i32 14
  %33 = getelementptr inbounds %struct.WPA_hdsk, %struct.WPA_hdsk* %32, i32 0, i32 0
  %34 = getelementptr inbounds [6 x i8], [6 x i8]* %33, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %30, i8* align 8 %34, i64 6, i1 false), !track !191
  %35 = getelementptr inbounds [100 x i8], [100 x i8]* %5, i32 0, i32 0
  %36 = getelementptr inbounds i8, i8* %35, i64 29
  %37 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %13, i32 0, i32 1
  %38 = getelementptr inbounds [6 x i8], [6 x i8]* %37, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %36, i8* align 8 %38, i64 6, i1 false), !track !192
  br label %47

; <label>:39:                                     ; preds = %1
  %40 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %13, i32 0, i32 1
  %41 = getelementptr inbounds [6 x i8], [6 x i8]* %40, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %30, i8* align 8 %41, i64 6, i1 false), !track !193
  %42 = getelementptr inbounds [100 x i8], [100 x i8]* %5, i32 0, i32 0
  %43 = getelementptr inbounds i8, i8* %42, i64 29
  %44 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %13, i32 0, i32 14
  %45 = getelementptr inbounds %struct.WPA_hdsk, %struct.WPA_hdsk* %44, i32 0, i32 0
  %46 = getelementptr inbounds [6 x i8], [6 x i8]* %45, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %43, i8* align 8 %46, i64 6, i1 false), !track !194
  br label %47

; <label>:47:                                     ; preds = %39, %31
  %48 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %13, i32 0, i32 14
  %49 = getelementptr inbounds %struct.WPA_hdsk, %struct.WPA_hdsk* %48, i32 0, i32 1
  %50 = getelementptr inbounds [32 x i8], [32 x i8]* %49, i32 0, i32 0
  %51 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %13, i32 0, i32 14
  %52 = getelementptr inbounds %struct.WPA_hdsk, %struct.WPA_hdsk* %51, i32 0, i32 2
  %53 = getelementptr inbounds [32 x i8], [32 x i8]* %52, i32 0, i32 0
  %54 = call i32 @memcmp(i8* %50, i8* %53, i64 32) #10
  %55 = icmp slt i32 %54, 0
  %56 = getelementptr inbounds [100 x i8], [100 x i8]* %5, i32 0, i32 0
  %57 = getelementptr inbounds i8, i8* %56, i64 35
  %58 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %13, i32 0, i32 14
  br i1 %55, label %59, label %67

; <label>:59:                                     ; preds = %47
  %60 = getelementptr inbounds %struct.WPA_hdsk, %struct.WPA_hdsk* %58, i32 0, i32 1
  %61 = getelementptr inbounds [32 x i8], [32 x i8]* %60, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %57, i8* align 2 %61, i64 32, i1 false), !track !195
  %62 = getelementptr inbounds [100 x i8], [100 x i8]* %5, i32 0, i32 0
  %63 = getelementptr inbounds i8, i8* %62, i64 67
  %64 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %13, i32 0, i32 14
  %65 = getelementptr inbounds %struct.WPA_hdsk, %struct.WPA_hdsk* %64, i32 0, i32 2
  %66 = getelementptr inbounds [32 x i8], [32 x i8]* %65, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %63, i8* align 2 %66, i64 32, i1 false), !track !196
  br label %75

; <label>:67:                                     ; preds = %47
  %68 = getelementptr inbounds %struct.WPA_hdsk, %struct.WPA_hdsk* %58, i32 0, i32 2
  %69 = getelementptr inbounds [32 x i8], [32 x i8]* %68, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %57, i8* align 2 %69, i64 32, i1 false), !track !197
  %70 = getelementptr inbounds [100 x i8], [100 x i8]* %5, i32 0, i32 0
  %71 = getelementptr inbounds i8, i8* %70, i64 67
  %72 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %13, i32 0, i32 14
  %73 = getelementptr inbounds %struct.WPA_hdsk, %struct.WPA_hdsk* %72, i32 0, i32 1
  %74 = getelementptr inbounds [32 x i8], [32 x i8]* %73, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %71, i8* align 2 %74, i64 32, i1 false), !track !198
  br label %75

; <label>:75:                                     ; preds = %67, %59
  %76 = getelementptr inbounds [36 x i8], [36 x i8]* %2, i32 0, i32 0
  %77 = call i64 @strlen(i8* %76) #10
  %78 = add i64 %77, 4
  %79 = trunc i64 %78 to i32
  %80 = zext i32 %spec.select to i64
  %81 = zext i32 %spec.select to i64
  %82 = load i32, i32* @close_aircrack, align 4
  %83 = icmp ne i32 %82, 0
  br i1 %83, label %._crit_edge27, label %.lr.ph26.preheader

.lr.ph26.preheader:                               ; preds = %75
  %84 = icmp eq i32 %spec.select, 4
  %85 = getelementptr inbounds [4 x [128 x i8]], [4 x [128 x i8]]* %3, i64 0, i64 0
  %86 = getelementptr inbounds [128 x i8], [128 x i8]* %85, i32 0, i32 0
  %87 = getelementptr inbounds [4 x [128 x i8]], [4 x [128 x i8]]* %3, i64 0, i64 1
  %88 = getelementptr inbounds [128 x i8], [128 x i8]* %87, i32 0, i32 0
  %89 = getelementptr inbounds [4 x [128 x i8]], [4 x [128 x i8]]* %3, i64 0, i64 2
  %90 = getelementptr inbounds [128 x i8], [128 x i8]* %89, i32 0, i32 0
  %91 = getelementptr inbounds [4 x [128 x i8]], [4 x [128 x i8]]* %3, i64 0, i64 3
  %92 = getelementptr inbounds [128 x i8], [128 x i8]* %91, i32 0, i32 0
  %93 = getelementptr inbounds [36 x i8], [36 x i8]* %2, i32 0, i32 0
  %94 = getelementptr inbounds [4 x [128 x i8]], [4 x [128 x i8]]* %4, i64 0, i64 0
  %95 = getelementptr inbounds [128 x i8], [128 x i8]* %94, i32 0, i32 0
  %96 = getelementptr inbounds [4 x [128 x i8]], [4 x [128 x i8]]* %4, i64 0, i64 1
  %97 = getelementptr inbounds [128 x i8], [128 x i8]* %96, i32 0, i32 0
  %98 = getelementptr inbounds [4 x [128 x i8]], [4 x [128 x i8]]* %4, i64 0, i64 2
  %99 = getelementptr inbounds [128 x i8], [128 x i8]* %98, i32 0, i32 0
  %100 = getelementptr inbounds [4 x [128 x i8]], [4 x [128 x i8]]* %4, i64 0, i64 3
  %101 = getelementptr inbounds [128 x i8], [128 x i8]* %100, i32 0, i32 0
  %102 = getelementptr inbounds [100 x i8], [100 x i8]* %5, i64 0, i64 99
  %103 = getelementptr inbounds [100 x i8], [100 x i8]* %5, i32 0, i32 0
  %104 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %13, i32 0, i32 14
  %105 = getelementptr inbounds %struct.WPA_hdsk, %struct.WPA_hdsk* %104, i32 0, i32 6
  %106 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %13, i32 0, i32 14
  %107 = getelementptr inbounds %struct.WPA_hdsk, %struct.WPA_hdsk* %106, i32 0, i32 4
  %108 = getelementptr inbounds [256 x i8], [256 x i8]* %107, i32 0, i32 0
  %109 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %13, i32 0, i32 14
  %110 = getelementptr inbounds %struct.WPA_hdsk, %struct.WPA_hdsk* %109, i32 0, i32 5
  %111 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %13, i32 0, i32 14
  %112 = getelementptr inbounds %struct.WPA_hdsk, %struct.WPA_hdsk* %111, i32 0, i32 3
  %113 = getelementptr inbounds [16 x i8], [16 x i8]* %112, i32 0, i32 0
  %114 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %13, i32 0, i32 14
  %115 = getelementptr inbounds %struct.WPA_hdsk, %struct.WPA_hdsk* %114, i32 0, i32 4
  %116 = getelementptr inbounds [256 x i8], [256 x i8]* %115, i32 0, i32 0
  %117 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %13, i32 0, i32 14
  %118 = getelementptr inbounds %struct.WPA_hdsk, %struct.WPA_hdsk* %117, i32 0, i32 5
  %119 = getelementptr inbounds [36 x i8], [36 x i8]* %2, i32 0, i32 0
  %120 = getelementptr inbounds [4 x [128 x i8]], [4 x [128 x i8]]* %3, i64 0, i64 0
  %121 = getelementptr inbounds [128 x i8], [128 x i8]* %120, i32 0, i32 0
  %122 = getelementptr inbounds [4 x [128 x i8]], [4 x [128 x i8]]* %3, i64 0, i64 0
  %123 = getelementptr inbounds [128 x i8], [128 x i8]* %122, i32 0, i32 0
  %124 = getelementptr inbounds [4 x [128 x i8]], [4 x [128 x i8]]* %4, i64 0, i64 0
  %125 = getelementptr inbounds [128 x i8], [128 x i8]* %124, i32 0, i32 0
  %126 = getelementptr inbounds [4 x [80 x i8]], [4 x [80 x i8]]* %6, i64 0, i64 0
  %127 = getelementptr inbounds [80 x i8], [80 x i8]* %126, i32 0, i32 0
  %128 = getelementptr inbounds [4 x [20 x i8]], [4 x [20 x i8]]* %7, i64 0, i64 0
  %129 = getelementptr inbounds [20 x i8], [20 x i8]* %128, i32 0, i32 0
  br label %.lr.ph26

._crit_edge27.loopexit:                           ; preds = %300
  br label %._crit_edge27

._crit_edge27:                                    ; preds = %._crit_edge27.loopexit, %75
  %130 = bitcast i32* %8 to i8*
  call void @pthread_exit(i8* %130) #12
  unreachable

.lr.ph26:                                         ; preds = %.lr.ph26.preheader, %300
  call void @unroll_loop(i32 101)
  br label %131

; <label>:131:                                    ; preds = %.lr.ph26, %.loopexit
  %indvars.iv13 = phi i64 [ 0, %.lr.ph26 ], [ %indvars.iv.next14, %.loopexit ]
  call void @unroll_loop(i32 102)
  %132 = getelementptr inbounds [4 x [128 x i8]], [4 x [128 x i8]]* %3, i64 0, i64 %indvars.iv13
  %133 = getelementptr inbounds [128 x i8], [128 x i8]* %132, i64 0, i64 0
  store i8 0, i8* %133, align 16
  %134 = getelementptr inbounds [4 x [128 x i8]], [4 x [128 x i8]]* %3, i64 0, i64 %indvars.iv13
  %135 = getelementptr inbounds [128 x i8], [128 x i8]* %134, i32 0, i32 0
  %136 = call i32 @wpa_receive_passphrase(i8* %135, %struct.WPA_data* %11)
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %.lr.ph11.preheader, label %.loopexit

.lr.ph11.preheader:                               ; preds = %131
  br label %.lr.ph11

.lr.ph11:                                         ; preds = %.lr.ph11.preheader, %142
  call void @unroll_loop(i32 103)
  %138 = load i32, i32* @wpa_wordlists_done, align 4
  %139 = icmp eq i32 %138, 1
  br i1 %139, label %140, label %142

; <label>:140:                                    ; preds = %.lr.ph11
  %141 = icmp eq i64 %indvars.iv13, 0
  br i1 %141, label %.loopexit4.loopexit, label %.loopexit

; <label>:142:                                    ; preds = %.lr.ph11
  %143 = call i32 @sched_yield() #9
  %144 = call i32 @wpa_receive_passphrase(i8* %135, %struct.WPA_data* %11)
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %.lr.ph11, label %.loopexit.loopexit

.loopexit.loopexit:                               ; preds = %142
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit.loopexit, %131, %140
  %146 = getelementptr inbounds [4 x [128 x i8]], [4 x [128 x i8]]* %3, i64 0, i64 %indvars.iv13
  %147 = getelementptr inbounds [128 x i8], [128 x i8]* %146, i64 0, i64 127
  store i8 0, i8* %147, align 1
  %indvars.iv.next14 = add nuw nsw i64 %indvars.iv13, 1
  %148 = icmp ult i64 %indvars.iv.next14, %80
  br i1 %148, label %131, label %149

; <label>:149:                                    ; preds = %.loopexit
  br i1 %84, label %150, label %.preheader.preheader

.preheader.preheader:                             ; preds = %149
  br label %.preheader

; <label>:150:                                    ; preds = %149
  call void @calc_4pmk(i8* %86, i8* %88, i8* %90, i8* %92, i8* %93, i8* %95, i8* %97, i8* %99, i8* %101)
  br label %.loopexit3

.preheader:                                       ; preds = %.preheader.preheader, %.preheader
  %lsr.iv10 = phi i64 [ %80, %.preheader.preheader ], [ %lsr.iv.next, %.preheader ]
  %lsr.iv7 = phi [4 x [128 x i8]]* [ %4, %.preheader.preheader ], [ %152, %.preheader ]
  %lsr.iv4 = phi [4 x [128 x i8]]* [ %3, %.preheader.preheader ], [ %151, %.preheader ]
  %lsr.iv79 = bitcast [4 x [128 x i8]]* %lsr.iv7 to i8*
  %lsr.iv46 = bitcast [4 x [128 x i8]]* %lsr.iv4 to i8*
  call void @unroll_loop(i32 104)
  call void @calc_pmk(i8* %lsr.iv46, i8* %119, i8* %lsr.iv79)
  %scevgep5 = getelementptr [4 x [128 x i8]], [4 x [128 x i8]]* %lsr.iv4, i64 0, i64 1, i64 0
  %151 = bitcast i8* %scevgep5 to [4 x [128 x i8]]*
  %scevgep8 = getelementptr [4 x [128 x i8]], [4 x [128 x i8]]* %lsr.iv7, i64 0, i64 1, i64 0
  %152 = bitcast i8* %scevgep8 to [4 x [128 x i8]]*
  %lsr.iv.next = add i64 %lsr.iv10, -1
  %exitcond1 = icmp ne i64 %lsr.iv.next, 0
  br i1 %exitcond1, label %.preheader, label %.loopexit3.loopexit

.loopexit3.loopexit:                              ; preds = %.preheader
  br label %.loopexit3

.loopexit3:                                       ; preds = %.loopexit3.loopexit, %150
  br label %153

; <label>:153:                                    ; preds = %.loopexit3, %283
  %lsr.iv11 = phi [4 x [80 x i8]]* [ %6, %.loopexit3 ], [ %284, %283 ]
  %indvars.iv23 = phi i64 [ 0, %.loopexit3 ], [ %indvars.iv.next24, %283 ]
  call void @unroll_loop(i32 105)
  %154 = getelementptr inbounds [4 x [128 x i8]], [4 x [128 x i8]]* %4, i64 0, i64 %indvars.iv23
  %155 = getelementptr inbounds [128 x i8], [128 x i8]* %154, i32 0, i32 0
  br label %156

; <label>:156:                                    ; preds = %153, %156
  %lsr.iv13 = phi [4 x [80 x i8]]* [ %lsr.iv11, %153 ], [ %159, %156 ]
  %indvars.iv19 = phi i64 [ 0, %153 ], [ %indvars.iv.next20, %156 ]
  %lsr.iv1315 = bitcast [4 x [80 x i8]]* %lsr.iv13 to i8*
  call void @unroll_loop(i32 106)
  %tmp = trunc i64 %indvars.iv19 to i8
  store i8 %tmp, i8* %102, align 1
  %157 = call %struct.env_md_st* @EVP_sha1()
  %158 = call i8* @HMAC(%struct.env_md_st* %157, i8* %155, i32 32, i8* %103, i64 100, i8* %lsr.iv1315, i32* null)
  %indvars.iv.next20 = add nuw nsw i64 %indvars.iv19, 1
  %scevgep14 = getelementptr [4 x [80 x i8]], [4 x [80 x i8]]* %lsr.iv13, i64 0, i64 0, i64 20
  %159 = bitcast i8* %scevgep14 to [4 x [80 x i8]]*
  %exitcond21 = icmp ne i64 %indvars.iv.next20, 4
  br i1 %exitcond21, label %156, label %160

; <label>:160:                                    ; preds = %156
  %161 = load i32, i32* %105, align 4
  %162 = icmp eq i32 %161, 1
  br i1 %162, label %163, label %172

; <label>:163:                                    ; preds = %160
  %164 = call %struct.env_md_st* @EVP_md5()
  %165 = getelementptr inbounds [4 x [80 x i8]], [4 x [80 x i8]]* %6, i64 0, i64 %indvars.iv23
  %166 = getelementptr inbounds [80 x i8], [80 x i8]* %165, i32 0, i32 0
  %167 = load i32, i32* %110, align 8
  %168 = sext i32 %167 to i64
  %169 = getelementptr inbounds [4 x [20 x i8]], [4 x [20 x i8]]* %7, i64 0, i64 %indvars.iv23
  %170 = getelementptr inbounds [20 x i8], [20 x i8]* %169, i32 0, i32 0
  %171 = call i8* @HMAC(%struct.env_md_st* %164, i8* %166, i32 16, i8* %108, i64 %168, i8* %170, i32* null)
  br label %181

; <label>:172:                                    ; preds = %160
  %173 = call %struct.env_md_st* @EVP_sha1()
  %174 = getelementptr inbounds [4 x [80 x i8]], [4 x [80 x i8]]* %6, i64 0, i64 %indvars.iv23
  %175 = getelementptr inbounds [80 x i8], [80 x i8]* %174, i32 0, i32 0
  %176 = load i32, i32* %118, align 8
  %177 = sext i32 %176 to i64
  %178 = getelementptr inbounds [4 x [20 x i8]], [4 x [20 x i8]]* %7, i64 0, i64 %indvars.iv23
  %179 = getelementptr inbounds [20 x i8], [20 x i8]* %178, i32 0, i32 0
  %180 = call i8* @HMAC(%struct.env_md_st* %173, i8* %175, i32 16, i8* %116, i64 %177, i8* %179, i32* null)
  br label %181

; <label>:181:                                    ; preds = %172, %163
  %182 = getelementptr inbounds [4 x [20 x i8]], [4 x [20 x i8]]* %7, i64 0, i64 %indvars.iv23
  %183 = getelementptr inbounds [20 x i8], [20 x i8]* %182, i32 0, i32 0
  %184 = call i32 @memcmp(i8* %183, i8* %113, i64 16) #10
  %185 = icmp eq i32 %184, 0
  br i1 %185, label %186, label %283

; <label>:186:                                    ; preds = %181
  %.25.lcssa8.wide = phi i64 [ %indvars.iv23, %181 ]
  %187 = trunc i64 %.25.lcssa8.wide to i32
  %188 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 22
  %189 = load %struct._IO_FILE*, %struct._IO_FILE** %188, align 8
  %190 = icmp ne %struct._IO_FILE* %189, null
  br i1 %190, label %191, label %201

; <label>:191:                                    ; preds = %186
  %192 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 28
  %193 = load i32, i32* %192, align 8
  %194 = icmp ne i32 %193, 0
  br i1 %194, label %199, label %195

; <label>:195:                                    ; preds = %191
  %196 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 22
  %197 = load %struct._IO_FILE*, %struct._IO_FILE** %196, align 8
  %198 = call i32 @fclose(%struct._IO_FILE* %197)
  br label %199

; <label>:199:                                    ; preds = %195, %191
  %200 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 22
  store %struct._IO_FILE* null, %struct._IO_FILE** %200, align 8
  br label %201

; <label>:201:                                    ; preds = %199, %186
  %202 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 5
  %203 = load i32, i32* %202, align 4
  %204 = icmp slt i32 0, %203
  br i1 %204, label %.lr.ph.preheader, label %._crit_edge

.lr.ph.preheader:                                 ; preds = %201
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %.lr.ph
  %lsr.iv = phi [128 x %struct.WPA_data]* [ bitcast (i32* getelementptr inbounds ([128 x %struct.WPA_data], [128 x %struct.WPA_data]* @wpa_data, i64 0, i64 0, i32 8, i32 0, i32 0) to [128 x %struct.WPA_data]*), %.lr.ph.preheader ], [ %210, %.lr.ph ]
  %indvars.iv = phi i64 [ %indvars.iv.next, %.lr.ph ], [ 0, %.lr.ph.preheader ]
  %lsr.iv2 = bitcast [128 x %struct.WPA_data]* %lsr.iv to %union.pthread_cond_t*
  %lsr.iv1 = bitcast [128 x %struct.WPA_data]* %lsr.iv to %union.pthread_mutex_t*
  call void @unroll_loop(i32 107)
  %205 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %lsr.iv1) #9
  %scevgep3 = getelementptr %union.pthread_cond_t, %union.pthread_cond_t* %lsr.iv2, i64 -1
  %206 = call i32 @pthread_cond_signal(%union.pthread_cond_t* %scevgep3) #9
  %207 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %lsr.iv1) #9
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %208 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 5), align 4
  %209 = sext i32 %208 to i64
  %scevgep = getelementptr [128 x %struct.WPA_data], [128 x %struct.WPA_data]* %lsr.iv, i64 0, i64 1
  %210 = bitcast %struct.WPA_data* %scevgep to [128 x %struct.WPA_data]*
  %211 = icmp slt i64 %indvars.iv.next, %209
  br i1 %211, label %.lr.ph, label %._crit_edge.loopexit

._crit_edge.loopexit:                             ; preds = %.lr.ph
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %201
  %212 = getelementptr inbounds %struct.WPA_data, %struct.WPA_data* %11, i32 0, i32 6
  %213 = getelementptr inbounds [128 x i8], [128 x i8]* %212, i32 0, i32 0
  %214 = sext i32 %187 to i64
  %215 = getelementptr inbounds [4 x [128 x i8]], [4 x [128 x i8]]* %3, i64 0, i64 %214
  %216 = getelementptr inbounds [128 x i8], [128 x i8]* %215, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %213, i8* align 16 %216, i64 128, i1 false), !track !199
  %217 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 6
  %218 = load i32, i32* %217, align 8
  %219 = icmp ne i32 %218, 0
  br i1 %219, label %.loopexit4, label %220

; <label>:220:                                    ; preds = %._crit_edge
  %221 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* @mx_nb) #9
  %222 = load i64, i64* @nb_tried, align 8
  %223 = add nsw i64 %222, 4
  store i64 %223, i64* @nb_tried, align 8
  %224 = load i64, i64* @nb_kprev, align 8
  %225 = add nsw i64 %224, 4
  store i64 %225, i64* @nb_kprev, align 8
  %226 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* @mx_nb) #9
  %227 = sext i32 %187 to i64
  %228 = getelementptr inbounds [4 x [128 x i8]], [4 x [128 x i8]]* %3, i64 0, i64 %227
  %229 = getelementptr inbounds [128 x i8], [128 x i8]* %228, i32 0, i32 0
  %230 = call i64 @strlen(i8* %229) #10
  %231 = trunc i64 %230 to i32
  %232 = icmp sgt i32 %231, 64
  %spec.select1 = select i1 %232, i32 64, i32 %231
  %233 = icmp slt i32 %spec.select1, 8
  %.1 = select i1 %233, i32 8, i32 %spec.select1
  %234 = sext i32 %187 to i64
  %235 = getelementptr inbounds [4 x [128 x i8]], [4 x [128 x i8]]* %3, i64 0, i64 %234
  %236 = getelementptr inbounds [128 x i8], [128 x i8]* %235, i32 0, i32 0
  %237 = sext i32 %187 to i64
  %238 = getelementptr inbounds [4 x [128 x i8]], [4 x [128 x i8]]* %4, i64 0, i64 %237
  %239 = getelementptr inbounds [128 x i8], [128 x i8]* %238, i32 0, i32 0
  %240 = sext i32 %187 to i64
  %241 = getelementptr inbounds [4 x [80 x i8]], [4 x [80 x i8]]* %6, i64 0, i64 %240
  %242 = getelementptr inbounds [80 x i8], [80 x i8]* %241, i32 0, i32 0
  %243 = sext i32 %187 to i64
  %244 = getelementptr inbounds [4 x [20 x i8]], [4 x [20 x i8]]* %7, i64 0, i64 %243
  %245 = getelementptr inbounds [20 x i8], [20 x i8]* %244, i32 0, i32 0
  call void @show_wpa_stats(i8* %236, i32 %.1, i8* %239, i8* %242, i8* %245, i32 1)
  %246 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 27
  %247 = load i32, i32* %246, align 4
  %248 = icmp ne i32 %247, 0
  br i1 %248, label %249, label %252

; <label>:249:                                    ; preds = %220
  %250 = getelementptr [8 x i8], [8 x i8]* @.str.62, i32 0, i32 0
  %251 = call i32 (i8*, ...) @printf(i8* %250)
  br label %252

; <label>:252:                                    ; preds = %249, %220
  %253 = sub nsw i32 65, %.1
  %254 = sdiv i32 %253, 2
  %255 = sext i32 %187 to i64
  %256 = getelementptr inbounds [4 x [128 x i8]], [4 x [128 x i8]]* %3, i64 0, i64 %255
  %257 = getelementptr inbounds [128 x i8], [128 x i8]* %256, i32 0, i32 0
  %258 = getelementptr [35 x i8], [35 x i8]* @.str.63, i32 0, i32 0
  %259 = call i32 (i8*, ...) @printf(i8* %258, i32 %254, i8* %257)
  %260 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 27
  %261 = load i32, i32* %260, align 4
  %262 = icmp ne i32 %261, 0
  br i1 %262, label %263, label %266

; <label>:263:                                    ; preds = %252
  %264 = getelementptr [9 x i8], [9 x i8]* @.str.36, i32 0, i32 0
  %265 = call i32 (i8*, ...) @printf(i8* %264)
  br label %266

; <label>:266:                                    ; preds = %263, %252
  %267 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 42
  %268 = load i8*, i8** %267, align 8
  %269 = icmp ne i8* %268, null
  br i1 %269, label %270, label %.loopexit4

; <label>:270:                                    ; preds = %266
  %271 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 42
  %272 = load i8*, i8** %271, align 8
  %273 = getelementptr [2 x i8], [2 x i8]* @.str.64, i32 0, i32 0
  %274 = call %struct._IO_FILE* @fopen64(i8* %272, i8* %273), !track !200
  %275 = icmp ne %struct._IO_FILE* %274, null
  br i1 %275, label %276, label %.loopexit4

; <label>:276:                                    ; preds = %270
  %277 = sext i32 %187 to i64
  %278 = getelementptr inbounds [4 x [128 x i8]], [4 x [128 x i8]]* %3, i64 0, i64 %277
  %279 = getelementptr inbounds [128 x i8], [128 x i8]* %278, i32 0, i32 0
  %280 = getelementptr [3 x i8], [3 x i8]* @.str.65, i32 0, i32 0
  %281 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %274, i8* %280, i8* %279)
  %282 = call i32 @fclose(%struct._IO_FILE* %274)
  br label %.loopexit4

; <label>:283:                                    ; preds = %181
  %indvars.iv.next24 = add nuw nsw i64 %indvars.iv23, 1
  %scevgep12 = getelementptr [4 x [80 x i8]], [4 x [80 x i8]]* %lsr.iv11, i64 0, i64 1, i64 0
  %284 = bitcast i8* %scevgep12 to [4 x [80 x i8]]*
  %285 = icmp ult i64 %indvars.iv.next24, %81
  br i1 %285, label %153, label %286

; <label>:286:                                    ; preds = %283
  %287 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* @mx_nb) #9
  %288 = load i64, i64* @nb_tried, align 8
  %289 = add nsw i64 %288, 4
  store i64 %289, i64* @nb_tried, align 8
  %290 = load i64, i64* @nb_kprev, align 8
  %291 = add nsw i64 %290, 4
  store i64 %291, i64* @nb_kprev, align 8
  %292 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* @mx_nb) #9
  %293 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 6), align 8
  %294 = icmp ne i32 %293, 0
  br i1 %294, label %300, label %295

; <label>:295:                                    ; preds = %286
  %296 = call i64 @strlen(i8* %121) #10
  %297 = trunc i64 %296 to i32
  %298 = icmp sgt i32 %297, 64
  %spec.select2 = select i1 %298, i32 64, i32 %297
  %299 = icmp slt i32 %spec.select2, 8
  %.3 = select i1 %299, i32 8, i32 %spec.select2
  call void @show_wpa_stats(i8* %123, i32 %.3, i8* %125, i8* %127, i8* %129, i32 0)
  br label %300

; <label>:300:                                    ; preds = %295, %286
  %301 = load i32, i32* @close_aircrack, align 4
  %302 = icmp ne i32 %301, 0
  br i1 %302, label %._crit_edge27.loopexit, label %.lr.ph26

.loopexit4.loopexit:                              ; preds = %140
  br label %.loopexit4

.loopexit4:                                       ; preds = %.loopexit4.loopexit, %266, %276, %270, %._crit_edge
  ret i32 0
}

declare dso_local i32 @shasse2_cpuid() #1

; Function Attrs: noreturn
declare dso_local void @pthread_exit(i8*) #6

; Function Attrs: nounwind
declare dso_local i32 @sched_yield() #2

declare dso_local %struct.env_md_st* @EVP_md5() #1

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @next_dict(i32) #0 {
  %2 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 22
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %2, align 8
  %4 = icmp ne %struct._IO_FILE* %3, null
  br i1 %4, label %5, label %15

; <label>:5:                                      ; preds = %1
  %6 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 28
  %7 = load i32, i32* %6, align 8
  %8 = icmp ne i32 %7, 0
  br i1 %8, label %13, label %9

; <label>:9:                                      ; preds = %5
  %10 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 22
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** %10, align 8
  %12 = call i32 @fclose(%struct._IO_FILE* %11)
  br label %13

; <label>:13:                                     ; preds = %9, %5
  %14 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 22
  store %struct._IO_FILE* null, %struct._IO_FILE** %14, align 8
  br label %15

; <label>:15:                                     ; preds = %13, %1
  %16 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 23
  store i32 %0, i32* %16, align 8
  %17 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 23
  %18 = load i32, i32* %17, align 8
  %19 = sext i32 %18 to i64
  %20 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 21
  %21 = getelementptr inbounds [128 x i8*], [128 x i8*]* %20, i64 0, i64 %19
  %22 = load i8*, i8** %21, align 8
  %23 = icmp eq i8* %22, null
  br i1 %23, label %UnifiedReturnBlock, label %.preheader

.preheader:                                       ; preds = %15
  call void @unroll_loop(i32 108)
  %24 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 23
  %25 = load i32, i32* %24, align 8
  %26 = icmp slt i32 %25, 128
  br i1 %26, label %.lr.ph.preheader, label %.loopexit

.lr.ph.preheader:                                 ; preds = %.preheader
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %.backedge
  %27 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %28
  %30 = load i8*, i8** %29, align 8
  %31 = icmp ne i8* %30, null
  br i1 %31, label %32, label %.loopexit.loopexit

; <label>:32:                                     ; preds = %.lr.ph
  %33 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %34
  %36 = load i8*, i8** %35, align 8
  %37 = call i32 @strcmp(i8* %36, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i64 0, i64 0)) #10
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %51

; <label>:39:                                     ; preds = %32
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 28), align 8
  %40 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
  %41 = call i32 @fileno(%struct._IO_FILE* %40) #9
  %42 = call %struct._IO_FILE* @fdopen(i32 %41, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.66, i64 0, i64 0)) #9, !track !201
  store %struct._IO_FILE* %42, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %43 = icmp eq %struct._IO_FILE* %42, null
  br i1 %43, label %44, label %49

; <label>:44:                                     ; preds = %39
  call void @perror(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.67, i64 0, i64 0))
  %45 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %46 = add nsw i32 %45, 1
  store i32 %46, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge

.backedge:                                        ; preds = %44, %58, %68
  call void @unroll_loop(i32 108)
  %47 = load i32, i32* %24, align 8
  %48 = icmp slt i32 %47, 128
  br i1 %48, label %.lr.ph, label %.loopexit.loopexit

; <label>:49:                                     ; preds = %39
  %50 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 24
  store i32 1, i32* %50, align 4
  br label %.loopexit

; <label>:51:                                     ; preds = %32
  store i32 0, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 28), align 8
  %52 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %53 = sext i32 %52 to i64
  %54 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %53
  %55 = load i8*, i8** %54, align 8
  %56 = call %struct._IO_FILE* @fopen64(i8* %55, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.66, i64 0, i64 0)), !track !202
  store %struct._IO_FILE* %56, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %57 = icmp eq %struct._IO_FILE* %56, null
  br i1 %57, label %58, label %61

; <label>:58:                                     ; preds = %51
  call void @perror(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.67, i64 0, i64 0))
  %59 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %60 = add nsw i32 %59, 1
  store i32 %60, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge

; <label>:61:                                     ; preds = %51
  %62 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %63 = call i32 @fseek(%struct._IO_FILE* %62, i64 0, i32 2)
  %64 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %65 = call i64 @ftell(%struct._IO_FILE* %64)
  %66 = icmp sle i64 %65, 0
  %67 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  br i1 %66, label %68, label %73

; <label>:68:                                     ; preds = %61
  %69 = call i32 @fclose(%struct._IO_FILE* %67)
  store %struct._IO_FILE* null, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %70 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.68, i64 0, i64 0))
  %71 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %72 = add nsw i32 %71, 1
  store i32 %72, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge

; <label>:73:                                     ; preds = %61
  %.lcssa = phi %struct._IO_FILE* [ %67, %61 ]
  call void @rewind(%struct._IO_FILE* %.lcssa)
  br label %.loopexit

.loopexit.loopexit:                               ; preds = %.lr.ph, %.backedge
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit.loopexit, %.preheader, %49, %73
  %74 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 23
  %75 = load i32, i32* %74, align 8
  %76 = icmp sge i32 %75, 128
  br i1 %76, label %UnifiedReturnBlock, label %77

; <label>:77:                                     ; preds = %.loopexit
  %78 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 23
  %79 = load i32, i32* %78, align 8
  %80 = sext i32 %79 to i64
  %81 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 21
  %82 = getelementptr inbounds [128 x i8*], [128 x i8*]* %81, i64 0, i64 %80
  %83 = load i8*, i8** %82, align 8
  %84 = icmp eq i8* %83, null
  %spec.select = select i1 %84, i32 1, i32 0
  br label %UnifiedReturnBlock

UnifiedReturnBlock:                               ; preds = %15, %.loopexit, %77
  %UnifiedRetVal = phi i32 [ %spec.select, %77 ], [ 1, %.loopexit ], [ 1, %15 ]
  ret i32 %UnifiedRetVal
}

; Function Attrs: nounwind
declare dso_local i32 @fileno(%struct._IO_FILE*) #2

; Function Attrs: nounwind
declare dso_local %struct._IO_FILE* @fdopen(i32, i8*) #2

declare dso_local i32 @fseek(%struct._IO_FILE*, i64, i32) #1

declare dso_local i64 @ftell(%struct._IO_FILE*) #1

declare dso_local void @rewind(%struct._IO_FILE*) #1

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @do_wpa_crack() #0 {
  %1 = alloca [128 x i8], align 16, !track !203
  %2 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 0
  store i32 2, i32* %2, align 8
  %3 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 5
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 6
  %6 = load i32, i32* %5, align 8
  %7 = icmp ne i32 %6, 0
  br i1 %7, label %28, label %8

; <label>:8:                                      ; preds = %0
  %9 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 27
  %10 = load i32, i32* %9, align 4
  %11 = icmp ne i32 %10, 0
  br i1 %11, label %12, label %15

; <label>:12:                                     ; preds = %8
  %13 = getelementptr [9 x i8], [9 x i8]* @.str.69, i32 0, i32 0
  %14 = call i32 (i8*, ...) @printf(i8* %13)
  br label %15

; <label>:15:                                     ; preds = %12, %8
  %16 = getelementptr [5 x i8], [5 x i8]* @.str.30, i32 0, i32 0
  %17 = call i32 (i8*, ...) @printf(i8* %16)
  %18 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 27
  %19 = load i32, i32* %18, align 4
  %20 = icmp ne i32 %19, 0
  br i1 %20, label %21, label %24

; <label>:21:                                     ; preds = %15
  %22 = getelementptr [8 x i8], [8 x i8]* @.str.31, i32 0, i32 0
  %23 = call i32 (i8*, ...) @printf(i8* %22)
  br label %24

; <label>:24:                                     ; preds = %21, %15
  %25 = load i8*, i8** @progname, align 8
  %26 = getelementptr [10 x i8], [10 x i8]* @.str.70, i32 0, i32 0
  %27 = call i32 (i8*, ...) @printf(i8* %26, i8* %25)
  br label %28

; <label>:28:                                     ; preds = %24, %0
  %29 = icmp sgt i32 %4, 0
  br i1 %29, label %.lr.ph26.preheader, label %._crit_edge27

.lr.ph26.preheader:                               ; preds = %28
  %30 = getelementptr inbounds [128 x i8], [128 x i8]* %1, i32 0, i32 0
  %31 = getelementptr inbounds [128 x i8], [128 x i8]* %1, i32 0, i32 0
  %32 = getelementptr inbounds [128 x i8], [128 x i8]* %1, i32 0, i32 0
  %33 = getelementptr inbounds [128 x i8], [128 x i8]* %1, i32 0, i32 0
  %34 = getelementptr inbounds [128 x i8], [128 x i8]* %1, i32 0, i32 0
  %scevgep = getelementptr [128 x i8], [128 x i8]* %1, i64 0, i64 -2
  br label %.lr.ph26

.lr.ph26:                                         ; preds = %.lr.ph26.preheader, %113
  %.0124 = phi i32 [ %.7.lcssa, %113 ], [ 0, %.lr.ph26.preheader ]
  %.0323 = phi i32 [ %.25, %113 ], [ 0, %.lr.ph26.preheader ]
  %.0622 = phi i32 [ %.28, %113 ], [ 0, %.lr.ph26.preheader ]
  call void @unroll_loop(i32 109)
  %35 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %36 = icmp eq %struct._IO_FILE* %35, null
  br i1 %36, label %._crit_edge27.loopexit1, label %.preheader.preheader

.preheader.preheader:                             ; preds = %.lr.ph26
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %._crit_edge
  %.1 = phi i32 [ %.6, %._crit_edge ], [ %.0124, %.preheader.preheader ]
  call void @unroll_loop(i32 110)
  call void @llvm.memset.p0i8.i64(i8* align 16 %30, i8 0, i64 128, i1 false)
  %37 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %38 = call i8* @fgets(i8* %31, i32 128, %struct._IO_FILE* %37), !track !204
  %39 = icmp eq i8* %38, null
  br i1 %39, label %40, label %50

; <label>:40:                                     ; preds = %.preheader
  %41 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 27), align 4
  %42 = icmp ne i32 %41, 0
  br i1 %42, label %43, label %45

; <label>:43:                                     ; preds = %40
  %44 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.36, i64 0, i64 0))
  br label %45

; <label>:45:                                     ; preds = %43, %40
  %46 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %47 = add nsw i32 %46, 1
  %48 = call i32 @next_dict(i32 %47)
  %49 = icmp ne i32 %48, 0
  br i1 %49, label %._crit_edge27.loopexit, label %._crit_edge

; <label>:50:                                     ; preds = %.preheader
  %51 = call i64 @strlen(i8* %32) #10
  %52 = trunc i64 %51 to i32
  %53 = icmp slt i32 %52, 8
  br i1 %53, label %._crit_edge, label %54

; <label>:54:                                     ; preds = %50
  %55 = icmp sgt i32 %52, 64
  %spec.select = select i1 %55, i32 64, i32 %52
  %56 = sub i32 %spec.select, -1
  %57 = sext i32 %56 to i64
  br label %58

; <label>:58:                                     ; preds = %69, %54
  %lsr.iv = phi i64 [ %lsr.iv.next, %69 ], [ %57, %54 ]
  %59 = add i64 %lsr.iv, -1
  call void @unroll_loop(i32 111)
  %60 = icmp sgt i64 %59, 0
  br i1 %60, label %61, label %69

; <label>:61:                                     ; preds = %58
  %scevgep3 = getelementptr i8, i8* %scevgep, i64 %lsr.iv
  %62 = load i8, i8* %scevgep3, align 1
  %63 = sext i8 %62 to i32
  %64 = icmp eq i32 %63, 13
  br i1 %64, label %69, label %65

; <label>:65:                                     ; preds = %61
  %scevgep2 = getelementptr i8, i8* %scevgep, i64 %lsr.iv
  %66 = load i8, i8* %scevgep2, align 1
  %67 = sext i8 %66 to i32
  %68 = icmp eq i32 %67, 10
  br label %69

; <label>:69:                                     ; preds = %61, %65, %58
  %70 = phi i1 [ false, %58 ], [ true, %61 ], [ %68, %65 ]
  %lsr.iv.next = add i64 %lsr.iv, -1
  br i1 %70, label %58, label %71

; <label>:71:                                     ; preds = %69
  %.3.lcssa.wide = phi i64 [ %lsr.iv.next, %69 ]
  %72 = trunc i64 %.3.lcssa.wide to i32
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %._crit_edge, label %74

; <label>:74:                                     ; preds = %71
  %75 = sext i32 %72 to i64
  %76 = getelementptr inbounds [128 x i8], [128 x i8]* %1, i64 0, i64 %75
  store i8 0, i8* %76, align 1
  %77 = icmp slt i32 0, %72
  br i1 %77, label %.lr.ph.preheader, label %._crit_edge

.lr.ph.preheader:                                 ; preds = %74
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %87
  %indvars.iv13 = phi i64 [ %indvars.iv.next14, %87 ], [ 0, %.lr.ph.preheader ]
  %.412 = phi i32 [ %.5, %87 ], [ %72, %.lr.ph.preheader ]
  call void @unroll_loop(i32 112)
  %scevgep4 = getelementptr [128 x i8], [128 x i8]* %1, i64 0, i64 %indvars.iv13
  %78 = load i8, i8* %scevgep4, align 1
  %79 = sext i8 %78 to i32
  %80 = and i32 %79, -128
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %86

; <label>:82:                                     ; preds = %.lr.ph
  %scevgep5 = getelementptr [128 x i8], [128 x i8]* %1, i64 0, i64 %indvars.iv13
  %83 = load i8, i8* %scevgep5, align 1
  %84 = sext i8 %83 to i32
  %85 = icmp slt i32 %84, 32
  br i1 %85, label %86, label %87

; <label>:86:                                     ; preds = %82, %.lr.ph
  br label %87

; <label>:87:                                     ; preds = %82, %86
  %.5 = phi i32 [ 0, %86 ], [ %.412, %82 ]
  %indvars.iv.next14 = add nuw nsw i64 %indvars.iv13, 1
  %88 = sext i32 %.5 to i64
  %89 = icmp slt i64 %indvars.iv.next14, %88
  br i1 %89, label %.lr.ph, label %._crit_edge.loopexit

._crit_edge.loopexit:                             ; preds = %87
  %.6.ph = phi i32 [ %.5, %87 ]
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %74, %71, %50, %45
  %.6 = phi i32 [ %.1, %45 ], [ %52, %50 ], [ %72, %71 ], [ %72, %74 ], [ %.6.ph, %._crit_edge.loopexit ]
  %90 = icmp slt i32 %.6, 8
  br i1 %90, label %.preheader, label %91

; <label>:91:                                     ; preds = %._crit_edge
  %92 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 5), align 4
  %93 = icmp slt i32 0, %92
  br i1 %93, label %.lr.ph18.preheader, label %.loopexit

.lr.ph18.preheader:                               ; preds = %91
  br label %.lr.ph18

.lr.ph18:                                         ; preds = %.lr.ph18.preheader, %98
  %.716 = phi i32 [ %102, %98 ], [ 0, %.lr.ph18.preheader ]
  %.1415 = phi i32 [ %101, %98 ], [ %.0323, %.lr.ph18.preheader ]
  call void @unroll_loop(i32 113)
  %94 = sext i32 %.1415 to i64
  %95 = getelementptr inbounds [128 x %struct.WPA_data], [128 x %struct.WPA_data]* @wpa_data, i64 0, i64 %94
  %96 = call i32 @wpa_send_passphrase(i8* %33, %struct.WPA_data* %95, i32 0)
  %97 = icmp ne i32 %96, 0
  br i1 %97, label %.lr.ph18..loopexit.loopexit_crit_edge, label %98

; <label>:98:                                     ; preds = %.lr.ph18
  %99 = add nsw i32 %.1415, 1
  %100 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 5), align 4
  %101 = srem i32 %99, %100
  %102 = add nuw nsw i32 %.716, 1
  %103 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 5), align 4
  %104 = icmp slt i32 %102, %103
  br i1 %104, label %.lr.ph18, label %.loopexit.loopexitsplit

.loopexit.loopexitsplit:                          ; preds = %98
  br label %.loopexit.loopexit

.lr.ph18..loopexit.loopexit_crit_edge:            ; preds = %.lr.ph18
  br label %.loopexit.loopexit

.loopexit.loopexit:                               ; preds = %.loopexit.loopexitsplit, %.lr.ph18..loopexit.loopexit_crit_edge
  %.14.lcssa.ph = phi i32 [ %.1415, %.lr.ph18..loopexit.loopexit_crit_edge ], [ %101, %.loopexit.loopexitsplit ]
  %.7.lcssa.ph = phi i32 [ %.716, %.lr.ph18..loopexit.loopexit_crit_edge ], [ %102, %.loopexit.loopexitsplit ]
  %.28.ph = phi i32 [ %96, %.lr.ph18..loopexit.loopexit_crit_edge ], [ %96, %.loopexit.loopexitsplit ]
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit.loopexit, %91
  %.14.lcssa = phi i32 [ %.0323, %91 ], [ %.14.lcssa.ph, %.loopexit.loopexit ]
  %.7.lcssa = phi i32 [ 0, %91 ], [ %.7.lcssa.ph, %.loopexit.loopexit ]
  %.28 = phi i32 [ %.0622, %91 ], [ %.28.ph, %.loopexit.loopexit ]
  %105 = icmp eq i32 %.28, 0
  br i1 %105, label %106, label %113

; <label>:106:                                    ; preds = %.loopexit
  %107 = sext i32 %.14.lcssa to i64
  %108 = getelementptr inbounds [128 x %struct.WPA_data], [128 x %struct.WPA_data]* @wpa_data, i64 0, i64 %107
  %109 = call i32 @wpa_send_passphrase(i8* %34, %struct.WPA_data* %108, i32 1)
  %110 = add nsw i32 %.14.lcssa, 1
  %111 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 5), align 4
  %112 = srem i32 %110, %111
  br label %113

; <label>:113:                                    ; preds = %106, %.loopexit
  %.25 = phi i32 [ %112, %106 ], [ %.14.lcssa, %.loopexit ]
  br i1 %29, label %.lr.ph26, label %._crit_edge27.loopexit1

._crit_edge27.loopexit:                           ; preds = %45
  br label %._crit_edge27

._crit_edge27.loopexit1:                          ; preds = %.lr.ph26, %113
  br label %._crit_edge27

._crit_edge27:                                    ; preds = %._crit_edge27.loopexit1, %._crit_edge27.loopexit, %28
  ret i32 1
}

declare dso_local i8* @fgets(i8*, i32, %struct._IO_FILE*) #1

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @next_key(i8**, i32) #0 {
  %3 = alloca i8*, align 8, !track !205
  %4 = alloca i32, align 4, !track !206
  %5 = call noalias i8* @malloc(i64 1024) #9, !track !207
  store i8* %5, i8** %3, align 8
  %6 = sext i32 %1 to i64
  store i8* %5, i8** %3, align 8
  %7 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 22
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8
  %9 = icmp eq %struct._IO_FILE* %8, null
  br i1 %9, label %._crit_edge, label %.lr.ph.preheader

.lr.ph.preheader:                                 ; preds = %2
  %10 = mul nsw i32 %1, 2
  %11 = sub nsw i32 %1, 1
  %12 = add nsw i32 %10, %11
  %13 = icmp slt i64 0, %6
  br label %.lr.ph

._crit_edge.loopexit:                             ; preds = %.backedge
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %2
  %14 = load i8*, i8** %3, align 8
  call void @free(i8* %14) #9
  store i8* null, i8** %3, align 8
  br label %143

.lr.ph:                                           ; preds = %.lr.ph.preheader, %.backedge
  call void @unroll_loop(i32 114)
  %15 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %16 = sext i32 %15 to i64
  %17 = getelementptr inbounds [128 x i32], [128 x i32]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 25), i64 0, i64 %16
  %18 = load i32, i32* %17, align 4
  %19 = icmp ne i32 %18, 0
  br i1 %19, label %20, label %89

; <label>:20:                                     ; preds = %.lr.ph
  %21 = load i8*, i8** %3, align 8
  %22 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %23 = call i8* @fgets(i8* %21, i32 %12, %struct._IO_FILE* %22), !track !208
  %24 = icmp eq i8* %23, null
  br i1 %24, label %25, label %37

; <label>:25:                                     ; preds = %20
  %26 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 27), align 4
  %27 = icmp ne i32 %26, 0
  br i1 %27, label %28, label %30

; <label>:28:                                     ; preds = %25
  %29 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.36, i64 0, i64 0))
  br label %30

; <label>:30:                                     ; preds = %28, %25
  %31 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %32 = add nsw i32 %31, 1
  %33 = call i32 @next_dict(i32 %32)
  %34 = icmp ne i32 %33, 0
  br i1 %34, label %35, label %.backedge

; <label>:35:                                     ; preds = %30
  %36 = load i8*, i8** %3, align 8
  call void @free(i8* %36) #9
  store i8* null, i8** %3, align 8
  br label %143

; <label>:37:                                     ; preds = %20
  %38 = load i8*, i8** %3, align 8
  %39 = call i64 @strlen(i8* %38) #10
  %40 = trunc i64 %39 to i32
  %41 = icmp sle i32 %40, 2
  br i1 %41, label %.backedge, label %42

; <label>:42:                                     ; preds = %37
  %43 = load i8*, i8** %3, align 8
  %44 = sub nsw i32 %40, 1
  %45 = sext i32 %44 to i64
  %46 = getelementptr inbounds i8, i8* %43, i64 %45
  %47 = load i8, i8* %46, align 1
  %48 = sext i8 %47 to i32
  %49 = icmp eq i32 %48, 10
  br i1 %49, label %50, label %55

; <label>:50:                                     ; preds = %42
  %51 = load i8*, i8** %3, align 8
  %52 = add nsw i32 %40, -1
  %53 = sext i32 %52 to i64
  %54 = getelementptr inbounds i8, i8* %51, i64 %53
  store i8 0, i8* %54, align 1
  br label %55

; <label>:55:                                     ; preds = %50, %42
  %.03 = phi i32 [ %52, %50 ], [ %40, %42 ]
  %56 = load i8*, i8** %3, align 8
  %57 = sub nsw i32 %.03, 1
  %58 = sext i32 %57 to i64
  %59 = getelementptr inbounds i8, i8* %56, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = sext i8 %60 to i32
  %62 = icmp eq i32 %61, 13
  br i1 %62, label %63, label %68

; <label>:63:                                     ; preds = %55
  %64 = load i8*, i8** %3, align 8
  %65 = add nsw i32 %.03, -1
  %66 = sext i32 %65 to i64
  %67 = getelementptr inbounds i8, i8* %64, i64 %66
  store i8 0, i8* %67, align 1
  br label %68

; <label>:68:                                     ; preds = %63, %55
  %.1 = phi i32 [ %65, %63 ], [ %.03, %55 ]
  %69 = icmp sle i32 %.1, 0
  br i1 %69, label %.backedge, label %70

; <label>:70:                                     ; preds = %68
  %71 = call i8* @strsep(i8** %3, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.71, i64 0, i64 0)) #9
  call void @unroll_loop(i32 115)
  %72 = icmp ne i8* %71, null
  %spec.select1 = select i1 %13, i1 %72, i1 false
  br i1 %spec.select1, label %.lr.ph5.preheader, label %.loopexit

.lr.ph5.preheader:                                ; preds = %70
  br label %.lr.ph5

.lr.ph5:                                          ; preds = %.lr.ph5.preheader, %81
  %lsr.iv = phi i64 [ 1, %.lr.ph5.preheader ], [ %lsr.iv.next, %81 ]
  %.013 = phi i8* [ %85, %81 ], [ %71, %.lr.ph5.preheader ]
  %73 = call i64 @strlen(i8* %.013) #10
  %74 = icmp ugt i64 %73, 2
  br i1 %74, label %.loopexit.loopexit, label %75

; <label>:75:                                     ; preds = %.lr.ph5
  %76 = call i64 @strlen(i8* %.013) #10
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %.loopexit.loopexit, label %78

; <label>:78:                                     ; preds = %75
  %79 = call i32 (i8*, i8*, ...) @sscanf(i8* %.013, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.72, i64 0, i64 0), i32* %4) #9
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %.loopexit.loopexit, label %81

; <label>:81:                                     ; preds = %78
  %82 = load i32, i32* %4, align 4
  %83 = trunc i32 %82 to i8
  %84 = load i8*, i8** %0, align 8
  %scevgep = getelementptr i8, i8* %84, i64 %lsr.iv
  %scevgep1 = getelementptr i8, i8* %scevgep, i64 -1
  store i8 %83, i8* %scevgep1, align 1
  %85 = call i8* @strsep(i8** %3, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.71, i64 0, i64 0)) #9
  call void @unroll_loop(i32 115)
  %86 = icmp slt i64 %lsr.iv, %6
  %87 = icmp ne i8* %85, null
  %spec.select = select i1 %86, i1 %87, i1 false
  %lsr.iv.next = add i64 %lsr.iv, 1
  br i1 %spec.select, label %.lr.ph5, label %.loopexit.loopexit

.loopexit.loopexit:                               ; preds = %81, %78, %.lr.ph5, %75
  %.02.ph = phi i32 [ 1, %75 ], [ 1, %.lr.ph5 ], [ 1, %78 ], [ 0, %81 ]
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit.loopexit, %70
  %.02 = phi i32 [ 0, %70 ], [ %.02.ph, %.loopexit.loopexit ]
  %88 = icmp ne i32 %.02, 0
  br i1 %88, label %.backedge, label %141

; <label>:89:                                     ; preds = %.lr.ph
  %90 = load i8*, i8** %0, align 8
  %91 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %92 = call i8* @fgets(i8* %90, i32 %1, %struct._IO_FILE* %91), !track !209
  %93 = icmp eq i8* %92, null
  br i1 %93, label %94, label %106

; <label>:94:                                     ; preds = %89
  %95 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 27), align 4
  %96 = icmp ne i32 %95, 0
  br i1 %96, label %97, label %99

; <label>:97:                                     ; preds = %94
  %98 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.36, i64 0, i64 0))
  br label %99

; <label>:99:                                     ; preds = %97, %94
  %100 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %101 = add nsw i32 %100, 1
  %102 = call i32 @next_dict(i32 %101)
  %103 = icmp ne i32 %102, 0
  br i1 %103, label %104, label %.backedge

; <label>:104:                                    ; preds = %99
  %105 = load i8*, i8** %3, align 8
  call void @free(i8* %105) #9
  store i8* null, i8** %3, align 8
  br label %143

; <label>:106:                                    ; preds = %89
  %107 = load i8*, i8** %0, align 8
  %108 = call i64 @strlen(i8* %107) #10
  %109 = trunc i64 %108 to i32
  %110 = icmp sle i32 %109, 2
  br i1 %110, label %.backedge, label %111

; <label>:111:                                    ; preds = %106
  %112 = load i8*, i8** %0, align 8
  %113 = sub nsw i32 %109, 1
  %114 = sext i32 %113 to i64
  %115 = getelementptr inbounds i8, i8* %112, i64 %114
  %116 = load i8, i8* %115, align 1
  %117 = sext i8 %116 to i32
  %118 = icmp eq i32 %117, 10
  br i1 %118, label %119, label %124

; <label>:119:                                    ; preds = %111
  %120 = load i8*, i8** %0, align 8
  %121 = add nsw i32 %109, -1
  %122 = sext i32 %121 to i64
  %123 = getelementptr inbounds i8, i8* %120, i64 %122
  store i8 0, i8* %123, align 1
  br label %124

; <label>:124:                                    ; preds = %119, %111
  %.3 = phi i32 [ %121, %119 ], [ %109, %111 ]
  %125 = load i8*, i8** %0, align 8
  %126 = sub nsw i32 %.3, 1
  %127 = sext i32 %126 to i64
  %128 = getelementptr inbounds i8, i8* %125, i64 %127
  %129 = load i8, i8* %128, align 1
  %130 = sext i8 %129 to i32
  %131 = icmp eq i32 %130, 13
  br i1 %131, label %132, label %137

; <label>:132:                                    ; preds = %124
  %133 = load i8*, i8** %0, align 8
  %134 = add nsw i32 %.3, -1
  %135 = sext i32 %134 to i64
  %136 = getelementptr inbounds i8, i8* %133, i64 %135
  store i8 0, i8* %136, align 1
  br label %137

; <label>:137:                                    ; preds = %132, %124
  %.4 = phi i32 [ %134, %132 ], [ %.3, %124 ]
  %138 = icmp sle i32 %.4, 0
  br i1 %138, label %.backedge, label %141

.backedge:                                        ; preds = %137, %106, %99, %.loopexit, %68, %37, %30
  store i8* %5, i8** %3, align 8
  %139 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %140 = icmp eq %struct._IO_FILE* %139, null
  br i1 %140, label %._crit_edge.loopexit, label %.lr.ph

; <label>:141:                                    ; preds = %.loopexit, %137
  %142 = load i8*, i8** %3, align 8
  call void @free(i8* %142) #9
  store i8* null, i8** %3, align 8
  br label %143

; <label>:143:                                    ; preds = %141, %104, %35, %._crit_edge
  %.0 = phi i32 [ 1, %._crit_edge ], [ 1, %35 ], [ 0, %141 ], [ 1, %104 ]
  ret i32 %.0
}

; Function Attrs: nounwind
declare dso_local i32 @sscanf(i8*, i8*, ...) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @set_dicts(i8*) #0 {
  %2 = alloca i8*, align 8, !track !210
  store i8* %0, i8** %2, align 8
  %3 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 23
  store i32 0, i32* %3, align 8
  %4 = getelementptr [2 x i8], [2 x i8]* @.str.6, i32 0, i32 0
  %5 = call i8* @strsep(i8** %2, i8* %4) #9
  br label %6

; <label>:6:                                      ; preds = %1, %6
  %lsr.iv = phi i64 [ -1024, %1 ], [ %lsr.iv.next, %6 ]
  %lsr.iv1 = inttoptr i64 %lsr.iv to i8**
  call void @unroll_loop(i32 116)
  %uglygep = getelementptr i8, i8* bitcast (%struct.options* @opt to i8*), i64 %lsr.iv
  %uglygep2 = bitcast i8* %uglygep to i8**
  %scevgep = getelementptr i8*, i8** %uglygep2, i64 182
  store i8* null, i8** %scevgep, align 8
  %lsr.iv.next = add nsw i64 %lsr.iv, 8
  %exitcond = icmp ne i64 %lsr.iv.next, 0
  br i1 %exitcond, label %6, label %.preheader

.preheader:                                       ; preds = %6
  %.02.ph = phi i8* [ %5, %6 ]
  call void @unroll_loop(i32 117)
  %7 = icmp ne i8* %.02.ph, null
  %8 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 23
  %9 = load i32, i32* %8, align 8
  %10 = icmp slt i32 %9, 128
  %11 = select i1 %7, i1 %10, i1 false
  br i1 %11, label %.lr.ph.preheader, label %._crit_edge

.lr.ph.preheader:                                 ; preds = %.preheader
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %49
  %.021 = phi i8* [ %50, %49 ], [ %.02.ph, %.lr.ph.preheader ]
  %12 = call i64 @strlen(i8* %.021) #10
  %13 = add i64 %12, 1
  %14 = trunc i64 %13 to i32
  %15 = sext i32 %14 to i64
  %16 = mul i64 %15, 1
  %17 = call noalias i8* @malloc(i64 %16) #9, !track !211
  %18 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %19
  store i8* %17, i8** %20, align 8
  %21 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %22
  %24 = load i8*, i8** %23, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %26, label %28

; <label>:26:                                     ; preds = %.lr.ph
  %27 = getelementptr [19 x i8], [19 x i8]* @.str.73, i32 0, i32 0
  call void @perror(i8* %27)
  br label %65

; <label>:28:                                     ; preds = %.lr.ph
  %29 = call i32 @strncasecmp(i8* %.021, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.74, i64 0, i64 0), i64 2) #10
  %30 = icmp eq i32 %29, 0
  %31 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %32 = sext i32 %31 to i64
  %33 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %32
  %34 = load i8*, i8** %33, align 8
  br i1 %30, label %35, label %43

; <label>:35:                                     ; preds = %28
  %36 = getelementptr inbounds i8, i8* %.021, i64 2
  %37 = sub nsw i32 %14, 2
  %38 = sext i32 %37 to i64
  %39 = call i8* @strncpy(i8* %34, i8* %36, i64 %38) #9, !track !212
  %40 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %41 = sext i32 %40 to i64
  %42 = getelementptr inbounds [128 x i32], [128 x i32]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 25), i64 0, i64 %41
  store i32 1, i32* %42, align 4
  br label %49

; <label>:43:                                     ; preds = %28
  %44 = sext i32 %14 to i64
  %45 = call i8* @strncpy(i8* %34, i8* %.021, i64 %44) #9, !track !213
  %46 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %47 = sext i32 %46 to i64
  %48 = getelementptr inbounds [128 x i32], [128 x i32]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 25), i64 0, i64 %47
  store i32 0, i32* %48, align 4
  br label %49

; <label>:49:                                     ; preds = %43, %35
  %50 = call i8* @strsep(i8** %2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0)) #9
  %51 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %52 = add nsw i32 %51, 1
  store i32 %52, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  call void @unroll_loop(i32 117)
  %53 = icmp ne i8* %50, null
  %54 = load i32, i32* %8, align 8
  %55 = icmp slt i32 %54, 128
  %56 = select i1 %53, i1 %55, i1 false
  br i1 %56, label %.lr.ph, label %._crit_edge.loopexit

._crit_edge.loopexit:                             ; preds = %49
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %.preheader
  %57 = call i32 @next_dict(i32 0)
  br label %58

; <label>:58:                                     ; preds = %58, %._crit_edge
  %59 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %60 = add nsw i32 %59, 1
  %61 = call i32 @next_dict(i32 %60)
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %58, label %63

; <label>:63:                                     ; preds = %58
  %64 = call i32 @next_dict(i32 0)
  br label %65

; <label>:65:                                     ; preds = %63, %26
  %.0 = phi i32 [ 1, %26 ], [ 0, %63 ]
  ret i32 %.0
}

; Function Attrs: nounwind readonly
declare dso_local i32 @strncasecmp(i8*, i8*, i64) #3

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @crack_wep_dict() #0 {
  %1 = alloca %struct.timeval, align 8
  %2 = alloca %struct.timeval, align 8
  %3 = alloca i8*, align 8, !track !214
  %4 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 10
  %5 = load i32, i32* %4, align 4
  %6 = add nsw i32 %5, 1
  %7 = sext i32 %6 to i64
  %8 = mul i64 1, %7
  %9 = call noalias i8* @malloc(i64 %8) #9, !track !215
  store i8* %9, i8** %3, align 8
  %10 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 10
  %11 = load i32, i32* %10, align 4
  %12 = add nsw i32 %11, 1
  %13 = call i32 @update_ivbuf()
  %14 = getelementptr %struct.WEP_data, %struct.WEP_data* @wep, i32 0, i32 3
  %15 = load i64, i64* %14, align 8
  %16 = icmp slt i64 %15, 4
  br i1 %16, label %17, label %22

; <label>:17:                                     ; preds = %0
  %18 = getelementptr %struct.WEP_data, %struct.WEP_data* @wep, i32 0, i32 3
  %19 = load i64, i64* %18, align 8
  %20 = getelementptr [79 x i8], [79 x i8]* @.str.75, i32 0, i32 0
  %21 = call i32 (i8*, ...) @printf(i8* %20, i64 %19, i32 4)
  br label %._crit_edge11

; <label>:22:                                     ; preds = %0
  %23 = call i32 @gettimeofday(%struct.timeval* %1, %struct.vote* null) #9
  %24 = getelementptr inbounds %struct.timeval, %struct.timeval* %1, i32 0, i32 0
  %25 = load i64, i64* %24, align 8
  %26 = add nsw i64 %25, -1
  store i64 %26, i64* %24, align 8
  %27 = call i32 @next_key(i8** %3, i32 %12)
  %28 = icmp ne i32 %27, 0
  br i1 %28, label %._crit_edge11, label %.lr.ph10.preheader

.lr.ph10.preheader:                               ; preds = %22
  %29 = getelementptr inbounds %struct.timeval, %struct.timeval* %2, i32 0, i32 0
  %30 = getelementptr inbounds %struct.timeval, %struct.timeval* %1, i32 0, i32 0
  br label %.lr.ph10

; <label>:31:                                     ; preds = %._crit_edge6
  %32 = call i32 @next_key(i8** %3, i32 %12)
  %33 = icmp ne i32 %32, 0
  br i1 %33, label %._crit_edge11.loopexit, label %.lr.ph10

.lr.ph10:                                         ; preds = %.lr.ph10.preheader, %31
  call void @unroll_loop(i32 119)
  %34 = load i8*, i8** %3, align 8
  %35 = call i64 @strlen(i8* %34) #10
  %36 = trunc i64 %35 to i32
  %37 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %38 = icmp slt i32 %36, %37
  br i1 %38, label %.lr.ph, label %49

.lr.ph:                                           ; preds = %.lr.ph10
  %39 = sext i32 %36 to i64
  br label %40

; <label>:40:                                     ; preds = %.lr.ph, %40
  %lsr.iv = phi i64 [ 0, %.lr.ph ], [ %lsr.iv.next, %40 ]
  call void @unroll_loop(i32 120)
  %41 = load i8*, i8** %3, align 8
  %scevgep = getelementptr i8, i8* %41, i64 %lsr.iv
  %42 = load i8, i8* %scevgep, align 1
  %43 = load i8*, i8** %3, align 8
  %scevgep1 = getelementptr i8, i8* %43, i64 %39
  %scevgep2 = getelementptr i8, i8* %scevgep1, i64 %lsr.iv
  store i8 %42, i8* %scevgep2, align 1
  %44 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %45 = sext i32 %44 to i64
  %lsr.iv.next = add nuw nsw i64 %lsr.iv, 1
  %46 = add i64 %39, %lsr.iv.next
  %47 = icmp slt i64 %46, %45
  br i1 %47, label %40, label %._crit_edge

._crit_edge:                                      ; preds = %40
  %split.wide = phi i64 [ %46, %40 ]
  %48 = trunc i64 %split.wide to i32
  br label %49

; <label>:49:                                     ; preds = %._crit_edge, %.lr.ph10
  %.01.lcssa = phi i32 [ %48, %._crit_edge ], [ %36, %.lr.ph10 ]
  %50 = load i8*, i8** %3, align 8
  %51 = sext i32 %.01.lcssa to i64
  %52 = getelementptr inbounds i8, i8* %50, i64 %51
  store i8 0, i8* %52, align 1
  %53 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 6), align 8
  %54 = icmp ne i32 %53, 0
  br i1 %54, label %65, label %55

; <label>:55:                                     ; preds = %49
  %56 = call i32 @gettimeofday(%struct.timeval* %2, %struct.vote* null) #9
  %57 = load i64, i64* %29, align 8
  %58 = load i64, i64* %30, align 8
  %59 = sub nsw i64 %57, %58
  %60 = icmp sgt i64 %59, 0
  br i1 %60, label %61, label %65

; <label>:61:                                     ; preds = %55
  %62 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %63 = sub nsw i32 %62, 1
  call void @show_wep_stats(i32 %63, i32 1, [256 x %struct.PTW_tableentry]* null, i32* null, i32* null, i32 0)
  %64 = call i32 @gettimeofday(%struct.timeval* %1, %struct.vote* null) #9
  br label %65

; <label>:65:                                     ; preds = %55, %61, %49
  %66 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %67 = icmp sle i32 0, %66
  br i1 %67, label %.lr.ph5.preheader, label %._crit_edge6

.lr.ph5.preheader:                                ; preds = %65
  br label %.lr.ph5

.lr.ph5:                                          ; preds = %.lr.ph5.preheader, %.lr.ph5
  %indvars.iv7 = phi i64 [ %indvars.iv.next8, %.lr.ph5 ], [ 0, %.lr.ph5.preheader ]
  %indvars.iv74 = inttoptr i64 %indvars.iv7 to i8*
  call void @unroll_loop(i32 121)
  %68 = load i8*, i8** %3, align 8
  %scevgep3 = getelementptr i8, i8* %68, i64 %indvars.iv7
  %69 = load i8, i8* %scevgep3, align 1
  %scevgep5 = getelementptr %struct.WEP_data, %struct.WEP_data* @wep, i64 0, i32 0, i64 %indvars.iv7
  store i8 %69, i8* %scevgep5, align 1
  %indvars.iv.next8 = add nuw nsw i64 %indvars.iv7, 1
  %70 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %71 = sext i32 %70 to i64
  %72 = icmp sle i64 %indvars.iv.next8, %71
  br i1 %72, label %.lr.ph5, label %._crit_edge6.loopexit

._crit_edge6.loopexit:                            ; preds = %.lr.ph5
  br label %._crit_edge6

._crit_edge6:                                     ; preds = %._crit_edge6.loopexit, %65
  %73 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %74 = call i32 @check_wep_key(i8* getelementptr inbounds (%struct.WEP_data, %struct.WEP_data* @wep, i64 0, i32 0, i64 0), i32 %73, i32 0)
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %._crit_edge11.loopexit, label %31

._crit_edge11.loopexit:                           ; preds = %31, %._crit_edge6
  %.0.ph = phi i32 [ 1, %31 ], [ 0, %._crit_edge6 ]
  br label %._crit_edge11

._crit_edge11:                                    ; preds = %._crit_edge11.loopexit, %22, %17
  %.0 = phi i32 [ 1, %17 ], [ 1, %22 ], [ %.0.ph, %._crit_edge11.loopexit ]
  ret i32 %.0
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @main_old(i32, i8**) #0 {
  %3 = call i8* @malloc(i64 40)
  %4 = bitcast i8* %3 to i8**
  store i8** %4, i8*** @__argv_new__
  %5 = load i8**, i8*** @__argv_new__
  %6 = getelementptr i8*, i8** %5, i32 0
  %7 = call i8* @malloc(i64 100)
  store i8* %7, i8** %6
  %8 = load i8*, i8** %6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %8, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @0, i32 0, i32 0), i64 100, i1 false)
  %9 = getelementptr i8, i8* %8, i32 11
  store i8 0, i8* %9
  %10 = load i8**, i8*** @__argv_new__
  %11 = getelementptr i8*, i8** %10, i32 1
  %12 = call i8* @malloc(i64 100)
  store i8* %12, i8** %11
  %13 = load i8*, i8** %11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @1, i32 0, i32 0), i64 100, i1 false)
  %14 = getelementptr i8, i8* %13, i32 2
  store i8 0, i8* %14
  %15 = load i8**, i8*** @__argv_new__
  %16 = getelementptr i8*, i8** %15, i32 2
  %17 = call i8* @malloc(i64 100)
  store i8* %17, i8** %16
  %18 = load i8*, i8** %16
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %18, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @2, i32 0, i32 0), i64 100, i1 false)
  %19 = getelementptr i8, i8* %18, i32 12
  store i8 0, i8* %19
  %20 = load i8**, i8*** @__argv_new__
  %21 = getelementptr i8*, i8** %20, i32 3
  %22 = call i8* @malloc(i64 100)
  store i8* %22, i8** %21
  %23 = load i8*, i8** %21
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %23, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @3, i32 0, i32 0), i64 100, i1 false)
  %24 = getelementptr i8, i8* %23, i32 7
  store i8 0, i8* %24
  %25 = load i8**, i8*** @__argv_new__
  %26 = getelementptr i8*, i8** %25, i32 4
  store i8* null, i8** %26
  %27 = alloca i32, align 4, !track !216
  %28 = alloca [128 x i8], align 16, !track !217
  %29 = alloca [33 x i8], align 16, !track !218
  %30 = alloca i32, align 4
  %31 = call i32 @setsid() #9
  %32 = getelementptr [12 x i8], [12 x i8]* @.str.76, i32 0, i32 0
  %33 = call i8* @getVersion_clone(i8* %32, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0)
  store i8* %33, i8** @progname, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (%struct.options* @opt to i8*), i8 0, i64 2392, i1 false)
  %34 = call i64 @time(i64* null) #9
  %35 = trunc i64 %34 to i32
  call void @srand(i32 %35) #9
  %36 = call i32 (...) bitcast (i32 ()* @get_nb_cpus to i32 (...)*)()
  %37 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 5
  store i32 1, i32* %37, align 4
  %38 = icmp sgt i32 %36, 1
  br i1 %38, label %39, label %41

; <label>:39:                                     ; preds = %2
  %40 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 5
  store i32 %36, i32* %40, align 4
  br label %41

; <label>:41:                                     ; preds = %39, %2
  %42 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 23
  store i32 0, i32* %42, align 8
  %43 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 0
  store i32 0, i32* %43, align 8
  %44 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 17
  store i32 1, i32* %44, align 8
  %45 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 18
  store i32 1, i32* %45, align 4
  %46 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 26
  store i32 0, i32* %46, align 8
  %47 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 29
  store i32 51, i32* %47, align 4
  %48 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 32
  store i32 0, i32* %48, align 4
  %49 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 20
  store i32 1, i32* %49, align 4
  %50 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 33
  store i32 2147483647, i32* %50, align 8
  %51 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 40
  store i32 0, i32* %51, align 8
  %52 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 35
  store i8* null, i8** %52, align 8
  %53 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 36
  store %struct.mergeBSSID* null, %struct.mergeBSSID** %53, align 8
  %54 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 34
  store i8* null, i8** %54, align 8
  %55 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 41
  store i32 0, i32* %55, align 4
  %56 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 42
  store i8* null, i8** %56, align 8
  store i32 0, i32* %30, align 4
  %57 = getelementptr [50 x i8], [50 x i8]* @.str.86, i32 0, i32 0
  %58 = getelementptr [10 x %struct.option], [10 x %struct.option]* @main.long_options, i32 0, i32 0
  %59 = call i32 @getopt_long(i32 4, i8** %25, i8* %57, %struct.option* %58, i32* %30) #9, !track_argc !219
  %60 = icmp slt i32 119, 0
  br i1 false, label %._crit_edge142, label %.lr.ph141.preheader

.lr.ph141.preheader:                              ; preds = %41
  %61 = getelementptr inbounds [128 x i8], [128 x i8]* %28, i64 0, i64 0
  %62 = getelementptr inbounds [128 x i8], [128 x i8]* %28, i64 0, i64 1
  %63 = getelementptr inbounds [128 x i8], [128 x i8]* %28, i64 0, i64 2
  %64 = getelementptr inbounds [128 x i8], [128 x i8]* %28, i32 0, i32 0
  %65 = getelementptr inbounds [128 x i8], [128 x i8]* %28, i64 0, i64 0
  %66 = getelementptr inbounds [128 x i8], [128 x i8]* %28, i64 0, i64 0
  %67 = getelementptr inbounds [128 x i8], [128 x i8]* %28, i64 0, i64 1
  %68 = getelementptr inbounds [128 x i8], [128 x i8]* %28, i64 0, i64 0
  %69 = getelementptr inbounds [128 x i8], [128 x i8]* %28, i64 0, i64 1
  %70 = getelementptr inbounds [128 x i8], [128 x i8]* %28, i64 0, i64 0
  %71 = getelementptr inbounds [128 x i8], [128 x i8]* %28, i64 0, i64 1
  %72 = getelementptr inbounds [128 x i8], [128 x i8]* %28, i64 0, i64 0
  %73 = getelementptr inbounds [128 x i8], [128 x i8]* %28, i64 0, i64 1
  %74 = getelementptr inbounds [128 x i8], [128 x i8]* %28, i64 0, i64 1
  br label %.lr.ph141

.lr.ph141:                                        ; preds = %.lr.ph141.preheader, %.loopexit71
  %75 = phi i32 [ %518, %.loopexit71 ], [ 119, %.lr.ph141.preheader ]
  %.026139 = phi i32 [ %.531, %.loopexit71 ], [ 0, %.lr.ph141.preheader ]
  %.033138 = phi i32 [ %.134, %.loopexit71 ], [ 0, %.lr.ph141.preheader ]
  call void @unroll_loop(i32 124)
  switch i32 %75, label %.loopexit1 [
    i32 58, label %76
    i32 63, label %81
    i32 117, label %86
    i32 86, label %102
    i32 97, label %112
    i32 101, label %137
    i32 98, label %140
    i32 112, label %152
    i32 113, label %169
    i32 99, label %170
    i32 68, label %171
    i32 104, label %172
    i32 116, label %173
    i32 49, label %174
    i32 100, label %175
    i32 109, label %308
    i32 110, label %319
    i32 105, label %349
    i32 102, label %366
    i32 107, label %380
    i32 108, label %402
    i32 77, label %418
    i32 80, label %437
    i32 120, label %454
    i32 88, label %475
    i32 121, label %476
    i32 75, label %477
    i32 115, label %478
    i32 119, label %479
    i32 114, label %488
    i32 48, label %492
    i32 72, label %.loopexit13
    i32 67, label %493
    i32 122, label %508
  ]

; <label>:76:                                     ; preds = %.lr.ph141
  %77 = getelementptr inbounds i8*, i8** %25, i64 0
  %78 = load i8*, i8** %77, align 8
  %79 = getelementptr [23 x i8], [23 x i8]* @.str.87, i32 0, i32 0
  %80 = call i32 (i8*, ...) @printf(i8* %79, i8* %78)
  br label %1343

; <label>:81:                                     ; preds = %.lr.ph141
  %82 = getelementptr inbounds i8*, i8** %25, i64 0
  %83 = load i8*, i8** %82, align 8
  %84 = getelementptr [23 x i8], [23 x i8]* @.str.87, i32 0, i32 0
  %85 = call i32 (i8*, ...) @printf(i8* %84, i8* %83)
  br label %1343

; <label>:86:                                     ; preds = %.lr.ph141
  %87 = getelementptr [21 x i8], [21 x i8]* @.str.88, i32 0, i32 0
  %88 = call i32 (i8*, ...) @printf(i8* %87, i32 %36)
  %89 = call i32 @shasse2_cpuid()
  %90 = icmp eq i32 %89, 1
  br i1 %90, label %91, label %94

; <label>:91:                                     ; preds = %86
  %92 = getelementptr [17 x i8], [17 x i8]* @.str.89, i32 0, i32 0
  %93 = call i32 (i8*, ...) @printf(i8* %92)
  br label %94

; <label>:94:                                     ; preds = %91, %86
  %95 = icmp sge i32 %89, 2
  br i1 %95, label %96, label %99

; <label>:96:                                     ; preds = %94
  %97 = getelementptr [18 x i8], [18 x i8]* @.str.90, i32 0, i32 0
  %98 = call i32 (i8*, ...) @printf(i8* %97)
  br label %99

; <label>:99:                                     ; preds = %96, %94
  %100 = getelementptr [2 x i8], [2 x i8]* @.str.2, i32 0, i32 0
  %101 = call i32 (i8*, ...) @printf(i8* %100)
  br label %1343

; <label>:102:                                    ; preds = %.lr.ph141
  %103 = icmp ne i32 %.033138, 0
  br i1 %103, label %104, label %111

; <label>:104:                                    ; preds = %102
  %105 = getelementptr [47 x i8], [47 x i8]* @.str.91, i32 0, i32 0
  %106 = call i32 (i8*, ...) @printf(i8* %105)
  %107 = getelementptr inbounds i8*, i8** %25, i64 0
  %108 = load i8*, i8** %107, align 8
  %109 = getelementptr [27 x i8], [27 x i8]* @.str.92, i32 0, i32 0
  %110 = call i32 (i8*, ...) @printf(i8* %109, i8* %108)
  br label %1343

; <label>:111:                                    ; preds = %102
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 40), align 8
  store i32 0, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 20), align 4
  br label %.loopexit71

; <label>:112:                                    ; preds = %.lr.ph141
  %113 = load i8*, i8** @optarg, align 8
  %114 = call i32 (i8*, i8*, ...) @sscanf(i8* %113, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 0)) #9
  %115 = load i8*, i8** @optarg, align 8
  %116 = call i32 @strcasecmp(i8* %115, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.94, i64 0, i64 0)) #10
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %118, label %119

; <label>:118:                                    ; preds = %112
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 0), align 8
  br label %124

; <label>:119:                                    ; preds = %112
  %120 = load i8*, i8** @optarg, align 8
  %121 = call i32 @strcasecmp(i8* %120, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.95, i64 0, i64 0)) #10
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %123, label %124

; <label>:123:                                    ; preds = %119
  store i32 2, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 0), align 8
  br label %124

; <label>:124:                                    ; preds = %119, %123, %118
  %125 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 0), align 8
  %126 = icmp ne i32 %125, 1
  br i1 %126, label %127, label %.loopexit71

; <label>:127:                                    ; preds = %124
  %128 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 0), align 8
  %129 = icmp ne i32 %128, 2
  br i1 %129, label %130, label %.loopexit71

; <label>:130:                                    ; preds = %127
  %131 = getelementptr [41 x i8], [41 x i8]* @.str.96, i32 0, i32 0
  %132 = call i32 (i8*, ...) @printf(i8* %131)
  %133 = getelementptr inbounds i8*, i8** %25, i64 0
  %134 = load i8*, i8** %133, align 8
  %135 = getelementptr [23 x i8], [23 x i8]* @.str.87, i32 0, i32 0
  %136 = call i32 (i8*, ...) @printf(i8* %135, i8* %134)
  br label %1343

; <label>:137:                                    ; preds = %.lr.ph141
  call void @llvm.memset.p0i8.i64(i8* align 4 getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 3, i64 0), i8 0, i64 33, i1 false)
  %138 = load i8*, i8** @optarg, align 8
  %139 = call i8* @strncpy(i8* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 3, i64 0), i8* %138, i64 32) #9, !track !220
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 1), align 4
  br label %.loopexit71

; <label>:140:                                    ; preds = %.lr.ph141
  %141 = load i8*, i8** @optarg, align 8
  %142 = call i32 @getmac(i8* %141, i32 1, i8* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 4, i64 0))
  %143 = icmp ne i32 %142, 0
  br i1 %143, label %144, label %151

; <label>:144:                                    ; preds = %140
  %145 = getelementptr [28 x i8], [28 x i8]* @.str.97, i32 0, i32 0
  %146 = call i32 (i8*, ...) @printf(i8* %145)
  %147 = getelementptr inbounds i8*, i8** %25, i64 0
  %148 = load i8*, i8** %147, align 8
  %149 = getelementptr [23 x i8], [23 x i8]* @.str.87, i32 0, i32 0
  %150 = call i32 (i8*, ...) @printf(i8* %149, i8* %148)
  br label %1343

; <label>:151:                                    ; preds = %140
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 2), align 8
  br label %.loopexit71

; <label>:152:                                    ; preds = %.lr.ph141
  %153 = load i8*, i8** @optarg, align 8
  %154 = call i32 (i8*, i8*, ...) @sscanf(i8* %153, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 5)) #9
  %155 = icmp ne i32 %154, 1
  br i1 %155, label %162, label %156

; <label>:156:                                    ; preds = %152
  %157 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 5), align 4
  %158 = icmp slt i32 %157, 1
  br i1 %158, label %162, label %159

; <label>:159:                                    ; preds = %156
  %160 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 5), align 4
  %161 = icmp sgt i32 %160, 128
  br i1 %161, label %162, label %.loopexit71

; <label>:162:                                    ; preds = %159, %156, %152
  %163 = getelementptr [47 x i8], [47 x i8]* @.str.98, i32 0, i32 0
  %164 = call i32 (i8*, ...) @printf(i8* %163, i32 %36)
  %165 = getelementptr inbounds i8*, i8** %25, i64 0
  %166 = load i8*, i8** %165, align 8
  %167 = getelementptr [23 x i8], [23 x i8]* @.str.87, i32 0, i32 0
  %168 = call i32 (i8*, ...) @printf(i8* %167, i8* %166)
  br label %1343

; <label>:169:                                    ; preds = %.lr.ph141
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 6), align 8
  br label %.loopexit71

; <label>:170:                                    ; preds = %.lr.ph141
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 15), align 8
  br label %.loopexit71

; <label>:171:                                    ; preds = %.lr.ph141
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 38), align 8
  br label %.loopexit71

; <label>:172:                                    ; preds = %.lr.ph141
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 14), align 4
  br label %.loopexit71

; <label>:173:                                    ; preds = %.lr.ph141
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 16), align 4
  br label %.loopexit71

; <label>:174:                                    ; preds = %.lr.ph141
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 41), align 4
  br label %.loopexit71

; <label>:175:                                    ; preds = %.lr.ph141
  store i32 0, i32* %27, align 4
  %176 = load i8*, i8** @optarg, align 8
  %177 = getelementptr inbounds i8, i8* %176, i64 0
  %178 = load i8, i8* %177, align 1
  %179 = sext i8 %178 to i32
  %180 = icmp ne i32 %179, 0
  br i1 %180, label %.lr.ph136.preheader, label %._crit_edge137

.lr.ph136.preheader:                              ; preds = %175
  br label %.lr.ph136

.lr.ph136:                                        ; preds = %.lr.ph136.preheader, %227
  %.02134 = phi i32 [ %.13, %227 ], [ 0, %.lr.ph136.preheader ]
  call void @unroll_loop(i32 125)
  %181 = sext i32 %.02134 to i64
  %182 = getelementptr inbounds i8, i8* %176, i64 %181
  %183 = load i8, i8* %182, align 1
  %184 = sext i8 %183 to i32
  %185 = icmp eq i32 %184, 120
  br i1 %185, label %186, label %189

; <label>:186:                                    ; preds = %.lr.ph136
  %187 = sext i32 %.02134 to i64
  %188 = getelementptr inbounds i8, i8* %176, i64 %187
  store i8 88, i8* %188, align 1
  br label %189

; <label>:189:                                    ; preds = %186, %.lr.ph136
  %190 = sext i32 %.02134 to i64
  %191 = getelementptr inbounds i8, i8* %176, i64 %190
  %192 = load i8, i8* %191, align 1
  %193 = sext i8 %192 to i32
  %194 = icmp eq i32 %193, 121
  br i1 %194, label %195, label %198

; <label>:195:                                    ; preds = %189
  %196 = sext i32 %.02134 to i64
  %197 = getelementptr inbounds i8, i8* %176, i64 %196
  store i8 89, i8* %197, align 1
  br label %198

; <label>:198:                                    ; preds = %195, %189
  %199 = sext i32 %.02134 to i64
  %200 = getelementptr inbounds i8, i8* %176, i64 %199
  %201 = load i8, i8* %200, align 1
  %202 = sext i8 %201 to i32
  %203 = icmp eq i32 %202, 45
  br i1 %203, label %216, label %204

; <label>:204:                                    ; preds = %198
  %205 = sext i32 %.02134 to i64
  %206 = getelementptr inbounds i8, i8* %176, i64 %205
  %207 = load i8, i8* %206, align 1
  %208 = sext i8 %207 to i32
  %209 = icmp eq i32 %208, 58
  br i1 %209, label %216, label %210

; <label>:210:                                    ; preds = %204
  %211 = sext i32 %.02134 to i64
  %212 = getelementptr inbounds i8, i8* %176, i64 %211
  %213 = load i8, i8* %212, align 1
  %214 = sext i8 %213 to i32
  %215 = icmp eq i32 %214, 32
  br i1 %215, label %216, label %218

; <label>:216:                                    ; preds = %210, %204, %198
  %217 = add nsw i32 %.02134, 1
  br label %227

; <label>:218:                                    ; preds = %210
  %219 = add nsw i32 %.02134, 1
  %220 = sext i32 %.02134 to i64
  %221 = getelementptr inbounds i8, i8* %176, i64 %220
  %222 = load i8, i8* %221, align 1
  %223 = load i32, i32* %27, align 4
  %224 = add nsw i32 %223, 1
  store i32 %224, i32* %27, align 4
  %225 = sext i32 %223 to i64
  %226 = getelementptr inbounds i8, i8* %176, i64 %225
  store i8 %222, i8* %226, align 1
  br label %227

; <label>:227:                                    ; preds = %218, %216
  %.13 = phi i32 [ %217, %216 ], [ %219, %218 ]
  %228 = sext i32 %.13 to i64
  %229 = getelementptr inbounds i8, i8* %176, i64 %228
  %230 = load i8, i8* %229, align 1
  %231 = sext i8 %230 to i32
  %232 = icmp ne i32 %231, 0
  br i1 %232, label %.lr.ph136, label %._crit_edge137.loopexit

._crit_edge137.loopexit:                          ; preds = %227
  br label %._crit_edge137

._crit_edge137:                                   ; preds = %._crit_edge137.loopexit, %175
  %233 = load i32, i32* %27, align 4
  %234 = sext i32 %233 to i64
  %235 = getelementptr inbounds i8, i8* %176, i64 %234
  store i8 0, i8* %235, align 1
  %236 = getelementptr inbounds i8, i8* %176, i64 0
  %237 = load i8, i8* %236, align 1
  store i8 %237, i8* %61, align 16
  %238 = getelementptr inbounds i8, i8* %176, i64 1
  %239 = load i8, i8* %238, align 1
  store i8 %239, i8* %62, align 1
  store i8 0, i8* %63, align 2
  %scevgep45 = getelementptr i8, i8* %176, i64 3
  br label %240

; <label>:240:                                    ; preds = %305, %._crit_edge137
  %lsr.iv48 = phi i8* [ %scevgep49, %305 ], [ %scevgep45, %._crit_edge137 ]
  %.127 = phi i32 [ 0, %._crit_edge137 ], [ %.329, %305 ]
  %.24 = phi i32 [ 0, %._crit_edge137 ], [ %.46, %305 ]
  call void @unroll_loop(i32 126)
  %241 = call i32 (i8*, i8*, ...) @sscanf(i8* %64, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.72, i64 0, i64 0), i32* %27) #9
  %242 = icmp eq i32 %241, 1
  br i1 %242, label %.critedge, label %243

; <label>:243:                                    ; preds = %240
  %244 = load i8, i8* %66, align 16
  %245 = sext i8 %244 to i32
  %246 = icmp eq i32 %245, 88
  br i1 %246, label %247, label %251

; <label>:247:                                    ; preds = %243
  %248 = load i8, i8* %69, align 1
  %249 = sext i8 %248 to i32
  %250 = icmp eq i32 %249, 88
  br i1 %250, label %.critedge, label %251

; <label>:251:                                    ; preds = %247, %243
  %252 = load i8, i8* %70, align 16
  %253 = sext i8 %252 to i32
  %254 = icmp eq i32 %253, 89
  %255 = load i8, i8* %71, align 1
  %256 = sext i8 %255 to i32
  %257 = icmp eq i32 %256, 89
  %258 = select i1 %254, i1 %257, i1 false
  br i1 %258, label %.critedge, label %.loopexit71.loopexit

.critedge:                                        ; preds = %240, %247, %251
  %259 = load i8, i8* %65, align 16
  %260 = sext i8 %259 to i32
  %261 = icmp eq i32 %260, 88
  br i1 %261, label %262, label %270

; <label>:262:                                    ; preds = %.critedge
  %263 = load i8, i8* %67, align 1
  %264 = sext i8 %263 to i32
  %265 = icmp eq i32 %264, 88
  br i1 %265, label %266, label %270

; <label>:266:                                    ; preds = %262
  %267 = add nsw i32 %.24, 1
  %268 = sext i32 %.24 to i64
  %269 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 8), i64 0, i64 %268
  store i32 0, i32* %269, align 4
  br label %303

; <label>:270:                                    ; preds = %262, %.critedge
  %271 = load i8, i8* %68, align 16
  %272 = sext i8 %271 to i32
  %273 = icmp eq i32 %272, 89
  br i1 %273, label %274, label %283

; <label>:274:                                    ; preds = %270
  %275 = load i8, i8* %74, align 1
  %276 = sext i8 %275 to i32
  %277 = icmp eq i32 %276, 89
  br i1 %277, label %278, label %283

; <label>:278:                                    ; preds = %274
  %279 = add nsw i32 %.24, 1
  %280 = add nsw i32 %.127, 1
  %281 = sext i32 %.127 to i64
  %282 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 31), i64 0, i64 %281
  store i32 %.24, i32* %282, align 4
  br label %303

; <label>:283:                                    ; preds = %274, %270
  %284 = load i32, i32* %27, align 4
  %285 = icmp slt i32 %284, 0
  %286 = load i32, i32* %27, align 4
  %287 = icmp sgt i32 %286, 255
  %or.cond = or i1 %285, %287
  br i1 %or.cond, label %288, label %295

; <label>:288:                                    ; preds = %283
  %289 = getelementptr [20 x i8], [20 x i8]* @.str.99, i32 0, i32 0
  %290 = call i32 (i8*, ...) @printf(i8* %289)
  %291 = getelementptr inbounds i8*, i8** %25, i64 0
  %292 = load i8*, i8** %291, align 8
  %293 = getelementptr [23 x i8], [23 x i8]* @.str.87, i32 0, i32 0
  %294 = call i32 (i8*, ...) @printf(i8* %293, i8* %292)
  br label %1343

; <label>:295:                                    ; preds = %283
  %296 = load i32, i32* %27, align 4
  %297 = trunc i32 %296 to i8
  %298 = sext i32 %.24 to i64
  %299 = getelementptr inbounds [64 x i8], [64 x i8]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 7), i64 0, i64 %298
  store i8 %297, i8* %299, align 1
  %300 = add nsw i32 %.24, 1
  %301 = sext i32 %.24 to i64
  %302 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 8), i64 0, i64 %301
  store i32 1, i32* %302, align 4
  br label %303

; <label>:303:                                    ; preds = %278, %295, %266
  %.329 = phi i32 [ %.127, %266 ], [ %280, %278 ], [ %.127, %295 ]
  %.46 = phi i32 [ %267, %266 ], [ %279, %278 ], [ %300, %295 ]
  %304 = icmp sge i32 %.46, 64
  br i1 %304, label %.loopexit71.loopexit, label %305

; <label>:305:                                    ; preds = %303
  %scevgep50 = getelementptr i8, i8* %lsr.iv48, i64 -1
  %306 = load i8, i8* %scevgep50, align 1
  store i8 %306, i8* %72, align 16
  %307 = load i8, i8* %lsr.iv48, align 1
  store i8 %307, i8* %73, align 1
  %scevgep49 = getelementptr i8, i8* %lsr.iv48, i64 2
  br label %240

; <label>:308:                                    ; preds = %.lr.ph141
  %309 = load i8*, i8** @optarg, align 8
  %310 = call i32 @getmac(i8* %309, i32 1, i8* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 9, i64 0))
  %311 = icmp ne i32 %310, 0
  br i1 %311, label %312, label %.loopexit71

; <label>:312:                                    ; preds = %308
  %313 = getelementptr [29 x i8], [29 x i8]* @.str.100, i32 0, i32 0
  %314 = call i32 (i8*, ...) @printf(i8* %313)
  %315 = getelementptr inbounds i8*, i8** %25, i64 0
  %316 = load i8*, i8** %315, align 8
  %317 = getelementptr [23 x i8], [23 x i8]* @.str.87, i32 0, i32 0
  %318 = call i32 (i8*, ...) @printf(i8* %317, i8* %316)
  br label %1343

; <label>:319:                                    ; preds = %.lr.ph141
  %320 = load i8*, i8** @optarg, align 8
  %321 = call i32 (i8*, i8*, ...) @sscanf(i8* %320, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10)) #9
  %322 = icmp ne i32 %321, 1
  br i1 %322, label %338, label %323

; <label>:323:                                    ; preds = %319
  %324 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %325 = icmp ne i32 %324, 64
  br i1 %325, label %326, label %345

; <label>:326:                                    ; preds = %323
  %327 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %328 = icmp ne i32 %327, 128
  br i1 %328, label %329, label %345

; <label>:329:                                    ; preds = %326
  %330 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %331 = icmp ne i32 %330, 152
  br i1 %331, label %332, label %345

; <label>:332:                                    ; preds = %329
  %333 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %334 = icmp ne i32 %333, 256
  br i1 %334, label %335, label %345

; <label>:335:                                    ; preds = %332
  %336 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %337 = icmp ne i32 %336, 512
  br i1 %337, label %338, label %345

; <label>:338:                                    ; preds = %335, %319
  %339 = getelementptr [46 x i8], [46 x i8]* @.str.101, i32 0, i32 0
  %340 = call i32 (i8*, ...) @printf(i8* %339)
  %341 = getelementptr inbounds i8*, i8** %25, i64 0
  %342 = load i8*, i8** %341, align 8
  %343 = getelementptr [23 x i8], [23 x i8]* @.str.87, i32 0, i32 0
  %344 = call i32 (i8*, ...) @printf(i8* %343, i8* %342)
  br label %1343

; <label>:345:                                    ; preds = %335, %332, %329, %326, %323
  %346 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %347 = sdiv i32 %346, 8
  %348 = sub nsw i32 %347, 3
  store i32 %348, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  br label %.loopexit71

; <label>:349:                                    ; preds = %.lr.ph141
  %350 = load i8*, i8** @optarg, align 8
  %351 = call i32 (i8*, i8*, ...) @sscanf(i8* %350, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 11)) #9
  %352 = icmp ne i32 %351, 1
  br i1 %352, label %359, label %353

; <label>:353:                                    ; preds = %349
  %354 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 11), align 8
  %355 = icmp slt i32 %354, 1
  br i1 %355, label %359, label %356

; <label>:356:                                    ; preds = %353
  %357 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 11), align 8
  %358 = icmp sgt i32 %357, 4
  br i1 %358, label %359, label %.loopexit71

; <label>:359:                                    ; preds = %356, %353, %349
  %360 = getelementptr [30 x i8], [30 x i8]* @.str.102, i32 0, i32 0
  %361 = call i32 (i8*, ...) @printf(i8* %360)
  %362 = getelementptr inbounds i8*, i8** %25, i64 0
  %363 = load i8*, i8** %362, align 8
  %364 = getelementptr [23 x i8], [23 x i8]* @.str.87, i32 0, i32 0
  %365 = call i32 (i8*, ...) @printf(i8* %364, i8* %363)
  br label %1343

; <label>:366:                                    ; preds = %.lr.ph141
  %367 = load i8*, i8** @optarg, align 8
  %368 = call i32 (i8*, i8*, ...) @sscanf(i8* %367, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.103, i64 0, i64 0), float* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 12)) #9
  %369 = icmp ne i32 %368, 1
  br i1 %369, label %373, label %370

; <label>:370:                                    ; preds = %366
  %371 = load float, float* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 12), align 4
  %372 = fcmp olt float %371, 1.000000e+00
  br i1 %372, label %373, label %.loopexit71

; <label>:373:                                    ; preds = %370, %366
  %374 = getelementptr [29 x i8], [29 x i8]* @.str.104, i32 0, i32 0
  %375 = call i32 (i8*, ...) @printf(i8* %374)
  %376 = getelementptr inbounds i8*, i8** %25, i64 0
  %377 = load i8*, i8** %376, align 8
  %378 = getelementptr [23 x i8], [23 x i8]* @.str.87, i32 0, i32 0
  %379 = call i32 (i8*, ...) @printf(i8* %378, i8* %377)
  br label %1343

; <label>:380:                                    ; preds = %.lr.ph141
  %381 = load i8*, i8** @optarg, align 8
  %382 = call i32 (i8*, i8*, ...) @sscanf(i8* %381, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 13)) #9
  %383 = icmp ne i32 %382, 1
  br i1 %383, label %390, label %384

; <label>:384:                                    ; preds = %380
  %385 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 13), align 8
  %386 = icmp slt i32 %385, 1
  br i1 %386, label %390, label %387

; <label>:387:                                    ; preds = %384
  %388 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 13), align 8
  %389 = icmp sgt i32 %388, 17
  br i1 %389, label %390, label %397

; <label>:390:                                    ; preds = %387, %384, %380
  %391 = getelementptr [39 x i8], [39 x i8]* @.str.105, i32 0, i32 0
  %392 = call i32 (i8*, ...) @printf(i8* %391, i32 17)
  %393 = getelementptr inbounds i8*, i8** %25, i64 0
  %394 = load i8*, i8** %393, align 8
  %395 = getelementptr [23 x i8], [23 x i8]* @.str.87, i32 0, i32 0
  %396 = call i32 (i8*, ...) @printf(i8* %395, i8* %394)
  br label %1343

; <label>:397:                                    ; preds = %387
  %398 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 13), align 8
  %399 = sub nsw i32 %398, 1
  %400 = sext i32 %399 to i64
  %401 = getelementptr inbounds [17 x i32], [17 x i32]* @K_COEFF, i64 0, i64 %400
  store i32 0, i32* %401, align 4
  br label %.loopexit71

; <label>:402:                                    ; preds = %.lr.ph141
  %403 = load i8*, i8** @optarg, align 8
  %404 = call i64 @strlen(i8* %403) #10
  %405 = add i64 %404, 1
  %406 = call noalias i8* @calloc(i64 1, i64 %405) #9, !track !221
  store i8* %406, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 42), align 8
  %407 = load i8*, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 42), align 8
  %408 = icmp eq i8* %407, null
  br i1 %408, label %409, label %412

; <label>:409:                                    ; preds = %402
  %410 = getelementptr [25 x i8], [25 x i8]* @.str.106, i32 0, i32 0
  %411 = call i32 (i8*, ...) @printf(i8* %410)
  br label %1343

; <label>:412:                                    ; preds = %402
  %413 = load i8*, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 42), align 8
  %414 = load i8*, i8** @optarg, align 8
  %415 = load i8*, i8** @optarg, align 8
  %416 = call i64 @strlen(i8* %415) #10
  %417 = call i8* @strncpy(i8* %413, i8* %414, i64 %416) #9, !track !222
  br label %.loopexit71

; <label>:418:                                    ; preds = %.lr.ph141
  %419 = load i8*, i8** @optarg, align 8
  %420 = call i32 (i8*, i8*, ...) @sscanf(i8* %419, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 33)) #9
  %421 = icmp ne i32 %420, 1
  br i1 %421, label %425, label %422

; <label>:422:                                    ; preds = %418
  %423 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 33), align 8
  %424 = icmp slt i32 %423, 1
  br i1 %424, label %425, label %432

; <label>:425:                                    ; preds = %422, %418
  %426 = getelementptr [33 x i8], [33 x i8]* @.str.107, i32 0, i32 0
  %427 = call i32 (i8*, ...) @printf(i8* %426)
  %428 = getelementptr inbounds i8*, i8** %25, i64 0
  %429 = load i8*, i8** %428, align 8
  %430 = getelementptr [23 x i8], [23 x i8]* @.str.87, i32 0, i32 0
  %431 = call i32 (i8*, ...) @printf(i8* %430, i8* %429)
  br label %1343

; <label>:432:                                    ; preds = %422
  %433 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 13), align 8
  %434 = sub nsw i32 %433, 1
  %435 = sext i32 %434 to i64
  %436 = getelementptr inbounds [17 x i32], [17 x i32]* @K_COEFF, i64 0, i64 %435
  store i32 0, i32* %436, align 4
  br label %.loopexit71

; <label>:437:                                    ; preds = %.lr.ph141
  %438 = load i8*, i8** @optarg, align 8
  %439 = call i32 (i8*, i8*, ...) @sscanf(i8* %438, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 39)) #9
  %440 = icmp ne i32 %439, 1
  br i1 %440, label %447, label %441

; <label>:441:                                    ; preds = %437
  %442 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 39), align 4
  %443 = icmp slt i32 %442, 0
  br i1 %443, label %447, label %444

; <label>:444:                                    ; preds = %441
  %445 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 39), align 4
  %446 = icmp sgt i32 %445, 2
  br i1 %446, label %447, label %.loopexit71

; <label>:447:                                    ; preds = %444, %441, %437
  %448 = getelementptr [36 x i8], [36 x i8]* @.str.108, i32 0, i32 0
  %449 = call i32 (i8*, ...) @printf(i8* %448)
  %450 = getelementptr inbounds i8*, i8** %25, i64 0
  %451 = load i8*, i8** %450, align 8
  %452 = getelementptr [23 x i8], [23 x i8]* @.str.87, i32 0, i32 0
  %453 = call i32 (i8*, ...) @printf(i8* %452, i8* %451)
  br label %1343

; <label>:454:                                    ; preds = %.lr.ph141
  store i32 0, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 17), align 8
  %455 = load i8*, i8** @optarg, align 8
  %456 = icmp ne i8* %455, null
  br i1 %456, label %457, label %.loopexit71

; <label>:457:                                    ; preds = %454
  %458 = load i8*, i8** @optarg, align 8
  %459 = call i32 (i8*, i8*, ...) @sscanf(i8* %458, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 17)) #9
  %460 = icmp ne i32 %459, 1
  br i1 %460, label %467, label %461

; <label>:461:                                    ; preds = %457
  %462 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 17), align 8
  %463 = icmp slt i32 %462, 0
  br i1 %463, label %467, label %464

; <label>:464:                                    ; preds = %461
  %465 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 17), align 8
  %466 = icmp sgt i32 %465, 4
  br i1 %466, label %467, label %.loopexit71

; <label>:467:                                    ; preds = %464, %461, %457
  %468 = load i8*, i8** @optarg, align 8
  %469 = getelementptr [28 x i8], [28 x i8]* @.str.109, i32 0, i32 0
  %470 = call i32 (i8*, ...) @printf(i8* %469, i8* %468)
  %471 = getelementptr inbounds i8*, i8** %25, i64 0
  %472 = load i8*, i8** %471, align 8
  %473 = getelementptr [23 x i8], [23 x i8]* @.str.87, i32 0, i32 0
  %474 = call i32 (i8*, ...) @printf(i8* %473, i8* %472)
  br label %1343

; <label>:475:                                    ; preds = %.lr.ph141
  store i32 0, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 18), align 4
  br label %.loopexit71

; <label>:476:                                    ; preds = %.lr.ph141
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 19), align 8
  br label %.loopexit71

; <label>:477:                                    ; preds = %.lr.ph141
  store i32 0, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 20), align 4
  br label %.loopexit71

; <label>:478:                                    ; preds = %.lr.ph141
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 26), align 8
  br label %.loopexit71

; <label>:479:                                    ; preds = %.lr.ph141
  %480 = load i8*, i8** @optarg, align 8
  %481 = call i32 @set_dicts(i8* %480)
  %482 = icmp ne i32 %481, 0
  br i1 %482, label %483, label %.loopexit71

; <label>:483:                                    ; preds = %479
  %484 = getelementptr inbounds i8*, i8** %25, i64 0
  %485 = load i8*, i8** %484, align 8
  %486 = getelementptr [23 x i8], [23 x i8]* @.str.87, i32 0, i32 0
  %487 = call i32 (i8*, ...) @printf(i8* %486, i8* %485)
  br label %1343

; <label>:488:                                    ; preds = %.lr.ph141
  %489 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %490 = getelementptr [56 x i8], [56 x i8]* @.str.110, i32 0, i32 0
  %491 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %489, i8* %490)
  br label %1343

; <label>:492:                                    ; preds = %.lr.ph141
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 27), align 4
  br label %.loopexit71

; <label>:493:                                    ; preds = %.lr.ph141
  %494 = load i8*, i8** @optarg, align 8
  %495 = call i32 @checkbssids(i8* %494)
  %496 = icmp slt i32 %495, 1
  br i1 %496, label %497, label %502

; <label>:497:                                    ; preds = %493
  %498 = getelementptr inbounds i8*, i8** %25, i64 0
  %499 = load i8*, i8** %498, align 8
  %500 = getelementptr [44 x i8], [44 x i8]* @.str.111, i32 0, i32 0
  %501 = call i32 (i8*, ...) @printf(i8* %500, i8* %499)
  br label %1343

; <label>:502:                                    ; preds = %493
  %503 = icmp eq i32 %495, 1
  br i1 %503, label %504, label %506

; <label>:504:                                    ; preds = %502
  %505 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.112, i64 0, i64 0))
  br label %.loopexit71

; <label>:506:                                    ; preds = %502
  %507 = load i8*, i8** @optarg, align 8
  store i8* %507, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 34), align 8
  br label %.loopexit71

; <label>:508:                                    ; preds = %.lr.ph141
  %509 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 40), align 8
  %510 = icmp ne i32 %509, 0
  br i1 %510, label %511, label %.loopexit71

; <label>:511:                                    ; preds = %508
  %512 = getelementptr [47 x i8], [47 x i8]* @.str.91, i32 0, i32 0
  %513 = call i32 (i8*, ...) @printf(i8* %512)
  %514 = getelementptr inbounds i8*, i8** %25, i64 0
  %515 = load i8*, i8** %514, align 8
  %516 = getelementptr [27 x i8], [27 x i8]* @.str.92, i32 0, i32 0
  %517 = call i32 (i8*, ...) @printf(i8* %516, i8* %515)
  br label %1343

.loopexit71.loopexit:                             ; preds = %251, %303
  %.531.ph = phi i32 [ %.329, %303 ], [ %.127, %251 ]
  br label %.loopexit71

.loopexit71:                                      ; preds = %.loopexit71.loopexit, %508, %504, %506, %479, %454, %464, %444, %370, %356, %308, %159, %124, %127, %492, %478, %477, %476, %475, %432, %412, %397, %345, %174, %173, %172, %171, %170, %169, %151, %137, %111
  %.134 = phi i32 [ %.033138, %492 ], [ %.033138, %478 ], [ %.033138, %477 ], [ %.033138, %476 ], [ %.033138, %475 ], [ %.033138, %432 ], [ %.033138, %412 ], [ %.033138, %397 ], [ %.033138, %345 ], [ %.033138, %174 ], [ %.033138, %173 ], [ %.033138, %172 ], [ %.033138, %171 ], [ %.033138, %170 ], [ %.033138, %169 ], [ %.033138, %151 ], [ %.033138, %137 ], [ %.033138, %111 ], [ %.033138, %127 ], [ %.033138, %124 ], [ %.033138, %159 ], [ %.033138, %308 ], [ %.033138, %356 ], [ %.033138, %370 ], [ %.033138, %444 ], [ %.033138, %464 ], [ %.033138, %454 ], [ %.033138, %479 ], [ %.033138, %506 ], [ %.033138, %504 ], [ 1, %508 ], [ %.033138, %.loopexit71.loopexit ]
  %.531 = phi i32 [ %.026139, %492 ], [ %.026139, %478 ], [ %.026139, %477 ], [ %.026139, %476 ], [ %.026139, %475 ], [ %.026139, %432 ], [ %.026139, %412 ], [ %.026139, %397 ], [ %.026139, %345 ], [ %.026139, %174 ], [ %.026139, %173 ], [ %.026139, %172 ], [ %.026139, %171 ], [ %.026139, %170 ], [ %.026139, %169 ], [ %.026139, %151 ], [ %.026139, %137 ], [ %.026139, %111 ], [ %.026139, %127 ], [ %.026139, %124 ], [ %.026139, %159 ], [ %.026139, %308 ], [ %.026139, %356 ], [ %.026139, %370 ], [ %.026139, %444 ], [ %.026139, %464 ], [ %.026139, %454 ], [ %.026139, %479 ], [ %.026139, %506 ], [ %.026139, %504 ], [ %.026139, %508 ], [ %.531.ph, %.loopexit71.loopexit ]
  store i32 0, i32* %30, align 4
  %518 = call i32 @getopt_long(i32 4, i8** %25, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.86, i64 0, i64 0), %struct.option* getelementptr inbounds ([10 x %struct.option], [10 x %struct.option]* @main.long_options, i64 0, i64 0), i32* %30) #9, !track_argc !219
  %519 = icmp slt i32 %518, 0
  br i1 %519, label %._crit_edge142.loopexit, label %.lr.ph141

._crit_edge142.loopexit:                          ; preds = %.loopexit71
  %.026.lcssa.ph = phi i32 [ %.531, %.loopexit71 ]
  br label %._crit_edge142

._crit_edge142:                                   ; preds = %._crit_edge142.loopexit, %41
  %.026.lcssa = phi i32 [ 0, %41 ], [ %.026.lcssa.ph, %._crit_edge142.loopexit ]
  %520 = load i32, i32* @optind, align 4
  %521 = sub nsw i32 4, %520, !track_argc !219
  %522 = icmp slt i32 %521, 1
  br i1 %522, label %523, label %551

; <label>:523:                                    ; preds = %._crit_edge142
  %524 = icmp eq i32 4, 1, !track_argc !219
  br i1 %524, label %525, label %537

.loopexit13:                                      ; preds = %.lr.ph141
  %.036.ph = phi i32 [ 1, %.lr.ph141 ]
  br label %525

.loopexit1:                                       ; preds = %.lr.ph141
  %.036.ph2 = phi i32 [ 0, %.lr.ph141 ]
  br label %525

; <label>:525:                                    ; preds = %.loopexit1, %.loopexit13, %523
  %.036 = phi i32 [ 0, %523 ], [ %.036.ph, %.loopexit13 ], [ %.036.ph2, %.loopexit1 ]
  %526 = load i8*, i8** @progname, align 8
  %527 = icmp sgt i32 %36, 1
  %528 = icmp eq i32 %36, -1
  %spec.select = select i1 %527, i1 true, i1 %528
  %529 = zext i1 %spec.select to i64
  %530 = getelementptr [58 x i8], [58 x i8]* @.str.113, i32 0, i32 0
  %531 = getelementptr [2 x i8], [2 x i8]* @.str.2, i32 0, i32 0
  %532 = select i1 %spec.select, i8* %530, i8* %531
  %533 = getelementptr [1799 x i8], [1799 x i8]* @usage, i32 0, i32 0
  %534 = call i32 (i8*, ...) @printf(i8* %533, i8* %526, i8* %532)
  %535 = icmp eq i32 %.036, 1
  br i1 %535, label %536, label %537

; <label>:536:                                    ; preds = %525
  call void @exit(i32 0) #11
  unreachable

; <label>:537:                                    ; preds = %525, %523
  %538 = load i32, i32* @optind, align 4
  %539 = sub nsw i32 4, %538, !track_argc !219
  %540 = icmp eq i32 %539, 0
  br i1 %540, label %541, label %544

; <label>:541:                                    ; preds = %537
  %542 = getelementptr [29 x i8], [29 x i8]* @.str.114, i32 0, i32 0
  %543 = call i32 (i8*, ...) @printf(i8* %542)
  br label %544

; <label>:544:                                    ; preds = %541, %537
  %545 = icmp sgt i32 4, 1, !track_argc !219
  br i1 %545, label %546, label %1343

; <label>:546:                                    ; preds = %544
  %547 = getelementptr inbounds i8*, i8** %25, i64 0
  %548 = load i8*, i8** %547, align 8
  %549 = getelementptr [23 x i8], [23 x i8]* @.str.87, i32 0, i32 0
  %550 = call i32 (i8*, ...) @printf(i8* %549, i8* %548)
  br label %1343

; <label>:551:                                    ; preds = %._crit_edge142
  %552 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 0
  %553 = load i32, i32* %552, align 8
  %554 = icmp eq i32 %553, 2
  br i1 %554, label %555, label %562

; <label>:555:                                    ; preds = %551
  %556 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 22
  %557 = load %struct._IO_FILE*, %struct._IO_FILE** %556, align 8
  %558 = icmp eq %struct._IO_FILE* %557, null
  br i1 %558, label %559, label %562

; <label>:559:                                    ; preds = %1182, %555
  %.011 = phi i32 [ 1, %555 ], [ %.1021, %1182 ]
  %560 = getelementptr [42 x i8], [42 x i8]* @.str.115, i32 0, i32 0
  %561 = call i32 (i8*, ...) @printf(i8* %560)
  br label %1333

; <label>:562:                                    ; preds = %555, %551
  %563 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 1
  %564 = load i32, i32* %563, align 4
  %565 = icmp ne i32 %564, 0
  br i1 %565, label %581, label %566

; <label>:566:                                    ; preds = %562
  %567 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 2
  %568 = load i32, i32* %567, align 8
  %569 = icmp ne i32 %568, 0
  br i1 %569, label %581, label %570

; <label>:570:                                    ; preds = %566
  %571 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 6
  %572 = load i32, i32* %571, align 8
  %573 = icmp ne i32 %572, 0
  br i1 %573, label %578, label %574

; <label>:574:                                    ; preds = %570
  %575 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 24
  %576 = load i32, i32* %575, align 4
  %577 = icmp ne i32 %576, 0
  br i1 %577, label %578, label %581

; <label>:578:                                    ; preds = %574, %570
  %579 = getelementptr [35 x i8], [35 x i8]* @.str.116, i32 0, i32 0
  %580 = call i32 (i8*, ...) @printf(i8* %579)
  br label %1333

; <label>:581:                                    ; preds = %574, %566, %562
  %582 = call void (i32)* @signal(i32 2, void (i32)* @sighandler) #9
  %583 = call void (i32)* @signal(i32 3, void (i32)* @sighandler) #9
  %584 = call void (i32)* @signal(i32 15, void (i32)* @sighandler) #9
  %585 = call void (i32)* @signal(i32 14, void (i32)* inttoptr (i64 1 to void (i32)*)) #9
  %586 = call i32 @pthread_mutex_init(%union.pthread_mutex_t* @mx_apl, %union.pthread_mutexattr_t* null) #9
  %587 = call i32 @pthread_mutex_init(%union.pthread_mutex_t* @mx_ivb, %union.pthread_mutexattr_t* null) #9
  %588 = call i32 @pthread_mutex_init(%union.pthread_mutex_t* @mx_eof, %union.pthread_mutexattr_t* null) #9
  %589 = call i32 @pthread_cond_init(%union.pthread_cond_t* @cv_eof, %union.pthread_mutexattr_t* null) #9
  store %struct.AP_info* null, %struct.AP_info** @ap_1st, align 8
  %590 = load i32, i32* @optind, align 4
  %591 = load i32, i32* @optind, align 4
  %592 = sub nsw i32 4, %591, !track_argc !219
  store i32 %592, i32* %27, align 4
  store i32 0, i32* @id, align 4
  %593 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 2
  %594 = load i32, i32* %593, align 8
  %595 = icmp ne i32 %594, 0
  br i1 %595, label %820, label %.preheader12.preheader

.preheader12.preheader:                           ; preds = %581
  br label %.preheader12

.preheader12:                                     ; preds = %.preheader12.preheader, %628
  call void @unroll_loop(i32 127)
  %596 = load i32, i32* @optind, align 4
  %597 = sext i32 %596 to i64
  %598 = getelementptr inbounds i8*, i8** %25, i64 %597
  %599 = load i8*, i8** %598, align 8
  %600 = call i32 @strcmp(i8* %599, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i64 0, i64 0)) #10
  %601 = icmp eq i32 %600, 0
  br i1 %601, label %602, label %603

; <label>:602:                                    ; preds = %.preheader12
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 24), align 4
  br label %603

; <label>:603:                                    ; preds = %602, %.preheader12
  %604 = load i32, i32* @id, align 4
  %605 = sext i32 %604 to i64
  %606 = getelementptr inbounds [128 x i64], [128 x i64]* @tid, i64 0, i64 %605
  %607 = load i32, i32* @optind, align 4
  %608 = sext i32 %607 to i64
  %609 = getelementptr inbounds i8*, i8** %25, i64 %608
  %610 = load i8*, i8** %609, align 8
  %611 = call i32 @pthread_create(i64* %606, %union.pthread_attr_t* null, i8* (i8*)* bitcast (void (i8*)* @check_thread to i8* (i8*)*), i8* %610) #9
  %612 = icmp ne i32 %611, 0
  br i1 %612, label %613, label %615

; <label>:613:                                    ; preds = %603
  %614 = getelementptr [22 x i8], [22 x i8]* @.str.117, i32 0, i32 0
  call void @perror(i8* %614)
  br label %1333

; <label>:615:                                    ; preds = %603
  %616 = call i32 @usleep(i32 131071)
  %617 = load i32, i32* @id, align 4
  %618 = add nsw i32 %617, 1
  store i32 %618, i32* @id, align 4
  %619 = load i32, i32* @id, align 4
  %620 = icmp sge i32 %619, 128
  br i1 %620, label %621, label %628

; <label>:621:                                    ; preds = %615
  %622 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 6
  %623 = load i32, i32* %622, align 8
  %624 = icmp ne i32 %623, 0
  br i1 %624, label %.loopexit70, label %625

; <label>:625:                                    ; preds = %621
  %626 = getelementptr [51 x i8], [51 x i8]* @.str.118, i32 0, i32 0
  %627 = call i32 (i8*, ...) @printf(i8* %626, i32 128)
  br label %.loopexit70

; <label>:628:                                    ; preds = %615
  %629 = load i32, i32* @optind, align 4
  %630 = add nsw i32 %629, 1
  store i32 %630, i32* @optind, align 4
  %631 = icmp slt i32 %630, 4, !track_argc !219
  br i1 %631, label %.preheader12, label %.loopexit70.loopexit

.loopexit70.loopexit:                             ; preds = %628
  br label %.loopexit70

.loopexit70:                                      ; preds = %.loopexit70.loopexit, %621, %625
  %632 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 6
  %633 = load i32, i32* %632, align 8
  %634 = icmp ne i32 %633, 0
  br i1 %634, label %640, label %635

; <label>:635:                                    ; preds = %.loopexit70
  %636 = getelementptr [33 x i8], [33 x i8]* @.str.119, i32 0, i32 0
  %637 = call i32 (i8*, ...) @printf(i8* %636)
  %638 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %639 = call i32 @fflush(%struct._IO_FILE* %638)
  br label %640

; <label>:640:                                    ; preds = %635, %.loopexit70
  store i32 1, i32* @intr_read, align 4
  %641 = load i32, i32* @id, align 4
  %642 = icmp slt i32 0, %641
  br i1 %642, label %.lr.ph130.preheader, label %._crit_edge131

.lr.ph130.preheader:                              ; preds = %640
  br label %.lr.ph130

.lr.ph130:                                        ; preds = %.lr.ph130.preheader, %.lr.ph130
  %indvars.iv132 = phi i64 [ %indvars.iv.next133, %.lr.ph130 ], [ 0, %.lr.ph130.preheader ]
  call void @unroll_loop(i32 128)
  %643 = shl i64 %indvars.iv132, 3
  %644 = inttoptr i64 %643 to i64*
  %uglygep43 = getelementptr i8, i8* bitcast ([128 x i64]* @tid to i8*), i64 %643
  %uglygep4344 = bitcast i8* %uglygep43 to i64*
  %645 = load i64, i64* %uglygep4344, align 8
  %646 = call i32 @pthread_join(i64 %645, i8** null)
  %indvars.iv.next133 = add nuw nsw i64 %indvars.iv132, 1
  %647 = load i32, i32* @id, align 4
  %648 = sext i32 %647 to i64
  %649 = icmp slt i64 %indvars.iv.next133, %648
  br i1 %649, label %.lr.ph130, label %._crit_edge131.loopexit

._crit_edge131.loopexit:                          ; preds = %.lr.ph130
  br label %._crit_edge131

._crit_edge131:                                   ; preds = %._crit_edge131.loopexit, %640
  store i32 0, i32* @id, align 4
  %650 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 6
  %651 = load i32, i32* %650, align 8
  %652 = icmp ne i32 %651, 0
  br i1 %652, label %661, label %653

; <label>:653:                                    ; preds = %._crit_edge131
  %654 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 24
  %655 = load i32, i32* %654, align 4
  %656 = icmp ne i32 %655, 0
  br i1 %656, label %661, label %657

; <label>:657:                                    ; preds = %653
  %658 = load i64, i64* @nb_pkt, align 8
  %659 = getelementptr [23 x i8], [23 x i8]* @.str.120, i32 0, i32 0
  %660 = call i32 (i8*, ...) @printf(i8* %659, i64 %658)
  br label %661

; <label>:661:                                    ; preds = %657, %653, %._crit_edge131
  %662 = load %struct.AP_info*, %struct.AP_info** @ap_1st, align 8
  %663 = icmp eq %struct.AP_info* %662, null
  br i1 %663, label %664, label %667

; <label>:664:                                    ; preds = %661
  %665 = getelementptr [29 x i8], [29 x i8]* @.str.121, i32 0, i32 0
  %666 = call i32 (i8*, ...) @printf(i8* %665)
  br label %1333

; <label>:667:                                    ; preds = %661
  %668 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 1
  %669 = load i32, i32* %668, align 4
  %670 = icmp ne i32 %669, 0
  br i1 %670, label %819, label %671

; <label>:671:                                    ; preds = %667
  %672 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 2
  %673 = load i32, i32* %672, align 8
  %674 = icmp ne i32 %673, 0
  br i1 %674, label %819, label %675

; <label>:675:                                    ; preds = %671
  %676 = getelementptr [37 x i8], [37 x i8]* @.str.122, i32 0, i32 0
  %677 = getelementptr [1 x i8], [1 x i8]* @.str.123, i32 0, i32 0
  %678 = call i32 (i8*, ...) @printf(i8* %676, i8* %677, i8* %677)
  %679 = load %struct.AP_info*, %struct.AP_info** @ap_1st, align 8
  %680 = icmp ne %struct.AP_info* %679, null
  br i1 %680, label %.lr.ph125.preheader, label %._crit_edge126

.lr.ph125.preheader:                              ; preds = %675
  %681 = getelementptr inbounds [33 x i8], [33 x i8]* %29, i32 0, i32 0
  %682 = getelementptr inbounds [33 x i8], [33 x i8]* %29, i32 0, i32 0
  %683 = getelementptr inbounds [33 x i8], [33 x i8]* %29, i32 0, i32 0
  br label %.lr.ph125

.lr.ph125:                                        ; preds = %.lr.ph125.preheader, %767
  %.01123 = phi %struct.AP_info* [ %770, %767 ], [ %679, %.lr.ph125.preheader ]
  %.68122 = phi i32 [ %768, %767 ], [ 1, %.lr.ph125.preheader ]
  call void @unroll_loop(i32 129)
  call void @llvm.memset.p0i8.i64(i8* align 16 %681, i8 0, i64 33, i1 false)
  %684 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.01123, i32 0, i32 2
  %685 = getelementptr inbounds [33 x i8], [33 x i8]* %684, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %682, i8* align 2 %685, i64 32, i1 false), !track !223
  br label %686

; <label>:686:                                    ; preds = %.lr.ph125, %699
  %indvars.iv120 = phi i64 [ 0, %.lr.ph125 ], [ %indvars.iv.next121, %699 ]
  call void @unroll_loop(i32 130)
  %scevgep39 = getelementptr [33 x i8], [33 x i8]* %29, i64 0, i64 %indvars.iv120
  %687 = load i8, i8* %scevgep39, align 1
  %688 = sext i8 %687 to i32
  %689 = icmp sgt i32 %688, 0
  br i1 %689, label %690, label %694

; <label>:690:                                    ; preds = %686
  %scevgep40 = getelementptr [33 x i8], [33 x i8]* %29, i64 0, i64 %indvars.iv120
  %691 = load i8, i8* %scevgep40, align 1
  %692 = sext i8 %691 to i32
  %693 = icmp slt i32 %692, 32
  br i1 %693, label %698, label %694

; <label>:694:                                    ; preds = %690, %686
  %scevgep42 = getelementptr [33 x i8], [33 x i8]* %29, i64 0, i64 %indvars.iv120
  %695 = load i8, i8* %scevgep42, align 1
  %696 = sext i8 %695 to i32
  %697 = icmp sgt i32 %696, 126
  br i1 %697, label %698, label %699

; <label>:698:                                    ; preds = %694, %690
  %scevgep41 = getelementptr [33 x i8], [33 x i8]* %29, i64 0, i64 %indvars.iv120
  store i8 63, i8* %scevgep41, align 1
  br label %699

; <label>:699:                                    ; preds = %694, %698
  %indvars.iv.next121 = add nuw nsw i64 %indvars.iv120, 1
  %exitcond = icmp ne i64 %indvars.iv.next121, 32
  br i1 %exitcond, label %686, label %700

; <label>:700:                                    ; preds = %699
  %701 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.01123, i32 0, i32 1
  %702 = getelementptr inbounds [6 x i8], [6 x i8]* %701, i64 0, i64 0
  %703 = load i8, i8* %702, align 8
  %704 = zext i8 %703 to i32
  %705 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.01123, i32 0, i32 1
  %706 = getelementptr inbounds [6 x i8], [6 x i8]* %705, i64 0, i64 1
  %707 = load i8, i8* %706, align 1
  %708 = zext i8 %707 to i32
  %709 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.01123, i32 0, i32 1
  %710 = getelementptr inbounds [6 x i8], [6 x i8]* %709, i64 0, i64 2
  %711 = load i8, i8* %710, align 2
  %712 = zext i8 %711 to i32
  %713 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.01123, i32 0, i32 1
  %714 = getelementptr inbounds [6 x i8], [6 x i8]* %713, i64 0, i64 3
  %715 = load i8, i8* %714, align 1
  %716 = zext i8 %715 to i32
  %717 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.01123, i32 0, i32 1
  %718 = getelementptr inbounds [6 x i8], [6 x i8]* %717, i64 0, i64 4
  %719 = load i8, i8* %718, align 4
  %720 = zext i8 %719 to i32
  %721 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.01123, i32 0, i32 1
  %722 = getelementptr inbounds [6 x i8], [6 x i8]* %721, i64 0, i64 5
  %723 = load i8, i8* %722, align 1
  %724 = zext i8 %723 to i32
  %725 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.124, i64 0, i64 0), i32 %.68122, i32 %704, i32 %708, i32 %712, i32 %716, i32 %720, i32 %724, i8* %683)
  %726 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.01123, i32 0, i32 11
  %727 = load i32, i32* %726, align 4
  %728 = icmp ne i32 %727, 0
  br i1 %728, label %729, label %731

; <label>:729:                                    ; preds = %700
  %730 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.125, i64 0, i64 0))
  br label %731

; <label>:731:                                    ; preds = %729, %700
  %732 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.01123, i32 0, i32 10
  %733 = load i32, i32* %732, align 8
  switch i32 %733, label %765 [
    i32 0, label %734
    i32 1, label %752
    i32 2, label %754
    i32 3, label %758
  ]

; <label>:734:                                    ; preds = %731
  %735 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.01123, i32 0, i32 3
  %736 = getelementptr inbounds [4 x i8], [4 x i8]* %735, i64 0, i64 0
  %737 = load i8, i8* %736, align 1
  %738 = zext i8 %737 to i32
  %739 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.01123, i32 0, i32 3
  %740 = getelementptr inbounds [4 x i8], [4 x i8]* %739, i64 0, i64 1
  %741 = load i8, i8* %740, align 1
  %742 = zext i8 %741 to i32
  %743 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.01123, i32 0, i32 3
  %744 = getelementptr inbounds [4 x i8], [4 x i8]* %743, i64 0, i64 2
  %745 = load i8, i8* %744, align 1
  %746 = zext i8 %745 to i32
  %747 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.01123, i32 0, i32 3
  %748 = getelementptr inbounds [4 x i8], [4 x i8]* %747, i64 0, i64 3
  %749 = load i8, i8* %748, align 1
  %750 = zext i8 %749 to i32
  %751 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.126, i64 0, i64 0), i32 %738, i32 %742, i32 %746, i32 %750)
  br label %767

; <label>:752:                                    ; preds = %731
  %753 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.127, i64 0, i64 0))
  br label %767

; <label>:754:                                    ; preds = %731
  %755 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.01123, i32 0, i32 7
  %756 = load i64, i64* %755, align 8
  %757 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.128, i64 0, i64 0), i64 %756)
  br label %767

; <label>:758:                                    ; preds = %731
  %759 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.01123, i32 0, i32 14
  %760 = getelementptr inbounds %struct.WPA_hdsk, %struct.WPA_hdsk* %759, i32 0, i32 7
  %761 = load i32, i32* %760, align 8
  %762 = icmp eq i32 %761, 7
  %763 = zext i1 %762 to i32
  %764 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.129, i64 0, i64 0), i32 %763)
  br label %767

; <label>:765:                                    ; preds = %731
  %766 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.130, i64 0, i64 0))
  br label %767

; <label>:767:                                    ; preds = %765, %758, %754, %752, %734
  %768 = add nuw nsw i32 %.68122, 1
  %769 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.01123, i32 0, i32 0
  %770 = load %struct.AP_info*, %struct.AP_info** %769, align 8
  %771 = icmp ne %struct.AP_info* %770, null
  br i1 %771, label %.lr.ph125, label %._crit_edge126.loopexit

._crit_edge126.loopexit:                          ; preds = %767
  %.01.lcssa.ph = phi %struct.AP_info* [ %770, %767 ]
  br label %._crit_edge126

._crit_edge126:                                   ; preds = %._crit_edge126.loopexit, %675
  %.01.lcssa = phi %struct.AP_info* [ %679, %675 ], [ %.01.lcssa.ph, %._crit_edge126.loopexit ]
  %772 = getelementptr [2 x i8], [2 x i8]* @.str.2, i32 0, i32 0
  %773 = call i32 (i8*, ...) @printf(i8* %772)
  %774 = load %struct.AP_info*, %struct.AP_info** @ap_1st, align 8
  %775 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %774, i32 0, i32 0
  %776 = load %struct.AP_info*, %struct.AP_info** %775, align 8
  %777 = icmp ne %struct.AP_info* %776, null
  br i1 %777, label %.preheader10.preheader, label %800

.preheader10.preheader:                           ; preds = %._crit_edge126
  %778 = getelementptr inbounds [128 x i8], [128 x i8]* %28, i32 0, i32 0
  %779 = getelementptr inbounds [128 x i8], [128 x i8]* %28, i32 0, i32 0
  br label %.preheader10

.preheader10:                                     ; preds = %.preheader10.preheader, %.loopexit9
  %.1 = phi %struct.AP_info* [ %.3, %.loopexit9 ], [ %.01.lcssa, %.preheader10.preheader ]
  call void @unroll_loop(i32 131)
  %780 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.131, i64 0, i64 0))
  %781 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %782 = call i32 @fflush(%struct._IO_FILE* %781)
  br label %783

; <label>:783:                                    ; preds = %.preheader10, %783
  call void @unroll_loop(i32 132)
  %784 = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.132, i64 0, i64 0), i8* %778)
  %785 = icmp ne i32 %784, 0
  %786 = xor i1 %785, true
  br i1 %786, label %783, label %787

; <label>:787:                                    ; preds = %783
  %788 = call i32 @atoi(i8* %779) #10
  %789 = icmp slt i32 %788, 1
  br i1 %789, label %.loopexit9, label %790

; <label>:790:                                    ; preds = %787
  %791 = load %struct.AP_info*, %struct.AP_info** @ap_1st, align 8
  call void @unroll_loop(i32 133)
  %792 = icmp ne %struct.AP_info* %791, null
  %793 = icmp slt i32 1, %788
  %spec.select317 = select i1 %792, i1 %793, i1 false
  br i1 %spec.select317, label %.lr.ph21.preheader, label %.loopexit9

.lr.ph21.preheader:                               ; preds = %790
  br label %.lr.ph21

.lr.ph21:                                         ; preds = %.lr.ph21.preheader, %.lr.ph21
  %lsr.iv37 = phi i32 [ 2, %.lr.ph21.preheader ], [ %lsr.iv.next38, %.lr.ph21 ]
  %.219 = phi %struct.AP_info* [ %795, %.lr.ph21 ], [ %791, %.lr.ph21.preheader ]
  %794 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.219, i32 0, i32 0
  %795 = load %struct.AP_info*, %struct.AP_info** %794, align 8
  call void @unroll_loop(i32 133)
  %796 = icmp ne %struct.AP_info* %795, null
  %797 = icmp slt i32 %lsr.iv37, %788
  %spec.select3 = select i1 %796, i1 %797, i1 false
  %lsr.iv.next38 = add nuw i32 %lsr.iv37, 1
  br i1 %spec.select3, label %.lr.ph21, label %.loopexit9.loopexit

.loopexit9.loopexit:                              ; preds = %.lr.ph21
  %.3.ph = phi %struct.AP_info* [ %795, %.lr.ph21 ]
  br label %.loopexit9

.loopexit9:                                       ; preds = %.loopexit9.loopexit, %790, %787
  %.3 = phi %struct.AP_info* [ %.1, %787 ], [ %791, %790 ], [ %.3.ph, %.loopexit9.loopexit ]
  %798 = icmp slt i32 %788, 0
  %799 = icmp eq %struct.AP_info* %.3, null
  %spec.select4 = select i1 %798, i1 true, i1 %799
  br i1 %spec.select4, label %.preheader10, label %.loopexit11.loopexit

; <label>:800:                                    ; preds = %._crit_edge126
  %801 = getelementptr [35 x i8], [35 x i8]* @.str.133, i32 0, i32 0
  %802 = call i32 (i8*, ...) @printf(i8* %801)
  %803 = load %struct.AP_info*, %struct.AP_info** @ap_1st, align 8
  br label %.loopexit11

.loopexit11.loopexit:                             ; preds = %.loopexit9
  %.4.ph = phi %struct.AP_info* [ %.3, %.loopexit9 ]
  br label %.loopexit11

.loopexit11:                                      ; preds = %.loopexit11.loopexit, %800
  %.4 = phi %struct.AP_info* [ %803, %800 ], [ %.4.ph, %.loopexit11.loopexit ]
  %804 = getelementptr [2 x i8], [2 x i8]* @.str.2, i32 0, i32 0
  %805 = call i32 (i8*, ...) @printf(i8* %804)
  %806 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.4, i32 0, i32 1
  %807 = getelementptr inbounds [6 x i8], [6 x i8]* %806, i32 0, i32 0
  %808 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 4, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %808, i8* align 8 %807, i64 6, i1 false), !track !224
  %809 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 2
  store i32 1, i32* %809, align 8
  %810 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.4, i32 0, i32 10
  %811 = load i32, i32* %810, align 8
  %812 = icmp eq i32 %811, 2
  br i1 %812, label %813, label %819

; <label>:813:                                    ; preds = %.loopexit11
  %814 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 22
  %815 = load %struct._IO_FILE*, %struct._IO_FILE** %814, align 8
  %816 = icmp ne %struct._IO_FILE* %815, null
  br i1 %816, label %817, label %819

; <label>:817:                                    ; preds = %813
  %818 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 20
  store i32 0, i32* %818, align 4
  br label %819

; <label>:819:                                    ; preds = %.loopexit11, %813, %817, %671, %667
  store %struct.AP_info* null, %struct.AP_info** @ap_1st, align 8
  store i32 %590, i32* @optind, align 4
  store i32 0, i32* @id, align 4
  br label %820

; <label>:820:                                    ; preds = %819, %581
  store i32 0, i32* @nb_eof, align 4
  %821 = call void (i32)* @signal(i32 2, void (i32)* @sighandler) #9
  br label %822

; <label>:822:                                    ; preds = %848, %820
  call void @unroll_loop(i32 134)
  %823 = load i32, i32* @optind, align 4
  %824 = sext i32 %823 to i64
  %825 = getelementptr inbounds i8*, i8** %25, i64 %824
  %826 = load i8*, i8** %825, align 8
  %827 = call i32 @strcmp(i8* %826, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i64 0, i64 0)) #10
  %828 = icmp eq i32 %827, 0
  br i1 %828, label %829, label %830

; <label>:829:                                    ; preds = %822
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 24), align 4
  br label %830

; <label>:830:                                    ; preds = %829, %822
  %831 = load i32, i32* @id, align 4
  %832 = sext i32 %831 to i64
  %833 = getelementptr inbounds [128 x i64], [128 x i64]* @tid, i64 0, i64 %832
  %834 = load i32, i32* @optind, align 4
  %835 = sext i32 %834 to i64
  %836 = getelementptr inbounds i8*, i8** %25, i64 %835
  %837 = load i8*, i8** %836, align 8
  %838 = call i32 @pthread_create(i64* %833, %union.pthread_attr_t* null, i8* (i8*)* bitcast (void (i8*)* @read_thread to i8* (i8*)*), i8* %837) #9
  %839 = icmp ne i32 %838, 0
  br i1 %839, label %840, label %842

; <label>:840:                                    ; preds = %830
  %841 = getelementptr [22 x i8], [22 x i8]* @.str.117, i32 0, i32 0
  call void @perror(i8* %841)
  br label %1333

; <label>:842:                                    ; preds = %830
  %843 = load i32, i32* @id, align 4
  %844 = add nsw i32 %843, 1
  store i32 %844, i32* @id, align 4
  %845 = call i32 @usleep(i32 131071)
  %846 = load i32, i32* @id, align 4
  %847 = icmp sge i32 %846, 128
  br i1 %847, label %.loopexit69, label %848

; <label>:848:                                    ; preds = %842
  %849 = load i32, i32* @optind, align 4
  %850 = add nsw i32 %849, 1
  store i32 %850, i32* @optind, align 4
  %851 = icmp slt i32 %850, 4, !track_argc !219
  br i1 %851, label %822, label %.loopexit69

.loopexit69:                                      ; preds = %848, %842
  store i64 0, i64* @nb_pkt, align 8
  store i32 0, i32* @intr_read, align 4
  %852 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* @mx_eof) #9
  %853 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 6
  %854 = load i32, i32* %853, align 8
  %855 = icmp ne i32 %854, 0
  br i1 %855, label %861, label %856

; <label>:856:                                    ; preds = %.loopexit69
  %857 = getelementptr [33 x i8], [33 x i8]* @.str.119, i32 0, i32 0
  %858 = call i32 (i8*, ...) @printf(i8* %857)
  %859 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %860 = call i32 @fflush(%struct._IO_FILE* %859)
  br label %861

; <label>:861:                                    ; preds = %856, %.loopexit69
  call void @unroll_loop(i32 135)
  %862 = load i32, i32* @nb_eof, align 4
  %863 = load i32, i32* %27, align 4
  %864 = icmp slt i32 %862, %863
  br i1 %864, label %.lr.ph15.preheader, label %.critedge5

.lr.ph15.preheader:                               ; preds = %861
  br label %.lr.ph15

.lr.ph15:                                         ; preds = %.lr.ph15.preheader, %868
  %865 = load i32, i32* @intr_read, align 4
  %866 = icmp ne i32 %865, 0
  %867 = xor i1 %866, true
  br i1 %867, label %868, label %.critedge5.loopexit

; <label>:868:                                    ; preds = %.lr.ph15
  %869 = call i32 @pthread_cond_wait(%union.pthread_cond_t* @cv_eof, %union.pthread_mutex_t* @mx_eof)
  call void @unroll_loop(i32 135)
  %870 = load i32, i32* @nb_eof, align 4
  %871 = load i32, i32* %27, align 4
  %872 = icmp slt i32 %870, %871
  br i1 %872, label %.lr.ph15, label %.critedge5.loopexit

.critedge5.loopexit:                              ; preds = %868, %.lr.ph15
  br label %.critedge5

.critedge5:                                       ; preds = %.critedge5.loopexit, %861
  %873 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* @mx_eof) #9
  store i32 1, i32* @intr_read, align 4
  %874 = load %struct.AP_info*, %struct.AP_info** @ap_1st, align 8
  %875 = icmp ne %struct.AP_info* %874, null
  br i1 %875, label %.lr.ph115.preheader, label %._crit_edge116

.lr.ph115.preheader:                              ; preds = %.critedge5
  br label %.lr.ph115

.lr.ph115:                                        ; preds = %.lr.ph115.preheader, %896
  %.5111 = phi %struct.AP_info* [ %898, %896 ], [ %874, %.lr.ph115.preheader ]
  call void @unroll_loop(i32 136)
  %876 = call i32 @memcmp(i8* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 9, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.23, i64 0, i64 0), i64 6) #10
  %877 = icmp eq i32 %876, 0
  br i1 %877, label %894, label %878

; <label>:878:                                    ; preds = %.lr.ph115
  %879 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 2), align 8
  %880 = icmp ne i32 %879, 0
  br i1 %880, label %881, label %886

; <label>:881:                                    ; preds = %878
  %882 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.5111, i32 0, i32 1
  %883 = getelementptr inbounds [6 x i8], [6 x i8]* %882, i32 0, i32 0
  %884 = call i32 @memcmp(i8* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 4, i64 0), i8* %883, i64 6) #10
  %885 = icmp ne i32 %884, 0
  br i1 %885, label %886, label %894

; <label>:886:                                    ; preds = %881, %878
  %887 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 1), align 4
  %888 = icmp ne i32 %887, 0
  br i1 %888, label %889, label %896

; <label>:889:                                    ; preds = %886
  %890 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.5111, i32 0, i32 2
  %891 = getelementptr inbounds [33 x i8], [33 x i8]* %890, i32 0, i32 0
  %892 = call i32 @strcmp(i8* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 3, i64 0), i8* %891) #10
  %893 = icmp ne i32 %892, 0
  br i1 %893, label %896, label %894

; <label>:894:                                    ; preds = %889, %881, %.lr.ph115
  %895 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.5111, i32 0, i32 12
  store i32 1, i32* %895, align 8
  br label %896

; <label>:896:                                    ; preds = %894, %889, %886
  %897 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.5111, i32 0, i32 0
  %898 = load %struct.AP_info*, %struct.AP_info** %897, align 8
  %899 = icmp ne %struct.AP_info* %898, null
  br i1 %899, label %.lr.ph115, label %._crit_edge116.loopexit

._crit_edge116.loopexit:                          ; preds = %896
  br label %._crit_edge116

._crit_edge116:                                   ; preds = %._crit_edge116.loopexit, %.critedge5
  %900 = load %struct.AP_info*, %struct.AP_info** @ap_1st, align 8
  %901 = icmp ne %struct.AP_info* %900, null
  br i1 %901, label %.lr.ph109.preheader, label %.loopexit68

.lr.ph109.preheader:                              ; preds = %._crit_edge116
  br label %.lr.ph109

.lr.ph109:                                        ; preds = %.lr.ph109.preheader, %905
  %.6107 = phi %struct.AP_info* [ %907, %905 ], [ %900, %.lr.ph109.preheader ]
  call void @unroll_loop(i32 137)
  %902 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.6107, i32 0, i32 12
  %903 = load i32, i32* %902, align 8
  %904 = icmp ne i32 %903, 0
  br i1 %904, label %.loopexit68.loopexit, label %905

; <label>:905:                                    ; preds = %.lr.ph109
  %906 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.6107, i32 0, i32 0
  %907 = load %struct.AP_info*, %struct.AP_info** %906, align 8
  %908 = icmp ne %struct.AP_info* %907, null
  br i1 %908, label %.lr.ph109, label %.loopexit68.loopexit

.loopexit68.loopexit:                             ; preds = %.lr.ph109, %905
  %.6.lcssa.ph = phi %struct.AP_info* [ %.6107, %.lr.ph109 ], [ %907, %905 ]
  br label %.loopexit68

.loopexit68:                                      ; preds = %.loopexit68.loopexit, %._crit_edge116
  %.6.lcssa = phi %struct.AP_info* [ %900, %._crit_edge116 ], [ %.6.lcssa.ph, %.loopexit68.loopexit ]
  %909 = icmp eq %struct.AP_info* %.6.lcssa, null
  br i1 %909, label %910, label %920

; <label>:910:                                    ; preds = %.loopexit68
  %911 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 1
  %912 = load i32, i32* %911, align 4
  %913 = icmp ne i32 %912, 0
  %914 = zext i1 %913 to i64
  %915 = getelementptr [6 x i8], [6 x i8]* @.str.135, i32 0, i32 0
  %916 = getelementptr [6 x i8], [6 x i8]* @.str.77, i32 0, i32 0
  %917 = select i1 %913, i8* %915, i8* %916
  %918 = getelementptr [44 x i8], [44 x i8]* @.str.134, i32 0, i32 0
  %919 = call i32 (i8*, ...) @printf(i8* %918, i8* %917)
  br label %1333

; <label>:920:                                    ; preds = %.loopexit68
  %921 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.6.lcssa, i32 0, i32 10
  %922 = load i32, i32* %921, align 8
  %923 = icmp slt i32 %922, 2
  br i1 %923, label %924, label %933

; <label>:924:                                    ; preds = %920
  %925 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.6.lcssa, i32 0, i32 10
  %926 = load i32, i32* %925, align 8
  %cond = icmp eq i32 %926, 0
  br i1 %cond, label %927, label %930

; <label>:927:                                    ; preds = %924
  %928 = getelementptr [40 x i8], [40 x i8]* @.str.136, i32 0, i32 0
  %929 = call i32 (i8*, ...) @printf(i8* %928)
  br label %1333

; <label>:930:                                    ; preds = %924
  %931 = getelementptr [42 x i8], [42 x i8]* @.str.137, i32 0, i32 0
  %932 = call i32 (i8*, ...) @printf(i8* %931)
  br label %1333

; <label>:933:                                    ; preds = %920
  %934 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 5
  %935 = load i32, i32* %934, align 4
  %936 = icmp slt i32 0, %935
  br i1 %936, label %.lr.ph103.preheader, label %._crit_edge104

.lr.ph103.preheader:                              ; preds = %933
  br label %.lr.ph103

.lr.ph103:                                        ; preds = %.lr.ph103.preheader, %954
  %lsr.iv32 = phi [256 x [2 x i32]]* [ @bf_pipe, %.lr.ph103.preheader ], [ %959, %954 ]
  %lsr.iv29 = phi [256 x [2 x i32]]* [ @cm_pipe, %.lr.ph103.preheader ], [ %958, %954 ]
  %lsr.iv26 = phi [256 x [2 x i32]]* [ @mc_pipe, %.lr.ph103.preheader ], [ %957, %954 ]
  %indvars.iv105 = phi i64 [ %indvars.iv.next106, %954 ], [ 0, %.lr.ph103.preheader ]
  %lsr.iv3234 = bitcast [256 x [2 x i32]]* %lsr.iv32 to i32*
  %lsr.iv2931 = bitcast [256 x [2 x i32]]* %lsr.iv29 to i32*
  %lsr.iv2628 = bitcast [256 x [2 x i32]]* %lsr.iv26 to i32*
  call void @unroll_loop(i32 138)
  %937 = call i32 @pipe(i32* %lsr.iv2628) #9
  %938 = call i32 @pipe(i32* %lsr.iv2931) #9
  %939 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 0), align 8
  %940 = icmp sle i32 %939, 1
  br i1 %940, label %941, label %954

; <label>:941:                                    ; preds = %.lr.ph103
  %942 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 5), align 4
  %943 = icmp sgt i32 %942, 1
  br i1 %943, label %944, label %954

; <label>:944:                                    ; preds = %941
  %945 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 17), align 8
  %946 = icmp ne i32 %945, 0
  br i1 %946, label %947, label %954

; <label>:947:                                    ; preds = %944
  %948 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 18), align 4
  %949 = icmp ne i32 %948, 0
  br i1 %949, label %950, label %954

; <label>:950:                                    ; preds = %947
  %951 = call i32 @pipe(i32* %lsr.iv3234) #9
  %952 = shl i64 %indvars.iv105, 2
  %953 = inttoptr i64 %952 to i32*
  %uglygep35 = getelementptr i8, i8* bitcast ([256 x i32]* @bf_nkeys to i8*), i64 %952
  %uglygep3536 = bitcast i8* %uglygep35 to i32*
  store i32 0, i32* %uglygep3536, align 4
  br label %954

; <label>:954:                                    ; preds = %.lr.ph103, %941, %944, %947, %950
  %indvars.iv.next106 = add nuw nsw i64 %indvars.iv105, 1
  %955 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 5), align 4
  %956 = sext i32 %955 to i64
  %scevgep27 = getelementptr [256 x [2 x i32]], [256 x [2 x i32]]* %lsr.iv26, i64 0, i64 1, i64 0
  %957 = bitcast i32* %scevgep27 to [256 x [2 x i32]]*
  %scevgep30 = getelementptr [256 x [2 x i32]], [256 x [2 x i32]]* %lsr.iv29, i64 0, i64 1, i64 0
  %958 = bitcast i32* %scevgep30 to [256 x [2 x i32]]*
  %scevgep33 = getelementptr [256 x [2 x i32]], [256 x [2 x i32]]* %lsr.iv32, i64 0, i64 1, i64 0
  %959 = bitcast i32* %scevgep33 to [256 x [2 x i32]]*
  %960 = icmp slt i64 %indvars.iv.next106, %956
  br i1 %960, label %.lr.ph103, label %._crit_edge104.loopexit

._crit_edge104.loopexit:                          ; preds = %954
  br label %._crit_edge104

._crit_edge104:                                   ; preds = %._crit_edge104.loopexit, %933
  store i64 0, i64* @nb_tried, align 8
  store i64 0, i64* @nb_kprev, align 8
  %961 = call float @chrono(%struct.timeval* @t_begin, i32 1)
  %962 = call float @chrono(%struct.timeval* @t_stats, i32 1)
  %963 = call float @chrono(%struct.timeval* @t_kprev, i32 1)
  %964 = call void (i32)* @signal(i32 28, void (i32)* @sighandler) #9
  %965 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 0
  %966 = load i32, i32* %965, align 8
  %967 = icmp eq i32 %966, 1
  br i1 %967, label %976, label %968

; <label>:968:                                    ; preds = %._crit_edge104
  %969 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 0
  %970 = load i32, i32* %969, align 8
  %971 = icmp eq i32 %970, 2
  br i1 %971, label %1182, label %972

; <label>:972:                                    ; preds = %968
  %973 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.6.lcssa, i32 0, i32 10
  %974 = load i32, i32* %973, align 8
  %975 = icmp eq i32 %974, 2
  br i1 %975, label %976, label %.loopexit8

; <label>:976:                                    ; preds = %972, %._crit_edge104
  %977 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 10
  %978 = load i32, i32* %977, align 4
  %979 = icmp eq i32 %978, 0
  br i1 %979, label %980, label %982

; <label>:980:                                    ; preds = %976
  %981 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 10
  store i32 13, i32* %981, align 4
  br label %982

; <label>:982:                                    ; preds = %980, %976
  %983 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 17
  %984 = load i32, i32* %983, align 8
  %985 = add nsw i32 %.026.lcssa, %984
  %986 = icmp sgt i32 %985, 4
  br i1 %986, label %987, label %990

; <label>:987:                                    ; preds = %982
  %988 = getelementptr [61 x i8], [61 x i8]* @.str.138, i32 0, i32 0
  %989 = call i32 (i8*, ...) @printf(i8* %988)
  br label %1333

; <label>:990:                                    ; preds = %982
  %991 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 17
  %992 = load i32, i32* %991, align 8
  %993 = icmp slt i32 0, %992
  br i1 %993, label %.lr.ph97, label %._crit_edge98

.lr.ph97:                                         ; preds = %990
  %994 = sext i32 %.026.lcssa to i64
  %995 = shl i64 %994, 2
  %996 = add i64 %995, 2068
  %uglygep = getelementptr i8, i8* bitcast (%struct.options* @opt to i8*), i64 %996
  br label %997

; <label>:997:                                    ; preds = %.lr.ph97, %997
  %lsr.iv23 = phi i32 [ -1, %.lr.ph97 ], [ %lsr.iv.next, %997 ]
  %indvars.iv99 = phi i64 [ 0, %.lr.ph97 ], [ %indvars.iv.next100, %997 ]
  call void @unroll_loop(i32 139)
  %998 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %999 = add i32 %lsr.iv23, %998
  %1000 = shl i64 %indvars.iv99, 2
  %scevgep24 = getelementptr i8, i8* %uglygep, i64 %1000
  %scevgep2425 = bitcast i8* %scevgep24 to i32*
  store i32 %999, i32* %scevgep2425, align 4
  %indvars.iv.next100 = add nuw nsw i64 %indvars.iv99, 1
  %1001 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 17), align 8
  %1002 = sext i32 %1001 to i64
  %lsr.iv.next = add nsw i32 %lsr.iv23, -1
  %1003 = icmp slt i64 %indvars.iv.next100, %1002
  br i1 %1003, label %997, label %._crit_edge98.loopexit

._crit_edge98.loopexit:                           ; preds = %997
  br label %._crit_edge98

._crit_edge98:                                    ; preds = %._crit_edge98.loopexit, %990
  %1004 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 17
  %1005 = load i32, i32* %1004, align 8
  %1006 = add nsw i32 %1005, %.026.lcssa
  %1007 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 17
  store i32 %1006, i32* %1007, align 8
  %1008 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 12
  %1009 = load float, float* %1008, align 4
  %1010 = fcmp oeq float %1009, 0.000000e+00
  br i1 %1010, label %1011, label %1030

; <label>:1011:                                   ; preds = %._crit_edge98
  %1012 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 20
  %1013 = load i32, i32* %1012, align 4
  %1014 = icmp ne i32 %1013, 0
  br i1 %1014, label %1015, label %1017

; <label>:1015:                                   ; preds = %1011
  %1016 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 12
  store float 2.000000e+00, float* %1016, align 4
  br label %1030

; <label>:1017:                                   ; preds = %1011
  %1018 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 19
  %1019 = load i32, i32* %1018, align 8
  %1020 = icmp ne i32 %1019, 0
  br i1 %1020, label %1028, label %1021

; <label>:1021:                                   ; preds = %1017
  %1022 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 10
  %1023 = load i32, i32* %1022, align 4
  %1024 = icmp eq i32 %1023, 5
  %1025 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 12
  br i1 %1024, label %1026, label %1027

; <label>:1026:                                   ; preds = %1021
  store float 5.000000e+00, float* %1025, align 4
  br label %1030

; <label>:1027:                                   ; preds = %1021
  store float 2.000000e+00, float* %1025, align 4
  br label %1030

; <label>:1028:                                   ; preds = %1017
  %1029 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 12
  store float 3.000000e+01, float* %1029, align 4
  br label %1030

; <label>:1030:                                   ; preds = %1015, %1026, %1027, %1028, %._crit_edge98
  %1031 = getelementptr %struct.WEP_data, %struct.WEP_data* @wep, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* align 8 %1031, i8 0, i64 131680, i1 false)
  %1032 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 20
  %1033 = load i32, i32* %1032, align 4
  %1034 = icmp ne i32 %1033, 0
  br i1 %1034, label %1035, label %1081

; <label>:1035:                                   ; preds = %1030
  %1036 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 6
  %1037 = load i32, i32* %1036, align 8
  %1038 = icmp ne i32 %1037, 0
  br i1 %1038, label %1042, label %1039

; <label>:1039:                                   ; preds = %1035
  %1040 = getelementptr [49 x i8], [49 x i8]* @.str.139, i32 0, i32 0
  %1041 = call i32 (i8*, ...) @printf(i8* %1040, i32 5000)
  br label %1042

; <label>:1042:                                   ; preds = %1039, %1035
  %1043 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.6.lcssa, i32 0, i32 9
  %1044 = load i64, i64* %1043, align 8
  %1045 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.6.lcssa, i32 0, i32 9
  %1046 = load i64, i64* %1045, align 8
  %1047 = srem i64 %1046, 5000
  %1048 = sub nsw i64 %1044, %1047
  %1049 = trunc i64 %1048 to i32
  %1050 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 32
  store i32 %1049, i32* %1050, align 4
  %1051 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.6.lcssa, i32 0, i32 9
  %1052 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.6.lcssa, i32 0, i32 9
  br label %1053

; <label>:1053:                                   ; preds = %1079, %1042
  %.112 = phi i32 [ 1, %1042 ], [ %.314, %1079 ]
  call void @unroll_loop(i32 140)
  %1054 = load i64, i64* %1051, align 8
  %1055 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 32), align 4
  %1056 = sext i32 %1055 to i64
  %1057 = icmp sge i64 %1054, %1056
  br i1 %1057, label %1058, label %1078

; <label>:1058:                                   ; preds = %1053
  %1059 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 6), align 8
  %1060 = icmp ne i32 %1059, 0
  br i1 %1060, label %1064, label %1061

; <label>:1061:                                   ; preds = %1058
  %1062 = load i64, i64* %1052, align 8
  %1063 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.140, i64 0, i64 0), i64 %1062)
  br label %1064

; <label>:1064:                                   ; preds = %1061, %1058
  %1065 = call i32 @crack_wep_ptw(%struct.AP_info* %.6.lcssa)
  %1066 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 41), align 4
  %1067 = icmp eq i32 %1066, 1
  %1068 = icmp eq i32 %1065, 1
  %or.cond6 = and i1 %1067, %1068
  br i1 %or.cond6, label %1069, label %1071

; <label>:1069:                                   ; preds = %1064
  %1070 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([211 x i8], [211 x i8]* @.str.141, i64 0, i64 0))
  br label %1071

; <label>:1071:                                   ; preds = %1069, %1064
  %.213 = phi i32 [ 0, %1069 ], [ %1065, %1064 ]
  %1072 = icmp ne i32 %.213, 0
  br i1 %1072, label %1073, label %1078

; <label>:1073:                                   ; preds = %1071
  %1074 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 32), align 4
  %1075 = add nsw i32 %1074, 5000
  store i32 %1075, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 32), align 4
  %1076 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 32), align 4
  %1077 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.142, i64 0, i64 0), i32 %1076)
  br label %1078

; <label>:1078:                                   ; preds = %1071, %1073, %1053
  %.314 = phi i32 [ %.112, %1053 ], [ %.213, %1073 ], [ %.213, %1071 ]
  %cond7 = icmp eq i32 %.314, 0
  br i1 %cond7, label %.loopexit8.loopexit, label %1079

; <label>:1079:                                   ; preds = %1078
  %1080 = call i32 @usleep(i32 10000)
  br label %1053

; <label>:1081:                                   ; preds = %1030
  %1082 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 22
  %1083 = load %struct._IO_FILE*, %struct._IO_FILE** %1082, align 8
  %1084 = icmp ne %struct._IO_FILE* %1083, null
  br i1 %1084, label %1085, label %1087

; <label>:1085:                                   ; preds = %1081
  %1086 = call i32 @crack_wep_dict()
  br label %.loopexit8

; <label>:1087:                                   ; preds = %1081
  %1088 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 5
  %1089 = load i32, i32* %1088, align 4
  %1090 = icmp slt i32 0, %1089
  br i1 %1090, label %.lr.ph91.preheader, label %._crit_edge92

.lr.ph91.preheader:                               ; preds = %1087
  br label %.lr.ph91

.lr.ph91:                                         ; preds = %.lr.ph91.preheader, %1123
  %indvars.iv93 = phi i64 [ %indvars.iv.next94, %1123 ], [ 0, %.lr.ph91.preheader ]
  call void @unroll_loop(i32 141)
  %1091 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 0), align 8
  %1092 = icmp sle i32 %1091, 1
  br i1 %1092, label %1093, label %1114

; <label>:1093:                                   ; preds = %.lr.ph91
  %1094 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 5), align 4
  %1095 = icmp sgt i32 %1094, 1
  br i1 %1095, label %1096, label %1114

; <label>:1096:                                   ; preds = %1093
  %1097 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 17), align 8
  %1098 = icmp ne i32 %1097, 0
  br i1 %1098, label %1099, label %1114

; <label>:1099:                                   ; preds = %1096
  %1100 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 18), align 4
  %1101 = icmp ne i32 %1100, 0
  br i1 %1101, label %1102, label %1114

; <label>:1102:                                   ; preds = %1099
  %1103 = load i32, i32* @id, align 4
  %1104 = sext i32 %1103 to i64
  %1105 = getelementptr inbounds [128 x i64], [128 x i64]* @tid, i64 0, i64 %1104
  %1106 = inttoptr i64 %indvars.iv93 to i8*
  %1107 = call i32 @pthread_create(i64* %1105, %union.pthread_attr_t* null, i8* (i8*)* bitcast (i32 (i8*)* @inner_bruteforcer_thread to i8* (i8*)*), i8* %1106) #9
  %1108 = icmp ne i32 %1107, 0
  br i1 %1108, label %1109, label %1111

; <label>:1109:                                   ; preds = %1102
  %1110 = getelementptr [22 x i8], [22 x i8]* @.str.117, i32 0, i32 0
  call void @perror(i8* %1110)
  br label %1333

; <label>:1111:                                   ; preds = %1102
  %1112 = load i32, i32* @id, align 4
  %1113 = add nsw i32 %1112, 1
  store i32 %1113, i32* @id, align 4
  br label %1114

; <label>:1114:                                   ; preds = %1111, %1099, %1096, %1093, %.lr.ph91
  %1115 = load i32, i32* @id, align 4
  %1116 = sext i32 %1115 to i64
  %1117 = getelementptr inbounds [128 x i64], [128 x i64]* @tid, i64 0, i64 %1116
  %1118 = inttoptr i64 %indvars.iv93 to i8*
  %1119 = call i32 @pthread_create(i64* %1117, %union.pthread_attr_t* null, i8* (i8*)* bitcast (i32 (i8*)* @crack_wep_thread to i8* (i8*)*), i8* %1118) #9
  %1120 = icmp ne i32 %1119, 0
  br i1 %1120, label %1121, label %1123

; <label>:1121:                                   ; preds = %1114
  %1122 = getelementptr [22 x i8], [22 x i8]* @.str.117, i32 0, i32 0
  call void @perror(i8* %1122)
  br label %1333

; <label>:1123:                                   ; preds = %1114
  %1124 = load i32, i32* @id, align 4
  %1125 = add nsw i32 %1124, 1
  store i32 %1125, i32* @id, align 4
  %indvars.iv.next94 = add nuw nsw i64 %indvars.iv93, 1
  %1126 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 5), align 4
  %1127 = sext i32 %1126 to i64
  %1128 = icmp slt i64 %indvars.iv.next94, %1127
  br i1 %1128, label %.lr.ph91, label %._crit_edge92.loopexit

._crit_edge92.loopexit:                           ; preds = %1123
  br label %._crit_edge92

._crit_edge92:                                    ; preds = %._crit_edge92.loopexit, %1087
  %1129 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 19
  %1130 = load i32, i32* %1129, align 8
  %1131 = icmp ne i32 %1130, 0
  br i1 %1131, label %1148, label %.preheader.preheader

.preheader.preheader:                             ; preds = %._crit_edge92
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %.preheader
  %1132 = call i32 @do_wep_crack1(i32 0)
  %1133 = icmp eq i32 %1132, 2
  br i1 %1133, label %.preheader, label %1134

; <label>:1134:                                   ; preds = %.preheader
  %.lcssa39 = phi i32 [ %1132, %.preheader ]
  %1135 = icmp eq i32 %.lcssa39, 1
  br i1 %1135, label %1136, label %.loopexit8

; <label>:1136:                                   ; preds = %1134
  %1137 = getelementptr [461 x i8], [461 x i8]* @.str.143, i32 0, i32 0
  %1138 = call i32 (i8*, ...) @printf(i8* %1137)
  %1139 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 19
  %1140 = load i32, i32* %1139, align 8
  %1141 = icmp ne i32 %1140, 0
  br i1 %1141, label %1142, label %1145

; <label>:1142:                                   ; preds = %1136
  %1143 = getelementptr [50 x i8], [50 x i8]* @.str.144, i32 0, i32 0
  %1144 = call i32 (i8*, ...) @printf(i8* %1143)
  br label %1145

; <label>:1145:                                   ; preds = %1142, %1136
  %1146 = getelementptr [2 x i8], [2 x i8]* @.str.2, i32 0, i32 0
  %1147 = call i32 (i8*, ...) @printf(i8* %1146)
  br label %.loopexit8

; <label>:1148:                                   ; preds = %._crit_edge92
  %1149 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 10
  %1150 = load i32, i32* %1149, align 4
  %1151 = sub nsw i32 %1150, 3
  %1152 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 10
  %1153 = load i32, i32* %1152, align 4
  %1154 = sub nsw i32 %1153, 2
  %1155 = icmp slt i32 %1151, %1154
  br i1 %1155, label %.lr.ph87.preheader, label %.loopexit67

.lr.ph87.preheader:                               ; preds = %1148
  br label %.lr.ph87

.lr.ph87:                                         ; preds = %.lr.ph87.preheader, %1161
  %.1185 = phi i32 [ %1162, %1161 ], [ %1151, %.lr.ph87.preheader ]
  call void @unroll_loop(i32 142)
  br label %1156

; <label>:1156:                                   ; preds = %1156, %.lr.ph87
  call void @unroll_loop(i32 143)
  %1157 = call i32 @do_wep_crack2(i32 %.1185)
  %1158 = icmp eq i32 %1157, 2
  br i1 %1158, label %1156, label %1159

; <label>:1159:                                   ; preds = %1156
  %.lcssa = phi i32 [ %1157, %1156 ]
  %1160 = icmp eq i32 %.lcssa, 0
  br i1 %1160, label %.loopexit67.loopexit, label %1161

; <label>:1161:                                   ; preds = %1159
  %1162 = add nsw i32 %.1185, 1
  %1163 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %1164 = sub nsw i32 %1163, 2
  %1165 = icmp slt i32 %1162, %1164
  br i1 %1165, label %.lr.ph87, label %.loopexit67.loopexit

.loopexit67.loopexit:                             ; preds = %1159, %1161
  %.516.ph = phi i32 [ %.lcssa, %1159 ], [ %.lcssa, %1161 ]
  br label %.loopexit67

.loopexit67:                                      ; preds = %.loopexit67.loopexit, %1148
  %.516 = phi i32 [ 1, %1148 ], [ %.516.ph, %.loopexit67.loopexit ]
  %1166 = icmp eq i32 %.516, 1
  br i1 %1166, label %1167, label %.loopexit8

; <label>:1167:                                   ; preds = %.loopexit67
  %1168 = getelementptr [461 x i8], [461 x i8]* @.str.143, i32 0, i32 0
  %1169 = call i32 (i8*, ...) @printf(i8* %1168)
  %1170 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 19
  %1171 = load i32, i32* %1170, align 8
  %1172 = icmp ne i32 %1171, 0
  br i1 %1172, label %1173, label %1176

; <label>:1173:                                   ; preds = %1167
  %1174 = getelementptr [56 x i8], [56 x i8]* @.str.145, i32 0, i32 0
  %1175 = call i32 (i8*, ...) @printf(i8* %1174)
  br label %1176

; <label>:1176:                                   ; preds = %1173, %1167
  %1177 = getelementptr [2 x i8], [2 x i8]* @.str.2, i32 0, i32 0
  %1178 = call i32 (i8*, ...) @printf(i8* %1177)
  br label %.loopexit8

.loopexit8.loopexit:                              ; preds = %1078
  %.920.ph = phi i32 [ %.314, %1078 ]
  br label %.loopexit8

.loopexit8:                                       ; preds = %.loopexit8.loopexit, %1145, %1134, %1176, %.loopexit67, %1085, %972
  %.920 = phi i32 [ 1, %972 ], [ %1086, %1085 ], [ %.lcssa39, %1145 ], [ %.lcssa39, %1134 ], [ %.516, %1176 ], [ %.516, %.loopexit67 ], [ %.920.ph, %.loopexit8.loopexit ]
  %1179 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.6.lcssa, i32 0, i32 10
  %1180 = load i32, i32* %1179, align 8
  %1181 = icmp eq i32 %1180, 3
  br i1 %1181, label %1182, label %1333

; <label>:1182:                                   ; preds = %.loopexit8, %968
  %.1021 = phi i32 [ 1, %968 ], [ %.920, %.loopexit8 ]
  %1183 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 22
  %1184 = load %struct._IO_FILE*, %struct._IO_FILE** %1183, align 8
  %1185 = icmp eq %struct._IO_FILE* %1184, null
  br i1 %1185, label %559, label %1186

; <label>:1186:                                   ; preds = %1182
  %1187 = load %struct.AP_info*, %struct.AP_info** @ap_1st, align 8
  %1188 = icmp ne %struct.AP_info* %1187, null
  br i1 %1188, label %.lr.ph84.preheader, label %.loopexit66

.lr.ph84.preheader:                               ; preds = %1186
  br label %.lr.ph84

.lr.ph84:                                         ; preds = %.lr.ph84.preheader, %1197
  %.782 = phi %struct.AP_info* [ %1199, %1197 ], [ %1187, %.lr.ph84.preheader ]
  call void @unroll_loop(i32 144)
  %1189 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.782, i32 0, i32 12
  %1190 = load i32, i32* %1189, align 8
  %1191 = icmp ne i32 %1190, 0
  br i1 %1191, label %1192, label %1197

; <label>:1192:                                   ; preds = %.lr.ph84
  %1193 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.782, i32 0, i32 14
  %1194 = getelementptr inbounds %struct.WPA_hdsk, %struct.WPA_hdsk* %1193, i32 0, i32 7
  %1195 = load i32, i32* %1194, align 8
  %1196 = icmp eq i32 %1195, 7
  br i1 %1196, label %.loopexit66.loopexit, label %1197

; <label>:1197:                                   ; preds = %1192, %.lr.ph84
  %1198 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.782, i32 0, i32 0
  %1199 = load %struct.AP_info*, %struct.AP_info** %1198, align 8
  %1200 = icmp ne %struct.AP_info* %1199, null
  br i1 %1200, label %.lr.ph84, label %.loopexit66.loopexit

.loopexit66.loopexit:                             ; preds = %1192, %1197
  %.7.lcssa.ph = phi %struct.AP_info* [ %.782, %1192 ], [ %1199, %1197 ]
  br label %.loopexit66

.loopexit66:                                      ; preds = %.loopexit66.loopexit, %1186
  %.7.lcssa = phi %struct.AP_info* [ %1187, %1186 ], [ %.7.lcssa.ph, %.loopexit66.loopexit ]
  %1201 = icmp eq %struct.AP_info* %.7.lcssa, null
  br i1 %1201, label %1202, label %1205

; <label>:1202:                                   ; preds = %.loopexit66
  %1203 = getelementptr [32 x i8], [32 x i8]* @.str.146, i32 0, i32 0
  %1204 = call i32 (i8*, ...) @printf(i8* %1203)
  br label %1333

; <label>:1205:                                   ; preds = %.loopexit66
  %1206 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.7.lcssa, i32 0, i32 2
  %1207 = getelementptr inbounds [33 x i8], [33 x i8]* %1206, i32 0, i32 0
  %1208 = getelementptr [32 x i8], [32 x i8]* @ZERO, i32 0, i32 0
  %1209 = call i32 @memcmp(i8* %1207, i8* %1208, i64 32) #10
  %1210 = icmp eq i32 %1209, 0
  br i1 %1210, label %1211, label %1218

; <label>:1211:                                   ; preds = %1205
  %1212 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 1
  %1213 = load i32, i32* %1212, align 4
  %1214 = icmp ne i32 %1213, 0
  br i1 %1214, label %1218, label %1215

; <label>:1215:                                   ; preds = %1211
  %1216 = getelementptr [38 x i8], [38 x i8]* @.str.147, i32 0, i32 0
  %1217 = call i32 (i8*, ...) @printf(i8* %1216)
  br label %1333

; <label>:1218:                                   ; preds = %1211, %1205
  %1219 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 1
  %1220 = load i32, i32* %1219, align 4
  %1221 = icmp ne i32 %1220, 0
  br i1 %1221, label %1222, label %1235

; <label>:1222:                                   ; preds = %1218
  %1223 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.7.lcssa, i32 0, i32 2
  %1224 = getelementptr inbounds [33 x i8], [33 x i8]* %1223, i64 0, i64 0
  %1225 = load i8, i8* %1224, align 2
  %1226 = sext i8 %1225 to i32
  %1227 = icmp eq i32 %1226, 0
  br i1 %1227, label %1228, label %1235

; <label>:1228:                                   ; preds = %1222
  %1229 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.7.lcssa, i32 0, i32 2
  %1230 = getelementptr inbounds [33 x i8], [33 x i8]* %1229, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* align 2 %1230, i8 0, i64 33, i1 false)
  %1231 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.7.lcssa, i32 0, i32 2
  %1232 = getelementptr inbounds [33 x i8], [33 x i8]* %1231, i32 0, i32 0
  %1233 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 3, i32 0
  %1234 = call i8* @strncpy(i8* %1232, i8* %1233, i64 32) #9, !track !225
  br label %1235

; <label>:1235:                                   ; preds = %1228, %1222, %1218
  %1236 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 5
  %1237 = load i32, i32* %1236, align 4
  %1238 = icmp slt i32 0, %1237
  br i1 %1238, label %.lr.ph78.preheader, label %._crit_edge79

.lr.ph78.preheader:                               ; preds = %1235
  br label %.lr.ph78

.lr.ph78:                                         ; preds = %.lr.ph78.preheader, %1254
  %lsr.iv4 = phi [128 x %struct.WPA_data]* [ @wpa_data, %.lr.ph78.preheader ], [ %1259, %1254 ]
  %indvars.iv80 = phi i64 [ %indvars.iv.next81, %1254 ], [ 0, %.lr.ph78.preheader ]
  %lsr.iv415 = bitcast [128 x %struct.WPA_data]* %lsr.iv4 to i8*
  %lsr.iv420 = bitcast [128 x %struct.WPA_data]* %lsr.iv4 to %union.pthread_mutex_t*
  %lsr.iv417 = bitcast [128 x %struct.WPA_data]* %lsr.iv4 to %union.pthread_cond_t*
  %1239 = bitcast [128 x %struct.WPA_data]* undef to i8*
  %lsr.iv47 = bitcast [128 x %struct.WPA_data]* %lsr.iv4 to i32*
  %lsr.iv411 = bitcast [128 x %struct.WPA_data]* %lsr.iv4 to i8**
  %1240 = bitcast [128 x %struct.WPA_data]* undef to i32*
  %lsr.iv46 = bitcast [128 x %struct.WPA_data]* %lsr.iv4 to %struct.AP_info**
  call void @unroll_loop(i32 145)
  store %struct.AP_info* %.7.lcssa, %struct.AP_info** %lsr.iv46, align 8
  %scevgep8 = getelementptr i32, i32* %lsr.iv47, i64 2
  %tmp = trunc i64 %indvars.iv80 to i32
  store i32 %tmp, i32* %scevgep8, align 8
  %scevgep9 = getelementptr i32, i32* %lsr.iv47, i64 3
  store i32 17, i32* %scevgep9, align 4
  %scevgep10 = getelementptr i32, i32* %lsr.iv47, i64 3
  %1241 = load i32, i32* %scevgep10, align 4
  %1242 = mul nsw i32 %1241, 128
  %1243 = sext i32 %1242 to i64
  %1244 = call noalias i8* @malloc(i64 %1243) #9, !track !226
  %scevgep12 = getelementptr i8*, i8** %lsr.iv411, i64 2
  store i8* %1244, i8** %scevgep12, align 8
  %scevgep13 = getelementptr i32, i32* %lsr.iv47, i64 6
  store i32 0, i32* %scevgep13, align 8
  %scevgep14 = getelementptr i32, i32* %lsr.iv47, i64 7
  store i32 0, i32* %scevgep14, align 4
  %scevgep16 = getelementptr i8, i8* %lsr.iv415, i64 32
  call void @llvm.memset.p0i8.i64(i8* align 8 %scevgep16, i8 0, i64 128, i1 false)
  %scevgep18 = getelementptr %union.pthread_cond_t, %union.pthread_cond_t* %lsr.iv417, i64 3, i32 0, i32 2, i64 0
  %scevgep1819 = bitcast i32* %scevgep18 to %union.pthread_cond_t*
  %1245 = call i32 @pthread_cond_init(%union.pthread_cond_t* %scevgep1819, %union.pthread_mutexattr_t* null) #9
  %scevgep21 = getelementptr %union.pthread_mutex_t, %union.pthread_mutex_t* %lsr.iv420, i64 5, i32 0, i32 2
  %scevgep2122 = bitcast i32* %scevgep21 to %union.pthread_mutex_t*
  %1246 = call i32 @pthread_mutex_init(%union.pthread_mutex_t* %scevgep2122, %union.pthread_mutexattr_t* null) #9
  %1247 = load i32, i32* @id, align 4
  %1248 = sext i32 %1247 to i64
  %1249 = getelementptr inbounds [128 x i64], [128 x i64]* @tid, i64 0, i64 %1248
  %1250 = call i32 @pthread_create(i64* %1249, %union.pthread_attr_t* null, i8* (i8*)* bitcast (i32 (i8*)* @crack_wpa_thread to i8* (i8*)*), i8* %lsr.iv415) #9
  %1251 = icmp ne i32 %1250, 0
  br i1 %1251, label %1252, label %1254

; <label>:1252:                                   ; preds = %.lr.ph78
  %1253 = getelementptr [22 x i8], [22 x i8]* @.str.117, i32 0, i32 0
  call void @perror(i8* %1253)
  br label %1333

; <label>:1254:                                   ; preds = %.lr.ph78
  %1255 = load i32, i32* @id, align 4
  %1256 = add nsw i32 %1255, 1
  store i32 %1256, i32* @id, align 4
  %indvars.iv.next81 = add nuw nsw i64 %indvars.iv80, 1
  %1257 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 5), align 4
  %1258 = sext i32 %1257 to i64
  %scevgep5 = getelementptr [128 x %struct.WPA_data], [128 x %struct.WPA_data]* %lsr.iv4, i64 0, i64 1
  %1259 = bitcast %struct.WPA_data* %scevgep5 to [128 x %struct.WPA_data]*
  %1260 = icmp slt i64 %indvars.iv.next81, %1258
  br i1 %1260, label %.lr.ph78, label %._crit_edge79.loopexit

._crit_edge79.loopexit:                           ; preds = %1254
  br label %._crit_edge79

._crit_edge79:                                    ; preds = %._crit_edge79.loopexit, %1235
  %1261 = call i32 @do_wpa_crack()
  store i32 1, i32* @wpa_wordlists_done, align 4
  %1262 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 5
  %1263 = load i32, i32* %1262, align 4
  %1264 = icmp slt i32 0, %1263
  br i1 %1264, label %.lr.ph75.preheader, label %._crit_edge

.lr.ph75.preheader:                               ; preds = %._crit_edge79
  br label %.lr.ph75

.lr.ph75:                                         ; preds = %.lr.ph75.preheader, %.lr.ph75
  %.131074 = phi i32 [ %1271, %.lr.ph75 ], [ 0, %.lr.ph75.preheader ]
  call void @unroll_loop(i32 146)
  %1265 = load i32, i32* @id, align 4
  %1266 = add nsw i32 %1265, -1
  store i32 %1266, i32* @id, align 4
  %1267 = sext i32 %1266 to i64
  %1268 = getelementptr inbounds [128 x i64], [128 x i64]* @tid, i64 0, i64 %1267
  %1269 = load i64, i64* %1268, align 8
  %1270 = call i32 @pthread_join(i64 %1269, i8** null)
  %1271 = add nuw nsw i32 %.131074, 1
  %1272 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 5), align 4
  %1273 = icmp slt i32 %1271, %1272
  br i1 %1273, label %.lr.ph75, label %._crit_edge.loopexit

._crit_edge.loopexit:                             ; preds = %.lr.ph75
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %._crit_edge79
  %1274 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 5
  %1275 = load i32, i32* %1274, align 4
  %1276 = icmp slt i32 0, %1275
  br i1 %1276, label %.lr.ph.preheader, label %.loopexit

.lr.ph.preheader:                                 ; preds = %._crit_edge
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %1282
  %lsr.iv = phi [128 x %struct.WPA_data]* [ bitcast (i8* getelementptr inbounds ([128 x %struct.WPA_data], [128 x %struct.WPA_data]* @wpa_data, i64 0, i64 0, i32 6, i64 0) to [128 x %struct.WPA_data]*), %.lr.ph.preheader ], [ %1285, %1282 ]
  %indvars.iv = phi i64 [ %indvars.iv.next, %1282 ], [ 0, %.lr.ph.preheader ]
  %lsr.iv3 = bitcast [128 x %struct.WPA_data]* %lsr.iv to i8*
  call void @unroll_loop(i32 147)
  %1277 = load i8, i8* %lsr.iv3, align 8
  %1278 = sext i8 %1277 to i32
  %1279 = icmp ne i32 %1278, 0
  br i1 %1279, label %1280, label %1282

; <label>:1280:                                   ; preds = %.lr.ph
  %.14.lcssa37.wide = phi i64 [ %indvars.iv, %.lr.ph ]
  %1281 = trunc i64 %.14.lcssa37.wide to i32
  br label %.loopexit

; <label>:1282:                                   ; preds = %.lr.ph
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %1283 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 5), align 4
  %1284 = sext i32 %1283 to i64
  %scevgep = getelementptr [128 x %struct.WPA_data], [128 x %struct.WPA_data]* %lsr.iv, i64 0, i64 1
  %1285 = bitcast %struct.WPA_data* %scevgep to [128 x %struct.WPA_data]*
  %1286 = icmp slt i64 %indvars.iv.next, %1284
  br i1 %1286, label %.lr.ph, label %..loopexit_crit_edge

..loopexit_crit_edge:                             ; preds = %1282
  %split.wide = phi i64 [ %indvars.iv.next, %1282 ]
  %split73 = phi i32 [ %1261, %1282 ]
  %1287 = trunc i64 %split.wide to i32
  br label %.loopexit

.loopexit:                                        ; preds = %._crit_edge, %..loopexit_crit_edge, %1280
  %.14.lcssa = phi i32 [ %1281, %1280 ], [ %1287, %..loopexit_crit_edge ], [ 0, %._crit_edge ]
  %.1122 = phi i32 [ 0, %1280 ], [ %split73, %..loopexit_crit_edge ], [ %1261, %._crit_edge ]
  %1288 = icmp eq i32 %.1122, 0
  br i1 %1288, label %1289, label %1328

; <label>:1289:                                   ; preds = %.loopexit
  %1290 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 6
  %1291 = load i32, i32* %1290, align 8
  %1292 = icmp ne i32 %1291, 0
  br i1 %1292, label %1293, label %1300

; <label>:1293:                                   ; preds = %1289
  %1294 = sext i32 %.14.lcssa to i64
  %1295 = getelementptr inbounds [128 x %struct.WPA_data], [128 x %struct.WPA_data]* @wpa_data, i64 0, i64 %1294
  %1296 = getelementptr inbounds %struct.WPA_data, %struct.WPA_data* %1295, i32 0, i32 6
  %1297 = getelementptr inbounds [128 x i8], [128 x i8]* %1296, i32 0, i32 0
  %1298 = getelementptr [19 x i8], [19 x i8]* @.str.148, i32 0, i32 0
  %1299 = call i32 (i8*, ...) @printf(i8* %1298, i8* %1297)
  br label %1343

; <label>:1300:                                   ; preds = %1289
  %1301 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 27
  %1302 = load i32, i32* %1301, align 4
  %1303 = icmp ne i32 %1302, 0
  br i1 %1303, label %1304, label %1307

; <label>:1304:                                   ; preds = %1300
  %1305 = getelementptr [8 x i8], [8 x i8]* @.str.62, i32 0, i32 0
  %1306 = call i32 (i8*, ...) @printf(i8* %1305)
  br label %1307

; <label>:1307:                                   ; preds = %1304, %1300
  %1308 = sext i32 %.14.lcssa to i64
  %1309 = getelementptr inbounds [128 x %struct.WPA_data], [128 x %struct.WPA_data]* @wpa_data, i64 0, i64 %1308
  %1310 = getelementptr inbounds %struct.WPA_data, %struct.WPA_data* %1309, i32 0, i32 6
  %1311 = getelementptr inbounds [128 x i8], [128 x i8]* %1310, i32 0, i32 0
  %1312 = call i64 @strlen(i8* %1311) #10
  %1313 = trunc i64 %1312 to i32
  %1314 = sub nsw i32 65, %1313
  %1315 = sdiv i32 %1314, 2
  %1316 = sext i32 %.14.lcssa to i64
  %1317 = getelementptr inbounds [128 x %struct.WPA_data], [128 x %struct.WPA_data]* @wpa_data, i64 0, i64 %1316
  %1318 = getelementptr inbounds %struct.WPA_data, %struct.WPA_data* %1317, i32 0, i32 6
  %1319 = getelementptr inbounds [128 x i8], [128 x i8]* %1318, i32 0, i32 0
  %1320 = getelementptr [35 x i8], [35 x i8]* @.str.63, i32 0, i32 0
  %1321 = call i32 (i8*, ...) @printf(i8* %1320, i32 %1315, i8* %1319)
  %1322 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 27
  %1323 = load i32, i32* %1322, align 4
  %1324 = icmp ne i32 %1323, 0
  br i1 %1324, label %1325, label %1343

; <label>:1325:                                   ; preds = %1307
  %1326 = getelementptr [9 x i8], [9 x i8]* @.str.36, i32 0, i32 0
  %1327 = call i32 (i8*, ...) @printf(i8* %1326)
  br label %1343

; <label>:1328:                                   ; preds = %.loopexit
  %1329 = getelementptr [32 x i8], [32 x i8]* @.str.149, i32 0, i32 0
  %1330 = call i32 (i8*, ...) @printf(i8* %1329)
  %1331 = getelementptr [2 x i8], [2 x i8]* @.str.2, i32 0, i32 0
  %1332 = call i32 (i8*, ...) @printf(i8* %1331)
  br label %1333

; <label>:1333:                                   ; preds = %.loopexit8, %1328, %927, %930, %1252, %1215, %1202, %1121, %1109, %987, %910, %840, %664, %613, %578, %559
  %.1324 = phi i32 [ %.011, %559 ], [ 1, %840 ], [ 1, %910 ], [ 1, %987 ], [ %.1021, %1202 ], [ %.1021, %1252 ], [ %.1021, %1215 ], [ 1, %1109 ], [ 1, %1121 ], [ 1, %613 ], [ 1, %664 ], [ 1, %578 ], [ 1, %930 ], [ 1, %927 ], [ %.1122, %1328 ], [ %.920, %.loopexit8 ]
  %1334 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 6
  %1335 = load i32, i32* %1334, align 8
  %1336 = icmp ne i32 %1335, 0
  br i1 %1336, label %1340, label %1337

; <label>:1337:                                   ; preds = %1333
  %1338 = getelementptr [2 x i8], [2 x i8]* @.str.2, i32 0, i32 0
  %1339 = call i32 (i8*, ...) @printf(i8* %1338)
  br label %1340

; <label>:1340:                                   ; preds = %1337, %1333
  %1341 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %1342 = call i32 @fflush(%struct._IO_FILE* %1341)
  call void @clean_exit(i32 %.1324)
  call void @_exit(i32 %.1324) #12
  unreachable

; <label>:1343:                                   ; preds = %1307, %1325, %544, %546, %1293, %511, %497, %488, %483, %467, %447, %425, %409, %390, %373, %359, %338, %312, %288, %162, %144, %130, %104, %99, %81, %76
  %.0 = phi i32 [ 0, %1293 ], [ 1, %511 ], [ 1, %497 ], [ 1, %488 ], [ 1, %483 ], [ 1, %467 ], [ 1, %447 ], [ 1, %425 ], [ 1, %409 ], [ 1, %390 ], [ 1, %373 ], [ 1, %359 ], [ 1, %338 ], [ 1, %312 ], [ 1, %288 ], [ 1, %162 ], [ 1, %144 ], [ 1, %130 ], [ 1, %104 ], [ 0, %99 ], [ 1, %81 ], [ 1, %76 ], [ 1, %546 ], [ 1, %544 ], [ 0, %1325 ], [ 0, %1307 ]
  ret i32 %.0
}

; Function Attrs: nounwind
declare dso_local i32 @setsid() #2

; Function Attrs: nounwind
declare dso_local i64 @time(i64*) #2

; Function Attrs: nounwind
declare dso_local void @srand(i32) #2

; Function Attrs: nounwind
declare dso_local i32 @getopt_long(i32, i8**, i8*, %struct.option*, i32*) #2

; Function Attrs: nounwind readonly
declare dso_local i32 @strcasecmp(i8*, i8*) #3

; Function Attrs: nounwind
declare dso_local noalias i8* @calloc(i64, i64) #2

; Function Attrs: nounwind
declare dso_local i32 @pthread_mutex_init(%union.pthread_mutex_t*, %union.pthread_mutexattr_t*) #2

; Function Attrs: nounwind
declare dso_local i32 @pthread_cond_init(%union.pthread_cond_t*, %union.pthread_mutexattr_t*) #2

; Function Attrs: nounwind
declare dso_local i32 @pthread_create(i64*, %union.pthread_attr_t*, i8* (i8*)*, i8*) #2

declare dso_local i32 @scanf(i8*, ...) #1

; Function Attrs: nounwind
declare dso_local i32 @pipe(i32*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @crack_wep_ptw(%struct.AP_info*) #0 {
  %2 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 37
  store %struct.AP_info* %0, %struct.AP_info** %2, align 8
  %3 = call noalias i8* @malloc(i64 32768) #9
  %4 = bitcast i8* %3 to [256 x i32]*
  %5 = icmp eq [256 x i32]* %4, null
  br i1 %5, label %188, label %.preheader4.preheader

.preheader4.preheader:                            ; preds = %1
  br label %.preheader4

.preheader4:                                      ; preds = %.preheader4.preheader, %8
  %lsr.iv9 = phi i8* [ %3, %.preheader4.preheader ], [ %scevgep10, %8 ]
  %indvars.iv28 = phi i64 [ %indvars.iv.next29, %8 ], [ 0, %.preheader4.preheader ]
  br label %6

; <label>:6:                                      ; preds = %.preheader4, %6
  %indvars.iv24 = phi i64 [ 0, %.preheader4 ], [ %indvars.iv.next25, %6 ]
  %7 = shl i64 %indvars.iv24, 2
  %scevgep11 = getelementptr i8, i8* %lsr.iv9, i64 %7
  %scevgep1112 = bitcast i8* %scevgep11 to i32*
  store i32 1, i32* %scevgep1112, align 4
  %indvars.iv.next25 = add nuw nsw i64 %indvars.iv24, 1
  %exitcond26 = icmp ne i64 %indvars.iv.next25, 256
  br i1 %exitcond26, label %6, label %8

; <label>:8:                                      ; preds = %6
  %indvars.iv.next29 = add nuw nsw i64 %indvars.iv28, 1
  %scevgep10 = getelementptr i8, i8* %lsr.iv9, i64 1024
  %exitcond30 = icmp ne i64 %indvars.iv.next29, 32
  br i1 %exitcond30, label %.preheader4, label %.preheader3.preheader

.preheader3.preheader:                            ; preds = %8
  %indvars.iv20.ph = phi i64 [ 0, %8 ]
  br label %.preheader3

.preheader3:                                      ; preds = %.preheader3.preheader, %32
  %lsr.iv5 = phi i8* [ %3, %.preheader3.preheader ], [ %scevgep6, %32 ]
  %indvars.iv20 = phi i64 [ %indvars.iv.next21, %32 ], [ %indvars.iv20.ph, %.preheader3.preheader ]
  br label %9

; <label>:9:                                      ; preds = %.preheader3, %31
  %indvars.iv17 = phi i64 [ 0, %.preheader3 ], [ %indvars.iv.next18, %31 ]
  call void @unroll_loop(i32 122)
  %10 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 15), align 8
  %11 = icmp ne i32 %10, 0
  br i1 %11, label %12, label %15

; <label>:12:                                     ; preds = %9
  %13 = icmp ult i64 %indvars.iv17, 32
  %14 = icmp uge i64 %indvars.iv17, 128
  %or.cond = or i1 %13, %14
  br i1 %or.cond, label %29, label %15

; <label>:15:                                     ; preds = %12, %9
  %16 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 14), align 4
  %17 = icmp ne i32 %16, 0
  br i1 %17, label %18, label %21

; <label>:18:                                     ; preds = %15
  %19 = icmp ult i64 %indvars.iv17, 48
  %20 = icmp uge i64 %indvars.iv17, 58
  %or.cond1 = or i1 %19, %20
  br i1 %or.cond1, label %29, label %21

; <label>:21:                                     ; preds = %18, %15
  %22 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 16), align 4
  %23 = icmp ne i32 %22, 0
  br i1 %23, label %24, label %31

; <label>:24:                                     ; preds = %21
  %25 = icmp ugt i64 %indvars.iv17, 153
  br i1 %25, label %29, label %26

; <label>:26:                                     ; preds = %24
  %tmp = trunc i64 %indvars.iv17 to i32
  %27 = and i32 %tmp, 15
  %28 = icmp sgt i32 %27, 9
  br i1 %28, label %29, label %31

; <label>:29:                                     ; preds = %26, %24, %18, %12
  %30 = shl i64 %indvars.iv17, 2
  %scevgep7 = getelementptr i8, i8* %lsr.iv5, i64 %30
  %scevgep78 = bitcast i8* %scevgep7 to i32*
  store i32 0, i32* %scevgep78, align 4
  br label %31

; <label>:31:                                     ; preds = %21, %26, %29
  %indvars.iv.next18 = add nuw nsw i64 %indvars.iv17, 1
  %exitcond1 = icmp ne i64 %indvars.iv.next18, 256
  br i1 %exitcond1, label %9, label %32

; <label>:32:                                     ; preds = %31
  %indvars.iv.next21 = add nuw nsw i64 %indvars.iv20, 1
  %scevgep6 = getelementptr i8, i8* %lsr.iv5, i64 1024
  %exitcond22 = icmp ne i64 %indvars.iv.next21, 32
  br i1 %exitcond22, label %.preheader3, label %.preheader.preheader

.preheader.preheader:                             ; preds = %32
  %indvars.iv11.ph = phi i64 [ 0, %32 ]
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %58
  %lsr.iv = phi i8* [ %3, %.preheader.preheader ], [ %scevgep, %58 ]
  %indvars.iv11 = phi i64 [ %indvars.iv.next12, %58 ], [ %indvars.iv11.ph, %.preheader.preheader ]
  %33 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 8), i64 0, i64 %indvars.iv11
  %34 = getelementptr inbounds [64 x i8], [64 x i8]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 7), i64 0, i64 %indvars.iv11
  %35 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 8), i64 0, i64 %indvars.iv11
  %36 = getelementptr inbounds [64 x i8], [64 x i8]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 7), i64 0, i64 %indvars.iv11
  br label %37

; <label>:37:                                     ; preds = %.preheader, %57
  %indvars.iv = phi i64 [ 0, %.preheader ], [ %indvars.iv.next, %57 ]
  call void @unroll_loop(i32 123)
  %38 = load i32, i32* %33, align 4
  %39 = icmp eq i32 %38, 1
  br i1 %39, label %40, label %47

; <label>:40:                                     ; preds = %37
  %41 = load i8, i8* %34, align 1
  %42 = zext i8 %41 to i32
  %43 = zext i32 %42 to i64
  %44 = icmp ne i64 %indvars.iv, %43
  br i1 %44, label %45, label %47

; <label>:45:                                     ; preds = %40
  %46 = shl i64 %indvars.iv, 2
  %scevgep1 = getelementptr i8, i8* %lsr.iv, i64 %46
  %scevgep12 = bitcast i8* %scevgep1 to i32*
  store i32 0, i32* %scevgep12, align 4
  br label %57

; <label>:47:                                     ; preds = %40, %37
  %48 = load i32, i32* %35, align 4
  %49 = icmp eq i32 %48, 1
  br i1 %49, label %50, label %57

; <label>:50:                                     ; preds = %47
  %51 = load i8, i8* %36, align 1
  %52 = zext i8 %51 to i32
  %53 = zext i32 %52 to i64
  %54 = icmp eq i64 %indvars.iv, %53
  br i1 %54, label %55, label %57

; <label>:55:                                     ; preds = %50
  %56 = shl i64 %indvars.iv, 2
  %scevgep3 = getelementptr i8, i8* %lsr.iv, i64 %56
  %scevgep34 = bitcast i8* %scevgep3 to i32*
  store i32 1, i32* %scevgep34, align 4
  br label %57

; <label>:57:                                     ; preds = %45, %55, %50, %47
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp ne i64 %indvars.iv.next, 256
  br i1 %exitcond, label %37, label %58

; <label>:58:                                     ; preds = %57
  %indvars.iv.next12 = add nuw nsw i64 %indvars.iv11, 1
  %scevgep = getelementptr i8, i8* %lsr.iv, i64 1024
  %exitcond13 = icmp ne i64 %indvars.iv.next12, 32
  br i1 %exitcond13, label %.preheader, label %59

; <label>:59:                                     ; preds = %58
  %60 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %0, i32 0, i32 8
  %61 = load i64, i64* %60, align 8
  %62 = icmp sgt i64 %61, 99
  br i1 %62, label %63, label %121

; <label>:63:                                     ; preds = %59
  %64 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %0, i32 0, i32 8
  %65 = load i64, i64* %64, align 8
  %66 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %0, i32 0, i32 7
  store i64 %65, i64* %66, align 8
  %67 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 10
  %68 = load i32, i32* %67, align 4
  %69 = icmp ne i32 %68, 13
  %70 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %0, i32 0, i32 15
  %71 = load %struct.PTW_attackstate*, %struct.PTW_attackstate** %70, align 8
  br i1 %69, label %72, label %87

; <label>:72:                                     ; preds = %63
  %73 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 10
  %74 = load i32, i32* %73, align 4
  %75 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 12
  %76 = load float, float* %75, align 4
  %77 = fmul float 1.000000e+06, %76
  %78 = fptosi float %77 to i32
  %79 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 39
  %80 = load i32, i32* %79, align 4
  %81 = getelementptr %struct.WEP_data, %struct.WEP_data* @wep, i32 0, i32 0, i32 0
  %82 = getelementptr [29 x i32], [29 x i32]* @PTW_DEFAULTBF, i32 0, i32 0
  %83 = call i32 @PTW_computeKey(%struct.PTW_attackstate* %71, i8* %81, i32 %74, i32 %78, i32* %82, [256 x i32]* %4, i32 %80)
  %84 = icmp eq i32 %83, 1
  %85 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 10
  %86 = load i32, i32* %85, align 4
  %.01 = select i1 %84, i32 %86, i32 0
  br label %121

; <label>:87:                                     ; preds = %63
  %88 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 39
  %89 = load i32, i32* %88, align 4
  %90 = getelementptr %struct.WEP_data, %struct.WEP_data* @wep, i32 0, i32 0, i32 0
  %91 = getelementptr [29 x i32], [29 x i32]* @PTW_DEFAULTBF, i32 0, i32 0
  %92 = call i32 @PTW_computeKey(%struct.PTW_attackstate* %71, i8* %90, i32 5, i32 1000, i32* %91, [256 x i32]* %4, i32 %89)
  %93 = icmp eq i32 %92, 1
  br i1 %93, label %121, label %94

; <label>:94:                                     ; preds = %87
  %95 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %0, i32 0, i32 15
  %96 = load %struct.PTW_attackstate*, %struct.PTW_attackstate** %95, align 8
  %97 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 12
  %98 = load float, float* %97, align 4
  %99 = fmul float 1.000000e+06, %98
  %100 = fptosi float %99 to i32
  %101 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 39
  %102 = load i32, i32* %101, align 4
  %103 = getelementptr %struct.WEP_data, %struct.WEP_data* @wep, i32 0, i32 0, i32 0
  %104 = getelementptr [29 x i32], [29 x i32]* @PTW_DEFAULTBF, i32 0, i32 0
  %105 = call i32 @PTW_computeKey(%struct.PTW_attackstate* %96, i8* %103, i32 13, i32 %100, i32* %104, [256 x i32]* %4, i32 %102)
  %106 = icmp eq i32 %105, 1
  br i1 %106, label %121, label %107

; <label>:107:                                    ; preds = %94
  %108 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %0, i32 0, i32 15
  %109 = load %struct.PTW_attackstate*, %struct.PTW_attackstate** %108, align 8
  %110 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 12
  %111 = load float, float* %110, align 4
  %112 = fmul float 1.000000e+06, %111
  %113 = fdiv float %112, 3.000000e+00
  %114 = fptosi float %113 to i32
  %115 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 39
  %116 = load i32, i32* %115, align 4
  %117 = getelementptr %struct.WEP_data, %struct.WEP_data* @wep, i32 0, i32 0, i32 0
  %118 = getelementptr [29 x i32], [29 x i32]* @PTW_DEFAULTBF, i32 0, i32 0
  %119 = call i32 @PTW_computeKey(%struct.PTW_attackstate* %109, i8* %117, i32 5, i32 %114, i32* %118, [256 x i32]* %4, i32 %116)
  %120 = icmp eq i32 %119, 1
  %spec.select = select i1 %120, i32 5, i32 0
  br label %121

; <label>:121:                                    ; preds = %72, %107, %94, %87, %59
  %.5 = phi i32 [ 0, %59 ], [ %.01, %72 ], [ 5, %87 ], [ %spec.select, %107 ], [ 13, %94 ]
  %122 = icmp ne i32 %.5, 0
  br i1 %122, label %183, label %123

; <label>:123:                                    ; preds = %121
  %124 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %0, i32 0, i32 9
  %125 = load i64, i64* %124, align 8
  %126 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %0, i32 0, i32 7
  store i64 %125, i64* %126, align 8
  %127 = getelementptr [29 x i32], [29 x i32]* @PTW_DEFAULTBF, i64 0, i64 10
  store i32 1, i32* %127, align 8
  %128 = getelementptr [29 x i32], [29 x i32]* @PTW_DEFAULTBF, i64 0, i64 11
  store i32 1, i32* %128, align 4
  %129 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 10
  %130 = load i32, i32* %129, align 4
  %131 = icmp ne i32 %130, 13
  %132 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %0, i32 0, i32 16
  %133 = load %struct.PTW_attackstate*, %struct.PTW_attackstate** %132, align 8
  br i1 %131, label %134, label %149

; <label>:134:                                    ; preds = %123
  %135 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 10
  %136 = load i32, i32* %135, align 4
  %137 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 12
  %138 = load float, float* %137, align 4
  %139 = fmul float 1.000000e+06, %138
  %140 = fptosi float %139 to i32
  %141 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 39
  %142 = load i32, i32* %141, align 4
  %143 = getelementptr %struct.WEP_data, %struct.WEP_data* @wep, i32 0, i32 0, i32 0
  %144 = getelementptr [29 x i32], [29 x i32]* @PTW_DEFAULTBF, i32 0, i32 0
  %145 = call i32 @PTW_computeKey(%struct.PTW_attackstate* %133, i8* %143, i32 %136, i32 %140, i32* %144, [256 x i32]* %4, i32 %142)
  %146 = icmp eq i32 %145, 1
  %147 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 10
  %148 = load i32, i32* %147, align 4
  %.6 = select i1 %146, i32 %148, i32 %.5
  br label %183

; <label>:149:                                    ; preds = %123
  %150 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 39
  %151 = load i32, i32* %150, align 4
  %152 = getelementptr %struct.WEP_data, %struct.WEP_data* @wep, i32 0, i32 0, i32 0
  %153 = getelementptr [29 x i32], [29 x i32]* @PTW_DEFAULTBF, i32 0, i32 0
  %154 = call i32 @PTW_computeKey(%struct.PTW_attackstate* %133, i8* %152, i32 5, i32 1000, i32* %153, [256 x i32]* %4, i32 %151)
  %155 = icmp eq i32 %154, 1
  br i1 %155, label %183, label %156

; <label>:156:                                    ; preds = %149
  %157 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %0, i32 0, i32 16
  %158 = load %struct.PTW_attackstate*, %struct.PTW_attackstate** %157, align 8
  %159 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 12
  %160 = load float, float* %159, align 4
  %161 = fmul float 1.000000e+06, %160
  %162 = fptosi float %161 to i32
  %163 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 39
  %164 = load i32, i32* %163, align 4
  %165 = getelementptr %struct.WEP_data, %struct.WEP_data* @wep, i32 0, i32 0, i32 0
  %166 = getelementptr [29 x i32], [29 x i32]* @PTW_DEFAULTBF, i32 0, i32 0
  %167 = call i32 @PTW_computeKey(%struct.PTW_attackstate* %158, i8* %165, i32 13, i32 %162, i32* %166, [256 x i32]* %4, i32 %164)
  %168 = icmp eq i32 %167, 1
  br i1 %168, label %183, label %169

; <label>:169:                                    ; preds = %156
  %170 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %0, i32 0, i32 16
  %171 = load %struct.PTW_attackstate*, %struct.PTW_attackstate** %170, align 8
  %172 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 12
  %173 = load float, float* %172, align 4
  %174 = fmul float 1.000000e+06, %173
  %175 = fdiv float %174, 1.000000e+01
  %176 = fptosi float %175 to i32
  %177 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 39
  %178 = load i32, i32* %177, align 4
  %179 = getelementptr %struct.WEP_data, %struct.WEP_data* @wep, i32 0, i32 0, i32 0
  %180 = getelementptr [29 x i32], [29 x i32]* @PTW_DEFAULTBF, i32 0, i32 0
  %181 = call i32 @PTW_computeKey(%struct.PTW_attackstate* %171, i8* %179, i32 5, i32 %176, i32* %180, [256 x i32]* %4, i32 %178)
  %182 = icmp eq i32 %181, 1
  %spec.select2 = select i1 %182, i32 5, i32 %.5
  br label %183

; <label>:183:                                    ; preds = %134, %169, %156, %149, %121
  %.11 = phi i32 [ %.5, %121 ], [ %.6, %134 ], [ 5, %149 ], [ %spec.select2, %169 ], [ 13, %156 ]
  %184 = icmp ne i32 %.11, 0
  br i1 %184, label %185, label %188

; <label>:185:                                    ; preds = %183
  %186 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 29
  store i32 100, i32* %186, align 4
  %187 = getelementptr %struct.WEP_data, %struct.WEP_data* @wep, i32 0, i32 0, i32 0
  call void @key_found(i8* %187, i32 %.11, i32 -1)
  br label %188

; <label>:188:                                    ; preds = %183, %1, %185
  %.0 = phi i32 [ 0, %185 ], [ 1, %1 ], [ 1, %183 ]
  ret i32 %.0
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @encrypt_wep(i8*, i32, i8*, i32) #0 {
  %5 = alloca %struct.rc4_key_st, align 4
  call void @RC4_set_key(%struct.rc4_key_st* %5, i32 %3, i8* %2)
  %6 = sext i32 %1 to i64
  call void @RC4(%struct.rc4_key_st* %5, i64 %6, i8* %0, i8* %0)
  ret i32 0
}

declare dso_local void @RC4_set_key(%struct.rc4_key_st*, i32, i8*) #1

declare dso_local void @RC4(%struct.rc4_key_st*, i64, i8*, i8*) #1

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @decrypt_wep(i8*, i32, i8*, i32) #0 {
  %5 = call i32 @encrypt_wep(i8* %0, i32 %1, i8* %2, i32 %3)
  %6 = sub nsw i32 %1, 4
  %7 = call i32 @check_crc_buf(i8* %0, i32 %6)
  ret i32 %7
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @check_crc_buf(i8*, i32) #0 {
  %3 = call i64 @calc_crc(i8* %0, i32 %1)
  %4 = sext i32 %1 to i64
  %5 = getelementptr inbounds i8, i8* %0, i64 %4
  %6 = and i64 %3, 255
  %7 = getelementptr inbounds i8, i8* %5, i64 0
  %8 = load i8, i8* %7, align 1
  %9 = zext i8 %8 to i64
  %10 = icmp eq i64 %6, %9
  br i1 %10, label %11, label %32

; <label>:11:                                     ; preds = %2
  %12 = lshr i64 %3, 8
  %13 = and i64 %12, 255
  %14 = getelementptr inbounds i8, i8* %5, i64 1
  %15 = load i8, i8* %14, align 1
  %16 = zext i8 %15 to i64
  %17 = icmp eq i64 %13, %16
  br i1 %17, label %18, label %32

; <label>:18:                                     ; preds = %11
  %19 = lshr i64 %3, 16
  %20 = and i64 %19, 255
  %21 = getelementptr inbounds i8, i8* %5, i64 2
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i64
  %24 = icmp eq i64 %20, %23
  br i1 %24, label %25, label %32

; <label>:25:                                     ; preds = %18
  %26 = lshr i64 %3, 24
  %27 = and i64 %26, 255
  %28 = getelementptr inbounds i8, i8* %5, i64 3
  %29 = load i8, i8* %28, align 1
  %30 = zext i8 %29 to i64
  %31 = icmp eq i64 %27, %30
  br label %32

; <label>:32:                                     ; preds = %25, %18, %11, %2
  %33 = phi i1 [ false, %18 ], [ false, %11 ], [ false, %2 ], [ %31, %25 ]
  %34 = zext i1 %33 to i32
  ret i32 %34
}

; Function Attrs: noinline nounwind uwtable
define dso_local i64 @calc_crc(i8*, i32) #0 {
  %3 = icmp sgt i32 %1, 0
  br i1 %3, label %.lr.ph.preheader, label %._crit_edge

.lr.ph.preheader:                                 ; preds = %2
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %.lr.ph
  %.05 = phi i8* [ %13, %.lr.ph ], [ %0, %.lr.ph.preheader ]
  %.014 = phi i32 [ %12, %.lr.ph ], [ %1, %.lr.ph.preheader ]
  %.023 = phi i64 [ %11, %.lr.ph ], [ 4294967295, %.lr.ph.preheader ]
  %4 = load i8, i8* %.05, align 1
  %5 = zext i8 %4 to i64
  %6 = xor i64 %.023, %5
  %7 = and i64 %6, 255
  %8 = getelementptr inbounds [256 x i64], [256 x i64]* @crc_tbl, i64 0, i64 %7
  %9 = load i64, i64* %8, align 8
  %10 = lshr i64 %.023, 8
  %11 = xor i64 %9, %10
  %12 = add nsw i32 %.014, -1
  %13 = getelementptr inbounds i8, i8* %.05, i32 1
  %14 = icmp sgt i32 %12, 0
  br i1 %14, label %.lr.ph, label %._crit_edge.loopexit

._crit_edge.loopexit:                             ; preds = %.lr.ph
  %.02.lcssa.ph = phi i64 [ %11, %.lr.ph ]
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %2
  %.02.lcssa = phi i64 [ 4294967295, %2 ], [ %.02.lcssa.ph, %._crit_edge.loopexit ]
  %15 = xor i64 %.02.lcssa, -1
  ret i64 %15
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @rc4_setup(%struct.rc4_key_st*, i8*, i32) #0 {
  %4 = getelementptr inbounds %struct.rc4_key_st, %struct.rc4_key_st* %0, i32 0, i32 0
  store i32 0, i32* %4, align 4
  %5 = getelementptr inbounds %struct.rc4_key_st, %struct.rc4_key_st* %0, i32 0, i32 1
  store i32 0, i32* %5, align 4
  %6 = getelementptr inbounds %struct.rc4_key_st, %struct.rc4_key_st* %0, i32 0, i32 2
  %7 = getelementptr inbounds [256 x i32], [256 x i32]* %6, i32 0, i32 0
  %scevgep3 = getelementptr %struct.rc4_key_st, %struct.rc4_key_st* %0, i64 0, i32 2, i64 0
  br label %8

; <label>:8:                                      ; preds = %3, %8
  %indvars.iv8 = phi i64 [ 0, %3 ], [ %indvars.iv.next9, %8 ]
  %scevgep4 = getelementptr i32, i32* %scevgep3, i64 %indvars.iv8
  %tmp = trunc i64 %indvars.iv8 to i32
  store i32 %tmp, i32* %scevgep4, align 4
  %indvars.iv.next9 = add nuw nsw i64 %indvars.iv8, 1
  %exitcond10 = icmp ne i64 %indvars.iv.next9, 256
  br i1 %exitcond10, label %8, label %.preheader.preheader

.preheader.preheader:                             ; preds = %8
  %indvars.iv.ph = phi i64 [ 0, %8 ]
  %.06.ph = phi i32 [ 0, %8 ]
  %.015.ph = phi i32 [ 0, %8 ]
  %scevgep = getelementptr %struct.rc4_key_st, %struct.rc4_key_st* %0, i64 0, i32 2, i64 0
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %.preheader
  %indvars.iv = phi i64 [ %indvars.iv.next, %.preheader ], [ %indvars.iv.ph, %.preheader.preheader ]
  %.06 = phi i32 [ %spec.select, %.preheader ], [ %.06.ph, %.preheader.preheader ]
  %.015 = phi i32 [ %17, %.preheader ], [ %.015.ph, %.preheader.preheader ]
  %scevgep1 = getelementptr i32, i32* %scevgep, i64 %indvars.iv
  %9 = load i32, i32* %scevgep1, align 4
  %10 = add nsw i32 %.015, %9
  %11 = sext i32 %.06 to i64
  %12 = getelementptr inbounds i8, i8* %1, i64 %11
  %13 = load i8, i8* %12, align 1
  %14 = zext i8 %13 to i32
  %15 = add nsw i32 %10, %14
  %16 = trunc i32 %15 to i8
  %17 = zext i8 %16 to i32
  %18 = sext i32 %17 to i64
  %19 = getelementptr inbounds i32, i32* %7, i64 %18
  %20 = load i32, i32* %19, align 4
  %scevgep2 = getelementptr i32, i32* %scevgep, i64 %indvars.iv
  store i32 %20, i32* %scevgep2, align 4
  %21 = sext i32 %17 to i64
  %22 = getelementptr inbounds i32, i32* %7, i64 %21
  store i32 %9, i32* %22, align 4
  %23 = add nsw i32 %.06, 1
  %24 = icmp sge i32 %23, %2
  %spec.select = select i1 %24, i32 0, i32 %23
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp ne i64 %indvars.iv.next, 256
  br i1 %exitcond, label %.preheader, label %25

; <label>:25:                                     ; preds = %.preheader
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @rc4_crypt(%struct.rc4_key_st*, i8*, i32) #0 {
  %4 = getelementptr inbounds %struct.rc4_key_st, %struct.rc4_key_st* %0, i32 0, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %struct.rc4_key_st, %struct.rc4_key_st* %0, i32 0, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = getelementptr inbounds %struct.rc4_key_st, %struct.rc4_key_st* %0, i32 0, i32 2
  %9 = getelementptr inbounds [256 x i32], [256 x i32]* %8, i32 0, i32 0
  %10 = icmp slt i32 0, %2
  br i1 %10, label %.lr.ph, label %._crit_edge

.lr.ph:                                           ; preds = %3
  %11 = zext i32 %2 to i64
  br label %12

; <label>:12:                                     ; preds = %.lr.ph, %12
  %indvars.iv = phi i64 [ 0, %.lr.ph ], [ %indvars.iv.next, %12 ]
  %.05 = phi i32 [ %7, %.lr.ph ], [ %21, %12 ]
  %.014 = phi i32 [ %5, %.lr.ph ], [ %15, %12 ]
  %13 = add nsw i32 %.014, 1
  %14 = trunc i32 %13 to i8
  %15 = zext i8 %14 to i32
  %16 = sext i32 %15 to i64
  %17 = getelementptr inbounds i32, i32* %9, i64 %16
  %18 = load i32, i32* %17, align 4
  %19 = add nsw i32 %.05, %18
  %20 = trunc i32 %19 to i8
  %21 = zext i8 %20 to i32
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds i32, i32* %9, i64 %22
  %24 = load i32, i32* %23, align 4
  %25 = sext i32 %15 to i64
  %26 = getelementptr inbounds i32, i32* %9, i64 %25
  store i32 %24, i32* %26, align 4
  %27 = sext i32 %21 to i64
  %28 = getelementptr inbounds i32, i32* %9, i64 %27
  store i32 %18, i32* %28, align 4
  %29 = add nsw i32 %18, %24
  %30 = trunc i32 %29 to i8
  %31 = zext i8 %30 to i64
  %32 = getelementptr inbounds i32, i32* %9, i64 %31
  %33 = load i32, i32* %32, align 4
  %scevgep = getelementptr i8, i8* %1, i64 %indvars.iv
  %34 = load i8, i8* %scevgep, align 1
  %35 = zext i8 %34 to i32
  %36 = xor i32 %35, %33
  %37 = trunc i32 %36 to i8
  store i8 %37, i8* %scevgep, align 1
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond1 = icmp ne i64 %11, %indvars.iv.next
  br i1 %exitcond1, label %12, label %._crit_edge.loopexit

._crit_edge.loopexit:                             ; preds = %12
  %.01.lcssa.ph = phi i32 [ %15, %12 ]
  %.0.lcssa.ph = phi i32 [ %21, %12 ]
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %3
  %.01.lcssa = phi i32 [ %5, %3 ], [ %.01.lcssa.ph, %._crit_edge.loopexit ]
  %.0.lcssa = phi i32 [ %7, %3 ], [ %.0.lcssa.ph, %._crit_edge.loopexit ]
  %38 = getelementptr inbounds %struct.rc4_key_st, %struct.rc4_key_st* %0, i32 0, i32 0
  store i32 %.01.lcssa, i32* %38, align 4
  %39 = getelementptr inbounds %struct.rc4_key_st, %struct.rc4_key_st* %0, i32 0, i32 1
  store i32 %.0.lcssa, i32* %39, align 4
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @calc_pmk(i8*, i8*, i8*) #0 {
  %4 = alloca [65 x i8], align 16, !track !227
  %5 = alloca [37 x i8], align 16, !track !228
  %6 = alloca %struct.SHAstate_st, align 4, !track !229
  %7 = alloca %struct.SHAstate_st, align 4, !track !230
  %8 = alloca %struct.SHAstate_st, align 4, !track !231
  %9 = getelementptr inbounds [37 x i8], [37 x i8]* %5, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* align 16 %9, i8 0, i64 37, i1 false)
  %10 = getelementptr inbounds [37 x i8], [37 x i8]* %5, i32 0, i32 0
  %11 = call i64 @strlen(i8* %1) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %10, i8* align 1 %1, i64 %11, i1 false), !track !232
  %12 = getelementptr inbounds [37 x i8], [37 x i8]* %5, i32 0, i32 0
  %13 = call i64 @strlen(i8* %12) #10
  %14 = getelementptr inbounds [65 x i8], [65 x i8]* %4, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* align 16 %14, i8 0, i64 65, i1 false)
  %15 = getelementptr inbounds [65 x i8], [65 x i8]* %4, i32 0, i32 0
  %16 = call i8* @strncpy(i8* %15, i8* %0, i64 64) #9, !track !233
  br label %17

; <label>:17:                                     ; preds = %3, %17
  %indvars.iv17 = phi i64 [ 0, %3 ], [ %indvars.iv.next18, %17 ]
  call void @unroll_loop(i32 148)
  %scevgep6 = getelementptr [65 x i8], [65 x i8]* %4, i64 0, i64 %indvars.iv17
  %18 = load i8, i8* %scevgep6, align 1
  %19 = zext i8 %18 to i32
  %20 = xor i32 %19, 54
  %21 = trunc i32 %20 to i8
  store i8 %21, i8* %scevgep6, align 1
  %indvars.iv.next18 = add nuw nsw i64 %indvars.iv17, 1
  %exitcond19 = icmp ne i64 %indvars.iv.next18, 64
  br i1 %exitcond19, label %17, label %22

; <label>:22:                                     ; preds = %17
  %23 = call i32 @SHA1_Init(%struct.SHAstate_st* %6)
  %24 = getelementptr inbounds [65 x i8], [65 x i8]* %4, i32 0, i32 0
  %25 = call i32 @SHA1_Update(%struct.SHAstate_st* %6, i8* %24, i64 64)
  br label %26

; <label>:26:                                     ; preds = %22, %26
  %indvars.iv13 = phi i64 [ 0, %22 ], [ %indvars.iv.next14, %26 ]
  call void @unroll_loop(i32 149)
  %scevgep5 = getelementptr [65 x i8], [65 x i8]* %4, i64 0, i64 %indvars.iv13
  %27 = load i8, i8* %scevgep5, align 1
  %28 = zext i8 %27 to i32
  %29 = xor i32 %28, 106
  %30 = trunc i32 %29 to i8
  store i8 %30, i8* %scevgep5, align 1
  %indvars.iv.next14 = add nuw nsw i64 %indvars.iv13, 1
  %exitcond15 = icmp ne i64 %indvars.iv.next14, 64
  br i1 %exitcond15, label %26, label %31

; <label>:31:                                     ; preds = %26
  %32 = add i64 %13, 4
  %33 = trunc i64 %32 to i32
  %34 = call i32 @SHA1_Init(%struct.SHAstate_st* %7)
  %35 = getelementptr inbounds [65 x i8], [65 x i8]* %4, i32 0, i32 0
  %36 = call i32 @SHA1_Update(%struct.SHAstate_st* %7, i8* %35, i64 64)
  %37 = sub nsw i32 %33, 1
  %38 = sext i32 %37 to i64
  %39 = getelementptr inbounds [37 x i8], [37 x i8]* %5, i64 0, i64 %38
  store i8 1, i8* %39, align 1
  %40 = call %struct.env_md_st* @EVP_sha1()
  %41 = call i64 @strlen(i8* %0) #10
  %42 = trunc i64 %41 to i32
  %43 = getelementptr inbounds [37 x i8], [37 x i8]* %5, i32 0, i32 0
  %44 = sext i32 %33 to i64
  %45 = call i8* @HMAC(%struct.env_md_st* %40, i8* %0, i32 %42, i8* %43, i64 %44, i8* %2, i32* null)
  %46 = getelementptr inbounds [65 x i8], [65 x i8]* %4, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %46, i8* align 1 %2, i64 20, i1 false), !track !234
  %47 = bitcast %struct.SHAstate_st* %8 to i8*
  %48 = bitcast %struct.SHAstate_st* %6 to i8*
  %49 = getelementptr inbounds [65 x i8], [65 x i8]* %4, i32 0, i32 0
  %50 = getelementptr inbounds [65 x i8], [65 x i8]* %4, i32 0, i32 0
  %51 = bitcast %struct.SHAstate_st* %8 to i8*
  %52 = bitcast %struct.SHAstate_st* %7 to i8*
  %53 = getelementptr inbounds [65 x i8], [65 x i8]* %4, i32 0, i32 0
  %54 = getelementptr inbounds [65 x i8], [65 x i8]* %4, i32 0, i32 0
  br label %55

; <label>:55:                                     ; preds = %31, %67
  %.210 = phi i32 [ 1, %31 ], [ %68, %67 ]
  call void @unroll_loop(i32 150)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %47, i8* align 4 %48, i64 96, i1 false), !track !235
  %56 = call i32 @SHA1_Update(%struct.SHAstate_st* %8, i8* %49, i64 20)
  %57 = call i32 @SHA1_Final(i8* %50, %struct.SHAstate_st* %8)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %51, i8* align 4 %52, i64 96, i1 false), !track !236
  %58 = call i32 @SHA1_Update(%struct.SHAstate_st* %8, i8* %53, i64 20)
  %59 = call i32 @SHA1_Final(i8* %54, %struct.SHAstate_st* %8)
  br label %60

; <label>:60:                                     ; preds = %55, %60
  %indvars.iv7 = phi i64 [ 0, %55 ], [ %indvars.iv.next8, %60 ]
  call void @unroll_loop(i32 151)
  %scevgep3 = getelementptr [65 x i8], [65 x i8]* %4, i64 0, i64 %indvars.iv7
  %61 = load i8, i8* %scevgep3, align 1
  %62 = zext i8 %61 to i32
  %scevgep4 = getelementptr i8, i8* %2, i64 %indvars.iv7
  %63 = load i8, i8* %scevgep4, align 1
  %64 = zext i8 %63 to i32
  %65 = xor i32 %64, %62
  %66 = trunc i32 %65 to i8
  store i8 %66, i8* %scevgep4, align 1
  %indvars.iv.next8 = add nuw nsw i64 %indvars.iv7, 1
  %exitcond9 = icmp ne i64 %indvars.iv.next8, 20
  br i1 %exitcond9, label %60, label %67

; <label>:67:                                     ; preds = %60
  %68 = add nuw nsw i32 %.210, 1
  %exitcond11 = icmp ne i32 %68, 4096
  br i1 %exitcond11, label %55, label %69

; <label>:69:                                     ; preds = %67
  %70 = sub nsw i32 %33, 1
  %71 = sext i32 %70 to i64
  %72 = getelementptr inbounds [37 x i8], [37 x i8]* %5, i64 0, i64 %71
  store i8 2, i8* %72, align 1
  %73 = call %struct.env_md_st* @EVP_sha1()
  %74 = call i64 @strlen(i8* %0) #10
  %75 = trunc i64 %74 to i32
  %76 = getelementptr inbounds [37 x i8], [37 x i8]* %5, i32 0, i32 0
  %77 = sext i32 %33 to i64
  %78 = getelementptr inbounds i8, i8* %2, i64 20
  %79 = call i8* @HMAC(%struct.env_md_st* %73, i8* %0, i32 %75, i8* %76, i64 %77, i8* %78, i32* null)
  %80 = getelementptr inbounds [65 x i8], [65 x i8]* %4, i32 0, i32 0
  %81 = getelementptr inbounds i8, i8* %2, i64 20
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %80, i8* align 1 %81, i64 20, i1 false), !track !237
  %82 = bitcast %struct.SHAstate_st* %8 to i8*
  %83 = bitcast %struct.SHAstate_st* %6 to i8*
  %84 = getelementptr inbounds [65 x i8], [65 x i8]* %4, i32 0, i32 0
  %85 = getelementptr inbounds [65 x i8], [65 x i8]* %4, i32 0, i32 0
  %86 = bitcast %struct.SHAstate_st* %8 to i8*
  %87 = bitcast %struct.SHAstate_st* %7 to i8*
  %88 = getelementptr inbounds [65 x i8], [65 x i8]* %4, i32 0, i32 0
  %89 = getelementptr inbounds [65 x i8], [65 x i8]* %4, i32 0, i32 0
  %scevgep1 = getelementptr i8, i8* %2, i64 20
  br label %90

; <label>:90:                                     ; preds = %69, %102
  %.34 = phi i32 [ 1, %69 ], [ %103, %102 ]
  call void @unroll_loop(i32 152)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %82, i8* align 4 %83, i64 96, i1 false), !track !238
  %91 = call i32 @SHA1_Update(%struct.SHAstate_st* %8, i8* %84, i64 20)
  %92 = call i32 @SHA1_Final(i8* %85, %struct.SHAstate_st* %8)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %86, i8* align 4 %87, i64 96, i1 false), !track !239
  %93 = call i32 @SHA1_Update(%struct.SHAstate_st* %8, i8* %88, i64 20)
  %94 = call i32 @SHA1_Final(i8* %89, %struct.SHAstate_st* %8)
  br label %95

; <label>:95:                                     ; preds = %90, %95
  %indvars.iv = phi i64 [ 0, %90 ], [ %indvars.iv.next, %95 ]
  call void @unroll_loop(i32 153)
  %scevgep = getelementptr [65 x i8], [65 x i8]* %4, i64 0, i64 %indvars.iv
  %96 = load i8, i8* %scevgep, align 1
  %97 = zext i8 %96 to i32
  %scevgep2 = getelementptr i8, i8* %scevgep1, i64 %indvars.iv
  %98 = load i8, i8* %scevgep2, align 1
  %99 = zext i8 %98 to i32
  %100 = xor i32 %99, %97
  %101 = trunc i32 %100 to i8
  store i8 %101, i8* %scevgep2, align 1
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp ne i64 %indvars.iv.next, 20
  br i1 %exitcond, label %95, label %102

; <label>:102:                                    ; preds = %95
  %103 = add nuw nsw i32 %.34, 1
  %exitcond5 = icmp ne i32 %103, 4096
  br i1 %exitcond5, label %90, label %104

; <label>:104:                                    ; preds = %102
  ret void
}

declare dso_local i32 @SHA1_Init(%struct.SHAstate_st*) #1

declare dso_local i32 @SHA1_Update(%struct.SHAstate_st*, i8*, i64) #1

declare dso_local i32 @SHA1_Final(i8*, %struct.SHAstate_st*) #1

; Function Attrs: noinline nounwind uwtable
define dso_local void @calc_mic(%struct.AP_info*, i8*, i8*, i8*) #0 {
  %5 = alloca [100 x i8], align 16
  %6 = alloca %struct.hmac_ctx_st, align 8
  %7 = getelementptr inbounds [100 x i8], [100 x i8]* %5, i32 0, i32 0
  %8 = getelementptr [23 x i8], [23 x i8]* @.str.159, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %7, i8* align 1 %8, i64 23, i1 false)
  %9 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %0, i32 0, i32 14
  %10 = getelementptr inbounds %struct.WPA_hdsk, %struct.WPA_hdsk* %9, i32 0, i32 0
  %11 = getelementptr inbounds [6 x i8], [6 x i8]* %10, i32 0, i32 0
  %12 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %0, i32 0, i32 1
  %13 = getelementptr inbounds [6 x i8], [6 x i8]* %12, i32 0, i32 0
  %14 = call i32 @memcmp(i8* %11, i8* %13, i64 6) #10
  %15 = icmp slt i32 %14, 0
  %16 = getelementptr inbounds [100 x i8], [100 x i8]* %5, i32 0, i32 0
  %17 = getelementptr inbounds i8, i8* %16, i64 23
  br i1 %15, label %18, label %26

; <label>:18:                                     ; preds = %4
  %19 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %0, i32 0, i32 14
  %20 = getelementptr inbounds %struct.WPA_hdsk, %struct.WPA_hdsk* %19, i32 0, i32 0
  %21 = getelementptr inbounds [6 x i8], [6 x i8]* %20, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %17, i8* align 8 %21, i64 6, i1 false)
  %22 = getelementptr inbounds [100 x i8], [100 x i8]* %5, i32 0, i32 0
  %23 = getelementptr inbounds i8, i8* %22, i64 29
  %24 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %0, i32 0, i32 1
  %25 = getelementptr inbounds [6 x i8], [6 x i8]* %24, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %23, i8* align 8 %25, i64 6, i1 false)
  br label %34

; <label>:26:                                     ; preds = %4
  %27 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %0, i32 0, i32 1
  %28 = getelementptr inbounds [6 x i8], [6 x i8]* %27, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %17, i8* align 8 %28, i64 6, i1 false)
  %29 = getelementptr inbounds [100 x i8], [100 x i8]* %5, i32 0, i32 0
  %30 = getelementptr inbounds i8, i8* %29, i64 29
  %31 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %0, i32 0, i32 14
  %32 = getelementptr inbounds %struct.WPA_hdsk, %struct.WPA_hdsk* %31, i32 0, i32 0
  %33 = getelementptr inbounds [6 x i8], [6 x i8]* %32, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %30, i8* align 8 %33, i64 6, i1 false)
  br label %34

; <label>:34:                                     ; preds = %26, %18
  %35 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %0, i32 0, i32 14
  %36 = getelementptr inbounds %struct.WPA_hdsk, %struct.WPA_hdsk* %35, i32 0, i32 1
  %37 = getelementptr inbounds [32 x i8], [32 x i8]* %36, i32 0, i32 0
  %38 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %0, i32 0, i32 14
  %39 = getelementptr inbounds %struct.WPA_hdsk, %struct.WPA_hdsk* %38, i32 0, i32 2
  %40 = getelementptr inbounds [32 x i8], [32 x i8]* %39, i32 0, i32 0
  %41 = call i32 @memcmp(i8* %37, i8* %40, i64 32) #10
  %42 = icmp slt i32 %41, 0
  %43 = getelementptr inbounds [100 x i8], [100 x i8]* %5, i32 0, i32 0
  %44 = getelementptr inbounds i8, i8* %43, i64 35
  %45 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %0, i32 0, i32 14
  br i1 %42, label %46, label %54

; <label>:46:                                     ; preds = %34
  %47 = getelementptr inbounds %struct.WPA_hdsk, %struct.WPA_hdsk* %45, i32 0, i32 1
  %48 = getelementptr inbounds [32 x i8], [32 x i8]* %47, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %44, i8* align 2 %48, i64 32, i1 false)
  %49 = getelementptr inbounds [100 x i8], [100 x i8]* %5, i32 0, i32 0
  %50 = getelementptr inbounds i8, i8* %49, i64 67
  %51 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %0, i32 0, i32 14
  %52 = getelementptr inbounds %struct.WPA_hdsk, %struct.WPA_hdsk* %51, i32 0, i32 2
  %53 = getelementptr inbounds [32 x i8], [32 x i8]* %52, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %50, i8* align 2 %53, i64 32, i1 false)
  br label %62

; <label>:54:                                     ; preds = %34
  %55 = getelementptr inbounds %struct.WPA_hdsk, %struct.WPA_hdsk* %45, i32 0, i32 2
  %56 = getelementptr inbounds [32 x i8], [32 x i8]* %55, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %44, i8* align 2 %56, i64 32, i1 false)
  %57 = getelementptr inbounds [100 x i8], [100 x i8]* %5, i32 0, i32 0
  %58 = getelementptr inbounds i8, i8* %57, i64 67
  %59 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %0, i32 0, i32 14
  %60 = getelementptr inbounds %struct.WPA_hdsk, %struct.WPA_hdsk* %59, i32 0, i32 1
  %61 = getelementptr inbounds [32 x i8], [32 x i8]* %60, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %58, i8* align 2 %61, i64 32, i1 false)
  br label %62

; <label>:62:                                     ; preds = %54, %46
  call void @HMAC_CTX_init(%struct.hmac_ctx_st* %6)
  %63 = call %struct.env_md_st* @EVP_sha1()
  %64 = call i32 @HMAC_Init_ex(%struct.hmac_ctx_st* %6, i8* %1, i32 32, %struct.env_md_st* %63, %struct.engine_st* null)
  %65 = getelementptr inbounds [100 x i8], [100 x i8]* %5, i64 0, i64 99
  %66 = getelementptr inbounds [100 x i8], [100 x i8]* %5, i32 0, i32 0
  br label %67

; <label>:67:                                     ; preds = %62, %67
  %lsr.iv = phi i8* [ %2, %62 ], [ %scevgep, %67 ]
  %indvars.iv = phi i64 [ 0, %62 ], [ %indvars.iv.next, %67 ]
  %tmp = trunc i64 %indvars.iv to i8
  store i8 %tmp, i8* %65, align 1
  %68 = call i32 @HMAC_Init_ex(%struct.hmac_ctx_st* %6, i8* null, i32 0, %struct.env_md_st* null, %struct.engine_st* null)
  %69 = call i32 @HMAC_Update(%struct.hmac_ctx_st* %6, i8* %66, i64 100)
  %70 = call i32 @HMAC_Final(%struct.hmac_ctx_st* %6, i8* %lsr.iv, i32* null)
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %scevgep = getelementptr i8, i8* %lsr.iv, i64 20
  %exitcond = icmp ne i64 %indvars.iv.next, 4
  br i1 %exitcond, label %67, label %71

; <label>:71:                                     ; preds = %67
  call void @HMAC_CTX_cleanup(%struct.hmac_ctx_st* %6)
  %72 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %0, i32 0, i32 14
  %73 = getelementptr inbounds %struct.WPA_hdsk, %struct.WPA_hdsk* %72, i32 0, i32 6
  %74 = load i32, i32* %73, align 4
  %75 = icmp eq i32 %74, 1
  br i1 %75, label %76, label %86

; <label>:76:                                     ; preds = %71
  %77 = call %struct.env_md_st* @EVP_md5()
  %78 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %0, i32 0, i32 14
  %79 = getelementptr inbounds %struct.WPA_hdsk, %struct.WPA_hdsk* %78, i32 0, i32 4
  %80 = getelementptr inbounds [256 x i8], [256 x i8]* %79, i32 0, i32 0
  %81 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %0, i32 0, i32 14
  %82 = getelementptr inbounds %struct.WPA_hdsk, %struct.WPA_hdsk* %81, i32 0, i32 5
  %83 = load i32, i32* %82, align 8
  %84 = sext i32 %83 to i64
  %85 = call i8* @HMAC(%struct.env_md_st* %77, i8* %2, i32 16, i8* %80, i64 %84, i8* %3, i32* null)
  br label %96

; <label>:86:                                     ; preds = %71
  %87 = call %struct.env_md_st* @EVP_sha1()
  %88 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %0, i32 0, i32 14
  %89 = getelementptr inbounds %struct.WPA_hdsk, %struct.WPA_hdsk* %88, i32 0, i32 4
  %90 = getelementptr inbounds [256 x i8], [256 x i8]* %89, i32 0, i32 0
  %91 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %0, i32 0, i32 14
  %92 = getelementptr inbounds %struct.WPA_hdsk, %struct.WPA_hdsk* %91, i32 0, i32 5
  %93 = load i32, i32* %92, align 8
  %94 = sext i32 %93 to i64
  %95 = call i8* @HMAC(%struct.env_md_st* %87, i8* %2, i32 16, i8* %90, i64 %94, i8* %3, i32* null)
  br label %96

; <label>:96:                                     ; preds = %86, %76
  ret void
}

declare dso_local void @HMAC_CTX_init(%struct.hmac_ctx_st*) #1

declare dso_local i32 @HMAC_Init_ex(%struct.hmac_ctx_st*, i8*, i32, %struct.env_md_st*, %struct.engine_st*) #1

declare dso_local i32 @HMAC_Update(%struct.hmac_ctx_st*, i8*, i64) #1

declare dso_local i32 @HMAC_Final(%struct.hmac_ctx_st*, i8*, i32*) #1

declare dso_local void @HMAC_CTX_cleanup(%struct.hmac_ctx_st*) #1

; Function Attrs: noinline nounwind uwtable
define dso_local i64 @calc_crc_plain(i8*, i32) #0 {
  %3 = icmp sgt i32 %1, 0
  br i1 %3, label %.lr.ph.preheader, label %._crit_edge

.lr.ph.preheader:                                 ; preds = %2
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %.lr.ph
  %.05 = phi i8* [ %13, %.lr.ph ], [ %0, %.lr.ph.preheader ]
  %.014 = phi i32 [ %12, %.lr.ph ], [ %1, %.lr.ph.preheader ]
  %.023 = phi i64 [ %11, %.lr.ph ], [ 0, %.lr.ph.preheader ]
  %4 = load i8, i8* %.05, align 1
  %5 = zext i8 %4 to i64
  %6 = xor i64 %.023, %5
  %7 = and i64 %6, 255
  %8 = getelementptr inbounds [256 x i64], [256 x i64]* @crc_tbl, i64 0, i64 %7
  %9 = load i64, i64* %8, align 8
  %10 = lshr i64 %.023, 8
  %11 = xor i64 %9, %10
  %12 = add nsw i32 %.014, -1
  %13 = getelementptr inbounds i8, i8* %.05, i32 1
  %14 = icmp sgt i32 %12, 0
  br i1 %14, label %.lr.ph, label %._crit_edge.loopexit

._crit_edge.loopexit:                             ; preds = %.lr.ph
  %.02.lcssa.ph = phi i64 [ %11, %.lr.ph ]
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %2
  %.02.lcssa = phi i64 [ 0, %2 ], [ %.02.lcssa.ph, %._crit_edge.loopexit ]
  ret i64 %.02.lcssa
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @add_crc32(i8*, i32) #0 {
  %3 = call i64 @calc_crc(i8* %0, i32 %1)
  %4 = and i64 %3, 255
  %5 = trunc i64 %4 to i8
  %6 = sext i32 %1 to i64
  %7 = getelementptr inbounds i8, i8* %0, i64 %6
  store i8 %5, i8* %7, align 1
  %8 = lshr i64 %3, 8
  %9 = and i64 %8, 255
  %10 = trunc i64 %9 to i8
  %11 = add nsw i32 %1, 1
  %12 = sext i32 %11 to i64
  %13 = getelementptr inbounds i8, i8* %0, i64 %12
  store i8 %10, i8* %13, align 1
  %14 = lshr i64 %3, 16
  %15 = and i64 %14, 255
  %16 = trunc i64 %15 to i8
  %17 = add nsw i32 %1, 2
  %18 = sext i32 %17 to i64
  %19 = getelementptr inbounds i8, i8* %0, i64 %18
  store i8 %16, i8* %19, align 1
  %20 = lshr i64 %3, 24
  %21 = and i64 %20, 255
  %22 = trunc i64 %21 to i8
  %23 = add nsw i32 %1, 3
  %24 = sext i32 %23 to i64
  %25 = getelementptr inbounds i8, i8* %0, i64 %24
  store i8 %22, i8* %25, align 1
  ret i32 0
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @add_crc32_plain(i8*, i32) #0 {
  %3 = call i64 @calc_crc_plain(i8* %0, i32 %1)
  %4 = and i64 %3, 255
  %5 = trunc i64 %4 to i8
  %6 = sext i32 %1 to i64
  %7 = getelementptr inbounds i8, i8* %0, i64 %6
  store i8 %5, i8* %7, align 1
  %8 = lshr i64 %3, 8
  %9 = and i64 %8, 255
  %10 = trunc i64 %9 to i8
  %11 = add nsw i32 %1, 1
  %12 = sext i32 %11 to i64
  %13 = getelementptr inbounds i8, i8* %0, i64 %12
  store i8 %10, i8* %13, align 1
  %14 = lshr i64 %3, 16
  %15 = and i64 %14, 255
  %16 = trunc i64 %15 to i8
  %17 = add nsw i32 %1, 2
  %18 = sext i32 %17 to i64
  %19 = getelementptr inbounds i8, i8* %0, i64 %18
  store i8 %16, i8* %19, align 1
  %20 = lshr i64 %3, 24
  %21 = and i64 %20, 255
  %22 = trunc i64 %21 to i8
  %23 = add nsw i32 %1, 3
  %24 = sext i32 %23 to i64
  %25 = getelementptr inbounds i8, i8* %0, i64 %24
  store i8 %22, i8* %25, align 1
  ret i32 0
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @calc_crc_buf(i8*, i32) #0 {
  %3 = call i64 @calc_crc(i8* %0, i32 %1)
  %4 = trunc i64 %3 to i32
  ret i32 %4
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @get_da(i8*) #0 {
  %2 = getelementptr inbounds i8, i8* %0, i64 1
  %3 = load i8, i8* %2, align 1
  %4 = zext i8 %3 to i32
  %5 = and i32 %4, 2
  %6 = icmp ne i32 %5, 0
  %7 = getelementptr inbounds i8, i8* %0, i64 4
  %8 = getelementptr inbounds i8, i8* %7, i64 12
  %.0 = select i1 %6, i8* %7, i8* %8
  ret i8* %.0
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @get_sa(i8*) #8 {
  %2 = getelementptr inbounds i8, i8* %0, i64 1
  %3 = load i8, i8* %2, align 1
  %4 = zext i8 %3 to i32
  %5 = and i32 %4, 2
  %6 = icmp ne i32 %5, 0
  %7 = getelementptr inbounds i8, i8* %0, i64 4
  %8 = getelementptr inbounds i8, i8* %7, i64 12
  %9 = getelementptr inbounds i8, i8* %7, i64 6
  %.0 = select i1 %6, i8* %8, i8* %9
  ret i8* %.0
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @is_ipv6(i8*) #0 {
  %2 = getelementptr i8, i8* %0, i64 4
  %3 = getelementptr [3 x i8], [3 x i8]* @.str.1.160, i32 0, i32 0
  %4 = call i32 @memcmp(i8* %2, i8* %3, i64 2) #10
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %UnifiedReturnBlock, label %6

; <label>:6:                                      ; preds = %1
  %7 = getelementptr i8, i8* %0, i64 16
  %8 = getelementptr [3 x i8], [3 x i8]* @.str.1.160, i32 0, i32 0
  %9 = call i32 @memcmp(i8* %7, i8* %8, i64 2) #10
  %10 = icmp eq i32 %9, 0
  %spec.select = select i1 %10, i32 1, i32 0
  br label %UnifiedReturnBlock

UnifiedReturnBlock:                               ; preds = %1, %6
  %UnifiedRetVal = phi i32 [ %spec.select, %6 ], [ 1, %1 ]
  ret i32 %UnifiedRetVal
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @is_dhcp_discover(i8*, i32) #0 {
  %3 = getelementptr i8, i8* %0, i64 4
  %4 = getelementptr [7 x i8], [7 x i8]* @.str.2.161, i32 0, i32 0
  %5 = call i32 @memcmp(i8* %3, i8* %4, i64 6) #10
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %14, label %7

; <label>:7:                                      ; preds = %2
  %8 = getelementptr i8, i8* %0, i64 16
  %9 = getelementptr [7 x i8], [7 x i8]* @.str.2.161, i32 0, i32 0
  %10 = call i32 @memcmp(i8* %8, i8* %9, i64 6) #10
  %11 = icmp eq i32 %10, 0
  %12 = icmp sge i32 %1, 328
  %or.cond = and i1 %11, %12
  %13 = icmp sle i32 %1, 348
  %or.cond2 = and i1 %or.cond, %13
  br i1 %or.cond2, label %16, label %15

; <label>:14:                                     ; preds = %2
  %.old = icmp sge i32 %1, 328
  %.old1 = icmp sle i32 %1, 348
  %or.cond3 = and i1 %.old, %.old1
  br i1 %or.cond3, label %16, label %15

; <label>:15:                                     ; preds = %14, %7
  br label %16

; <label>:16:                                     ; preds = %7, %14, %15
  %.0 = phi i32 [ 0, %15 ], [ 1, %14 ], [ 1, %7 ]
  ret i32 %.0
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @is_arp(i8*, i32) #0 {
  %3 = icmp ne i8* %0, null
  switch i32 %1, label %4 [
    i32 36, label %5
    i32 54, label %5
  ]

; <label>:4:                                      ; preds = %2
  br label %5

; <label>:5:                                      ; preds = %2, %2, %4
  %.0 = phi i32 [ 0, %4 ], [ 1, %2 ], [ 1, %2 ]
  ret i32 %.0
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @is_qos_arp_tkip(i8*, i32) #0 {
  %3 = getelementptr inbounds i8, i8* %0, i64 1
  %4 = load i8, i8* %3, align 1
  %5 = zext i8 %4 to i32
  %6 = and i32 %5, 3
  %7 = icmp eq i32 %6, 1
  %8 = icmp eq i32 %1, 82
  %or.cond2 = and i1 %7, %8
  br i1 %or.cond2, label %20, label %9

; <label>:9:                                      ; preds = %2
  %10 = getelementptr inbounds i8, i8* %0, i64 1
  %11 = load i8, i8* %10, align 1
  %12 = zext i8 %11 to i32
  %13 = and i32 %12, 3
  %14 = icmp eq i32 %13, 2
  br i1 %14, label %15, label %19

; <label>:15:                                     ; preds = %9
  %16 = icmp eq i32 %1, 82
  %17 = add nsw i32 82, 18
  %18 = icmp eq i32 %1, %17
  %or.cond = or i1 %16, %18
  br i1 %or.cond, label %20, label %19

; <label>:19:                                     ; preds = %15, %9
  br label %20

; <label>:20:                                     ; preds = %2, %15, %19
  %.0 = phi i32 [ 0, %19 ], [ 1, %15 ], [ 1, %2 ]
  ret i32 %.0
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @is_spantree(i8*) #0 {
  %2 = getelementptr i8, i8* %0, i64 4
  %3 = getelementptr [7 x i8], [7 x i8]* @.str.3.162, i32 0, i32 0
  %4 = call i32 @memcmp(i8* %2, i8* %3, i64 6) #10
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %UnifiedReturnBlock, label %6

; <label>:6:                                      ; preds = %1
  %7 = getelementptr i8, i8* %0, i64 16
  %8 = getelementptr [7 x i8], [7 x i8]* @.str.3.162, i32 0, i32 0
  %9 = call i32 @memcmp(i8* %7, i8* %8, i64 6) #10
  %10 = icmp eq i32 %9, 0
  %spec.select = select i1 %10, i32 1, i32 0
  br label %UnifiedReturnBlock

UnifiedReturnBlock:                               ; preds = %1, %6
  %UnifiedRetVal = phi i32 [ %spec.select, %6 ], [ 1, %1 ]
  ret i32 %UnifiedRetVal
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @is_cdp_vtp(i8*) #0 {
  %2 = getelementptr i8, i8* %0, i64 4
  %3 = getelementptr [7 x i8], [7 x i8]* @.str.4.163, i32 0, i32 0
  %4 = call i32 @memcmp(i8* %2, i8* %3, i64 6) #10
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %UnifiedReturnBlock, label %6

; <label>:6:                                      ; preds = %1
  %7 = getelementptr i8, i8* %0, i64 16
  %8 = getelementptr [7 x i8], [7 x i8]* @.str.4.163, i32 0, i32 0
  %9 = call i32 @memcmp(i8* %7, i8* %8, i64 6) #10
  %10 = icmp eq i32 %9, 0
  %spec.select = select i1 %10, i32 1, i32 0
  br label %UnifiedReturnBlock

UnifiedReturnBlock:                               ; preds = %1, %6
  %UnifiedRetVal = phi i32 [ %spec.select, %6 ], [ 1, %1 ]
  ret i32 %UnifiedRetVal
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @known_clear(i8*, i32*, i32*, i8*, i32) #0 {
  %6 = alloca i16, align 2, !track !240
  %7 = call i32 @is_arp(i8* %3, i32 %4)
  %8 = icmp ne i32 %7, 0
  br i1 %8, label %9, label %41

; <label>:9:                                      ; preds = %5
  %10 = sext i32 8 to i64
  %11 = getelementptr [9 x i8], [9 x i8]* @.str.5.166, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %0, i8* align 1 %11, i64 %10, i1 false), !track !241
  %12 = sext i32 8 to i64
  %13 = getelementptr inbounds i8, i8* %0, i64 %12
  %14 = sext i32 6 to i64
  %15 = getelementptr [7 x i8], [7 x i8]* @.str.6.167, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %13, i8* align 1 %15, i64 %14, i1 false), !track !242
  %16 = sext i32 6 to i64
  %17 = getelementptr inbounds i8, i8* %13, i64 %16
  %18 = call i8* @get_da(i8* %3)
  %19 = getelementptr [7 x i8], [7 x i8]* @.str.2.161, i32 0, i32 0
  %20 = call i32 @memcmp(i8* %18, i8* %19, i64 6) #10
  %21 = icmp eq i32 %20, 0
  %22 = sext i32 2 to i64
  br i1 %21, label %23, label %25

; <label>:23:                                     ; preds = %9
  %24 = getelementptr [3 x i8], [3 x i8]* @.str.7.168, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %17, i8* align 1 %24, i64 %22, i1 false), !track !243
  br label %27

; <label>:25:                                     ; preds = %9
  %26 = getelementptr [3 x i8], [3 x i8]* @.str.8.169, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %17, i8* align 1 %26, i64 %22, i1 false), !track !244
  br label %27

; <label>:27:                                     ; preds = %25, %23
  %28 = sext i32 2 to i64
  %29 = getelementptr inbounds i8, i8* %17, i64 %28
  %30 = call i8* @get_sa(i8* %3)
  %31 = sext i32 6 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %29, i8* align 1 %30, i64 %31, i1 false), !track !245
  %32 = sext i32 6 to i64
  %33 = getelementptr inbounds i8, i8* %29, i64 %32
  %34 = ptrtoint i8* %33 to i64
  %35 = ptrtoint i8* %0 to i64
  %36 = sub i64 %34, %35
  %37 = trunc i64 %36 to i32
  store i32 %37, i32* %1, align 4
  %38 = icmp ne i32* %2, null
  br i1 %38, label %39, label %113

; <label>:39:                                     ; preds = %27
  %40 = getelementptr inbounds i32, i32* %2, i64 0
  store i32 256, i32* %40, align 4
  br label %113

; <label>:41:                                     ; preds = %5
  %42 = call i32 @is_spantree(i8* %3)
  %43 = icmp ne i32 %42, 0
  br i1 %43, label %44, label %56

; <label>:44:                                     ; preds = %41
  %45 = sext i32 8 to i64
  %46 = getelementptr [9 x i8], [9 x i8]* @.str.9.170, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %0, i8* align 1 %46, i64 %45, i1 false), !track !246
  %47 = sext i32 8 to i64
  %48 = getelementptr inbounds i8, i8* %0, i64 %47
  %49 = ptrtoint i8* %48 to i64
  %50 = ptrtoint i8* %0 to i64
  %51 = sub i64 %49, %50
  %52 = trunc i64 %51 to i32
  store i32 %52, i32* %1, align 4
  %53 = icmp ne i32* %2, null
  br i1 %53, label %54, label %113

; <label>:54:                                     ; preds = %44
  %55 = getelementptr inbounds i32, i32* %2, i64 0
  store i32 256, i32* %55, align 4
  br label %113

; <label>:56:                                     ; preds = %41
  %57 = call i32 @is_cdp_vtp(i8* %3)
  %58 = icmp ne i32 %57, 0
  br i1 %58, label %59, label %71

; <label>:59:                                     ; preds = %56
  %60 = sext i32 7 to i64
  %61 = getelementptr [8 x i8], [8 x i8]* @.str.10.171, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %0, i8* align 1 %61, i64 %60, i1 false), !track !247
  %62 = sext i32 7 to i64
  %63 = getelementptr inbounds i8, i8* %0, i64 %62
  %64 = ptrtoint i8* %63 to i64
  %65 = ptrtoint i8* %0 to i64
  %66 = sub i64 %64, %65
  %67 = trunc i64 %66 to i32
  store i32 %67, i32* %1, align 4
  %68 = icmp ne i32* %2, null
  br i1 %68, label %69, label %113

; <label>:69:                                     ; preds = %59
  %70 = getelementptr inbounds i32, i32* %2, i64 0
  store i32 256, i32* %70, align 4
  br label %113

; <label>:71:                                     ; preds = %56
  %72 = sub nsw i32 %4, 8
  %73 = trunc i32 %72 to i16
  %74 = call zeroext i16 @htons(i16 zeroext %73) #13
  store i16 %74, i16* %6, align 2
  %75 = sext i32 8 to i64
  %76 = getelementptr [9 x i8], [9 x i8]* @.str.11.172, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %0, i8* align 1 %76, i64 %75, i1 false), !track !248
  %77 = sext i32 8 to i64
  %78 = getelementptr inbounds i8, i8* %0, i64 %77
  %79 = sext i32 2 to i64
  %80 = getelementptr [3 x i8], [3 x i8]* @.str.12.173, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %78, i8* align 1 %80, i64 %79, i1 false), !track !249
  %81 = sext i32 2 to i64
  %82 = getelementptr inbounds i8, i8* %78, i64 %81
  %83 = bitcast i16* %6 to i8*
  %84 = sext i32 2 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %82, i8* align 2 %83, i64 %84, i1 false), !track !250
  %85 = sext i32 2 to i64
  %86 = getelementptr inbounds i8, i8* %82, i64 %85
  %87 = icmp ne i32* %2, null
  br i1 %87, label %93, label %88

; <label>:88:                                     ; preds = %71
  %89 = ptrtoint i8* %86 to i64
  %90 = ptrtoint i8* %0 to i64
  %91 = sub i64 %89, %90
  %92 = trunc i64 %91 to i32
  store i32 %92, i32* %1, align 4
  br label %113

; <label>:93:                                     ; preds = %71
  %94 = sext i32 2 to i64
  %95 = getelementptr [3 x i8], [3 x i8]* @.str.13.174, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %86, i8* align 1 %95, i64 %94, i1 false), !track !251
  %96 = sext i32 2 to i64
  %97 = getelementptr inbounds i8, i8* %86, i64 %96
  %98 = sext i32 2 to i64
  %99 = getelementptr [3 x i8], [3 x i8]* @.str.14.175, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %97, i8* align 1 %99, i64 %98, i1 false), !track !252
  %100 = sext i32 2 to i64
  %101 = getelementptr inbounds i8, i8* %97, i64 %100
  %102 = ptrtoint i8* %101 to i64
  %103 = ptrtoint i8* %0 to i64
  %104 = sub i64 %102, %103
  %105 = trunc i64 %104 to i32
  store i32 %105, i32* %1, align 4
  %106 = getelementptr i8, i8* %0, i64 32
  %107 = sext i32 %105 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %106, i8* align 1 %0, i64 %107, i1 false), !track !253
  %108 = getelementptr i8, i8* %0, i64 32
  %109 = getelementptr i8, i8* %108, i64 14
  %110 = getelementptr [3 x i8], [3 x i8]* @.str.13.174, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %109, i8* align 1 %110, i64 2, i1 false), !track !254
  %111 = getelementptr inbounds i32, i32* %2, i64 0
  store i32 220, i32* %111, align 4
  %112 = getelementptr inbounds i32, i32* %2, i64 1
  store i32 36, i32* %112, align 4
  br label %113

; <label>:113:                                    ; preds = %59, %69, %44, %54, %27, %39, %93, %88
  %.0 = phi i32 [ 2, %93 ], [ 1, %88 ], [ 1, %39 ], [ 1, %27 ], [ 1, %54 ], [ 1, %44 ], [ 1, %69 ], [ 1, %59 ]
  ret i32 %.0
}

; Function Attrs: nounwind readnone
declare dso_local zeroext i16 @htons(i16 zeroext) #7

; Function Attrs: noreturn nounwind
declare dso_local void @__assert_fail(i8*, i8*, i32, i8*) #5

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @calc_ptk(%struct.WPA_ST_info*, i8*) #0 {
  %3 = alloca [100 x i8], align 16
  %4 = alloca [20 x i8], align 16
  %5 = getelementptr inbounds [100 x i8], [100 x i8]* %3, i32 0, i32 0
  %6 = getelementptr [23 x i8], [23 x i8]* @.str.159, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %5, i8* align 1 %6, i64 23, i1 false)
  %7 = getelementptr inbounds %struct.WPA_ST_info, %struct.WPA_ST_info* %0, i32 0, i32 1
  %8 = getelementptr inbounds [6 x i8], [6 x i8]* %7, i32 0, i32 0
  %9 = getelementptr inbounds %struct.WPA_ST_info, %struct.WPA_ST_info* %0, i32 0, i32 2
  %10 = getelementptr inbounds [6 x i8], [6 x i8]* %9, i32 0, i32 0
  %11 = call i32 @memcmp(i8* %8, i8* %10, i64 6) #10
  %12 = icmp slt i32 %11, 0
  %13 = getelementptr inbounds [100 x i8], [100 x i8]* %3, i32 0, i32 0
  %14 = getelementptr inbounds i8, i8* %13, i64 23
  br i1 %12, label %15, label %22

; <label>:15:                                     ; preds = %2
  %16 = getelementptr inbounds %struct.WPA_ST_info, %struct.WPA_ST_info* %0, i32 0, i32 1
  %17 = getelementptr inbounds [6 x i8], [6 x i8]* %16, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %14, i8* align 8 %17, i64 6, i1 false)
  %18 = getelementptr inbounds [100 x i8], [100 x i8]* %3, i32 0, i32 0
  %19 = getelementptr inbounds i8, i8* %18, i64 29
  %20 = getelementptr inbounds %struct.WPA_ST_info, %struct.WPA_ST_info* %0, i32 0, i32 2
  %21 = getelementptr inbounds [6 x i8], [6 x i8]* %20, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %19, i8* align 2 %21, i64 6, i1 false)
  br label %29

; <label>:22:                                     ; preds = %2
  %23 = getelementptr inbounds %struct.WPA_ST_info, %struct.WPA_ST_info* %0, i32 0, i32 2
  %24 = getelementptr inbounds [6 x i8], [6 x i8]* %23, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %14, i8* align 2 %24, i64 6, i1 false)
  %25 = getelementptr inbounds [100 x i8], [100 x i8]* %3, i32 0, i32 0
  %26 = getelementptr inbounds i8, i8* %25, i64 29
  %27 = getelementptr inbounds %struct.WPA_ST_info, %struct.WPA_ST_info* %0, i32 0, i32 1
  %28 = getelementptr inbounds [6 x i8], [6 x i8]* %27, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %26, i8* align 8 %28, i64 6, i1 false)
  br label %29

; <label>:29:                                     ; preds = %22, %15
  %30 = getelementptr inbounds %struct.WPA_ST_info, %struct.WPA_ST_info* %0, i32 0, i32 3
  %31 = getelementptr inbounds [32 x i8], [32 x i8]* %30, i32 0, i32 0
  %32 = getelementptr inbounds %struct.WPA_ST_info, %struct.WPA_ST_info* %0, i32 0, i32 4
  %33 = getelementptr inbounds [32 x i8], [32 x i8]* %32, i32 0, i32 0
  %34 = call i32 @memcmp(i8* %31, i8* %33, i64 32) #10
  %35 = icmp slt i32 %34, 0
  %36 = getelementptr inbounds [100 x i8], [100 x i8]* %3, i32 0, i32 0
  %37 = getelementptr inbounds i8, i8* %36, i64 35
  br i1 %35, label %38, label %45

; <label>:38:                                     ; preds = %29
  %39 = getelementptr inbounds %struct.WPA_ST_info, %struct.WPA_ST_info* %0, i32 0, i32 3
  %40 = getelementptr inbounds [32 x i8], [32 x i8]* %39, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %37, i8* align 4 %40, i64 32, i1 false)
  %41 = getelementptr inbounds [100 x i8], [100 x i8]* %3, i32 0, i32 0
  %42 = getelementptr inbounds i8, i8* %41, i64 67
  %43 = getelementptr inbounds %struct.WPA_ST_info, %struct.WPA_ST_info* %0, i32 0, i32 4
  %44 = getelementptr inbounds [32 x i8], [32 x i8]* %43, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %42, i8* align 4 %44, i64 32, i1 false)
  br label %52

; <label>:45:                                     ; preds = %29
  %46 = getelementptr inbounds %struct.WPA_ST_info, %struct.WPA_ST_info* %0, i32 0, i32 4
  %47 = getelementptr inbounds [32 x i8], [32 x i8]* %46, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %37, i8* align 4 %47, i64 32, i1 false)
  %48 = getelementptr inbounds [100 x i8], [100 x i8]* %3, i32 0, i32 0
  %49 = getelementptr inbounds i8, i8* %48, i64 67
  %50 = getelementptr inbounds %struct.WPA_ST_info, %struct.WPA_ST_info* %0, i32 0, i32 3
  %51 = getelementptr inbounds [32 x i8], [32 x i8]* %50, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %49, i8* align 4 %51, i64 32, i1 false)
  br label %52

; <label>:52:                                     ; preds = %45, %38
  %53 = getelementptr inbounds [100 x i8], [100 x i8]* %3, i64 0, i64 99
  %54 = getelementptr inbounds [100 x i8], [100 x i8]* %3, i32 0, i32 0
  %scevgep = getelementptr %struct.WPA_ST_info, %struct.WPA_ST_info* %0, i64 0, i32 7, i64 0
  %scevgep1 = bitcast i8* %scevgep to %struct.WPA_ST_info*
  br label %55

; <label>:55:                                     ; preds = %52, %55
  %lsr.iv = phi %struct.WPA_ST_info* [ %scevgep1, %52 ], [ %58, %55 ]
  %indvars.iv = phi i64 [ 0, %52 ], [ %indvars.iv.next, %55 ]
  %lsr.iv3 = bitcast %struct.WPA_ST_info* %lsr.iv to i8*
  %tmp = trunc i64 %indvars.iv to i8
  store i8 %tmp, i8* %53, align 1
  %56 = call %struct.env_md_st* @EVP_sha1()
  %57 = call i8* @HMAC(%struct.env_md_st* %56, i8* %1, i32 32, i8* %54, i64 100, i8* %lsr.iv3, i32* null)
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %scevgep2 = getelementptr %struct.WPA_ST_info, %struct.WPA_ST_info* %lsr.iv, i64 0, i32 3, i64 0
  %58 = bitcast i8* %scevgep2 to %struct.WPA_ST_info*
  %exitcond = icmp ne i64 %indvars.iv.next, 4
  br i1 %exitcond, label %55, label %59

; <label>:59:                                     ; preds = %55
  %60 = getelementptr inbounds %struct.WPA_ST_info, %struct.WPA_ST_info* %0, i32 0, i32 11
  %61 = load i32, i32* %60, align 8
  %62 = and i32 %61, 7
  %63 = icmp eq i32 %62, 1
  br i1 %63, label %64, label %75

; <label>:64:                                     ; preds = %59
  %65 = call %struct.env_md_st* @EVP_md5()
  %66 = getelementptr inbounds %struct.WPA_ST_info, %struct.WPA_ST_info* %0, i32 0, i32 7
  %67 = getelementptr inbounds [80 x i8], [80 x i8]* %66, i32 0, i32 0
  %68 = getelementptr inbounds %struct.WPA_ST_info, %struct.WPA_ST_info* %0, i32 0, i32 6
  %69 = getelementptr inbounds [256 x i8], [256 x i8]* %68, i32 0, i32 0
  %70 = getelementptr inbounds %struct.WPA_ST_info, %struct.WPA_ST_info* %0, i32 0, i32 8
  %71 = load i32, i32* %70, align 8
  %72 = sext i32 %71 to i64
  %73 = getelementptr inbounds [20 x i8], [20 x i8]* %4, i32 0, i32 0
  %74 = call i8* @HMAC(%struct.env_md_st* %65, i8* %67, i32 16, i8* %69, i64 %72, i8* %73, i32* null)
  br label %86

; <label>:75:                                     ; preds = %59
  %76 = call %struct.env_md_st* @EVP_sha1()
  %77 = getelementptr inbounds %struct.WPA_ST_info, %struct.WPA_ST_info* %0, i32 0, i32 7
  %78 = getelementptr inbounds [80 x i8], [80 x i8]* %77, i32 0, i32 0
  %79 = getelementptr inbounds %struct.WPA_ST_info, %struct.WPA_ST_info* %0, i32 0, i32 6
  %80 = getelementptr inbounds [256 x i8], [256 x i8]* %79, i32 0, i32 0
  %81 = getelementptr inbounds %struct.WPA_ST_info, %struct.WPA_ST_info* %0, i32 0, i32 8
  %82 = load i32, i32* %81, align 8
  %83 = sext i32 %82 to i64
  %84 = getelementptr inbounds [20 x i8], [20 x i8]* %4, i32 0, i32 0
  %85 = call i8* @HMAC(%struct.env_md_st* %76, i8* %78, i32 16, i8* %80, i64 %83, i8* %84, i32* null)
  br label %86

; <label>:86:                                     ; preds = %75, %64
  %87 = getelementptr inbounds [20 x i8], [20 x i8]* %4, i32 0, i32 0
  %88 = getelementptr inbounds %struct.WPA_ST_info, %struct.WPA_ST_info* %0, i32 0, i32 5
  %89 = getelementptr inbounds [20 x i8], [20 x i8]* %88, i32 0, i32 0
  %90 = call i32 @memcmp(i8* %87, i8* %89, i64 16) #10
  %91 = icmp eq i32 %90, 0
  %92 = zext i1 %91 to i32
  ret i32 %92
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @init_michael(%struct.Michael*, i8*) #0 {
  %3 = getelementptr inbounds i8, i8* %1, i64 0
  %4 = load i8, i8* %3, align 1
  %5 = zext i8 %4 to i32
  %6 = shl i32 %5, 0
  %7 = getelementptr inbounds i8, i8* %1, i64 1
  %8 = load i8, i8* %7, align 1
  %9 = zext i8 %8 to i32
  %10 = shl i32 %9, 8
  %11 = or i32 %6, %10
  %12 = getelementptr inbounds i8, i8* %1, i64 2
  %13 = load i8, i8* %12, align 1
  %14 = zext i8 %13 to i32
  %15 = shl i32 %14, 16
  %16 = or i32 %11, %15
  %17 = getelementptr inbounds i8, i8* %1, i64 3
  %18 = load i8, i8* %17, align 1
  %19 = zext i8 %18 to i32
  %20 = shl i32 %19, 24
  %21 = or i32 %16, %20
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds %struct.Michael, %struct.Michael* %0, i32 0, i32 0
  store i64 %22, i64* %23, align 8
  %24 = getelementptr inbounds i8, i8* %1, i64 4
  %25 = load i8, i8* %24, align 1
  %26 = zext i8 %25 to i32
  %27 = shl i32 %26, 0
  %28 = getelementptr inbounds i8, i8* %1, i64 5
  %29 = load i8, i8* %28, align 1
  %30 = zext i8 %29 to i32
  %31 = shl i32 %30, 8
  %32 = or i32 %27, %31
  %33 = getelementptr inbounds i8, i8* %1, i64 6
  %34 = load i8, i8* %33, align 1
  %35 = zext i8 %34 to i32
  %36 = shl i32 %35, 16
  %37 = or i32 %32, %36
  %38 = getelementptr inbounds i8, i8* %1, i64 7
  %39 = load i8, i8* %38, align 1
  %40 = zext i8 %39 to i32
  %41 = shl i32 %40, 24
  %42 = or i32 %37, %41
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds %struct.Michael, %struct.Michael* %0, i32 0, i32 1
  store i64 %43, i64* %44, align 8
  %45 = getelementptr inbounds %struct.Michael, %struct.Michael* %0, i32 0, i32 0
  %46 = load i64, i64* %45, align 8
  %47 = getelementptr inbounds %struct.Michael, %struct.Michael* %0, i32 0, i32 2
  store i64 %46, i64* %47, align 8
  %48 = getelementptr inbounds %struct.Michael, %struct.Michael* %0, i32 0, i32 1
  %49 = load i64, i64* %48, align 8
  %50 = getelementptr inbounds %struct.Michael, %struct.Michael* %0, i32 0, i32 3
  store i64 %49, i64* %50, align 8
  %51 = getelementptr inbounds %struct.Michael, %struct.Michael* %0, i32 0, i32 4
  store i64 0, i64* %51, align 8
  %52 = getelementptr inbounds %struct.Michael, %struct.Michael* %0, i32 0, i32 5
  store i64 0, i64* %52, align 8
  ret i32 0
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @michael_append_byte(%struct.Michael*, i8 zeroext) #0 {
  %3 = zext i8 %1 to i32
  %4 = getelementptr inbounds %struct.Michael, %struct.Michael* %0, i32 0, i32 4
  %5 = load i64, i64* %4, align 8
  %6 = mul i64 8, %5
  %7 = trunc i64 %6 to i32
  %8 = shl i32 %3, %7
  %9 = sext i32 %8 to i64
  %10 = getelementptr inbounds %struct.Michael, %struct.Michael* %0, i32 0, i32 5
  %11 = load i64, i64* %10, align 8
  %12 = or i64 %11, %9
  store i64 %12, i64* %10, align 8
  %13 = getelementptr inbounds %struct.Michael, %struct.Michael* %0, i32 0, i32 4
  %14 = load i64, i64* %13, align 8
  %15 = add i64 %14, 1
  store i64 %15, i64* %13, align 8
  %16 = getelementptr inbounds %struct.Michael, %struct.Michael* %0, i32 0, i32 4
  %17 = load i64, i64* %16, align 8
  %18 = icmp uge i64 %17, 4
  br i1 %18, label %19, label %92

; <label>:19:                                     ; preds = %2
  %20 = getelementptr inbounds %struct.Michael, %struct.Michael* %0, i32 0, i32 5
  %21 = load i64, i64* %20, align 8
  %22 = getelementptr inbounds %struct.Michael, %struct.Michael* %0, i32 0, i32 2
  %23 = load i64, i64* %22, align 8
  %24 = xor i64 %23, %21
  store i64 %24, i64* %22, align 8
  %25 = getelementptr inbounds %struct.Michael, %struct.Michael* %0, i32 0, i32 2
  %26 = load i64, i64* %25, align 8
  %27 = shl i64 %26, 17
  %28 = getelementptr inbounds %struct.Michael, %struct.Michael* %0, i32 0, i32 2
  %29 = load i64, i64* %28, align 8
  %30 = lshr i64 %29, 15
  %31 = and i64 %30, 131071
  %32 = or i64 %27, %31
  %33 = getelementptr inbounds %struct.Michael, %struct.Michael* %0, i32 0, i32 3
  %34 = load i64, i64* %33, align 8
  %35 = xor i64 %34, %32
  store i64 %35, i64* %33, align 8
  %36 = getelementptr inbounds %struct.Michael, %struct.Michael* %0, i32 0, i32 3
  %37 = load i64, i64* %36, align 8
  %38 = getelementptr inbounds %struct.Michael, %struct.Michael* %0, i32 0, i32 2
  %39 = load i64, i64* %38, align 8
  %40 = add i64 %39, %37
  store i64 %40, i64* %38, align 8
  %41 = getelementptr inbounds %struct.Michael, %struct.Michael* %0, i32 0, i32 2
  %42 = load i64, i64* %41, align 8
  %43 = and i64 %42, 4278255360
  %44 = lshr i64 %43, 8
  %45 = getelementptr inbounds %struct.Michael, %struct.Michael* %0, i32 0, i32 2
  %46 = load i64, i64* %45, align 8
  %47 = and i64 %46, 16711935
  %48 = shl i64 %47, 8
  %49 = or i64 %44, %48
  %50 = getelementptr inbounds %struct.Michael, %struct.Michael* %0, i32 0, i32 3
  %51 = load i64, i64* %50, align 8
  %52 = xor i64 %51, %49
  store i64 %52, i64* %50, align 8
  %53 = getelementptr inbounds %struct.Michael, %struct.Michael* %0, i32 0, i32 3
  %54 = load i64, i64* %53, align 8
  %55 = getelementptr inbounds %struct.Michael, %struct.Michael* %0, i32 0, i32 2
  %56 = load i64, i64* %55, align 8
  %57 = add i64 %56, %54
  store i64 %57, i64* %55, align 8
  %58 = getelementptr inbounds %struct.Michael, %struct.Michael* %0, i32 0, i32 2
  %59 = load i64, i64* %58, align 8
  %60 = shl i64 %59, 3
  %61 = getelementptr inbounds %struct.Michael, %struct.Michael* %0, i32 0, i32 2
  %62 = load i64, i64* %61, align 8
  %63 = lshr i64 %62, 29
  %64 = and i64 %63, 7
  %65 = or i64 %60, %64
  %66 = getelementptr inbounds %struct.Michael, %struct.Michael* %0, i32 0, i32 3
  %67 = load i64, i64* %66, align 8
  %68 = xor i64 %67, %65
  store i64 %68, i64* %66, align 8
  %69 = getelementptr inbounds %struct.Michael, %struct.Michael* %0, i32 0, i32 3
  %70 = load i64, i64* %69, align 8
  %71 = getelementptr inbounds %struct.Michael, %struct.Michael* %0, i32 0, i32 2
  %72 = load i64, i64* %71, align 8
  %73 = add i64 %72, %70
  store i64 %73, i64* %71, align 8
  %74 = getelementptr inbounds %struct.Michael, %struct.Michael* %0, i32 0, i32 2
  %75 = load i64, i64* %74, align 8
  %76 = shl i64 %75, 30
  %77 = getelementptr inbounds %struct.Michael, %struct.Michael* %0, i32 0, i32 2
  %78 = load i64, i64* %77, align 8
  %79 = lshr i64 %78, 2
  %80 = and i64 %79, 1073741823
  %81 = or i64 %76, %80
  %82 = getelementptr inbounds %struct.Michael, %struct.Michael* %0, i32 0, i32 3
  %83 = load i64, i64* %82, align 8
  %84 = xor i64 %83, %81
  store i64 %84, i64* %82, align 8
  %85 = getelementptr inbounds %struct.Michael, %struct.Michael* %0, i32 0, i32 3
  %86 = load i64, i64* %85, align 8
  %87 = getelementptr inbounds %struct.Michael, %struct.Michael* %0, i32 0, i32 2
  %88 = load i64, i64* %87, align 8
  %89 = add i64 %88, %86
  store i64 %89, i64* %87, align 8
  %90 = getelementptr inbounds %struct.Michael, %struct.Michael* %0, i32 0, i32 5
  store i64 0, i64* %90, align 8
  %91 = getelementptr inbounds %struct.Michael, %struct.Michael* %0, i32 0, i32 4
  store i64 0, i64* %91, align 8
  br label %92

; <label>:92:                                     ; preds = %19, %2
  ret i32 0
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @michael_remove_byte(%struct.Michael*, i8*) #0 {
  %3 = getelementptr inbounds %struct.Michael, %struct.Michael* %0, i32 0, i32 4
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %6, label %99

; <label>:6:                                      ; preds = %2
  %7 = getelementptr inbounds i8, i8* %1, i64 0
  %8 = load i8, i8* %7, align 1
  %9 = zext i8 %8 to i32
  %10 = shl i32 %9, 0
  %11 = getelementptr inbounds i8, i8* %1, i64 1
  %12 = load i8, i8* %11, align 1
  %13 = zext i8 %12 to i32
  %14 = shl i32 %13, 8
  %15 = or i32 %10, %14
  %16 = getelementptr inbounds i8, i8* %1, i64 2
  %17 = load i8, i8* %16, align 1
  %18 = zext i8 %17 to i32
  %19 = shl i32 %18, 16
  %20 = or i32 %15, %19
  %21 = getelementptr inbounds i8, i8* %1, i64 3
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i32
  %24 = shl i32 %23, 24
  %25 = or i32 %20, %24
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds %struct.Michael, %struct.Michael* %0, i32 0, i32 5
  store i64 %26, i64* %27, align 8
  %28 = getelementptr inbounds %struct.Michael, %struct.Michael* %0, i32 0, i32 4
  store i64 4, i64* %28, align 8
  %29 = getelementptr inbounds %struct.Michael, %struct.Michael* %0, i32 0, i32 3
  %30 = load i64, i64* %29, align 8
  %31 = getelementptr inbounds %struct.Michael, %struct.Michael* %0, i32 0, i32 2
  %32 = load i64, i64* %31, align 8
  %33 = sub i64 %32, %30
  store i64 %33, i64* %31, align 8
  %34 = getelementptr inbounds %struct.Michael, %struct.Michael* %0, i32 0, i32 2
  %35 = load i64, i64* %34, align 8
  %36 = shl i64 %35, 30
  %37 = getelementptr inbounds %struct.Michael, %struct.Michael* %0, i32 0, i32 2
  %38 = load i64, i64* %37, align 8
  %39 = lshr i64 %38, 2
  %40 = and i64 %39, 1073741823
  %41 = or i64 %36, %40
  %42 = getelementptr inbounds %struct.Michael, %struct.Michael* %0, i32 0, i32 3
  %43 = load i64, i64* %42, align 8
  %44 = xor i64 %43, %41
  store i64 %44, i64* %42, align 8
  %45 = getelementptr inbounds %struct.Michael, %struct.Michael* %0, i32 0, i32 3
  %46 = load i64, i64* %45, align 8
  %47 = getelementptr inbounds %struct.Michael, %struct.Michael* %0, i32 0, i32 2
  %48 = load i64, i64* %47, align 8
  %49 = sub i64 %48, %46
  store i64 %49, i64* %47, align 8
  %50 = getelementptr inbounds %struct.Michael, %struct.Michael* %0, i32 0, i32 2
  %51 = load i64, i64* %50, align 8
  %52 = shl i64 %51, 3
  %53 = getelementptr inbounds %struct.Michael, %struct.Michael* %0, i32 0, i32 2
  %54 = load i64, i64* %53, align 8
  %55 = lshr i64 %54, 29
  %56 = and i64 %55, 7
  %57 = or i64 %52, %56
  %58 = getelementptr inbounds %struct.Michael, %struct.Michael* %0, i32 0, i32 3
  %59 = load i64, i64* %58, align 8
  %60 = xor i64 %59, %57
  store i64 %60, i64* %58, align 8
  %61 = getelementptr inbounds %struct.Michael, %struct.Michael* %0, i32 0, i32 3
  %62 = load i64, i64* %61, align 8
  %63 = getelementptr inbounds %struct.Michael, %struct.Michael* %0, i32 0, i32 2
  %64 = load i64, i64* %63, align 8
  %65 = sub i64 %64, %62
  store i64 %65, i64* %63, align 8
  %66 = getelementptr inbounds %struct.Michael, %struct.Michael* %0, i32 0, i32 2
  %67 = load i64, i64* %66, align 8
  %68 = and i64 %67, 4278255360
  %69 = lshr i64 %68, 8
  %70 = getelementptr inbounds %struct.Michael, %struct.Michael* %0, i32 0, i32 2
  %71 = load i64, i64* %70, align 8
  %72 = and i64 %71, 16711935
  %73 = shl i64 %72, 8
  %74 = or i64 %69, %73
  %75 = getelementptr inbounds %struct.Michael, %struct.Michael* %0, i32 0, i32 3
  %76 = load i64, i64* %75, align 8
  %77 = xor i64 %76, %74
  store i64 %77, i64* %75, align 8
  %78 = getelementptr inbounds %struct.Michael, %struct.Michael* %0, i32 0, i32 3
  %79 = load i64, i64* %78, align 8
  %80 = getelementptr inbounds %struct.Michael, %struct.Michael* %0, i32 0, i32 2
  %81 = load i64, i64* %80, align 8
  %82 = sub i64 %81, %79
  store i64 %82, i64* %80, align 8
  %83 = getelementptr inbounds %struct.Michael, %struct.Michael* %0, i32 0, i32 2
  %84 = load i64, i64* %83, align 8
  %85 = shl i64 %84, 17
  %86 = getelementptr inbounds %struct.Michael, %struct.Michael* %0, i32 0, i32 2
  %87 = load i64, i64* %86, align 8
  %88 = lshr i64 %87, 15
  %89 = and i64 %88, 131071
  %90 = or i64 %85, %89
  %91 = getelementptr inbounds %struct.Michael, %struct.Michael* %0, i32 0, i32 3
  %92 = load i64, i64* %91, align 8
  %93 = xor i64 %92, %90
  store i64 %93, i64* %91, align 8
  %94 = getelementptr inbounds %struct.Michael, %struct.Michael* %0, i32 0, i32 5
  %95 = load i64, i64* %94, align 8
  %96 = getelementptr inbounds %struct.Michael, %struct.Michael* %0, i32 0, i32 2
  %97 = load i64, i64* %96, align 8
  %98 = xor i64 %97, %95
  store i64 %98, i64* %96, align 8
  br label %99

; <label>:99:                                     ; preds = %6, %2
  %100 = getelementptr inbounds %struct.Michael, %struct.Michael* %0, i32 0, i32 4
  %101 = load i64, i64* %100, align 8
  %102 = add i64 %101, -1
  store i64 %102, i64* %100, align 8
  %103 = getelementptr inbounds %struct.Michael, %struct.Michael* %0, i32 0, i32 4
  %104 = load i64, i64* %103, align 8
  %105 = mul i64 8, %104
  %106 = trunc i64 %105 to i32
  %107 = shl i32 255, %106
  %108 = xor i32 %107, -1
  %109 = sext i32 %108 to i64
  %110 = getelementptr inbounds %struct.Michael, %struct.Michael* %0, i32 0, i32 5
  %111 = load i64, i64* %110, align 8
  %112 = and i64 %111, %109
  store i64 %112, i64* %110, align 8
  ret i32 0
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @michael_append(%struct.Michael*, i8*, i32) #0 {
  %4 = icmp sgt i32 %2, 0
  br i1 %4, label %.lr.ph.preheader, label %._crit_edge

.lr.ph.preheader:                                 ; preds = %3
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %.lr.ph
  %.03 = phi i32 [ %8, %.lr.ph ], [ %2, %.lr.ph.preheader ]
  %.012 = phi i8* [ %5, %.lr.ph ], [ %1, %.lr.ph.preheader ]
  %5 = getelementptr inbounds i8, i8* %.012, i32 1
  %6 = load i8, i8* %.012, align 1
  %7 = call i32 @michael_append_byte(%struct.Michael* %0, i8 zeroext %6)
  %8 = add nsw i32 %.03, -1
  %9 = icmp sgt i32 %8, 0
  br i1 %9, label %.lr.ph, label %._crit_edge.loopexit

._crit_edge.loopexit:                             ; preds = %.lr.ph
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %3
  ret i32 0
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @michael_remove(%struct.Michael*, i8*, i32) #0 {
  %4 = icmp sge i32 %2, 4
  br i1 %4, label %.lr.ph, label %._crit_edge

.lr.ph:                                           ; preds = %3
  %5 = sext i32 %2 to i64
  %6 = add i64 %5, -4
  %scevgep = getelementptr i8, i8* %1, i64 %6
  br label %7

; <label>:7:                                      ; preds = %.lr.ph, %7
  %lsr.iv = phi i8* [ %scevgep, %.lr.ph ], [ %scevgep1, %7 ]
  %indvars.iv = phi i64 [ %5, %.lr.ph ], [ %indvars.iv.next, %7 ]
  %8 = call i32 @michael_remove_byte(%struct.Michael* %0, i8* %lsr.iv)
  %indvars.iv.next = add nsw i64 %indvars.iv, -1
  %scevgep1 = getelementptr i8, i8* %lsr.iv, i64 -1
  %9 = icmp sge i64 %indvars.iv.next, 4
  br i1 %9, label %7, label %._crit_edge.loopexit

._crit_edge.loopexit:                             ; preds = %7
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %3
  ret i32 0
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @michael_finalize(%struct.Michael*) #0 {
  %2 = call i32 @michael_append_byte(%struct.Michael* %0, i8 zeroext 90)
  %3 = call i32 @michael_append_byte(%struct.Michael* %0, i8 zeroext 0)
  %4 = call i32 @michael_append_byte(%struct.Michael* %0, i8 zeroext 0)
  %5 = call i32 @michael_append_byte(%struct.Michael* %0, i8 zeroext 0)
  %6 = call i32 @michael_append_byte(%struct.Michael* %0, i8 zeroext 0)
  %7 = getelementptr inbounds %struct.Michael, %struct.Michael* %0, i32 0, i32 4
  %8 = load i64, i64* %7, align 8
  %9 = icmp ne i64 %8, 0
  br i1 %9, label %.lr.ph.preheader, label %._crit_edge

.lr.ph.preheader:                                 ; preds = %1
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %.lr.ph
  %10 = call i32 @michael_append_byte(%struct.Michael* %0, i8 zeroext 0)
  %11 = load i64, i64* %7, align 8
  %12 = icmp ne i64 %11, 0
  br i1 %12, label %.lr.ph, label %._crit_edge.loopexit

._crit_edge.loopexit:                             ; preds = %.lr.ph
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %1
  %13 = getelementptr inbounds %struct.Michael, %struct.Michael* %0, i32 0, i32 2
  %14 = load i64, i64* %13, align 8
  %15 = lshr i64 %14, 0
  %16 = and i64 %15, 255
  %17 = trunc i64 %16 to i8
  %18 = getelementptr inbounds %struct.Michael, %struct.Michael* %0, i32 0, i32 6
  %19 = getelementptr inbounds [8 x i8], [8 x i8]* %18, i64 0, i64 0
  store i8 %17, i8* %19, align 8
  %20 = getelementptr inbounds %struct.Michael, %struct.Michael* %0, i32 0, i32 2
  %21 = load i64, i64* %20, align 8
  %22 = lshr i64 %21, 8
  %23 = and i64 %22, 255
  %24 = trunc i64 %23 to i8
  %25 = getelementptr inbounds %struct.Michael, %struct.Michael* %0, i32 0, i32 6
  %26 = getelementptr inbounds [8 x i8], [8 x i8]* %25, i64 0, i64 1
  store i8 %24, i8* %26, align 1
  %27 = getelementptr inbounds %struct.Michael, %struct.Michael* %0, i32 0, i32 2
  %28 = load i64, i64* %27, align 8
  %29 = lshr i64 %28, 16
  %30 = and i64 %29, 255
  %31 = trunc i64 %30 to i8
  %32 = getelementptr inbounds %struct.Michael, %struct.Michael* %0, i32 0, i32 6
  %33 = getelementptr inbounds [8 x i8], [8 x i8]* %32, i64 0, i64 2
  store i8 %31, i8* %33, align 2
  %34 = getelementptr inbounds %struct.Michael, %struct.Michael* %0, i32 0, i32 2
  %35 = load i64, i64* %34, align 8
  %36 = lshr i64 %35, 24
  %37 = and i64 %36, 255
  %38 = trunc i64 %37 to i8
  %39 = getelementptr inbounds %struct.Michael, %struct.Michael* %0, i32 0, i32 6
  %40 = getelementptr inbounds [8 x i8], [8 x i8]* %39, i64 0, i64 3
  store i8 %38, i8* %40, align 1
  %41 = getelementptr inbounds %struct.Michael, %struct.Michael* %0, i32 0, i32 3
  %42 = load i64, i64* %41, align 8
  %43 = lshr i64 %42, 0
  %44 = and i64 %43, 255
  %45 = trunc i64 %44 to i8
  %46 = getelementptr inbounds %struct.Michael, %struct.Michael* %0, i32 0, i32 6
  %47 = getelementptr inbounds [8 x i8], [8 x i8]* %46, i64 0, i64 4
  store i8 %45, i8* %47, align 4
  %48 = getelementptr inbounds %struct.Michael, %struct.Michael* %0, i32 0, i32 3
  %49 = load i64, i64* %48, align 8
  %50 = lshr i64 %49, 8
  %51 = and i64 %50, 255
  %52 = trunc i64 %51 to i8
  %53 = getelementptr inbounds %struct.Michael, %struct.Michael* %0, i32 0, i32 6
  %54 = getelementptr inbounds [8 x i8], [8 x i8]* %53, i64 0, i64 5
  store i8 %52, i8* %54, align 1
  %55 = getelementptr inbounds %struct.Michael, %struct.Michael* %0, i32 0, i32 3
  %56 = load i64, i64* %55, align 8
  %57 = lshr i64 %56, 16
  %58 = and i64 %57, 255
  %59 = trunc i64 %58 to i8
  %60 = getelementptr inbounds %struct.Michael, %struct.Michael* %0, i32 0, i32 6
  %61 = getelementptr inbounds [8 x i8], [8 x i8]* %60, i64 0, i64 6
  store i8 %59, i8* %61, align 2
  %62 = getelementptr inbounds %struct.Michael, %struct.Michael* %0, i32 0, i32 3
  %63 = load i64, i64* %62, align 8
  %64 = lshr i64 %63, 24
  %65 = and i64 %64, 255
  %66 = trunc i64 %65 to i8
  %67 = getelementptr inbounds %struct.Michael, %struct.Michael* %0, i32 0, i32 6
  %68 = getelementptr inbounds [8 x i8], [8 x i8]* %67, i64 0, i64 7
  store i8 %66, i8* %68, align 1
  ret i32 0
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @michael_finalize_zero(%struct.Michael*) #0 {
  %2 = call i32 @michael_append_byte(%struct.Michael* %0, i8 zeroext 0)
  %3 = call i32 @michael_append_byte(%struct.Michael* %0, i8 zeroext 0)
  %4 = call i32 @michael_append_byte(%struct.Michael* %0, i8 zeroext 0)
  %5 = call i32 @michael_append_byte(%struct.Michael* %0, i8 zeroext 0)
  %6 = call i32 @michael_append_byte(%struct.Michael* %0, i8 zeroext 0)
  %7 = getelementptr inbounds %struct.Michael, %struct.Michael* %0, i32 0, i32 4
  %8 = load i64, i64* %7, align 8
  %9 = icmp ne i64 %8, 0
  br i1 %9, label %.lr.ph.preheader, label %._crit_edge

.lr.ph.preheader:                                 ; preds = %1
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %.lr.ph
  %10 = call i32 @michael_append_byte(%struct.Michael* %0, i8 zeroext 0)
  %11 = load i64, i64* %7, align 8
  %12 = icmp ne i64 %11, 0
  br i1 %12, label %.lr.ph, label %._crit_edge.loopexit

._crit_edge.loopexit:                             ; preds = %.lr.ph
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %1
  %13 = getelementptr inbounds %struct.Michael, %struct.Michael* %0, i32 0, i32 2
  %14 = load i64, i64* %13, align 8
  %15 = lshr i64 %14, 0
  %16 = and i64 %15, 255
  %17 = trunc i64 %16 to i8
  %18 = getelementptr inbounds %struct.Michael, %struct.Michael* %0, i32 0, i32 6
  %19 = getelementptr inbounds [8 x i8], [8 x i8]* %18, i64 0, i64 0
  store i8 %17, i8* %19, align 8
  %20 = getelementptr inbounds %struct.Michael, %struct.Michael* %0, i32 0, i32 2
  %21 = load i64, i64* %20, align 8
  %22 = lshr i64 %21, 8
  %23 = and i64 %22, 255
  %24 = trunc i64 %23 to i8
  %25 = getelementptr inbounds %struct.Michael, %struct.Michael* %0, i32 0, i32 6
  %26 = getelementptr inbounds [8 x i8], [8 x i8]* %25, i64 0, i64 1
  store i8 %24, i8* %26, align 1
  %27 = getelementptr inbounds %struct.Michael, %struct.Michael* %0, i32 0, i32 2
  %28 = load i64, i64* %27, align 8
  %29 = lshr i64 %28, 16
  %30 = and i64 %29, 255
  %31 = trunc i64 %30 to i8
  %32 = getelementptr inbounds %struct.Michael, %struct.Michael* %0, i32 0, i32 6
  %33 = getelementptr inbounds [8 x i8], [8 x i8]* %32, i64 0, i64 2
  store i8 %31, i8* %33, align 2
  %34 = getelementptr inbounds %struct.Michael, %struct.Michael* %0, i32 0, i32 2
  %35 = load i64, i64* %34, align 8
  %36 = lshr i64 %35, 24
  %37 = and i64 %36, 255
  %38 = trunc i64 %37 to i8
  %39 = getelementptr inbounds %struct.Michael, %struct.Michael* %0, i32 0, i32 6
  %40 = getelementptr inbounds [8 x i8], [8 x i8]* %39, i64 0, i64 3
  store i8 %38, i8* %40, align 1
  %41 = getelementptr inbounds %struct.Michael, %struct.Michael* %0, i32 0, i32 3
  %42 = load i64, i64* %41, align 8
  %43 = lshr i64 %42, 0
  %44 = and i64 %43, 255
  %45 = trunc i64 %44 to i8
  %46 = getelementptr inbounds %struct.Michael, %struct.Michael* %0, i32 0, i32 6
  %47 = getelementptr inbounds [8 x i8], [8 x i8]* %46, i64 0, i64 4
  store i8 %45, i8* %47, align 4
  %48 = getelementptr inbounds %struct.Michael, %struct.Michael* %0, i32 0, i32 3
  %49 = load i64, i64* %48, align 8
  %50 = lshr i64 %49, 8
  %51 = and i64 %50, 255
  %52 = trunc i64 %51 to i8
  %53 = getelementptr inbounds %struct.Michael, %struct.Michael* %0, i32 0, i32 6
  %54 = getelementptr inbounds [8 x i8], [8 x i8]* %53, i64 0, i64 5
  store i8 %52, i8* %54, align 1
  %55 = getelementptr inbounds %struct.Michael, %struct.Michael* %0, i32 0, i32 3
  %56 = load i64, i64* %55, align 8
  %57 = lshr i64 %56, 16
  %58 = and i64 %57, 255
  %59 = trunc i64 %58 to i8
  %60 = getelementptr inbounds %struct.Michael, %struct.Michael* %0, i32 0, i32 6
  %61 = getelementptr inbounds [8 x i8], [8 x i8]* %60, i64 0, i64 6
  store i8 %59, i8* %61, align 2
  %62 = getelementptr inbounds %struct.Michael, %struct.Michael* %0, i32 0, i32 3
  %63 = load i64, i64* %62, align 8
  %64 = lshr i64 %63, 24
  %65 = and i64 %64, 255
  %66 = trunc i64 %65 to i8
  %67 = getelementptr inbounds %struct.Michael, %struct.Michael* %0, i32 0, i32 6
  %68 = getelementptr inbounds [8 x i8], [8 x i8]* %67, i64 0, i64 7
  store i8 %66, i8* %68, align 1
  ret i32 0
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @michael_test(i8*, i8*, i32, i8*) #0 {
  %5 = alloca %struct.Michael, align 8
  %6 = alloca %struct.Michael, align 8
  %7 = alloca %struct.Michael, align 8
  %8 = alloca %struct.Michael, align 8
  %9 = getelementptr [9 x i8], [9 x i8]* @.str.17.178, i32 0, i32 0
  %10 = call i32 @init_michael(%struct.Michael* %5, i8* %9)
  %11 = getelementptr [9 x i8], [9 x i8]* @.str.17.178, i32 0, i32 0
  %12 = call i32 @init_michael(%struct.Michael* %6, i8* %11)
  %13 = getelementptr [9 x i8], [9 x i8]* @.str.17.178, i32 0, i32 0
  %14 = call i32 @init_michael(%struct.Michael* %7, i8* %13)
  %15 = call i32 @michael_append_byte(%struct.Michael* %5, i8 zeroext 2)
  %16 = call i32 @michael_append_byte(%struct.Michael* %6, i8 zeroext 1)
  %17 = call i32 @michael_append_byte(%struct.Michael* %7, i8 zeroext 3)
  %18 = call i32 @michael_finalize(%struct.Michael* %5)
  %19 = call i32 @michael_finalize_zero(%struct.Michael* %6)
  %20 = call i32 @michael_finalize(%struct.Michael* %7)
  %21 = getelementptr [8 x i8], [8 x i8]* @.str.18.179, i32 0, i32 0
  %22 = call i32 (i8*, ...) @printf(i8* %21)
  %scevgep4 = getelementptr %struct.Michael, %struct.Michael* %5, i64 0, i32 6, i64 0
  br label %23

; <label>:23:                                     ; preds = %4, %23
  %indvars.iv7 = phi i64 [ 0, %4 ], [ %indvars.iv.next8, %23 ]
  %scevgep5 = getelementptr i8, i8* %scevgep4, i64 %indvars.iv7
  %24 = load i8, i8* %scevgep5, align 1
  %25 = zext i8 %24 to i32
  %26 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.19.180, i64 0, i64 0), i32 %25)
  %indvars.iv.next8 = add nuw nsw i64 %indvars.iv7, 1
  %exitcond9 = icmp ne i64 %indvars.iv.next8, 8
  br i1 %exitcond9, label %23, label %27

; <label>:27:                                     ; preds = %23
  %28 = getelementptr [2 x i8], [2 x i8]* @.str.20.181, i32 0, i32 0
  %29 = call i32 (i8*, ...) @printf(i8* %28)
  %30 = getelementptr [8 x i8], [8 x i8]* @.str.21.182, i32 0, i32 0
  %31 = call i32 (i8*, ...) @printf(i8* %30)
  %scevgep2 = getelementptr %struct.Michael, %struct.Michael* %6, i64 0, i32 6, i64 0
  br label %32

; <label>:32:                                     ; preds = %27, %32
  %indvars.iv3 = phi i64 [ 0, %27 ], [ %indvars.iv.next4, %32 ]
  %scevgep3 = getelementptr i8, i8* %scevgep2, i64 %indvars.iv3
  %33 = load i8, i8* %scevgep3, align 1
  %34 = zext i8 %33 to i32
  %35 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.19.180, i64 0, i64 0), i32 %34)
  %indvars.iv.next4 = add nuw nsw i64 %indvars.iv3, 1
  %exitcond5 = icmp ne i64 %indvars.iv.next4, 8
  br i1 %exitcond5, label %32, label %36

; <label>:36:                                     ; preds = %32
  %37 = getelementptr [2 x i8], [2 x i8]* @.str.20.181, i32 0, i32 0
  %38 = call i32 (i8*, ...) @printf(i8* %37)
  %39 = getelementptr [8 x i8], [8 x i8]* @.str.22.183, i32 0, i32 0
  %40 = call i32 (i8*, ...) @printf(i8* %39)
  %scevgep = getelementptr %struct.Michael, %struct.Michael* %7, i64 0, i32 6, i64 0
  br label %41

; <label>:41:                                     ; preds = %36, %41
  %indvars.iv = phi i64 [ 0, %36 ], [ %indvars.iv.next, %41 ]
  %scevgep1 = getelementptr i8, i8* %scevgep, i64 %indvars.iv
  %42 = load i8, i8* %scevgep1, align 1
  %43 = zext i8 %42 to i32
  %44 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.19.180, i64 0, i64 0), i32 %43)
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp ne i64 %indvars.iv.next, 8
  br i1 %exitcond, label %41, label %45

; <label>:45:                                     ; preds = %41
  %46 = getelementptr [2 x i8], [2 x i8]* @.str.20.181, i32 0, i32 0
  %47 = call i32 (i8*, ...) @printf(i8* %46)
  %48 = call i32 @init_michael(%struct.Michael* %8, i8* %0)
  %49 = call i32 @michael_append(%struct.Michael* %8, i8* %1, i32 %2)
  %50 = call i32 @michael_finalize(%struct.Michael* %8)
  %51 = getelementptr inbounds %struct.Michael, %struct.Michael* %8, i32 0, i32 6
  %52 = getelementptr inbounds [8 x i8], [8 x i8]* %51, i32 0, i32 0
  %53 = call i32 @memcmp(i8* %52, i8* %3, i64 8) #10
  %54 = icmp eq i32 %53, 0
  %55 = zext i1 %54 to i32
  ret i32 %55
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @calc_tkip_mic_key(i8*, i32, i8*) #0 {
  %4 = alloca [6 x i8], align 1
  %5 = alloca [6 x i8], align 1
  %6 = alloca [6 x i8], align 1
  %7 = alloca [4 x i8], align 1
  %8 = alloca [4096 x i8], align 16
  %9 = alloca %struct.Michael, align 8
  %10 = getelementptr inbounds [4096 x i8], [4096 x i8]* %8, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* align 16 %10, i8 0, i64 4096, i1 false)
  %11 = getelementptr inbounds i8, i8* %0, i64 1
  %12 = load i8, i8* %11, align 1
  %13 = zext i8 %12 to i32
  %14 = and i32 %13, 3
  %15 = icmp ne i32 %14, 3
  %16 = zext i1 %15 to i64
  %17 = select i1 %15, i32 24, i32 30
  %18 = icmp slt i32 %1, %17
  br i1 %18, label %182, label %19

; <label>:19:                                     ; preds = %3
  %20 = getelementptr inbounds i8, i8* %0, i64 0
  %21 = load i8, i8* %20, align 1
  %22 = zext i8 %21 to i32
  %23 = and i32 %22, 128
  %24 = icmp eq i32 %23, 128
  %25 = add nsw i32 %17, 2
  %spec.select = select i1 %24, i32 %25, i32 %17
  %spec.select1 = select i1 %24, i32 1, i32 0
  %26 = getelementptr inbounds [4 x i8], [4 x i8]* %7, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* align 1 %26, i8 0, i64 4, i1 false)
  %27 = icmp ne i32 %spec.select1, 0
  br i1 %27, label %28, label %37

; <label>:28:                                     ; preds = %19
  %29 = sub nsw i32 %spec.select, 2
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds i8, i8* %0, i64 %30
  %32 = load i8, i8* %31, align 1
  %33 = zext i8 %32 to i32
  %34 = and i32 %33, 15
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds [4 x i8], [4 x i8]* %7, i64 0, i64 0
  store i8 %35, i8* %36, align 1
  br label %37

; <label>:37:                                     ; preds = %28, %19
  %38 = getelementptr inbounds i8, i8* %0, i64 1
  %39 = load i8, i8* %38, align 1
  %40 = zext i8 %39 to i32
  %41 = and i32 %40, 3
  switch i32 %41, label %63 [
    i32 0, label %42
    i32 1, label %49
    i32 2, label %56
  ]

; <label>:42:                                     ; preds = %37
  %43 = getelementptr inbounds [6 x i8], [6 x i8]* %6, i32 0, i32 0
  %44 = getelementptr inbounds i8, i8* %0, i64 16
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %43, i8* align 1 %44, i64 6, i1 false)
  %45 = getelementptr inbounds [6 x i8], [6 x i8]* %5, i32 0, i32 0
  %46 = getelementptr inbounds i8, i8* %0, i64 4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %45, i8* align 1 %46, i64 6, i1 false)
  %47 = getelementptr inbounds [6 x i8], [6 x i8]* %4, i32 0, i32 0
  %48 = getelementptr inbounds i8, i8* %0, i64 10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %47, i8* align 1 %48, i64 6, i1 false)
  br label %70

; <label>:49:                                     ; preds = %37
  %50 = getelementptr inbounds [6 x i8], [6 x i8]* %6, i32 0, i32 0
  %51 = getelementptr inbounds i8, i8* %0, i64 4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %50, i8* align 1 %51, i64 6, i1 false)
  %52 = getelementptr inbounds [6 x i8], [6 x i8]* %5, i32 0, i32 0
  %53 = getelementptr inbounds i8, i8* %0, i64 16
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %52, i8* align 1 %53, i64 6, i1 false)
  %54 = getelementptr inbounds [6 x i8], [6 x i8]* %4, i32 0, i32 0
  %55 = getelementptr inbounds i8, i8* %0, i64 10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %54, i8* align 1 %55, i64 6, i1 false)
  br label %70

; <label>:56:                                     ; preds = %37
  %57 = getelementptr inbounds [6 x i8], [6 x i8]* %6, i32 0, i32 0
  %58 = getelementptr inbounds i8, i8* %0, i64 10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %57, i8* align 1 %58, i64 6, i1 false)
  %59 = getelementptr inbounds [6 x i8], [6 x i8]* %5, i32 0, i32 0
  %60 = getelementptr inbounds i8, i8* %0, i64 4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %59, i8* align 1 %60, i64 6, i1 false)
  %61 = getelementptr inbounds [6 x i8], [6 x i8]* %4, i32 0, i32 0
  %62 = getelementptr inbounds i8, i8* %0, i64 16
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %61, i8* align 1 %62, i64 6, i1 false)
  br label %70

; <label>:63:                                     ; preds = %37
  %64 = getelementptr inbounds [6 x i8], [6 x i8]* %6, i32 0, i32 0
  %65 = getelementptr inbounds i8, i8* %0, i64 10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %64, i8* align 1 %65, i64 6, i1 false)
  %66 = getelementptr inbounds [6 x i8], [6 x i8]* %5, i32 0, i32 0
  %67 = getelementptr inbounds i8, i8* %0, i64 16
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %66, i8* align 1 %67, i64 6, i1 false)
  %68 = getelementptr inbounds [6 x i8], [6 x i8]* %4, i32 0, i32 0
  %69 = getelementptr inbounds i8, i8* %0, i64 24
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %68, i8* align 1 %69, i64 6, i1 false)
  br label %70

; <label>:70:                                     ; preds = %63, %56, %49, %42
  %71 = getelementptr inbounds [4096 x i8], [4096 x i8]* %8, i32 0, i32 0
  %72 = getelementptr inbounds [6 x i8], [6 x i8]* %5, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %71, i8* align 1 %72, i64 6, i1 false)
  %73 = getelementptr inbounds i8, i8* %71, i64 6
  %74 = getelementptr inbounds [6 x i8], [6 x i8]* %4, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %73, i8* align 1 %74, i64 6, i1 false)
  %75 = getelementptr inbounds i8, i8* %73, i64 6
  %76 = getelementptr inbounds [4 x i8], [4 x i8]* %7, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %75, i8* align 1 %76, i64 4, i1 false)
  %77 = getelementptr inbounds i8, i8* %75, i64 4
  %78 = sext i32 %spec.select to i64
  %79 = getelementptr inbounds i8, i8* %0, i64 %78
  %80 = sub nsw i32 %1, %spec.select
  %81 = sub nsw i32 %80, 8
  %82 = sext i32 %81 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %77, i8* align 1 %79, i64 %82, i1 false)
  %83 = sub nsw i32 %1, %spec.select
  %84 = sub nsw i32 %83, 8
  %85 = sext i32 %84 to i64
  %86 = getelementptr inbounds i8, i8* %77, i64 %85
  %87 = getelementptr [2 x i8], [2 x i8]* @.str.23.184, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %86, i8* align 1 %87, i64 1, i1 false)
  %88 = getelementptr inbounds i8, i8* %86, i64 1
  %89 = getelementptr [32 x i8], [32 x i8]* @ZERO.185, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %88, i8* align 16 %89, i64 4, i1 false)
  %90 = getelementptr inbounds i8, i8* %88, i64 4
  %91 = getelementptr inbounds [4096 x i8], [4096 x i8]* %8, i32 0, i32 0
  %92 = ptrtoint i8* %90 to i64
  %93 = ptrtoint i8* %91 to i64
  %94 = sub i64 %92, %93
  %95 = srem i64 %94, 4
  %96 = icmp sgt i64 %95, 0
  br i1 %96, label %97, label %105

; <label>:97:                                     ; preds = %70
  %98 = getelementptr inbounds [4096 x i8], [4096 x i8]* %8, i32 0, i32 0
  %99 = ptrtoint i8* %90 to i64
  %100 = ptrtoint i8* %98 to i64
  %101 = sub i64 %99, %100
  %102 = srem i64 %101, 4
  %103 = sub nsw i64 4, %102
  %104 = getelementptr [32 x i8], [32 x i8]* @ZERO.185, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %90, i8* align 16 %104, i64 %103, i1 false)
  br label %105

; <label>:105:                                    ; preds = %97, %70
  %106 = getelementptr inbounds [4096 x i8], [4096 x i8]* %8, i32 0, i32 0
  %107 = ptrtoint i8* %90 to i64
  %108 = ptrtoint i8* %106 to i64
  %109 = sub i64 %107, %108
  %110 = srem i64 %109, 4
  %111 = sub nsw i64 4, %110
  %112 = getelementptr inbounds i8, i8* %90, i64 %111
  %113 = sext i32 %1 to i64
  %114 = getelementptr inbounds i8, i8* %0, i64 %113
  %115 = getelementptr inbounds i8, i8* %114, i64 -8
  %116 = call i32 @init_michael(%struct.Michael* %9, i8* %115)
  %117 = getelementptr inbounds [4096 x i8], [4096 x i8]* %8, i32 0, i32 0
  %118 = getelementptr inbounds [4096 x i8], [4096 x i8]* %8, i32 0, i32 0
  %119 = ptrtoint i8* %112 to i64
  %120 = ptrtoint i8* %118 to i64
  %121 = sub i64 %119, %120
  %122 = trunc i64 %121 to i32
  %123 = call i32 @michael_remove(%struct.Michael* %9, i8* %117, i32 %122)
  %124 = getelementptr inbounds %struct.Michael, %struct.Michael* %9, i32 0, i32 2
  %125 = load i64, i64* %124, align 8
  %126 = lshr i64 %125, 0
  %127 = and i64 %126, 255
  %128 = trunc i64 %127 to i8
  %129 = getelementptr inbounds %struct.Michael, %struct.Michael* %9, i32 0, i32 6
  %130 = getelementptr inbounds [8 x i8], [8 x i8]* %129, i64 0, i64 0
  store i8 %128, i8* %130, align 8
  %131 = getelementptr inbounds %struct.Michael, %struct.Michael* %9, i32 0, i32 2
  %132 = load i64, i64* %131, align 8
  %133 = lshr i64 %132, 8
  %134 = and i64 %133, 255
  %135 = trunc i64 %134 to i8
  %136 = getelementptr inbounds %struct.Michael, %struct.Michael* %9, i32 0, i32 6
  %137 = getelementptr inbounds [8 x i8], [8 x i8]* %136, i64 0, i64 1
  store i8 %135, i8* %137, align 1
  %138 = getelementptr inbounds %struct.Michael, %struct.Michael* %9, i32 0, i32 2
  %139 = load i64, i64* %138, align 8
  %140 = lshr i64 %139, 16
  %141 = and i64 %140, 255
  %142 = trunc i64 %141 to i8
  %143 = getelementptr inbounds %struct.Michael, %struct.Michael* %9, i32 0, i32 6
  %144 = getelementptr inbounds [8 x i8], [8 x i8]* %143, i64 0, i64 2
  store i8 %142, i8* %144, align 2
  %145 = getelementptr inbounds %struct.Michael, %struct.Michael* %9, i32 0, i32 2
  %146 = load i64, i64* %145, align 8
  %147 = lshr i64 %146, 24
  %148 = and i64 %147, 255
  %149 = trunc i64 %148 to i8
  %150 = getelementptr inbounds %struct.Michael, %struct.Michael* %9, i32 0, i32 6
  %151 = getelementptr inbounds [8 x i8], [8 x i8]* %150, i64 0, i64 3
  store i8 %149, i8* %151, align 1
  %152 = getelementptr inbounds %struct.Michael, %struct.Michael* %9, i32 0, i32 3
  %153 = load i64, i64* %152, align 8
  %154 = lshr i64 %153, 0
  %155 = and i64 %154, 255
  %156 = trunc i64 %155 to i8
  %157 = getelementptr inbounds %struct.Michael, %struct.Michael* %9, i32 0, i32 6
  %158 = getelementptr inbounds [8 x i8], [8 x i8]* %157, i64 0, i64 4
  store i8 %156, i8* %158, align 4
  %159 = getelementptr inbounds %struct.Michael, %struct.Michael* %9, i32 0, i32 3
  %160 = load i64, i64* %159, align 8
  %161 = lshr i64 %160, 8
  %162 = and i64 %161, 255
  %163 = trunc i64 %162 to i8
  %164 = getelementptr inbounds %struct.Michael, %struct.Michael* %9, i32 0, i32 6
  %165 = getelementptr inbounds [8 x i8], [8 x i8]* %164, i64 0, i64 5
  store i8 %163, i8* %165, align 1
  %166 = getelementptr inbounds %struct.Michael, %struct.Michael* %9, i32 0, i32 3
  %167 = load i64, i64* %166, align 8
  %168 = lshr i64 %167, 16
  %169 = and i64 %168, 255
  %170 = trunc i64 %169 to i8
  %171 = getelementptr inbounds %struct.Michael, %struct.Michael* %9, i32 0, i32 6
  %172 = getelementptr inbounds [8 x i8], [8 x i8]* %171, i64 0, i64 6
  store i8 %170, i8* %172, align 2
  %173 = getelementptr inbounds %struct.Michael, %struct.Michael* %9, i32 0, i32 3
  %174 = load i64, i64* %173, align 8
  %175 = lshr i64 %174, 24
  %176 = and i64 %175, 255
  %177 = trunc i64 %176 to i8
  %178 = getelementptr inbounds %struct.Michael, %struct.Michael* %9, i32 0, i32 6
  %179 = getelementptr inbounds [8 x i8], [8 x i8]* %178, i64 0, i64 7
  store i8 %177, i8* %179, align 1
  %180 = getelementptr inbounds %struct.Michael, %struct.Michael* %9, i32 0, i32 6
  %181 = getelementptr inbounds [8 x i8], [8 x i8]* %180, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2, i8* align 8 %181, i64 8, i1 false)
  br label %182

; <label>:182:                                    ; preds = %3, %105
  ret i32 0
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @calc_tkip_mic(i8*, i32, i8*, i8*) #0 {
  %5 = alloca [6 x i8], align 1
  %6 = alloca [6 x i8], align 1
  %7 = alloca [6 x i8], align 1
  %8 = alloca [4 x i8], align 1
  %9 = alloca %struct.Michael, align 8
  %10 = getelementptr inbounds i8, i8* %0, i64 1
  %11 = load i8, i8* %10, align 1
  %12 = zext i8 %11 to i32
  %13 = and i32 %12, 3
  %14 = icmp ne i32 %13, 3
  %15 = zext i1 %14 to i64
  %16 = select i1 %14, i32 24, i32 30
  %17 = icmp slt i32 %1, %16
  br i1 %17, label %87, label %18

; <label>:18:                                     ; preds = %4
  %19 = getelementptr inbounds i8, i8* %0, i64 0
  %20 = load i8, i8* %19, align 1
  %21 = zext i8 %20 to i32
  %22 = and i32 %21, 128
  %23 = icmp eq i32 %22, 128
  %24 = add nsw i32 %16, 2
  %spec.select = select i1 %23, i32 %24, i32 %16
  %spec.select1 = select i1 %23, i32 1, i32 0
  %25 = getelementptr inbounds i8, i8* %0, i64 1
  %26 = load i8, i8* %25, align 1
  %27 = zext i8 %26 to i32
  %28 = and i32 %27, 3
  switch i32 %28, label %50 [
    i32 0, label %29
    i32 1, label %36
    i32 2, label %43
  ]

; <label>:29:                                     ; preds = %18
  %30 = getelementptr inbounds [6 x i8], [6 x i8]* %7, i32 0, i32 0
  %31 = getelementptr inbounds i8, i8* %0, i64 16
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %30, i8* align 1 %31, i64 6, i1 false)
  %32 = getelementptr inbounds [6 x i8], [6 x i8]* %6, i32 0, i32 0
  %33 = getelementptr inbounds i8, i8* %0, i64 4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %32, i8* align 1 %33, i64 6, i1 false)
  %34 = getelementptr inbounds [6 x i8], [6 x i8]* %5, i32 0, i32 0
  %35 = getelementptr inbounds i8, i8* %0, i64 10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %34, i8* align 1 %35, i64 6, i1 false)
  br label %57

; <label>:36:                                     ; preds = %18
  %37 = getelementptr inbounds [6 x i8], [6 x i8]* %7, i32 0, i32 0
  %38 = getelementptr inbounds i8, i8* %0, i64 4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %37, i8* align 1 %38, i64 6, i1 false)
  %39 = getelementptr inbounds [6 x i8], [6 x i8]* %6, i32 0, i32 0
  %40 = getelementptr inbounds i8, i8* %0, i64 16
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %39, i8* align 1 %40, i64 6, i1 false)
  %41 = getelementptr inbounds [6 x i8], [6 x i8]* %5, i32 0, i32 0
  %42 = getelementptr inbounds i8, i8* %0, i64 10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %41, i8* align 1 %42, i64 6, i1 false)
  br label %57

; <label>:43:                                     ; preds = %18
  %44 = getelementptr inbounds [6 x i8], [6 x i8]* %7, i32 0, i32 0
  %45 = getelementptr inbounds i8, i8* %0, i64 10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %44, i8* align 1 %45, i64 6, i1 false)
  %46 = getelementptr inbounds [6 x i8], [6 x i8]* %6, i32 0, i32 0
  %47 = getelementptr inbounds i8, i8* %0, i64 4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %46, i8* align 1 %47, i64 6, i1 false)
  %48 = getelementptr inbounds [6 x i8], [6 x i8]* %5, i32 0, i32 0
  %49 = getelementptr inbounds i8, i8* %0, i64 16
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %48, i8* align 1 %49, i64 6, i1 false)
  br label %57

; <label>:50:                                     ; preds = %18
  %51 = getelementptr inbounds [6 x i8], [6 x i8]* %7, i32 0, i32 0
  %52 = getelementptr inbounds i8, i8* %0, i64 10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %51, i8* align 1 %52, i64 6, i1 false)
  %53 = getelementptr inbounds [6 x i8], [6 x i8]* %6, i32 0, i32 0
  %54 = getelementptr inbounds i8, i8* %0, i64 16
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %53, i8* align 1 %54, i64 6, i1 false)
  %55 = getelementptr inbounds [6 x i8], [6 x i8]* %5, i32 0, i32 0
  %56 = getelementptr inbounds i8, i8* %0, i64 24
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %55, i8* align 1 %56, i64 6, i1 false)
  br label %57

; <label>:57:                                     ; preds = %50, %43, %36, %29
  %.02 = phi i32 [ 0, %50 ], [ 48, %43 ], [ 56, %36 ], [ 0, %29 ]
  switch i32 %.02, label %87 [
    i32 48, label %58
    i32 56, label %58
  ]

; <label>:58:                                     ; preds = %57, %57
  %59 = sext i32 %.02 to i64
  %60 = getelementptr inbounds i8, i8* %2, i64 %59
  %61 = call i32 @init_michael(%struct.Michael* %9, i8* %60)
  %62 = getelementptr inbounds [6 x i8], [6 x i8]* %6, i32 0, i32 0
  %63 = call i32 @michael_append(%struct.Michael* %9, i8* %62, i32 6)
  %64 = getelementptr inbounds [6 x i8], [6 x i8]* %5, i32 0, i32 0
  %65 = call i32 @michael_append(%struct.Michael* %9, i8* %64, i32 6)
  %66 = getelementptr inbounds [4 x i8], [4 x i8]* %8, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* align 1 %66, i8 0, i64 4, i1 false)
  %67 = icmp ne i32 %spec.select1, 0
  br i1 %67, label %68, label %77

; <label>:68:                                     ; preds = %58
  %69 = sub nsw i32 %spec.select, 2
  %70 = sext i32 %69 to i64
  %71 = getelementptr inbounds i8, i8* %0, i64 %70
  %72 = load i8, i8* %71, align 1
  %73 = zext i8 %72 to i32
  %74 = and i32 %73, 15
  %75 = trunc i32 %74 to i8
  %76 = getelementptr inbounds [4 x i8], [4 x i8]* %8, i64 0, i64 0
  store i8 %75, i8* %76, align 1
  br label %77

; <label>:77:                                     ; preds = %68, %58
  %78 = getelementptr inbounds [4 x i8], [4 x i8]* %8, i32 0, i32 0
  %79 = call i32 @michael_append(%struct.Michael* %9, i8* %78, i32 4)
  %80 = sext i32 %spec.select to i64
  %81 = getelementptr inbounds i8, i8* %0, i64 %80
  %82 = sub nsw i32 %1, %spec.select
  %83 = call i32 @michael_append(%struct.Michael* %9, i8* %81, i32 %82)
  %84 = call i32 @michael_finalize(%struct.Michael* %9)
  %85 = getelementptr inbounds %struct.Michael, %struct.Michael* %9, i32 0, i32 6
  %86 = getelementptr inbounds [8 x i8], [8 x i8]* %85, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %3, i8* align 8 %86, i64 8, i1 false)
  br label %87

; <label>:87:                                     ; preds = %57, %4, %77
  %.0 = phi i32 [ 0, %77 ], [ 0, %4 ], [ 1, %57 ]
  ret i32 %.0
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @calc_tkip_ppk(i8*, i32, i8*, i8*) #0 {
  %5 = alloca [6 x i16], align 2
  %6 = getelementptr inbounds i8, i8* %0, i64 1
  %7 = load i8, i8* %6, align 1
  %8 = zext i8 %7 to i32
  %9 = and i32 %8, 3
  %10 = icmp ne i32 %9, 3
  %11 = select i1 %10, i32 24, i32 30
  %12 = getelementptr inbounds i8, i8* %0, i64 0
  %13 = load i8, i8* %12, align 1
  %14 = zext i8 %13 to i32
  %15 = and i32 %14, 240
  %16 = ashr i32 %15, 4
  %17 = shl i32 %16, 4
  %18 = icmp eq i32 %17, 128
  %19 = add nsw i32 %11, 2
  %.0 = select i1 %18, i32 %19, i32 %11
  %20 = add nsw i32 %.0, 2
  %21 = sext i32 %20 to i64
  %22 = getelementptr inbounds i8, i8* %0, i64 %21
  %23 = load i8, i8* %22, align 1
  %24 = sext i32 %.0 to i64
  %25 = getelementptr inbounds i8, i8* %0, i64 %24
  %26 = load i8, i8* %25, align 1
  %27 = zext i8 %26 to i32
  %28 = add nsw i32 %.0, 4
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds i8, i8* %0, i64 %29
  %31 = load i8, i8* %30, align 1
  %32 = zext i8 %31 to i32
  %33 = add nsw i32 %.0, 5
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds i8, i8* %0, i64 %34
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i32
  %38 = shl i32 %37, 8
  %39 = or i32 %32, %38
  %40 = add nsw i32 %.0, 6
  %41 = sext i32 %40 to i64
  %42 = getelementptr inbounds i8, i8* %0, i64 %41
  %43 = load i8, i8* %42, align 1
  %44 = zext i8 %43 to i32
  %45 = shl i32 %44, 16
  %46 = or i32 %39, %45
  %47 = add nsw i32 %.0, 7
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds i8, i8* %0, i64 %48
  %50 = load i8, i8* %49, align 1
  %51 = zext i8 %50 to i32
  %52 = shl i32 %51, 24
  %53 = or i32 %46, %52
  %54 = and i32 %53, 65535
  %55 = trunc i32 %54 to i16
  %56 = getelementptr inbounds [6 x i16], [6 x i16]* %5, i64 0, i64 0
  store i16 %55, i16* %56, align 2
  %57 = lshr i32 %53, 16
  %58 = and i32 %57, 65535
  %59 = trunc i32 %58 to i16
  %60 = getelementptr inbounds [6 x i16], [6 x i16]* %5, i64 0, i64 1
  store i16 %59, i16* %60, align 2
  %61 = getelementptr inbounds i8, i8* %0, i64 10
  %62 = load i8, i8* %61, align 1
  %63 = zext i8 %62 to i32
  %64 = getelementptr inbounds i8, i8* %0, i64 11
  %65 = load i8, i8* %64, align 1
  %66 = zext i8 %65 to i32
  %67 = and i32 %66, 255
  %68 = shl i32 %67, 8
  %69 = xor i32 %63, %68
  %70 = trunc i32 %69 to i16
  %71 = getelementptr inbounds [6 x i16], [6 x i16]* %5, i64 0, i64 2
  store i16 %70, i16* %71, align 2
  %72 = getelementptr inbounds i8, i8* %0, i64 12
  %73 = load i8, i8* %72, align 1
  %74 = zext i8 %73 to i32
  %75 = getelementptr inbounds i8, i8* %0, i64 13
  %76 = load i8, i8* %75, align 1
  %77 = zext i8 %76 to i32
  %78 = and i32 %77, 255
  %79 = shl i32 %78, 8
  %80 = xor i32 %74, %79
  %81 = trunc i32 %80 to i16
  %82 = getelementptr inbounds [6 x i16], [6 x i16]* %5, i64 0, i64 3
  store i16 %81, i16* %82, align 2
  %83 = getelementptr inbounds i8, i8* %0, i64 14
  %84 = load i8, i8* %83, align 1
  %85 = zext i8 %84 to i32
  %86 = getelementptr inbounds i8, i8* %0, i64 15
  %87 = load i8, i8* %86, align 1
  %88 = zext i8 %87 to i32
  %89 = and i32 %88, 255
  %90 = shl i32 %89, 8
  %91 = xor i32 %85, %90
  %92 = trunc i32 %91 to i16
  %93 = getelementptr inbounds [6 x i16], [6 x i16]* %5, i64 0, i64 4
  store i16 %92, i16* %93, align 2
  %94 = getelementptr inbounds [6 x i16], [6 x i16]* %5, i64 0, i64 4
  %95 = getelementptr inbounds [6 x i16], [6 x i16]* %5, i64 0, i64 0
  %96 = getelementptr inbounds [6 x i16], [6 x i16]* %5, i64 0, i64 0
  %97 = getelementptr inbounds [6 x i16], [6 x i16]* %5, i64 0, i64 1
  %98 = getelementptr inbounds [6 x i16], [6 x i16]* %5, i64 0, i64 1
  %99 = getelementptr inbounds [6 x i16], [6 x i16]* %5, i64 0, i64 2
  %100 = getelementptr inbounds [6 x i16], [6 x i16]* %5, i64 0, i64 2
  %101 = getelementptr inbounds [6 x i16], [6 x i16]* %5, i64 0, i64 3
  %102 = getelementptr inbounds [6 x i16], [6 x i16]* %5, i64 0, i64 3
  %.promoted = load i16, i16* %94, align 2
  %.promoted1 = load i16, i16* %95, align 2
  %.promoted3 = load i16, i16* %97, align 2
  %.promoted5 = load i16, i16* %99, align 2
  %.promoted7 = load i16, i16* %101, align 2
  br label %103

; <label>:103:                                    ; preds = %4, %103
  %104 = phi i16 [ %.promoted7, %4 ], [ %328, %103 ]
  %105 = phi i16 [ %.promoted5, %4 ], [ %273, %103 ]
  %106 = phi i16 [ %.promoted3, %4 ], [ %218, %103 ]
  %107 = phi i16 [ %.promoted1, %4 ], [ %163, %103 ]
  %108 = phi i16 [ %.promoted, %4 ], [ %384, %103 ]
  %.013 = phi i32 [ 0, %4 ], [ %385, %103 ]
  %109 = zext i16 %108 to i32
  %110 = and i32 %.013, 1
  %111 = add nsw i32 %110, 0
  %112 = mul nsw i32 2, %111
  %113 = sext i32 %112 to i64
  %114 = getelementptr inbounds i8, i8* %2, i64 %113
  %115 = load i8, i8* %114, align 1
  %116 = zext i8 %115 to i32
  %117 = and i32 %.013, 1
  %118 = add nsw i32 %117, 0
  %119 = mul nsw i32 2, %118
  %120 = add nsw i32 %119, 1
  %121 = sext i32 %120 to i64
  %122 = getelementptr inbounds i8, i8* %2, i64 %121
  %123 = load i8, i8* %122, align 1
  %124 = zext i8 %123 to i32
  %125 = and i32 %124, 255
  %126 = shl i32 %125, 8
  %127 = xor i32 %116, %126
  %128 = xor i32 %109, %127
  %129 = and i32 %128, 255
  %130 = sext i32 %129 to i64
  %131 = getelementptr inbounds [256 x i16], [256 x i16]* getelementptr inbounds ([2 x [256 x i16]], [2 x [256 x i16]]* @TkipSbox, i64 0, i64 0), i64 0, i64 %130
  %132 = load i16, i16* %131, align 2
  %133 = sext i16 %132 to i32
  %134 = zext i16 %108 to i32
  %135 = and i32 %.013, 1
  %136 = add nsw i32 %135, 0
  %137 = mul nsw i32 2, %136
  %138 = sext i32 %137 to i64
  %139 = getelementptr inbounds i8, i8* %2, i64 %138
  %140 = load i8, i8* %139, align 1
  %141 = zext i8 %140 to i32
  %142 = and i32 %.013, 1
  %143 = add nsw i32 %142, 0
  %144 = mul nsw i32 2, %143
  %145 = add nsw i32 %144, 1
  %146 = sext i32 %145 to i64
  %147 = getelementptr inbounds i8, i8* %2, i64 %146
  %148 = load i8, i8* %147, align 1
  %149 = zext i8 %148 to i32
  %150 = and i32 %149, 255
  %151 = shl i32 %150, 8
  %152 = xor i32 %141, %151
  %153 = xor i32 %134, %152
  %154 = ashr i32 %153, 8
  %155 = and i32 %154, 255
  %156 = sext i32 %155 to i64
  %157 = getelementptr inbounds [256 x i16], [256 x i16]* getelementptr inbounds ([2 x [256 x i16]], [2 x [256 x i16]]* @TkipSbox, i64 0, i64 1), i64 0, i64 %156
  %158 = load i16, i16* %157, align 2
  %159 = sext i16 %158 to i32
  %160 = xor i32 %133, %159
  %161 = zext i16 %107 to i32
  %162 = add nsw i32 %161, %160
  %163 = trunc i32 %162 to i16
  %164 = zext i16 %163 to i32
  %165 = and i32 %.013, 1
  %166 = add nsw i32 %165, 2
  %167 = mul nsw i32 2, %166
  %168 = sext i32 %167 to i64
  %169 = getelementptr inbounds i8, i8* %2, i64 %168
  %170 = load i8, i8* %169, align 1
  %171 = zext i8 %170 to i32
  %172 = and i32 %.013, 1
  %173 = add nsw i32 %172, 2
  %174 = mul nsw i32 2, %173
  %175 = add nsw i32 %174, 1
  %176 = sext i32 %175 to i64
  %177 = getelementptr inbounds i8, i8* %2, i64 %176
  %178 = load i8, i8* %177, align 1
  %179 = zext i8 %178 to i32
  %180 = and i32 %179, 255
  %181 = shl i32 %180, 8
  %182 = xor i32 %171, %181
  %183 = xor i32 %164, %182
  %184 = and i32 %183, 255
  %185 = sext i32 %184 to i64
  %186 = getelementptr inbounds [256 x i16], [256 x i16]* getelementptr inbounds ([2 x [256 x i16]], [2 x [256 x i16]]* @TkipSbox, i64 0, i64 0), i64 0, i64 %185
  %187 = load i16, i16* %186, align 2
  %188 = sext i16 %187 to i32
  %189 = zext i16 %163 to i32
  %190 = and i32 %.013, 1
  %191 = add nsw i32 %190, 2
  %192 = mul nsw i32 2, %191
  %193 = sext i32 %192 to i64
  %194 = getelementptr inbounds i8, i8* %2, i64 %193
  %195 = load i8, i8* %194, align 1
  %196 = zext i8 %195 to i32
  %197 = and i32 %.013, 1
  %198 = add nsw i32 %197, 2
  %199 = mul nsw i32 2, %198
  %200 = add nsw i32 %199, 1
  %201 = sext i32 %200 to i64
  %202 = getelementptr inbounds i8, i8* %2, i64 %201
  %203 = load i8, i8* %202, align 1
  %204 = zext i8 %203 to i32
  %205 = and i32 %204, 255
  %206 = shl i32 %205, 8
  %207 = xor i32 %196, %206
  %208 = xor i32 %189, %207
  %209 = ashr i32 %208, 8
  %210 = and i32 %209, 255
  %211 = sext i32 %210 to i64
  %212 = getelementptr inbounds [256 x i16], [256 x i16]* getelementptr inbounds ([2 x [256 x i16]], [2 x [256 x i16]]* @TkipSbox, i64 0, i64 1), i64 0, i64 %211
  %213 = load i16, i16* %212, align 2
  %214 = sext i16 %213 to i32
  %215 = xor i32 %188, %214
  %216 = zext i16 %106 to i32
  %217 = add nsw i32 %216, %215
  %218 = trunc i32 %217 to i16
  %219 = zext i16 %218 to i32
  %220 = and i32 %.013, 1
  %221 = add nsw i32 %220, 4
  %222 = mul nsw i32 2, %221
  %223 = sext i32 %222 to i64
  %224 = getelementptr inbounds i8, i8* %2, i64 %223
  %225 = load i8, i8* %224, align 1
  %226 = zext i8 %225 to i32
  %227 = and i32 %.013, 1
  %228 = add nsw i32 %227, 4
  %229 = mul nsw i32 2, %228
  %230 = add nsw i32 %229, 1
  %231 = sext i32 %230 to i64
  %232 = getelementptr inbounds i8, i8* %2, i64 %231
  %233 = load i8, i8* %232, align 1
  %234 = zext i8 %233 to i32
  %235 = and i32 %234, 255
  %236 = shl i32 %235, 8
  %237 = xor i32 %226, %236
  %238 = xor i32 %219, %237
  %239 = and i32 %238, 255
  %240 = sext i32 %239 to i64
  %241 = getelementptr inbounds [256 x i16], [256 x i16]* getelementptr inbounds ([2 x [256 x i16]], [2 x [256 x i16]]* @TkipSbox, i64 0, i64 0), i64 0, i64 %240
  %242 = load i16, i16* %241, align 2
  %243 = sext i16 %242 to i32
  %244 = zext i16 %218 to i32
  %245 = and i32 %.013, 1
  %246 = add nsw i32 %245, 4
  %247 = mul nsw i32 2, %246
  %248 = sext i32 %247 to i64
  %249 = getelementptr inbounds i8, i8* %2, i64 %248
  %250 = load i8, i8* %249, align 1
  %251 = zext i8 %250 to i32
  %252 = and i32 %.013, 1
  %253 = add nsw i32 %252, 4
  %254 = mul nsw i32 2, %253
  %255 = add nsw i32 %254, 1
  %256 = sext i32 %255 to i64
  %257 = getelementptr inbounds i8, i8* %2, i64 %256
  %258 = load i8, i8* %257, align 1
  %259 = zext i8 %258 to i32
  %260 = and i32 %259, 255
  %261 = shl i32 %260, 8
  %262 = xor i32 %251, %261
  %263 = xor i32 %244, %262
  %264 = ashr i32 %263, 8
  %265 = and i32 %264, 255
  %266 = sext i32 %265 to i64
  %267 = getelementptr inbounds [256 x i16], [256 x i16]* getelementptr inbounds ([2 x [256 x i16]], [2 x [256 x i16]]* @TkipSbox, i64 0, i64 1), i64 0, i64 %266
  %268 = load i16, i16* %267, align 2
  %269 = sext i16 %268 to i32
  %270 = xor i32 %243, %269
  %271 = zext i16 %105 to i32
  %272 = add nsw i32 %271, %270
  %273 = trunc i32 %272 to i16
  %274 = zext i16 %273 to i32
  %275 = and i32 %.013, 1
  %276 = add nsw i32 %275, 6
  %277 = mul nsw i32 2, %276
  %278 = sext i32 %277 to i64
  %279 = getelementptr inbounds i8, i8* %2, i64 %278
  %280 = load i8, i8* %279, align 1
  %281 = zext i8 %280 to i32
  %282 = and i32 %.013, 1
  %283 = add nsw i32 %282, 6
  %284 = mul nsw i32 2, %283
  %285 = add nsw i32 %284, 1
  %286 = sext i32 %285 to i64
  %287 = getelementptr inbounds i8, i8* %2, i64 %286
  %288 = load i8, i8* %287, align 1
  %289 = zext i8 %288 to i32
  %290 = and i32 %289, 255
  %291 = shl i32 %290, 8
  %292 = xor i32 %281, %291
  %293 = xor i32 %274, %292
  %294 = and i32 %293, 255
  %295 = sext i32 %294 to i64
  %296 = getelementptr inbounds [256 x i16], [256 x i16]* getelementptr inbounds ([2 x [256 x i16]], [2 x [256 x i16]]* @TkipSbox, i64 0, i64 0), i64 0, i64 %295
  %297 = load i16, i16* %296, align 2
  %298 = sext i16 %297 to i32
  %299 = zext i16 %273 to i32
  %300 = and i32 %.013, 1
  %301 = add nsw i32 %300, 6
  %302 = mul nsw i32 2, %301
  %303 = sext i32 %302 to i64
  %304 = getelementptr inbounds i8, i8* %2, i64 %303
  %305 = load i8, i8* %304, align 1
  %306 = zext i8 %305 to i32
  %307 = and i32 %.013, 1
  %308 = add nsw i32 %307, 6
  %309 = mul nsw i32 2, %308
  %310 = add nsw i32 %309, 1
  %311 = sext i32 %310 to i64
  %312 = getelementptr inbounds i8, i8* %2, i64 %311
  %313 = load i8, i8* %312, align 1
  %314 = zext i8 %313 to i32
  %315 = and i32 %314, 255
  %316 = shl i32 %315, 8
  %317 = xor i32 %306, %316
  %318 = xor i32 %299, %317
  %319 = ashr i32 %318, 8
  %320 = and i32 %319, 255
  %321 = sext i32 %320 to i64
  %322 = getelementptr inbounds [256 x i16], [256 x i16]* getelementptr inbounds ([2 x [256 x i16]], [2 x [256 x i16]]* @TkipSbox, i64 0, i64 1), i64 0, i64 %321
  %323 = load i16, i16* %322, align 2
  %324 = sext i16 %323 to i32
  %325 = xor i32 %298, %324
  %326 = zext i16 %104 to i32
  %327 = add nsw i32 %326, %325
  %328 = trunc i32 %327 to i16
  %329 = zext i16 %328 to i32
  %330 = and i32 %.013, 1
  %331 = add nsw i32 %330, 0
  %332 = mul nsw i32 2, %331
  %333 = sext i32 %332 to i64
  %334 = getelementptr inbounds i8, i8* %2, i64 %333
  %335 = load i8, i8* %334, align 1
  %336 = zext i8 %335 to i32
  %337 = and i32 %.013, 1
  %338 = add nsw i32 %337, 0
  %339 = mul nsw i32 2, %338
  %340 = add nsw i32 %339, 1
  %341 = sext i32 %340 to i64
  %342 = getelementptr inbounds i8, i8* %2, i64 %341
  %343 = load i8, i8* %342, align 1
  %344 = zext i8 %343 to i32
  %345 = and i32 %344, 255
  %346 = shl i32 %345, 8
  %347 = xor i32 %336, %346
  %348 = xor i32 %329, %347
  %349 = and i32 %348, 255
  %350 = sext i32 %349 to i64
  %351 = getelementptr inbounds [256 x i16], [256 x i16]* getelementptr inbounds ([2 x [256 x i16]], [2 x [256 x i16]]* @TkipSbox, i64 0, i64 0), i64 0, i64 %350
  %352 = load i16, i16* %351, align 2
  %353 = sext i16 %352 to i32
  %354 = zext i16 %328 to i32
  %355 = and i32 %.013, 1
  %356 = add nsw i32 %355, 0
  %357 = mul nsw i32 2, %356
  %358 = sext i32 %357 to i64
  %359 = getelementptr inbounds i8, i8* %2, i64 %358
  %360 = load i8, i8* %359, align 1
  %361 = zext i8 %360 to i32
  %362 = and i32 %.013, 1
  %363 = add nsw i32 %362, 0
  %364 = mul nsw i32 2, %363
  %365 = add nsw i32 %364, 1
  %366 = sext i32 %365 to i64
  %367 = getelementptr inbounds i8, i8* %2, i64 %366
  %368 = load i8, i8* %367, align 1
  %369 = zext i8 %368 to i32
  %370 = and i32 %369, 255
  %371 = shl i32 %370, 8
  %372 = xor i32 %361, %371
  %373 = xor i32 %354, %372
  %374 = ashr i32 %373, 8
  %375 = and i32 %374, 255
  %376 = sext i32 %375 to i64
  %377 = getelementptr inbounds [256 x i16], [256 x i16]* getelementptr inbounds ([2 x [256 x i16]], [2 x [256 x i16]]* @TkipSbox, i64 0, i64 1), i64 0, i64 %376
  %378 = load i16, i16* %377, align 2
  %379 = sext i16 %378 to i32
  %380 = xor i32 %353, %379
  %381 = add nsw i32 %380, %.013
  %382 = zext i16 %108 to i32
  %383 = add nsw i32 %382, %381
  %384 = trunc i32 %383 to i16
  %385 = add nuw nsw i32 %.013, 1
  %exitcond4 = icmp ne i32 %385, 8
  %386 = trunc i32 %380 to i16
  %387 = add i16 %108, %386
  %388 = zext i16 %387 to i32
  %389 = add i32 %388, %385
  %390 = add i32 %389, 65535
  %tmp = trunc i32 %390 to i16
  br i1 %exitcond4, label %103, label %391

; <label>:391:                                    ; preds = %103
  %.lcssa8 = phi i16 [ %328, %103 ]
  %.lcssa6 = phi i16 [ %273, %103 ]
  %.lcssa4 = phi i16 [ %218, %103 ]
  %.lcssa2 = phi i16 [ %163, %103 ]
  %.lcssa = phi i16 [ %tmp, %103 ]
  %392 = and i32 %27, 255
  %393 = getelementptr inbounds [6 x i16], [6 x i16]* %5, i64 0, i64 4
  %394 = getelementptr inbounds [6 x i16], [6 x i16]* %5, i64 0, i64 0
  %395 = getelementptr inbounds [6 x i16], [6 x i16]* %5, i64 0, i64 1
  %396 = getelementptr inbounds [6 x i16], [6 x i16]* %5, i64 0, i64 2
  %397 = getelementptr inbounds [6 x i16], [6 x i16]* %5, i64 0, i64 3
  %398 = getelementptr inbounds [6 x i16], [6 x i16]* %5, i64 0, i64 4
  store i16 %.lcssa, i16* %94, align 2
  store i16 %.lcssa2, i16* %95, align 2
  store i16 %.lcssa4, i16* %97, align 2
  store i16 %.lcssa6, i16* %99, align 2
  store i16 %.lcssa8, i16* %101, align 2
  %399 = icmp ne i32 %1, 0
  %400 = shl i32 %392, 8
  %401 = zext i8 %23 to i32
  %402 = xor i32 %401, %400
  %403 = trunc i32 %402 to i16
  %404 = getelementptr inbounds [6 x i16], [6 x i16]* %5, i64 0, i64 4
  %405 = load i16, i16* %404, align 2
  %406 = zext i16 %405 to i32
  %407 = zext i16 %403 to i32
  %408 = add nsw i32 %406, %407
  %409 = trunc i32 %408 to i16
  %410 = getelementptr inbounds [6 x i16], [6 x i16]* %5, i64 0, i64 5
  store i16 %409, i16* %410, align 2
  %411 = getelementptr inbounds [6 x i16], [6 x i16]* %5, i64 0, i64 5
  %412 = load i16, i16* %411, align 2
  %413 = zext i16 %412 to i32
  %414 = getelementptr inbounds i8, i8* %2, i64 0
  %415 = load i8, i8* %414, align 1
  %416 = zext i8 %415 to i32
  %417 = getelementptr inbounds i8, i8* %2, i64 1
  %418 = load i8, i8* %417, align 1
  %419 = zext i8 %418 to i32
  %420 = and i32 %419, 255
  %421 = shl i32 %420, 8
  %422 = xor i32 %416, %421
  %423 = xor i32 %413, %422
  %424 = and i32 %423, 255
  %425 = sext i32 %424 to i64
  %426 = getelementptr [2 x [256 x i16]], [2 x [256 x i16]]* @TkipSbox, i64 0, i64 0
  %427 = getelementptr inbounds [256 x i16], [256 x i16]* %426, i64 0, i64 %425
  %428 = load i16, i16* %427, align 2
  %429 = sext i16 %428 to i32
  %430 = getelementptr inbounds [6 x i16], [6 x i16]* %5, i64 0, i64 5
  %431 = load i16, i16* %430, align 2
  %432 = zext i16 %431 to i32
  %433 = getelementptr inbounds i8, i8* %2, i64 0
  %434 = load i8, i8* %433, align 1
  %435 = zext i8 %434 to i32
  %436 = getelementptr inbounds i8, i8* %2, i64 1
  %437 = load i8, i8* %436, align 1
  %438 = zext i8 %437 to i32
  %439 = and i32 %438, 255
  %440 = shl i32 %439, 8
  %441 = xor i32 %435, %440
  %442 = xor i32 %432, %441
  %443 = ashr i32 %442, 8
  %444 = and i32 %443, 255
  %445 = sext i32 %444 to i64
  %446 = getelementptr [2 x [256 x i16]], [2 x [256 x i16]]* @TkipSbox, i64 0, i64 1
  %447 = getelementptr inbounds [256 x i16], [256 x i16]* %446, i64 0, i64 %445
  %448 = load i16, i16* %447, align 2
  %449 = sext i16 %448 to i32
  %450 = xor i32 %429, %449
  %451 = getelementptr inbounds [6 x i16], [6 x i16]* %5, i64 0, i64 0
  %452 = load i16, i16* %451, align 2
  %453 = zext i16 %452 to i32
  %454 = add nsw i32 %453, %450
  %455 = trunc i32 %454 to i16
  store i16 %455, i16* %451, align 2
  %456 = getelementptr inbounds [6 x i16], [6 x i16]* %5, i64 0, i64 0
  %457 = load i16, i16* %456, align 2
  %458 = zext i16 %457 to i32
  %459 = getelementptr inbounds i8, i8* %2, i64 2
  %460 = load i8, i8* %459, align 1
  %461 = zext i8 %460 to i32
  %462 = getelementptr inbounds i8, i8* %2, i64 3
  %463 = load i8, i8* %462, align 1
  %464 = zext i8 %463 to i32
  %465 = and i32 %464, 255
  %466 = shl i32 %465, 8
  %467 = xor i32 %461, %466
  %468 = xor i32 %458, %467
  %469 = and i32 %468, 255
  %470 = sext i32 %469 to i64
  %471 = getelementptr [2 x [256 x i16]], [2 x [256 x i16]]* @TkipSbox, i64 0, i64 0
  %472 = getelementptr inbounds [256 x i16], [256 x i16]* %471, i64 0, i64 %470
  %473 = load i16, i16* %472, align 2
  %474 = sext i16 %473 to i32
  %475 = getelementptr inbounds [6 x i16], [6 x i16]* %5, i64 0, i64 0
  %476 = load i16, i16* %475, align 2
  %477 = zext i16 %476 to i32
  %478 = getelementptr inbounds i8, i8* %2, i64 2
  %479 = load i8, i8* %478, align 1
  %480 = zext i8 %479 to i32
  %481 = getelementptr inbounds i8, i8* %2, i64 3
  %482 = load i8, i8* %481, align 1
  %483 = zext i8 %482 to i32
  %484 = and i32 %483, 255
  %485 = shl i32 %484, 8
  %486 = xor i32 %480, %485
  %487 = xor i32 %477, %486
  %488 = ashr i32 %487, 8
  %489 = and i32 %488, 255
  %490 = sext i32 %489 to i64
  %491 = getelementptr [2 x [256 x i16]], [2 x [256 x i16]]* @TkipSbox, i64 0, i64 1
  %492 = getelementptr inbounds [256 x i16], [256 x i16]* %491, i64 0, i64 %490
  %493 = load i16, i16* %492, align 2
  %494 = sext i16 %493 to i32
  %495 = xor i32 %474, %494
  %496 = getelementptr inbounds [6 x i16], [6 x i16]* %5, i64 0, i64 1
  %497 = load i16, i16* %496, align 2
  %498 = zext i16 %497 to i32
  %499 = add nsw i32 %498, %495
  %500 = trunc i32 %499 to i16
  store i16 %500, i16* %496, align 2
  %501 = getelementptr inbounds [6 x i16], [6 x i16]* %5, i64 0, i64 1
  %502 = load i16, i16* %501, align 2
  %503 = zext i16 %502 to i32
  %504 = getelementptr inbounds i8, i8* %2, i64 4
  %505 = load i8, i8* %504, align 1
  %506 = zext i8 %505 to i32
  %507 = getelementptr inbounds i8, i8* %2, i64 5
  %508 = load i8, i8* %507, align 1
  %509 = zext i8 %508 to i32
  %510 = and i32 %509, 255
  %511 = shl i32 %510, 8
  %512 = xor i32 %506, %511
  %513 = xor i32 %503, %512
  %514 = and i32 %513, 255
  %515 = sext i32 %514 to i64
  %516 = getelementptr [2 x [256 x i16]], [2 x [256 x i16]]* @TkipSbox, i64 0, i64 0
  %517 = getelementptr inbounds [256 x i16], [256 x i16]* %516, i64 0, i64 %515
  %518 = load i16, i16* %517, align 2
  %519 = sext i16 %518 to i32
  %520 = getelementptr inbounds [6 x i16], [6 x i16]* %5, i64 0, i64 1
  %521 = load i16, i16* %520, align 2
  %522 = zext i16 %521 to i32
  %523 = getelementptr inbounds i8, i8* %2, i64 4
  %524 = load i8, i8* %523, align 1
  %525 = zext i8 %524 to i32
  %526 = getelementptr inbounds i8, i8* %2, i64 5
  %527 = load i8, i8* %526, align 1
  %528 = zext i8 %527 to i32
  %529 = and i32 %528, 255
  %530 = shl i32 %529, 8
  %531 = xor i32 %525, %530
  %532 = xor i32 %522, %531
  %533 = ashr i32 %532, 8
  %534 = and i32 %533, 255
  %535 = sext i32 %534 to i64
  %536 = getelementptr [2 x [256 x i16]], [2 x [256 x i16]]* @TkipSbox, i64 0, i64 1
  %537 = getelementptr inbounds [256 x i16], [256 x i16]* %536, i64 0, i64 %535
  %538 = load i16, i16* %537, align 2
  %539 = sext i16 %538 to i32
  %540 = xor i32 %519, %539
  %541 = getelementptr inbounds [6 x i16], [6 x i16]* %5, i64 0, i64 2
  %542 = load i16, i16* %541, align 2
  %543 = zext i16 %542 to i32
  %544 = add nsw i32 %543, %540
  %545 = trunc i32 %544 to i16
  store i16 %545, i16* %541, align 2
  %546 = getelementptr inbounds [6 x i16], [6 x i16]* %5, i64 0, i64 2
  %547 = load i16, i16* %546, align 2
  %548 = zext i16 %547 to i32
  %549 = getelementptr inbounds i8, i8* %2, i64 6
  %550 = load i8, i8* %549, align 1
  %551 = zext i8 %550 to i32
  %552 = getelementptr inbounds i8, i8* %2, i64 7
  %553 = load i8, i8* %552, align 1
  %554 = zext i8 %553 to i32
  %555 = and i32 %554, 255
  %556 = shl i32 %555, 8
  %557 = xor i32 %551, %556
  %558 = xor i32 %548, %557
  %559 = and i32 %558, 255
  %560 = sext i32 %559 to i64
  %561 = getelementptr [2 x [256 x i16]], [2 x [256 x i16]]* @TkipSbox, i64 0, i64 0
  %562 = getelementptr inbounds [256 x i16], [256 x i16]* %561, i64 0, i64 %560
  %563 = load i16, i16* %562, align 2
  %564 = sext i16 %563 to i32
  %565 = getelementptr inbounds [6 x i16], [6 x i16]* %5, i64 0, i64 2
  %566 = load i16, i16* %565, align 2
  %567 = zext i16 %566 to i32
  %568 = getelementptr inbounds i8, i8* %2, i64 6
  %569 = load i8, i8* %568, align 1
  %570 = zext i8 %569 to i32
  %571 = getelementptr inbounds i8, i8* %2, i64 7
  %572 = load i8, i8* %571, align 1
  %573 = zext i8 %572 to i32
  %574 = and i32 %573, 255
  %575 = shl i32 %574, 8
  %576 = xor i32 %570, %575
  %577 = xor i32 %567, %576
  %578 = ashr i32 %577, 8
  %579 = and i32 %578, 255
  %580 = sext i32 %579 to i64
  %581 = getelementptr [2 x [256 x i16]], [2 x [256 x i16]]* @TkipSbox, i64 0, i64 1
  %582 = getelementptr inbounds [256 x i16], [256 x i16]* %581, i64 0, i64 %580
  %583 = load i16, i16* %582, align 2
  %584 = sext i16 %583 to i32
  %585 = xor i32 %564, %584
  %586 = getelementptr inbounds [6 x i16], [6 x i16]* %5, i64 0, i64 3
  %587 = load i16, i16* %586, align 2
  %588 = zext i16 %587 to i32
  %589 = add nsw i32 %588, %585
  %590 = trunc i32 %589 to i16
  store i16 %590, i16* %586, align 2
  %591 = getelementptr inbounds [6 x i16], [6 x i16]* %5, i64 0, i64 3
  %592 = load i16, i16* %591, align 2
  %593 = zext i16 %592 to i32
  %594 = getelementptr inbounds i8, i8* %2, i64 8
  %595 = load i8, i8* %594, align 1
  %596 = zext i8 %595 to i32
  %597 = getelementptr inbounds i8, i8* %2, i64 9
  %598 = load i8, i8* %597, align 1
  %599 = zext i8 %598 to i32
  %600 = and i32 %599, 255
  %601 = shl i32 %600, 8
  %602 = xor i32 %596, %601
  %603 = xor i32 %593, %602
  %604 = and i32 %603, 255
  %605 = sext i32 %604 to i64
  %606 = getelementptr [2 x [256 x i16]], [2 x [256 x i16]]* @TkipSbox, i64 0, i64 0
  %607 = getelementptr inbounds [256 x i16], [256 x i16]* %606, i64 0, i64 %605
  %608 = load i16, i16* %607, align 2
  %609 = sext i16 %608 to i32
  %610 = getelementptr inbounds [6 x i16], [6 x i16]* %5, i64 0, i64 3
  %611 = load i16, i16* %610, align 2
  %612 = zext i16 %611 to i32
  %613 = getelementptr inbounds i8, i8* %2, i64 8
  %614 = load i8, i8* %613, align 1
  %615 = zext i8 %614 to i32
  %616 = getelementptr inbounds i8, i8* %2, i64 9
  %617 = load i8, i8* %616, align 1
  %618 = zext i8 %617 to i32
  %619 = and i32 %618, 255
  %620 = shl i32 %619, 8
  %621 = xor i32 %615, %620
  %622 = xor i32 %612, %621
  %623 = ashr i32 %622, 8
  %624 = and i32 %623, 255
  %625 = sext i32 %624 to i64
  %626 = getelementptr [2 x [256 x i16]], [2 x [256 x i16]]* @TkipSbox, i64 0, i64 1
  %627 = getelementptr inbounds [256 x i16], [256 x i16]* %626, i64 0, i64 %625
  %628 = load i16, i16* %627, align 2
  %629 = sext i16 %628 to i32
  %630 = xor i32 %609, %629
  %631 = getelementptr inbounds [6 x i16], [6 x i16]* %5, i64 0, i64 4
  %632 = load i16, i16* %631, align 2
  %633 = zext i16 %632 to i32
  %634 = add nsw i32 %633, %630
  %635 = trunc i32 %634 to i16
  store i16 %635, i16* %631, align 2
  %636 = getelementptr inbounds [6 x i16], [6 x i16]* %5, i64 0, i64 4
  %637 = load i16, i16* %636, align 2
  %638 = zext i16 %637 to i32
  %639 = getelementptr inbounds i8, i8* %2, i64 10
  %640 = load i8, i8* %639, align 1
  %641 = zext i8 %640 to i32
  %642 = getelementptr inbounds i8, i8* %2, i64 11
  %643 = load i8, i8* %642, align 1
  %644 = zext i8 %643 to i32
  %645 = and i32 %644, 255
  %646 = shl i32 %645, 8
  %647 = xor i32 %641, %646
  %648 = xor i32 %638, %647
  %649 = and i32 %648, 255
  %650 = sext i32 %649 to i64
  %651 = getelementptr [2 x [256 x i16]], [2 x [256 x i16]]* @TkipSbox, i64 0, i64 0
  %652 = getelementptr inbounds [256 x i16], [256 x i16]* %651, i64 0, i64 %650
  %653 = load i16, i16* %652, align 2
  %654 = sext i16 %653 to i32
  %655 = getelementptr inbounds [6 x i16], [6 x i16]* %5, i64 0, i64 4
  %656 = load i16, i16* %655, align 2
  %657 = zext i16 %656 to i32
  %658 = getelementptr inbounds i8, i8* %2, i64 10
  %659 = load i8, i8* %658, align 1
  %660 = zext i8 %659 to i32
  %661 = getelementptr inbounds i8, i8* %2, i64 11
  %662 = load i8, i8* %661, align 1
  %663 = zext i8 %662 to i32
  %664 = and i32 %663, 255
  %665 = shl i32 %664, 8
  %666 = xor i32 %660, %665
  %667 = xor i32 %657, %666
  %668 = ashr i32 %667, 8
  %669 = and i32 %668, 255
  %670 = sext i32 %669 to i64
  %671 = getelementptr [2 x [256 x i16]], [2 x [256 x i16]]* @TkipSbox, i64 0, i64 1
  %672 = getelementptr inbounds [256 x i16], [256 x i16]* %671, i64 0, i64 %670
  %673 = load i16, i16* %672, align 2
  %674 = sext i16 %673 to i32
  %675 = xor i32 %654, %674
  %676 = getelementptr inbounds [6 x i16], [6 x i16]* %5, i64 0, i64 5
  %677 = load i16, i16* %676, align 2
  %678 = zext i16 %677 to i32
  %679 = add nsw i32 %678, %675
  %680 = trunc i32 %679 to i16
  store i16 %680, i16* %676, align 2
  %681 = getelementptr inbounds [6 x i16], [6 x i16]* %5, i64 0, i64 5
  %682 = load i16, i16* %681, align 2
  %683 = zext i16 %682 to i32
  %684 = getelementptr inbounds i8, i8* %2, i64 12
  %685 = load i8, i8* %684, align 1
  %686 = zext i8 %685 to i32
  %687 = getelementptr inbounds i8, i8* %2, i64 13
  %688 = load i8, i8* %687, align 1
  %689 = zext i8 %688 to i32
  %690 = and i32 %689, 255
  %691 = shl i32 %690, 8
  %692 = xor i32 %686, %691
  %693 = xor i32 %683, %692
  %694 = ashr i32 %693, 1
  %695 = and i32 %694, 32767
  %696 = getelementptr inbounds [6 x i16], [6 x i16]* %5, i64 0, i64 5
  %697 = load i16, i16* %696, align 2
  %698 = zext i16 %697 to i32
  %699 = getelementptr inbounds i8, i8* %2, i64 12
  %700 = load i8, i8* %699, align 1
  %701 = zext i8 %700 to i32
  %702 = getelementptr inbounds i8, i8* %2, i64 13
  %703 = load i8, i8* %702, align 1
  %704 = zext i8 %703 to i32
  %705 = and i32 %704, 255
  %706 = shl i32 %705, 8
  %707 = xor i32 %701, %706
  %708 = xor i32 %698, %707
  %709 = and i32 %708, 1
  %710 = shl i32 %709, 15
  %711 = xor i32 %695, %710
  %712 = getelementptr inbounds [6 x i16], [6 x i16]* %5, i64 0, i64 0
  %713 = load i16, i16* %712, align 2
  %714 = zext i16 %713 to i32
  %715 = add nsw i32 %714, %711
  %716 = trunc i32 %715 to i16
  store i16 %716, i16* %712, align 2
  %717 = getelementptr inbounds [6 x i16], [6 x i16]* %5, i64 0, i64 0
  %718 = load i16, i16* %717, align 2
  %719 = zext i16 %718 to i32
  %720 = getelementptr inbounds i8, i8* %2, i64 14
  %721 = load i8, i8* %720, align 1
  %722 = zext i8 %721 to i32
  %723 = getelementptr inbounds i8, i8* %2, i64 15
  %724 = load i8, i8* %723, align 1
  %725 = zext i8 %724 to i32
  %726 = and i32 %725, 255
  %727 = shl i32 %726, 8
  %728 = xor i32 %722, %727
  %729 = xor i32 %719, %728
  %730 = ashr i32 %729, 1
  %731 = and i32 %730, 32767
  %732 = getelementptr inbounds [6 x i16], [6 x i16]* %5, i64 0, i64 0
  %733 = load i16, i16* %732, align 2
  %734 = zext i16 %733 to i32
  %735 = getelementptr inbounds i8, i8* %2, i64 14
  %736 = load i8, i8* %735, align 1
  %737 = zext i8 %736 to i32
  %738 = getelementptr inbounds i8, i8* %2, i64 15
  %739 = load i8, i8* %738, align 1
  %740 = zext i8 %739 to i32
  %741 = and i32 %740, 255
  %742 = shl i32 %741, 8
  %743 = xor i32 %737, %742
  %744 = xor i32 %734, %743
  %745 = and i32 %744, 1
  %746 = shl i32 %745, 15
  %747 = xor i32 %731, %746
  %748 = getelementptr inbounds [6 x i16], [6 x i16]* %5, i64 0, i64 1
  %749 = load i16, i16* %748, align 2
  %750 = zext i16 %749 to i32
  %751 = add nsw i32 %750, %747
  %752 = trunc i32 %751 to i16
  store i16 %752, i16* %748, align 2
  %753 = getelementptr inbounds [6 x i16], [6 x i16]* %5, i64 0, i64 1
  %754 = load i16, i16* %753, align 2
  %755 = zext i16 %754 to i32
  %756 = ashr i32 %755, 1
  %757 = and i32 %756, 32767
  %758 = getelementptr inbounds [6 x i16], [6 x i16]* %5, i64 0, i64 1
  %759 = load i16, i16* %758, align 2
  %760 = zext i16 %759 to i32
  %761 = and i32 %760, 1
  %762 = shl i32 %761, 15
  %763 = xor i32 %757, %762
  %764 = getelementptr inbounds [6 x i16], [6 x i16]* %5, i64 0, i64 2
  %765 = load i16, i16* %764, align 2
  %766 = zext i16 %765 to i32
  %767 = add nsw i32 %766, %763
  %768 = trunc i32 %767 to i16
  store i16 %768, i16* %764, align 2
  %769 = getelementptr inbounds [6 x i16], [6 x i16]* %5, i64 0, i64 2
  %770 = load i16, i16* %769, align 2
  %771 = zext i16 %770 to i32
  %772 = ashr i32 %771, 1
  %773 = and i32 %772, 32767
  %774 = getelementptr inbounds [6 x i16], [6 x i16]* %5, i64 0, i64 2
  %775 = load i16, i16* %774, align 2
  %776 = zext i16 %775 to i32
  %777 = and i32 %776, 1
  %778 = shl i32 %777, 15
  %779 = xor i32 %773, %778
  %780 = getelementptr inbounds [6 x i16], [6 x i16]* %5, i64 0, i64 3
  %781 = load i16, i16* %780, align 2
  %782 = zext i16 %781 to i32
  %783 = add nsw i32 %782, %779
  %784 = trunc i32 %783 to i16
  store i16 %784, i16* %780, align 2
  %785 = getelementptr inbounds [6 x i16], [6 x i16]* %5, i64 0, i64 3
  %786 = load i16, i16* %785, align 2
  %787 = zext i16 %786 to i32
  %788 = ashr i32 %787, 1
  %789 = and i32 %788, 32767
  %790 = getelementptr inbounds [6 x i16], [6 x i16]* %5, i64 0, i64 3
  %791 = load i16, i16* %790, align 2
  %792 = zext i16 %791 to i32
  %793 = and i32 %792, 1
  %794 = shl i32 %793, 15
  %795 = xor i32 %789, %794
  %796 = getelementptr inbounds [6 x i16], [6 x i16]* %5, i64 0, i64 4
  %797 = load i16, i16* %796, align 2
  %798 = zext i16 %797 to i32
  %799 = add nsw i32 %798, %795
  %800 = trunc i32 %799 to i16
  store i16 %800, i16* %796, align 2
  %801 = getelementptr inbounds [6 x i16], [6 x i16]* %5, i64 0, i64 4
  %802 = load i16, i16* %801, align 2
  %803 = zext i16 %802 to i32
  %804 = ashr i32 %803, 1
  %805 = and i32 %804, 32767
  %806 = getelementptr inbounds [6 x i16], [6 x i16]* %5, i64 0, i64 4
  %807 = load i16, i16* %806, align 2
  %808 = zext i16 %807 to i32
  %809 = and i32 %808, 1
  %810 = shl i32 %809, 15
  %811 = xor i32 %805, %810
  %812 = getelementptr inbounds [6 x i16], [6 x i16]* %5, i64 0, i64 5
  %813 = load i16, i16* %812, align 2
  %814 = zext i16 %813 to i32
  %815 = add nsw i32 %814, %811
  %816 = trunc i32 %815 to i16
  store i16 %816, i16* %812, align 2
  %817 = zext i16 %403 to i32
  %818 = ashr i32 %817, 8
  %819 = and i32 %818, 255
  %820 = trunc i32 %819 to i8
  %821 = getelementptr inbounds i8, i8* %3, i64 0
  store i8 %820, i8* %821, align 1
  %822 = zext i16 %403 to i32
  %823 = ashr i32 %822, 8
  %824 = and i32 %823, 255
  %825 = or i32 %824, 32
  %826 = and i32 %825, 127
  %827 = trunc i32 %826 to i8
  %828 = getelementptr inbounds i8, i8* %3, i64 1
  store i8 %827, i8* %828, align 1
  %829 = zext i16 %403 to i32
  %830 = and i32 %829, 255
  %831 = trunc i32 %830 to i8
  %832 = getelementptr inbounds i8, i8* %3, i64 2
  store i8 %831, i8* %832, align 1
  %833 = getelementptr inbounds [6 x i16], [6 x i16]* %5, i64 0, i64 5
  %834 = load i16, i16* %833, align 2
  %835 = zext i16 %834 to i32
  %836 = getelementptr inbounds i8, i8* %2, i64 0
  %837 = load i8, i8* %836, align 1
  %838 = zext i8 %837 to i32
  %839 = getelementptr inbounds i8, i8* %2, i64 1
  %840 = load i8, i8* %839, align 1
  %841 = zext i8 %840 to i32
  %842 = and i32 %841, 255
  %843 = shl i32 %842, 8
  %844 = xor i32 %838, %843
  %845 = xor i32 %835, %844
  %846 = ashr i32 %845, 1
  %847 = and i32 %846, 255
  %848 = trunc i32 %847 to i8
  %849 = getelementptr inbounds i8, i8* %3, i64 3
  store i8 %848, i8* %849, align 1
  %scevgep10 = getelementptr i8, i8* %3, i64 5
  br label %850

; <label>:850:                                    ; preds = %391, %850
  %indvars.iv = phi i64 [ 0, %391 ], [ %indvars.iv.next, %850 ]
  %scevgep = getelementptr [6 x i16], [6 x i16]* %5, i64 0, i64 %indvars.iv
  %851 = load i16, i16* %scevgep, align 2
  %852 = zext i16 %851 to i32
  %853 = and i32 %852, 255
  %854 = trunc i32 %853 to i8
  %855 = shl i64 %indvars.iv, 1
  %scevgep11 = getelementptr i8, i8* %scevgep10, i64 %855
  %scevgep12 = getelementptr i8, i8* %scevgep11, i64 -1
  store i8 %854, i8* %scevgep12, align 1
  %scevgep9 = getelementptr [6 x i16], [6 x i16]* %5, i64 0, i64 %indvars.iv
  %856 = load i16, i16* %scevgep9, align 2
  %857 = zext i16 %856 to i32
  %858 = ashr i32 %857, 8
  %859 = and i32 %858, 255
  %860 = trunc i32 %859 to i8
  %861 = shl i64 %indvars.iv, 1
  %scevgep13 = getelementptr i8, i8* %scevgep10, i64 %861
  store i8 %860, i8* %scevgep13, align 1
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp ne i64 %indvars.iv.next, 6
  br i1 %exitcond, label %850, label %862

; <label>:862:                                    ; preds = %850
  %863 = zext i1 %10 to i64
  ret i32 0
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @decrypt_tkip(i8*, i32, i8*) #0 {
  %4 = alloca [16 x i8], align 16
  %5 = getelementptr inbounds i8, i8* %0, i64 1
  %6 = load i8, i8* %5, align 1
  %7 = zext i8 %6 to i32
  %8 = and i32 %7, 3
  %9 = icmp ne i32 %8, 3
  %10 = zext i1 %9 to i64
  %11 = select i1 %9, i32 24, i32 30
  %12 = getelementptr inbounds i8, i8* %0, i64 0
  %13 = load i8, i8* %12, align 1
  %14 = zext i8 %13 to i32
  %15 = and i32 %14, 240
  %16 = ashr i32 %15, 4
  %17 = shl i32 %16, 4
  %18 = icmp eq i32 %17, 128
  %19 = add nsw i32 %11, 2
  %spec.select = select i1 %18, i32 %19, i32 %11
  %20 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i32 0, i32 0
  %21 = call i32 @calc_tkip_ppk(i8* %0, i32 %1, i8* %2, i8* %20)
  %22 = sext i32 %spec.select to i64
  %23 = getelementptr inbounds i8, i8* %0, i64 %22
  %24 = getelementptr inbounds i8, i8* %23, i64 8
  %25 = sub nsw i32 %1, %spec.select
  %26 = sub nsw i32 %25, 8
  %27 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i32 0, i32 0
  %28 = call i32 @decrypt_wep(i8* %24, i32 %26, i8* %27, i32 16)
  ret i32 %28
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @decrypt_ccmp(i8*, i32, i8*) #0 {
  %4 = alloca [16 x i8], align 16
  %5 = alloca [16 x i8], align 16
  %6 = alloca [16 x i8], align 16
  %7 = alloca [6 x i8], align 1
  %8 = alloca [32 x i8], align 16
  %9 = alloca %struct.aes_key_st, align 4
  %10 = getelementptr inbounds i8, i8* %0, i64 1
  %11 = load i8, i8* %10, align 1
  %12 = zext i8 %11 to i32
  %13 = and i32 %12, 3
  %14 = icmp eq i32 %13, 3
  %15 = zext i1 %14 to i32
  %16 = mul nsw i32 6, %15
  %17 = add nsw i32 24, %16
  %18 = add nsw i32 %17, 7
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds i8, i8* %0, i64 %19
  %21 = load i8, i8* %20, align 1
  %22 = getelementptr inbounds [6 x i8], [6 x i8]* %7, i64 0, i64 0
  store i8 %21, i8* %22, align 1
  %23 = add nsw i32 %17, 6
  %24 = sext i32 %23 to i64
  %25 = getelementptr inbounds i8, i8* %0, i64 %24
  %26 = load i8, i8* %25, align 1
  %27 = getelementptr inbounds [6 x i8], [6 x i8]* %7, i64 0, i64 1
  store i8 %26, i8* %27, align 1
  %28 = add nsw i32 %17, 5
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds i8, i8* %0, i64 %29
  %31 = load i8, i8* %30, align 1
  %32 = getelementptr inbounds [6 x i8], [6 x i8]* %7, i64 0, i64 2
  store i8 %31, i8* %32, align 1
  %33 = add nsw i32 %17, 4
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds i8, i8* %0, i64 %34
  %36 = load i8, i8* %35, align 1
  %37 = getelementptr inbounds [6 x i8], [6 x i8]* %7, i64 0, i64 3
  store i8 %36, i8* %37, align 1
  %38 = add nsw i32 %17, 1
  %39 = sext i32 %38 to i64
  %40 = getelementptr inbounds i8, i8* %0, i64 %39
  %41 = load i8, i8* %40, align 1
  %42 = getelementptr inbounds [6 x i8], [6 x i8]* %7, i64 0, i64 4
  store i8 %41, i8* %42, align 1
  %43 = add nsw i32 %17, 0
  %44 = sext i32 %43 to i64
  %45 = getelementptr inbounds i8, i8* %0, i64 %44
  %46 = load i8, i8* %45, align 1
  %47 = getelementptr inbounds [6 x i8], [6 x i8]* %7, i64 0, i64 5
  store i8 %46, i8* %47, align 1
  %48 = sub nsw i32 %1, %17
  %49 = sub nsw i32 %48, 8
  %50 = sub nsw i32 %49, 8
  %51 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  store i8 89, i8* %51, align 16
  %52 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 1
  store i8 0, i8* %52, align 1
  %53 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i32 0, i32 0
  %54 = getelementptr inbounds i8, i8* %53, i64 2
  %55 = getelementptr inbounds i8, i8* %0, i64 10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %54, i8* align 1 %55, i64 6, i1 false)
  %56 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i32 0, i32 0
  %57 = getelementptr inbounds i8, i8* %56, i64 8
  %58 = getelementptr inbounds [6 x i8], [6 x i8]* %7, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %57, i8* align 1 %58, i64 6, i1 false)
  %59 = ashr i32 %50, 8
  %60 = and i32 %59, 255
  %61 = trunc i32 %60 to i8
  %62 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 14
  store i8 %61, i8* %62, align 2
  %63 = and i32 %50, 255
  %64 = trunc i32 %63 to i8
  %65 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 15
  store i8 %64, i8* %65, align 1
  %66 = getelementptr inbounds [32 x i8], [32 x i8]* %8, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* align 16 %66, i8 0, i64 32, i1 false)
  %67 = mul nsw i32 6, %15
  %68 = add nsw i32 22, %67
  %69 = trunc i32 %68 to i8
  %70 = getelementptr inbounds [32 x i8], [32 x i8]* %8, i64 0, i64 1
  store i8 %69, i8* %70, align 1
  %71 = getelementptr inbounds i8, i8* %0, i64 0
  %72 = load i8, i8* %71, align 1
  %73 = zext i8 %72 to i32
  %74 = and i32 %73, 143
  %75 = trunc i32 %74 to i8
  %76 = getelementptr inbounds [32 x i8], [32 x i8]* %8, i64 0, i64 2
  store i8 %75, i8* %76, align 2
  %77 = getelementptr inbounds i8, i8* %0, i64 1
  %78 = load i8, i8* %77, align 1
  %79 = zext i8 %78 to i32
  %80 = and i32 %79, 199
  %81 = trunc i32 %80 to i8
  %82 = getelementptr inbounds [32 x i8], [32 x i8]* %8, i64 0, i64 3
  store i8 %81, i8* %82, align 1
  %83 = getelementptr inbounds [32 x i8], [32 x i8]* %8, i32 0, i32 0
  %84 = getelementptr inbounds i8, i8* %83, i64 4
  %85 = getelementptr inbounds i8, i8* %0, i64 4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %84, i8* align 1 %85, i64 18, i1 false)
  %86 = getelementptr inbounds i8, i8* %0, i64 22
  %87 = load i8, i8* %86, align 1
  %88 = zext i8 %87 to i32
  %89 = and i32 %88, 15
  %90 = trunc i32 %89 to i8
  %91 = getelementptr inbounds [32 x i8], [32 x i8]* %8, i64 0, i64 22
  store i8 %90, i8* %91, align 2
  %92 = icmp ne i32 %15, 0
  br i1 %92, label %93, label %97

; <label>:93:                                     ; preds = %3
  %94 = getelementptr inbounds [32 x i8], [32 x i8]* %8, i32 0, i32 0
  %95 = getelementptr inbounds i8, i8* %94, i64 24
  %96 = getelementptr inbounds i8, i8* %0, i64 24
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %95, i8* align 1 %96, i64 6, i1 false)
  br label %97

; <label>:97:                                     ; preds = %93, %3
  %98 = call i32 @AES_set_encrypt_key(i8* %2, i32 128, %struct.aes_key_st* %9)
  %99 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i32 0, i32 0
  %100 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 0
  call void @AES_encrypt(i8* %99, i8* %100, %struct.aes_key_st* %9)
  %101 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 0
  %102 = getelementptr inbounds [32 x i8], [32 x i8]* %8, i32 0, i32 0
  call void @XOR(i8* %101, i8* %102, i32 16)
  %103 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 0
  %104 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 0
  call void @AES_encrypt(i8* %103, i8* %104, %struct.aes_key_st* %9)
  %105 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 0
  %106 = getelementptr inbounds [32 x i8], [32 x i8]* %8, i32 0, i32 0
  %107 = getelementptr inbounds i8, i8* %106, i64 16
  call void @XOR(i8* %105, i8* %107, i32 16)
  %108 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 0
  %109 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 0
  call void @AES_encrypt(i8* %108, i8* %109, %struct.aes_key_st* %9)
  %110 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  %111 = load i8, i8* %110, align 16
  %112 = zext i8 %111 to i32
  %113 = and i32 %112, 7
  %114 = trunc i32 %113 to i8
  store i8 %114, i8* %110, align 16
  %115 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 15
  store i8 0, i8* %115, align 1
  %116 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 14
  store i8 0, i8* %116, align 2
  %117 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i32 0, i32 0
  %118 = getelementptr inbounds [16 x i8], [16 x i8]* %5, i32 0, i32 0
  call void @AES_encrypt(i8* %117, i8* %118, %struct.aes_key_st* %9)
  %119 = sext i32 %1 to i64
  %120 = getelementptr inbounds i8, i8* %0, i64 %119
  %121 = getelementptr inbounds i8, i8* %120, i64 -8
  %122 = getelementptr inbounds [16 x i8], [16 x i8]* %5, i32 0, i32 0
  call void @XOR(i8* %121, i8* %122, i32 8)
  %123 = add nsw i32 %50, 16
  %124 = sub nsw i32 %123, 1
  %125 = sdiv i32 %124, 16
  %126 = srem i32 %50, 16
  %127 = add nsw i32 %17, 8
  %128 = icmp sle i32 1, %125
  br i1 %128, label %.lr.ph.preheader, label %._crit_edge

.lr.ph.preheader:                                 ; preds = %97
  %129 = icmp sgt i32 %126, 0
  %130 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 14
  %131 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 15
  %132 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i32 0, i32 0
  %133 = getelementptr inbounds [16 x i8], [16 x i8]* %5, i32 0, i32 0
  %134 = getelementptr inbounds [16 x i8], [16 x i8]* %5, i32 0, i32 0
  %135 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 0
  %136 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 0
  %137 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 0
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %.lr.ph
  %.03 = phi i32 [ %149, %.lr.ph ], [ %127, %.lr.ph.preheader ]
  %.012 = phi i32 [ %150, %.lr.ph ], [ 1, %.lr.ph.preheader ]
  %138 = icmp eq i32 %125, %.012
  %or.cond = and i1 %129, %138
  %139 = select i1 %or.cond, i32 %126, i32 16
  %140 = ashr i32 %.012, 8
  %141 = and i32 %140, 255
  %142 = trunc i32 %141 to i8
  store i8 %142, i8* %130, align 2
  %143 = and i32 %.012, 255
  %144 = trunc i32 %143 to i8
  store i8 %144, i8* %131, align 1
  call void @AES_encrypt(i8* %132, i8* %133, %struct.aes_key_st* %9)
  %145 = sext i32 %.03 to i64
  %146 = getelementptr inbounds i8, i8* %0, i64 %145
  call void @XOR(i8* %146, i8* %134, i32 %139)
  %147 = sext i32 %.03 to i64
  %148 = getelementptr inbounds i8, i8* %0, i64 %147
  call void @XOR(i8* %135, i8* %148, i32 %139)
  call void @AES_encrypt(i8* %136, i8* %137, %struct.aes_key_st* %9)
  %149 = add nsw i32 %.03, %139
  %150 = add nuw nsw i32 %.012, 1
  %151 = icmp sle i32 %150, %125
  br i1 %151, label %.lr.ph, label %._crit_edge.loopexit

._crit_edge.loopexit:                             ; preds = %.lr.ph
  %.0.lcssa.ph = phi i32 [ %149, %.lr.ph ]
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %97
  %.0.lcssa = phi i32 [ %127, %97 ], [ %.0.lcssa.ph, %._crit_edge.loopexit ]
  %152 = sext i32 %.0.lcssa to i64
  %153 = getelementptr inbounds i8, i8* %0, i64 %152
  %154 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 0
  %155 = call i32 @memcmp(i8* %153, i8* %154, i64 8) #10
  %156 = icmp eq i32 %155, 0
  %157 = zext i1 %156 to i32
  ret i32 %157
}

declare dso_local i32 @AES_set_encrypt_key(i8*, i32, %struct.aes_key_st*) #1

declare dso_local void @AES_encrypt(i8*, i8*, %struct.aes_key_st*) #1

; Function Attrs: noinline nounwind uwtable
define internal void @XOR(i8*, i8*, i32) #0 {
  %4 = icmp slt i32 0, %2
  br i1 %4, label %.lr.ph, label %._crit_edge

.lr.ph:                                           ; preds = %3
  %5 = zext i32 %2 to i64
  br label %6

; <label>:6:                                      ; preds = %.lr.ph, %6
  %indvars.iv = phi i64 [ 0, %.lr.ph ], [ %indvars.iv.next, %6 ]
  %scevgep = getelementptr i8, i8* %1, i64 %indvars.iv
  %7 = load i8, i8* %scevgep, align 1
  %8 = zext i8 %7 to i32
  %scevgep1 = getelementptr i8, i8* %0, i64 %indvars.iv
  %9 = load i8, i8* %scevgep1, align 1
  %10 = zext i8 %9 to i32
  %11 = xor i32 %10, %8
  %12 = trunc i32 %11 to i8
  store i8 %12, i8* %scevgep1, align 1
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond1 = icmp ne i64 %5, %indvars.iv.next
  br i1 %exitcond1, label %6, label %._crit_edge.loopexit

._crit_edge.loopexit:                             ; preds = %6
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @get_ram_size() #0 {
  %1 = alloca [256 x i8], align 16
  %2 = alloca i32, align 4
  store i32 0, i32* %2, align 4
  %3 = getelementptr [14 x i8], [14 x i8]* @.str.186, i32 0, i32 0
  %4 = getelementptr [2 x i8], [2 x i8]* @.str.1.187, i32 0, i32 0
  %5 = call %struct._IO_FILE* @fopen64(i8* %3, i8* %4)
  %6 = icmp ne %struct._IO_FILE* %5, null
  br i1 %6, label %9, label %7

; <label>:7:                                      ; preds = %0
  %8 = getelementptr [12 x i8], [12 x i8]* @.str.2.188, i32 0, i32 0
  call void @perror(i8* %8)
  br label %23

; <label>:9:                                      ; preds = %0
  %10 = getelementptr inbounds [256 x i8], [256 x i8]* %1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* align 16 %10, i8 0, i64 256, i1 false)
  %11 = getelementptr inbounds [256 x i8], [256 x i8]* %1, i32 0, i32 0
  %12 = getelementptr [6 x i8], [6 x i8]* @.str.3.189, i32 0, i32 0
  %13 = call i32 (%struct._IO_FILE*, i8*, ...) @__isoc99_fscanf(%struct._IO_FILE* %5, i8* %12, i8* %11, i32* %2)
  %14 = icmp ne i32 %13, 0
  %spec.select2 = select i1 %14, i1 true, i1 false
  br i1 %spec.select2, label %.lr.ph.preheader, label %._crit_edge

.lr.ph.preheader:                                 ; preds = %9
  %15 = getelementptr inbounds [256 x i8], [256 x i8]* %1, i32 0, i32 0
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %.lr.ph
  %.013 = phi i32 [ %spec.select1, %.lr.ph ], [ -1, %.lr.ph.preheader ]
  %16 = call i32 @strncmp(i8* %15, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4.190, i64 0, i64 0), i64 8) #10
  %17 = icmp ne i32 %16, 0
  %18 = load i32, i32* %2, align 4
  %spec.select1 = select i1 %17, i32 %.013, i32 %18
  %19 = call i32 (%struct._IO_FILE*, i8*, ...) @__isoc99_fscanf(%struct._IO_FILE* %5, i8* %12, i8* %11, i32* %2)
  %20 = icmp ne i32 %19, 0
  %21 = icmp eq i32 %spec.select1, -1
  %spec.select = select i1 %20, i1 %21, i1 false
  br i1 %spec.select, label %.lr.ph, label %._crit_edge.loopexit

._crit_edge.loopexit:                             ; preds = %.lr.ph
  %.01.lcssa.ph = phi i32 [ %spec.select1, %.lr.ph ]
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %9
  %.01.lcssa = phi i32 [ -1, %9 ], [ %.01.lcssa.ph, %._crit_edge.loopexit ]
  %22 = call i32 @fclose(%struct._IO_FILE* %5)
  br label %23

; <label>:23:                                     ; preds = %._crit_edge, %7
  %.0 = phi i32 [ %.01.lcssa, %._crit_edge ], [ -1, %7 ]
  ret i32 %.0
}

declare dso_local i32 @__isoc99_fscanf(%struct._IO_FILE*, i8*, ...) #1

; Function Attrs: nounwind readonly
declare dso_local i32 @strncmp(i8*, i8*, i64) #3

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @getVersion(i8*, i32, i32, i32, i32, i32, i32) #8 {
  %8 = call noalias i8* @calloc(i64 1, i64 20) #9
  %9 = call i64 @strlen(i8* %0) #10
  %10 = add i64 %9, 200
  %11 = trunc i64 %10 to i32
  %12 = sext i32 %11 to i64
  %13 = call noalias i8* @calloc(i64 1, i64 %12) #9
  %14 = sext i32 %11 to i64
  %15 = getelementptr [9 x i8], [9 x i8]* @.str.5.193, i32 0, i32 0
  %16 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %13, i64 %14, i8* %15, i8* %0, i32 %1, i32 %2) #9
  %17 = icmp sgt i32 %3, 0
  br i1 %17, label %18, label %25

; <label>:18:                                     ; preds = %7
  %19 = getelementptr [4 x i8], [4 x i8]* @.str.6.194, i32 0, i32 0
  %20 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %8, i64 20, i8* %19, i32 %3) #9
  %21 = sext i32 %11 to i64
  %22 = call i64 @strlen(i8* %13) #10
  %23 = sub i64 %21, %22
  %24 = call i8* @strncat(i8* %13, i8* %8, i64 %23) #9
  call void @llvm.memset.p0i8.i64(i8* align 1 %8, i8 0, i64 20, i1 false)
  br label %25

; <label>:25:                                     ; preds = %18, %7
  %26 = icmp sgt i32 %6, 0
  br i1 %26, label %27, label %34

; <label>:27:                                     ; preds = %25
  %28 = getelementptr [6 x i8], [6 x i8]* @.str.7.195, i32 0, i32 0
  %29 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %8, i64 20, i8* %28, i32 %6) #9
  %30 = sext i32 %11 to i64
  %31 = call i64 @strlen(i8* %13) #10
  %32 = sub i64 %30, %31
  %33 = call i8* @strncat(i8* %13, i8* %8, i64 %32) #9
  call void @llvm.memset.p0i8.i64(i8* align 1 %8, i8 0, i64 20, i1 false)
  br label %43

; <label>:34:                                     ; preds = %25
  %35 = icmp sgt i32 %5, 0
  br i1 %35, label %36, label %43

; <label>:36:                                     ; preds = %34
  %37 = getelementptr [8 x i8], [8 x i8]* @.str.8.196, i32 0, i32 0
  %38 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %8, i64 20, i8* %37, i32 %5) #9
  %39 = sext i32 %11 to i64
  %40 = call i64 @strlen(i8* %13) #10
  %41 = sub i64 %39, %40
  %42 = call i8* @strncat(i8* %13, i8* %8, i64 %41) #9
  call void @llvm.memset.p0i8.i64(i8* align 1 %8, i8 0, i64 20, i1 false)
  br label %43

; <label>:43:                                     ; preds = %34, %36, %27
  %44 = icmp sgt i32 %4, 0
  br i1 %44, label %45, label %52

; <label>:45:                                     ; preds = %43
  %46 = getelementptr [5 x i8], [5 x i8]* @.str.9.197, i32 0, i32 0
  %47 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %8, i64 20, i8* %46, i32 %4) #9
  %48 = sext i32 %11 to i64
  %49 = call i64 @strlen(i8* %13) #10
  %50 = sub i64 %48, %49
  %51 = call i8* @strncat(i8* %13, i8* %8, i64 %50) #9
  call void @llvm.memset.p0i8.i64(i8* align 1 %8, i8 0, i64 20, i1 false)
  br label %52

; <label>:52:                                     ; preds = %45, %43
  call void @free(i8* %8) #9
  %53 = call i64 @strlen(i8* %13) #10
  %54 = add i64 %53, 1
  %55 = call i8* @realloc(i8* %13, i64 %54) #9, !track !255
  ret i8* %55
}

; Function Attrs: nounwind
declare dso_local i8* @strncat(i8*, i8*, i64) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @get_nb_cpus() #0 {
  %1 = getelementptr [14 x i8], [14 x i8]* @.str.10.200, i32 0, i32 0
  %2 = getelementptr [2 x i8], [2 x i8]* @.str.1.187, i32 0, i32 0
  %3 = call %struct._IO_FILE* @fopen64(i8* %1, i8* %2)
  %4 = icmp ne %struct._IO_FILE* %3, null
  br i1 %4, label %5, label %23

; <label>:5:                                      ; preds = %0
  %6 = call noalias i8* @calloc(i64 1, i64 81) #9
  %7 = icmp ne i8* %6, null
  br i1 %7, label %8, label %21

; <label>:8:                                      ; preds = %5
  %9 = call i8* @fgets(i8* %6, i32 80, %struct._IO_FILE* %3)
  %10 = icmp ne i8* %9, null
  br i1 %10, label %.lr.ph.preheader, label %._crit_edge

.lr.ph.preheader:                                 ; preds = %8
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %17
  %.01 = phi i32 [ %.1, %17 ], [ -2, %.lr.ph.preheader ]
  %11 = call i8* @strstr(i8* %6, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.11.201, i64 0, i64 0)) #10
  %12 = icmp eq i8* %11, %6
  br i1 %12, label %13, label %17

; <label>:13:                                     ; preds = %.lr.ph
  %14 = call i8* @strchr(i8* %6, i32 58) #10
  %15 = getelementptr inbounds i8, i8* %14, i64 1
  %16 = call i32 @atoi(i8* %15) #10
  br label %17

; <label>:17:                                     ; preds = %13, %.lr.ph
  %.1 = phi i32 [ %16, %13 ], [ %.01, %.lr.ph ]
  %18 = call i8* @fgets(i8* %6, i32 80, %struct._IO_FILE* %3)
  %19 = icmp ne i8* %18, null
  br i1 %19, label %.lr.ph, label %._crit_edge.loopexit

._crit_edge.loopexit:                             ; preds = %17
  %.0.lcssa.ph = phi i32 [ %.1, %17 ]
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %8
  %.0.lcssa = phi i32 [ -2, %8 ], [ %.0.lcssa.ph, %._crit_edge.loopexit ]
  %20 = add nsw i32 %.0.lcssa, 1
  call void @free(i8* %6) #9
  br label %21

; <label>:21:                                     ; preds = %._crit_edge, %5
  %.2 = phi i32 [ %20, %._crit_edge ], [ -1, %5 ]
  %22 = call i32 @fclose(%struct._IO_FILE* %3)
  br label %23

; <label>:23:                                     ; preds = %21, %0
  %.3 = phi i32 [ %.2, %21 ], [ -1, %0 ]
  %24 = icmp eq i32 %.3, -1
  br i1 %24, label %25, label %29

; <label>:25:                                     ; preds = %23
  %26 = call i64 @sysconf(i32 84) #9
  %27 = trunc i64 %26 to i32
  %28 = icmp slt i32 %27, 1
  %spec.select = select i1 %28, i32 -1, i32 %27
  br label %29

; <label>:29:                                     ; preds = %25, %23
  %.5 = phi i32 [ %spec.select, %25 ], [ %.3, %23 ]
  ret i32 %.5
}

; Function Attrs: nounwind readonly
declare dso_local i8* @strstr(i8*, i8*) #3

; Function Attrs: nounwind readonly
declare dso_local i8* @strchr(i8*, i32) #3

; Function Attrs: nounwind
declare dso_local i64 @sysconf(i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @maccmp(i8*, i8*) #0 {
  %3 = icmp eq i8* %0, null
  %4 = icmp eq i8* %1, null
  %or.cond = or i1 %3, %4
  br i1 %or.cond, label %.loopexit, label %.preheader.preheader

.preheader.preheader:                             ; preds = %2
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %12
  %indvars.iv = phi i64 [ %indvars.iv.next, %12 ], [ 0, %.preheader.preheader ]
  %scevgep = getelementptr i8, i8* %0, i64 %indvars.iv
  %5 = load i8, i8* %scevgep, align 1
  %6 = zext i8 %5 to i32
  %7 = call i32 @toupper(i32 %6) #10
  %scevgep1 = getelementptr i8, i8* %1, i64 %indvars.iv
  %8 = load i8, i8* %scevgep1, align 1
  %9 = zext i8 %8 to i32
  %10 = call i32 @toupper(i32 %9) #10
  %11 = icmp ne i32 %7, %10
  br i1 %11, label %.loopexit.loopexit, label %12

; <label>:12:                                     ; preds = %.preheader
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %13 = icmp ult i64 %indvars.iv.next, 6
  br i1 %13, label %.preheader, label %.loopexit.loopexit

.loopexit.loopexit:                               ; preds = %.preheader, %12
  %.0.ph = phi i32 [ -1, %.preheader ], [ 0, %12 ]
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit.loopexit, %2
  %.0 = phi i32 [ -1, %2 ], [ %.0.ph, %.loopexit.loopexit ]
  ret i32 %.0
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @mac2string(i8*) #0 {
  %2 = call noalias i8* @malloc(i64 18) #9
  %3 = load i8, i8* %0, align 1
  %4 = zext i8 %3 to i32
  %5 = getelementptr inbounds i8, i8* %0, i64 1
  %6 = load i8, i8* %5, align 1
  %7 = zext i8 %6 to i32
  %8 = getelementptr inbounds i8, i8* %0, i64 2
  %9 = load i8, i8* %8, align 1
  %10 = zext i8 %9 to i32
  %11 = getelementptr inbounds i8, i8* %0, i64 3
  %12 = load i8, i8* %11, align 1
  %13 = zext i8 %12 to i32
  %14 = getelementptr inbounds i8, i8* %0, i64 4
  %15 = load i8, i8* %14, align 1
  %16 = zext i8 %15 to i32
  %17 = getelementptr inbounds i8, i8* %0, i64 5
  %18 = load i8, i8* %17, align 1
  %19 = zext i8 %18 to i32
  %20 = getelementptr [30 x i8], [30 x i8]* @.str.12.202, i32 0, i32 0
  %21 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %2, i64 18, i8* %20, i32 %4, i32 %7, i32 %10, i32 %13, i32 %16, i32 %19) #9
  ret i8* %2
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @hexCharToInt(i8 zeroext) #0 {
  %2 = load i32, i32* @hexCharToInt.table_created, align 4
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %.preheader.preheader, label %57

.preheader.preheader:                             ; preds = %1
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %55
  %indvars.iv = phi i64 [ %indvars.iv.next, %55 ], [ 0, %.preheader.preheader ]
  %tmp = trunc i64 %indvars.iv to i32
  switch i32 %tmp, label %52 [
    i32 48, label %4
    i32 49, label %7
    i32 50, label %10
    i32 51, label %13
    i32 52, label %16
    i32 53, label %19
    i32 54, label %22
    i32 55, label %25
    i32 56, label %28
    i32 57, label %31
    i32 65, label %34
    i32 97, label %34
    i32 66, label %37
    i32 98, label %37
    i32 67, label %40
    i32 99, label %40
    i32 68, label %43
    i32 100, label %43
    i32 69, label %46
    i32 101, label %46
    i32 70, label %49
    i32 102, label %49
  ]

; <label>:4:                                      ; preds = %.preheader
  %5 = shl i64 %indvars.iv, 2
  %6 = inttoptr i64 %5 to i32*
  %uglygep32 = getelementptr i8, i8* bitcast ([256 x i32]* @hexCharToInt.table to i8*), i64 %5
  %uglygep3233 = bitcast i8* %uglygep32 to i32*
  store i32 0, i32* %uglygep3233, align 4
  br label %55

; <label>:7:                                      ; preds = %.preheader
  %8 = shl i64 %indvars.iv, 2
  %9 = inttoptr i64 %8 to i32*
  %uglygep30 = getelementptr i8, i8* bitcast ([256 x i32]* @hexCharToInt.table to i8*), i64 %8
  %uglygep3031 = bitcast i8* %uglygep30 to i32*
  store i32 1, i32* %uglygep3031, align 4
  br label %55

; <label>:10:                                     ; preds = %.preheader
  %11 = shl i64 %indvars.iv, 2
  %12 = inttoptr i64 %11 to i32*
  %uglygep28 = getelementptr i8, i8* bitcast ([256 x i32]* @hexCharToInt.table to i8*), i64 %11
  %uglygep2829 = bitcast i8* %uglygep28 to i32*
  store i32 2, i32* %uglygep2829, align 4
  br label %55

; <label>:13:                                     ; preds = %.preheader
  %14 = shl i64 %indvars.iv, 2
  %15 = inttoptr i64 %14 to i32*
  %uglygep26 = getelementptr i8, i8* bitcast ([256 x i32]* @hexCharToInt.table to i8*), i64 %14
  %uglygep2627 = bitcast i8* %uglygep26 to i32*
  store i32 3, i32* %uglygep2627, align 4
  br label %55

; <label>:16:                                     ; preds = %.preheader
  %17 = shl i64 %indvars.iv, 2
  %18 = inttoptr i64 %17 to i32*
  %uglygep24 = getelementptr i8, i8* bitcast ([256 x i32]* @hexCharToInt.table to i8*), i64 %17
  %uglygep2425 = bitcast i8* %uglygep24 to i32*
  store i32 4, i32* %uglygep2425, align 4
  br label %55

; <label>:19:                                     ; preds = %.preheader
  %20 = shl i64 %indvars.iv, 2
  %21 = inttoptr i64 %20 to i32*
  %uglygep22 = getelementptr i8, i8* bitcast ([256 x i32]* @hexCharToInt.table to i8*), i64 %20
  %uglygep2223 = bitcast i8* %uglygep22 to i32*
  store i32 5, i32* %uglygep2223, align 4
  br label %55

; <label>:22:                                     ; preds = %.preheader
  %23 = shl i64 %indvars.iv, 2
  %24 = inttoptr i64 %23 to i32*
  %uglygep20 = getelementptr i8, i8* bitcast ([256 x i32]* @hexCharToInt.table to i8*), i64 %23
  %uglygep2021 = bitcast i8* %uglygep20 to i32*
  store i32 6, i32* %uglygep2021, align 4
  br label %55

; <label>:25:                                     ; preds = %.preheader
  %26 = shl i64 %indvars.iv, 2
  %27 = inttoptr i64 %26 to i32*
  %uglygep18 = getelementptr i8, i8* bitcast ([256 x i32]* @hexCharToInt.table to i8*), i64 %26
  %uglygep1819 = bitcast i8* %uglygep18 to i32*
  store i32 7, i32* %uglygep1819, align 4
  br label %55

; <label>:28:                                     ; preds = %.preheader
  %29 = shl i64 %indvars.iv, 2
  %30 = inttoptr i64 %29 to i32*
  %uglygep16 = getelementptr i8, i8* bitcast ([256 x i32]* @hexCharToInt.table to i8*), i64 %29
  %uglygep1617 = bitcast i8* %uglygep16 to i32*
  store i32 8, i32* %uglygep1617, align 4
  br label %55

; <label>:31:                                     ; preds = %.preheader
  %32 = shl i64 %indvars.iv, 2
  %33 = inttoptr i64 %32 to i32*
  %uglygep14 = getelementptr i8, i8* bitcast ([256 x i32]* @hexCharToInt.table to i8*), i64 %32
  %uglygep1415 = bitcast i8* %uglygep14 to i32*
  store i32 9, i32* %uglygep1415, align 4
  br label %55

; <label>:34:                                     ; preds = %.preheader, %.preheader
  %35 = shl i64 %indvars.iv, 2
  %36 = inttoptr i64 %35 to i32*
  %uglygep12 = getelementptr i8, i8* bitcast ([256 x i32]* @hexCharToInt.table to i8*), i64 %35
  %uglygep1213 = bitcast i8* %uglygep12 to i32*
  store i32 10, i32* %uglygep1213, align 4
  br label %55

; <label>:37:                                     ; preds = %.preheader, %.preheader
  %38 = shl i64 %indvars.iv, 2
  %39 = inttoptr i64 %38 to i32*
  %uglygep10 = getelementptr i8, i8* bitcast ([256 x i32]* @hexCharToInt.table to i8*), i64 %38
  %uglygep1011 = bitcast i8* %uglygep10 to i32*
  store i32 11, i32* %uglygep1011, align 4
  br label %55

; <label>:40:                                     ; preds = %.preheader, %.preheader
  %41 = shl i64 %indvars.iv, 2
  %42 = inttoptr i64 %41 to i32*
  %uglygep8 = getelementptr i8, i8* bitcast ([256 x i32]* @hexCharToInt.table to i8*), i64 %41
  %uglygep89 = bitcast i8* %uglygep8 to i32*
  store i32 12, i32* %uglygep89, align 4
  br label %55

; <label>:43:                                     ; preds = %.preheader, %.preheader
  %44 = shl i64 %indvars.iv, 2
  %45 = inttoptr i64 %44 to i32*
  %uglygep6 = getelementptr i8, i8* bitcast ([256 x i32]* @hexCharToInt.table to i8*), i64 %44
  %uglygep67 = bitcast i8* %uglygep6 to i32*
  store i32 13, i32* %uglygep67, align 4
  br label %55

; <label>:46:                                     ; preds = %.preheader, %.preheader
  %47 = shl i64 %indvars.iv, 2
  %48 = inttoptr i64 %47 to i32*
  %uglygep4 = getelementptr i8, i8* bitcast ([256 x i32]* @hexCharToInt.table to i8*), i64 %47
  %uglygep45 = bitcast i8* %uglygep4 to i32*
  store i32 14, i32* %uglygep45, align 4
  br label %55

; <label>:49:                                     ; preds = %.preheader, %.preheader
  %50 = shl i64 %indvars.iv, 2
  %51 = inttoptr i64 %50 to i32*
  %uglygep2 = getelementptr i8, i8* bitcast ([256 x i32]* @hexCharToInt.table to i8*), i64 %50
  %uglygep23 = bitcast i8* %uglygep2 to i32*
  store i32 15, i32* %uglygep23, align 4
  br label %55

; <label>:52:                                     ; preds = %.preheader
  %53 = shl i64 %indvars.iv, 2
  %54 = inttoptr i64 %53 to i32*
  %uglygep = getelementptr i8, i8* bitcast ([256 x i32]* @hexCharToInt.table to i8*), i64 %53
  %uglygep1 = bitcast i8* %uglygep to i32*
  store i32 -1, i32* %uglygep1, align 4
  br label %55

; <label>:55:                                     ; preds = %4, %7, %10, %13, %16, %19, %22, %25, %28, %31, %34, %37, %40, %43, %46, %49, %52
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp ne i64 %indvars.iv.next, 256
  br i1 %exitcond, label %.preheader, label %56

; <label>:56:                                     ; preds = %55
  store i32 1, i32* @hexCharToInt.table_created, align 4
  br label %57

; <label>:57:                                     ; preds = %56, %1
  %58 = zext i8 %0 to i64
  %59 = getelementptr inbounds [256 x i32], [256 x i32]* @hexCharToInt.table, i64 0, i64 %58
  %60 = load i32, i32* %59, align 4
  ret i32 %60
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @hexStringToHex(i8*, i32, i8*) #0 {
  %4 = icmp slt i32 %1, 1
  br i1 %4, label %.loopexit, label %5

; <label>:5:                                      ; preds = %3
  %6 = icmp slt i32 0, %1
  br i1 %6, label %.lr.ph.preheader, label %40

.lr.ph.preheader:                                 ; preds = %5
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %32
  %lsr.iv = phi i8* [ %2, %.lr.ph.preheader ], [ %scevgep, %32 ]
  %indvars.iv = phi i64 [ %indvars.iv.next, %32 ], [ 0, %.lr.ph.preheader ]
  %.018 = phi i8* [ %.1, %32 ], [ %0, %.lr.ph.preheader ]
  %.027 = phi i32 [ %.13, %32 ], [ %1, %.lr.ph.preheader ]
  %scevgep1 = getelementptr i8, i8* %.018, i64 %indvars.iv
  %7 = load i8, i8* %scevgep1, align 1
  %8 = sext i8 %7 to i32
  %9 = icmp eq i32 %8, 45
  br i1 %9, label %22, label %10

; <label>:10:                                     ; preds = %.lr.ph
  %scevgep2 = getelementptr i8, i8* %.018, i64 %indvars.iv
  %11 = load i8, i8* %scevgep2, align 1
  %12 = sext i8 %11 to i32
  %13 = icmp eq i32 %12, 58
  br i1 %13, label %22, label %14

; <label>:14:                                     ; preds = %10
  %scevgep3 = getelementptr i8, i8* %.018, i64 %indvars.iv
  %15 = load i8, i8* %scevgep3, align 1
  %16 = sext i8 %15 to i32
  %17 = icmp eq i32 %16, 95
  br i1 %17, label %22, label %18

; <label>:18:                                     ; preds = %14
  %scevgep4 = getelementptr i8, i8* %.018, i64 %indvars.iv
  %19 = load i8, i8* %scevgep4, align 1
  %20 = sext i8 %19 to i32
  %21 = icmp eq i32 %20, 32
  br i1 %21, label %22, label %25

; <label>:22:                                     ; preds = %18, %14, %10, %.lr.ph
  %23 = getelementptr inbounds i8, i8* %.018, i32 1
  %24 = add nsw i32 %.027, -1
  br label %25

; <label>:25:                                     ; preds = %22, %18
  %.13 = phi i32 [ %24, %22 ], [ %.027, %18 ]
  %.1 = phi i8* [ %23, %22 ], [ %.018, %18 ]
  %scevgep5 = getelementptr i8, i8* %.1, i64 1
  %scevgep6 = getelementptr i8, i8* %scevgep5, i64 %indvars.iv
  %scevgep7 = getelementptr i8, i8* %scevgep6, i64 -1
  %26 = load i8, i8* %scevgep7, align 1
  %27 = call i32 @hexCharToInt(i8 zeroext %26)
  %scevgep8 = getelementptr i8, i8* %.1, i64 1
  %scevgep9 = getelementptr i8, i8* %scevgep8, i64 %indvars.iv
  %28 = load i8, i8* %scevgep9, align 1
  %29 = call i32 @hexCharToInt(i8 zeroext %28)
  %30 = icmp slt i32 %27, 0
  %31 = icmp sgt i32 %27, 15
  %or.cond = or i1 %30, %31
  br i1 %or.cond, label %.loopexit.loopexit, label %32

; <label>:32:                                     ; preds = %25
  %33 = shl i32 %27, 4
  %34 = add nsw i32 %33, %29
  %35 = and i32 %34, 255
  %36 = trunc i32 %35 to i8
  store i8 %36, i8* %lsr.iv, align 1
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 2
  %37 = sext i32 %.13 to i64
  %scevgep = getelementptr i8, i8* %lsr.iv, i64 1
  %38 = icmp slt i64 %indvars.iv.next, %37
  br i1 %38, label %.lr.ph, label %._crit_edge

._crit_edge:                                      ; preds = %32
  %split.wide = phi i64 [ %indvars.iv.next, %32 ]
  %39 = trunc i64 %split.wide to i32
  br label %40

; <label>:40:                                     ; preds = %._crit_edge, %5
  %.04.lcssa = phi i32 [ %39, %._crit_edge ], [ 0, %5 ]
  %41 = sdiv i32 %.04.lcssa, 2
  br label %.loopexit

.loopexit.loopexit:                               ; preds = %25
  %.0.ph = phi i32 [ -1, %25 ]
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit.loopexit, %3, %40
  %.0 = phi i32 [ %41, %40 ], [ 1, %3 ], [ %.0.ph, %.loopexit.loopexit ]
  ret i32 %.0
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @getmac(i8*, i32, i8*) #0 {
  %4 = alloca [3 x i8], align 1, !track !256
  %5 = alloca i32, align 4, !track !257
  %6 = icmp eq i8* %0, null
  br i1 %6, label %UnifiedReturnBlock, label %7

; <label>:7:                                      ; preds = %3
  %8 = call i64 @strlen(i8* %0) #10
  %9 = trunc i64 %8 to i32
  %10 = icmp slt i32 %9, 12
  br i1 %10, label %UnifiedReturnBlock, label %11

; <label>:11:                                     ; preds = %7
  call void @llvm.memset.p0i8.i64(i8* align 1 %2, i8 0, i64 6, i1 false)
  %12 = getelementptr inbounds [3 x i8], [3 x i8]* %4, i64 0, i64 2
  store i8 0, i8* %12, align 1
  %13 = load i8, i8* %0, align 1
  %14 = sext i8 %13 to i32
  %15 = icmp ne i32 %14, 0
  br i1 %15, label %.lr.ph.preheader, label %67

.lr.ph.preheader:                                 ; preds = %11
  %16 = getelementptr inbounds [3 x i8], [3 x i8]* %4, i64 0, i64 0
  %17 = getelementptr inbounds [3 x i8], [3 x i8]* %4, i64 0, i64 1
  %18 = getelementptr inbounds [3 x i8], [3 x i8]* %4, i32 0, i32 0
  %19 = getelementptr inbounds [3 x i8], [3 x i8]* %4, i32 0, i32 0
  %20 = getelementptr inbounds [3 x i8], [3 x i8]* %4, i64 0, i64 1
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %60
  %indvars.iv = phi i64 [ %indvars.iv.next, %60 ], [ 0, %.lr.ph.preheader ]
  %.025 = phi i32 [ %.1, %60 ], [ 0, %.lr.ph.preheader ]
  call void @unroll_loop(i32 154)
  %21 = sext i32 %.025 to i64
  %22 = getelementptr inbounds i8, i8* %0, i64 %21
  %23 = load i8, i8* %22, align 1
  store i8 %23, i8* %16, align 1
  %24 = add nsw i32 %.025, 1
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds i8, i8* %0, i64 %25
  %27 = load i8, i8* %26, align 1
  store i8 %27, i8* %17, align 1
  %28 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %18, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.13.207, i64 0, i64 0), i32* %5) #9
  %29 = icmp ne i32 %28, 1
  br i1 %29, label %30, label %33

; <label>:30:                                     ; preds = %.lr.ph
  %31 = call i64 @strlen(i8* %19) #10
  %32 = icmp eq i64 %31, 2
  br i1 %32, label %UnifiedReturnBlock.loopexit, label %33

; <label>:33:                                     ; preds = %30, %.lr.ph
  %34 = load i8, i8* %20, align 1
  %35 = call i32 @hexCharToInt(i8 zeroext %34)
  %36 = icmp slt i32 %35, 0
  br i1 %36, label %UnifiedReturnBlock.loopexit, label %37

; <label>:37:                                     ; preds = %33
  %38 = load i32, i32* %5, align 4
  %39 = trunc i32 %38 to i8
  %scevgep = getelementptr i8, i8* %2, i64 %indvars.iv
  store i8 %39, i8* %scevgep, align 1
  %40 = add nsw i32 %.025, 2
  %indvars.iv.next = add nuw i64 %indvars.iv, 1
  %41 = sext i32 %40 to i64
  %42 = getelementptr inbounds i8, i8* %0, i64 %41
  %43 = load i8, i8* %42, align 1
  %44 = sext i8 %43 to i32
  %45 = icmp eq i32 %44, 58
  br i1 %45, label %58, label %46

; <label>:46:                                     ; preds = %37
  %47 = sext i32 %40 to i64
  %48 = getelementptr inbounds i8, i8* %0, i64 %47
  %49 = load i8, i8* %48, align 1
  %50 = sext i8 %49 to i32
  %51 = icmp eq i32 %50, 45
  br i1 %51, label %58, label %52

; <label>:52:                                     ; preds = %46
  %53 = sext i32 %40 to i64
  %54 = getelementptr inbounds i8, i8* %0, i64 %53
  %55 = load i8, i8* %54, align 1
  %56 = sext i8 %55 to i32
  %57 = icmp eq i32 %56, 95
  br i1 %57, label %58, label %60

; <label>:58:                                     ; preds = %52, %46, %37
  %59 = add nsw i32 %40, 1
  br label %60

; <label>:60:                                     ; preds = %58, %52
  %.1 = phi i32 [ %59, %58 ], [ %40, %52 ]
  %61 = sext i32 %.1 to i64
  %62 = getelementptr inbounds i8, i8* %0, i64 %61
  %63 = load i8, i8* %62, align 1
  %64 = sext i8 %63 to i32
  %65 = icmp ne i32 %64, 0
  br i1 %65, label %.lr.ph, label %._crit_edge

._crit_edge:                                      ; preds = %60
  %split.wide = phi i64 [ %indvars.iv.next, %60 ]
  %66 = trunc i64 %split.wide to i32
  br label %67

; <label>:67:                                     ; preds = %._crit_edge, %11
  %.01.lcssa = phi i32 [ %66, %._crit_edge ], [ 0, %11 ]
  %68 = icmp ne i32 %1, 0
  %69 = icmp ne i32 %.01.lcssa, 6
  %or.cond = and i1 %68, %69
  br i1 %or.cond, label %UnifiedReturnBlock, label %70

; <label>:70:                                     ; preds = %67
  %71 = icmp eq i32 %1, 0
  %72 = icmp sgt i32 %.01.lcssa, 6
  %or.cond1 = and i1 %71, %72
  %spec.select = select i1 %or.cond1, i32 1, i32 0
  br label %UnifiedReturnBlock

UnifiedReturnBlock.loopexit:                      ; preds = %33, %30
  %UnifiedRetVal.ph = phi i32 [ 1, %30 ], [ 1, %33 ]
  br label %UnifiedReturnBlock

UnifiedReturnBlock:                               ; preds = %UnifiedReturnBlock.loopexit, %3, %7, %67, %70
  %UnifiedRetVal = phi i32 [ %spec.select, %70 ], [ 1, %67 ], [ 1, %7 ], [ 1, %3 ], [ %UnifiedRetVal.ph, %UnifiedReturnBlock.loopexit ]
  ret i32 %UnifiedRetVal
}

; Function Attrs: nounwind
declare dso_local i32 @__isoc99_sscanf(i8*, i8*, ...) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @readLine(i8*, i32) #0 {
  %3 = sext i32 %1 to i64
  br label %4

; <label>:4:                                      ; preds = %25, %2
  %lsr.iv = phi i64 [ %lsr.iv.next, %25 ], [ 0, %2 ]
  %5 = call i32 @getchar()
  %6 = icmp eq i32 %5, -1
  %spec.select = select i1 %6, i32 0, i32 %5
  %7 = trunc i32 %spec.select to i8
  %scevgep3 = getelementptr i8, i8* %0, i64 %lsr.iv
  store i8 %7, i8* %scevgep3, align 1
  %scevgep2 = getelementptr i8, i8* %0, i64 %lsr.iv
  %8 = load i8, i8* %scevgep2, align 1
  %9 = sext i8 %8 to i32
  %10 = icmp eq i32 %9, 10
  br i1 %10, label %11, label %13

; <label>:11:                                     ; preds = %4
  %.lcssa.wide = phi i64 [ %lsr.iv, %4 ]
  %12 = trunc i64 %.lcssa.wide to i32
  br label %29

; <label>:13:                                     ; preds = %4
  %scevgep1 = getelementptr i8, i8* %0, i64 %lsr.iv
  %14 = load i8, i8* %scevgep1, align 1
  %15 = sext i8 %14 to i32
  %16 = icmp eq i32 %15, 13
  br i1 %16, label %17, label %19

; <label>:17:                                     ; preds = %13
  %.lcssa2.wide = phi i64 [ %lsr.iv, %13 ]
  %18 = trunc i64 %.lcssa2.wide to i32
  br label %29

; <label>:19:                                     ; preds = %13
  %scevgep = getelementptr i8, i8* %0, i64 %lsr.iv
  %20 = load i8, i8* %scevgep, align 1
  %21 = sext i8 %20 to i32
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %25

; <label>:23:                                     ; preds = %19
  %.lcssa3.wide = phi i64 [ %lsr.iv, %19 ]
  %24 = trunc i64 %.lcssa3.wide to i32
  br label %29

; <label>:25:                                     ; preds = %19
  %lsr.iv.next = add nuw nsw i64 %lsr.iv, 1
  %26 = icmp slt i64 %lsr.iv.next, %3
  %27 = add i64 %lsr.iv.next, -1
  br i1 %26, label %4, label %.loopexit

.loopexit:                                        ; preds = %25
  %.lcssa4.ph.wide = phi i64 [ %27, %25 ]
  %28 = trunc i64 %.lcssa4.ph.wide to i32
  br label %29

; <label>:29:                                     ; preds = %.loopexit, %23, %17, %11
  %.lcssa4 = phi i32 [ %24, %23 ], [ %18, %17 ], [ %12, %11 ], [ %28, %.loopexit ]
  ret i32 %.lcssa4
}

declare dso_local i32 @getchar() #1

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @hexToInt(i8*, i32) #0 {
  %3 = icmp slt i32 0, %1
  br i1 %3, label %.lr.ph9, label %.loopexit

.lr.ph9:                                          ; preds = %2
  %4 = sext i32 %1 to i64
  br label %5

; <label>:5:                                      ; preds = %.lr.ph9, %16
  %indvars.iv11 = phi i64 [ 0, %.lr.ph9 ], [ %indvars.iv.next12, %16 ]
  %scevgep1 = getelementptr i8, i8* %0, i64 %indvars.iv11
  %6 = load i8, i8* %scevgep1, align 1
  %7 = sext i8 %6 to i32
  %8 = icmp ne i32 %7, 48
  br i1 %8, label %.loopexit.loopexitsplit, label %9

; <label>:9:                                      ; preds = %5
  %10 = icmp eq i64 %indvars.iv11, 1
  br i1 %10, label %11, label %16

; <label>:11:                                     ; preds = %9
  %scevgep2 = getelementptr i8, i8* %0, i64 %indvars.iv11
  %12 = load i8, i8* %scevgep2, align 1
  %13 = sext i8 %12 to i32
  %14 = call i32 @toupper(i32 %13) #10
  %15 = icmp ne i32 %14, 88
  br i1 %15, label %..loopexit.loopexit_crit_edge, label %16

; <label>:16:                                     ; preds = %11, %9
  %indvars.iv.next12 = add nuw nsw i64 %indvars.iv11, 1
  %17 = icmp slt i64 %indvars.iv.next12, %4
  br i1 %17, label %5, label %..loopexit_crit_edge

..loopexit_crit_edge:                             ; preds = %16
  %split10.wide = phi i64 [ %indvars.iv.next12, %16 ]
  %18 = trunc i64 %split10.wide to i32
  br label %.loopexit

.loopexit.loopexitsplit:                          ; preds = %5
  br label %.loopexit.loopexit

..loopexit.loopexit_crit_edge:                    ; preds = %11
  br label %.loopexit.loopexit

.loopexit.loopexit:                               ; preds = %.loopexit.loopexitsplit, %..loopexit.loopexit_crit_edge
  %indvars.iv11.lcssa = phi i64 [ %indvars.iv11, %..loopexit.loopexit_crit_edge ], [ %indvars.iv11, %.loopexit.loopexitsplit ]
  %19 = trunc i64 %indvars.iv11.lcssa to i32
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit.loopexit, %2, %..loopexit_crit_edge
  %.02.lcssa = phi i32 [ %18, %..loopexit_crit_edge ], [ 0, %2 ], [ %19, %.loopexit.loopexit ]
  %20 = icmp slt i32 %.02.lcssa, %1
  br i1 %20, label %.lr.ph, label %._crit_edge

.lr.ph:                                           ; preds = %.loopexit
  %21 = zext i32 %.02.lcssa to i64
  %22 = sext i32 %1 to i64
  br label %23

; <label>:23:                                     ; preds = %.lr.ph, %27
  %indvars.iv = phi i64 [ %21, %.lr.ph ], [ %indvars.iv.next, %27 ]
  %.016 = phi i32 [ 0, %.lr.ph ], [ %29, %27 ]
  %scevgep = getelementptr i8, i8* %0, i64 %indvars.iv
  %24 = load i8, i8* %scevgep, align 1
  %25 = call i32 @hexCharToInt(i8 zeroext %24)
  %26 = icmp eq i32 %25, -1
  br i1 %26, label %._crit_edge.loopexit, label %27

; <label>:27:                                     ; preds = %23
  %28 = mul nsw i32 %.016, 16
  %29 = add nsw i32 %28, %25
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %30 = icmp slt i64 %indvars.iv.next, %22
  br i1 %30, label %23, label %._crit_edge.loopexit

._crit_edge.loopexit:                             ; preds = %23, %27
  %.0.ph = phi i32 [ -1, %23 ], [ %29, %27 ]
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %.loopexit
  %.0 = phi i32 [ 0, %.loopexit ], [ %.0.ph, %._crit_edge.loopexit ]
  ret i32 %.0
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8** @uniqueiv_init() #8 {
  %1 = call noalias i8* @malloc(i64 2048) #9, !track !258
  %2 = bitcast i8* %1 to i8**
  %3 = icmp eq i8** %2, null
  br i1 %3, label %.loopexit, label %.preheader.preheader

.preheader.preheader:                             ; preds = %0
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %.preheader
  %indvars.iv = phi i64 [ %indvars.iv.next, %.preheader ], [ 0, %.preheader.preheader ]
  call void @unroll_loop(i32 155)
  %4 = shl i64 %indvars.iv, 3
  %scevgep = getelementptr i8, i8* %1, i64 %4
  %scevgep1 = bitcast i8* %scevgep to i8**
  store i8* null, i8** %scevgep1, align 8
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp ne i64 %indvars.iv.next, 256
  br i1 %exitcond, label %.preheader, label %.loopexit.loopexit

.loopexit.loopexit:                               ; preds = %.preheader
  %.0.ph = phi i8** [ %2, %.preheader ]
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit.loopexit, %0
  %.0 = phi i8** [ null, %0 ], [ %.0.ph, %.loopexit.loopexit ]
  ret i8** %.0
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @uniqueiv_mark(i8**, i8*) #0 {
  %3 = icmp eq i8** %0, null
  br i1 %3, label %58, label %4

; <label>:4:                                      ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i64 2
  %6 = load i8, i8* %5, align 1
  %7 = zext i8 %6 to i64
  %8 = getelementptr inbounds i8*, i8** %0, i64 %7
  %9 = load i8*, i8** %8, align 8
  %10 = bitcast i8* %9 to i8**
  %11 = icmp eq i8** %10, null
  br i1 %11, label %12, label %27

; <label>:12:                                     ; preds = %4
  %13 = call noalias i8* @malloc(i64 2048) #9, !track !259
  %14 = bitcast i8* %13 to i8**
  %15 = icmp eq i8** %14, null
  br i1 %15, label %58, label %.preheader1.preheader

.preheader1.preheader:                            ; preds = %12
  br label %.preheader1

.preheader1:                                      ; preds = %.preheader1.preheader, %.preheader1
  %.015 = phi i16 [ %18, %.preheader1 ], [ 0, %.preheader1.preheader ]
  call void @unroll_loop(i32 156)
  %16 = sext i16 %.015 to i64
  %17 = getelementptr inbounds i8*, i8** %14, i64 %16
  store i8* null, i8** %17, align 8
  %18 = add i16 %.015, 1
  %19 = sext i16 %18 to i32
  %20 = icmp slt i32 %19, 256
  br i1 %20, label %.preheader1, label %21

; <label>:21:                                     ; preds = %.preheader1
  %22 = bitcast i8** %14 to i8*
  %23 = getelementptr inbounds i8, i8* %1, i64 2
  %24 = load i8, i8* %23, align 1
  %25 = zext i8 %24 to i64
  %26 = getelementptr inbounds i8*, i8** %0, i64 %25
  store i8* %22, i8** %26, align 8
  br label %27

; <label>:27:                                     ; preds = %21, %4
  %.03 = phi i8** [ %14, %21 ], [ %10, %4 ]
  %28 = getelementptr inbounds i8, i8* %1, i64 1
  %29 = load i8, i8* %28, align 1
  %30 = zext i8 %29 to i64
  %31 = getelementptr inbounds i8*, i8** %.03, i64 %30
  %32 = load i8*, i8** %31, align 8
  %33 = icmp eq i8* %32, null
  br i1 %33, label %34, label %42

; <label>:34:                                     ; preds = %27
  %35 = call noalias i8* @malloc(i64 32) #9, !track !260
  %36 = icmp eq i8** %.03, null
  br i1 %36, label %58, label %.preheader.preheader

.preheader.preheader:                             ; preds = %34
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %.preheader
  %indvars.iv = phi i64 [ %indvars.iv.next, %.preheader ], [ 0, %.preheader.preheader ]
  call void @unroll_loop(i32 157)
  %scevgep = getelementptr i8, i8* %35, i64 %indvars.iv
  store i8 0, i8* %scevgep, align 1
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp ne i64 %indvars.iv.next, 32
  br i1 %exitcond, label %.preheader, label %37

; <label>:37:                                     ; preds = %.preheader
  %38 = getelementptr inbounds i8, i8* %1, i64 1
  %39 = load i8, i8* %38, align 1
  %40 = zext i8 %39 to i64
  %41 = getelementptr inbounds i8*, i8** %.03, i64 %40
  store i8* %35, i8** %41, align 8
  br label %42

; <label>:42:                                     ; preds = %37, %27
  %.02 = phi i8* [ %35, %37 ], [ %32, %27 ]
  %43 = getelementptr inbounds i8, i8* %1, i64 0
  %44 = load i8, i8* %43, align 1
  %45 = zext i8 %44 to i32
  %46 = and i32 %45, 7
  %47 = shl i32 1, %46
  %48 = getelementptr inbounds i8, i8* %1, i64 0
  %49 = load i8, i8* %48, align 1
  %50 = zext i8 %49 to i32
  %51 = ashr i32 %50, 3
  %52 = sext i32 %51 to i64
  %53 = getelementptr inbounds i8, i8* %.02, i64 %52
  %54 = load i8, i8* %53, align 1
  %55 = zext i8 %54 to i32
  %56 = or i32 %55, %47
  %57 = trunc i32 %56 to i8
  store i8 %57, i8* %53, align 1
  br label %58

; <label>:58:                                     ; preds = %34, %12, %2, %42
  %.0 = phi i32 [ 0, %42 ], [ 0, %2 ], [ 1, %12 ], [ 1, %34 ]
  ret i32 %.0
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @uniqueiv_check(i8**, i8*) #0 {
  %3 = icmp eq i8** %0, null
  br i1 %3, label %35, label %4

; <label>:4:                                      ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i64 2
  %6 = load i8, i8* %5, align 1
  %7 = zext i8 %6 to i64
  %8 = getelementptr inbounds i8*, i8** %0, i64 %7
  %9 = load i8*, i8** %8, align 8
  %10 = bitcast i8* %9 to i8**
  %11 = icmp eq i8** %10, null
  br i1 %11, label %35, label %12

; <label>:12:                                     ; preds = %4
  %13 = getelementptr inbounds i8, i8* %1, i64 1
  %14 = load i8, i8* %13, align 1
  %15 = zext i8 %14 to i64
  %16 = getelementptr inbounds i8*, i8** %10, i64 %15
  %17 = load i8*, i8** %16, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %35, label %19

; <label>:19:                                     ; preds = %12
  %20 = getelementptr inbounds i8, i8* %1, i64 0
  %21 = load i8, i8* %20, align 1
  %22 = zext i8 %21 to i32
  %23 = ashr i32 %22, 3
  %24 = sext i32 %23 to i64
  %25 = getelementptr inbounds i8, i8* %17, i64 %24
  %26 = load i8, i8* %25, align 1
  %27 = zext i8 %26 to i32
  %28 = getelementptr inbounds i8, i8* %1, i64 0
  %29 = load i8, i8* %28, align 1
  %30 = zext i8 %29 to i32
  %31 = and i32 %30, 7
  %32 = shl i32 1, %31
  %33 = and i32 %27, %32
  %34 = icmp eq i32 %33, 0
  %. = select i1 %34, i32 0, i32 1
  br label %35

; <label>:35:                                     ; preds = %19, %12, %4, %2
  %.0 = phi i32 [ 0, %2 ], [ 0, %4 ], [ 0, %12 ], [ %., %19 ]
  ret i32 %.0
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @uniqueiv_wipe(i8**) #0 {
  %2 = icmp eq i8** %0, null
  br i1 %2, label %17, label %.preheader1.preheader

.preheader1.preheader:                            ; preds = %1
  br label %.preheader1

.preheader1:                                      ; preds = %.preheader1.preheader, %14
  %indvars.iv4 = phi i64 [ %indvars.iv.next5, %14 ], [ 0, %.preheader1.preheader ]
  call void @unroll_loop(i32 158)
  %3 = getelementptr inbounds i8*, i8** %0, i64 %indvars.iv4
  %4 = load i8*, i8** %3, align 8
  %5 = bitcast i8* %4 to i8**
  %6 = icmp ne i8** %5, null
  br i1 %6, label %.preheader.preheader, label %14

.preheader.preheader:                             ; preds = %.preheader1
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %11
  %indvars.iv = phi i64 [ %indvars.iv.next, %11 ], [ 0, %.preheader.preheader ]
  call void @unroll_loop(i32 159)
  %7 = shl i64 %indvars.iv, 3
  %scevgep = getelementptr i8, i8* %4, i64 %7
  %scevgep1 = bitcast i8* %scevgep to i8**
  %8 = load i8*, i8** %scevgep1, align 8
  %9 = icmp ne i8* %8, null
  br i1 %9, label %10, label %11

; <label>:10:                                     ; preds = %.preheader
  call void @free(i8* %8) #9
  br label %11

; <label>:11:                                     ; preds = %.preheader, %10
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp ne i64 %indvars.iv.next, 256
  br i1 %exitcond, label %.preheader, label %12

; <label>:12:                                     ; preds = %11
  %13 = bitcast i8** %5 to i8*
  call void @free(i8* %13) #9
  br label %14

; <label>:14:                                     ; preds = %.preheader1, %12
  %indvars.iv.next5 = add nuw nsw i64 %indvars.iv4, 1
  %exitcond6 = icmp ne i64 %indvars.iv.next5, 256
  br i1 %exitcond6, label %.preheader1, label %15

; <label>:15:                                     ; preds = %14
  %16 = bitcast i8** %0 to i8*
  call void @free(i8* %16) #9
  br label %17

; <label>:17:                                     ; preds = %1, %15
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @data_init() #0 {
  %1 = call noalias i8* @calloc(i64 50331648, i64 1) #9
  ret i8* %1
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @data_check(i8*, i8*, i8*) #0 {
  %4 = icmp ne i8* %0, null
  br i1 %4, label %5, label %57

; <label>:5:                                      ; preds = %3
  %6 = getelementptr inbounds i8, i8* %1, i64 0
  %7 = load i8, i8* %6, align 1
  %8 = zext i8 %7 to i32
  %9 = mul nsw i32 %8, 256
  %10 = getelementptr inbounds i8, i8* %1, i64 1
  %11 = load i8, i8* %10, align 1
  %12 = zext i8 %11 to i32
  %13 = add nsw i32 %9, %12
  %14 = mul nsw i32 %13, 256
  %15 = getelementptr inbounds i8, i8* %1, i64 2
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i32
  %18 = add nsw i32 %14, %17
  %19 = mul nsw i32 %18, 3
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds i8, i8* %0, i64 %20
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i32
  %24 = icmp eq i32 %23, 0
  %25 = sext i32 %19 to i64
  %26 = getelementptr inbounds i8, i8* %0, i64 %25
  br i1 %24, label %27, label %38

; <label>:27:                                     ; preds = %5
  store i8 1, i8* %26, align 1
  %28 = getelementptr inbounds i8, i8* %2, i64 0
  %29 = load i8, i8* %28, align 1
  %30 = sext i32 %19 to i64
  %31 = getelementptr inbounds i8, i8* %0, i64 %30
  %32 = getelementptr inbounds i8, i8* %31, i64 1
  store i8 %29, i8* %32, align 1
  %33 = getelementptr inbounds i8, i8* %2, i64 1
  %34 = load i8, i8* %33, align 1
  %35 = sext i32 %19 to i64
  %36 = getelementptr inbounds i8, i8* %0, i64 %35
  %37 = getelementptr inbounds i8, i8* %36, i64 2
  store i8 %34, i8* %37, align 1
  br label %57

; <label>:38:                                     ; preds = %5
  %39 = getelementptr inbounds i8, i8* %26, i64 1
  %40 = load i8, i8* %39, align 1
  %41 = zext i8 %40 to i32
  %42 = getelementptr inbounds i8, i8* %2, i64 0
  %43 = load i8, i8* %42, align 1
  %44 = zext i8 %43 to i32
  %45 = icmp ne i32 %41, %44
  br i1 %45, label %56, label %46

; <label>:46:                                     ; preds = %38
  %47 = sext i32 %19 to i64
  %48 = getelementptr inbounds i8, i8* %0, i64 %47
  %49 = getelementptr inbounds i8, i8* %48, i64 2
  %50 = load i8, i8* %49, align 1
  %51 = zext i8 %50 to i32
  %52 = getelementptr inbounds i8, i8* %2, i64 1
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i32
  %55 = icmp ne i32 %51, %54
  br i1 %55, label %56, label %57

; <label>:56:                                     ; preds = %46, %38
  br label %57

; <label>:57:                                     ; preds = %27, %56, %46, %3
  %.2 = phi i32 [ 0, %3 ], [ 0, %27 ], [ 1, %56 ], [ 0, %46 ]
  ret i32 %.2
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @data_wipe(i8*) #0 {
  %2 = icmp ne i8* %0, null
  br i1 %2, label %3, label %4

; <label>:3:                                      ; preds = %1
  call void @free(i8* %0) #9
  br label %4

; <label>:4:                                      ; preds = %3, %1
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @PTW_computeKey(%struct.PTW_attackstate*, i8*, i32, i32, i32*, [256 x i32]*, i32) #0 {
  %8 = alloca [29 x i32], align 16, !track !261
  %9 = alloca [29 x double], align 16, !track !262
  %10 = alloca [29 x double], align 16, !track !263
  %11 = alloca [29 x %struct.doublesorthelper], align 16, !track !264
  %12 = alloca [32 x i8], align 16, !track !265
  %13 = alloca [32 x i8], align 16, !track !266
  %14 = sext i32 %2 to i64
  %15 = mul i64 2048, %14
  %16 = alloca i8, i64 %15, align 16, !track !267
  %17 = bitcast i8* %16 to [256 x %struct.PTW_tableentry]*
  store i32 0, i32* @tried, align 4
  %18 = icmp eq [256 x %struct.PTW_tableentry]* %17, null
  br i1 %18, label %19, label %22

; <label>:19:                                     ; preds = %7
  %20 = getelementptr [27 x i8], [27 x i8]* @.str.222, i32 0, i32 0
  %21 = call i32 (i8*, ...) @printf(i8* %20)
  call void @exit(i32 -1) #11
  unreachable

; <label>:22:                                     ; preds = %7
  %23 = and i32 %6, 1
  %24 = icmp ne i32 %23, 0
  br i1 %24, label %89, label %25

; <label>:25:                                     ; preds = %22
  %26 = icmp slt i32 0, %2
  br i1 %26, label %.lr.ph45, label %._crit_edge46

.lr.ph45:                                         ; preds = %25
  %27 = zext i32 %2 to i64
  %28 = getelementptr inbounds %struct.PTW_attackstate, %struct.PTW_attackstate* %0, i32 0, i32 0
  %29 = getelementptr inbounds [32 x i8], [32 x i8]* %12, i32 0, i32 0
  %30 = getelementptr inbounds %struct.PTW_attackstate, %struct.PTW_attackstate* %0, i32 0, i32 5
  %31 = getelementptr inbounds [32 x i8], [32 x i8]* %12, i32 0, i32 0
  %32 = getelementptr inbounds %struct.PTW_attackstate, %struct.PTW_attackstate* %0, i32 0, i32 5
  %33 = getelementptr inbounds [32 x i8], [32 x i8]* %13, i32 0, i32 0
  %34 = getelementptr inbounds %struct.PTW_attackstate, %struct.PTW_attackstate* %0, i32 0, i32 5
  %35 = getelementptr inbounds [32 x i8], [32 x i8]* %13, i64 0, i64 0
  %scevgep42 = getelementptr i8, i8* %16, i64 4
  br label %36

; <label>:36:                                     ; preds = %.lr.ph45, %73
  %lsr.iv43 = phi i8* [ %scevgep42, %.lr.ph45 ], [ %scevgep44, %73 ]
  %indvars.iv47 = phi i64 [ 0, %.lr.ph45 ], [ %indvars.iv.next48, %73 ]
  call void @unroll_loop(i32 160)
  %37 = getelementptr inbounds [256 x %struct.PTW_tableentry], [256 x %struct.PTW_tableentry]* %17, i64 %indvars.iv47
  %38 = getelementptr inbounds [256 x %struct.PTW_tableentry], [256 x %struct.PTW_tableentry]* %37, i64 0, i64 0
  %39 = bitcast %struct.PTW_tableentry* %38 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %39, i8 0, i64 2048, i1 false)
  br label %40

; <label>:40:                                     ; preds = %36, %40
  %indvars.iv32 = phi i64 [ 0, %36 ], [ %indvars.iv.next33, %40 ]
  call void @unroll_loop(i32 161)
  %41 = shl i64 %indvars.iv32, 3
  %scevgep45 = getelementptr i8, i8* %lsr.iv43, i64 %41
  %tmp46 = trunc i64 %indvars.iv32 to i8
  store i8 %tmp46, i8* %scevgep45, align 4
  %indvars.iv.next33 = add nuw nsw i64 %indvars.iv32, 1
  %exitcond34 = icmp ne i64 %indvars.iv.next33, 256
  br i1 %exitcond34, label %40, label %42

; <label>:42:                                     ; preds = %40
  %43 = load i32, i32* %28, align 8
  %44 = icmp slt i32 0, %43
  br i1 %44, label %.lr.ph37.preheader, label %._crit_edge38

.lr.ph37.preheader:                               ; preds = %42
  %45 = add nuw nsw i64 %indvars.iv47, 3
  %46 = trunc i64 %45 to i32
  %47 = getelementptr inbounds [256 x %struct.PTW_tableentry], [256 x %struct.PTW_tableentry]* %17, i64 %indvars.iv47
  br label %.lr.ph37

.lr.ph37:                                         ; preds = %.lr.ph37.preheader, %.lr.ph37
  %lsr.iv47 = phi i64 [ 0, %.lr.ph37.preheader ], [ %lsr.iv.next48, %.lr.ph37 ]
  %indvars.iv39 = phi i64 [ %indvars.iv.next40, %.lr.ph37 ], [ 0, %.lr.ph37.preheader ]
  call void @unroll_loop(i32 162)
  %48 = load %struct.PTW_session*, %struct.PTW_session** %30, align 8
  %scevgep49 = getelementptr %struct.PTW_session, %struct.PTW_session* %48, i64 0, i32 0, i64 %lsr.iv47
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %29, i8* align 4 %scevgep49, i64 3, i1 false), !track !268
  %49 = load %struct.PTW_session*, %struct.PTW_session** %32, align 8
  %scevgep50 = getelementptr %struct.PTW_session, %struct.PTW_session* %49, i64 0, i32 0, i64 %lsr.iv47
  %scevgep51 = getelementptr i8, i8* %scevgep50, i64 3
  call void @guesskeybytes(i32 %46, i8* %31, i8* %scevgep51, i8* %33, i32 1)
  %50 = load %struct.PTW_session*, %struct.PTW_session** %34, align 8
  %scevgep52 = getelementptr %struct.PTW_session, %struct.PTW_session* %50, i64 0, i32 2
  %scevgep5253 = bitcast i32* %scevgep52 to i8*
  %uglygep = getelementptr i8, i8* %scevgep5253, i64 %lsr.iv47
  %uglygep54 = bitcast i8* %uglygep to i32*
  %51 = load i32, i32* %uglygep54, align 4
  %52 = load i8, i8* %35, align 16
  %53 = zext i8 %52 to i64
  %54 = getelementptr inbounds [256 x %struct.PTW_tableentry], [256 x %struct.PTW_tableentry]* %47, i64 0, i64 %53
  %55 = getelementptr inbounds %struct.PTW_tableentry, %struct.PTW_tableentry* %54, i32 0, i32 0
  %56 = load i32, i32* %55, align 4
  %57 = add nsw i32 %56, %51
  store i32 %57, i32* %55, align 4
  %indvars.iv.next40 = add nuw nsw i64 %indvars.iv39, 1
  %58 = load i32, i32* %28, align 8
  %59 = sext i32 %58 to i64
  %lsr.iv.next48 = add nuw nsw i64 %lsr.iv47, 40
  %60 = icmp slt i64 %indvars.iv.next40, %59
  br i1 %60, label %.lr.ph37, label %._crit_edge38.loopexit

._crit_edge38.loopexit:                           ; preds = %.lr.ph37
  br label %._crit_edge38

._crit_edge38:                                    ; preds = %._crit_edge38.loopexit, %42
  %61 = getelementptr inbounds [256 x %struct.PTW_tableentry], [256 x %struct.PTW_tableentry]* %17, i64 %indvars.iv47
  %62 = getelementptr inbounds [256 x %struct.PTW_tableentry], [256 x %struct.PTW_tableentry]* %61, i64 0, i64 0
  %63 = bitcast %struct.PTW_tableentry* %62 to i8*
  call void @qsort(i8* %63, i64 256, i64 8, i32 (i8*, i8*)* @compare)
  %64 = getelementptr inbounds [256 x i32], [256 x i32]* %5, i64 %indvars.iv47
  br label %65

; <label>:65:                                     ; preds = %65, %._crit_edge38
  %lsr.iv55 = phi i64 [ %lsr.iv.next56, %65 ], [ -1, %._crit_edge38 ]
  call void @unroll_loop(i32 163)
  %66 = shl i64 %lsr.iv55, 3
  %scevgep57 = getelementptr i8, i8* %lsr.iv43, i64 %66
  %scevgep58 = getelementptr i8, i8* %scevgep57, i64 8
  %67 = load i8, i8* %scevgep58, align 4
  %68 = zext i8 %67 to i64
  %69 = getelementptr inbounds [256 x i32], [256 x i32]* %64, i64 0, i64 %68
  %70 = load i32, i32* %69, align 4
  %71 = icmp ne i32 %70, 0
  %72 = xor i1 %71, true
  %lsr.iv.next56 = add i64 %lsr.iv55, 1
  br i1 %72, label %65, label %73

; <label>:73:                                     ; preds = %65
  %.2.lcssa.wide = phi i64 [ %lsr.iv.next56, %65 ]
  %74 = trunc i64 %.2.lcssa.wide to i32
  %75 = getelementptr inbounds [256 x %struct.PTW_tableentry], [256 x %struct.PTW_tableentry]* %17, i64 %indvars.iv47
  %76 = sext i32 %74 to i64
  %77 = getelementptr inbounds [256 x %struct.PTW_tableentry], [256 x %struct.PTW_tableentry]* %75, i64 0, i64 %76
  %78 = getelementptr inbounds %struct.PTW_tableentry, %struct.PTW_tableentry* %77, i32 0, i32 1
  %79 = load i8, i8* %78, align 4
  %80 = add nuw nsw i64 %indvars.iv47, 3
  %81 = getelementptr inbounds [32 x i8], [32 x i8]* %12, i64 0, i64 %80
  store i8 %79, i8* %81, align 1
  %indvars.iv.next48 = add nuw nsw i64 %indvars.iv47, 1
  %scevgep44 = getelementptr i8, i8* %lsr.iv43, i64 2048
  %exitcond3 = icmp ne i64 %indvars.iv.next48, %27
  br i1 %exitcond3, label %36, label %._crit_edge46.loopexit

._crit_edge46.loopexit:                           ; preds = %73
  br label %._crit_edge46

._crit_edge46:                                    ; preds = %._crit_edge46.loopexit, %25
  %82 = getelementptr inbounds [32 x i8], [32 x i8]* %12, i64 0, i64 3
  %83 = call i32 @correct(%struct.PTW_attackstate* %0, i8* %82, i32 %2)
  %84 = icmp ne i32 %83, 0
  br i1 %84, label %85, label %89

; <label>:85:                                     ; preds = %._crit_edge46
  %86 = getelementptr inbounds [32 x i8], [32 x i8]* %12, i64 0, i64 3
  %87 = sext i32 %2 to i64
  %88 = mul i64 %87, 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %86, i64 %88, i1 false), !track !269
  br label %201

; <label>:89:                                     ; preds = %._crit_edge46, %22
  %90 = and i32 %6, 2
  %91 = icmp ne i32 %90, 0
  br i1 %91, label %200, label %92

; <label>:92:                                     ; preds = %89
  %93 = bitcast [256 x %struct.PTW_tableentry]* %17 to i8*
  %94 = getelementptr inbounds %struct.PTW_attackstate, %struct.PTW_attackstate* %0, i32 0, i32 4
  %95 = getelementptr inbounds [29 x [256 x %struct.PTW_tableentry]], [29 x [256 x %struct.PTW_tableentry]]* %94, i32 0, i32 0
  %96 = bitcast [256 x %struct.PTW_tableentry]* %95 to i8*
  %97 = sext i32 %2 to i64
  %98 = mul i64 2048, %97
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %93, i8* align 8 %96, i64 %98, i1 false), !track !270
  %99 = sdiv i32 %3, 10
  %100 = mul nsw i32 %99, 2
  %101 = sdiv i32 %3, 10
  %102 = mul nsw i32 %101, 1
  %103 = sub nsw i32 %3, %100
  %104 = sub nsw i32 %103, %102
  %105 = icmp slt i32 0, %2
  br i1 %105, label %.lr.ph25, label %._crit_edge26

.lr.ph25:                                         ; preds = %92
  %106 = zext i32 %2 to i64
  br label %107

; <label>:107:                                    ; preds = %.lr.ph25, %107
  %lsr.iv39 = phi i8* [ %16, %.lr.ph25 ], [ %scevgep40, %107 ]
  %indvars.iv27 = phi i64 [ 0, %.lr.ph25 ], [ %indvars.iv.next28, %107 ]
  call void @unroll_loop(i32 164)
  call void @qsort(i8* %lsr.iv39, i64 256, i64 8, i32 (i8*, i8*)* @compare)
  %scevgep41 = getelementptr [29 x i32], [29 x i32]* %8, i64 0, i64 %indvars.iv27
  store i32 0, i32* %scevgep41, align 4
  %indvars.iv.next28 = add nuw nsw i64 %indvars.iv27, 1
  %scevgep40 = getelementptr i8, i8* %lsr.iv39, i64 2048
  %exitcond2 = icmp ne i64 %106, %indvars.iv.next28
  br i1 %exitcond2, label %107, label %._crit_edge26.loopexit

._crit_edge26.loopexit:                           ; preds = %107
  br label %._crit_edge26

._crit_edge26:                                    ; preds = %._crit_edge26.loopexit, %92
  %108 = sext i32 %2 to i64
  %109 = mul i64 3060, %108
  %110 = alloca i8, i64 %109, align 16, !track !271
  %111 = bitcast i8* %110 to [255 x %struct.sorthelper]*
  %112 = icmp eq [255 x %struct.sorthelper]* %111, null
  br i1 %112, label %113, label %116

; <label>:113:                                    ; preds = %._crit_edge26
  %114 = getelementptr [27 x i8], [27 x i8]* @.str.222, i32 0, i32 0
  %115 = call i32 (i8*, ...) @printf(i8* %114)
  call void @exit(i32 -1) #11
  unreachable

; <label>:116:                                    ; preds = %._crit_edge26
  %117 = icmp slt i32 0, %2
  br i1 %117, label %.lr.ph17, label %._crit_edge18

.lr.ph17:                                         ; preds = %116
  %118 = zext i32 %2 to i64
  %scevgep21 = getelementptr i8, i8* %16, i64 12
  %scevgep31 = getelementptr i8, i8* %110, i64 8
  br label %119

; <label>:119:                                    ; preds = %.lr.ph17, %131
  %lsr.iv32 = phi i8* [ %scevgep31, %.lr.ph17 ], [ %scevgep33, %131 ]
  %lsr.iv22 = phi i8* [ %scevgep21, %.lr.ph17 ], [ %scevgep23, %131 ]
  %indvars.iv19 = phi i64 [ 0, %.lr.ph17 ], [ %indvars.iv.next20, %131 ]
  %120 = getelementptr inbounds [256 x %struct.PTW_tableentry], [256 x %struct.PTW_tableentry]* %17, i64 %indvars.iv19
  %121 = getelementptr inbounds [256 x %struct.PTW_tableentry], [256 x %struct.PTW_tableentry]* %120, i64 0, i64 0
  %122 = getelementptr inbounds %struct.PTW_tableentry, %struct.PTW_tableentry* %121, i32 0, i32 0
  %123 = trunc i64 %indvars.iv19 to i32
  br label %124

; <label>:124:                                    ; preds = %119, %124
  %lsr.iv34 = phi i8* [ %lsr.iv32, %119 ], [ %scevgep35, %124 ]
  %lsr.iv25 = phi i64 [ 0, %119 ], [ %lsr.iv.next26, %124 ]
  %lsr.iv3436 = bitcast i8* %lsr.iv34 to i32*
  call void @unroll_loop(i32 165)
  %125 = load i32, i32* %122, align 4
  %126 = shl i64 %lsr.iv25, 3
  %scevgep27 = getelementptr i8, i8* %lsr.iv22, i64 %126
  %scevgep2728 = bitcast i8* %scevgep27 to i32*
  %scevgep29 = getelementptr i32, i32* %scevgep2728, i64 -1
  %127 = load i32, i32* %scevgep29, align 4
  %128 = sub nsw i32 %125, %127
  store i32 %128, i32* %lsr.iv3436, align 4
  %129 = shl i64 %lsr.iv25, 3
  %scevgep30 = getelementptr i8, i8* %lsr.iv22, i64 %129
  %130 = load i8, i8* %scevgep30, align 4
  %scevgep37 = getelementptr i8, i8* %lsr.iv34, i64 -4
  store i8 %130, i8* %scevgep37, align 4
  %scevgep38 = getelementptr i32, i32* %lsr.iv3436, i64 -2
  store i32 %123, i32* %scevgep38, align 4
  %lsr.iv.next26 = add nuw nsw i64 %lsr.iv25, 1
  %scevgep35 = getelementptr i8, i8* %lsr.iv34, i64 12
  %exitcond14 = icmp ne i64 %lsr.iv.next26, 255
  br i1 %exitcond14, label %124, label %131

; <label>:131:                                    ; preds = %124
  %indvars.iv.next20 = add nuw nsw i64 %indvars.iv19, 1
  %scevgep23 = getelementptr i8, i8* %lsr.iv22, i64 2048
  %scevgep33 = getelementptr i8, i8* %lsr.iv32, i64 3060
  %exitcond1 = icmp ne i64 %indvars.iv.next20, %118
  br i1 %exitcond1, label %119, label %._crit_edge18.loopexit

._crit_edge18.loopexit:                           ; preds = %131
  br label %._crit_edge18

._crit_edge18:                                    ; preds = %._crit_edge18.loopexit, %116
  %132 = bitcast [255 x %struct.sorthelper]* %111 to i8*
  %133 = mul nsw i32 255, %2
  %134 = sext i32 %133 to i64
  call void @qsort(i8* %132, i64 %134, i64 12, i32 (i8*, i8*)* @comparesorthelper)
  %135 = bitcast [255 x %struct.sorthelper]* %111 to %struct.sorthelper*
  %136 = getelementptr inbounds [29 x i32], [29 x i32]* %8, i32 0, i32 0
  %137 = call i32 @doComputation(%struct.PTW_attackstate* %0, i8* %1, i32 %2, [256 x %struct.PTW_tableentry]* %17, %struct.sorthelper* %135, i32* %136, i32 %104, i32* %4, [256 x i32]* %5)
  %138 = icmp ne i32 %137, 0
  br i1 %138, label %201, label %139

; <label>:139:                                    ; preds = %._crit_edge18
  %140 = getelementptr inbounds %struct.PTW_attackstate, %struct.PTW_attackstate* %0, i32 0, i32 4
  %141 = getelementptr inbounds [29 x [256 x %struct.PTW_tableentry]], [29 x [256 x %struct.PTW_tableentry]]* %140, i32 0, i32 0
  %142 = getelementptr inbounds [29 x double], [29 x double]* %9, i32 0, i32 0
  %143 = getelementptr inbounds [29 x double], [29 x double]* %10, i32 0, i32 0
  call void @getdrv([256 x %struct.PTW_tableentry]* %141, i32 %2, double* %142, double* %143)
  %144 = sub nsw i32 %2, 1
  %145 = icmp slt i32 0, %144
  br i1 %145, label %.lr.ph, label %._crit_edge

.lr.ph:                                           ; preds = %139
  %146 = add i32 %2, -1
  %wide.trip.count = zext i32 %146 to i64
  %scevgep10 = getelementptr [29 x %struct.doublesorthelper], [29 x %struct.doublesorthelper]* %11, i64 0, i64 0, i32 1
  %scevgep1011 = bitcast double* %scevgep10 to [29 x %struct.doublesorthelper]*
  %147 = sub i64 0, %wide.trip.count
  br label %148

; <label>:148:                                    ; preds = %.lr.ph, %148
  %lsr.iv17 = phi i64 [ 1, %.lr.ph ], [ %lsr.iv.next18, %148 ]
  %lsr.iv12 = phi [29 x %struct.doublesorthelper]* [ %scevgep1011, %.lr.ph ], [ %152, %148 ]
  %lsr.iv1216 = bitcast [29 x %struct.doublesorthelper]* %lsr.iv12 to double*
  %lsr.iv1214 = bitcast [29 x %struct.doublesorthelper]* %lsr.iv12 to i32*
  call void @unroll_loop(i32 166)
  %scevgep15 = getelementptr i32, i32* %lsr.iv1214, i64 -2
  %tmp = trunc i64 %lsr.iv17 to i32
  store i32 %tmp, i32* %scevgep15, align 16
  %scevgep19 = getelementptr [29 x double], [29 x double]* %9, i64 0, i64 %lsr.iv17
  %149 = load double, double* %scevgep19, align 8
  %scevgep20 = getelementptr [29 x double], [29 x double]* %10, i64 0, i64 %lsr.iv17
  %150 = load double, double* %scevgep20, align 8
  %151 = fsub double %149, %150
  store double %151, double* %lsr.iv1216, align 8
  %scevgep13 = getelementptr [29 x %struct.doublesorthelper], [29 x %struct.doublesorthelper]* %lsr.iv12, i64 0, i64 1
  %152 = bitcast %struct.doublesorthelper* %scevgep13 to [29 x %struct.doublesorthelper]*
  %lsr.iv.next18 = add nuw i64 %lsr.iv17, 1
  %153 = add i64 %147, %lsr.iv.next18
  %exitcond = icmp ne i64 %153, 1
  br i1 %exitcond, label %148, label %._crit_edge.loopexit

._crit_edge.loopexit:                             ; preds = %148
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %139
  %154 = getelementptr inbounds [29 x %struct.doublesorthelper], [29 x %struct.doublesorthelper]* %11, i32 0, i32 0
  %155 = bitcast %struct.doublesorthelper* %154 to i8*
  %156 = sub nsw i32 %2, 1
  %157 = sext i32 %156 to i64
  call void @qsort(i8* %155, i64 %157, i64 16, i32 (i8*, i8*)* @comparedoublesorthelper)
  br label %158

; <label>:158:                                    ; preds = %158, %._crit_edge
  %lsr.iv7 = phi [29 x %struct.doublesorthelper]* [ %164, %158 ], [ %11, %._crit_edge ]
  %lsr.iv5 = phi i64 [ %lsr.iv.next6, %158 ], [ -1, %._crit_edge ]
  %lsr.iv79 = bitcast [29 x %struct.doublesorthelper]* %lsr.iv7 to i32*
  call void @unroll_loop(i32 167)
  %159 = load i32, i32* %lsr.iv79, align 16
  %160 = sext i32 %159 to i64
  %161 = getelementptr inbounds i32, i32* %4, i64 %160
  %162 = load i32, i32* %161, align 4
  %163 = icmp eq i32 %162, 1
  %lsr.iv.next6 = add i64 %lsr.iv5, 1
  %scevgep8 = getelementptr [29 x %struct.doublesorthelper], [29 x %struct.doublesorthelper]* %lsr.iv7, i64 0, i64 1
  %164 = bitcast %struct.doublesorthelper* %scevgep8 to [29 x %struct.doublesorthelper]*
  br i1 %163, label %158, label %165

; <label>:165:                                    ; preds = %158
  %.4.lcssa.wide = phi i64 [ %lsr.iv.next6, %158 ]
  %166 = trunc i64 %.4.lcssa.wide to i32
  %167 = sext i32 %166 to i64
  %168 = getelementptr inbounds [29 x %struct.doublesorthelper], [29 x %struct.doublesorthelper]* %11, i64 0, i64 %167
  %169 = getelementptr inbounds %struct.doublesorthelper, %struct.doublesorthelper* %168, i32 0, i32 0
  %170 = load i32, i32* %169, align 16
  %171 = sext i32 %170 to i64
  %172 = getelementptr inbounds [29 x i32], [29 x i32]* %8, i64 0, i64 %171
  store i32 1, i32* %172, align 4
  %173 = bitcast [255 x %struct.sorthelper]* %111 to %struct.sorthelper*
  %174 = getelementptr inbounds [29 x i32], [29 x i32]* %8, i32 0, i32 0
  %175 = call i32 @doComputation(%struct.PTW_attackstate* %0, i8* %1, i32 %2, [256 x %struct.PTW_tableentry]* %17, %struct.sorthelper* %173, i32* %174, i32 %100, i32* %4, [256 x i32]* %5)
  %176 = icmp ne i32 %175, 0
  br i1 %176, label %201, label %177

; <label>:177:                                    ; preds = %165
  %178 = add i32 %166, 1
  %179 = sext i32 %178 to i64
  %180 = add i64 %179, -1
  %scevgep = getelementptr [29 x %struct.doublesorthelper], [29 x %struct.doublesorthelper]* %11, i64 0, i64 %179
  %scevgep1 = bitcast %struct.doublesorthelper* %scevgep to [29 x %struct.doublesorthelper]*
  br label %181

; <label>:181:                                    ; preds = %181, %177
  %lsr.iv2 = phi [29 x %struct.doublesorthelper]* [ %187, %181 ], [ %scevgep1, %177 ]
  %lsr.iv = phi i64 [ %lsr.iv.next, %181 ], [ %180, %177 ]
  %lsr.iv24 = bitcast [29 x %struct.doublesorthelper]* %lsr.iv2 to i32*
  call void @unroll_loop(i32 168)
  %182 = load i32, i32* %lsr.iv24, align 16
  %183 = sext i32 %182 to i64
  %184 = getelementptr inbounds i32, i32* %4, i64 %183
  %185 = load i32, i32* %184, align 4
  %186 = icmp eq i32 %185, 1
  %lsr.iv.next = add i64 %lsr.iv, 1
  %scevgep3 = getelementptr [29 x %struct.doublesorthelper], [29 x %struct.doublesorthelper]* %lsr.iv2, i64 0, i64 1
  %187 = bitcast %struct.doublesorthelper* %scevgep3 to [29 x %struct.doublesorthelper]*
  br i1 %186, label %181, label %188

; <label>:188:                                    ; preds = %181
  %.5.lcssa.wide = phi i64 [ %lsr.iv.next, %181 ]
  %189 = trunc i64 %.5.lcssa.wide to i32
  %190 = sext i32 %189 to i64
  %191 = getelementptr inbounds [29 x %struct.doublesorthelper], [29 x %struct.doublesorthelper]* %11, i64 0, i64 %190
  %192 = getelementptr inbounds %struct.doublesorthelper, %struct.doublesorthelper* %191, i32 0, i32 0
  %193 = load i32, i32* %192, align 16
  %194 = sext i32 %193 to i64
  %195 = getelementptr inbounds [29 x i32], [29 x i32]* %8, i64 0, i64 %194
  store i32 1, i32* %195, align 4
  %196 = bitcast [255 x %struct.sorthelper]* %111 to %struct.sorthelper*
  %197 = getelementptr inbounds [29 x i32], [29 x i32]* %8, i32 0, i32 0
  %198 = call i32 @doComputation(%struct.PTW_attackstate* %0, i8* %1, i32 %2, [256 x %struct.PTW_tableentry]* %17, %struct.sorthelper* %196, i32* %197, i32 %102, i32* %4, [256 x i32]* %5)
  %199 = icmp ne i32 %198, 0
  br i1 %199, label %201, label %200

; <label>:200:                                    ; preds = %188, %89
  br label %201

; <label>:201:                                    ; preds = %188, %165, %._crit_edge18, %200, %85
  %.0 = phi i32 [ 0, %200 ], [ 1, %85 ], [ 1, %._crit_edge18 ], [ 1, %165 ], [ 1, %188 ]
  ret i32 %.0
}

; Function Attrs: noinline nounwind uwtable
define internal void @guesskeybytes(i32, i8*, i8*, i8*, i32) #0 {
  %6 = alloca [256 x i8], align 16, !track !272
  %7 = getelementptr inbounds [256 x i8], [256 x i8]* %6, i32 0, i32 0
  %8 = getelementptr [256 x i8], [256 x i8]* @rc4initial, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %7, i8* align 16 %8, i64 256, i1 false), !track !273
  %9 = icmp slt i32 0, %0
  br i1 %9, label %.lr.ph13, label %._crit_edge14

.lr.ph13:                                         ; preds = %5
  %10 = zext i32 %0 to i64
  br label %11

; <label>:11:                                     ; preds = %.lr.ph13, %11
  %indvars.iv15 = phi i64 [ 0, %.lr.ph13 ], [ %indvars.iv.next16, %11 ]
  %.0410 = phi i8 [ 0, %.lr.ph13 ], [ %19, %11 ]
  call void @unroll_loop(i32 169)
  %scevgep = getelementptr [256 x i8], [256 x i8]* %6, i64 0, i64 %indvars.iv15
  %12 = load i8, i8* %scevgep, align 1
  %13 = zext i8 %12 to i32
  %scevgep3 = getelementptr i8, i8* %1, i64 %indvars.iv15
  %14 = load i8, i8* %scevgep3, align 1
  %15 = zext i8 %14 to i32
  %16 = add nsw i32 %13, %15
  %17 = zext i8 %.0410 to i32
  %18 = add nsw i32 %17, %16
  %19 = trunc i32 %18 to i8
  %scevgep1 = getelementptr [256 x i8], [256 x i8]* %6, i64 0, i64 %indvars.iv15
  %20 = load i8, i8* %scevgep1, align 1
  %21 = zext i8 %19 to i64
  %22 = getelementptr inbounds [256 x i8], [256 x i8]* %6, i64 0, i64 %21
  %23 = load i8, i8* %22, align 1
  %scevgep2 = getelementptr [256 x i8], [256 x i8]* %6, i64 0, i64 %indvars.iv15
  store i8 %23, i8* %scevgep2, align 1
  %24 = zext i8 %19 to i64
  %25 = getelementptr inbounds [256 x i8], [256 x i8]* %6, i64 0, i64 %24
  store i8 %20, i8* %25, align 1
  %indvars.iv.next16 = add nuw nsw i64 %indvars.iv15, 1
  %exitcond = icmp ne i64 %10, %indvars.iv.next16
  br i1 %exitcond, label %11, label %._crit_edge14.loopexit

._crit_edge14.loopexit:                           ; preds = %11
  %.lcssa = phi i32 [ %18, %11 ]
  %26 = trunc i32 %.lcssa to i8
  br label %._crit_edge14

._crit_edge14:                                    ; preds = %._crit_edge14.loopexit, %5
  %.04.lcssa = phi i8 [ 0, %5 ], [ %26, %._crit_edge14.loopexit ]
  %27 = icmp slt i32 0, %4
  br i1 %27, label %.lr.ph, label %._crit_edge

.lr.ph:                                           ; preds = %._crit_edge14
  %28 = sext i32 %0 to i64
  %29 = zext i32 %4 to i64
  %30 = zext i8 %.04.lcssa to i32
  br label %31

; <label>:31:                                     ; preds = %.lr.ph, %47
  %indvars.iv8 = phi i64 [ 0, %.lr.ph ], [ %indvars.iv.next9, %47 ]
  %indvars.iv = phi i64 [ %28, %.lr.ph ], [ %indvars.iv.next, %47 ]
  %.07 = phi i8 [ 0, %.lr.ph ], [ %53, %47 ]
  call void @unroll_loop(i32 170)
  %32 = sub nsw i64 %indvars.iv, 1
  %33 = getelementptr inbounds i8, i8* %2, i64 %32
  %34 = load i8, i8* %33, align 1
  %35 = zext i8 %34 to i32
  %36 = trunc i64 %indvars.iv to i32
  %37 = sub nsw i32 %36, %35
  %38 = trunc i32 %37 to i8
  %39 = zext i8 %38 to i32
  br label %40

; <label>:40:                                     ; preds = %40, %31
  %lsr.iv = phi i8 [ %lsr.iv.next, %40 ], [ -1, %31 ]
  %41 = add i8 %lsr.iv, 1
  call void @unroll_loop(i32 171)
  %42 = zext i8 %41 to i64
  %43 = getelementptr inbounds [256 x i8], [256 x i8]* %6, i64 0, i64 %42
  %44 = load i8, i8* %43, align 1
  %45 = zext i8 %44 to i32
  %46 = icmp ne i32 %39, %45
  %lsr.iv.next = add i8 %lsr.iv, 1
  br i1 %46, label %40, label %47

; <label>:47:                                     ; preds = %40
  %.01.lcssa = phi i8 [ %lsr.iv.next, %40 ]
  %48 = getelementptr inbounds [256 x i8], [256 x i8]* %6, i64 0, i64 %indvars.iv
  %49 = load i8, i8* %48, align 1
  %50 = zext i8 %49 to i32
  %51 = zext i8 %.07 to i32
  %52 = add nsw i32 %51, %50
  %53 = trunc i32 %52 to i8
  %54 = zext i8 %53 to i32
  %55 = add nsw i32 %30, %54
  %56 = zext i8 %.01.lcssa to i32
  %57 = sub nsw i32 %56, %55
  %58 = trunc i32 %57 to i8
  %59 = getelementptr inbounds i8, i8* %3, i64 %indvars.iv8
  store i8 %58, i8* %59, align 1
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  %indvars.iv.next9 = add nuw nsw i64 %indvars.iv8, 1
  %exitcond1 = icmp ne i64 %indvars.iv.next9, %29
  br i1 %exitcond1, label %31, label %._crit_edge.loopexit

._crit_edge.loopexit:                             ; preds = %47
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %._crit_edge14
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @compare(i8*, i8*) #0 {
  %3 = bitcast i8* %0 to %struct.PTW_tableentry*
  %4 = bitcast i8* %1 to %struct.PTW_tableentry*
  %5 = getelementptr inbounds %struct.PTW_tableentry, %struct.PTW_tableentry* %3, i32 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %struct.PTW_tableentry, %struct.PTW_tableentry* %4, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp sgt i32 %6, %8
  br i1 %9, label %16, label %10

; <label>:10:                                     ; preds = %2
  %11 = getelementptr inbounds %struct.PTW_tableentry, %struct.PTW_tableentry* %3, i32 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %struct.PTW_tableentry, %struct.PTW_tableentry* %4, i32 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %12, %14
  %. = select i1 %15, i32 0, i32 1
  br label %16

; <label>:16:                                     ; preds = %10, %2
  %.0 = phi i32 [ -1, %2 ], [ %., %10 ]
  ret i32 %.0
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @correct(%struct.PTW_attackstate*, i8*, i32) #0 {
  %4 = bitcast %struct.PTW_attackstate* %0 to i8*
  %5 = alloca [32 x i8], align 16, !track !274
  %6 = alloca %struct.rc4state, align 1, !track !275
  %7 = getelementptr inbounds %struct.PTW_attackstate, %struct.PTW_attackstate* %0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp slt i32 %8, 3
  br i1 %9, label %.loopexit, label %10

; <label>:10:                                     ; preds = %3
  %11 = load i32, i32* @tried, align 4
  %12 = add nsw i32 %11, 1
  store i32 %12, i32* @tried, align 4
  %13 = call i32 @rand() #9
  %14 = getelementptr inbounds %struct.PTW_attackstate, %struct.PTW_attackstate* %0, i32 0, i32 2
  %15 = load i32, i32* %14, align 4
  %16 = sub nsw i32 %15, 10
  %17 = srem i32 %13, %16
  %18 = add nsw i32 %17, 10
  %19 = sext i32 %17 to i64
  %20 = sext i32 %18 to i64
  %21 = getelementptr inbounds [32 x i8], [32 x i8]* %5, i64 0, i64 3
  %22 = sext i32 %2 to i64
  %23 = getelementptr inbounds [32 x i8], [32 x i8]* %5, i32 0, i32 0
  %24 = getelementptr inbounds %struct.PTW_attackstate, %struct.PTW_attackstate* %0, i32 0, i32 3
  %25 = getelementptr inbounds [32 x i8], [32 x i8]* %5, i32 0, i32 0
  %26 = add nsw i32 %2, 3
  %27 = mul i64 %19, 40
  %28 = add i64 %27, 2097163
  %uglygep = getelementptr i8, i8* %4, i64 %28
  %uglygep3 = bitcast i8* %uglygep to %struct.PTW_attackstate*
  br label %29

; <label>:29:                                     ; preds = %10, %42
  %lsr.iv = phi %struct.PTW_attackstate* [ %uglygep3, %10 ], [ %43, %42 ]
  %indvars.iv5 = phi i64 [ %19, %10 ], [ %indvars.iv.next6, %42 ]
  %lsr.iv4 = bitcast %struct.PTW_attackstate* %lsr.iv to i8*
  call void @unroll_loop(i32 172)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %21, i8* align 1 %1, i64 %22, i1 false), !track !276
  %30 = getelementptr inbounds [10000 x %struct.PTW_session], [10000 x %struct.PTW_session]* %24, i64 0, i64 %indvars.iv5
  %31 = getelementptr inbounds %struct.PTW_session, %struct.PTW_session* %30, i32 0, i32 0
  %32 = getelementptr inbounds [3 x i8], [3 x i8]* %31, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %23, i8* align 8 %32, i64 3, i1 false), !track !277
  call void @rc4init(i8* %25, i32 %26, %struct.rc4state* %6)
  br label %33

; <label>:33:                                     ; preds = %29, %40
  %indvars.iv = phi i64 [ 0, %29 ], [ %indvars.iv.next, %40 ]
  call void @unroll_loop(i32 173)
  %34 = call zeroext i8 @rc4update(%struct.rc4state* %6)
  %35 = zext i8 %34 to i32
  %uglygep5 = getelementptr i8, i8* %lsr.iv4, i64 %indvars.iv
  %36 = load i8, i8* %uglygep5, align 1
  %37 = zext i8 %36 to i32
  %38 = xor i32 %35, %37
  %39 = icmp ne i32 %38, 0
  br i1 %39, label %.loopexit.loopexit, label %40

; <label>:40:                                     ; preds = %33
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %41 = icmp ult i64 %indvars.iv.next, 6
  br i1 %41, label %33, label %42

; <label>:42:                                     ; preds = %40
  %indvars.iv.next6 = add nsw i64 %indvars.iv5, 1
  %scevgep = getelementptr %struct.PTW_attackstate, %struct.PTW_attackstate* %lsr.iv, i64 0, i32 1, i64 36
  %43 = bitcast i8* %scevgep to %struct.PTW_attackstate*
  %44 = icmp slt i64 %indvars.iv.next6, %20
  br i1 %44, label %29, label %.loopexit.loopexit1

.loopexit.loopexit:                               ; preds = %33
  %.0.ph = phi i32 [ 0, %33 ]
  br label %.loopexit

.loopexit.loopexit1:                              ; preds = %42
  %.0.ph2 = phi i32 [ 1, %42 ]
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit.loopexit1, %.loopexit.loopexit, %3
  %.0 = phi i32 [ 0, %3 ], [ %.0.ph, %.loopexit.loopexit ], [ %.0.ph2, %.loopexit.loopexit1 ]
  ret i32 %.0
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @comparesorthelper(i8*, i8*) #0 {
  %3 = bitcast i8* %0 to %struct.sorthelper*
  %4 = bitcast i8* %1 to %struct.sorthelper*
  %5 = getelementptr inbounds %struct.sorthelper, %struct.sorthelper* %3, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %struct.sorthelper, %struct.sorthelper* %4, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp sgt i32 %6, %8
  br i1 %9, label %16, label %10

; <label>:10:                                     ; preds = %2
  %11 = getelementptr inbounds %struct.sorthelper, %struct.sorthelper* %3, i32 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %struct.sorthelper, %struct.sorthelper* %4, i32 0, i32 2
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %12, %14
  %. = select i1 %15, i32 0, i32 -1
  br label %16

; <label>:16:                                     ; preds = %10, %2
  %.0 = phi i32 [ 1, %2 ], [ %., %10 ]
  ret i32 %.0
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @doComputation(%struct.PTW_attackstate*, i8*, i32, [256 x %struct.PTW_tableentry]*, %struct.sorthelper*, i32*, i32, i32*, [256 x i32]*) #0 {
  %10 = alloca [29 x i32], align 16, !track !278
  %11 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 6
  %12 = load i32, i32* %11, align 8
  %13 = icmp ne i32 %12, 0
  br i1 %13, label %18, label %14

; <label>:14:                                     ; preds = %9
  %15 = bitcast [256 x %struct.PTW_tableentry]* %3 to i8*
  %16 = sext i32 %2 to i64
  %17 = mul i64 2048, %16
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([29 x [256 x %struct.PTW_tableentry]]* @keytable to i8*), i8* align 4 %15, i64 %17, i1 false), !track !279
  br label %18

; <label>:18:                                     ; preds = %14, %9
  %19 = icmp slt i32 0, %2
  br i1 %19, label %.lr.ph19, label %._crit_edge20

.lr.ph19:                                         ; preds = %18
  %20 = zext i32 %2 to i64
  br label %21

; <label>:21:                                     ; preds = %.lr.ph19, %26
  %indvars.iv21 = phi i64 [ 0, %.lr.ph19 ], [ %indvars.iv.next22, %26 ]
  call void @unroll_loop(i32 174)
  %scevgep6 = getelementptr i32, i32* %5, i64 %indvars.iv21
  %22 = load i32, i32* %scevgep6, align 4
  %23 = icmp eq i32 %22, 1
  %scevgep7 = getelementptr [29 x i32], [29 x i32]* %10, i64 0, i64 %indvars.iv21
  br i1 %23, label %24, label %25

; <label>:24:                                     ; preds = %21
  %tmp = trunc i64 %indvars.iv21 to i32
  store i32 %tmp, i32* %scevgep7, align 4
  br label %26

; <label>:25:                                     ; preds = %21
  store i32 1, i32* %scevgep7, align 4
  br label %26

; <label>:26:                                     ; preds = %24, %25
  %indvars.iv.next22 = add nuw nsw i64 %indvars.iv21, 1
  %exitcond = icmp ne i64 %20, %indvars.iv.next22
  br i1 %exitcond, label %21, label %._crit_edge20.loopexit

._crit_edge20.loopexit:                           ; preds = %26
  br label %._crit_edge20

._crit_edge20:                                    ; preds = %._crit_edge20.loopexit, %18
  store i32 %6, i32* @max_tries, align 4
  %27 = icmp slt i32 0, %6
  br i1 %27, label %.lr.ph16, label %.loopexit

.lr.ph16:                                         ; preds = %._crit_edge20
  %28 = zext i32 %2 to i64
  %29 = getelementptr inbounds [29 x i32], [29 x i32]* %10, i32 0, i32 0
  %30 = mul nsw i32 %2, 255
  %31 = sext i32 %30 to i64
  %32 = mul nsw i32 %2, 255
  %33 = icmp slt i32 0, %2
  %34 = sub nsw i32 %2, 1
  %35 = getelementptr inbounds [29 x i32], [29 x i32]* %10, i32 0, i32 0
  br label %36

; <label>:36:                                     ; preds = %.lr.ph16, %101
  %.0114 = phi i32 [ 0, %.lr.ph16 ], [ %90, %101 ]
  %.0213 = phi i32 [ -1, %.lr.ph16 ], [ %85, %101 ]
  %.1612 = phi i32 [ 0, %.lr.ph16 ], [ %96, %101 ]
  call void @unroll_loop(i32 175)
  %37 = trunc i32 %.0114 to i8
  %38 = call i32 @doRound([256 x %struct.PTW_tableentry]* %3, i32 0, i32 %.0213, i8 zeroext %37, i32* %29, i8* %1, i32 %2, %struct.PTW_attackstate* %0, i8 zeroext 0, i32* %5, i32* %7, [256 x i32]* %8)
  %39 = icmp eq i32 %38, 1
  br i1 %39, label %40, label %50

; <label>:40:                                     ; preds = %36
  %41 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 6
  %42 = load i32, i32* %41, align 8
  %43 = icmp ne i32 %42, 0
  br i1 %43, label %112, label %44

; <label>:44:                                     ; preds = %40
  %45 = sub nsw i32 %2, 1
  %46 = getelementptr inbounds [29 x i32], [29 x i32]* %10, i32 0, i32 0
  %47 = load i32, i32* @tried, align 4
  %48 = getelementptr [29 x [256 x %struct.PTW_tableentry]], [29 x [256 x %struct.PTW_tableentry]]* @keytable, i32 0, i32 0
  %49 = getelementptr [29 x i32], [29 x i32]* @depth, i32 0, i32 0
  call void @show_wep_stats(i32 %45, i32 1, [256 x %struct.PTW_tableentry]* %48, i32* %46, i32* %49, i32 %47)
  br label %112

; <label>:50:                                     ; preds = %36
  %51 = sext i32 %.1612 to i64
  %52 = add i64 %51, -1
  %scevgep = getelementptr %struct.sorthelper, %struct.sorthelper* %4, i64 %51
  br label %53

; <label>:53:                                     ; preds = %68, %50
  %lsr.iv1 = phi %struct.sorthelper* [ %scevgep2, %68 ], [ %scevgep, %50 ]
  %lsr.iv = phi i64 [ %lsr.iv.next, %68 ], [ %52, %50 ]
  %lsr.iv13 = bitcast %struct.sorthelper* %lsr.iv1 to i32*
  %54 = add i64 %lsr.iv, 1
  call void @unroll_loop(i32 176)
  %55 = icmp slt i64 %54, %31
  br i1 %55, label %56, label %68

; <label>:56:                                     ; preds = %53
  %57 = load i32, i32* %lsr.iv13, align 4
  %58 = sext i32 %57 to i64
  %59 = getelementptr inbounds i32, i32* %5, i64 %58
  %60 = load i32, i32* %59, align 4
  %61 = icmp eq i32 %60, 1
  br i1 %61, label %68, label %62

; <label>:62:                                     ; preds = %56
  %63 = load i32, i32* %lsr.iv13, align 4
  %64 = sext i32 %63 to i64
  %65 = getelementptr inbounds i32, i32* %7, i64 %64
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %66, 1
  br label %68

; <label>:68:                                     ; preds = %56, %62, %53
  %69 = phi i1 [ false, %53 ], [ true, %56 ], [ %67, %62 ]
  %lsr.iv.next = add i64 %lsr.iv, 1
  %scevgep2 = getelementptr %struct.sorthelper, %struct.sorthelper* %lsr.iv1, i64 1
  br i1 %69, label %53, label %70

; <label>:70:                                     ; preds = %68
  %.27.lcssa.wide = phi i64 [ %lsr.iv.next, %68 ]
  %71 = trunc i64 %.27.lcssa.wide to i32
  %72 = icmp sge i32 %71, %32
  br i1 %72, label %.loopexit.loopexit, label %73

; <label>:73:                                     ; preds = %70
  %74 = sext i32 %71 to i64
  %75 = getelementptr inbounds %struct.sorthelper, %struct.sorthelper* %4, i64 %74
  %76 = getelementptr inbounds %struct.sorthelper, %struct.sorthelper* %75, i32 0, i32 0
  %77 = load i32, i32* %76, align 4
  %78 = sext i32 %77 to i64
  %79 = getelementptr inbounds [29 x i32], [29 x i32]* %10, i64 0, i64 %78
  %80 = load i32, i32* %79, align 4
  %81 = add nsw i32 %80, 1
  store i32 %81, i32* %79, align 4
  %82 = sext i32 %71 to i64
  %83 = getelementptr inbounds %struct.sorthelper, %struct.sorthelper* %4, i64 %82
  %84 = getelementptr inbounds %struct.sorthelper, %struct.sorthelper* %83, i32 0, i32 0
  %85 = load i32, i32* %84, align 4
  %86 = sext i32 %71 to i64
  %87 = getelementptr inbounds %struct.sorthelper, %struct.sorthelper* %4, i64 %86
  %88 = getelementptr inbounds %struct.sorthelper, %struct.sorthelper* %87, i32 0, i32 1
  %89 = load i8, i8* %88, align 4
  %90 = zext i8 %89 to i32
  br i1 %33, label %.lr.ph.preheader, label %._crit_edge

.lr.ph.preheader:                                 ; preds = %73
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %.lr.ph
  %indvars.iv10 = phi i64 [ %indvars.iv.next11, %.lr.ph ], [ 0, %.lr.ph.preheader ]
  %.19 = phi i32 [ %spec.select, %.lr.ph ], [ 1, %.lr.ph.preheader ]
  call void @unroll_loop(i32 177)
  %scevgep4 = getelementptr [29 x i32], [29 x i32]* %10, i64 0, i64 %indvars.iv10
  %91 = load i32, i32* %scevgep4, align 4
  %92 = mul nsw i32 %.19, %91
  %scevgep5 = getelementptr i32, i32* %7, i64 %indvars.iv10
  %93 = load i32, i32* %scevgep5, align 4
  %94 = icmp eq i32 %93, 1
  %95 = mul nsw i32 %92, 256
  %spec.select = select i1 %94, i32 %95, i32 %92
  %indvars.iv.next11 = add nuw nsw i64 %indvars.iv10, 1
  %exitcond1 = icmp ne i64 %28, %indvars.iv.next11
  br i1 %exitcond1, label %.lr.ph, label %._crit_edge.loopexit

._crit_edge.loopexit:                             ; preds = %.lr.ph
  %.1.lcssa.ph = phi i32 [ %spec.select, %.lr.ph ]
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %73
  %.1.lcssa = phi i32 [ 1, %73 ], [ %.1.lcssa.ph, %._crit_edge.loopexit ]
  %96 = add nsw i32 %71, 1
  %97 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 6), align 8
  %98 = icmp ne i32 %97, 0
  br i1 %98, label %101, label %99

; <label>:99:                                     ; preds = %._crit_edge
  %100 = load i32, i32* @tried, align 4
  call void @show_wep_stats(i32 %34, i32 0, [256 x %struct.PTW_tableentry]* getelementptr inbounds ([29 x [256 x %struct.PTW_tableentry]], [29 x [256 x %struct.PTW_tableentry]]* @keytable, i64 0, i64 0), i32* %35, i32* getelementptr inbounds ([29 x i32], [29 x i32]* @depth, i64 0, i64 0), i32 %100)
  br label %101

; <label>:101:                                    ; preds = %99, %._crit_edge
  %102 = icmp slt i32 %.1.lcssa, %6
  br i1 %102, label %36, label %.loopexit.loopexit

.loopexit.loopexit:                               ; preds = %70, %101
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit.loopexit, %._crit_edge20
  %103 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 6
  %104 = load i32, i32* %103, align 8
  %105 = icmp ne i32 %104, 0
  br i1 %105, label %112, label %106

; <label>:106:                                    ; preds = %.loopexit
  %107 = sub nsw i32 %2, 1
  %108 = getelementptr inbounds [29 x i32], [29 x i32]* %10, i32 0, i32 0
  %109 = load i32, i32* @tried, align 4
  %110 = getelementptr [29 x [256 x %struct.PTW_tableentry]], [29 x [256 x %struct.PTW_tableentry]]* @keytable, i32 0, i32 0
  %111 = getelementptr [29 x i32], [29 x i32]* @depth, i32 0, i32 0
  call void @show_wep_stats(i32 %107, i32 1, [256 x %struct.PTW_tableentry]* %110, i32* %108, i32* %111, i32 %109)
  br label %112

; <label>:112:                                    ; preds = %.loopexit, %106, %40, %44
  %.0 = phi i32 [ 1, %44 ], [ 1, %40 ], [ 0, %106 ], [ 0, %.loopexit ]
  ret i32 %.0
}

; Function Attrs: noinline nounwind uwtable
define internal void @getdrv([256 x %struct.PTW_tableentry]*, i32, double*, double*) #0 {
  %5 = getelementptr inbounds [256 x %struct.PTW_tableentry], [256 x %struct.PTW_tableentry]* %0, i64 0
  br label %6

; <label>:6:                                      ; preds = %4, %6
  %indvars.iv22 = phi i64 [ 0, %4 ], [ %indvars.iv.next23, %6 ]
  %.0421 = phi i32 [ 0, %4 ], [ %8, %6 ]
  call void @unroll_loop(i32 178)
  %scevgep10 = getelementptr [256 x %struct.PTW_tableentry], [256 x %struct.PTW_tableentry]* %5, i64 0, i64 %indvars.iv22
  %scevgep1011 = bitcast %struct.PTW_tableentry* %scevgep10 to i32*
  %7 = load i32, i32* %scevgep1011, align 4
  %8 = add nsw i32 %.0421, %7
  %indvars.iv.next23 = add nuw nsw i64 %indvars.iv22, 1
  %exitcond24 = icmp ne i64 %indvars.iv.next23, 256
  br i1 %exitcond24, label %6, label %9

; <label>:9:                                      ; preds = %6
  %.04.lcssa = phi i32 [ %8, %6 ]
  %10 = sdiv i32 %.04.lcssa, 256
  %11 = sitofp i32 %10 to double
  %12 = icmp slt i32 0, %1
  br i1 %12, label %.lr.ph, label %._crit_edge

.lr.ph:                                           ; preds = %9
  %13 = zext i32 %1 to i64
  %14 = sitofp i32 %.04.lcssa to double
  %15 = sitofp i32 %.04.lcssa to double
  br label %16

; <label>:16:                                     ; preds = %.lr.ph, %61
  %lsr.iv = phi [256 x %struct.PTW_tableentry]* [ %5, %.lr.ph ], [ %62, %61 ]
  %indvars.iv17 = phi i64 [ 0, %.lr.ph ], [ %indvars.iv.next18, %61 ]
  call void @unroll_loop(i32 179)
  %17 = getelementptr inbounds [13 x double], [13 x double]* @eval, i64 0, i64 %indvars.iv17
  %18 = load double, double* %17, align 8
  %19 = getelementptr inbounds [13 x double], [13 x double]* @eval, i64 0, i64 %indvars.iv17
  %20 = load double, double* %19, align 8
  %21 = getelementptr inbounds double, double* %2, i64 %indvars.iv17
  store double 0.000000e+00, double* %21, align 8
  %22 = getelementptr inbounds double, double* %3, i64 %indvars.iv17
  store double 0.000000e+00, double* %22, align 8
  br label %23

; <label>:23:                                     ; preds = %16, %31
  %indvars.iv = phi i64 [ 0, %16 ], [ %indvars.iv.next, %31 ]
  %.011 = phi double [ 0.000000e+00, %16 ], [ %.1, %31 ]
  %.0110 = phi double [ 0.000000e+00, %16 ], [ %.12, %31 ]
  call void @unroll_loop(i32 180)
  %scevgep1 = getelementptr [256 x %struct.PTW_tableentry], [256 x %struct.PTW_tableentry]* %lsr.iv, i64 0, i64 %indvars.iv
  %scevgep12 = bitcast %struct.PTW_tableentry* %scevgep1 to i32*
  %24 = load i32, i32* %scevgep12, align 4
  %25 = sitofp i32 %24 to double
  %26 = fcmp ogt double %25, %.0110
  br i1 %26, label %27, label %31

; <label>:27:                                     ; preds = %23
  %scevgep3 = getelementptr [256 x %struct.PTW_tableentry], [256 x %struct.PTW_tableentry]* %lsr.iv, i64 0, i64 %indvars.iv
  %scevgep34 = bitcast %struct.PTW_tableentry* %scevgep3 to i32*
  %28 = load i32, i32* %scevgep34, align 4
  %29 = sitofp i32 %28 to double
  %tmp = trunc i64 %indvars.iv to i32
  %30 = sitofp i32 %tmp to double
  br label %31

; <label>:31:                                     ; preds = %23, %27
  %.12 = phi double [ %29, %27 ], [ %.0110, %23 ]
  %.1 = phi double [ %30, %27 ], [ %.011, %23 ]
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp ne i64 %indvars.iv.next, 256
  br i1 %exitcond, label %23, label %32

; <label>:32:                                     ; preds = %31
  %.0.lcssa = phi double [ %.1, %31 ]
  %33 = fsub double 1.000000e+00, %20
  %34 = fmul double %18, %14
  %35 = fdiv double %33, 2.550000e+02
  %36 = fmul double %35, %15
  %37 = getelementptr inbounds double, double* %3, i64 %indvars.iv17
  %38 = getelementptr inbounds double, double* %2, i64 %indvars.iv17
  br label %39

; <label>:39:                                     ; preds = %32, %50
  %indvars.iv13 = phi i64 [ 0, %32 ], [ %indvars.iv.next14, %50 ]
  call void @unroll_loop(i32 181)
  %tmp5 = trunc i64 %indvars.iv13 to i32
  %40 = sitofp i32 %tmp5 to double
  %41 = fcmp oeq double %40, %.0.lcssa
  %scevgep6 = getelementptr [256 x %struct.PTW_tableentry], [256 x %struct.PTW_tableentry]* %lsr.iv, i64 0, i64 %indvars.iv13
  %scevgep67 = bitcast %struct.PTW_tableentry* %scevgep6 to i32*
  %42 = load i32, i32* %scevgep67, align 4
  %43 = sitofp i32 %42 to double
  br i1 %41, label %44, label %47

; <label>:44:                                     ; preds = %39
  %45 = fdiv double %43, %34
  %46 = fsub double 1.000000e+00, %45
  br label %50

; <label>:47:                                     ; preds = %39
  %48 = fdiv double %43, %36
  %49 = fsub double 1.000000e+00, %48
  br label %50

; <label>:50:                                     ; preds = %47, %44
  %.03 = phi double [ %46, %44 ], [ %49, %47 ]
  %51 = fmul double %.03, %.03
  %52 = load double, double* %37, align 8
  %53 = fadd double %52, %51
  store double %53, double* %37, align 8
  %scevgep8 = getelementptr [256 x %struct.PTW_tableentry], [256 x %struct.PTW_tableentry]* %lsr.iv, i64 0, i64 %indvars.iv13
  %scevgep89 = bitcast %struct.PTW_tableentry* %scevgep8 to i32*
  %54 = load i32, i32* %scevgep89, align 4
  %55 = sitofp i32 %54 to double
  %56 = fdiv double %55, %11
  %57 = fsub double 1.000000e+00, %56
  %58 = fmul double %57, %57
  %59 = load double, double* %38, align 8
  %60 = fadd double %59, %58
  store double %60, double* %38, align 8
  %indvars.iv.next14 = add nuw nsw i64 %indvars.iv13, 1
  %exitcond15 = icmp ne i64 %indvars.iv.next14, 256
  br i1 %exitcond15, label %39, label %61

; <label>:61:                                     ; preds = %50
  %indvars.iv.next18 = add nuw nsw i64 %indvars.iv17, 1
  %scevgep = getelementptr [256 x %struct.PTW_tableentry], [256 x %struct.PTW_tableentry]* %lsr.iv, i64 1, i64 0
  %62 = bitcast %struct.PTW_tableentry* %scevgep to [256 x %struct.PTW_tableentry]*
  %exitcond1 = icmp ne i64 %indvars.iv.next18, %13
  br i1 %exitcond1, label %16, label %._crit_edge.loopexit

._crit_edge.loopexit:                             ; preds = %61
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %9
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @comparedoublesorthelper(i8*, i8*) #0 {
  %3 = bitcast i8* %0 to %struct.doublesorthelper*
  %4 = bitcast i8* %1 to %struct.doublesorthelper*
  %5 = getelementptr inbounds %struct.doublesorthelper, %struct.doublesorthelper* %3, i32 0, i32 1
  %6 = load double, double* %5, align 8
  %7 = getelementptr inbounds %struct.doublesorthelper, %struct.doublesorthelper* %4, i32 0, i32 1
  %8 = load double, double* %7, align 8
  %9 = fcmp ogt double %6, %8
  br i1 %9, label %16, label %10

; <label>:10:                                     ; preds = %2
  %11 = getelementptr inbounds %struct.doublesorthelper, %struct.doublesorthelper* %3, i32 0, i32 1
  %12 = load double, double* %11, align 8
  %13 = getelementptr inbounds %struct.doublesorthelper, %struct.doublesorthelper* %4, i32 0, i32 1
  %14 = load double, double* %13, align 8
  %15 = fcmp oeq double %12, %14
  %. = select i1 %15, i32 0, i32 -1
  br label %16

; <label>:16:                                     ; preds = %10, %2
  %.0 = phi i32 [ 1, %2 ], [ %., %10 ]
  ret i32 %.0
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @doRound([256 x %struct.PTW_tableentry]*, i32, i32, i8 zeroext, i32*, i8*, i32, %struct.PTW_attackstate*, i8 zeroext, i32*, i32*, [256 x i32]*) #0 {
  %13 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 6
  %14 = load i32, i32* %13, align 8
  %15 = icmp eq i32 %14, 0
  %16 = icmp slt i32 %1, 4
  %or.cond = and i1 %15, %16
  br i1 %or.cond, label %17, label %22

; <label>:17:                                     ; preds = %12
  %18 = sub nsw i32 %6, 1
  %19 = load i32, i32* @tried, align 4
  %20 = getelementptr [29 x [256 x %struct.PTW_tableentry]], [29 x [256 x %struct.PTW_tableentry]]* @keytable, i32 0, i32 0
  %21 = getelementptr [29 x i32], [29 x i32]* @depth, i32 0, i32 0
  call void @show_wep_stats(i32 %18, i32 0, [256 x %struct.PTW_tableentry]* %20, i32* %4, i32* %21, i32 %19)
  br label %22

; <label>:22:                                     ; preds = %12, %17
  %23 = icmp sgt i32 %1, 0
  br i1 %23, label %24, label %36

; <label>:24:                                     ; preds = %22
  %25 = sub nsw i32 %1, 1
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds [256 x i32], [256 x i32]* %11, i64 %26
  %28 = sub nsw i32 %1, 1
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds i8, i8* %5, i64 %29
  %31 = load i8, i8* %30, align 1
  %32 = zext i8 %31 to i64
  %33 = getelementptr inbounds [256 x i32], [256 x i32]* %27, i64 0, i64 %32
  %34 = load i32, i32* %33, align 4
  %35 = icmp ne i32 %34, 0
  br i1 %35, label %36, label %._crit_edge

; <label>:36:                                     ; preds = %24, %22
  %37 = icmp eq i32 %1, %6
  br i1 %37, label %38, label %40

; <label>:38:                                     ; preds = %36
  %39 = call i32 @correct(%struct.PTW_attackstate* %7, i8* %5, i32 %6)
  br label %._crit_edge

; <label>:40:                                     ; preds = %36
  %41 = sext i32 %1 to i64
  %42 = getelementptr inbounds i32, i32* %10, i64 %41
  %43 = load i32, i32* %42, align 4
  %44 = icmp eq i32 %43, 1
  br i1 %44, label %.preheader.preheader, label %55

.preheader.preheader:                             ; preds = %40
  %45 = sext i32 %1 to i64
  %46 = getelementptr inbounds i8, i8* %5, i64 %45
  %47 = add nsw i32 %1, 1
  %48 = zext i8 %8 to i32
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %52
  %.023 = phi i32 [ %53, %52 ], [ 0, %.preheader.preheader ]
  call void @unroll_loop(i32 182)
  %tmp5 = trunc i32 %.023 to i8
  store i8 %tmp5, i8* %46, align 1
  %49 = add i32 %48, %.023
  %tmp = trunc i32 %49 to i8
  %50 = call i32 @doRound([256 x %struct.PTW_tableentry]* %0, i32 %47, i32 %2, i8 zeroext %3, i32* %4, i8* %5, i32 %6, %struct.PTW_attackstate* %7, i8 zeroext %tmp, i32* %9, i32* %10, [256 x i32]* %11)
  %51 = icmp ne i32 %50, 0
  br i1 %51, label %._crit_edge.loopexit, label %52

; <label>:52:                                     ; preds = %.preheader
  %53 = add nuw nsw i32 %.023, 1
  %54 = icmp ult i32 %53, 256
  br i1 %54, label %.preheader, label %._crit_edge.loopexit

; <label>:55:                                     ; preds = %40
  %56 = icmp eq i32 %1, %2
  br i1 %56, label %57, label %66

; <label>:57:                                     ; preds = %55
  %58 = zext i8 %3 to i32
  %59 = zext i8 %8 to i32
  %60 = sub nsw i32 %58, %59
  %61 = trunc i32 %60 to i8
  %62 = sext i32 %1 to i64
  %63 = getelementptr inbounds i8, i8* %5, i64 %62
  store i8 %61, i8* %63, align 1
  %64 = add nsw i32 %1, 1
  %65 = call i32 @doRound([256 x %struct.PTW_tableentry]* %0, i32 %64, i32 %2, i8 zeroext %3, i32* %4, i8* %5, i32 %6, %struct.PTW_attackstate* %7, i8 zeroext %3, i32* %9, i32* %10, [256 x i32]* %11)
  br label %._crit_edge

; <label>:66:                                     ; preds = %55
  %67 = sext i32 %1 to i64
  %68 = getelementptr inbounds i32, i32* %9, i64 %67
  %69 = load i32, i32* %68, align 4
  %70 = icmp eq i32 %69, 1
  br i1 %70, label %71, label %103

; <label>:71:                                     ; preds = %66
  %72 = add nsw i32 3, %1
  %73 = trunc i32 %72 to i8
  %74 = sub nsw i32 %1, 1
  %75 = icmp sge i32 %74, 1
  br i1 %75, label %.lr.ph, label %._crit_edge

.lr.ph:                                           ; preds = %71
  %76 = add i32 %1, -1
  %77 = sext i32 %76 to i64
  %78 = sext i32 %1 to i64
  %79 = getelementptr inbounds i8, i8* %5, i64 %78
  %80 = add nsw i32 %1, 1
  %81 = zext i8 %8 to i32
  %82 = sub i8 %73, 3
  %83 = add i8 %82, 2
  br label %84

; <label>:84:                                     ; preds = %.lr.ph, %101
  %lsr.iv = phi i8 [ %83, %.lr.ph ], [ %lsr.iv.next, %101 ]
  %indvars.iv = phi i64 [ %77, %.lr.ph ], [ %indvars.iv.next, %101 ]
  %.015 = phi i8 [ %73, %.lr.ph ], [ %87, %101 ]
  call void @unroll_loop(i32 183)
  %scevgep = getelementptr i8, i8* %5, i64 %indvars.iv
  %85 = load i8, i8* %scevgep, align 1
  %86 = add i8 %.015, %85
  %87 = add i8 %lsr.iv, %86
  %88 = zext i8 %87 to i32
  %89 = sub nsw i32 256, %88
  %90 = trunc i32 %89 to i8
  store i8 %90, i8* %79, align 1
  %91 = zext i8 %87 to i32
  %92 = sub nsw i32 256, %91
  %93 = add nsw i32 %92, %81
  %94 = srem i32 %93, 256
  %95 = trunc i32 %94 to i8
  %96 = call i32 @doRound([256 x %struct.PTW_tableentry]* %0, i32 %80, i32 %2, i8 zeroext %3, i32* %4, i8* %5, i32 %6, %struct.PTW_attackstate* %7, i8 zeroext %95, i32* %9, i32* %10, [256 x i32]* %11)
  %97 = icmp eq i32 %96, 1
  br i1 %97, label %98, label %101

; <label>:98:                                     ; preds = %84
  %99 = getelementptr [36 x i8], [36 x i8]* @.str.1.223, i32 0, i32 0
  %100 = call i32 (i8*, ...) @printf(i8* %99, i32 %1)
  br label %._crit_edge

; <label>:101:                                    ; preds = %84
  %indvars.iv.next = add nsw i64 %indvars.iv, -1
  %lsr.iv.next = add i8 %lsr.iv, -1
  %102 = icmp sge i64 %indvars.iv.next, 1
  br i1 %102, label %84, label %._crit_edge.loopexit1

; <label>:103:                                    ; preds = %66
  %104 = sext i32 %1 to i64
  %105 = getelementptr inbounds i32, i32* %4, i64 %104
  %106 = load i32, i32* %105, align 4
  %107 = icmp slt i32 0, %106
  br i1 %107, label %.lr.ph8.preheader, label %._crit_edge

.lr.ph8.preheader:                                ; preds = %103
  %108 = zext i8 %8 to i32
  %109 = sext i32 %1 to i64
  %110 = getelementptr inbounds i8, i8* %5, i64 %109
  %111 = add nsw i32 %1, 1
  %112 = sext i32 %1 to i64
  %113 = getelementptr inbounds [29 x i32], [29 x i32]* @depth, i64 0, i64 %112
  %114 = sext i32 %1 to i64
  %115 = getelementptr inbounds i8, i8* %5, i64 %114
  %scevgep6 = getelementptr [256 x %struct.PTW_tableentry], [256 x %struct.PTW_tableentry]* %0, i64 %104, i64 0, i32 1
  %scevgep10 = getelementptr [29 x [256 x %struct.PTW_tableentry]], [29 x [256 x %struct.PTW_tableentry]]* @keytable, i64 0, i64 %104, i64 0, i32 1
  br label %.lr.ph8

.lr.ph8:                                          ; preds = %.lr.ph8.preheader, %131
  %indvars.iv10 = phi i64 [ %indvars.iv.next11, %131 ], [ 0, %.lr.ph8.preheader ]
  call void @unroll_loop(i32 184)
  %116 = shl i64 %indvars.iv10, 3
  %scevgep7 = getelementptr i8, i8* %scevgep6, i64 %116
  %117 = load i8, i8* %scevgep7, align 4
  %118 = zext i8 %117 to i32
  %119 = sub nsw i32 %118, %108
  %120 = trunc i32 %119 to i8
  store i8 %120, i8* %110, align 1
  %121 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 6), align 8
  %122 = icmp ne i32 %121, 0
  br i1 %122, label %126, label %123

; <label>:123:                                    ; preds = %.lr.ph8
  %tmp9 = trunc i64 %indvars.iv10 to i32
  store i32 %tmp9, i32* %113, align 4
  %124 = load i8, i8* %115, align 1
  %125 = shl i64 %indvars.iv10, 3
  %scevgep11 = getelementptr i8, i8* %scevgep10, i64 %125
  store i8 %124, i8* %scevgep11, align 4
  br label %126

; <label>:126:                                    ; preds = %123, %.lr.ph8
  %127 = shl i64 %indvars.iv10, 3
  %scevgep8 = getelementptr i8, i8* %scevgep6, i64 %127
  %128 = load i8, i8* %scevgep8, align 4
  %129 = call i32 @doRound([256 x %struct.PTW_tableentry]* %0, i32 %111, i32 %2, i8 zeroext %3, i32* %4, i8* %5, i32 %6, %struct.PTW_attackstate* %7, i8 zeroext %128, i32* %9, i32* %10, [256 x i32]* %11)
  %130 = icmp ne i32 %129, 0
  br i1 %130, label %._crit_edge.loopexit3, label %131

; <label>:131:                                    ; preds = %126
  %indvars.iv.next11 = add nuw nsw i64 %indvars.iv10, 1
  %132 = load i32, i32* %105, align 4
  %133 = sext i32 %132 to i64
  %134 = icmp slt i64 %indvars.iv.next11, %133
  br i1 %134, label %.lr.ph8, label %._crit_edge.loopexit3

._crit_edge.loopexit:                             ; preds = %.preheader, %52
  %.0.ph = phi i32 [ 1, %.preheader ], [ 0, %52 ]
  br label %._crit_edge

._crit_edge.loopexit1:                            ; preds = %101
  %.0.ph2 = phi i32 [ 0, %101 ]
  br label %._crit_edge

._crit_edge.loopexit3:                            ; preds = %126, %131
  %.0.ph4 = phi i32 [ 1, %126 ], [ 0, %131 ]
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit3, %._crit_edge.loopexit1, %._crit_edge.loopexit, %103, %71, %24, %98, %57, %38
  %.0 = phi i32 [ %39, %38 ], [ %65, %57 ], [ 1, %98 ], [ 0, %24 ], [ 0, %71 ], [ 0, %103 ], [ %.0.ph, %._crit_edge.loopexit ], [ %.0.ph2, %._crit_edge.loopexit1 ], [ %.0.ph4, %._crit_edge.loopexit3 ]
  ret i32 %.0
}

; Function Attrs: nounwind
declare dso_local i32 @rand() #2

; Function Attrs: noinline nounwind uwtable
define internal void @rc4init(i8*, i32, %struct.rc4state*) #0 {
  %4 = getelementptr inbounds %struct.rc4state, %struct.rc4state* %2, i32 0, i32 2
  %5 = getelementptr inbounds [256 x i8], [256 x i8]* %4, i32 0, i32 0
  %6 = getelementptr [256 x i8], [256 x i8]* @rc4initial, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %5, i8* align 16 %6, i64 256, i1 false), !track !280
  %7 = getelementptr inbounds %struct.rc4state, %struct.rc4state* %2, i32 0, i32 2
  %8 = getelementptr inbounds %struct.rc4state, %struct.rc4state* %2, i32 0, i32 2
  %scevgep = getelementptr %struct.rc4state, %struct.rc4state* %2, i64 0, i32 2, i64 0
  br label %9

; <label>:9:                                      ; preds = %3, %9
  %indvars.iv = phi i64 [ 0, %3 ], [ %indvars.iv.next, %9 ]
  %.03 = phi i8 [ 0, %3 ], [ %20, %9 ]
  call void @unroll_loop(i32 185)
  %10 = zext i8 %.03 to i32
  %scevgep1 = getelementptr i8, i8* %scevgep, i64 %indvars.iv
  %11 = load i8, i8* %scevgep1, align 1
  %12 = zext i8 %11 to i32
  %13 = add nsw i32 %10, %12
  %tmp = trunc i64 %indvars.iv to i32
  %14 = srem i32 %tmp, %1
  %15 = sext i32 %14 to i64
  %16 = getelementptr inbounds i8, i8* %0, i64 %15
  %17 = load i8, i8* %16, align 1
  %18 = zext i8 %17 to i32
  %19 = add nsw i32 %13, %18
  %20 = trunc i32 %19 to i8
  %scevgep2 = getelementptr i8, i8* %scevgep, i64 %indvars.iv
  %21 = load i8, i8* %scevgep2, align 1
  %22 = zext i8 %20 to i64
  %23 = getelementptr inbounds [256 x i8], [256 x i8]* %7, i64 0, i64 %22
  %24 = load i8, i8* %23, align 1
  %scevgep3 = getelementptr i8, i8* %scevgep, i64 %indvars.iv
  store i8 %24, i8* %scevgep3, align 1
  %25 = zext i8 %20 to i64
  %26 = getelementptr inbounds [256 x i8], [256 x i8]* %8, i64 0, i64 %25
  store i8 %21, i8* %26, align 1
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp ne i64 %indvars.iv.next, 256
  br i1 %exitcond, label %9, label %27

; <label>:27:                                     ; preds = %9
  %28 = getelementptr inbounds %struct.rc4state, %struct.rc4state* %2, i32 0, i32 0
  store i8 0, i8* %28, align 1
  %29 = getelementptr inbounds %struct.rc4state, %struct.rc4state* %2, i32 0, i32 1
  store i8 0, i8* %29, align 1
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @rc4update(%struct.rc4state*) #0 {
  %2 = getelementptr inbounds %struct.rc4state, %struct.rc4state* %0, i32 0, i32 0
  %3 = load i8, i8* %2, align 1
  %4 = add i8 %3, 1
  store i8 %4, i8* %2, align 1
  %5 = getelementptr inbounds %struct.rc4state, %struct.rc4state* %0, i32 0, i32 2
  %6 = getelementptr inbounds %struct.rc4state, %struct.rc4state* %0, i32 0, i32 0
  %7 = load i8, i8* %6, align 1
  %8 = zext i8 %7 to i64
  %9 = getelementptr inbounds [256 x i8], [256 x i8]* %5, i64 0, i64 %8
  %10 = load i8, i8* %9, align 1
  %11 = zext i8 %10 to i32
  %12 = getelementptr inbounds %struct.rc4state, %struct.rc4state* %0, i32 0, i32 1
  %13 = load i8, i8* %12, align 1
  %14 = zext i8 %13 to i32
  %15 = add nsw i32 %14, %11
  %16 = trunc i32 %15 to i8
  store i8 %16, i8* %12, align 1
  %17 = getelementptr inbounds %struct.rc4state, %struct.rc4state* %0, i32 0, i32 2
  %18 = getelementptr inbounds %struct.rc4state, %struct.rc4state* %0, i32 0, i32 0
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i64
  %21 = getelementptr inbounds [256 x i8], [256 x i8]* %17, i64 0, i64 %20
  %22 = load i8, i8* %21, align 1
  %23 = getelementptr inbounds %struct.rc4state, %struct.rc4state* %0, i32 0, i32 2
  %24 = getelementptr inbounds %struct.rc4state, %struct.rc4state* %0, i32 0, i32 1
  %25 = load i8, i8* %24, align 1
  %26 = zext i8 %25 to i64
  %27 = getelementptr inbounds [256 x i8], [256 x i8]* %23, i64 0, i64 %26
  %28 = load i8, i8* %27, align 1
  %29 = getelementptr inbounds %struct.rc4state, %struct.rc4state* %0, i32 0, i32 2
  %30 = getelementptr inbounds %struct.rc4state, %struct.rc4state* %0, i32 0, i32 0
  %31 = load i8, i8* %30, align 1
  %32 = zext i8 %31 to i64
  %33 = getelementptr inbounds [256 x i8], [256 x i8]* %29, i64 0, i64 %32
  store i8 %28, i8* %33, align 1
  %34 = getelementptr inbounds %struct.rc4state, %struct.rc4state* %0, i32 0, i32 2
  %35 = getelementptr inbounds %struct.rc4state, %struct.rc4state* %0, i32 0, i32 1
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i64
  %38 = getelementptr inbounds [256 x i8], [256 x i8]* %34, i64 0, i64 %37
  store i8 %22, i8* %38, align 1
  %39 = getelementptr inbounds %struct.rc4state, %struct.rc4state* %0, i32 0, i32 2
  %40 = getelementptr inbounds %struct.rc4state, %struct.rc4state* %0, i32 0, i32 0
  %41 = load i8, i8* %40, align 1
  %42 = zext i8 %41 to i64
  %43 = getelementptr inbounds [256 x i8], [256 x i8]* %39, i64 0, i64 %42
  %44 = load i8, i8* %43, align 1
  %45 = zext i8 %44 to i32
  %46 = getelementptr inbounds %struct.rc4state, %struct.rc4state* %0, i32 0, i32 2
  %47 = getelementptr inbounds %struct.rc4state, %struct.rc4state* %0, i32 0, i32 1
  %48 = load i8, i8* %47, align 1
  %49 = zext i8 %48 to i64
  %50 = getelementptr inbounds [256 x i8], [256 x i8]* %46, i64 0, i64 %49
  %51 = load i8, i8* %50, align 1
  %52 = zext i8 %51 to i32
  %53 = add nsw i32 %45, %52
  %54 = trunc i32 %53 to i8
  %55 = getelementptr inbounds %struct.rc4state, %struct.rc4state* %0, i32 0, i32 2
  %56 = zext i8 %54 to i64
  %57 = getelementptr inbounds [256 x i8], [256 x i8]* %55, i64 0, i64 %56
  %58 = load i8, i8* %57, align 1
  ret i8 %58
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @PTW_addsession(%struct.PTW_attackstate*, i8*, i8*, i32*, i32) #0 {
  %6 = alloca [29 x i8], align 16, !track !281
  %7 = getelementptr inbounds i8, i8* %1, i64 0
  %8 = load i8, i8* %7, align 1
  %9 = zext i8 %8 to i32
  %10 = shl i32 %9, 16
  %11 = getelementptr inbounds i8, i8* %1, i64 1
  %12 = load i8, i8* %11, align 1
  %13 = zext i8 %12 to i32
  %14 = shl i32 %13, 8
  %15 = or i32 %10, %14
  %16 = getelementptr inbounds i8, i8* %1, i64 2
  %17 = load i8, i8* %16, align 1
  %18 = zext i8 %17 to i32
  %19 = or i32 %15, %18
  %20 = sdiv i32 %19, 8
  %21 = srem i32 %19, 8
  %22 = shl i32 1, %21
  %23 = getelementptr inbounds %struct.PTW_attackstate, %struct.PTW_attackstate* %0, i32 0, i32 1
  %24 = sext i32 %20 to i64
  %25 = getelementptr inbounds [2097152 x i8], [2097152 x i8]* %23, i64 0, i64 %24
  %26 = load i8, i8* %25, align 1
  %27 = zext i8 %26 to i32
  %28 = and i32 %27, %22
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %136

; <label>:30:                                     ; preds = %5
  %31 = getelementptr inbounds %struct.PTW_attackstate, %struct.PTW_attackstate* %0, i32 0, i32 1
  %32 = sext i32 %20 to i64
  %33 = getelementptr inbounds [2097152 x i8], [2097152 x i8]* %31, i64 0, i64 %32
  %34 = load i8, i8* %33, align 1
  %35 = zext i8 %34 to i32
  %36 = or i32 %35, %22
  %37 = trunc i32 %36 to i8
  store i8 %37, i8* %33, align 1
  %38 = icmp slt i32 0, %4
  br i1 %38, label %.lr.ph, label %._crit_edge

.lr.ph:                                           ; preds = %30
  %39 = sext i32 %4 to i64
  %40 = getelementptr inbounds %struct.PTW_attackstate, %struct.PTW_attackstate* %0, i32 0, i32 0
  %41 = getelementptr inbounds [29 x i8], [29 x i8]* %6, i32 0, i32 0
  %42 = getelementptr inbounds %struct.PTW_attackstate, %struct.PTW_attackstate* %0, i32 0, i32 6
  %43 = getelementptr inbounds %struct.PTW_attackstate, %struct.PTW_attackstate* %0, i32 0, i32 0
  %44 = getelementptr inbounds %struct.PTW_attackstate, %struct.PTW_attackstate* %0, i32 0, i32 6
  %45 = getelementptr inbounds %struct.PTW_attackstate, %struct.PTW_attackstate* %0, i32 0, i32 6
  %46 = getelementptr inbounds %struct.PTW_attackstate, %struct.PTW_attackstate* %0, i32 0, i32 5
  %47 = getelementptr inbounds %struct.PTW_attackstate, %struct.PTW_attackstate* %0, i32 0, i32 6
  %48 = getelementptr inbounds %struct.PTW_attackstate, %struct.PTW_attackstate* %0, i32 0, i32 5
  %49 = getelementptr inbounds %struct.PTW_attackstate, %struct.PTW_attackstate* %0, i32 0, i32 5
  %50 = getelementptr inbounds %struct.PTW_attackstate, %struct.PTW_attackstate* %0, i32 0, i32 5
  %51 = getelementptr inbounds %struct.PTW_attackstate, %struct.PTW_attackstate* %0, i32 0, i32 0
  %52 = getelementptr inbounds %struct.PTW_attackstate, %struct.PTW_attackstate* %0, i32 0, i32 5
  %53 = getelementptr inbounds %struct.PTW_attackstate, %struct.PTW_attackstate* %0, i32 0, i32 0
  %54 = getelementptr inbounds %struct.PTW_attackstate, %struct.PTW_attackstate* %0, i32 0, i32 5
  %55 = getelementptr inbounds %struct.PTW_attackstate, %struct.PTW_attackstate* %0, i32 0, i32 0
  %scevgep = getelementptr %struct.PTW_attackstate, %struct.PTW_attackstate* %0, i64 0, i32 4, i64 0, i64 0
  %scevgep1 = bitcast %struct.PTW_tableentry* %scevgep to %struct.PTW_attackstate*
  br label %56

; <label>:56:                                     ; preds = %.lr.ph, %89
  %indvars.iv5 = phi i64 [ 0, %.lr.ph ], [ %indvars.iv.next6, %89 ]
  call void @unroll_loop(i32 186)
  %57 = load i32, i32* %40, align 8
  %58 = add nsw i32 %57, 1
  store i32 %58, i32* %40, align 8
  %59 = mul nuw nsw i64 32, %indvars.iv5
  %60 = getelementptr inbounds i8, i8* %2, i64 %59
  call void @guesskeybytes(i32 3, i8* %1, i8* %60, i8* %41, i32 29)
  %61 = getelementptr inbounds i32, i32* %3, i64 %indvars.iv5
  br label %62

; <label>:62:                                     ; preds = %56, %62
  %lsr.iv = phi %struct.PTW_attackstate* [ %scevgep1, %56 ], [ %69, %62 ]
  %indvars.iv = phi i64 [ 0, %56 ], [ %indvars.iv.next, %62 ]
  %lsr.iv3 = bitcast %struct.PTW_attackstate* %lsr.iv to i8*
  call void @unroll_loop(i32 187)
  %63 = load i32, i32* %61, align 4
  %scevgep5 = getelementptr [29 x i8], [29 x i8]* %6, i64 0, i64 %indvars.iv
  %64 = load i8, i8* %scevgep5, align 1
  %65 = zext i8 %64 to i64
  %66 = shl i64 %65, 3
  %uglygep = getelementptr i8, i8* %lsr.iv3, i64 %66
  %uglygep4 = bitcast i8* %uglygep to i32*
  %67 = load i32, i32* %uglygep4, align 8
  %68 = add nsw i32 %67, %63
  store i32 %68, i32* %uglygep4, align 8
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %scevgep2 = getelementptr %struct.PTW_attackstate, %struct.PTW_attackstate* %lsr.iv, i64 0, i32 1, i64 2044
  %69 = bitcast i8* %scevgep2 to %struct.PTW_attackstate*
  %exitcond = icmp ne i64 %indvars.iv.next, 29
  br i1 %exitcond, label %62, label %70

; <label>:70:                                     ; preds = %62
  %71 = load i32, i32* %42, align 8
  %72 = load i32, i32* %43, align 8
  %73 = icmp slt i32 %71, %72
  br i1 %73, label %74, label %89

; <label>:74:                                     ; preds = %70
  %75 = load i32, i32* %44, align 8
  %76 = shl i32 %75, 1
  store i32 %76, i32* %45, align 8
  %77 = load %struct.PTW_session*, %struct.PTW_session** %46, align 8
  %78 = bitcast %struct.PTW_session* %77 to i8*
  %79 = load i32, i32* %47, align 8
  %80 = sext i32 %79 to i64
  %81 = mul i64 %80, 40
  %82 = call i8* @realloc(i8* %78, i64 %81) #9, !track !282
  %83 = bitcast i8* %82 to %struct.PTW_session*
  store %struct.PTW_session* %83, %struct.PTW_session** %48, align 8
  %84 = load %struct.PTW_session*, %struct.PTW_session** %49, align 8
  %85 = icmp eq %struct.PTW_session* %84, null
  br i1 %85, label %86, label %89

; <label>:86:                                     ; preds = %74
  %87 = getelementptr [27 x i8], [27 x i8]* @.str.222, i32 0, i32 0
  %88 = call i32 (i8*, ...) @printf(i8* %87)
  call void @exit(i32 -1) #11
  unreachable

; <label>:89:                                     ; preds = %74, %70
  %90 = load %struct.PTW_session*, %struct.PTW_session** %50, align 8
  %91 = load i32, i32* %51, align 8
  %92 = sub nsw i32 %91, 1
  %93 = sext i32 %92 to i64
  %94 = getelementptr inbounds %struct.PTW_session, %struct.PTW_session* %90, i64 %93
  %95 = getelementptr inbounds %struct.PTW_session, %struct.PTW_session* %94, i32 0, i32 0
  %96 = getelementptr inbounds [3 x i8], [3 x i8]* %95, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %96, i8* align 1 %1, i64 3, i1 false), !track !283
  %97 = load %struct.PTW_session*, %struct.PTW_session** %52, align 8
  %98 = load i32, i32* %53, align 8
  %99 = sub nsw i32 %98, 1
  %100 = sext i32 %99 to i64
  %101 = getelementptr inbounds %struct.PTW_session, %struct.PTW_session* %97, i64 %100
  %102 = getelementptr inbounds %struct.PTW_session, %struct.PTW_session* %101, i32 0, i32 1
  %103 = getelementptr inbounds [32 x i8], [32 x i8]* %102, i32 0, i32 0
  %104 = mul nuw nsw i64 32, %indvars.iv5
  %105 = getelementptr inbounds i8, i8* %2, i64 %104
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %103, i8* align 1 %105, i64 32, i1 false), !track !284
  %106 = getelementptr inbounds i32, i32* %3, i64 %indvars.iv5
  %107 = load i32, i32* %106, align 4
  %108 = load %struct.PTW_session*, %struct.PTW_session** %54, align 8
  %109 = load i32, i32* %55, align 8
  %110 = sub nsw i32 %109, 1
  %111 = sext i32 %110 to i64
  %112 = getelementptr inbounds %struct.PTW_session, %struct.PTW_session* %108, i64 %111
  %113 = getelementptr inbounds %struct.PTW_session, %struct.PTW_session* %112, i32 0, i32 2
  store i32 %107, i32* %113, align 4
  %indvars.iv.next6 = add nuw nsw i64 %indvars.iv5, 1
  %114 = icmp slt i64 %indvars.iv.next6, %39
  br i1 %114, label %56, label %._crit_edge.loopexit

._crit_edge.loopexit:                             ; preds = %89
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %30
  %115 = getelementptr inbounds %struct.PTW_attackstate, %struct.PTW_attackstate* %0, i32 0, i32 2
  %116 = load i32, i32* %115, align 4
  %117 = icmp slt i32 %116, 10000
  br i1 %117, label %118, label %136

; <label>:118:                                    ; preds = %._crit_edge
  %119 = getelementptr inbounds %struct.PTW_attackstate, %struct.PTW_attackstate* %0, i32 0, i32 3
  %120 = getelementptr inbounds %struct.PTW_attackstate, %struct.PTW_attackstate* %0, i32 0, i32 2
  %121 = load i32, i32* %120, align 4
  %122 = sext i32 %121 to i64
  %123 = getelementptr inbounds [10000 x %struct.PTW_session], [10000 x %struct.PTW_session]* %119, i64 0, i64 %122
  %124 = getelementptr inbounds %struct.PTW_session, %struct.PTW_session* %123, i32 0, i32 0
  %125 = getelementptr inbounds [3 x i8], [3 x i8]* %124, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %125, i8* align 1 %1, i64 3, i1 false), !track !285
  %126 = getelementptr inbounds %struct.PTW_attackstate, %struct.PTW_attackstate* %0, i32 0, i32 3
  %127 = getelementptr inbounds %struct.PTW_attackstate, %struct.PTW_attackstate* %0, i32 0, i32 2
  %128 = load i32, i32* %127, align 4
  %129 = sext i32 %128 to i64
  %130 = getelementptr inbounds [10000 x %struct.PTW_session], [10000 x %struct.PTW_session]* %126, i64 0, i64 %129
  %131 = getelementptr inbounds %struct.PTW_session, %struct.PTW_session* %130, i32 0, i32 1
  %132 = getelementptr inbounds [32 x i8], [32 x i8]* %131, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %132, i8* align 1 %2, i64 32, i1 false), !track !286
  %133 = getelementptr inbounds %struct.PTW_attackstate, %struct.PTW_attackstate* %0, i32 0, i32 2
  %134 = load i32, i32* %133, align 4
  %135 = add nsw i32 %134, 1
  store i32 %135, i32* %133, align 4
  br label %136

; <label>:136:                                    ; preds = %5, %._crit_edge, %118
  %.0 = phi i32 [ 1, %118 ], [ 1, %._crit_edge ], [ 0, %5 ]
  ret i32 %.0
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.PTW_attackstate* @PTW_newattackstate() #8 {
  %1 = call noalias i8* @malloc(i64 2556568) #9, !track !287
  %2 = bitcast i8* %1 to %struct.PTW_attackstate*
  %3 = icmp eq %struct.PTW_attackstate* %2, null
  br i1 %3, label %21, label %4

; <label>:4:                                      ; preds = %0
  %5 = bitcast %struct.PTW_attackstate* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 2556568, i1 false)
  %scevgep = getelementptr i8, i8* %1, i64 2497164
  br label %6

; <label>:6:                                      ; preds = %4, %9
  %lsr.iv = phi i8* [ %scevgep, %4 ], [ %scevgep1, %9 ]
  %indvars.iv5 = phi i64 [ 0, %4 ], [ %indvars.iv.next6, %9 ]
  br label %7

; <label>:7:                                      ; preds = %6, %7
  %indvars.iv = phi i64 [ 0, %6 ], [ %indvars.iv.next, %7 ]
  call void @unroll_loop(i32 188)
  %8 = shl i64 %indvars.iv, 3
  %scevgep2 = getelementptr i8, i8* %lsr.iv, i64 %8
  %tmp = trunc i64 %indvars.iv to i8
  store i8 %tmp, i8* %scevgep2, align 4
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp ne i64 %indvars.iv.next, 256
  br i1 %exitcond, label %7, label %9

; <label>:9:                                      ; preds = %7
  %indvars.iv.next6 = add nuw nsw i64 %indvars.iv5, 1
  %scevgep1 = getelementptr i8, i8* %lsr.iv, i64 2048
  %exitcond7 = icmp ne i64 %indvars.iv.next6, 29
  br i1 %exitcond7, label %6, label %10

; <label>:10:                                     ; preds = %9
  %11 = call noalias i8* @malloc(i64 163840) #9, !track !288
  %12 = bitcast i8* %11 to %struct.PTW_session*
  %13 = getelementptr inbounds %struct.PTW_attackstate, %struct.PTW_attackstate* %2, i32 0, i32 5
  store %struct.PTW_session* %12, %struct.PTW_session** %13, align 8
  %14 = getelementptr inbounds %struct.PTW_attackstate, %struct.PTW_attackstate* %2, i32 0, i32 6
  store i32 4096, i32* %14, align 8
  %15 = getelementptr inbounds %struct.PTW_attackstate, %struct.PTW_attackstate* %2, i32 0, i32 5
  %16 = load %struct.PTW_session*, %struct.PTW_session** %15, align 8
  %17 = icmp eq %struct.PTW_session* %16, null
  br i1 %17, label %18, label %21

; <label>:18:                                     ; preds = %10
  %19 = getelementptr [27 x i8], [27 x i8]* @.str.222, i32 0, i32 0
  %20 = call i32 (i8*, ...) @printf(i8* %19)
  call void @exit(i32 -1) #11
  unreachable

; <label>:21:                                     ; preds = %10, %0
  %.0 = phi %struct.PTW_attackstate* [ null, %0 ], [ %2, %10 ]
  ret %struct.PTW_attackstate* %.0
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @PTW_freeattackstate(%struct.PTW_attackstate*) #0 {
  %2 = getelementptr inbounds %struct.PTW_attackstate, %struct.PTW_attackstate* %0, i32 0, i32 5
  %3 = load %struct.PTW_session*, %struct.PTW_session** %2, align 8
  %4 = bitcast %struct.PTW_session* %3 to i8*
  call void @free(i8* %4) #9
  %5 = bitcast %struct.PTW_attackstate* %0 to i8*
  call void @free(i8* %5) #9
  ret void
}

declare void @unroll_loop(i32)

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @getVersion_clone(i8*, i32, i32, i32, i32, i32, i32) #8 {
  %8 = call noalias i8* @calloc(i64 1, i64 20) #9
  %9 = getelementptr [12 x i8], [12 x i8]* @4, i64 0, i64 0
  %10 = call i64 @strlen(i8* %9) #10
  %11 = add i64 11, 200
  %12 = trunc i64 211 to i32
  %13 = sext i32 211 to i64
  %14 = call noalias i8* @calloc(i64 1, i64 211) #9
  %15 = sext i32 211 to i64
  %16 = getelementptr [9 x i8], [9 x i8]* @.str.5.193, i32 0, i32 0
  %17 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %14, i64 211, i8* %16, i8* %0, i32 1, i32 1) #9
  %18 = icmp sgt i32 0, 0
  br i1 false, label %19, label %26

; <label>:19:                                     ; preds = %7
  %20 = getelementptr [4 x i8], [4 x i8]* @.str.6.194, i32 0, i32 0
  %21 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %8, i64 20, i8* %20, i32 0) #9
  %22 = sext i32 211 to i64
  %23 = call i64 @strlen(i8* %14) #10
  %24 = sub i64 %22, %23
  %25 = call i8* @strncat(i8* %14, i8* %8, i64 %24) #9
  call void @llvm.memset.p0i8.i64(i8* align 1 %8, i8 0, i64 20, i1 false)
  br label %26

; <label>:26:                                     ; preds = %19, %7
  %27 = icmp sgt i32 0, 0
  br i1 false, label %28, label %35

; <label>:28:                                     ; preds = %26
  %29 = getelementptr [6 x i8], [6 x i8]* @.str.7.195, i32 0, i32 0
  %30 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %8, i64 20, i8* %29, i32 0) #9
  %31 = sext i32 211 to i64
  %32 = call i64 @strlen(i8* %14) #10
  %33 = sub i64 %31, %32
  %34 = call i8* @strncat(i8* %14, i8* %8, i64 %33) #9
  call void @llvm.memset.p0i8.i64(i8* align 1 %8, i8 0, i64 20, i1 false)
  br label %44

; <label>:35:                                     ; preds = %26
  %36 = icmp sgt i32 0, 0
  br i1 false, label %37, label %44

; <label>:37:                                     ; preds = %35
  %38 = getelementptr [8 x i8], [8 x i8]* @.str.8.196, i32 0, i32 0
  %39 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %8, i64 20, i8* %38, i32 0) #9
  %40 = sext i32 211 to i64
  %41 = call i64 @strlen(i8* %14) #10
  %42 = sub i64 %40, %41
  %43 = call i8* @strncat(i8* %14, i8* %8, i64 %42) #9
  call void @llvm.memset.p0i8.i64(i8* align 1 %8, i8 0, i64 20, i1 false)
  br label %44

; <label>:44:                                     ; preds = %37, %35, %28
  %45 = icmp sgt i32 0, 0
  br i1 false, label %46, label %53

; <label>:46:                                     ; preds = %44
  %47 = getelementptr [5 x i8], [5 x i8]* @.str.9.197, i32 0, i32 0
  %48 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %8, i64 20, i8* %47, i32 0) #9
  %49 = sext i32 211 to i64
  %50 = call i64 @strlen(i8* %14) #10
  %51 = sub i64 %49, %50
  %52 = call i8* @strncat(i8* %14, i8* %8, i64 %51) #9
  call void @llvm.memset.p0i8.i64(i8* align 1 %8, i8 0, i64 20, i1 false)
  br label %53

; <label>:53:                                     ; preds = %46, %44
  call void @free(i8* %8) #9
  %54 = call i64 @strlen(i8* %14) #10
  %55 = add i64 %54, 1
  %56 = call i8* @realloc(i8* %14, i64 %55) #9, !track !255
  ret i8* %56
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @main(i32, i8**) #0 {
  %3 = call i8* @malloc(i64 40)
  %4 = bitcast i8* %3 to i8**
  store i8** %4, i8*** @__argv_new__
  %5 = load i8**, i8*** @__argv_new__
  %6 = getelementptr i8*, i8** %5, i32 0
  %7 = call i8* @malloc(i64 100)
  store i8* %7, i8** %6
  %8 = load i8*, i8** %6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %8, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @0, i32 0, i32 0), i64 100, i1 false)
  %9 = getelementptr i8, i8* %8, i32 11
  store i8 0, i8* %9
  %10 = load i8**, i8*** @__argv_new__
  %11 = getelementptr i8*, i8** %10, i32 1
  %12 = call i8* @malloc(i64 100)
  store i8* %12, i8** %11
  %13 = load i8*, i8** %11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @1, i32 0, i32 0), i64 100, i1 false)
  %14 = getelementptr i8, i8* %13, i32 2
  store i8 0, i8* %14
  %15 = load i8**, i8*** @__argv_new__
  %16 = getelementptr i8*, i8** %15, i32 2
  %17 = call i8* @malloc(i64 100)
  store i8* %17, i8** %16
  %18 = load i8*, i8** %16
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %18, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @2, i32 0, i32 0), i64 100, i1 false)
  %19 = getelementptr i8, i8* %18, i32 12
  store i8 0, i8* %19
  %20 = load i8**, i8*** @__argv_new__
  %21 = getelementptr i8*, i8** %20, i32 3
  %22 = call i8* @malloc(i64 100)
  store i8* %22, i8** %21
  %23 = load i8*, i8** %21
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %23, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @3, i32 0, i32 0), i64 100, i1 false)
  %24 = getelementptr i8, i8* %23, i32 7
  store i8 0, i8* %24
  %25 = load i8**, i8*** @__argv_new__
  %26 = getelementptr i8*, i8** %25, i32 4
  store i8* null, i8** %26
  %27 = alloca i32, align 4, !track !216
  %28 = alloca [128 x i8], align 16, !track !217
  %29 = alloca [33 x i8], align 16, !track !218
  %30 = alloca i32, align 4
  %31 = call i32 @setsid() #9
  %32 = getelementptr [12 x i8], [12 x i8]* @.str.76, i32 0, i32 0
  %33 = call i8* @getVersion_clone(i8* %32, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0)
  store i8* %33, i8** @progname, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (%struct.options* @opt to i8*), i8 0, i64 2392, i1 false)
  %34 = call i64 @time(i64* null) #9
  %35 = trunc i64 %34 to i32
  call void @srand(i32 %35) #9
  %36 = call i32 (...) bitcast (i32 ()* @get_nb_cpus to i32 (...)*)()
  %37 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 5
  store i32 1, i32* %37, align 4
  %38 = icmp sgt i32 %36, 1
  br i1 %38, label %39, label %41

; <label>:39:                                     ; preds = %2
  %40 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 5
  store i32 %36, i32* %40, align 4
  br label %41

; <label>:41:                                     ; preds = %39, %2
  %42 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 23
  store i32 0, i32* %42, align 8
  %43 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 0
  store i32 0, i32* %43, align 8
  %44 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 17
  store i32 1, i32* %44, align 8
  %45 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 18
  store i32 1, i32* %45, align 4
  %46 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 26
  store i32 0, i32* %46, align 8
  %47 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 29
  store i32 51, i32* %47, align 4
  %48 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 32
  store i32 0, i32* %48, align 4
  %49 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 20
  store i32 1, i32* %49, align 4
  %50 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 33
  store i32 2147483647, i32* %50, align 8
  %51 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 40
  store i32 0, i32* %51, align 8
  %52 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 35
  store i8* null, i8** %52, align 8
  %53 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 36
  store %struct.mergeBSSID* null, %struct.mergeBSSID** %53, align 8
  %54 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 34
  store i8* null, i8** %54, align 8
  %55 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 41
  store i32 0, i32* %55, align 4
  %56 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 42
  store i8* null, i8** %56, align 8
  store i32 0, i32* %30, align 4
  %57 = getelementptr [50 x i8], [50 x i8]* @.str.86, i32 0, i32 0
  %58 = getelementptr [10 x %struct.option], [10 x %struct.option]* @main.long_options, i32 0, i32 0
  %59 = call i32 @getopt_long(i32 4, i8** %25, i8* %57, %struct.option* %58, i32* %30) #9, !track_argc !219
  %60 = icmp slt i32 119, 0
  br i1 false, label %._crit_edge142, label %.lr.ph141.preheader

.lr.ph141.preheader:                              ; preds = %41
  %61 = getelementptr inbounds [128 x i8], [128 x i8]* %28, i64 0, i64 0
  %62 = getelementptr inbounds [128 x i8], [128 x i8]* %28, i64 0, i64 1
  %63 = getelementptr inbounds [128 x i8], [128 x i8]* %28, i64 0, i64 2
  %64 = getelementptr inbounds [128 x i8], [128 x i8]* %28, i32 0, i32 0
  %65 = getelementptr inbounds [128 x i8], [128 x i8]* %28, i64 0, i64 0
  %66 = getelementptr inbounds [128 x i8], [128 x i8]* %28, i64 0, i64 0
  %67 = getelementptr inbounds [128 x i8], [128 x i8]* %28, i64 0, i64 1
  %68 = getelementptr inbounds [128 x i8], [128 x i8]* %28, i64 0, i64 0
  %69 = getelementptr inbounds [128 x i8], [128 x i8]* %28, i64 0, i64 1
  %70 = getelementptr inbounds [128 x i8], [128 x i8]* %28, i64 0, i64 0
  %71 = getelementptr inbounds [128 x i8], [128 x i8]* %28, i64 0, i64 1
  %72 = getelementptr inbounds [128 x i8], [128 x i8]* %28, i64 0, i64 0
  %73 = getelementptr inbounds [128 x i8], [128 x i8]* %28, i64 0, i64 1
  %74 = getelementptr inbounds [128 x i8], [128 x i8]* %28, i64 0, i64 1
  br label %.lr.ph141

.lr.ph141:                                        ; preds = %.lr.ph141.preheader
  call void @unroll_loop(i32 124)
  switch i32 119, label %.loopexit1 [
    i32 58, label %75
    i32 63, label %80
    i32 117, label %85
    i32 86, label %101
    i32 97, label %110
    i32 101, label %135
    i32 98, label %138
    i32 112, label %150
    i32 113, label %167
    i32 99, label %168
    i32 68, label %169
    i32 104, label %170
    i32 116, label %171
    i32 49, label %172
    i32 100, label %173
    i32 109, label %304
    i32 110, label %315
    i32 105, label %345
    i32 102, label %362
    i32 107, label %376
    i32 108, label %398
    i32 77, label %414
    i32 80, label %433
    i32 120, label %450
    i32 88, label %471
    i32 121, label %472
    i32 75, label %473
    i32 115, label %474
    i32 119, label %475
    i32 114, label %484
    i32 48, label %488
    i32 72, label %.loopexit13
    i32 67, label %489
    i32 122, label %504
  ]

; <label>:75:                                     ; preds = %.lr.ph141.19, %.lr.ph141.18, %.lr.ph141.17, %.lr.ph141.16, %.lr.ph141.15, %.lr.ph141.14, %.lr.ph141.13, %.lr.ph141.12, %.lr.ph141.11, %.lr.ph141.10, %.lr.ph141.9, %.lr.ph141.8, %.lr.ph141.7, %.lr.ph141.6, %.lr.ph141.5, %.lr.ph141.4, %.lr.ph141.3, %.lr.ph141.2, %.lr.ph141.1, %.lr.ph141
  call void @__loop_termination_test___0()
  %76 = getelementptr inbounds i8*, i8** %25, i64 0
  %77 = load i8*, i8** %76, align 8
  %78 = getelementptr [23 x i8], [23 x i8]* @.str.87, i32 0, i32 0
  %79 = call i32 (i8*, ...) @printf(i8* %78, i8* %77)
  br label %1339

; <label>:80:                                     ; preds = %.lr.ph141.19, %.lr.ph141.18, %.lr.ph141.17, %.lr.ph141.16, %.lr.ph141.15, %.lr.ph141.14, %.lr.ph141.13, %.lr.ph141.12, %.lr.ph141.11, %.lr.ph141.10, %.lr.ph141.9, %.lr.ph141.8, %.lr.ph141.7, %.lr.ph141.6, %.lr.ph141.5, %.lr.ph141.4, %.lr.ph141.3, %.lr.ph141.2, %.lr.ph141.1, %.lr.ph141
  call void @__loop_termination_test___0()
  %81 = getelementptr inbounds i8*, i8** %25, i64 0
  %82 = load i8*, i8** %81, align 8
  %83 = getelementptr [23 x i8], [23 x i8]* @.str.87, i32 0, i32 0
  %84 = call i32 (i8*, ...) @printf(i8* %83, i8* %82)
  br label %1339

; <label>:85:                                     ; preds = %.lr.ph141.19, %.lr.ph141.18, %.lr.ph141.17, %.lr.ph141.16, %.lr.ph141.15, %.lr.ph141.14, %.lr.ph141.13, %.lr.ph141.12, %.lr.ph141.11, %.lr.ph141.10, %.lr.ph141.9, %.lr.ph141.8, %.lr.ph141.7, %.lr.ph141.6, %.lr.ph141.5, %.lr.ph141.4, %.lr.ph141.3, %.lr.ph141.2, %.lr.ph141.1, %.lr.ph141
  call void @__loop_termination_test___0()
  %86 = getelementptr [21 x i8], [21 x i8]* @.str.88, i32 0, i32 0
  %87 = call i32 (i8*, ...) @printf(i8* %86, i32 %36)
  %88 = call i32 @shasse2_cpuid()
  %89 = icmp eq i32 %88, 1
  br i1 %89, label %90, label %93

; <label>:90:                                     ; preds = %85
  %91 = getelementptr [17 x i8], [17 x i8]* @.str.89, i32 0, i32 0
  %92 = call i32 (i8*, ...) @printf(i8* %91)
  br label %93

; <label>:93:                                     ; preds = %90, %85
  %94 = icmp sge i32 %88, 2
  br i1 %94, label %95, label %98

; <label>:95:                                     ; preds = %93
  %96 = getelementptr [18 x i8], [18 x i8]* @.str.90, i32 0, i32 0
  %97 = call i32 (i8*, ...) @printf(i8* %96)
  br label %98

; <label>:98:                                     ; preds = %95, %93
  %99 = getelementptr [2 x i8], [2 x i8]* @.str.2, i32 0, i32 0
  %100 = call i32 (i8*, ...) @printf(i8* %99)
  br label %1339

; <label>:101:                                    ; preds = %.lr.ph141
  br i1 false, label %102, label %109

; <label>:102:                                    ; preds = %7035, %6735, %6435, %6135, %5835, %5535, %5235, %4935, %4635, %4335, %4035, %3735, %3435, %3135, %2835, %2535, %2235, %1935, %1635, %101
  call void @__loop_termination_test___0()
  %103 = getelementptr [47 x i8], [47 x i8]* @.str.91, i32 0, i32 0
  %104 = call i32 (i8*, ...) @printf(i8* %103)
  %105 = getelementptr inbounds i8*, i8** %25, i64 0
  %106 = load i8*, i8** %105, align 8
  %107 = getelementptr [27 x i8], [27 x i8]* @.str.92, i32 0, i32 0
  %108 = call i32 (i8*, ...) @printf(i8* %107, i8* %106)
  br label %1339

; <label>:109:                                    ; preds = %101
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 40), align 8
  store i32 0, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 20), align 4
  br label %.loopexit71

; <label>:110:                                    ; preds = %.lr.ph141
  %111 = load i8*, i8** @optarg, align 8
  %112 = call i32 (i8*, i8*, ...) @sscanf(i8* %111, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 0)) #9
  %113 = load i8*, i8** @optarg, align 8
  %114 = call i32 @strcasecmp(i8* %113, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.94, i64 0, i64 0)) #10
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %116, label %117

; <label>:116:                                    ; preds = %110
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 0), align 8
  br label %122

; <label>:117:                                    ; preds = %110
  %118 = load i8*, i8** @optarg, align 8
  %119 = call i32 @strcasecmp(i8* %118, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.95, i64 0, i64 0)) #10
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %121, label %122

; <label>:121:                                    ; preds = %117
  store i32 2, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 0), align 8
  br label %122

; <label>:122:                                    ; preds = %121, %117, %116
  %123 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 0), align 8
  %124 = icmp ne i32 %123, 1
  br i1 %124, label %125, label %.loopexit71

; <label>:125:                                    ; preds = %122
  %126 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 0), align 8
  %127 = icmp ne i32 %126, 2
  br i1 %127, label %128, label %.loopexit71

; <label>:128:                                    ; preds = %7032, %6732, %6432, %6132, %5832, %5532, %5232, %4932, %4632, %4332, %4032, %3732, %3432, %3132, %2832, %2532, %2232, %1932, %1632, %125
  call void @__loop_termination_test___0()
  %129 = getelementptr [41 x i8], [41 x i8]* @.str.96, i32 0, i32 0
  %130 = call i32 (i8*, ...) @printf(i8* %129)
  %131 = getelementptr inbounds i8*, i8** %25, i64 0
  %132 = load i8*, i8** %131, align 8
  %133 = getelementptr [23 x i8], [23 x i8]* @.str.87, i32 0, i32 0
  %134 = call i32 (i8*, ...) @printf(i8* %133, i8* %132)
  br label %1339

; <label>:135:                                    ; preds = %.lr.ph141
  call void @llvm.memset.p0i8.i64(i8* align 4 getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 3, i64 0), i8 0, i64 33, i1 false)
  %136 = load i8*, i8** @optarg, align 8
  %137 = call i8* @strncpy(i8* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 3, i64 0), i8* %136, i64 32) #9, !track !220
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 1), align 4
  br label %.loopexit71

; <label>:138:                                    ; preds = %.lr.ph141
  %139 = load i8*, i8** @optarg, align 8
  %140 = call i32 @getmac(i8* %139, i32 1, i8* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 4, i64 0))
  %141 = icmp ne i32 %140, 0
  br i1 %141, label %142, label %149

; <label>:142:                                    ; preds = %7009, %6709, %6409, %6109, %5809, %5509, %5209, %4909, %4609, %4309, %4009, %3709, %3409, %3109, %2809, %2509, %2209, %1909, %1609, %138
  call void @__loop_termination_test___0()
  %143 = getelementptr [28 x i8], [28 x i8]* @.str.97, i32 0, i32 0
  %144 = call i32 (i8*, ...) @printf(i8* %143)
  %145 = getelementptr inbounds i8*, i8** %25, i64 0
  %146 = load i8*, i8** %145, align 8
  %147 = getelementptr [23 x i8], [23 x i8]* @.str.87, i32 0, i32 0
  %148 = call i32 (i8*, ...) @printf(i8* %147, i8* %146)
  br label %1339

; <label>:149:                                    ; preds = %138
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 2), align 8
  br label %.loopexit71

; <label>:150:                                    ; preds = %.lr.ph141
  %151 = load i8*, i8** @optarg, align 8
  %152 = call i32 (i8*, i8*, ...) @sscanf(i8* %151, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 5)) #9
  %153 = icmp ne i32 %152, 1
  br i1 %153, label %160, label %154

; <label>:154:                                    ; preds = %150
  %155 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 5), align 4
  %156 = icmp slt i32 %155, 1
  br i1 %156, label %160, label %157

; <label>:157:                                    ; preds = %154
  %158 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 5), align 4
  %159 = icmp sgt i32 %158, 128
  br i1 %159, label %160, label %.loopexit71

; <label>:160:                                    ; preds = %7006, %7003, %6999, %6706, %6703, %6699, %6406, %6403, %6399, %6106, %6103, %6099, %5806, %5803, %5799, %5506, %5503, %5499, %5206, %5203, %5199, %4906, %4903, %4899, %4606, %4603, %4599, %4306, %4303, %4299, %4006, %4003, %3999, %3706, %3703, %3699, %3406, %3403, %3399, %3106, %3103, %3099, %2806, %2803, %2799, %2506, %2503, %2499, %2206, %2203, %2199, %1906, %1903, %1899, %1606, %1603, %1599, %157, %154, %150
  call void @__loop_termination_test___0()
  %161 = getelementptr [47 x i8], [47 x i8]* @.str.98, i32 0, i32 0
  %162 = call i32 (i8*, ...) @printf(i8* %161, i32 %36)
  %163 = getelementptr inbounds i8*, i8** %25, i64 0
  %164 = load i8*, i8** %163, align 8
  %165 = getelementptr [23 x i8], [23 x i8]* @.str.87, i32 0, i32 0
  %166 = call i32 (i8*, ...) @printf(i8* %165, i8* %164)
  br label %1339

; <label>:167:                                    ; preds = %.lr.ph141
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 6), align 8
  br label %.loopexit71

; <label>:168:                                    ; preds = %.lr.ph141
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 15), align 8
  br label %.loopexit71

; <label>:169:                                    ; preds = %.lr.ph141
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 38), align 8
  br label %.loopexit71

; <label>:170:                                    ; preds = %.lr.ph141
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 14), align 4
  br label %.loopexit71

; <label>:171:                                    ; preds = %.lr.ph141
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 16), align 4
  br label %.loopexit71

; <label>:172:                                    ; preds = %.lr.ph141
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 41), align 4
  br label %.loopexit71

; <label>:173:                                    ; preds = %.lr.ph141
  store i32 0, i32* %27, align 4
  %174 = load i8*, i8** @optarg, align 8
  %175 = load i8, i8* %174, align 1
  %176 = sext i8 %175 to i32
  %177 = icmp ne i32 %176, 0
  br i1 %177, label %.lr.ph136.preheader, label %._crit_edge137

.lr.ph136.preheader:                              ; preds = %173
  br label %.lr.ph136

.lr.ph136:                                        ; preds = %224, %.lr.ph136.preheader
  %.02134 = phi i32 [ %.13, %224 ], [ 0, %.lr.ph136.preheader ]
  call void @unroll_loop(i32 125)
  %178 = sext i32 %.02134 to i64
  %179 = getelementptr inbounds i8, i8* %174, i64 %178
  %180 = load i8, i8* %179, align 1
  %181 = sext i8 %180 to i32
  %182 = icmp eq i32 %181, 120
  br i1 %182, label %183, label %186

; <label>:183:                                    ; preds = %.lr.ph136
  %184 = sext i32 %.02134 to i64
  %185 = getelementptr inbounds i8, i8* %174, i64 %184
  store i8 88, i8* %185, align 1
  br label %186

; <label>:186:                                    ; preds = %183, %.lr.ph136
  %187 = sext i32 %.02134 to i64
  %188 = getelementptr inbounds i8, i8* %174, i64 %187
  %189 = load i8, i8* %188, align 1
  %190 = sext i8 %189 to i32
  %191 = icmp eq i32 %190, 121
  br i1 %191, label %192, label %195

; <label>:192:                                    ; preds = %186
  %193 = sext i32 %.02134 to i64
  %194 = getelementptr inbounds i8, i8* %174, i64 %193
  store i8 89, i8* %194, align 1
  br label %195

; <label>:195:                                    ; preds = %192, %186
  %196 = sext i32 %.02134 to i64
  %197 = getelementptr inbounds i8, i8* %174, i64 %196
  %198 = load i8, i8* %197, align 1
  %199 = sext i8 %198 to i32
  %200 = icmp eq i32 %199, 45
  br i1 %200, label %213, label %201

; <label>:201:                                    ; preds = %195
  %202 = sext i32 %.02134 to i64
  %203 = getelementptr inbounds i8, i8* %174, i64 %202
  %204 = load i8, i8* %203, align 1
  %205 = sext i8 %204 to i32
  %206 = icmp eq i32 %205, 58
  br i1 %206, label %213, label %207

; <label>:207:                                    ; preds = %201
  %208 = sext i32 %.02134 to i64
  %209 = getelementptr inbounds i8, i8* %174, i64 %208
  %210 = load i8, i8* %209, align 1
  %211 = sext i8 %210 to i32
  %212 = icmp eq i32 %211, 32
  br i1 %212, label %213, label %215

; <label>:213:                                    ; preds = %207, %201, %195
  %214 = add nsw i32 %.02134, 1
  br label %224

; <label>:215:                                    ; preds = %207
  %216 = add nsw i32 %.02134, 1
  %217 = sext i32 %.02134 to i64
  %218 = getelementptr inbounds i8, i8* %174, i64 %217
  %219 = load i8, i8* %218, align 1
  %220 = load i32, i32* %27, align 4
  %221 = add nsw i32 %220, 1
  store i32 %221, i32* %27, align 4
  %222 = sext i32 %220 to i64
  %223 = getelementptr inbounds i8, i8* %174, i64 %222
  store i8 %219, i8* %223, align 1
  br label %224

; <label>:224:                                    ; preds = %215, %213
  %.13 = phi i32 [ %214, %213 ], [ %216, %215 ]
  %225 = sext i32 %.13 to i64
  %226 = getelementptr inbounds i8, i8* %174, i64 %225
  %227 = load i8, i8* %226, align 1
  %228 = sext i8 %227 to i32
  %229 = icmp ne i32 %228, 0
  br i1 %229, label %.lr.ph136, label %._crit_edge137.loopexit

._crit_edge137.loopexit:                          ; preds = %224
  br label %._crit_edge137

._crit_edge137:                                   ; preds = %._crit_edge137.loopexit, %173
  %230 = load i32, i32* %27, align 4
  %231 = sext i32 %230 to i64
  %232 = getelementptr inbounds i8, i8* %174, i64 %231
  store i8 0, i8* %232, align 1
  %233 = load i8, i8* %174, align 1
  store i8 %233, i8* %61, align 16
  %234 = getelementptr inbounds i8, i8* %174, i64 1
  %235 = load i8, i8* %234, align 1
  store i8 %235, i8* %62, align 1
  store i8 0, i8* %63, align 2
  %scevgep45 = getelementptr i8, i8* %174, i64 3
  br label %236

; <label>:236:                                    ; preds = %301, %._crit_edge137
  %lsr.iv48 = phi i8* [ %scevgep49, %301 ], [ %scevgep45, %._crit_edge137 ]
  %.127 = phi i32 [ 0, %._crit_edge137 ], [ %.329, %301 ]
  %.24 = phi i32 [ 0, %._crit_edge137 ], [ %.46, %301 ]
  call void @unroll_loop(i32 126)
  %237 = call i32 (i8*, i8*, ...) @sscanf(i8* %64, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.72, i64 0, i64 0), i32* %27) #9
  %238 = icmp eq i32 %237, 1
  br i1 %238, label %.critedge, label %239

; <label>:239:                                    ; preds = %236
  %240 = load i8, i8* %66, align 16
  %241 = sext i8 %240 to i32
  %242 = icmp eq i32 %241, 88
  br i1 %242, label %243, label %247

; <label>:243:                                    ; preds = %239
  %244 = load i8, i8* %69, align 1
  %245 = sext i8 %244 to i32
  %246 = icmp eq i32 %245, 88
  br i1 %246, label %.critedge, label %247

; <label>:247:                                    ; preds = %243, %239
  %248 = load i8, i8* %70, align 16
  %249 = sext i8 %248 to i32
  %250 = icmp eq i32 %249, 89
  %251 = load i8, i8* %71, align 1
  %252 = sext i8 %251 to i32
  %253 = icmp eq i32 %252, 89
  %254 = select i1 %250, i1 %253, i1 false
  br i1 %254, label %.critedge, label %.loopexit71.loopexit

.critedge:                                        ; preds = %247, %243, %236
  %255 = load i8, i8* %65, align 16
  %256 = sext i8 %255 to i32
  %257 = icmp eq i32 %256, 88
  br i1 %257, label %258, label %266

; <label>:258:                                    ; preds = %.critedge
  %259 = load i8, i8* %67, align 1
  %260 = sext i8 %259 to i32
  %261 = icmp eq i32 %260, 88
  br i1 %261, label %262, label %266

; <label>:262:                                    ; preds = %258
  %263 = add nsw i32 %.24, 1
  %264 = sext i32 %.24 to i64
  %265 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 8), i64 0, i64 %264
  store i32 0, i32* %265, align 4
  br label %299

; <label>:266:                                    ; preds = %258, %.critedge
  %267 = load i8, i8* %68, align 16
  %268 = sext i8 %267 to i32
  %269 = icmp eq i32 %268, 89
  br i1 %269, label %270, label %279

; <label>:270:                                    ; preds = %266
  %271 = load i8, i8* %74, align 1
  %272 = sext i8 %271 to i32
  %273 = icmp eq i32 %272, 89
  br i1 %273, label %274, label %279

; <label>:274:                                    ; preds = %270
  %275 = add nsw i32 %.24, 1
  %276 = add nsw i32 %.127, 1
  %277 = sext i32 %.127 to i64
  %278 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 31), i64 0, i64 %277
  store i32 %.24, i32* %278, align 4
  br label %299

; <label>:279:                                    ; preds = %270, %266
  %280 = load i32, i32* %27, align 4
  %281 = icmp slt i32 %280, 0
  %282 = load i32, i32* %27, align 4
  %283 = icmp sgt i32 %282, 255
  %or.cond = or i1 %281, %283
  br i1 %or.cond, label %.loopexit2, label %291

.loopexit2:                                       ; preds = %279
  br label %284

.loopexit3:                                       ; preds = %1566
  br label %284

.loopexit4:                                       ; preds = %1866
  br label %284

.loopexit5:                                       ; preds = %2166
  br label %284

.loopexit6:                                       ; preds = %2466
  br label %284

.loopexit7:                                       ; preds = %2766
  br label %284

.loopexit10:                                      ; preds = %3066
  br label %284

.loopexit12:                                      ; preds = %3366
  br label %284

.loopexit14:                                      ; preds = %3666
  br label %284

.loopexit15:                                      ; preds = %3966
  br label %284

.loopexit16:                                      ; preds = %4266
  br label %284

.loopexit17:                                      ; preds = %4566
  br label %284

.loopexit18:                                      ; preds = %4866
  br label %284

.loopexit19:                                      ; preds = %5166
  br label %284

.loopexit20:                                      ; preds = %5466
  br label %284

.loopexit21:                                      ; preds = %5766
  br label %284

.loopexit22:                                      ; preds = %6066
  br label %284

.loopexit23:                                      ; preds = %6366
  br label %284

.loopexit24:                                      ; preds = %6666
  br label %284

.loopexit25:                                      ; preds = %6966
  br label %284

; <label>:284:                                    ; preds = %.loopexit25, %.loopexit24, %.loopexit23, %.loopexit22, %.loopexit21, %.loopexit20, %.loopexit19, %.loopexit18, %.loopexit17, %.loopexit16, %.loopexit15, %.loopexit14, %.loopexit12, %.loopexit10, %.loopexit7, %.loopexit6, %.loopexit5, %.loopexit4, %.loopexit3, %.loopexit2
  call void @__loop_termination_test___0()
  %285 = getelementptr [20 x i8], [20 x i8]* @.str.99, i32 0, i32 0
  %286 = call i32 (i8*, ...) @printf(i8* %285)
  %287 = getelementptr inbounds i8*, i8** %25, i64 0
  %288 = load i8*, i8** %287, align 8
  %289 = getelementptr [23 x i8], [23 x i8]* @.str.87, i32 0, i32 0
  %290 = call i32 (i8*, ...) @printf(i8* %289, i8* %288)
  br label %1339

; <label>:291:                                    ; preds = %279
  %292 = load i32, i32* %27, align 4
  %293 = trunc i32 %292 to i8
  %294 = sext i32 %.24 to i64
  %295 = getelementptr inbounds [64 x i8], [64 x i8]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 7), i64 0, i64 %294
  store i8 %293, i8* %295, align 1
  %296 = add nsw i32 %.24, 1
  %297 = sext i32 %.24 to i64
  %298 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 8), i64 0, i64 %297
  store i32 1, i32* %298, align 4
  br label %299

; <label>:299:                                    ; preds = %291, %274, %262
  %.329 = phi i32 [ %.127, %262 ], [ %276, %274 ], [ %.127, %291 ]
  %.46 = phi i32 [ %263, %262 ], [ %275, %274 ], [ %296, %291 ]
  %300 = icmp sge i32 %.46, 64
  br i1 %300, label %.loopexit71.loopexit, label %301

; <label>:301:                                    ; preds = %299
  %scevgep50 = getelementptr i8, i8* %lsr.iv48, i64 -1
  %302 = load i8, i8* %scevgep50, align 1
  store i8 %302, i8* %72, align 16
  %303 = load i8, i8* %lsr.iv48, align 1
  store i8 %303, i8* %73, align 1
  %scevgep49 = getelementptr i8, i8* %lsr.iv48, i64 2
  br label %236

; <label>:304:                                    ; preds = %.lr.ph141
  %305 = load i8*, i8** @optarg, align 8
  %306 = call i32 @getmac(i8* %305, i32 1, i8* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 9, i64 0))
  %307 = icmp ne i32 %306, 0
  br i1 %307, label %308, label %.loopexit71

; <label>:308:                                    ; preds = %6865, %6565, %6265, %5965, %5665, %5365, %5065, %4765, %4465, %4165, %3865, %3565, %3265, %2965, %2665, %2365, %2065, %1765, %1465, %304
  call void @__loop_termination_test___0()
  %309 = getelementptr [29 x i8], [29 x i8]* @.str.100, i32 0, i32 0
  %310 = call i32 (i8*, ...) @printf(i8* %309)
  %311 = getelementptr inbounds i8*, i8** %25, i64 0
  %312 = load i8*, i8** %311, align 8
  %313 = getelementptr [23 x i8], [23 x i8]* @.str.87, i32 0, i32 0
  %314 = call i32 (i8*, ...) @printf(i8* %313, i8* %312)
  br label %1339

; <label>:315:                                    ; preds = %.lr.ph141
  %316 = load i8*, i8** @optarg, align 8
  %317 = call i32 (i8*, i8*, ...) @sscanf(i8* %316, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10)) #9
  %318 = icmp ne i32 %317, 1
  br i1 %318, label %334, label %319

; <label>:319:                                    ; preds = %315
  %320 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %321 = icmp ne i32 %320, 64
  br i1 %321, label %322, label %341

; <label>:322:                                    ; preds = %319
  %323 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %324 = icmp ne i32 %323, 128
  br i1 %324, label %325, label %341

; <label>:325:                                    ; preds = %322
  %326 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %327 = icmp ne i32 %326, 152
  br i1 %327, label %328, label %341

; <label>:328:                                    ; preds = %325
  %329 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %330 = icmp ne i32 %329, 256
  br i1 %330, label %331, label %341

; <label>:331:                                    ; preds = %328
  %332 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %333 = icmp ne i32 %332, 512
  br i1 %333, label %334, label %341

; <label>:334:                                    ; preds = %6858, %6842, %6558, %6542, %6258, %6242, %5958, %5942, %5658, %5642, %5358, %5342, %5058, %5042, %4758, %4742, %4458, %4442, %4158, %4142, %3858, %3842, %3558, %3542, %3258, %3242, %2958, %2942, %2658, %2642, %2358, %2342, %2058, %2042, %1758, %1742, %1458, %1442, %331, %315
  call void @__loop_termination_test___0()
  %335 = getelementptr [46 x i8], [46 x i8]* @.str.101, i32 0, i32 0
  %336 = call i32 (i8*, ...) @printf(i8* %335)
  %337 = getelementptr inbounds i8*, i8** %25, i64 0
  %338 = load i8*, i8** %337, align 8
  %339 = getelementptr [23 x i8], [23 x i8]* @.str.87, i32 0, i32 0
  %340 = call i32 (i8*, ...) @printf(i8* %339, i8* %338)
  br label %1339

; <label>:341:                                    ; preds = %331, %328, %325, %322, %319
  %342 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %343 = sdiv i32 %342, 8
  %344 = sub nsw i32 %343, 3
  store i32 %344, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  br label %.loopexit71

; <label>:345:                                    ; preds = %.lr.ph141
  %346 = load i8*, i8** @optarg, align 8
  %347 = call i32 (i8*, i8*, ...) @sscanf(i8* %346, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 11)) #9
  %348 = icmp ne i32 %347, 1
  br i1 %348, label %355, label %349

; <label>:349:                                    ; preds = %345
  %350 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 11), align 8
  %351 = icmp slt i32 %350, 1
  br i1 %351, label %355, label %352

; <label>:352:                                    ; preds = %349
  %353 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 11), align 8
  %354 = icmp sgt i32 %353, 4
  br i1 %354, label %355, label %.loopexit71

; <label>:355:                                    ; preds = %6839, %6836, %6832, %6539, %6536, %6532, %6239, %6236, %6232, %5939, %5936, %5932, %5639, %5636, %5632, %5339, %5336, %5332, %5039, %5036, %5032, %4739, %4736, %4732, %4439, %4436, %4432, %4139, %4136, %4132, %3839, %3836, %3832, %3539, %3536, %3532, %3239, %3236, %3232, %2939, %2936, %2932, %2639, %2636, %2632, %2339, %2336, %2332, %2039, %2036, %2032, %1739, %1736, %1732, %1439, %1436, %1432, %352, %349, %345
  call void @__loop_termination_test___0()
  %356 = getelementptr [30 x i8], [30 x i8]* @.str.102, i32 0, i32 0
  %357 = call i32 (i8*, ...) @printf(i8* %356)
  %358 = getelementptr inbounds i8*, i8** %25, i64 0
  %359 = load i8*, i8** %358, align 8
  %360 = getelementptr [23 x i8], [23 x i8]* @.str.87, i32 0, i32 0
  %361 = call i32 (i8*, ...) @printf(i8* %360, i8* %359)
  br label %1339

; <label>:362:                                    ; preds = %.lr.ph141
  %363 = load i8*, i8** @optarg, align 8
  %364 = call i32 (i8*, i8*, ...) @sscanf(i8* %363, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.103, i64 0, i64 0), float* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 12)) #9
  %365 = icmp ne i32 %364, 1
  br i1 %365, label %369, label %366

; <label>:366:                                    ; preds = %362
  %367 = load float, float* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 12), align 4
  %368 = fcmp olt float %367, 1.000000e+00
  br i1 %368, label %369, label %.loopexit71

; <label>:369:                                    ; preds = %6829, %6825, %6529, %6525, %6229, %6225, %5929, %5925, %5629, %5625, %5329, %5325, %5029, %5025, %4729, %4725, %4429, %4425, %4129, %4125, %3829, %3825, %3529, %3525, %3229, %3225, %2929, %2925, %2629, %2625, %2329, %2325, %2029, %2025, %1729, %1725, %1429, %1425, %366, %362
  call void @__loop_termination_test___0()
  %370 = getelementptr [29 x i8], [29 x i8]* @.str.104, i32 0, i32 0
  %371 = call i32 (i8*, ...) @printf(i8* %370)
  %372 = getelementptr inbounds i8*, i8** %25, i64 0
  %373 = load i8*, i8** %372, align 8
  %374 = getelementptr [23 x i8], [23 x i8]* @.str.87, i32 0, i32 0
  %375 = call i32 (i8*, ...) @printf(i8* %374, i8* %373)
  br label %1339

; <label>:376:                                    ; preds = %.lr.ph141
  %377 = load i8*, i8** @optarg, align 8
  %378 = call i32 (i8*, i8*, ...) @sscanf(i8* %377, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 13)) #9
  %379 = icmp ne i32 %378, 1
  br i1 %379, label %386, label %380

; <label>:380:                                    ; preds = %376
  %381 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 13), align 8
  %382 = icmp slt i32 %381, 1
  br i1 %382, label %386, label %383

; <label>:383:                                    ; preds = %380
  %384 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 13), align 8
  %385 = icmp sgt i32 %384, 17
  br i1 %385, label %386, label %393

; <label>:386:                                    ; preds = %6817, %6814, %6810, %6517, %6514, %6510, %6217, %6214, %6210, %5917, %5914, %5910, %5617, %5614, %5610, %5317, %5314, %5310, %5017, %5014, %5010, %4717, %4714, %4710, %4417, %4414, %4410, %4117, %4114, %4110, %3817, %3814, %3810, %3517, %3514, %3510, %3217, %3214, %3210, %2917, %2914, %2910, %2617, %2614, %2610, %2317, %2314, %2310, %2017, %2014, %2010, %1717, %1714, %1710, %1417, %1414, %1410, %383, %380, %376
  call void @__loop_termination_test___0()
  %387 = getelementptr [39 x i8], [39 x i8]* @.str.105, i32 0, i32 0
  %388 = call i32 (i8*, ...) @printf(i8* %387, i32 17)
  %389 = getelementptr inbounds i8*, i8** %25, i64 0
  %390 = load i8*, i8** %389, align 8
  %391 = getelementptr [23 x i8], [23 x i8]* @.str.87, i32 0, i32 0
  %392 = call i32 (i8*, ...) @printf(i8* %391, i8* %390)
  br label %1339

; <label>:393:                                    ; preds = %383
  %394 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 13), align 8
  %395 = sub nsw i32 %394, 1
  %396 = sext i32 %395 to i64
  %397 = getelementptr inbounds [17 x i32], [17 x i32]* @K_COEFF, i64 0, i64 %396
  store i32 0, i32* %397, align 4
  br label %.loopexit71

; <label>:398:                                    ; preds = %.lr.ph141
  %399 = load i8*, i8** @optarg, align 8
  %400 = call i64 @strlen(i8* %399) #10
  %401 = add i64 %400, 1
  %402 = call noalias i8* @calloc(i64 1, i64 %401) #9, !track !221
  store i8* %402, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 42), align 8
  %403 = load i8*, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 42), align 8
  %404 = icmp eq i8* %403, null
  br i1 %404, label %405, label %408

; <label>:405:                                    ; preds = %6797, %6497, %6197, %5897, %5597, %5297, %4997, %4697, %4397, %4097, %3797, %3497, %3197, %2897, %2597, %2297, %1997, %1697, %1397, %398
  call void @__loop_termination_test___0()
  %406 = getelementptr [25 x i8], [25 x i8]* @.str.106, i32 0, i32 0
  %407 = call i32 (i8*, ...) @printf(i8* %406)
  br label %1339

; <label>:408:                                    ; preds = %398
  %409 = load i8*, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 42), align 8
  %410 = load i8*, i8** @optarg, align 8
  %411 = load i8*, i8** @optarg, align 8
  %412 = call i64 @strlen(i8* %411) #10
  %413 = call i8* @strncpy(i8* %409, i8* %410, i64 %412) #9, !track !222
  br label %.loopexit71

; <label>:414:                                    ; preds = %.lr.ph141
  %415 = load i8*, i8** @optarg, align 8
  %416 = call i32 (i8*, i8*, ...) @sscanf(i8* %415, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 33)) #9
  %417 = icmp ne i32 %416, 1
  br i1 %417, label %421, label %418

; <label>:418:                                    ; preds = %414
  %419 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 33), align 8
  %420 = icmp slt i32 %419, 1
  br i1 %420, label %421, label %428

; <label>:421:                                    ; preds = %6789, %6785, %6489, %6485, %6189, %6185, %5889, %5885, %5589, %5585, %5289, %5285, %4989, %4985, %4689, %4685, %4389, %4385, %4089, %4085, %3789, %3785, %3489, %3485, %3189, %3185, %2889, %2885, %2589, %2585, %2289, %2285, %1989, %1985, %1689, %1685, %1389, %1385, %418, %414
  call void @__loop_termination_test___0()
  %422 = getelementptr [33 x i8], [33 x i8]* @.str.107, i32 0, i32 0
  %423 = call i32 (i8*, ...) @printf(i8* %422)
  %424 = getelementptr inbounds i8*, i8** %25, i64 0
  %425 = load i8*, i8** %424, align 8
  %426 = getelementptr [23 x i8], [23 x i8]* @.str.87, i32 0, i32 0
  %427 = call i32 (i8*, ...) @printf(i8* %426, i8* %425)
  br label %1339

; <label>:428:                                    ; preds = %418
  %429 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 13), align 8
  %430 = sub nsw i32 %429, 1
  %431 = sext i32 %430 to i64
  %432 = getelementptr inbounds [17 x i32], [17 x i32]* @K_COEFF, i64 0, i64 %431
  store i32 0, i32* %432, align 4
  br label %.loopexit71

; <label>:433:                                    ; preds = %.lr.ph141
  %434 = load i8*, i8** @optarg, align 8
  %435 = call i32 (i8*, i8*, ...) @sscanf(i8* %434, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 39)) #9
  %436 = icmp ne i32 %435, 1
  br i1 %436, label %443, label %437

; <label>:437:                                    ; preds = %433
  %438 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 39), align 4
  %439 = icmp slt i32 %438, 0
  br i1 %439, label %443, label %440

; <label>:440:                                    ; preds = %437
  %441 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 39), align 4
  %442 = icmp sgt i32 %441, 2
  br i1 %442, label %443, label %.loopexit71

; <label>:443:                                    ; preds = %6782, %6779, %6775, %6482, %6479, %6475, %6182, %6179, %6175, %5882, %5879, %5875, %5582, %5579, %5575, %5282, %5279, %5275, %4982, %4979, %4975, %4682, %4679, %4675, %4382, %4379, %4375, %4082, %4079, %4075, %3782, %3779, %3775, %3482, %3479, %3475, %3182, %3179, %3175, %2882, %2879, %2875, %2582, %2579, %2575, %2282, %2279, %2275, %1982, %1979, %1975, %1682, %1679, %1675, %1382, %1379, %1375, %440, %437, %433
  call void @__loop_termination_test___0()
  %444 = getelementptr [36 x i8], [36 x i8]* @.str.108, i32 0, i32 0
  %445 = call i32 (i8*, ...) @printf(i8* %444)
  %446 = getelementptr inbounds i8*, i8** %25, i64 0
  %447 = load i8*, i8** %446, align 8
  %448 = getelementptr [23 x i8], [23 x i8]* @.str.87, i32 0, i32 0
  %449 = call i32 (i8*, ...) @printf(i8* %448, i8* %447)
  br label %1339

; <label>:450:                                    ; preds = %.lr.ph141
  store i32 0, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 17), align 8
  %451 = load i8*, i8** @optarg, align 8
  %452 = icmp ne i8* %451, null
  br i1 %452, label %453, label %.loopexit71

; <label>:453:                                    ; preds = %450
  %454 = load i8*, i8** @optarg, align 8
  %455 = call i32 (i8*, i8*, ...) @sscanf(i8* %454, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 17)) #9
  %456 = icmp ne i32 %455, 1
  br i1 %456, label %463, label %457

; <label>:457:                                    ; preds = %453
  %458 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 17), align 8
  %459 = icmp slt i32 %458, 0
  br i1 %459, label %463, label %460

; <label>:460:                                    ; preds = %457
  %461 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 17), align 8
  %462 = icmp sgt i32 %461, 4
  br i1 %462, label %463, label %.loopexit71

; <label>:463:                                    ; preds = %6772, %6769, %6765, %6472, %6469, %6465, %6172, %6169, %6165, %5872, %5869, %5865, %5572, %5569, %5565, %5272, %5269, %5265, %4972, %4969, %4965, %4672, %4669, %4665, %4372, %4369, %4365, %4072, %4069, %4065, %3772, %3769, %3765, %3472, %3469, %3465, %3172, %3169, %3165, %2872, %2869, %2865, %2572, %2569, %2565, %2272, %2269, %2265, %1972, %1969, %1965, %1672, %1669, %1665, %1372, %1369, %1365, %460, %457, %453
  call void @__loop_termination_test___0()
  %464 = load i8*, i8** @optarg, align 8
  %465 = getelementptr [28 x i8], [28 x i8]* @.str.109, i32 0, i32 0
  %466 = call i32 (i8*, ...) @printf(i8* %465, i8* %464)
  %467 = getelementptr inbounds i8*, i8** %25, i64 0
  %468 = load i8*, i8** %467, align 8
  %469 = getelementptr [23 x i8], [23 x i8]* @.str.87, i32 0, i32 0
  %470 = call i32 (i8*, ...) @printf(i8* %469, i8* %468)
  br label %1339

; <label>:471:                                    ; preds = %.lr.ph141
  store i32 0, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 18), align 4
  br label %.loopexit71

; <label>:472:                                    ; preds = %.lr.ph141
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 19), align 8
  br label %.loopexit71

; <label>:473:                                    ; preds = %.lr.ph141
  store i32 0, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 20), align 4
  br label %.loopexit71

; <label>:474:                                    ; preds = %.lr.ph141
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 26), align 8
  br label %.loopexit71

; <label>:475:                                    ; preds = %.lr.ph141
  %476 = load i8*, i8** @optarg, align 8
  %477 = call i32 @set_dicts_clone_clone_clone(i8* %476)
  %478 = icmp ne i32 0, 0
  br i1 false, label %479, label %.loopexit71

; <label>:479:                                    ; preds = %6754, %6454, %6154, %5854, %5554, %5254, %4954, %4654, %4354, %4054, %3754, %3454, %3154, %2854, %2554, %2254, %1954, %1654, %1354, %475
  call void @__loop_termination_test___0()
  %480 = getelementptr inbounds i8*, i8** %25, i64 0
  %481 = load i8*, i8** %480, align 8
  %482 = getelementptr [23 x i8], [23 x i8]* @.str.87, i32 0, i32 0
  %483 = call i32 (i8*, ...) @printf(i8* %482, i8* %481)
  br label %1339

; <label>:484:                                    ; preds = %.lr.ph141.19, %.lr.ph141.18, %.lr.ph141.17, %.lr.ph141.16, %.lr.ph141.15, %.lr.ph141.14, %.lr.ph141.13, %.lr.ph141.12, %.lr.ph141.11, %.lr.ph141.10, %.lr.ph141.9, %.lr.ph141.8, %.lr.ph141.7, %.lr.ph141.6, %.lr.ph141.5, %.lr.ph141.4, %.lr.ph141.3, %.lr.ph141.2, %.lr.ph141.1, %.lr.ph141
  call void @__loop_termination_test___0()
  %485 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %486 = getelementptr [56 x i8], [56 x i8]* @.str.110, i32 0, i32 0
  %487 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %485, i8* %486)
  br label %1339

; <label>:488:                                    ; preds = %.lr.ph141
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 27), align 4
  br label %.loopexit71

; <label>:489:                                    ; preds = %.lr.ph141
  %490 = load i8*, i8** @optarg, align 8
  %491 = call i32 @checkbssids(i8* %490)
  %492 = icmp slt i32 %491, 1
  br i1 %492, label %493, label %498

; <label>:493:                                    ; preds = %6743, %6443, %6143, %5843, %5543, %5243, %4943, %4643, %4343, %4043, %3743, %3443, %3143, %2843, %2543, %2243, %1943, %1643, %1343, %489
  call void @__loop_termination_test___0()
  %494 = getelementptr inbounds i8*, i8** %25, i64 0
  %495 = load i8*, i8** %494, align 8
  %496 = getelementptr [44 x i8], [44 x i8]* @.str.111, i32 0, i32 0
  %497 = call i32 (i8*, ...) @printf(i8* %496, i8* %495)
  br label %1339

; <label>:498:                                    ; preds = %489
  %499 = icmp eq i32 %491, 1
  br i1 %499, label %500, label %502

; <label>:500:                                    ; preds = %498
  %501 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.112, i64 0, i64 0))
  br label %.loopexit71

; <label>:502:                                    ; preds = %498
  %503 = load i8*, i8** @optarg, align 8
  store i8* %503, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 34), align 8
  br label %.loopexit71

; <label>:504:                                    ; preds = %.lr.ph141
  %505 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 40), align 8
  %506 = icmp ne i32 %505, 0
  br i1 %506, label %507, label %.loopexit71

; <label>:507:                                    ; preds = %6740, %6440, %6140, %5840, %5540, %5240, %4940, %4640, %4340, %4040, %3740, %3440, %3140, %2840, %2540, %2240, %1940, %1640, %1340, %504
  call void @__loop_termination_test___0()
  %508 = getelementptr [47 x i8], [47 x i8]* @.str.91, i32 0, i32 0
  %509 = call i32 (i8*, ...) @printf(i8* %508)
  %510 = getelementptr inbounds i8*, i8** %25, i64 0
  %511 = load i8*, i8** %510, align 8
  %512 = getelementptr [27 x i8], [27 x i8]* @.str.92, i32 0, i32 0
  %513 = call i32 (i8*, ...) @printf(i8* %512, i8* %511)
  br label %1339

.loopexit71.loopexit:                             ; preds = %299, %247
  %.531.ph = phi i32 [ %.329, %299 ], [ %.127, %247 ]
  br label %.loopexit71

.loopexit71:                                      ; preds = %.loopexit71.loopexit, %504, %502, %500, %488, %475, %474, %473, %472, %471, %460, %450, %440, %428, %408, %393, %366, %352, %341, %304, %172, %171, %170, %169, %168, %167, %157, %149, %135, %125, %122, %109
  %.134 = phi i32 [ 0, %488 ], [ 0, %474 ], [ 0, %473 ], [ 0, %472 ], [ 0, %471 ], [ 0, %428 ], [ 0, %408 ], [ 0, %393 ], [ 0, %341 ], [ 0, %172 ], [ 0, %171 ], [ 0, %170 ], [ 0, %169 ], [ 0, %168 ], [ 0, %167 ], [ 0, %149 ], [ 0, %135 ], [ 0, %109 ], [ 0, %125 ], [ 0, %122 ], [ 0, %157 ], [ 0, %304 ], [ 0, %352 ], [ 0, %366 ], [ 0, %440 ], [ 0, %460 ], [ 0, %450 ], [ 0, %475 ], [ 0, %502 ], [ 0, %500 ], [ 1, %504 ], [ 0, %.loopexit71.loopexit ]
  %.531 = phi i32 [ 0, %488 ], [ 0, %474 ], [ 0, %473 ], [ 0, %472 ], [ 0, %471 ], [ 0, %428 ], [ 0, %408 ], [ 0, %393 ], [ 0, %341 ], [ 0, %172 ], [ 0, %171 ], [ 0, %170 ], [ 0, %169 ], [ 0, %168 ], [ 0, %167 ], [ 0, %149 ], [ 0, %135 ], [ 0, %109 ], [ 0, %125 ], [ 0, %122 ], [ 0, %157 ], [ 0, %304 ], [ 0, %352 ], [ 0, %366 ], [ 0, %440 ], [ 0, %460 ], [ 0, %450 ], [ 0, %475 ], [ 0, %502 ], [ 0, %500 ], [ 0, %504 ], [ %.531.ph, %.loopexit71.loopexit ]
  call void @__loop_iteration_test___0()
  store i32 0, i32* %30, align 4
  %514 = call i32 @getopt_long(i32 4, i8** %25, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.86, i64 0, i64 0), %struct.option* getelementptr inbounds ([10 x %struct.option], [10 x %struct.option]* @main.long_options, i64 0, i64 0), i32* %30) #9, !track_argc !219
  %515 = icmp slt i32 -1, 0
  br i1 true, label %._crit_edge142.loopexit, label %.lr.ph141.1

._crit_edge142.loopexit:                          ; preds = %.loopexit71.19, %.loopexit71.18, %.loopexit71.17, %.loopexit71.16, %.loopexit71.15, %.loopexit71.14, %.loopexit71.13, %.loopexit71.12, %.loopexit71.11, %.loopexit71.10, %.loopexit71.9, %.loopexit71.8, %.loopexit71.7, %.loopexit71.6, %.loopexit71.5, %.loopexit71.4, %.loopexit71.3, %.loopexit71.2, %.loopexit71.1, %.loopexit71
  %.026.lcssa.ph = phi i32 [ 0, %.loopexit71 ], [ %.531.1, %.loopexit71.1 ], [ %.531.2, %.loopexit71.2 ], [ %.531.3, %.loopexit71.3 ], [ %.531.4, %.loopexit71.4 ], [ %.531.5, %.loopexit71.5 ], [ %.531.6, %.loopexit71.6 ], [ %.531.7, %.loopexit71.7 ], [ %.531.8, %.loopexit71.8 ], [ %.531.9, %.loopexit71.9 ], [ %.531.10, %.loopexit71.10 ], [ %.531.11, %.loopexit71.11 ], [ %.531.12, %.loopexit71.12 ], [ %.531.13, %.loopexit71.13 ], [ %.531.14, %.loopexit71.14 ], [ %.531.15, %.loopexit71.15 ], [ %.531.16, %.loopexit71.16 ], [ %.531.17, %.loopexit71.17 ], [ %.531.18, %.loopexit71.18 ], [ %.531.19, %.loopexit71.19 ]
  call void @__loop_termination_test___0()
  br label %._crit_edge142

._crit_edge142:                                   ; preds = %._crit_edge142.loopexit, %41
  %.026.lcssa = phi i32 [ 0, %41 ], [ 0, %._crit_edge142.loopexit ]
  %516 = load i32, i32* @optind, align 4
  %517 = sub nsw i32 4, 3, !track_argc !219
  %518 = icmp slt i32 1, 1
  br i1 false, label %519, label %547

; <label>:519:                                    ; preds = %._crit_edge142
  %520 = icmp eq i32 4, 1, !track_argc !219
  br i1 %520, label %521, label %533

.loopexit13:                                      ; preds = %.lr.ph141.19, %.lr.ph141.18, %.lr.ph141.17, %.lr.ph141.16, %.lr.ph141.15, %.lr.ph141.14, %.lr.ph141.13, %.lr.ph141.12, %.lr.ph141.11, %.lr.ph141.10, %.lr.ph141.9, %.lr.ph141.8, %.lr.ph141.7, %.lr.ph141.6, %.lr.ph141.5, %.lr.ph141.4, %.lr.ph141.3, %.lr.ph141.2, %.lr.ph141.1, %.lr.ph141
  %.036.ph = phi i32 [ 1, %.lr.ph141 ], [ 1, %.lr.ph141.1 ], [ 1, %.lr.ph141.2 ], [ 1, %.lr.ph141.3 ], [ 1, %.lr.ph141.4 ], [ 1, %.lr.ph141.5 ], [ 1, %.lr.ph141.6 ], [ 1, %.lr.ph141.7 ], [ 1, %.lr.ph141.8 ], [ 1, %.lr.ph141.9 ], [ 1, %.lr.ph141.10 ], [ 1, %.lr.ph141.11 ], [ 1, %.lr.ph141.12 ], [ 1, %.lr.ph141.13 ], [ 1, %.lr.ph141.14 ], [ 1, %.lr.ph141.15 ], [ 1, %.lr.ph141.16 ], [ 1, %.lr.ph141.17 ], [ 1, %.lr.ph141.18 ], [ 1, %.lr.ph141.19 ]
  call void @__loop_termination_test___0()
  br label %521

.loopexit1:                                       ; preds = %.lr.ph141.19, %.lr.ph141.18, %.lr.ph141.17, %.lr.ph141.16, %.lr.ph141.15, %.lr.ph141.14, %.lr.ph141.13, %.lr.ph141.12, %.lr.ph141.11, %.lr.ph141.10, %.lr.ph141.9, %.lr.ph141.8, %.lr.ph141.7, %.lr.ph141.6, %.lr.ph141.5, %.lr.ph141.4, %.lr.ph141.3, %.lr.ph141.2, %.lr.ph141.1, %.lr.ph141
  %.036.ph2 = phi i32 [ 0, %.lr.ph141 ], [ 0, %.lr.ph141.1 ], [ 0, %.lr.ph141.2 ], [ 0, %.lr.ph141.3 ], [ 0, %.lr.ph141.4 ], [ 0, %.lr.ph141.5 ], [ 0, %.lr.ph141.6 ], [ 0, %.lr.ph141.7 ], [ 0, %.lr.ph141.8 ], [ 0, %.lr.ph141.9 ], [ 0, %.lr.ph141.10 ], [ 0, %.lr.ph141.11 ], [ 0, %.lr.ph141.12 ], [ 0, %.lr.ph141.13 ], [ 0, %.lr.ph141.14 ], [ 0, %.lr.ph141.15 ], [ 0, %.lr.ph141.16 ], [ 0, %.lr.ph141.17 ], [ 0, %.lr.ph141.18 ], [ 0, %.lr.ph141.19 ]
  call void @__loop_termination_test___0()
  br label %521

; <label>:521:                                    ; preds = %.loopexit1, %.loopexit13, %519
  %.036 = phi i32 [ 0, %519 ], [ %.036.ph, %.loopexit13 ], [ %.036.ph2, %.loopexit1 ]
  %522 = load i8*, i8** @progname, align 8
  %523 = icmp sgt i32 %36, 1
  %524 = icmp eq i32 %36, -1
  %spec.select = select i1 %523, i1 true, i1 %524
  %525 = zext i1 %spec.select to i64
  %526 = getelementptr [58 x i8], [58 x i8]* @.str.113, i32 0, i32 0
  %527 = getelementptr [2 x i8], [2 x i8]* @.str.2, i32 0, i32 0
  %528 = select i1 %spec.select, i8* %526, i8* %527
  %529 = getelementptr [1799 x i8], [1799 x i8]* @usage, i32 0, i32 0
  %530 = call i32 (i8*, ...) @printf(i8* %529, i8* %522, i8* %528)
  %531 = icmp eq i32 %.036, 1
  br i1 %531, label %532, label %533

; <label>:532:                                    ; preds = %521
  call void @exit(i32 0) #11
  unreachable

; <label>:533:                                    ; preds = %521, %519
  %534 = load i32, i32* @optind, align 4
  %535 = sub nsw i32 4, %534, !track_argc !219
  %536 = icmp eq i32 %535, 0
  br i1 %536, label %537, label %540

; <label>:537:                                    ; preds = %533
  %538 = getelementptr [29 x i8], [29 x i8]* @.str.114, i32 0, i32 0
  %539 = call i32 (i8*, ...) @printf(i8* %538)
  br label %540

; <label>:540:                                    ; preds = %537, %533
  %541 = icmp sgt i32 4, 1, !track_argc !219
  br i1 %541, label %542, label %1339

; <label>:542:                                    ; preds = %540
  %543 = getelementptr inbounds i8*, i8** %25, i64 0
  %544 = load i8*, i8** %543, align 8
  %545 = getelementptr [23 x i8], [23 x i8]* @.str.87, i32 0, i32 0
  %546 = call i32 (i8*, ...) @printf(i8* %545, i8* %544)
  br label %1339

; <label>:547:                                    ; preds = %._crit_edge142
  %548 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 0
  %549 = load i32, i32* %548, align 8
  %550 = icmp eq i32 %549, 2
  br i1 %550, label %551, label %558

; <label>:551:                                    ; preds = %547
  %552 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 22
  %553 = load %struct._IO_FILE*, %struct._IO_FILE** %552, align 8
  %554 = icmp eq %struct._IO_FILE* %553, null
  br i1 %554, label %555, label %558

; <label>:555:                                    ; preds = %1178, %551
  %.011 = phi i32 [ 1, %551 ], [ %.1021, %1178 ]
  %556 = getelementptr [42 x i8], [42 x i8]* @.str.115, i32 0, i32 0
  %557 = call i32 (i8*, ...) @printf(i8* %556)
  br label %1329

; <label>:558:                                    ; preds = %551, %547
  %559 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 1
  %560 = load i32, i32* %559, align 4
  %561 = icmp ne i32 %560, 0
  br i1 %561, label %577, label %562

; <label>:562:                                    ; preds = %558
  %563 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 2
  %564 = load i32, i32* %563, align 8
  %565 = icmp ne i32 %564, 0
  br i1 %565, label %577, label %566

; <label>:566:                                    ; preds = %562
  %567 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 6
  %568 = load i32, i32* %567, align 8
  %569 = icmp ne i32 %568, 0
  br i1 %569, label %574, label %570

; <label>:570:                                    ; preds = %566
  %571 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 24
  %572 = load i32, i32* %571, align 4
  %573 = icmp ne i32 %572, 0
  br i1 %573, label %574, label %577

; <label>:574:                                    ; preds = %570, %566
  %575 = getelementptr [35 x i8], [35 x i8]* @.str.116, i32 0, i32 0
  %576 = call i32 (i8*, ...) @printf(i8* %575)
  br label %1329

; <label>:577:                                    ; preds = %570, %562, %558
  %578 = call void (i32)* @signal(i32 2, void (i32)* @sighandler) #9
  %579 = call void (i32)* @signal(i32 3, void (i32)* @sighandler) #9
  %580 = call void (i32)* @signal(i32 15, void (i32)* @sighandler) #9
  %581 = call void (i32)* @signal(i32 14, void (i32)* inttoptr (i64 1 to void (i32)*)) #9
  %582 = call i32 @pthread_mutex_init(%union.pthread_mutex_t* @mx_apl, %union.pthread_mutexattr_t* null) #9
  %583 = call i32 @pthread_mutex_init(%union.pthread_mutex_t* @mx_ivb, %union.pthread_mutexattr_t* null) #9
  %584 = call i32 @pthread_mutex_init(%union.pthread_mutex_t* @mx_eof, %union.pthread_mutexattr_t* null) #9
  %585 = call i32 @pthread_cond_init(%union.pthread_cond_t* @cv_eof, %union.pthread_mutexattr_t* null) #9
  store %struct.AP_info* null, %struct.AP_info** @ap_1st, align 8
  %586 = load i32, i32* @optind, align 4
  %587 = load i32, i32* @optind, align 4
  %588 = sub nsw i32 4, %587, !track_argc !219
  store i32 %588, i32* %27, align 4
  store i32 0, i32* @id, align 4
  %589 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 2
  %590 = load i32, i32* %589, align 8
  %591 = icmp ne i32 %590, 0
  br i1 %591, label %816, label %.preheader12.preheader

.preheader12.preheader:                           ; preds = %577
  br label %.preheader12

.preheader12:                                     ; preds = %624, %.preheader12.preheader
  call void @unroll_loop(i32 127)
  %592 = load i32, i32* @optind, align 4
  %593 = sext i32 %592 to i64
  %594 = getelementptr inbounds i8*, i8** %25, i64 %593
  %595 = load i8*, i8** %594, align 8
  %596 = call i32 @strcmp(i8* %595, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i64 0, i64 0)) #10
  %597 = icmp eq i32 %596, 0
  br i1 %597, label %598, label %599

; <label>:598:                                    ; preds = %.preheader12
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 24), align 4
  br label %599

; <label>:599:                                    ; preds = %598, %.preheader12
  %600 = load i32, i32* @id, align 4
  %601 = sext i32 %600 to i64
  %602 = getelementptr inbounds [128 x i64], [128 x i64]* @tid, i64 0, i64 %601
  %603 = load i32, i32* @optind, align 4
  %604 = sext i32 %603 to i64
  %605 = getelementptr inbounds i8*, i8** %25, i64 %604
  %606 = load i8*, i8** %605, align 8
  %607 = call i32 @pthread_create(i64* %602, %union.pthread_attr_t* null, i8* (i8*)* bitcast (void (i8*)* @check_thread to i8* (i8*)*), i8* %606) #9
  %608 = icmp ne i32 %607, 0
  br i1 %608, label %609, label %611

; <label>:609:                                    ; preds = %599
  %610 = getelementptr [22 x i8], [22 x i8]* @.str.117, i32 0, i32 0
  call void @perror(i8* %610)
  br label %1329

; <label>:611:                                    ; preds = %599
  %612 = call i32 @usleep(i32 131071)
  %613 = load i32, i32* @id, align 4
  %614 = add nsw i32 %613, 1
  store i32 %614, i32* @id, align 4
  %615 = load i32, i32* @id, align 4
  %616 = icmp sge i32 %615, 128
  br i1 %616, label %617, label %624

; <label>:617:                                    ; preds = %611
  %618 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 6
  %619 = load i32, i32* %618, align 8
  %620 = icmp ne i32 %619, 0
  br i1 %620, label %.loopexit70, label %621

; <label>:621:                                    ; preds = %617
  %622 = getelementptr [51 x i8], [51 x i8]* @.str.118, i32 0, i32 0
  %623 = call i32 (i8*, ...) @printf(i8* %622, i32 128)
  br label %.loopexit70

; <label>:624:                                    ; preds = %611
  %625 = load i32, i32* @optind, align 4
  %626 = add nsw i32 %625, 1
  store i32 %626, i32* @optind, align 4
  %627 = icmp slt i32 %626, 4, !track_argc !219
  br i1 %627, label %.preheader12, label %.loopexit70.loopexit

.loopexit70.loopexit:                             ; preds = %624
  br label %.loopexit70

.loopexit70:                                      ; preds = %.loopexit70.loopexit, %621, %617
  %628 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 6
  %629 = load i32, i32* %628, align 8
  %630 = icmp ne i32 %629, 0
  br i1 %630, label %636, label %631

; <label>:631:                                    ; preds = %.loopexit70
  %632 = getelementptr [33 x i8], [33 x i8]* @.str.119, i32 0, i32 0
  %633 = call i32 (i8*, ...) @printf(i8* %632)
  %634 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %635 = call i32 @fflush(%struct._IO_FILE* %634)
  br label %636

; <label>:636:                                    ; preds = %631, %.loopexit70
  store i32 1, i32* @intr_read, align 4
  %637 = load i32, i32* @id, align 4
  %638 = icmp slt i32 0, %637
  br i1 %638, label %.lr.ph130.preheader, label %._crit_edge131

.lr.ph130.preheader:                              ; preds = %636
  br label %.lr.ph130

.lr.ph130:                                        ; preds = %.lr.ph130, %.lr.ph130.preheader
  %indvars.iv132 = phi i64 [ %indvars.iv.next133, %.lr.ph130 ], [ 0, %.lr.ph130.preheader ]
  call void @unroll_loop(i32 128)
  %639 = shl i64 %indvars.iv132, 3
  %640 = inttoptr i64 %639 to i64*
  %uglygep43 = getelementptr i8, i8* bitcast ([128 x i64]* @tid to i8*), i64 %639
  %uglygep4344 = bitcast i8* %uglygep43 to i64*
  %641 = load i64, i64* %uglygep4344, align 8
  %642 = call i32 @pthread_join(i64 %641, i8** null)
  %indvars.iv.next133 = add nuw nsw i64 %indvars.iv132, 1
  %643 = load i32, i32* @id, align 4
  %644 = sext i32 %643 to i64
  %645 = icmp slt i64 %indvars.iv.next133, %644
  br i1 %645, label %.lr.ph130, label %._crit_edge131.loopexit

._crit_edge131.loopexit:                          ; preds = %.lr.ph130
  br label %._crit_edge131

._crit_edge131:                                   ; preds = %._crit_edge131.loopexit, %636
  store i32 0, i32* @id, align 4
  %646 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 6
  %647 = load i32, i32* %646, align 8
  %648 = icmp ne i32 %647, 0
  br i1 %648, label %657, label %649

; <label>:649:                                    ; preds = %._crit_edge131
  %650 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 24
  %651 = load i32, i32* %650, align 4
  %652 = icmp ne i32 %651, 0
  br i1 %652, label %657, label %653

; <label>:653:                                    ; preds = %649
  %654 = load i64, i64* @nb_pkt, align 8
  %655 = getelementptr [23 x i8], [23 x i8]* @.str.120, i32 0, i32 0
  %656 = call i32 (i8*, ...) @printf(i8* %655, i64 %654)
  br label %657

; <label>:657:                                    ; preds = %653, %649, %._crit_edge131
  %658 = load %struct.AP_info*, %struct.AP_info** @ap_1st, align 8
  %659 = icmp eq %struct.AP_info* %658, null
  br i1 %659, label %660, label %663

; <label>:660:                                    ; preds = %657
  %661 = getelementptr [29 x i8], [29 x i8]* @.str.121, i32 0, i32 0
  %662 = call i32 (i8*, ...) @printf(i8* %661)
  br label %1329

; <label>:663:                                    ; preds = %657
  %664 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 1
  %665 = load i32, i32* %664, align 4
  %666 = icmp ne i32 %665, 0
  br i1 %666, label %815, label %667

; <label>:667:                                    ; preds = %663
  %668 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 2
  %669 = load i32, i32* %668, align 8
  %670 = icmp ne i32 %669, 0
  br i1 %670, label %815, label %671

; <label>:671:                                    ; preds = %667
  %672 = getelementptr [37 x i8], [37 x i8]* @.str.122, i32 0, i32 0
  %673 = getelementptr [1 x i8], [1 x i8]* @.str.123, i32 0, i32 0
  %674 = call i32 (i8*, ...) @printf(i8* %672, i8* %673, i8* %673)
  %675 = load %struct.AP_info*, %struct.AP_info** @ap_1st, align 8
  %676 = icmp ne %struct.AP_info* %675, null
  br i1 %676, label %.lr.ph125.preheader, label %._crit_edge126

.lr.ph125.preheader:                              ; preds = %671
  %677 = getelementptr inbounds [33 x i8], [33 x i8]* %29, i32 0, i32 0
  %678 = getelementptr inbounds [33 x i8], [33 x i8]* %29, i32 0, i32 0
  %679 = getelementptr inbounds [33 x i8], [33 x i8]* %29, i32 0, i32 0
  br label %.lr.ph125

.lr.ph125:                                        ; preds = %763, %.lr.ph125.preheader
  %.01123 = phi %struct.AP_info* [ %766, %763 ], [ %675, %.lr.ph125.preheader ]
  %.68122 = phi i32 [ %764, %763 ], [ 1, %.lr.ph125.preheader ]
  call void @unroll_loop(i32 129)
  call void @llvm.memset.p0i8.i64(i8* align 16 %677, i8 0, i64 33, i1 false)
  %680 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.01123, i32 0, i32 2
  %681 = getelementptr inbounds [33 x i8], [33 x i8]* %680, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %678, i8* align 2 %681, i64 32, i1 false), !track !223
  br label %682

; <label>:682:                                    ; preds = %695, %.lr.ph125
  %indvars.iv120 = phi i64 [ 0, %.lr.ph125 ], [ %indvars.iv.next121, %695 ]
  call void @unroll_loop(i32 130)
  %scevgep39 = getelementptr [33 x i8], [33 x i8]* %29, i64 0, i64 %indvars.iv120
  %683 = load i8, i8* %scevgep39, align 1
  %684 = sext i8 %683 to i32
  %685 = icmp sgt i32 %684, 0
  br i1 %685, label %686, label %690

; <label>:686:                                    ; preds = %682
  %scevgep40 = getelementptr [33 x i8], [33 x i8]* %29, i64 0, i64 %indvars.iv120
  %687 = load i8, i8* %scevgep40, align 1
  %688 = sext i8 %687 to i32
  %689 = icmp slt i32 %688, 32
  br i1 %689, label %694, label %690

; <label>:690:                                    ; preds = %686, %682
  %scevgep42 = getelementptr [33 x i8], [33 x i8]* %29, i64 0, i64 %indvars.iv120
  %691 = load i8, i8* %scevgep42, align 1
  %692 = sext i8 %691 to i32
  %693 = icmp sgt i32 %692, 126
  br i1 %693, label %694, label %695

; <label>:694:                                    ; preds = %690, %686
  %scevgep41 = getelementptr [33 x i8], [33 x i8]* %29, i64 0, i64 %indvars.iv120
  store i8 63, i8* %scevgep41, align 1
  br label %695

; <label>:695:                                    ; preds = %694, %690
  %indvars.iv.next121 = add nuw nsw i64 %indvars.iv120, 1
  %exitcond = icmp ne i64 %indvars.iv.next121, 32
  br i1 %exitcond, label %682, label %696

; <label>:696:                                    ; preds = %695
  %697 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.01123, i32 0, i32 1
  %698 = getelementptr inbounds [6 x i8], [6 x i8]* %697, i64 0, i64 0
  %699 = load i8, i8* %698, align 8
  %700 = zext i8 %699 to i32
  %701 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.01123, i32 0, i32 1
  %702 = getelementptr inbounds [6 x i8], [6 x i8]* %701, i64 0, i64 1
  %703 = load i8, i8* %702, align 1
  %704 = zext i8 %703 to i32
  %705 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.01123, i32 0, i32 1
  %706 = getelementptr inbounds [6 x i8], [6 x i8]* %705, i64 0, i64 2
  %707 = load i8, i8* %706, align 2
  %708 = zext i8 %707 to i32
  %709 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.01123, i32 0, i32 1
  %710 = getelementptr inbounds [6 x i8], [6 x i8]* %709, i64 0, i64 3
  %711 = load i8, i8* %710, align 1
  %712 = zext i8 %711 to i32
  %713 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.01123, i32 0, i32 1
  %714 = getelementptr inbounds [6 x i8], [6 x i8]* %713, i64 0, i64 4
  %715 = load i8, i8* %714, align 4
  %716 = zext i8 %715 to i32
  %717 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.01123, i32 0, i32 1
  %718 = getelementptr inbounds [6 x i8], [6 x i8]* %717, i64 0, i64 5
  %719 = load i8, i8* %718, align 1
  %720 = zext i8 %719 to i32
  %721 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.124, i64 0, i64 0), i32 %.68122, i32 %700, i32 %704, i32 %708, i32 %712, i32 %716, i32 %720, i8* %679)
  %722 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.01123, i32 0, i32 11
  %723 = load i32, i32* %722, align 4
  %724 = icmp ne i32 %723, 0
  br i1 %724, label %725, label %727

; <label>:725:                                    ; preds = %696
  %726 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.125, i64 0, i64 0))
  br label %727

; <label>:727:                                    ; preds = %725, %696
  %728 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.01123, i32 0, i32 10
  %729 = load i32, i32* %728, align 8
  switch i32 %729, label %761 [
    i32 0, label %730
    i32 1, label %748
    i32 2, label %750
    i32 3, label %754
  ]

; <label>:730:                                    ; preds = %727
  %731 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.01123, i32 0, i32 3
  %732 = getelementptr inbounds [4 x i8], [4 x i8]* %731, i64 0, i64 0
  %733 = load i8, i8* %732, align 1
  %734 = zext i8 %733 to i32
  %735 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.01123, i32 0, i32 3
  %736 = getelementptr inbounds [4 x i8], [4 x i8]* %735, i64 0, i64 1
  %737 = load i8, i8* %736, align 1
  %738 = zext i8 %737 to i32
  %739 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.01123, i32 0, i32 3
  %740 = getelementptr inbounds [4 x i8], [4 x i8]* %739, i64 0, i64 2
  %741 = load i8, i8* %740, align 1
  %742 = zext i8 %741 to i32
  %743 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.01123, i32 0, i32 3
  %744 = getelementptr inbounds [4 x i8], [4 x i8]* %743, i64 0, i64 3
  %745 = load i8, i8* %744, align 1
  %746 = zext i8 %745 to i32
  %747 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.126, i64 0, i64 0), i32 %734, i32 %738, i32 %742, i32 %746)
  br label %763

; <label>:748:                                    ; preds = %727
  %749 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.127, i64 0, i64 0))
  br label %763

; <label>:750:                                    ; preds = %727
  %751 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.01123, i32 0, i32 7
  %752 = load i64, i64* %751, align 8
  %753 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.128, i64 0, i64 0), i64 %752)
  br label %763

; <label>:754:                                    ; preds = %727
  %755 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.01123, i32 0, i32 14
  %756 = getelementptr inbounds %struct.WPA_hdsk, %struct.WPA_hdsk* %755, i32 0, i32 7
  %757 = load i32, i32* %756, align 8
  %758 = icmp eq i32 %757, 7
  %759 = zext i1 %758 to i32
  %760 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.129, i64 0, i64 0), i32 %759)
  br label %763

; <label>:761:                                    ; preds = %727
  %762 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.130, i64 0, i64 0))
  br label %763

; <label>:763:                                    ; preds = %761, %754, %750, %748, %730
  %764 = add nuw nsw i32 %.68122, 1
  %765 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.01123, i32 0, i32 0
  %766 = load %struct.AP_info*, %struct.AP_info** %765, align 8
  %767 = icmp ne %struct.AP_info* %766, null
  br i1 %767, label %.lr.ph125, label %._crit_edge126.loopexit

._crit_edge126.loopexit:                          ; preds = %763
  %.01.lcssa.ph = phi %struct.AP_info* [ %766, %763 ]
  br label %._crit_edge126

._crit_edge126:                                   ; preds = %._crit_edge126.loopexit, %671
  %.01.lcssa = phi %struct.AP_info* [ %675, %671 ], [ %.01.lcssa.ph, %._crit_edge126.loopexit ]
  %768 = getelementptr [2 x i8], [2 x i8]* @.str.2, i32 0, i32 0
  %769 = call i32 (i8*, ...) @printf(i8* %768)
  %770 = load %struct.AP_info*, %struct.AP_info** @ap_1st, align 8
  %771 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %770, i32 0, i32 0
  %772 = load %struct.AP_info*, %struct.AP_info** %771, align 8
  %773 = icmp ne %struct.AP_info* %772, null
  br i1 %773, label %.preheader10.preheader, label %796

.preheader10.preheader:                           ; preds = %._crit_edge126
  %774 = getelementptr inbounds [128 x i8], [128 x i8]* %28, i32 0, i32 0
  %775 = getelementptr inbounds [128 x i8], [128 x i8]* %28, i32 0, i32 0
  br label %.preheader10

.preheader10:                                     ; preds = %.loopexit9, %.preheader10.preheader
  %.1 = phi %struct.AP_info* [ %.3, %.loopexit9 ], [ %.01.lcssa, %.preheader10.preheader ]
  call void @unroll_loop(i32 131)
  %776 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.131, i64 0, i64 0))
  %777 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %778 = call i32 @fflush(%struct._IO_FILE* %777)
  br label %779

; <label>:779:                                    ; preds = %779, %.preheader10
  call void @unroll_loop(i32 132)
  %780 = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.132, i64 0, i64 0), i8* %774)
  %781 = icmp ne i32 %780, 0
  %782 = xor i1 %781, true
  br i1 %782, label %779, label %783

; <label>:783:                                    ; preds = %779
  %784 = call i32 @atoi(i8* %775) #10
  %785 = icmp slt i32 %784, 1
  br i1 %785, label %.loopexit9, label %786

; <label>:786:                                    ; preds = %783
  %787 = load %struct.AP_info*, %struct.AP_info** @ap_1st, align 8
  call void @unroll_loop(i32 133)
  %788 = icmp ne %struct.AP_info* %787, null
  %789 = icmp slt i32 1, %784
  %spec.select317 = select i1 %788, i1 %789, i1 false
  br i1 %spec.select317, label %.lr.ph21.preheader, label %.loopexit9

.lr.ph21.preheader:                               ; preds = %786
  br label %.lr.ph21

.lr.ph21:                                         ; preds = %.lr.ph21, %.lr.ph21.preheader
  %lsr.iv37 = phi i32 [ 2, %.lr.ph21.preheader ], [ %lsr.iv.next38, %.lr.ph21 ]
  %.219 = phi %struct.AP_info* [ %791, %.lr.ph21 ], [ %787, %.lr.ph21.preheader ]
  %790 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.219, i32 0, i32 0
  %791 = load %struct.AP_info*, %struct.AP_info** %790, align 8
  call void @unroll_loop(i32 133)
  %792 = icmp ne %struct.AP_info* %791, null
  %793 = icmp slt i32 %lsr.iv37, %784
  %spec.select3 = select i1 %792, i1 %793, i1 false
  %lsr.iv.next38 = add nuw i32 %lsr.iv37, 1
  br i1 %spec.select3, label %.lr.ph21, label %.loopexit9.loopexit

.loopexit9.loopexit:                              ; preds = %.lr.ph21
  %.3.ph = phi %struct.AP_info* [ %791, %.lr.ph21 ]
  br label %.loopexit9

.loopexit9:                                       ; preds = %.loopexit9.loopexit, %786, %783
  %.3 = phi %struct.AP_info* [ %.1, %783 ], [ %787, %786 ], [ %.3.ph, %.loopexit9.loopexit ]
  %794 = icmp slt i32 %784, 0
  %795 = icmp eq %struct.AP_info* %.3, null
  %spec.select4 = select i1 %794, i1 true, i1 %795
  br i1 %spec.select4, label %.preheader10, label %.loopexit11.loopexit

; <label>:796:                                    ; preds = %._crit_edge126
  %797 = getelementptr [35 x i8], [35 x i8]* @.str.133, i32 0, i32 0
  %798 = call i32 (i8*, ...) @printf(i8* %797)
  %799 = load %struct.AP_info*, %struct.AP_info** @ap_1st, align 8
  br label %.loopexit11

.loopexit11.loopexit:                             ; preds = %.loopexit9
  %.4.ph = phi %struct.AP_info* [ %.3, %.loopexit9 ]
  br label %.loopexit11

.loopexit11:                                      ; preds = %.loopexit11.loopexit, %796
  %.4 = phi %struct.AP_info* [ %799, %796 ], [ %.4.ph, %.loopexit11.loopexit ]
  %800 = getelementptr [2 x i8], [2 x i8]* @.str.2, i32 0, i32 0
  %801 = call i32 (i8*, ...) @printf(i8* %800)
  %802 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.4, i32 0, i32 1
  %803 = getelementptr inbounds [6 x i8], [6 x i8]* %802, i32 0, i32 0
  %804 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 4, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %804, i8* align 8 %803, i64 6, i1 false), !track !224
  %805 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 2
  store i32 1, i32* %805, align 8
  %806 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.4, i32 0, i32 10
  %807 = load i32, i32* %806, align 8
  %808 = icmp eq i32 %807, 2
  br i1 %808, label %809, label %815

; <label>:809:                                    ; preds = %.loopexit11
  %810 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 22
  %811 = load %struct._IO_FILE*, %struct._IO_FILE** %810, align 8
  %812 = icmp ne %struct._IO_FILE* %811, null
  br i1 %812, label %813, label %815

; <label>:813:                                    ; preds = %809
  %814 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 20
  store i32 0, i32* %814, align 4
  br label %815

; <label>:815:                                    ; preds = %813, %809, %.loopexit11, %667, %663
  store %struct.AP_info* null, %struct.AP_info** @ap_1st, align 8
  store i32 %586, i32* @optind, align 4
  store i32 0, i32* @id, align 4
  br label %816

; <label>:816:                                    ; preds = %815, %577
  store i32 0, i32* @nb_eof, align 4
  %817 = call void (i32)* @signal(i32 2, void (i32)* @sighandler) #9
  br label %818

; <label>:818:                                    ; preds = %844, %816
  call void @unroll_loop(i32 134)
  %819 = load i32, i32* @optind, align 4
  %820 = sext i32 %819 to i64
  %821 = getelementptr inbounds i8*, i8** %25, i64 %820
  %822 = load i8*, i8** %821, align 8
  %823 = call i32 @strcmp(i8* %822, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i64 0, i64 0)) #10
  %824 = icmp eq i32 %823, 0
  br i1 %824, label %825, label %826

; <label>:825:                                    ; preds = %818
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 24), align 4
  br label %826

; <label>:826:                                    ; preds = %825, %818
  %827 = load i32, i32* @id, align 4
  %828 = sext i32 %827 to i64
  %829 = getelementptr inbounds [128 x i64], [128 x i64]* @tid, i64 0, i64 %828
  %830 = load i32, i32* @optind, align 4
  %831 = sext i32 %830 to i64
  %832 = getelementptr inbounds i8*, i8** %25, i64 %831
  %833 = load i8*, i8** %832, align 8
  %834 = call i32 @pthread_create(i64* %829, %union.pthread_attr_t* null, i8* (i8*)* bitcast (void (i8*)* @read_thread to i8* (i8*)*), i8* %833) #9
  %835 = icmp ne i32 %834, 0
  br i1 %835, label %836, label %838

; <label>:836:                                    ; preds = %826
  %837 = getelementptr [22 x i8], [22 x i8]* @.str.117, i32 0, i32 0
  call void @perror(i8* %837)
  br label %1329

; <label>:838:                                    ; preds = %826
  %839 = load i32, i32* @id, align 4
  %840 = add nsw i32 %839, 1
  store i32 %840, i32* @id, align 4
  %841 = call i32 @usleep(i32 131071)
  %842 = load i32, i32* @id, align 4
  %843 = icmp sge i32 %842, 128
  br i1 %843, label %.loopexit69, label %844

; <label>:844:                                    ; preds = %838
  %845 = load i32, i32* @optind, align 4
  %846 = add nsw i32 %845, 1
  store i32 %846, i32* @optind, align 4
  %847 = icmp slt i32 %846, 4, !track_argc !219
  br i1 %847, label %818, label %.loopexit69

.loopexit69:                                      ; preds = %844, %838
  store i64 0, i64* @nb_pkt, align 8
  store i32 0, i32* @intr_read, align 4
  %848 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* @mx_eof) #9
  %849 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 6
  %850 = load i32, i32* %849, align 8
  %851 = icmp ne i32 %850, 0
  br i1 %851, label %857, label %852

; <label>:852:                                    ; preds = %.loopexit69
  %853 = getelementptr [33 x i8], [33 x i8]* @.str.119, i32 0, i32 0
  %854 = call i32 (i8*, ...) @printf(i8* %853)
  %855 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %856 = call i32 @fflush(%struct._IO_FILE* %855)
  br label %857

; <label>:857:                                    ; preds = %852, %.loopexit69
  call void @unroll_loop(i32 135)
  %858 = load i32, i32* @nb_eof, align 4
  %859 = load i32, i32* %27, align 4
  %860 = icmp slt i32 %858, %859
  br i1 %860, label %.lr.ph15.preheader, label %.critedge5

.lr.ph15.preheader:                               ; preds = %857
  br label %.lr.ph15

.lr.ph15:                                         ; preds = %864, %.lr.ph15.preheader
  %861 = load i32, i32* @intr_read, align 4
  %862 = icmp ne i32 %861, 0
  %863 = xor i1 %862, true
  br i1 %863, label %864, label %.critedge5.loopexit

; <label>:864:                                    ; preds = %.lr.ph15
  %865 = call i32 @pthread_cond_wait(%union.pthread_cond_t* @cv_eof, %union.pthread_mutex_t* @mx_eof)
  call void @unroll_loop(i32 135)
  %866 = load i32, i32* @nb_eof, align 4
  %867 = load i32, i32* %27, align 4
  %868 = icmp slt i32 %866, %867
  br i1 %868, label %.lr.ph15, label %.critedge5.loopexit

.critedge5.loopexit:                              ; preds = %864, %.lr.ph15
  br label %.critedge5

.critedge5:                                       ; preds = %.critedge5.loopexit, %857
  %869 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* @mx_eof) #9
  store i32 1, i32* @intr_read, align 4
  %870 = load %struct.AP_info*, %struct.AP_info** @ap_1st, align 8
  %871 = icmp ne %struct.AP_info* %870, null
  br i1 %871, label %.lr.ph115.preheader, label %._crit_edge116

.lr.ph115.preheader:                              ; preds = %.critedge5
  br label %.lr.ph115

.lr.ph115:                                        ; preds = %892, %.lr.ph115.preheader
  %.5111 = phi %struct.AP_info* [ %894, %892 ], [ %870, %.lr.ph115.preheader ]
  call void @unroll_loop(i32 136)
  %872 = call i32 @memcmp(i8* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 9, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.23, i64 0, i64 0), i64 6) #10
  %873 = icmp eq i32 %872, 0
  br i1 %873, label %890, label %874

; <label>:874:                                    ; preds = %.lr.ph115
  %875 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 2), align 8
  %876 = icmp ne i32 %875, 0
  br i1 %876, label %877, label %882

; <label>:877:                                    ; preds = %874
  %878 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.5111, i32 0, i32 1
  %879 = getelementptr inbounds [6 x i8], [6 x i8]* %878, i32 0, i32 0
  %880 = call i32 @memcmp(i8* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 4, i64 0), i8* %879, i64 6) #10
  %881 = icmp ne i32 %880, 0
  br i1 %881, label %882, label %890

; <label>:882:                                    ; preds = %877, %874
  %883 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 1), align 4
  %884 = icmp ne i32 %883, 0
  br i1 %884, label %885, label %892

; <label>:885:                                    ; preds = %882
  %886 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.5111, i32 0, i32 2
  %887 = getelementptr inbounds [33 x i8], [33 x i8]* %886, i32 0, i32 0
  %888 = call i32 @strcmp(i8* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 3, i64 0), i8* %887) #10
  %889 = icmp ne i32 %888, 0
  br i1 %889, label %892, label %890

; <label>:890:                                    ; preds = %885, %877, %.lr.ph115
  %891 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.5111, i32 0, i32 12
  store i32 1, i32* %891, align 8
  br label %892

; <label>:892:                                    ; preds = %890, %885, %882
  %893 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.5111, i32 0, i32 0
  %894 = load %struct.AP_info*, %struct.AP_info** %893, align 8
  %895 = icmp ne %struct.AP_info* %894, null
  br i1 %895, label %.lr.ph115, label %._crit_edge116.loopexit

._crit_edge116.loopexit:                          ; preds = %892
  br label %._crit_edge116

._crit_edge116:                                   ; preds = %._crit_edge116.loopexit, %.critedge5
  %896 = load %struct.AP_info*, %struct.AP_info** @ap_1st, align 8
  %897 = icmp ne %struct.AP_info* %896, null
  br i1 %897, label %.lr.ph109.preheader, label %.loopexit68

.lr.ph109.preheader:                              ; preds = %._crit_edge116
  br label %.lr.ph109

.lr.ph109:                                        ; preds = %901, %.lr.ph109.preheader
  %.6107 = phi %struct.AP_info* [ %903, %901 ], [ %896, %.lr.ph109.preheader ]
  call void @unroll_loop(i32 137)
  %898 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.6107, i32 0, i32 12
  %899 = load i32, i32* %898, align 8
  %900 = icmp ne i32 %899, 0
  br i1 %900, label %.loopexit68.loopexit, label %901

; <label>:901:                                    ; preds = %.lr.ph109
  %902 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.6107, i32 0, i32 0
  %903 = load %struct.AP_info*, %struct.AP_info** %902, align 8
  %904 = icmp ne %struct.AP_info* %903, null
  br i1 %904, label %.lr.ph109, label %.loopexit68.loopexit

.loopexit68.loopexit:                             ; preds = %901, %.lr.ph109
  %.6.lcssa.ph = phi %struct.AP_info* [ %.6107, %.lr.ph109 ], [ %903, %901 ]
  br label %.loopexit68

.loopexit68:                                      ; preds = %.loopexit68.loopexit, %._crit_edge116
  %.6.lcssa = phi %struct.AP_info* [ %896, %._crit_edge116 ], [ %.6.lcssa.ph, %.loopexit68.loopexit ]
  %905 = icmp eq %struct.AP_info* %.6.lcssa, null
  br i1 %905, label %906, label %916

; <label>:906:                                    ; preds = %.loopexit68
  %907 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 1
  %908 = load i32, i32* %907, align 4
  %909 = icmp ne i32 %908, 0
  %910 = zext i1 %909 to i64
  %911 = getelementptr [6 x i8], [6 x i8]* @.str.135, i32 0, i32 0
  %912 = getelementptr [6 x i8], [6 x i8]* @.str.77, i32 0, i32 0
  %913 = select i1 %909, i8* %911, i8* %912
  %914 = getelementptr [44 x i8], [44 x i8]* @.str.134, i32 0, i32 0
  %915 = call i32 (i8*, ...) @printf(i8* %914, i8* %913)
  br label %1329

; <label>:916:                                    ; preds = %.loopexit68
  %917 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.6.lcssa, i32 0, i32 10
  %918 = load i32, i32* %917, align 8
  %919 = icmp slt i32 %918, 2
  br i1 %919, label %920, label %929

; <label>:920:                                    ; preds = %916
  %921 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.6.lcssa, i32 0, i32 10
  %922 = load i32, i32* %921, align 8
  %cond = icmp eq i32 %922, 0
  br i1 %cond, label %923, label %926

; <label>:923:                                    ; preds = %920
  %924 = getelementptr [40 x i8], [40 x i8]* @.str.136, i32 0, i32 0
  %925 = call i32 (i8*, ...) @printf(i8* %924)
  br label %1329

; <label>:926:                                    ; preds = %920
  %927 = getelementptr [42 x i8], [42 x i8]* @.str.137, i32 0, i32 0
  %928 = call i32 (i8*, ...) @printf(i8* %927)
  br label %1329

; <label>:929:                                    ; preds = %916
  %930 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 5
  %931 = load i32, i32* %930, align 4
  %932 = icmp slt i32 0, %931
  br i1 %932, label %.lr.ph103.preheader, label %._crit_edge104

.lr.ph103.preheader:                              ; preds = %929
  br label %.lr.ph103

.lr.ph103:                                        ; preds = %950, %.lr.ph103.preheader
  %lsr.iv32 = phi [256 x [2 x i32]]* [ @bf_pipe, %.lr.ph103.preheader ], [ %955, %950 ]
  %lsr.iv29 = phi [256 x [2 x i32]]* [ @cm_pipe, %.lr.ph103.preheader ], [ %954, %950 ]
  %lsr.iv26 = phi [256 x [2 x i32]]* [ @mc_pipe, %.lr.ph103.preheader ], [ %953, %950 ]
  %indvars.iv105 = phi i64 [ %indvars.iv.next106, %950 ], [ 0, %.lr.ph103.preheader ]
  %lsr.iv3234 = bitcast [256 x [2 x i32]]* %lsr.iv32 to i32*
  %lsr.iv2931 = bitcast [256 x [2 x i32]]* %lsr.iv29 to i32*
  %lsr.iv2628 = bitcast [256 x [2 x i32]]* %lsr.iv26 to i32*
  call void @unroll_loop(i32 138)
  %933 = call i32 @pipe(i32* %lsr.iv2628) #9
  %934 = call i32 @pipe(i32* %lsr.iv2931) #9
  %935 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 0), align 8
  %936 = icmp sle i32 %935, 1
  br i1 %936, label %937, label %950

; <label>:937:                                    ; preds = %.lr.ph103
  %938 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 5), align 4
  %939 = icmp sgt i32 %938, 1
  br i1 %939, label %940, label %950

; <label>:940:                                    ; preds = %937
  %941 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 17), align 8
  %942 = icmp ne i32 %941, 0
  br i1 %942, label %943, label %950

; <label>:943:                                    ; preds = %940
  %944 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 18), align 4
  %945 = icmp ne i32 %944, 0
  br i1 %945, label %946, label %950

; <label>:946:                                    ; preds = %943
  %947 = call i32 @pipe(i32* %lsr.iv3234) #9
  %948 = shl i64 %indvars.iv105, 2
  %949 = inttoptr i64 %948 to i32*
  %uglygep35 = getelementptr i8, i8* bitcast ([256 x i32]* @bf_nkeys to i8*), i64 %948
  %uglygep3536 = bitcast i8* %uglygep35 to i32*
  store i32 0, i32* %uglygep3536, align 4
  br label %950

; <label>:950:                                    ; preds = %946, %943, %940, %937, %.lr.ph103
  %indvars.iv.next106 = add nuw nsw i64 %indvars.iv105, 1
  %951 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 5), align 4
  %952 = sext i32 %951 to i64
  %scevgep27 = getelementptr [256 x [2 x i32]], [256 x [2 x i32]]* %lsr.iv26, i64 0, i64 1, i64 0
  %953 = bitcast i32* %scevgep27 to [256 x [2 x i32]]*
  %scevgep30 = getelementptr [256 x [2 x i32]], [256 x [2 x i32]]* %lsr.iv29, i64 0, i64 1, i64 0
  %954 = bitcast i32* %scevgep30 to [256 x [2 x i32]]*
  %scevgep33 = getelementptr [256 x [2 x i32]], [256 x [2 x i32]]* %lsr.iv32, i64 0, i64 1, i64 0
  %955 = bitcast i32* %scevgep33 to [256 x [2 x i32]]*
  %956 = icmp slt i64 %indvars.iv.next106, %952
  br i1 %956, label %.lr.ph103, label %._crit_edge104.loopexit

._crit_edge104.loopexit:                          ; preds = %950
  br label %._crit_edge104

._crit_edge104:                                   ; preds = %._crit_edge104.loopexit, %929
  store i64 0, i64* @nb_tried, align 8
  store i64 0, i64* @nb_kprev, align 8
  %957 = call float @chrono(%struct.timeval* @t_begin, i32 1)
  %958 = call float @chrono(%struct.timeval* @t_stats, i32 1)
  %959 = call float @chrono(%struct.timeval* @t_kprev, i32 1)
  %960 = call void (i32)* @signal(i32 28, void (i32)* @sighandler) #9
  %961 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 0
  %962 = load i32, i32* %961, align 8
  %963 = icmp eq i32 %962, 1
  br i1 %963, label %972, label %964

; <label>:964:                                    ; preds = %._crit_edge104
  %965 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 0
  %966 = load i32, i32* %965, align 8
  %967 = icmp eq i32 %966, 2
  br i1 %967, label %1178, label %968

; <label>:968:                                    ; preds = %964
  %969 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.6.lcssa, i32 0, i32 10
  %970 = load i32, i32* %969, align 8
  %971 = icmp eq i32 %970, 2
  br i1 %971, label %972, label %.loopexit8

; <label>:972:                                    ; preds = %968, %._crit_edge104
  %973 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 10
  %974 = load i32, i32* %973, align 4
  %975 = icmp eq i32 %974, 0
  br i1 %975, label %976, label %978

; <label>:976:                                    ; preds = %972
  %977 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 10
  store i32 13, i32* %977, align 4
  br label %978

; <label>:978:                                    ; preds = %976, %972
  %979 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 17
  %980 = load i32, i32* %979, align 8
  %981 = add nsw i32 0, %980
  %982 = icmp sgt i32 %981, 4
  br i1 %982, label %983, label %986

; <label>:983:                                    ; preds = %978
  %984 = getelementptr [61 x i8], [61 x i8]* @.str.138, i32 0, i32 0
  %985 = call i32 (i8*, ...) @printf(i8* %984)
  br label %1329

; <label>:986:                                    ; preds = %978
  %987 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 17
  %988 = load i32, i32* %987, align 8
  %989 = icmp slt i32 0, %988
  br i1 %989, label %.lr.ph97, label %._crit_edge98

.lr.ph97:                                         ; preds = %986
  %990 = sext i32 0 to i64
  %991 = shl i64 %990, 2
  %992 = add i64 %991, 2068
  %uglygep = getelementptr i8, i8* bitcast (%struct.options* @opt to i8*), i64 %992
  br label %993

; <label>:993:                                    ; preds = %993, %.lr.ph97
  %lsr.iv23 = phi i32 [ -1, %.lr.ph97 ], [ %lsr.iv.next, %993 ]
  %indvars.iv99 = phi i64 [ 0, %.lr.ph97 ], [ %indvars.iv.next100, %993 ]
  call void @unroll_loop(i32 139)
  %994 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %995 = add i32 %lsr.iv23, %994
  %996 = shl i64 %indvars.iv99, 2
  %scevgep24 = getelementptr i8, i8* %uglygep, i64 %996
  %scevgep2425 = bitcast i8* %scevgep24 to i32*
  store i32 %995, i32* %scevgep2425, align 4
  %indvars.iv.next100 = add nuw nsw i64 %indvars.iv99, 1
  %997 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 17), align 8
  %998 = sext i32 %997 to i64
  %lsr.iv.next = add nsw i32 %lsr.iv23, -1
  %999 = icmp slt i64 %indvars.iv.next100, %998
  br i1 %999, label %993, label %._crit_edge98.loopexit

._crit_edge98.loopexit:                           ; preds = %993
  br label %._crit_edge98

._crit_edge98:                                    ; preds = %._crit_edge98.loopexit, %986
  %1000 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 17
  %1001 = load i32, i32* %1000, align 8
  %1002 = add nsw i32 %1001, 0
  %1003 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 17
  store i32 %1002, i32* %1003, align 8
  %1004 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 12
  %1005 = load float, float* %1004, align 4
  %1006 = fcmp oeq float %1005, 0.000000e+00
  br i1 %1006, label %1007, label %1026

; <label>:1007:                                   ; preds = %._crit_edge98
  %1008 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 20
  %1009 = load i32, i32* %1008, align 4
  %1010 = icmp ne i32 %1009, 0
  br i1 %1010, label %1011, label %1013

; <label>:1011:                                   ; preds = %1007
  %1012 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 12
  store float 2.000000e+00, float* %1012, align 4
  br label %1026

; <label>:1013:                                   ; preds = %1007
  %1014 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 19
  %1015 = load i32, i32* %1014, align 8
  %1016 = icmp ne i32 %1015, 0
  br i1 %1016, label %1024, label %1017

; <label>:1017:                                   ; preds = %1013
  %1018 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 10
  %1019 = load i32, i32* %1018, align 4
  %1020 = icmp eq i32 %1019, 5
  %1021 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 12
  br i1 %1020, label %1022, label %1023

; <label>:1022:                                   ; preds = %1017
  store float 5.000000e+00, float* %1021, align 4
  br label %1026

; <label>:1023:                                   ; preds = %1017
  store float 2.000000e+00, float* %1021, align 4
  br label %1026

; <label>:1024:                                   ; preds = %1013
  %1025 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 12
  store float 3.000000e+01, float* %1025, align 4
  br label %1026

; <label>:1026:                                   ; preds = %1024, %1023, %1022, %1011, %._crit_edge98
  %1027 = getelementptr %struct.WEP_data, %struct.WEP_data* @wep, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* align 8 %1027, i8 0, i64 131680, i1 false)
  %1028 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 20
  %1029 = load i32, i32* %1028, align 4
  %1030 = icmp ne i32 %1029, 0
  br i1 %1030, label %1031, label %1077

; <label>:1031:                                   ; preds = %1026
  %1032 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 6
  %1033 = load i32, i32* %1032, align 8
  %1034 = icmp ne i32 %1033, 0
  br i1 %1034, label %1038, label %1035

; <label>:1035:                                   ; preds = %1031
  %1036 = getelementptr [49 x i8], [49 x i8]* @.str.139, i32 0, i32 0
  %1037 = call i32 (i8*, ...) @printf(i8* %1036, i32 5000)
  br label %1038

; <label>:1038:                                   ; preds = %1035, %1031
  %1039 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.6.lcssa, i32 0, i32 9
  %1040 = load i64, i64* %1039, align 8
  %1041 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.6.lcssa, i32 0, i32 9
  %1042 = load i64, i64* %1041, align 8
  %1043 = srem i64 %1042, 5000
  %1044 = sub nsw i64 %1040, %1043
  %1045 = trunc i64 %1044 to i32
  %1046 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 32
  store i32 %1045, i32* %1046, align 4
  %1047 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.6.lcssa, i32 0, i32 9
  %1048 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.6.lcssa, i32 0, i32 9
  br label %1049

; <label>:1049:                                   ; preds = %1075, %1038
  %.112 = phi i32 [ 1, %1038 ], [ %.314, %1075 ]
  call void @unroll_loop(i32 140)
  %1050 = load i64, i64* %1047, align 8
  %1051 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 32), align 4
  %1052 = sext i32 %1051 to i64
  %1053 = icmp sge i64 %1050, %1052
  br i1 %1053, label %1054, label %1074

; <label>:1054:                                   ; preds = %1049
  %1055 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 6), align 8
  %1056 = icmp ne i32 %1055, 0
  br i1 %1056, label %1060, label %1057

; <label>:1057:                                   ; preds = %1054
  %1058 = load i64, i64* %1048, align 8
  %1059 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.140, i64 0, i64 0), i64 %1058)
  br label %1060

; <label>:1060:                                   ; preds = %1057, %1054
  %1061 = call i32 @crack_wep_ptw(%struct.AP_info* %.6.lcssa)
  %1062 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 41), align 4
  %1063 = icmp eq i32 %1062, 1
  %1064 = icmp eq i32 %1061, 1
  %or.cond6 = and i1 %1063, %1064
  br i1 %or.cond6, label %1065, label %1067

; <label>:1065:                                   ; preds = %1060
  %1066 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([211 x i8], [211 x i8]* @.str.141, i64 0, i64 0))
  br label %1067

; <label>:1067:                                   ; preds = %1065, %1060
  %.213 = phi i32 [ 0, %1065 ], [ %1061, %1060 ]
  %1068 = icmp ne i32 %.213, 0
  br i1 %1068, label %1069, label %1074

; <label>:1069:                                   ; preds = %1067
  %1070 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 32), align 4
  %1071 = add nsw i32 %1070, 5000
  store i32 %1071, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 32), align 4
  %1072 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 32), align 4
  %1073 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.142, i64 0, i64 0), i32 %1072)
  br label %1074

; <label>:1074:                                   ; preds = %1069, %1067, %1049
  %.314 = phi i32 [ %.112, %1049 ], [ %.213, %1069 ], [ %.213, %1067 ]
  %cond7 = icmp eq i32 %.314, 0
  br i1 %cond7, label %.loopexit8.loopexit, label %1075

; <label>:1075:                                   ; preds = %1074
  %1076 = call i32 @usleep(i32 10000)
  br label %1049

; <label>:1077:                                   ; preds = %1026
  %1078 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 22
  %1079 = load %struct._IO_FILE*, %struct._IO_FILE** %1078, align 8
  %1080 = icmp ne %struct._IO_FILE* %1079, null
  br i1 %1080, label %1081, label %1083

; <label>:1081:                                   ; preds = %1077
  %1082 = call i32 @crack_wep_dict()
  br label %.loopexit8

; <label>:1083:                                   ; preds = %1077
  %1084 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 5
  %1085 = load i32, i32* %1084, align 4
  %1086 = icmp slt i32 0, %1085
  br i1 %1086, label %.lr.ph91.preheader, label %._crit_edge92

.lr.ph91.preheader:                               ; preds = %1083
  br label %.lr.ph91

.lr.ph91:                                         ; preds = %1119, %.lr.ph91.preheader
  %indvars.iv93 = phi i64 [ %indvars.iv.next94, %1119 ], [ 0, %.lr.ph91.preheader ]
  call void @unroll_loop(i32 141)
  %1087 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 0), align 8
  %1088 = icmp sle i32 %1087, 1
  br i1 %1088, label %1089, label %1110

; <label>:1089:                                   ; preds = %.lr.ph91
  %1090 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 5), align 4
  %1091 = icmp sgt i32 %1090, 1
  br i1 %1091, label %1092, label %1110

; <label>:1092:                                   ; preds = %1089
  %1093 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 17), align 8
  %1094 = icmp ne i32 %1093, 0
  br i1 %1094, label %1095, label %1110

; <label>:1095:                                   ; preds = %1092
  %1096 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 18), align 4
  %1097 = icmp ne i32 %1096, 0
  br i1 %1097, label %1098, label %1110

; <label>:1098:                                   ; preds = %1095
  %1099 = load i32, i32* @id, align 4
  %1100 = sext i32 %1099 to i64
  %1101 = getelementptr inbounds [128 x i64], [128 x i64]* @tid, i64 0, i64 %1100
  %1102 = inttoptr i64 %indvars.iv93 to i8*
  %1103 = call i32 @pthread_create(i64* %1101, %union.pthread_attr_t* null, i8* (i8*)* bitcast (i32 (i8*)* @inner_bruteforcer_thread to i8* (i8*)*), i8* %1102) #9
  %1104 = icmp ne i32 %1103, 0
  br i1 %1104, label %1105, label %1107

; <label>:1105:                                   ; preds = %1098
  %1106 = getelementptr [22 x i8], [22 x i8]* @.str.117, i32 0, i32 0
  call void @perror(i8* %1106)
  br label %1329

; <label>:1107:                                   ; preds = %1098
  %1108 = load i32, i32* @id, align 4
  %1109 = add nsw i32 %1108, 1
  store i32 %1109, i32* @id, align 4
  br label %1110

; <label>:1110:                                   ; preds = %1107, %1095, %1092, %1089, %.lr.ph91
  %1111 = load i32, i32* @id, align 4
  %1112 = sext i32 %1111 to i64
  %1113 = getelementptr inbounds [128 x i64], [128 x i64]* @tid, i64 0, i64 %1112
  %1114 = inttoptr i64 %indvars.iv93 to i8*
  %1115 = call i32 @pthread_create(i64* %1113, %union.pthread_attr_t* null, i8* (i8*)* bitcast (i32 (i8*)* @crack_wep_thread to i8* (i8*)*), i8* %1114) #9
  %1116 = icmp ne i32 %1115, 0
  br i1 %1116, label %1117, label %1119

; <label>:1117:                                   ; preds = %1110
  %1118 = getelementptr [22 x i8], [22 x i8]* @.str.117, i32 0, i32 0
  call void @perror(i8* %1118)
  br label %1329

; <label>:1119:                                   ; preds = %1110
  %1120 = load i32, i32* @id, align 4
  %1121 = add nsw i32 %1120, 1
  store i32 %1121, i32* @id, align 4
  %indvars.iv.next94 = add nuw nsw i64 %indvars.iv93, 1
  %1122 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 5), align 4
  %1123 = sext i32 %1122 to i64
  %1124 = icmp slt i64 %indvars.iv.next94, %1123
  br i1 %1124, label %.lr.ph91, label %._crit_edge92.loopexit

._crit_edge92.loopexit:                           ; preds = %1119
  br label %._crit_edge92

._crit_edge92:                                    ; preds = %._crit_edge92.loopexit, %1083
  %1125 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 19
  %1126 = load i32, i32* %1125, align 8
  %1127 = icmp ne i32 %1126, 0
  br i1 %1127, label %1144, label %.preheader.preheader

.preheader.preheader:                             ; preds = %._crit_edge92
  br label %.preheader

.preheader:                                       ; preds = %.preheader, %.preheader.preheader
  %1128 = call i32 @do_wep_crack1(i32 0)
  %1129 = icmp eq i32 %1128, 2
  br i1 %1129, label %.preheader, label %1130

; <label>:1130:                                   ; preds = %.preheader
  %.lcssa39 = phi i32 [ %1128, %.preheader ]
  %1131 = icmp eq i32 %.lcssa39, 1
  br i1 %1131, label %1132, label %.loopexit8

; <label>:1132:                                   ; preds = %1130
  %1133 = getelementptr [461 x i8], [461 x i8]* @.str.143, i32 0, i32 0
  %1134 = call i32 (i8*, ...) @printf(i8* %1133)
  %1135 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 19
  %1136 = load i32, i32* %1135, align 8
  %1137 = icmp ne i32 %1136, 0
  br i1 %1137, label %1138, label %1141

; <label>:1138:                                   ; preds = %1132
  %1139 = getelementptr [50 x i8], [50 x i8]* @.str.144, i32 0, i32 0
  %1140 = call i32 (i8*, ...) @printf(i8* %1139)
  br label %1141

; <label>:1141:                                   ; preds = %1138, %1132
  %1142 = getelementptr [2 x i8], [2 x i8]* @.str.2, i32 0, i32 0
  %1143 = call i32 (i8*, ...) @printf(i8* %1142)
  br label %.loopexit8

; <label>:1144:                                   ; preds = %._crit_edge92
  %1145 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 10
  %1146 = load i32, i32* %1145, align 4
  %1147 = sub nsw i32 %1146, 3
  %1148 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 10
  %1149 = load i32, i32* %1148, align 4
  %1150 = sub nsw i32 %1149, 2
  %1151 = icmp slt i32 %1147, %1150
  br i1 %1151, label %.lr.ph87.preheader, label %.loopexit67

.lr.ph87.preheader:                               ; preds = %1144
  br label %.lr.ph87

.lr.ph87:                                         ; preds = %1157, %.lr.ph87.preheader
  %.1185 = phi i32 [ %1158, %1157 ], [ %1147, %.lr.ph87.preheader ]
  call void @unroll_loop(i32 142)
  br label %1152

; <label>:1152:                                   ; preds = %1152, %.lr.ph87
  call void @unroll_loop(i32 143)
  %1153 = call i32 @do_wep_crack2(i32 %.1185)
  %1154 = icmp eq i32 %1153, 2
  br i1 %1154, label %1152, label %1155

; <label>:1155:                                   ; preds = %1152
  %.lcssa = phi i32 [ %1153, %1152 ]
  %1156 = icmp eq i32 %.lcssa, 0
  br i1 %1156, label %.loopexit67.loopexit, label %1157

; <label>:1157:                                   ; preds = %1155
  %1158 = add nsw i32 %.1185, 1
  %1159 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %1160 = sub nsw i32 %1159, 2
  %1161 = icmp slt i32 %1158, %1160
  br i1 %1161, label %.lr.ph87, label %.loopexit67.loopexit

.loopexit67.loopexit:                             ; preds = %1157, %1155
  %.516.ph = phi i32 [ %.lcssa, %1155 ], [ %.lcssa, %1157 ]
  br label %.loopexit67

.loopexit67:                                      ; preds = %.loopexit67.loopexit, %1144
  %.516 = phi i32 [ 1, %1144 ], [ %.516.ph, %.loopexit67.loopexit ]
  %1162 = icmp eq i32 %.516, 1
  br i1 %1162, label %1163, label %.loopexit8

; <label>:1163:                                   ; preds = %.loopexit67
  %1164 = getelementptr [461 x i8], [461 x i8]* @.str.143, i32 0, i32 0
  %1165 = call i32 (i8*, ...) @printf(i8* %1164)
  %1166 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 19
  %1167 = load i32, i32* %1166, align 8
  %1168 = icmp ne i32 %1167, 0
  br i1 %1168, label %1169, label %1172

; <label>:1169:                                   ; preds = %1163
  %1170 = getelementptr [56 x i8], [56 x i8]* @.str.145, i32 0, i32 0
  %1171 = call i32 (i8*, ...) @printf(i8* %1170)
  br label %1172

; <label>:1172:                                   ; preds = %1169, %1163
  %1173 = getelementptr [2 x i8], [2 x i8]* @.str.2, i32 0, i32 0
  %1174 = call i32 (i8*, ...) @printf(i8* %1173)
  br label %.loopexit8

.loopexit8.loopexit:                              ; preds = %1074
  %.920.ph = phi i32 [ %.314, %1074 ]
  br label %.loopexit8

.loopexit8:                                       ; preds = %.loopexit8.loopexit, %1172, %.loopexit67, %1141, %1130, %1081, %968
  %.920 = phi i32 [ 1, %968 ], [ %1082, %1081 ], [ %.lcssa39, %1141 ], [ %.lcssa39, %1130 ], [ %.516, %1172 ], [ %.516, %.loopexit67 ], [ %.920.ph, %.loopexit8.loopexit ]
  %1175 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.6.lcssa, i32 0, i32 10
  %1176 = load i32, i32* %1175, align 8
  %1177 = icmp eq i32 %1176, 3
  br i1 %1177, label %1178, label %1329

; <label>:1178:                                   ; preds = %.loopexit8, %964
  %.1021 = phi i32 [ 1, %964 ], [ %.920, %.loopexit8 ]
  %1179 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 22
  %1180 = load %struct._IO_FILE*, %struct._IO_FILE** %1179, align 8
  %1181 = icmp eq %struct._IO_FILE* %1180, null
  br i1 %1181, label %555, label %1182

; <label>:1182:                                   ; preds = %1178
  %1183 = load %struct.AP_info*, %struct.AP_info** @ap_1st, align 8
  %1184 = icmp ne %struct.AP_info* %1183, null
  br i1 %1184, label %.lr.ph84.preheader, label %.loopexit66

.lr.ph84.preheader:                               ; preds = %1182
  br label %.lr.ph84

.lr.ph84:                                         ; preds = %1193, %.lr.ph84.preheader
  %.782 = phi %struct.AP_info* [ %1195, %1193 ], [ %1183, %.lr.ph84.preheader ]
  call void @unroll_loop(i32 144)
  %1185 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.782, i32 0, i32 12
  %1186 = load i32, i32* %1185, align 8
  %1187 = icmp ne i32 %1186, 0
  br i1 %1187, label %1188, label %1193

; <label>:1188:                                   ; preds = %.lr.ph84
  %1189 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.782, i32 0, i32 14
  %1190 = getelementptr inbounds %struct.WPA_hdsk, %struct.WPA_hdsk* %1189, i32 0, i32 7
  %1191 = load i32, i32* %1190, align 8
  %1192 = icmp eq i32 %1191, 7
  br i1 %1192, label %.loopexit66.loopexit, label %1193

; <label>:1193:                                   ; preds = %1188, %.lr.ph84
  %1194 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.782, i32 0, i32 0
  %1195 = load %struct.AP_info*, %struct.AP_info** %1194, align 8
  %1196 = icmp ne %struct.AP_info* %1195, null
  br i1 %1196, label %.lr.ph84, label %.loopexit66.loopexit

.loopexit66.loopexit:                             ; preds = %1193, %1188
  %.7.lcssa.ph = phi %struct.AP_info* [ %.782, %1188 ], [ %1195, %1193 ]
  br label %.loopexit66

.loopexit66:                                      ; preds = %.loopexit66.loopexit, %1182
  %.7.lcssa = phi %struct.AP_info* [ %1183, %1182 ], [ %.7.lcssa.ph, %.loopexit66.loopexit ]
  %1197 = icmp eq %struct.AP_info* %.7.lcssa, null
  br i1 %1197, label %1198, label %1201

; <label>:1198:                                   ; preds = %.loopexit66
  %1199 = getelementptr [32 x i8], [32 x i8]* @.str.146, i32 0, i32 0
  %1200 = call i32 (i8*, ...) @printf(i8* %1199)
  br label %1329

; <label>:1201:                                   ; preds = %.loopexit66
  %1202 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.7.lcssa, i32 0, i32 2
  %1203 = getelementptr inbounds [33 x i8], [33 x i8]* %1202, i32 0, i32 0
  %1204 = getelementptr [32 x i8], [32 x i8]* @ZERO, i32 0, i32 0
  %1205 = call i32 @memcmp(i8* %1203, i8* %1204, i64 32) #10
  %1206 = icmp eq i32 %1205, 0
  br i1 %1206, label %1207, label %1214

; <label>:1207:                                   ; preds = %1201
  %1208 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 1
  %1209 = load i32, i32* %1208, align 4
  %1210 = icmp ne i32 %1209, 0
  br i1 %1210, label %1214, label %1211

; <label>:1211:                                   ; preds = %1207
  %1212 = getelementptr [38 x i8], [38 x i8]* @.str.147, i32 0, i32 0
  %1213 = call i32 (i8*, ...) @printf(i8* %1212)
  br label %1329

; <label>:1214:                                   ; preds = %1207, %1201
  %1215 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 1
  %1216 = load i32, i32* %1215, align 4
  %1217 = icmp ne i32 %1216, 0
  br i1 %1217, label %1218, label %1231

; <label>:1218:                                   ; preds = %1214
  %1219 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.7.lcssa, i32 0, i32 2
  %1220 = getelementptr inbounds [33 x i8], [33 x i8]* %1219, i64 0, i64 0
  %1221 = load i8, i8* %1220, align 2
  %1222 = sext i8 %1221 to i32
  %1223 = icmp eq i32 %1222, 0
  br i1 %1223, label %1224, label %1231

; <label>:1224:                                   ; preds = %1218
  %1225 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.7.lcssa, i32 0, i32 2
  %1226 = getelementptr inbounds [33 x i8], [33 x i8]* %1225, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* align 2 %1226, i8 0, i64 33, i1 false)
  %1227 = getelementptr inbounds %struct.AP_info, %struct.AP_info* %.7.lcssa, i32 0, i32 2
  %1228 = getelementptr inbounds [33 x i8], [33 x i8]* %1227, i32 0, i32 0
  %1229 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 3, i32 0
  %1230 = call i8* @strncpy(i8* %1228, i8* %1229, i64 32) #9, !track !225
  br label %1231

; <label>:1231:                                   ; preds = %1224, %1218, %1214
  %1232 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 5
  %1233 = load i32, i32* %1232, align 4
  %1234 = icmp slt i32 0, %1233
  br i1 %1234, label %.lr.ph78.preheader, label %._crit_edge79

.lr.ph78.preheader:                               ; preds = %1231
  br label %.lr.ph78

.lr.ph78:                                         ; preds = %1250, %.lr.ph78.preheader
  %lsr.iv4 = phi [128 x %struct.WPA_data]* [ @wpa_data, %.lr.ph78.preheader ], [ %1255, %1250 ]
  %indvars.iv80 = phi i64 [ %indvars.iv.next81, %1250 ], [ 0, %.lr.ph78.preheader ]
  %lsr.iv415 = bitcast [128 x %struct.WPA_data]* %lsr.iv4 to i8*
  %lsr.iv420 = bitcast [128 x %struct.WPA_data]* %lsr.iv4 to %union.pthread_mutex_t*
  %lsr.iv417 = bitcast [128 x %struct.WPA_data]* %lsr.iv4 to %union.pthread_cond_t*
  %1235 = bitcast [128 x %struct.WPA_data]* undef to i8*
  %lsr.iv47 = bitcast [128 x %struct.WPA_data]* %lsr.iv4 to i32*
  %lsr.iv411 = bitcast [128 x %struct.WPA_data]* %lsr.iv4 to i8**
  %1236 = bitcast [128 x %struct.WPA_data]* undef to i32*
  %lsr.iv46 = bitcast [128 x %struct.WPA_data]* %lsr.iv4 to %struct.AP_info**
  call void @unroll_loop(i32 145)
  store %struct.AP_info* %.7.lcssa, %struct.AP_info** %lsr.iv46, align 8
  %scevgep8 = getelementptr i32, i32* %lsr.iv47, i64 2
  %tmp = trunc i64 %indvars.iv80 to i32
  store i32 %tmp, i32* %scevgep8, align 8
  %scevgep9 = getelementptr i32, i32* %lsr.iv47, i64 3
  store i32 17, i32* %scevgep9, align 4
  %scevgep10 = getelementptr i32, i32* %lsr.iv47, i64 3
  %1237 = load i32, i32* %scevgep10, align 4
  %1238 = mul nsw i32 %1237, 128
  %1239 = sext i32 %1238 to i64
  %1240 = call noalias i8* @malloc(i64 %1239) #9, !track !226
  %scevgep12 = getelementptr i8*, i8** %lsr.iv411, i64 2
  store i8* %1240, i8** %scevgep12, align 8
  %scevgep13 = getelementptr i32, i32* %lsr.iv47, i64 6
  store i32 0, i32* %scevgep13, align 8
  %scevgep14 = getelementptr i32, i32* %lsr.iv47, i64 7
  store i32 0, i32* %scevgep14, align 4
  %scevgep16 = getelementptr i8, i8* %lsr.iv415, i64 32
  call void @llvm.memset.p0i8.i64(i8* align 8 %scevgep16, i8 0, i64 128, i1 false)
  %scevgep18 = getelementptr %union.pthread_cond_t, %union.pthread_cond_t* %lsr.iv417, i64 3, i32 0, i32 2, i64 0
  %scevgep1819 = bitcast i32* %scevgep18 to %union.pthread_cond_t*
  %1241 = call i32 @pthread_cond_init(%union.pthread_cond_t* %scevgep1819, %union.pthread_mutexattr_t* null) #9
  %scevgep21 = getelementptr %union.pthread_mutex_t, %union.pthread_mutex_t* %lsr.iv420, i64 5, i32 0, i32 2
  %scevgep2122 = bitcast i32* %scevgep21 to %union.pthread_mutex_t*
  %1242 = call i32 @pthread_mutex_init(%union.pthread_mutex_t* %scevgep2122, %union.pthread_mutexattr_t* null) #9
  %1243 = load i32, i32* @id, align 4
  %1244 = sext i32 %1243 to i64
  %1245 = getelementptr inbounds [128 x i64], [128 x i64]* @tid, i64 0, i64 %1244
  %1246 = call i32 @pthread_create(i64* %1245, %union.pthread_attr_t* null, i8* (i8*)* bitcast (i32 (i8*)* @crack_wpa_thread to i8* (i8*)*), i8* %lsr.iv415) #9
  %1247 = icmp ne i32 %1246, 0
  br i1 %1247, label %1248, label %1250

; <label>:1248:                                   ; preds = %.lr.ph78
  %1249 = getelementptr [22 x i8], [22 x i8]* @.str.117, i32 0, i32 0
  call void @perror(i8* %1249)
  br label %1329

; <label>:1250:                                   ; preds = %.lr.ph78
  %1251 = load i32, i32* @id, align 4
  %1252 = add nsw i32 %1251, 1
  store i32 %1252, i32* @id, align 4
  %indvars.iv.next81 = add nuw nsw i64 %indvars.iv80, 1
  %1253 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 5), align 4
  %1254 = sext i32 %1253 to i64
  %scevgep5 = getelementptr [128 x %struct.WPA_data], [128 x %struct.WPA_data]* %lsr.iv4, i64 0, i64 1
  %1255 = bitcast %struct.WPA_data* %scevgep5 to [128 x %struct.WPA_data]*
  %1256 = icmp slt i64 %indvars.iv.next81, %1254
  br i1 %1256, label %.lr.ph78, label %._crit_edge79.loopexit

._crit_edge79.loopexit:                           ; preds = %1250
  br label %._crit_edge79

._crit_edge79:                                    ; preds = %._crit_edge79.loopexit, %1231
  %1257 = call i32 @do_wpa_crack()
  store i32 1, i32* @wpa_wordlists_done, align 4
  %1258 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 5
  %1259 = load i32, i32* %1258, align 4
  %1260 = icmp slt i32 0, %1259
  br i1 %1260, label %.lr.ph75.preheader, label %._crit_edge

.lr.ph75.preheader:                               ; preds = %._crit_edge79
  br label %.lr.ph75

.lr.ph75:                                         ; preds = %.lr.ph75, %.lr.ph75.preheader
  %.131074 = phi i32 [ %1267, %.lr.ph75 ], [ 0, %.lr.ph75.preheader ]
  call void @unroll_loop(i32 146)
  %1261 = load i32, i32* @id, align 4
  %1262 = add nsw i32 %1261, -1
  store i32 %1262, i32* @id, align 4
  %1263 = sext i32 %1262 to i64
  %1264 = getelementptr inbounds [128 x i64], [128 x i64]* @tid, i64 0, i64 %1263
  %1265 = load i64, i64* %1264, align 8
  %1266 = call i32 @pthread_join(i64 %1265, i8** null)
  %1267 = add nuw nsw i32 %.131074, 1
  %1268 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 5), align 4
  %1269 = icmp slt i32 %1267, %1268
  br i1 %1269, label %.lr.ph75, label %._crit_edge.loopexit

._crit_edge.loopexit:                             ; preds = %.lr.ph75
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %._crit_edge79
  %1270 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 5
  %1271 = load i32, i32* %1270, align 4
  %1272 = icmp slt i32 0, %1271
  br i1 %1272, label %.lr.ph.preheader, label %.loopexit

.lr.ph.preheader:                                 ; preds = %._crit_edge
  br label %.lr.ph

.lr.ph:                                           ; preds = %1278, %.lr.ph.preheader
  %lsr.iv = phi [128 x %struct.WPA_data]* [ bitcast (i8* getelementptr inbounds ([128 x %struct.WPA_data], [128 x %struct.WPA_data]* @wpa_data, i64 0, i64 0, i32 6, i64 0) to [128 x %struct.WPA_data]*), %.lr.ph.preheader ], [ %1281, %1278 ]
  %indvars.iv = phi i64 [ %indvars.iv.next, %1278 ], [ 0, %.lr.ph.preheader ]
  %lsr.iv3 = bitcast [128 x %struct.WPA_data]* %lsr.iv to i8*
  call void @unroll_loop(i32 147)
  %1273 = load i8, i8* %lsr.iv3, align 8
  %1274 = sext i8 %1273 to i32
  %1275 = icmp ne i32 %1274, 0
  br i1 %1275, label %1276, label %1278

; <label>:1276:                                   ; preds = %.lr.ph
  %.14.lcssa37.wide = phi i64 [ %indvars.iv, %.lr.ph ]
  %1277 = trunc i64 %.14.lcssa37.wide to i32
  br label %.loopexit

; <label>:1278:                                   ; preds = %.lr.ph
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %1279 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 5), align 4
  %1280 = sext i32 %1279 to i64
  %scevgep = getelementptr [128 x %struct.WPA_data], [128 x %struct.WPA_data]* %lsr.iv, i64 0, i64 1
  %1281 = bitcast %struct.WPA_data* %scevgep to [128 x %struct.WPA_data]*
  %1282 = icmp slt i64 %indvars.iv.next, %1280
  br i1 %1282, label %.lr.ph, label %..loopexit_crit_edge

..loopexit_crit_edge:                             ; preds = %1278
  %split.wide = phi i64 [ %indvars.iv.next, %1278 ]
  %split73 = phi i32 [ %1257, %1278 ]
  %1283 = trunc i64 %split.wide to i32
  br label %.loopexit

.loopexit:                                        ; preds = %..loopexit_crit_edge, %1276, %._crit_edge
  %.14.lcssa = phi i32 [ %1277, %1276 ], [ %1283, %..loopexit_crit_edge ], [ 0, %._crit_edge ]
  %.1122 = phi i32 [ 0, %1276 ], [ %split73, %..loopexit_crit_edge ], [ %1257, %._crit_edge ]
  %1284 = icmp eq i32 %.1122, 0
  br i1 %1284, label %1285, label %1324

; <label>:1285:                                   ; preds = %.loopexit
  %1286 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 6
  %1287 = load i32, i32* %1286, align 8
  %1288 = icmp ne i32 %1287, 0
  br i1 %1288, label %1289, label %1296

; <label>:1289:                                   ; preds = %1285
  %1290 = sext i32 %.14.lcssa to i64
  %1291 = getelementptr inbounds [128 x %struct.WPA_data], [128 x %struct.WPA_data]* @wpa_data, i64 0, i64 %1290
  %1292 = getelementptr inbounds %struct.WPA_data, %struct.WPA_data* %1291, i32 0, i32 6
  %1293 = getelementptr inbounds [128 x i8], [128 x i8]* %1292, i32 0, i32 0
  %1294 = getelementptr [19 x i8], [19 x i8]* @.str.148, i32 0, i32 0
  %1295 = call i32 (i8*, ...) @printf(i8* %1294, i8* %1293)
  br label %1339

; <label>:1296:                                   ; preds = %1285
  %1297 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 27
  %1298 = load i32, i32* %1297, align 4
  %1299 = icmp ne i32 %1298, 0
  br i1 %1299, label %1300, label %1303

; <label>:1300:                                   ; preds = %1296
  %1301 = getelementptr [8 x i8], [8 x i8]* @.str.62, i32 0, i32 0
  %1302 = call i32 (i8*, ...) @printf(i8* %1301)
  br label %1303

; <label>:1303:                                   ; preds = %1300, %1296
  %1304 = sext i32 %.14.lcssa to i64
  %1305 = getelementptr inbounds [128 x %struct.WPA_data], [128 x %struct.WPA_data]* @wpa_data, i64 0, i64 %1304
  %1306 = getelementptr inbounds %struct.WPA_data, %struct.WPA_data* %1305, i32 0, i32 6
  %1307 = getelementptr inbounds [128 x i8], [128 x i8]* %1306, i32 0, i32 0
  %1308 = call i64 @strlen(i8* %1307) #10
  %1309 = trunc i64 %1308 to i32
  %1310 = sub nsw i32 65, %1309
  %1311 = sdiv i32 %1310, 2
  %1312 = sext i32 %.14.lcssa to i64
  %1313 = getelementptr inbounds [128 x %struct.WPA_data], [128 x %struct.WPA_data]* @wpa_data, i64 0, i64 %1312
  %1314 = getelementptr inbounds %struct.WPA_data, %struct.WPA_data* %1313, i32 0, i32 6
  %1315 = getelementptr inbounds [128 x i8], [128 x i8]* %1314, i32 0, i32 0
  %1316 = getelementptr [35 x i8], [35 x i8]* @.str.63, i32 0, i32 0
  %1317 = call i32 (i8*, ...) @printf(i8* %1316, i32 %1311, i8* %1315)
  %1318 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 27
  %1319 = load i32, i32* %1318, align 4
  %1320 = icmp ne i32 %1319, 0
  br i1 %1320, label %1321, label %1339

; <label>:1321:                                   ; preds = %1303
  %1322 = getelementptr [9 x i8], [9 x i8]* @.str.36, i32 0, i32 0
  %1323 = call i32 (i8*, ...) @printf(i8* %1322)
  br label %1339

; <label>:1324:                                   ; preds = %.loopexit
  %1325 = getelementptr [32 x i8], [32 x i8]* @.str.149, i32 0, i32 0
  %1326 = call i32 (i8*, ...) @printf(i8* %1325)
  %1327 = getelementptr [2 x i8], [2 x i8]* @.str.2, i32 0, i32 0
  %1328 = call i32 (i8*, ...) @printf(i8* %1327)
  br label %1329

; <label>:1329:                                   ; preds = %1324, %1248, %1211, %1198, %.loopexit8, %1117, %1105, %983, %926, %923, %906, %836, %660, %609, %574, %555
  %.1324 = phi i32 [ %.011, %555 ], [ 1, %836 ], [ 1, %906 ], [ 1, %983 ], [ %.1021, %1198 ], [ %.1021, %1248 ], [ %.1021, %1211 ], [ 1, %1105 ], [ 1, %1117 ], [ 1, %609 ], [ 1, %660 ], [ 1, %574 ], [ 1, %926 ], [ 1, %923 ], [ %.1122, %1324 ], [ %.920, %.loopexit8 ]
  %1330 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 6
  %1331 = load i32, i32* %1330, align 8
  %1332 = icmp ne i32 %1331, 0
  br i1 %1332, label %1336, label %1333

; <label>:1333:                                   ; preds = %1329
  %1334 = getelementptr [2 x i8], [2 x i8]* @.str.2, i32 0, i32 0
  %1335 = call i32 (i8*, ...) @printf(i8* %1334)
  br label %1336

; <label>:1336:                                   ; preds = %1333, %1329
  %1337 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %1338 = call i32 @fflush(%struct._IO_FILE* %1337)
  call void @clean_exit(i32 %.1324)
  call void @_exit(i32 %.1324) #12
  unreachable

; <label>:1339:                                   ; preds = %1321, %1303, %1289, %542, %540, %507, %493, %484, %479, %463, %443, %421, %405, %386, %369, %355, %334, %308, %284, %160, %142, %128, %102, %98, %80, %75
  %.0 = phi i32 [ 0, %1289 ], [ 1, %507 ], [ 1, %493 ], [ 1, %484 ], [ 1, %479 ], [ 1, %463 ], [ 1, %443 ], [ 1, %421 ], [ 1, %405 ], [ 1, %386 ], [ 1, %369 ], [ 1, %355 ], [ 1, %334 ], [ 1, %308 ], [ 1, %284 ], [ 1, %160 ], [ 1, %142 ], [ 1, %128 ], [ 1, %102 ], [ 0, %98 ], [ 1, %80 ], [ 1, %75 ], [ 1, %542 ], [ 1, %540 ], [ 0, %1321 ], [ 0, %1303 ]
  ret i32 %.0

.lr.ph141.1:                                      ; preds = %.loopexit71
  call void @unroll_loop(i32 124)
  switch i32 -1, label %.loopexit1 [
    i32 58, label %75
    i32 63, label %80
    i32 117, label %85
    i32 86, label %1635
    i32 97, label %1617
    i32 101, label %1614
    i32 98, label %1609
    i32 112, label %1599
    i32 113, label %1598
    i32 99, label %1597
    i32 68, label %1596
    i32 104, label %1595
    i32 116, label %1594
    i32 49, label %1593
    i32 100, label %1469
    i32 109, label %1465
    i32 110, label %1442
    i32 105, label %1432
    i32 102, label %1425
    i32 107, label %1410
    i32 108, label %1397
    i32 77, label %1385
    i32 80, label %1375
    i32 120, label %1362
    i32 88, label %1361
    i32 121, label %1360
    i32 75, label %1359
    i32 115, label %1358
    i32 119, label %1354
    i32 114, label %484
    i32 48, label %1353
    i32 72, label %.loopexit13
    i32 67, label %1343
    i32 122, label %1340
  ]

; <label>:1340:                                   ; preds = %.lr.ph141.1
  %1341 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 40), align 8
  %1342 = icmp ne i32 %1341, 0
  br i1 %1342, label %507, label %.loopexit71.1

; <label>:1343:                                   ; preds = %.lr.ph141.1
  %1344 = load i8*, i8** @optarg, align 8
  %1345 = call i32 @checkbssids(i8* %1344)
  %1346 = icmp slt i32 %1345, 1
  br i1 %1346, label %493, label %1347

; <label>:1347:                                   ; preds = %1343
  %1348 = icmp eq i32 %1345, 1
  br i1 %1348, label %1351, label %1349

; <label>:1349:                                   ; preds = %1347
  %1350 = load i8*, i8** @optarg, align 8
  store i8* %1350, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 34), align 8
  br label %.loopexit71.1

; <label>:1351:                                   ; preds = %1347
  %1352 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.112, i64 0, i64 0))
  br label %.loopexit71.1

; <label>:1353:                                   ; preds = %.lr.ph141.1
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 27), align 4
  br label %.loopexit71.1

; <label>:1354:                                   ; preds = %.lr.ph141.1
  %1355 = load i8*, i8** @optarg, align 8
  %1356 = call i32 @set_dicts(i8* %1355)
  %1357 = icmp ne i32 %1356, 0
  br i1 %1357, label %479, label %.loopexit71.1

; <label>:1358:                                   ; preds = %.lr.ph141.1
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 26), align 8
  br label %.loopexit71.1

; <label>:1359:                                   ; preds = %.lr.ph141.1
  store i32 0, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 20), align 4
  br label %.loopexit71.1

; <label>:1360:                                   ; preds = %.lr.ph141.1
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 19), align 8
  br label %.loopexit71.1

; <label>:1361:                                   ; preds = %.lr.ph141.1
  store i32 0, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 18), align 4
  br label %.loopexit71.1

; <label>:1362:                                   ; preds = %.lr.ph141.1
  store i32 0, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 17), align 8
  %1363 = load i8*, i8** @optarg, align 8
  %1364 = icmp ne i8* %1363, null
  br i1 %1364, label %1365, label %.loopexit71.1

; <label>:1365:                                   ; preds = %1362
  %1366 = load i8*, i8** @optarg, align 8
  %1367 = call i32 (i8*, i8*, ...) @sscanf(i8* %1366, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 17)) #9
  %1368 = icmp ne i32 %1367, 1
  br i1 %1368, label %463, label %1369

; <label>:1369:                                   ; preds = %1365
  %1370 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 17), align 8
  %1371 = icmp slt i32 %1370, 0
  br i1 %1371, label %463, label %1372

; <label>:1372:                                   ; preds = %1369
  %1373 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 17), align 8
  %1374 = icmp sgt i32 %1373, 4
  br i1 %1374, label %463, label %.loopexit71.1

; <label>:1375:                                   ; preds = %.lr.ph141.1
  %1376 = load i8*, i8** @optarg, align 8
  %1377 = call i32 (i8*, i8*, ...) @sscanf(i8* %1376, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 39)) #9
  %1378 = icmp ne i32 %1377, 1
  br i1 %1378, label %443, label %1379

; <label>:1379:                                   ; preds = %1375
  %1380 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 39), align 4
  %1381 = icmp slt i32 %1380, 0
  br i1 %1381, label %443, label %1382

; <label>:1382:                                   ; preds = %1379
  %1383 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 39), align 4
  %1384 = icmp sgt i32 %1383, 2
  br i1 %1384, label %443, label %.loopexit71.1

; <label>:1385:                                   ; preds = %.lr.ph141.1
  %1386 = load i8*, i8** @optarg, align 8
  %1387 = call i32 (i8*, i8*, ...) @sscanf(i8* %1386, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 33)) #9
  %1388 = icmp ne i32 %1387, 1
  br i1 %1388, label %421, label %1389

; <label>:1389:                                   ; preds = %1385
  %1390 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 33), align 8
  %1391 = icmp slt i32 %1390, 1
  br i1 %1391, label %421, label %1392

; <label>:1392:                                   ; preds = %1389
  %1393 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 13), align 8
  %1394 = sub nsw i32 %1393, 1
  %1395 = sext i32 %1394 to i64
  %1396 = getelementptr inbounds [17 x i32], [17 x i32]* @K_COEFF, i64 0, i64 %1395
  store i32 0, i32* %1396, align 4
  br label %.loopexit71.1

; <label>:1397:                                   ; preds = %.lr.ph141.1
  %1398 = load i8*, i8** @optarg, align 8
  %1399 = call i64 @strlen(i8* %1398) #10
  %1400 = add i64 %1399, 1
  %1401 = call noalias i8* @calloc(i64 1, i64 %1400) #9, !track !221
  store i8* %1401, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 42), align 8
  %1402 = load i8*, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 42), align 8
  %1403 = icmp eq i8* %1402, null
  br i1 %1403, label %405, label %1404

; <label>:1404:                                   ; preds = %1397
  %1405 = load i8*, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 42), align 8
  %1406 = load i8*, i8** @optarg, align 8
  %1407 = load i8*, i8** @optarg, align 8
  %1408 = call i64 @strlen(i8* %1407) #10
  %1409 = call i8* @strncpy(i8* %1405, i8* %1406, i64 %1408) #9, !track !222
  br label %.loopexit71.1

; <label>:1410:                                   ; preds = %.lr.ph141.1
  %1411 = load i8*, i8** @optarg, align 8
  %1412 = call i32 (i8*, i8*, ...) @sscanf(i8* %1411, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 13)) #9
  %1413 = icmp ne i32 %1412, 1
  br i1 %1413, label %386, label %1414

; <label>:1414:                                   ; preds = %1410
  %1415 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 13), align 8
  %1416 = icmp slt i32 %1415, 1
  br i1 %1416, label %386, label %1417

; <label>:1417:                                   ; preds = %1414
  %1418 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 13), align 8
  %1419 = icmp sgt i32 %1418, 17
  br i1 %1419, label %386, label %1420

; <label>:1420:                                   ; preds = %1417
  %1421 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 13), align 8
  %1422 = sub nsw i32 %1421, 1
  %1423 = sext i32 %1422 to i64
  %1424 = getelementptr inbounds [17 x i32], [17 x i32]* @K_COEFF, i64 0, i64 %1423
  store i32 0, i32* %1424, align 4
  br label %.loopexit71.1

; <label>:1425:                                   ; preds = %.lr.ph141.1
  %1426 = load i8*, i8** @optarg, align 8
  %1427 = call i32 (i8*, i8*, ...) @sscanf(i8* %1426, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.103, i64 0, i64 0), float* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 12)) #9
  %1428 = icmp ne i32 %1427, 1
  br i1 %1428, label %369, label %1429

; <label>:1429:                                   ; preds = %1425
  %1430 = load float, float* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 12), align 4
  %1431 = fcmp olt float %1430, 1.000000e+00
  br i1 %1431, label %369, label %.loopexit71.1

; <label>:1432:                                   ; preds = %.lr.ph141.1
  %1433 = load i8*, i8** @optarg, align 8
  %1434 = call i32 (i8*, i8*, ...) @sscanf(i8* %1433, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 11)) #9
  %1435 = icmp ne i32 %1434, 1
  br i1 %1435, label %355, label %1436

; <label>:1436:                                   ; preds = %1432
  %1437 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 11), align 8
  %1438 = icmp slt i32 %1437, 1
  br i1 %1438, label %355, label %1439

; <label>:1439:                                   ; preds = %1436
  %1440 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 11), align 8
  %1441 = icmp sgt i32 %1440, 4
  br i1 %1441, label %355, label %.loopexit71.1

; <label>:1442:                                   ; preds = %.lr.ph141.1
  %1443 = load i8*, i8** @optarg, align 8
  %1444 = call i32 (i8*, i8*, ...) @sscanf(i8* %1443, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10)) #9
  %1445 = icmp ne i32 %1444, 1
  br i1 %1445, label %334, label %1446

; <label>:1446:                                   ; preds = %1442
  %1447 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %1448 = icmp ne i32 %1447, 64
  br i1 %1448, label %1449, label %1461

; <label>:1449:                                   ; preds = %1446
  %1450 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %1451 = icmp ne i32 %1450, 128
  br i1 %1451, label %1452, label %1461

; <label>:1452:                                   ; preds = %1449
  %1453 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %1454 = icmp ne i32 %1453, 152
  br i1 %1454, label %1455, label %1461

; <label>:1455:                                   ; preds = %1452
  %1456 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %1457 = icmp ne i32 %1456, 256
  br i1 %1457, label %1458, label %1461

; <label>:1458:                                   ; preds = %1455
  %1459 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %1460 = icmp ne i32 %1459, 512
  br i1 %1460, label %334, label %1461

; <label>:1461:                                   ; preds = %1458, %1455, %1452, %1449, %1446
  %1462 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %1463 = sdiv i32 %1462, 8
  %1464 = sub nsw i32 %1463, 3
  store i32 %1464, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  br label %.loopexit71.1

; <label>:1465:                                   ; preds = %.lr.ph141.1
  %1466 = load i8*, i8** @optarg, align 8
  %1467 = call i32 @getmac(i8* %1466, i32 1, i8* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 9, i64 0))
  %1468 = icmp ne i32 %1467, 0
  br i1 %1468, label %308, label %.loopexit71.1

; <label>:1469:                                   ; preds = %.lr.ph141.1
  store i32 0, i32* %27, align 4
  %1470 = load i8*, i8** @optarg, align 8
  %1471 = load i8, i8* %1470, align 1
  %1472 = sext i8 %1471 to i32
  %1473 = icmp ne i32 %1472, 0
  br i1 %1473, label %.lr.ph136.preheader.1, label %._crit_edge137.1

.lr.ph136.preheader.1:                            ; preds = %1469
  br label %.lr.ph136.1

.lr.ph136.1:                                      ; preds = %1520, %.lr.ph136.preheader.1
  %.02134.1 = phi i32 [ %.13.1, %1520 ], [ 0, %.lr.ph136.preheader.1 ]
  call void @unroll_loop(i32 125)
  %1474 = sext i32 %.02134.1 to i64
  %1475 = getelementptr inbounds i8, i8* %1470, i64 %1474
  %1476 = load i8, i8* %1475, align 1
  %1477 = sext i8 %1476 to i32
  %1478 = icmp eq i32 %1477, 120
  br i1 %1478, label %1479, label %1482

; <label>:1479:                                   ; preds = %.lr.ph136.1
  %1480 = sext i32 %.02134.1 to i64
  %1481 = getelementptr inbounds i8, i8* %1470, i64 %1480
  store i8 88, i8* %1481, align 1
  br label %1482

; <label>:1482:                                   ; preds = %1479, %.lr.ph136.1
  %1483 = sext i32 %.02134.1 to i64
  %1484 = getelementptr inbounds i8, i8* %1470, i64 %1483
  %1485 = load i8, i8* %1484, align 1
  %1486 = sext i8 %1485 to i32
  %1487 = icmp eq i32 %1486, 121
  br i1 %1487, label %1488, label %1491

; <label>:1488:                                   ; preds = %1482
  %1489 = sext i32 %.02134.1 to i64
  %1490 = getelementptr inbounds i8, i8* %1470, i64 %1489
  store i8 89, i8* %1490, align 1
  br label %1491

; <label>:1491:                                   ; preds = %1488, %1482
  %1492 = sext i32 %.02134.1 to i64
  %1493 = getelementptr inbounds i8, i8* %1470, i64 %1492
  %1494 = load i8, i8* %1493, align 1
  %1495 = sext i8 %1494 to i32
  %1496 = icmp eq i32 %1495, 45
  br i1 %1496, label %1518, label %1497

; <label>:1497:                                   ; preds = %1491
  %1498 = sext i32 %.02134.1 to i64
  %1499 = getelementptr inbounds i8, i8* %1470, i64 %1498
  %1500 = load i8, i8* %1499, align 1
  %1501 = sext i8 %1500 to i32
  %1502 = icmp eq i32 %1501, 58
  br i1 %1502, label %1518, label %1503

; <label>:1503:                                   ; preds = %1497
  %1504 = sext i32 %.02134.1 to i64
  %1505 = getelementptr inbounds i8, i8* %1470, i64 %1504
  %1506 = load i8, i8* %1505, align 1
  %1507 = sext i8 %1506 to i32
  %1508 = icmp eq i32 %1507, 32
  br i1 %1508, label %1518, label %1509

; <label>:1509:                                   ; preds = %1503
  %1510 = add nsw i32 %.02134.1, 1
  %1511 = sext i32 %.02134.1 to i64
  %1512 = getelementptr inbounds i8, i8* %1470, i64 %1511
  %1513 = load i8, i8* %1512, align 1
  %1514 = load i32, i32* %27, align 4
  %1515 = add nsw i32 %1514, 1
  store i32 %1515, i32* %27, align 4
  %1516 = sext i32 %1514 to i64
  %1517 = getelementptr inbounds i8, i8* %1470, i64 %1516
  store i8 %1513, i8* %1517, align 1
  br label %1520

; <label>:1518:                                   ; preds = %1503, %1497, %1491
  %1519 = add nsw i32 %.02134.1, 1
  br label %1520

; <label>:1520:                                   ; preds = %1518, %1509
  %.13.1 = phi i32 [ %1519, %1518 ], [ %1510, %1509 ]
  %1521 = sext i32 %.13.1 to i64
  %1522 = getelementptr inbounds i8, i8* %1470, i64 %1521
  %1523 = load i8, i8* %1522, align 1
  %1524 = sext i8 %1523 to i32
  %1525 = icmp ne i32 %1524, 0
  br i1 %1525, label %.lr.ph136.1, label %._crit_edge137.loopexit.1

._crit_edge137.loopexit.1:                        ; preds = %1520
  br label %._crit_edge137.1

._crit_edge137.1:                                 ; preds = %._crit_edge137.loopexit.1, %1469
  %1526 = load i32, i32* %27, align 4
  %1527 = sext i32 %1526 to i64
  %1528 = getelementptr inbounds i8, i8* %1470, i64 %1527
  store i8 0, i8* %1528, align 1
  %1529 = load i8, i8* %1470, align 1
  store i8 %1529, i8* %61, align 16
  %1530 = getelementptr inbounds i8, i8* %1470, i64 1
  %1531 = load i8, i8* %1530, align 1
  store i8 %1531, i8* %62, align 1
  store i8 0, i8* %63, align 2
  %scevgep45.1 = getelementptr i8, i8* %1470, i64 3
  br label %1532

; <label>:1532:                                   ; preds = %1590, %._crit_edge137.1
  %lsr.iv48.1 = phi i8* [ %scevgep49.1, %1590 ], [ %scevgep45.1, %._crit_edge137.1 ]
  %.127.1 = phi i32 [ 0, %._crit_edge137.1 ], [ %.329.1, %1590 ]
  %.24.1 = phi i32 [ 0, %._crit_edge137.1 ], [ %.46.1, %1590 ]
  call void @unroll_loop(i32 126)
  %1533 = call i32 (i8*, i8*, ...) @sscanf(i8* %64, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.72, i64 0, i64 0), i32* %27) #9
  %1534 = icmp eq i32 %1533, 1
  br i1 %1534, label %.critedge.1, label %1535

; <label>:1535:                                   ; preds = %1532
  %1536 = load i8, i8* %66, align 16
  %1537 = sext i8 %1536 to i32
  %1538 = icmp eq i32 %1537, 88
  br i1 %1538, label %1539, label %1543

; <label>:1539:                                   ; preds = %1535
  %1540 = load i8, i8* %69, align 1
  %1541 = sext i8 %1540 to i32
  %1542 = icmp eq i32 %1541, 88
  br i1 %1542, label %.critedge.1, label %1543

; <label>:1543:                                   ; preds = %1539, %1535
  %1544 = load i8, i8* %70, align 16
  %1545 = sext i8 %1544 to i32
  %1546 = icmp eq i32 %1545, 89
  %1547 = load i8, i8* %71, align 1
  %1548 = sext i8 %1547 to i32
  %1549 = icmp eq i32 %1548, 89
  %1550 = select i1 %1546, i1 %1549, i1 false
  br i1 %1550, label %.critedge.1, label %.loopexit71.loopexit.1

.critedge.1:                                      ; preds = %1543, %1539, %1532
  %1551 = load i8, i8* %65, align 16
  %1552 = sext i8 %1551 to i32
  %1553 = icmp eq i32 %1552, 88
  br i1 %1553, label %1554, label %1558

; <label>:1554:                                   ; preds = %.critedge.1
  %1555 = load i8, i8* %67, align 1
  %1556 = sext i8 %1555 to i32
  %1557 = icmp eq i32 %1556, 88
  br i1 %1557, label %1584, label %1558

; <label>:1558:                                   ; preds = %1554, %.critedge.1
  %1559 = load i8, i8* %68, align 16
  %1560 = sext i8 %1559 to i32
  %1561 = icmp eq i32 %1560, 89
  br i1 %1561, label %1562, label %1566

; <label>:1562:                                   ; preds = %1558
  %1563 = load i8, i8* %74, align 1
  %1564 = sext i8 %1563 to i32
  %1565 = icmp eq i32 %1564, 89
  br i1 %1565, label %1579, label %1566

; <label>:1566:                                   ; preds = %1562, %1558
  %1567 = load i32, i32* %27, align 4
  %1568 = icmp slt i32 %1567, 0
  %1569 = load i32, i32* %27, align 4
  %1570 = icmp sgt i32 %1569, 255
  %or.cond.1 = or i1 %1568, %1570
  br i1 %or.cond.1, label %.loopexit3, label %1571

; <label>:1571:                                   ; preds = %1566
  %1572 = load i32, i32* %27, align 4
  %1573 = trunc i32 %1572 to i8
  %1574 = sext i32 %.24.1 to i64
  %1575 = getelementptr inbounds [64 x i8], [64 x i8]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 7), i64 0, i64 %1574
  store i8 %1573, i8* %1575, align 1
  %1576 = add nsw i32 %.24.1, 1
  %1577 = sext i32 %.24.1 to i64
  %1578 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 8), i64 0, i64 %1577
  store i32 1, i32* %1578, align 4
  br label %1588

; <label>:1579:                                   ; preds = %1562
  %1580 = add nsw i32 %.24.1, 1
  %1581 = add nsw i32 %.127.1, 1
  %1582 = sext i32 %.127.1 to i64
  %1583 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 31), i64 0, i64 %1582
  store i32 %.24.1, i32* %1583, align 4
  br label %1588

; <label>:1584:                                   ; preds = %1554
  %1585 = add nsw i32 %.24.1, 1
  %1586 = sext i32 %.24.1 to i64
  %1587 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 8), i64 0, i64 %1586
  store i32 0, i32* %1587, align 4
  br label %1588

; <label>:1588:                                   ; preds = %1584, %1579, %1571
  %.329.1 = phi i32 [ %.127.1, %1584 ], [ %1581, %1579 ], [ %.127.1, %1571 ]
  %.46.1 = phi i32 [ %1585, %1584 ], [ %1580, %1579 ], [ %1576, %1571 ]
  %1589 = icmp sge i32 %.46.1, 64
  br i1 %1589, label %.loopexit71.loopexit.1, label %1590

; <label>:1590:                                   ; preds = %1588
  %scevgep50.1 = getelementptr i8, i8* %lsr.iv48.1, i64 -1
  %1591 = load i8, i8* %scevgep50.1, align 1
  store i8 %1591, i8* %72, align 16
  %1592 = load i8, i8* %lsr.iv48.1, align 1
  store i8 %1592, i8* %73, align 1
  %scevgep49.1 = getelementptr i8, i8* %lsr.iv48.1, i64 2
  br label %1532

.loopexit71.loopexit.1:                           ; preds = %1588, %1543
  %.531.ph.1 = phi i32 [ %.329.1, %1588 ], [ %.127.1, %1543 ]
  br label %.loopexit71.1

; <label>:1593:                                   ; preds = %.lr.ph141.1
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 41), align 4
  br label %.loopexit71.1

; <label>:1594:                                   ; preds = %.lr.ph141.1
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 16), align 4
  br label %.loopexit71.1

; <label>:1595:                                   ; preds = %.lr.ph141.1
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 14), align 4
  br label %.loopexit71.1

; <label>:1596:                                   ; preds = %.lr.ph141.1
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 38), align 8
  br label %.loopexit71.1

; <label>:1597:                                   ; preds = %.lr.ph141.1
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 15), align 8
  br label %.loopexit71.1

; <label>:1598:                                   ; preds = %.lr.ph141.1
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 6), align 8
  br label %.loopexit71.1

; <label>:1599:                                   ; preds = %.lr.ph141.1
  %1600 = load i8*, i8** @optarg, align 8
  %1601 = call i32 (i8*, i8*, ...) @sscanf(i8* %1600, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 5)) #9
  %1602 = icmp ne i32 %1601, 1
  br i1 %1602, label %160, label %1603

; <label>:1603:                                   ; preds = %1599
  %1604 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 5), align 4
  %1605 = icmp slt i32 %1604, 1
  br i1 %1605, label %160, label %1606

; <label>:1606:                                   ; preds = %1603
  %1607 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 5), align 4
  %1608 = icmp sgt i32 %1607, 128
  br i1 %1608, label %160, label %.loopexit71.1

; <label>:1609:                                   ; preds = %.lr.ph141.1
  %1610 = load i8*, i8** @optarg, align 8
  %1611 = call i32 @getmac(i8* %1610, i32 1, i8* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 4, i64 0))
  %1612 = icmp ne i32 %1611, 0
  br i1 %1612, label %142, label %1613

; <label>:1613:                                   ; preds = %1609
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 2), align 8
  br label %.loopexit71.1

; <label>:1614:                                   ; preds = %.lr.ph141.1
  call void @llvm.memset.p0i8.i64(i8* align 4 getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 3, i64 0), i8 0, i64 33, i1 false)
  %1615 = load i8*, i8** @optarg, align 8
  %1616 = call i8* @strncpy(i8* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 3, i64 0), i8* %1615, i64 32) #9, !track !220
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 1), align 4
  br label %.loopexit71.1

; <label>:1617:                                   ; preds = %.lr.ph141.1
  %1618 = load i8*, i8** @optarg, align 8
  %1619 = call i32 (i8*, i8*, ...) @sscanf(i8* %1618, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 0)) #9
  %1620 = load i8*, i8** @optarg, align 8
  %1621 = call i32 @strcasecmp(i8* %1620, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.94, i64 0, i64 0)) #10
  %1622 = icmp eq i32 %1621, 0
  br i1 %1622, label %1628, label %1623

; <label>:1623:                                   ; preds = %1617
  %1624 = load i8*, i8** @optarg, align 8
  %1625 = call i32 @strcasecmp(i8* %1624, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.95, i64 0, i64 0)) #10
  %1626 = icmp eq i32 %1625, 0
  br i1 %1626, label %1627, label %1629

; <label>:1627:                                   ; preds = %1623
  store i32 2, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 0), align 8
  br label %1629

; <label>:1628:                                   ; preds = %1617
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 0), align 8
  br label %1629

; <label>:1629:                                   ; preds = %1628, %1627, %1623
  %1630 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 0), align 8
  %1631 = icmp ne i32 %1630, 1
  br i1 %1631, label %1632, label %.loopexit71.1

; <label>:1632:                                   ; preds = %1629
  %1633 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 0), align 8
  %1634 = icmp ne i32 %1633, 2
  br i1 %1634, label %128, label %.loopexit71.1

; <label>:1635:                                   ; preds = %.lr.ph141.1
  %1636 = icmp ne i32 0, 0
  br i1 %1636, label %102, label %1637

; <label>:1637:                                   ; preds = %1635
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 40), align 8
  store i32 0, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 20), align 4
  br label %.loopexit71.1

.loopexit71.1:                                    ; preds = %1637, %1632, %1629, %1614, %1613, %1606, %1598, %1597, %1596, %1595, %1594, %1593, %.loopexit71.loopexit.1, %1465, %1461, %1439, %1429, %1420, %1404, %1392, %1382, %1372, %1362, %1361, %1360, %1359, %1358, %1354, %1353, %1351, %1349, %1340
  %.134.1 = phi i32 [ 0, %1353 ], [ 0, %1358 ], [ 0, %1359 ], [ 0, %1360 ], [ 0, %1361 ], [ 0, %1392 ], [ 0, %1404 ], [ 0, %1420 ], [ 0, %1461 ], [ 0, %1593 ], [ 0, %1594 ], [ 0, %1595 ], [ 0, %1596 ], [ 0, %1597 ], [ 0, %1598 ], [ 0, %1613 ], [ 0, %1614 ], [ 0, %1637 ], [ 0, %1632 ], [ 0, %1629 ], [ 0, %1606 ], [ 0, %1465 ], [ 0, %1439 ], [ 0, %1429 ], [ 0, %1382 ], [ 0, %1372 ], [ 0, %1362 ], [ 0, %1354 ], [ 0, %1349 ], [ 0, %1351 ], [ 1, %1340 ], [ 0, %.loopexit71.loopexit.1 ]
  %.531.1 = phi i32 [ 0, %1353 ], [ 0, %1358 ], [ 0, %1359 ], [ 0, %1360 ], [ 0, %1361 ], [ 0, %1392 ], [ 0, %1404 ], [ 0, %1420 ], [ 0, %1461 ], [ 0, %1593 ], [ 0, %1594 ], [ 0, %1595 ], [ 0, %1596 ], [ 0, %1597 ], [ 0, %1598 ], [ 0, %1613 ], [ 0, %1614 ], [ 0, %1637 ], [ 0, %1632 ], [ 0, %1629 ], [ 0, %1606 ], [ 0, %1465 ], [ 0, %1439 ], [ 0, %1429 ], [ 0, %1382 ], [ 0, %1372 ], [ 0, %1362 ], [ 0, %1354 ], [ 0, %1349 ], [ 0, %1351 ], [ 0, %1340 ], [ %.531.ph.1, %.loopexit71.loopexit.1 ]
  call void @__loop_iteration_test___0()
  store i32 0, i32* %30, align 4
  %1638 = call i32 @getopt_long(i32 4, i8** %25, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.86, i64 0, i64 0), %struct.option* getelementptr inbounds ([10 x %struct.option], [10 x %struct.option]* @main.long_options, i64 0, i64 0), i32* %30) #9, !track_argc !219
  %1639 = icmp slt i32 %1638, 0
  br i1 %1639, label %._crit_edge142.loopexit, label %.lr.ph141.2

.lr.ph141.2:                                      ; preds = %.loopexit71.1
  call void @unroll_loop(i32 124)
  switch i32 %1638, label %.loopexit1 [
    i32 58, label %75
    i32 63, label %80
    i32 117, label %85
    i32 86, label %1935
    i32 97, label %1917
    i32 101, label %1914
    i32 98, label %1909
    i32 112, label %1899
    i32 113, label %1898
    i32 99, label %1897
    i32 68, label %1896
    i32 104, label %1895
    i32 116, label %1894
    i32 49, label %1893
    i32 100, label %1769
    i32 109, label %1765
    i32 110, label %1742
    i32 105, label %1732
    i32 102, label %1725
    i32 107, label %1710
    i32 108, label %1697
    i32 77, label %1685
    i32 80, label %1675
    i32 120, label %1662
    i32 88, label %1661
    i32 121, label %1660
    i32 75, label %1659
    i32 115, label %1658
    i32 119, label %1654
    i32 114, label %484
    i32 48, label %1653
    i32 72, label %.loopexit13
    i32 67, label %1643
    i32 122, label %1640
  ]

; <label>:1640:                                   ; preds = %.lr.ph141.2
  %1641 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 40), align 8
  %1642 = icmp ne i32 %1641, 0
  br i1 %1642, label %507, label %.loopexit71.2

; <label>:1643:                                   ; preds = %.lr.ph141.2
  %1644 = load i8*, i8** @optarg, align 8
  %1645 = call i32 @checkbssids(i8* %1644)
  %1646 = icmp slt i32 %1645, 1
  br i1 %1646, label %493, label %1647

; <label>:1647:                                   ; preds = %1643
  %1648 = icmp eq i32 %1645, 1
  br i1 %1648, label %1651, label %1649

; <label>:1649:                                   ; preds = %1647
  %1650 = load i8*, i8** @optarg, align 8
  store i8* %1650, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 34), align 8
  br label %.loopexit71.2

; <label>:1651:                                   ; preds = %1647
  %1652 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.112, i64 0, i64 0))
  br label %.loopexit71.2

; <label>:1653:                                   ; preds = %.lr.ph141.2
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 27), align 4
  br label %.loopexit71.2

; <label>:1654:                                   ; preds = %.lr.ph141.2
  %1655 = load i8*, i8** @optarg, align 8
  %1656 = call i32 @set_dicts(i8* %1655)
  %1657 = icmp ne i32 %1656, 0
  br i1 %1657, label %479, label %.loopexit71.2

; <label>:1658:                                   ; preds = %.lr.ph141.2
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 26), align 8
  br label %.loopexit71.2

; <label>:1659:                                   ; preds = %.lr.ph141.2
  store i32 0, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 20), align 4
  br label %.loopexit71.2

; <label>:1660:                                   ; preds = %.lr.ph141.2
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 19), align 8
  br label %.loopexit71.2

; <label>:1661:                                   ; preds = %.lr.ph141.2
  store i32 0, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 18), align 4
  br label %.loopexit71.2

; <label>:1662:                                   ; preds = %.lr.ph141.2
  store i32 0, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 17), align 8
  %1663 = load i8*, i8** @optarg, align 8
  %1664 = icmp ne i8* %1663, null
  br i1 %1664, label %1665, label %.loopexit71.2

; <label>:1665:                                   ; preds = %1662
  %1666 = load i8*, i8** @optarg, align 8
  %1667 = call i32 (i8*, i8*, ...) @sscanf(i8* %1666, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 17)) #9
  %1668 = icmp ne i32 %1667, 1
  br i1 %1668, label %463, label %1669

; <label>:1669:                                   ; preds = %1665
  %1670 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 17), align 8
  %1671 = icmp slt i32 %1670, 0
  br i1 %1671, label %463, label %1672

; <label>:1672:                                   ; preds = %1669
  %1673 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 17), align 8
  %1674 = icmp sgt i32 %1673, 4
  br i1 %1674, label %463, label %.loopexit71.2

; <label>:1675:                                   ; preds = %.lr.ph141.2
  %1676 = load i8*, i8** @optarg, align 8
  %1677 = call i32 (i8*, i8*, ...) @sscanf(i8* %1676, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 39)) #9
  %1678 = icmp ne i32 %1677, 1
  br i1 %1678, label %443, label %1679

; <label>:1679:                                   ; preds = %1675
  %1680 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 39), align 4
  %1681 = icmp slt i32 %1680, 0
  br i1 %1681, label %443, label %1682

; <label>:1682:                                   ; preds = %1679
  %1683 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 39), align 4
  %1684 = icmp sgt i32 %1683, 2
  br i1 %1684, label %443, label %.loopexit71.2

; <label>:1685:                                   ; preds = %.lr.ph141.2
  %1686 = load i8*, i8** @optarg, align 8
  %1687 = call i32 (i8*, i8*, ...) @sscanf(i8* %1686, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 33)) #9
  %1688 = icmp ne i32 %1687, 1
  br i1 %1688, label %421, label %1689

; <label>:1689:                                   ; preds = %1685
  %1690 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 33), align 8
  %1691 = icmp slt i32 %1690, 1
  br i1 %1691, label %421, label %1692

; <label>:1692:                                   ; preds = %1689
  %1693 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 13), align 8
  %1694 = sub nsw i32 %1693, 1
  %1695 = sext i32 %1694 to i64
  %1696 = getelementptr inbounds [17 x i32], [17 x i32]* @K_COEFF, i64 0, i64 %1695
  store i32 0, i32* %1696, align 4
  br label %.loopexit71.2

; <label>:1697:                                   ; preds = %.lr.ph141.2
  %1698 = load i8*, i8** @optarg, align 8
  %1699 = call i64 @strlen(i8* %1698) #10
  %1700 = add i64 %1699, 1
  %1701 = call noalias i8* @calloc(i64 1, i64 %1700) #9, !track !221
  store i8* %1701, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 42), align 8
  %1702 = load i8*, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 42), align 8
  %1703 = icmp eq i8* %1702, null
  br i1 %1703, label %405, label %1704

; <label>:1704:                                   ; preds = %1697
  %1705 = load i8*, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 42), align 8
  %1706 = load i8*, i8** @optarg, align 8
  %1707 = load i8*, i8** @optarg, align 8
  %1708 = call i64 @strlen(i8* %1707) #10
  %1709 = call i8* @strncpy(i8* %1705, i8* %1706, i64 %1708) #9, !track !222
  br label %.loopexit71.2

; <label>:1710:                                   ; preds = %.lr.ph141.2
  %1711 = load i8*, i8** @optarg, align 8
  %1712 = call i32 (i8*, i8*, ...) @sscanf(i8* %1711, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 13)) #9
  %1713 = icmp ne i32 %1712, 1
  br i1 %1713, label %386, label %1714

; <label>:1714:                                   ; preds = %1710
  %1715 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 13), align 8
  %1716 = icmp slt i32 %1715, 1
  br i1 %1716, label %386, label %1717

; <label>:1717:                                   ; preds = %1714
  %1718 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 13), align 8
  %1719 = icmp sgt i32 %1718, 17
  br i1 %1719, label %386, label %1720

; <label>:1720:                                   ; preds = %1717
  %1721 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 13), align 8
  %1722 = sub nsw i32 %1721, 1
  %1723 = sext i32 %1722 to i64
  %1724 = getelementptr inbounds [17 x i32], [17 x i32]* @K_COEFF, i64 0, i64 %1723
  store i32 0, i32* %1724, align 4
  br label %.loopexit71.2

; <label>:1725:                                   ; preds = %.lr.ph141.2
  %1726 = load i8*, i8** @optarg, align 8
  %1727 = call i32 (i8*, i8*, ...) @sscanf(i8* %1726, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.103, i64 0, i64 0), float* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 12)) #9
  %1728 = icmp ne i32 %1727, 1
  br i1 %1728, label %369, label %1729

; <label>:1729:                                   ; preds = %1725
  %1730 = load float, float* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 12), align 4
  %1731 = fcmp olt float %1730, 1.000000e+00
  br i1 %1731, label %369, label %.loopexit71.2

; <label>:1732:                                   ; preds = %.lr.ph141.2
  %1733 = load i8*, i8** @optarg, align 8
  %1734 = call i32 (i8*, i8*, ...) @sscanf(i8* %1733, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 11)) #9
  %1735 = icmp ne i32 %1734, 1
  br i1 %1735, label %355, label %1736

; <label>:1736:                                   ; preds = %1732
  %1737 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 11), align 8
  %1738 = icmp slt i32 %1737, 1
  br i1 %1738, label %355, label %1739

; <label>:1739:                                   ; preds = %1736
  %1740 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 11), align 8
  %1741 = icmp sgt i32 %1740, 4
  br i1 %1741, label %355, label %.loopexit71.2

; <label>:1742:                                   ; preds = %.lr.ph141.2
  %1743 = load i8*, i8** @optarg, align 8
  %1744 = call i32 (i8*, i8*, ...) @sscanf(i8* %1743, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10)) #9
  %1745 = icmp ne i32 %1744, 1
  br i1 %1745, label %334, label %1746

; <label>:1746:                                   ; preds = %1742
  %1747 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %1748 = icmp ne i32 %1747, 64
  br i1 %1748, label %1749, label %1761

; <label>:1749:                                   ; preds = %1746
  %1750 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %1751 = icmp ne i32 %1750, 128
  br i1 %1751, label %1752, label %1761

; <label>:1752:                                   ; preds = %1749
  %1753 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %1754 = icmp ne i32 %1753, 152
  br i1 %1754, label %1755, label %1761

; <label>:1755:                                   ; preds = %1752
  %1756 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %1757 = icmp ne i32 %1756, 256
  br i1 %1757, label %1758, label %1761

; <label>:1758:                                   ; preds = %1755
  %1759 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %1760 = icmp ne i32 %1759, 512
  br i1 %1760, label %334, label %1761

; <label>:1761:                                   ; preds = %1758, %1755, %1752, %1749, %1746
  %1762 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %1763 = sdiv i32 %1762, 8
  %1764 = sub nsw i32 %1763, 3
  store i32 %1764, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  br label %.loopexit71.2

; <label>:1765:                                   ; preds = %.lr.ph141.2
  %1766 = load i8*, i8** @optarg, align 8
  %1767 = call i32 @getmac(i8* %1766, i32 1, i8* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 9, i64 0))
  %1768 = icmp ne i32 %1767, 0
  br i1 %1768, label %308, label %.loopexit71.2

; <label>:1769:                                   ; preds = %.lr.ph141.2
  store i32 0, i32* %27, align 4
  %1770 = load i8*, i8** @optarg, align 8
  %1771 = load i8, i8* %1770, align 1
  %1772 = sext i8 %1771 to i32
  %1773 = icmp ne i32 %1772, 0
  br i1 %1773, label %.lr.ph136.preheader.2, label %._crit_edge137.2

.lr.ph136.preheader.2:                            ; preds = %1769
  br label %.lr.ph136.2

.lr.ph136.2:                                      ; preds = %1820, %.lr.ph136.preheader.2
  %.02134.2 = phi i32 [ %.13.2, %1820 ], [ 0, %.lr.ph136.preheader.2 ]
  call void @unroll_loop(i32 125)
  %1774 = sext i32 %.02134.2 to i64
  %1775 = getelementptr inbounds i8, i8* %1770, i64 %1774
  %1776 = load i8, i8* %1775, align 1
  %1777 = sext i8 %1776 to i32
  %1778 = icmp eq i32 %1777, 120
  br i1 %1778, label %1779, label %1782

; <label>:1779:                                   ; preds = %.lr.ph136.2
  %1780 = sext i32 %.02134.2 to i64
  %1781 = getelementptr inbounds i8, i8* %1770, i64 %1780
  store i8 88, i8* %1781, align 1
  br label %1782

; <label>:1782:                                   ; preds = %1779, %.lr.ph136.2
  %1783 = sext i32 %.02134.2 to i64
  %1784 = getelementptr inbounds i8, i8* %1770, i64 %1783
  %1785 = load i8, i8* %1784, align 1
  %1786 = sext i8 %1785 to i32
  %1787 = icmp eq i32 %1786, 121
  br i1 %1787, label %1788, label %1791

; <label>:1788:                                   ; preds = %1782
  %1789 = sext i32 %.02134.2 to i64
  %1790 = getelementptr inbounds i8, i8* %1770, i64 %1789
  store i8 89, i8* %1790, align 1
  br label %1791

; <label>:1791:                                   ; preds = %1788, %1782
  %1792 = sext i32 %.02134.2 to i64
  %1793 = getelementptr inbounds i8, i8* %1770, i64 %1792
  %1794 = load i8, i8* %1793, align 1
  %1795 = sext i8 %1794 to i32
  %1796 = icmp eq i32 %1795, 45
  br i1 %1796, label %1818, label %1797

; <label>:1797:                                   ; preds = %1791
  %1798 = sext i32 %.02134.2 to i64
  %1799 = getelementptr inbounds i8, i8* %1770, i64 %1798
  %1800 = load i8, i8* %1799, align 1
  %1801 = sext i8 %1800 to i32
  %1802 = icmp eq i32 %1801, 58
  br i1 %1802, label %1818, label %1803

; <label>:1803:                                   ; preds = %1797
  %1804 = sext i32 %.02134.2 to i64
  %1805 = getelementptr inbounds i8, i8* %1770, i64 %1804
  %1806 = load i8, i8* %1805, align 1
  %1807 = sext i8 %1806 to i32
  %1808 = icmp eq i32 %1807, 32
  br i1 %1808, label %1818, label %1809

; <label>:1809:                                   ; preds = %1803
  %1810 = add nsw i32 %.02134.2, 1
  %1811 = sext i32 %.02134.2 to i64
  %1812 = getelementptr inbounds i8, i8* %1770, i64 %1811
  %1813 = load i8, i8* %1812, align 1
  %1814 = load i32, i32* %27, align 4
  %1815 = add nsw i32 %1814, 1
  store i32 %1815, i32* %27, align 4
  %1816 = sext i32 %1814 to i64
  %1817 = getelementptr inbounds i8, i8* %1770, i64 %1816
  store i8 %1813, i8* %1817, align 1
  br label %1820

; <label>:1818:                                   ; preds = %1803, %1797, %1791
  %1819 = add nsw i32 %.02134.2, 1
  br label %1820

; <label>:1820:                                   ; preds = %1818, %1809
  %.13.2 = phi i32 [ %1819, %1818 ], [ %1810, %1809 ]
  %1821 = sext i32 %.13.2 to i64
  %1822 = getelementptr inbounds i8, i8* %1770, i64 %1821
  %1823 = load i8, i8* %1822, align 1
  %1824 = sext i8 %1823 to i32
  %1825 = icmp ne i32 %1824, 0
  br i1 %1825, label %.lr.ph136.2, label %._crit_edge137.loopexit.2

._crit_edge137.loopexit.2:                        ; preds = %1820
  br label %._crit_edge137.2

._crit_edge137.2:                                 ; preds = %._crit_edge137.loopexit.2, %1769
  %1826 = load i32, i32* %27, align 4
  %1827 = sext i32 %1826 to i64
  %1828 = getelementptr inbounds i8, i8* %1770, i64 %1827
  store i8 0, i8* %1828, align 1
  %1829 = load i8, i8* %1770, align 1
  store i8 %1829, i8* %61, align 16
  %1830 = getelementptr inbounds i8, i8* %1770, i64 1
  %1831 = load i8, i8* %1830, align 1
  store i8 %1831, i8* %62, align 1
  store i8 0, i8* %63, align 2
  %scevgep45.2 = getelementptr i8, i8* %1770, i64 3
  br label %1832

; <label>:1832:                                   ; preds = %1890, %._crit_edge137.2
  %lsr.iv48.2 = phi i8* [ %scevgep49.2, %1890 ], [ %scevgep45.2, %._crit_edge137.2 ]
  %.127.2 = phi i32 [ 0, %._crit_edge137.2 ], [ %.329.2, %1890 ]
  %.24.2 = phi i32 [ 0, %._crit_edge137.2 ], [ %.46.2, %1890 ]
  call void @unroll_loop(i32 126)
  %1833 = call i32 (i8*, i8*, ...) @sscanf(i8* %64, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.72, i64 0, i64 0), i32* %27) #9
  %1834 = icmp eq i32 %1833, 1
  br i1 %1834, label %.critedge.2, label %1835

; <label>:1835:                                   ; preds = %1832
  %1836 = load i8, i8* %66, align 16
  %1837 = sext i8 %1836 to i32
  %1838 = icmp eq i32 %1837, 88
  br i1 %1838, label %1839, label %1843

; <label>:1839:                                   ; preds = %1835
  %1840 = load i8, i8* %69, align 1
  %1841 = sext i8 %1840 to i32
  %1842 = icmp eq i32 %1841, 88
  br i1 %1842, label %.critedge.2, label %1843

; <label>:1843:                                   ; preds = %1839, %1835
  %1844 = load i8, i8* %70, align 16
  %1845 = sext i8 %1844 to i32
  %1846 = icmp eq i32 %1845, 89
  %1847 = load i8, i8* %71, align 1
  %1848 = sext i8 %1847 to i32
  %1849 = icmp eq i32 %1848, 89
  %1850 = select i1 %1846, i1 %1849, i1 false
  br i1 %1850, label %.critedge.2, label %.loopexit71.loopexit.2

.critedge.2:                                      ; preds = %1843, %1839, %1832
  %1851 = load i8, i8* %65, align 16
  %1852 = sext i8 %1851 to i32
  %1853 = icmp eq i32 %1852, 88
  br i1 %1853, label %1854, label %1858

; <label>:1854:                                   ; preds = %.critedge.2
  %1855 = load i8, i8* %67, align 1
  %1856 = sext i8 %1855 to i32
  %1857 = icmp eq i32 %1856, 88
  br i1 %1857, label %1884, label %1858

; <label>:1858:                                   ; preds = %1854, %.critedge.2
  %1859 = load i8, i8* %68, align 16
  %1860 = sext i8 %1859 to i32
  %1861 = icmp eq i32 %1860, 89
  br i1 %1861, label %1862, label %1866

; <label>:1862:                                   ; preds = %1858
  %1863 = load i8, i8* %74, align 1
  %1864 = sext i8 %1863 to i32
  %1865 = icmp eq i32 %1864, 89
  br i1 %1865, label %1879, label %1866

; <label>:1866:                                   ; preds = %1862, %1858
  %1867 = load i32, i32* %27, align 4
  %1868 = icmp slt i32 %1867, 0
  %1869 = load i32, i32* %27, align 4
  %1870 = icmp sgt i32 %1869, 255
  %or.cond.2 = or i1 %1868, %1870
  br i1 %or.cond.2, label %.loopexit4, label %1871

; <label>:1871:                                   ; preds = %1866
  %1872 = load i32, i32* %27, align 4
  %1873 = trunc i32 %1872 to i8
  %1874 = sext i32 %.24.2 to i64
  %1875 = getelementptr inbounds [64 x i8], [64 x i8]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 7), i64 0, i64 %1874
  store i8 %1873, i8* %1875, align 1
  %1876 = add nsw i32 %.24.2, 1
  %1877 = sext i32 %.24.2 to i64
  %1878 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 8), i64 0, i64 %1877
  store i32 1, i32* %1878, align 4
  br label %1888

; <label>:1879:                                   ; preds = %1862
  %1880 = add nsw i32 %.24.2, 1
  %1881 = add nsw i32 %.127.2, 1
  %1882 = sext i32 %.127.2 to i64
  %1883 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 31), i64 0, i64 %1882
  store i32 %.24.2, i32* %1883, align 4
  br label %1888

; <label>:1884:                                   ; preds = %1854
  %1885 = add nsw i32 %.24.2, 1
  %1886 = sext i32 %.24.2 to i64
  %1887 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 8), i64 0, i64 %1886
  store i32 0, i32* %1887, align 4
  br label %1888

; <label>:1888:                                   ; preds = %1884, %1879, %1871
  %.329.2 = phi i32 [ %.127.2, %1884 ], [ %1881, %1879 ], [ %.127.2, %1871 ]
  %.46.2 = phi i32 [ %1885, %1884 ], [ %1880, %1879 ], [ %1876, %1871 ]
  %1889 = icmp sge i32 %.46.2, 64
  br i1 %1889, label %.loopexit71.loopexit.2, label %1890

; <label>:1890:                                   ; preds = %1888
  %scevgep50.2 = getelementptr i8, i8* %lsr.iv48.2, i64 -1
  %1891 = load i8, i8* %scevgep50.2, align 1
  store i8 %1891, i8* %72, align 16
  %1892 = load i8, i8* %lsr.iv48.2, align 1
  store i8 %1892, i8* %73, align 1
  %scevgep49.2 = getelementptr i8, i8* %lsr.iv48.2, i64 2
  br label %1832

.loopexit71.loopexit.2:                           ; preds = %1888, %1843
  %.531.ph.2 = phi i32 [ %.329.2, %1888 ], [ %.127.2, %1843 ]
  br label %.loopexit71.2

; <label>:1893:                                   ; preds = %.lr.ph141.2
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 41), align 4
  br label %.loopexit71.2

; <label>:1894:                                   ; preds = %.lr.ph141.2
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 16), align 4
  br label %.loopexit71.2

; <label>:1895:                                   ; preds = %.lr.ph141.2
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 14), align 4
  br label %.loopexit71.2

; <label>:1896:                                   ; preds = %.lr.ph141.2
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 38), align 8
  br label %.loopexit71.2

; <label>:1897:                                   ; preds = %.lr.ph141.2
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 15), align 8
  br label %.loopexit71.2

; <label>:1898:                                   ; preds = %.lr.ph141.2
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 6), align 8
  br label %.loopexit71.2

; <label>:1899:                                   ; preds = %.lr.ph141.2
  %1900 = load i8*, i8** @optarg, align 8
  %1901 = call i32 (i8*, i8*, ...) @sscanf(i8* %1900, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 5)) #9
  %1902 = icmp ne i32 %1901, 1
  br i1 %1902, label %160, label %1903

; <label>:1903:                                   ; preds = %1899
  %1904 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 5), align 4
  %1905 = icmp slt i32 %1904, 1
  br i1 %1905, label %160, label %1906

; <label>:1906:                                   ; preds = %1903
  %1907 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 5), align 4
  %1908 = icmp sgt i32 %1907, 128
  br i1 %1908, label %160, label %.loopexit71.2

; <label>:1909:                                   ; preds = %.lr.ph141.2
  %1910 = load i8*, i8** @optarg, align 8
  %1911 = call i32 @getmac(i8* %1910, i32 1, i8* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 4, i64 0))
  %1912 = icmp ne i32 %1911, 0
  br i1 %1912, label %142, label %1913

; <label>:1913:                                   ; preds = %1909
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 2), align 8
  br label %.loopexit71.2

; <label>:1914:                                   ; preds = %.lr.ph141.2
  call void @llvm.memset.p0i8.i64(i8* align 4 getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 3, i64 0), i8 0, i64 33, i1 false)
  %1915 = load i8*, i8** @optarg, align 8
  %1916 = call i8* @strncpy(i8* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 3, i64 0), i8* %1915, i64 32) #9, !track !220
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 1), align 4
  br label %.loopexit71.2

; <label>:1917:                                   ; preds = %.lr.ph141.2
  %1918 = load i8*, i8** @optarg, align 8
  %1919 = call i32 (i8*, i8*, ...) @sscanf(i8* %1918, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 0)) #9
  %1920 = load i8*, i8** @optarg, align 8
  %1921 = call i32 @strcasecmp(i8* %1920, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.94, i64 0, i64 0)) #10
  %1922 = icmp eq i32 %1921, 0
  br i1 %1922, label %1928, label %1923

; <label>:1923:                                   ; preds = %1917
  %1924 = load i8*, i8** @optarg, align 8
  %1925 = call i32 @strcasecmp(i8* %1924, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.95, i64 0, i64 0)) #10
  %1926 = icmp eq i32 %1925, 0
  br i1 %1926, label %1927, label %1929

; <label>:1927:                                   ; preds = %1923
  store i32 2, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 0), align 8
  br label %1929

; <label>:1928:                                   ; preds = %1917
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 0), align 8
  br label %1929

; <label>:1929:                                   ; preds = %1928, %1927, %1923
  %1930 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 0), align 8
  %1931 = icmp ne i32 %1930, 1
  br i1 %1931, label %1932, label %.loopexit71.2

; <label>:1932:                                   ; preds = %1929
  %1933 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 0), align 8
  %1934 = icmp ne i32 %1933, 2
  br i1 %1934, label %128, label %.loopexit71.2

; <label>:1935:                                   ; preds = %.lr.ph141.2
  %1936 = icmp ne i32 %.134.1, 0
  br i1 %1936, label %102, label %1937

; <label>:1937:                                   ; preds = %1935
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 40), align 8
  store i32 0, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 20), align 4
  br label %.loopexit71.2

.loopexit71.2:                                    ; preds = %1937, %1932, %1929, %1914, %1913, %1906, %1898, %1897, %1896, %1895, %1894, %1893, %.loopexit71.loopexit.2, %1765, %1761, %1739, %1729, %1720, %1704, %1692, %1682, %1672, %1662, %1661, %1660, %1659, %1658, %1654, %1653, %1651, %1649, %1640
  %.134.2 = phi i32 [ %.134.1, %1653 ], [ %.134.1, %1658 ], [ %.134.1, %1659 ], [ %.134.1, %1660 ], [ %.134.1, %1661 ], [ %.134.1, %1692 ], [ %.134.1, %1704 ], [ %.134.1, %1720 ], [ %.134.1, %1761 ], [ %.134.1, %1893 ], [ %.134.1, %1894 ], [ %.134.1, %1895 ], [ %.134.1, %1896 ], [ %.134.1, %1897 ], [ %.134.1, %1898 ], [ %.134.1, %1913 ], [ %.134.1, %1914 ], [ %.134.1, %1937 ], [ %.134.1, %1932 ], [ %.134.1, %1929 ], [ %.134.1, %1906 ], [ %.134.1, %1765 ], [ %.134.1, %1739 ], [ %.134.1, %1729 ], [ %.134.1, %1682 ], [ %.134.1, %1672 ], [ %.134.1, %1662 ], [ %.134.1, %1654 ], [ %.134.1, %1649 ], [ %.134.1, %1651 ], [ 1, %1640 ], [ %.134.1, %.loopexit71.loopexit.2 ]
  %.531.2 = phi i32 [ %.531.1, %1653 ], [ %.531.1, %1658 ], [ %.531.1, %1659 ], [ %.531.1, %1660 ], [ %.531.1, %1661 ], [ %.531.1, %1692 ], [ %.531.1, %1704 ], [ %.531.1, %1720 ], [ %.531.1, %1761 ], [ %.531.1, %1893 ], [ %.531.1, %1894 ], [ %.531.1, %1895 ], [ %.531.1, %1896 ], [ %.531.1, %1897 ], [ %.531.1, %1898 ], [ %.531.1, %1913 ], [ %.531.1, %1914 ], [ %.531.1, %1937 ], [ %.531.1, %1932 ], [ %.531.1, %1929 ], [ %.531.1, %1906 ], [ %.531.1, %1765 ], [ %.531.1, %1739 ], [ %.531.1, %1729 ], [ %.531.1, %1682 ], [ %.531.1, %1672 ], [ %.531.1, %1662 ], [ %.531.1, %1654 ], [ %.531.1, %1649 ], [ %.531.1, %1651 ], [ %.531.1, %1640 ], [ %.531.ph.2, %.loopexit71.loopexit.2 ]
  call void @__loop_iteration_test___0()
  store i32 0, i32* %30, align 4
  %1938 = call i32 @getopt_long(i32 4, i8** %25, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.86, i64 0, i64 0), %struct.option* getelementptr inbounds ([10 x %struct.option], [10 x %struct.option]* @main.long_options, i64 0, i64 0), i32* %30) #9, !track_argc !219
  %1939 = icmp slt i32 %1938, 0
  br i1 %1939, label %._crit_edge142.loopexit, label %.lr.ph141.3

.lr.ph141.3:                                      ; preds = %.loopexit71.2
  call void @unroll_loop(i32 124)
  switch i32 %1938, label %.loopexit1 [
    i32 58, label %75
    i32 63, label %80
    i32 117, label %85
    i32 86, label %2235
    i32 97, label %2217
    i32 101, label %2214
    i32 98, label %2209
    i32 112, label %2199
    i32 113, label %2198
    i32 99, label %2197
    i32 68, label %2196
    i32 104, label %2195
    i32 116, label %2194
    i32 49, label %2193
    i32 100, label %2069
    i32 109, label %2065
    i32 110, label %2042
    i32 105, label %2032
    i32 102, label %2025
    i32 107, label %2010
    i32 108, label %1997
    i32 77, label %1985
    i32 80, label %1975
    i32 120, label %1962
    i32 88, label %1961
    i32 121, label %1960
    i32 75, label %1959
    i32 115, label %1958
    i32 119, label %1954
    i32 114, label %484
    i32 48, label %1953
    i32 72, label %.loopexit13
    i32 67, label %1943
    i32 122, label %1940
  ]

; <label>:1940:                                   ; preds = %.lr.ph141.3
  %1941 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 40), align 8
  %1942 = icmp ne i32 %1941, 0
  br i1 %1942, label %507, label %.loopexit71.3

; <label>:1943:                                   ; preds = %.lr.ph141.3
  %1944 = load i8*, i8** @optarg, align 8
  %1945 = call i32 @checkbssids(i8* %1944)
  %1946 = icmp slt i32 %1945, 1
  br i1 %1946, label %493, label %1947

; <label>:1947:                                   ; preds = %1943
  %1948 = icmp eq i32 %1945, 1
  br i1 %1948, label %1951, label %1949

; <label>:1949:                                   ; preds = %1947
  %1950 = load i8*, i8** @optarg, align 8
  store i8* %1950, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 34), align 8
  br label %.loopexit71.3

; <label>:1951:                                   ; preds = %1947
  %1952 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.112, i64 0, i64 0))
  br label %.loopexit71.3

; <label>:1953:                                   ; preds = %.lr.ph141.3
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 27), align 4
  br label %.loopexit71.3

; <label>:1954:                                   ; preds = %.lr.ph141.3
  %1955 = load i8*, i8** @optarg, align 8
  %1956 = call i32 @set_dicts(i8* %1955)
  %1957 = icmp ne i32 %1956, 0
  br i1 %1957, label %479, label %.loopexit71.3

; <label>:1958:                                   ; preds = %.lr.ph141.3
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 26), align 8
  br label %.loopexit71.3

; <label>:1959:                                   ; preds = %.lr.ph141.3
  store i32 0, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 20), align 4
  br label %.loopexit71.3

; <label>:1960:                                   ; preds = %.lr.ph141.3
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 19), align 8
  br label %.loopexit71.3

; <label>:1961:                                   ; preds = %.lr.ph141.3
  store i32 0, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 18), align 4
  br label %.loopexit71.3

; <label>:1962:                                   ; preds = %.lr.ph141.3
  store i32 0, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 17), align 8
  %1963 = load i8*, i8** @optarg, align 8
  %1964 = icmp ne i8* %1963, null
  br i1 %1964, label %1965, label %.loopexit71.3

; <label>:1965:                                   ; preds = %1962
  %1966 = load i8*, i8** @optarg, align 8
  %1967 = call i32 (i8*, i8*, ...) @sscanf(i8* %1966, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 17)) #9
  %1968 = icmp ne i32 %1967, 1
  br i1 %1968, label %463, label %1969

; <label>:1969:                                   ; preds = %1965
  %1970 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 17), align 8
  %1971 = icmp slt i32 %1970, 0
  br i1 %1971, label %463, label %1972

; <label>:1972:                                   ; preds = %1969
  %1973 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 17), align 8
  %1974 = icmp sgt i32 %1973, 4
  br i1 %1974, label %463, label %.loopexit71.3

; <label>:1975:                                   ; preds = %.lr.ph141.3
  %1976 = load i8*, i8** @optarg, align 8
  %1977 = call i32 (i8*, i8*, ...) @sscanf(i8* %1976, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 39)) #9
  %1978 = icmp ne i32 %1977, 1
  br i1 %1978, label %443, label %1979

; <label>:1979:                                   ; preds = %1975
  %1980 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 39), align 4
  %1981 = icmp slt i32 %1980, 0
  br i1 %1981, label %443, label %1982

; <label>:1982:                                   ; preds = %1979
  %1983 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 39), align 4
  %1984 = icmp sgt i32 %1983, 2
  br i1 %1984, label %443, label %.loopexit71.3

; <label>:1985:                                   ; preds = %.lr.ph141.3
  %1986 = load i8*, i8** @optarg, align 8
  %1987 = call i32 (i8*, i8*, ...) @sscanf(i8* %1986, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 33)) #9
  %1988 = icmp ne i32 %1987, 1
  br i1 %1988, label %421, label %1989

; <label>:1989:                                   ; preds = %1985
  %1990 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 33), align 8
  %1991 = icmp slt i32 %1990, 1
  br i1 %1991, label %421, label %1992

; <label>:1992:                                   ; preds = %1989
  %1993 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 13), align 8
  %1994 = sub nsw i32 %1993, 1
  %1995 = sext i32 %1994 to i64
  %1996 = getelementptr inbounds [17 x i32], [17 x i32]* @K_COEFF, i64 0, i64 %1995
  store i32 0, i32* %1996, align 4
  br label %.loopexit71.3

; <label>:1997:                                   ; preds = %.lr.ph141.3
  %1998 = load i8*, i8** @optarg, align 8
  %1999 = call i64 @strlen(i8* %1998) #10
  %2000 = add i64 %1999, 1
  %2001 = call noalias i8* @calloc(i64 1, i64 %2000) #9, !track !221
  store i8* %2001, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 42), align 8
  %2002 = load i8*, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 42), align 8
  %2003 = icmp eq i8* %2002, null
  br i1 %2003, label %405, label %2004

; <label>:2004:                                   ; preds = %1997
  %2005 = load i8*, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 42), align 8
  %2006 = load i8*, i8** @optarg, align 8
  %2007 = load i8*, i8** @optarg, align 8
  %2008 = call i64 @strlen(i8* %2007) #10
  %2009 = call i8* @strncpy(i8* %2005, i8* %2006, i64 %2008) #9, !track !222
  br label %.loopexit71.3

; <label>:2010:                                   ; preds = %.lr.ph141.3
  %2011 = load i8*, i8** @optarg, align 8
  %2012 = call i32 (i8*, i8*, ...) @sscanf(i8* %2011, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 13)) #9
  %2013 = icmp ne i32 %2012, 1
  br i1 %2013, label %386, label %2014

; <label>:2014:                                   ; preds = %2010
  %2015 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 13), align 8
  %2016 = icmp slt i32 %2015, 1
  br i1 %2016, label %386, label %2017

; <label>:2017:                                   ; preds = %2014
  %2018 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 13), align 8
  %2019 = icmp sgt i32 %2018, 17
  br i1 %2019, label %386, label %2020

; <label>:2020:                                   ; preds = %2017
  %2021 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 13), align 8
  %2022 = sub nsw i32 %2021, 1
  %2023 = sext i32 %2022 to i64
  %2024 = getelementptr inbounds [17 x i32], [17 x i32]* @K_COEFF, i64 0, i64 %2023
  store i32 0, i32* %2024, align 4
  br label %.loopexit71.3

; <label>:2025:                                   ; preds = %.lr.ph141.3
  %2026 = load i8*, i8** @optarg, align 8
  %2027 = call i32 (i8*, i8*, ...) @sscanf(i8* %2026, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.103, i64 0, i64 0), float* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 12)) #9
  %2028 = icmp ne i32 %2027, 1
  br i1 %2028, label %369, label %2029

; <label>:2029:                                   ; preds = %2025
  %2030 = load float, float* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 12), align 4
  %2031 = fcmp olt float %2030, 1.000000e+00
  br i1 %2031, label %369, label %.loopexit71.3

; <label>:2032:                                   ; preds = %.lr.ph141.3
  %2033 = load i8*, i8** @optarg, align 8
  %2034 = call i32 (i8*, i8*, ...) @sscanf(i8* %2033, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 11)) #9
  %2035 = icmp ne i32 %2034, 1
  br i1 %2035, label %355, label %2036

; <label>:2036:                                   ; preds = %2032
  %2037 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 11), align 8
  %2038 = icmp slt i32 %2037, 1
  br i1 %2038, label %355, label %2039

; <label>:2039:                                   ; preds = %2036
  %2040 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 11), align 8
  %2041 = icmp sgt i32 %2040, 4
  br i1 %2041, label %355, label %.loopexit71.3

; <label>:2042:                                   ; preds = %.lr.ph141.3
  %2043 = load i8*, i8** @optarg, align 8
  %2044 = call i32 (i8*, i8*, ...) @sscanf(i8* %2043, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10)) #9
  %2045 = icmp ne i32 %2044, 1
  br i1 %2045, label %334, label %2046

; <label>:2046:                                   ; preds = %2042
  %2047 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %2048 = icmp ne i32 %2047, 64
  br i1 %2048, label %2049, label %2061

; <label>:2049:                                   ; preds = %2046
  %2050 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %2051 = icmp ne i32 %2050, 128
  br i1 %2051, label %2052, label %2061

; <label>:2052:                                   ; preds = %2049
  %2053 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %2054 = icmp ne i32 %2053, 152
  br i1 %2054, label %2055, label %2061

; <label>:2055:                                   ; preds = %2052
  %2056 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %2057 = icmp ne i32 %2056, 256
  br i1 %2057, label %2058, label %2061

; <label>:2058:                                   ; preds = %2055
  %2059 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %2060 = icmp ne i32 %2059, 512
  br i1 %2060, label %334, label %2061

; <label>:2061:                                   ; preds = %2058, %2055, %2052, %2049, %2046
  %2062 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %2063 = sdiv i32 %2062, 8
  %2064 = sub nsw i32 %2063, 3
  store i32 %2064, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  br label %.loopexit71.3

; <label>:2065:                                   ; preds = %.lr.ph141.3
  %2066 = load i8*, i8** @optarg, align 8
  %2067 = call i32 @getmac(i8* %2066, i32 1, i8* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 9, i64 0))
  %2068 = icmp ne i32 %2067, 0
  br i1 %2068, label %308, label %.loopexit71.3

; <label>:2069:                                   ; preds = %.lr.ph141.3
  store i32 0, i32* %27, align 4
  %2070 = load i8*, i8** @optarg, align 8
  %2071 = load i8, i8* %2070, align 1
  %2072 = sext i8 %2071 to i32
  %2073 = icmp ne i32 %2072, 0
  br i1 %2073, label %.lr.ph136.preheader.3, label %._crit_edge137.3

.lr.ph136.preheader.3:                            ; preds = %2069
  br label %.lr.ph136.3

.lr.ph136.3:                                      ; preds = %2120, %.lr.ph136.preheader.3
  %.02134.3 = phi i32 [ %.13.3, %2120 ], [ 0, %.lr.ph136.preheader.3 ]
  call void @unroll_loop(i32 125)
  %2074 = sext i32 %.02134.3 to i64
  %2075 = getelementptr inbounds i8, i8* %2070, i64 %2074
  %2076 = load i8, i8* %2075, align 1
  %2077 = sext i8 %2076 to i32
  %2078 = icmp eq i32 %2077, 120
  br i1 %2078, label %2079, label %2082

; <label>:2079:                                   ; preds = %.lr.ph136.3
  %2080 = sext i32 %.02134.3 to i64
  %2081 = getelementptr inbounds i8, i8* %2070, i64 %2080
  store i8 88, i8* %2081, align 1
  br label %2082

; <label>:2082:                                   ; preds = %2079, %.lr.ph136.3
  %2083 = sext i32 %.02134.3 to i64
  %2084 = getelementptr inbounds i8, i8* %2070, i64 %2083
  %2085 = load i8, i8* %2084, align 1
  %2086 = sext i8 %2085 to i32
  %2087 = icmp eq i32 %2086, 121
  br i1 %2087, label %2088, label %2091

; <label>:2088:                                   ; preds = %2082
  %2089 = sext i32 %.02134.3 to i64
  %2090 = getelementptr inbounds i8, i8* %2070, i64 %2089
  store i8 89, i8* %2090, align 1
  br label %2091

; <label>:2091:                                   ; preds = %2088, %2082
  %2092 = sext i32 %.02134.3 to i64
  %2093 = getelementptr inbounds i8, i8* %2070, i64 %2092
  %2094 = load i8, i8* %2093, align 1
  %2095 = sext i8 %2094 to i32
  %2096 = icmp eq i32 %2095, 45
  br i1 %2096, label %2118, label %2097

; <label>:2097:                                   ; preds = %2091
  %2098 = sext i32 %.02134.3 to i64
  %2099 = getelementptr inbounds i8, i8* %2070, i64 %2098
  %2100 = load i8, i8* %2099, align 1
  %2101 = sext i8 %2100 to i32
  %2102 = icmp eq i32 %2101, 58
  br i1 %2102, label %2118, label %2103

; <label>:2103:                                   ; preds = %2097
  %2104 = sext i32 %.02134.3 to i64
  %2105 = getelementptr inbounds i8, i8* %2070, i64 %2104
  %2106 = load i8, i8* %2105, align 1
  %2107 = sext i8 %2106 to i32
  %2108 = icmp eq i32 %2107, 32
  br i1 %2108, label %2118, label %2109

; <label>:2109:                                   ; preds = %2103
  %2110 = add nsw i32 %.02134.3, 1
  %2111 = sext i32 %.02134.3 to i64
  %2112 = getelementptr inbounds i8, i8* %2070, i64 %2111
  %2113 = load i8, i8* %2112, align 1
  %2114 = load i32, i32* %27, align 4
  %2115 = add nsw i32 %2114, 1
  store i32 %2115, i32* %27, align 4
  %2116 = sext i32 %2114 to i64
  %2117 = getelementptr inbounds i8, i8* %2070, i64 %2116
  store i8 %2113, i8* %2117, align 1
  br label %2120

; <label>:2118:                                   ; preds = %2103, %2097, %2091
  %2119 = add nsw i32 %.02134.3, 1
  br label %2120

; <label>:2120:                                   ; preds = %2118, %2109
  %.13.3 = phi i32 [ %2119, %2118 ], [ %2110, %2109 ]
  %2121 = sext i32 %.13.3 to i64
  %2122 = getelementptr inbounds i8, i8* %2070, i64 %2121
  %2123 = load i8, i8* %2122, align 1
  %2124 = sext i8 %2123 to i32
  %2125 = icmp ne i32 %2124, 0
  br i1 %2125, label %.lr.ph136.3, label %._crit_edge137.loopexit.3

._crit_edge137.loopexit.3:                        ; preds = %2120
  br label %._crit_edge137.3

._crit_edge137.3:                                 ; preds = %._crit_edge137.loopexit.3, %2069
  %2126 = load i32, i32* %27, align 4
  %2127 = sext i32 %2126 to i64
  %2128 = getelementptr inbounds i8, i8* %2070, i64 %2127
  store i8 0, i8* %2128, align 1
  %2129 = load i8, i8* %2070, align 1
  store i8 %2129, i8* %61, align 16
  %2130 = getelementptr inbounds i8, i8* %2070, i64 1
  %2131 = load i8, i8* %2130, align 1
  store i8 %2131, i8* %62, align 1
  store i8 0, i8* %63, align 2
  %scevgep45.3 = getelementptr i8, i8* %2070, i64 3
  br label %2132

; <label>:2132:                                   ; preds = %2190, %._crit_edge137.3
  %lsr.iv48.3 = phi i8* [ %scevgep49.3, %2190 ], [ %scevgep45.3, %._crit_edge137.3 ]
  %.127.3 = phi i32 [ 0, %._crit_edge137.3 ], [ %.329.3, %2190 ]
  %.24.3 = phi i32 [ 0, %._crit_edge137.3 ], [ %.46.3, %2190 ]
  call void @unroll_loop(i32 126)
  %2133 = call i32 (i8*, i8*, ...) @sscanf(i8* %64, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.72, i64 0, i64 0), i32* %27) #9
  %2134 = icmp eq i32 %2133, 1
  br i1 %2134, label %.critedge.3, label %2135

; <label>:2135:                                   ; preds = %2132
  %2136 = load i8, i8* %66, align 16
  %2137 = sext i8 %2136 to i32
  %2138 = icmp eq i32 %2137, 88
  br i1 %2138, label %2139, label %2143

; <label>:2139:                                   ; preds = %2135
  %2140 = load i8, i8* %69, align 1
  %2141 = sext i8 %2140 to i32
  %2142 = icmp eq i32 %2141, 88
  br i1 %2142, label %.critedge.3, label %2143

; <label>:2143:                                   ; preds = %2139, %2135
  %2144 = load i8, i8* %70, align 16
  %2145 = sext i8 %2144 to i32
  %2146 = icmp eq i32 %2145, 89
  %2147 = load i8, i8* %71, align 1
  %2148 = sext i8 %2147 to i32
  %2149 = icmp eq i32 %2148, 89
  %2150 = select i1 %2146, i1 %2149, i1 false
  br i1 %2150, label %.critedge.3, label %.loopexit71.loopexit.3

.critedge.3:                                      ; preds = %2143, %2139, %2132
  %2151 = load i8, i8* %65, align 16
  %2152 = sext i8 %2151 to i32
  %2153 = icmp eq i32 %2152, 88
  br i1 %2153, label %2154, label %2158

; <label>:2154:                                   ; preds = %.critedge.3
  %2155 = load i8, i8* %67, align 1
  %2156 = sext i8 %2155 to i32
  %2157 = icmp eq i32 %2156, 88
  br i1 %2157, label %2184, label %2158

; <label>:2158:                                   ; preds = %2154, %.critedge.3
  %2159 = load i8, i8* %68, align 16
  %2160 = sext i8 %2159 to i32
  %2161 = icmp eq i32 %2160, 89
  br i1 %2161, label %2162, label %2166

; <label>:2162:                                   ; preds = %2158
  %2163 = load i8, i8* %74, align 1
  %2164 = sext i8 %2163 to i32
  %2165 = icmp eq i32 %2164, 89
  br i1 %2165, label %2179, label %2166

; <label>:2166:                                   ; preds = %2162, %2158
  %2167 = load i32, i32* %27, align 4
  %2168 = icmp slt i32 %2167, 0
  %2169 = load i32, i32* %27, align 4
  %2170 = icmp sgt i32 %2169, 255
  %or.cond.3 = or i1 %2168, %2170
  br i1 %or.cond.3, label %.loopexit5, label %2171

; <label>:2171:                                   ; preds = %2166
  %2172 = load i32, i32* %27, align 4
  %2173 = trunc i32 %2172 to i8
  %2174 = sext i32 %.24.3 to i64
  %2175 = getelementptr inbounds [64 x i8], [64 x i8]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 7), i64 0, i64 %2174
  store i8 %2173, i8* %2175, align 1
  %2176 = add nsw i32 %.24.3, 1
  %2177 = sext i32 %.24.3 to i64
  %2178 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 8), i64 0, i64 %2177
  store i32 1, i32* %2178, align 4
  br label %2188

; <label>:2179:                                   ; preds = %2162
  %2180 = add nsw i32 %.24.3, 1
  %2181 = add nsw i32 %.127.3, 1
  %2182 = sext i32 %.127.3 to i64
  %2183 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 31), i64 0, i64 %2182
  store i32 %.24.3, i32* %2183, align 4
  br label %2188

; <label>:2184:                                   ; preds = %2154
  %2185 = add nsw i32 %.24.3, 1
  %2186 = sext i32 %.24.3 to i64
  %2187 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 8), i64 0, i64 %2186
  store i32 0, i32* %2187, align 4
  br label %2188

; <label>:2188:                                   ; preds = %2184, %2179, %2171
  %.329.3 = phi i32 [ %.127.3, %2184 ], [ %2181, %2179 ], [ %.127.3, %2171 ]
  %.46.3 = phi i32 [ %2185, %2184 ], [ %2180, %2179 ], [ %2176, %2171 ]
  %2189 = icmp sge i32 %.46.3, 64
  br i1 %2189, label %.loopexit71.loopexit.3, label %2190

; <label>:2190:                                   ; preds = %2188
  %scevgep50.3 = getelementptr i8, i8* %lsr.iv48.3, i64 -1
  %2191 = load i8, i8* %scevgep50.3, align 1
  store i8 %2191, i8* %72, align 16
  %2192 = load i8, i8* %lsr.iv48.3, align 1
  store i8 %2192, i8* %73, align 1
  %scevgep49.3 = getelementptr i8, i8* %lsr.iv48.3, i64 2
  br label %2132

.loopexit71.loopexit.3:                           ; preds = %2188, %2143
  %.531.ph.3 = phi i32 [ %.329.3, %2188 ], [ %.127.3, %2143 ]
  br label %.loopexit71.3

; <label>:2193:                                   ; preds = %.lr.ph141.3
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 41), align 4
  br label %.loopexit71.3

; <label>:2194:                                   ; preds = %.lr.ph141.3
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 16), align 4
  br label %.loopexit71.3

; <label>:2195:                                   ; preds = %.lr.ph141.3
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 14), align 4
  br label %.loopexit71.3

; <label>:2196:                                   ; preds = %.lr.ph141.3
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 38), align 8
  br label %.loopexit71.3

; <label>:2197:                                   ; preds = %.lr.ph141.3
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 15), align 8
  br label %.loopexit71.3

; <label>:2198:                                   ; preds = %.lr.ph141.3
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 6), align 8
  br label %.loopexit71.3

; <label>:2199:                                   ; preds = %.lr.ph141.3
  %2200 = load i8*, i8** @optarg, align 8
  %2201 = call i32 (i8*, i8*, ...) @sscanf(i8* %2200, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 5)) #9
  %2202 = icmp ne i32 %2201, 1
  br i1 %2202, label %160, label %2203

; <label>:2203:                                   ; preds = %2199
  %2204 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 5), align 4
  %2205 = icmp slt i32 %2204, 1
  br i1 %2205, label %160, label %2206

; <label>:2206:                                   ; preds = %2203
  %2207 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 5), align 4
  %2208 = icmp sgt i32 %2207, 128
  br i1 %2208, label %160, label %.loopexit71.3

; <label>:2209:                                   ; preds = %.lr.ph141.3
  %2210 = load i8*, i8** @optarg, align 8
  %2211 = call i32 @getmac(i8* %2210, i32 1, i8* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 4, i64 0))
  %2212 = icmp ne i32 %2211, 0
  br i1 %2212, label %142, label %2213

; <label>:2213:                                   ; preds = %2209
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 2), align 8
  br label %.loopexit71.3

; <label>:2214:                                   ; preds = %.lr.ph141.3
  call void @llvm.memset.p0i8.i64(i8* align 4 getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 3, i64 0), i8 0, i64 33, i1 false)
  %2215 = load i8*, i8** @optarg, align 8
  %2216 = call i8* @strncpy(i8* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 3, i64 0), i8* %2215, i64 32) #9, !track !220
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 1), align 4
  br label %.loopexit71.3

; <label>:2217:                                   ; preds = %.lr.ph141.3
  %2218 = load i8*, i8** @optarg, align 8
  %2219 = call i32 (i8*, i8*, ...) @sscanf(i8* %2218, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 0)) #9
  %2220 = load i8*, i8** @optarg, align 8
  %2221 = call i32 @strcasecmp(i8* %2220, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.94, i64 0, i64 0)) #10
  %2222 = icmp eq i32 %2221, 0
  br i1 %2222, label %2228, label %2223

; <label>:2223:                                   ; preds = %2217
  %2224 = load i8*, i8** @optarg, align 8
  %2225 = call i32 @strcasecmp(i8* %2224, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.95, i64 0, i64 0)) #10
  %2226 = icmp eq i32 %2225, 0
  br i1 %2226, label %2227, label %2229

; <label>:2227:                                   ; preds = %2223
  store i32 2, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 0), align 8
  br label %2229

; <label>:2228:                                   ; preds = %2217
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 0), align 8
  br label %2229

; <label>:2229:                                   ; preds = %2228, %2227, %2223
  %2230 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 0), align 8
  %2231 = icmp ne i32 %2230, 1
  br i1 %2231, label %2232, label %.loopexit71.3

; <label>:2232:                                   ; preds = %2229
  %2233 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 0), align 8
  %2234 = icmp ne i32 %2233, 2
  br i1 %2234, label %128, label %.loopexit71.3

; <label>:2235:                                   ; preds = %.lr.ph141.3
  %2236 = icmp ne i32 %.134.2, 0
  br i1 %2236, label %102, label %2237

; <label>:2237:                                   ; preds = %2235
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 40), align 8
  store i32 0, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 20), align 4
  br label %.loopexit71.3

.loopexit71.3:                                    ; preds = %2237, %2232, %2229, %2214, %2213, %2206, %2198, %2197, %2196, %2195, %2194, %2193, %.loopexit71.loopexit.3, %2065, %2061, %2039, %2029, %2020, %2004, %1992, %1982, %1972, %1962, %1961, %1960, %1959, %1958, %1954, %1953, %1951, %1949, %1940
  %.134.3 = phi i32 [ %.134.2, %1953 ], [ %.134.2, %1958 ], [ %.134.2, %1959 ], [ %.134.2, %1960 ], [ %.134.2, %1961 ], [ %.134.2, %1992 ], [ %.134.2, %2004 ], [ %.134.2, %2020 ], [ %.134.2, %2061 ], [ %.134.2, %2193 ], [ %.134.2, %2194 ], [ %.134.2, %2195 ], [ %.134.2, %2196 ], [ %.134.2, %2197 ], [ %.134.2, %2198 ], [ %.134.2, %2213 ], [ %.134.2, %2214 ], [ %.134.2, %2237 ], [ %.134.2, %2232 ], [ %.134.2, %2229 ], [ %.134.2, %2206 ], [ %.134.2, %2065 ], [ %.134.2, %2039 ], [ %.134.2, %2029 ], [ %.134.2, %1982 ], [ %.134.2, %1972 ], [ %.134.2, %1962 ], [ %.134.2, %1954 ], [ %.134.2, %1949 ], [ %.134.2, %1951 ], [ 1, %1940 ], [ %.134.2, %.loopexit71.loopexit.3 ]
  %.531.3 = phi i32 [ %.531.2, %1953 ], [ %.531.2, %1958 ], [ %.531.2, %1959 ], [ %.531.2, %1960 ], [ %.531.2, %1961 ], [ %.531.2, %1992 ], [ %.531.2, %2004 ], [ %.531.2, %2020 ], [ %.531.2, %2061 ], [ %.531.2, %2193 ], [ %.531.2, %2194 ], [ %.531.2, %2195 ], [ %.531.2, %2196 ], [ %.531.2, %2197 ], [ %.531.2, %2198 ], [ %.531.2, %2213 ], [ %.531.2, %2214 ], [ %.531.2, %2237 ], [ %.531.2, %2232 ], [ %.531.2, %2229 ], [ %.531.2, %2206 ], [ %.531.2, %2065 ], [ %.531.2, %2039 ], [ %.531.2, %2029 ], [ %.531.2, %1982 ], [ %.531.2, %1972 ], [ %.531.2, %1962 ], [ %.531.2, %1954 ], [ %.531.2, %1949 ], [ %.531.2, %1951 ], [ %.531.2, %1940 ], [ %.531.ph.3, %.loopexit71.loopexit.3 ]
  call void @__loop_iteration_test___0()
  store i32 0, i32* %30, align 4
  %2238 = call i32 @getopt_long(i32 4, i8** %25, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.86, i64 0, i64 0), %struct.option* getelementptr inbounds ([10 x %struct.option], [10 x %struct.option]* @main.long_options, i64 0, i64 0), i32* %30) #9, !track_argc !219
  %2239 = icmp slt i32 %2238, 0
  br i1 %2239, label %._crit_edge142.loopexit, label %.lr.ph141.4

.lr.ph141.4:                                      ; preds = %.loopexit71.3
  call void @unroll_loop(i32 124)
  switch i32 %2238, label %.loopexit1 [
    i32 58, label %75
    i32 63, label %80
    i32 117, label %85
    i32 86, label %2535
    i32 97, label %2517
    i32 101, label %2514
    i32 98, label %2509
    i32 112, label %2499
    i32 113, label %2498
    i32 99, label %2497
    i32 68, label %2496
    i32 104, label %2495
    i32 116, label %2494
    i32 49, label %2493
    i32 100, label %2369
    i32 109, label %2365
    i32 110, label %2342
    i32 105, label %2332
    i32 102, label %2325
    i32 107, label %2310
    i32 108, label %2297
    i32 77, label %2285
    i32 80, label %2275
    i32 120, label %2262
    i32 88, label %2261
    i32 121, label %2260
    i32 75, label %2259
    i32 115, label %2258
    i32 119, label %2254
    i32 114, label %484
    i32 48, label %2253
    i32 72, label %.loopexit13
    i32 67, label %2243
    i32 122, label %2240
  ]

; <label>:2240:                                   ; preds = %.lr.ph141.4
  %2241 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 40), align 8
  %2242 = icmp ne i32 %2241, 0
  br i1 %2242, label %507, label %.loopexit71.4

; <label>:2243:                                   ; preds = %.lr.ph141.4
  %2244 = load i8*, i8** @optarg, align 8
  %2245 = call i32 @checkbssids(i8* %2244)
  %2246 = icmp slt i32 %2245, 1
  br i1 %2246, label %493, label %2247

; <label>:2247:                                   ; preds = %2243
  %2248 = icmp eq i32 %2245, 1
  br i1 %2248, label %2251, label %2249

; <label>:2249:                                   ; preds = %2247
  %2250 = load i8*, i8** @optarg, align 8
  store i8* %2250, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 34), align 8
  br label %.loopexit71.4

; <label>:2251:                                   ; preds = %2247
  %2252 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.112, i64 0, i64 0))
  br label %.loopexit71.4

; <label>:2253:                                   ; preds = %.lr.ph141.4
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 27), align 4
  br label %.loopexit71.4

; <label>:2254:                                   ; preds = %.lr.ph141.4
  %2255 = load i8*, i8** @optarg, align 8
  %2256 = call i32 @set_dicts(i8* %2255)
  %2257 = icmp ne i32 %2256, 0
  br i1 %2257, label %479, label %.loopexit71.4

; <label>:2258:                                   ; preds = %.lr.ph141.4
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 26), align 8
  br label %.loopexit71.4

; <label>:2259:                                   ; preds = %.lr.ph141.4
  store i32 0, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 20), align 4
  br label %.loopexit71.4

; <label>:2260:                                   ; preds = %.lr.ph141.4
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 19), align 8
  br label %.loopexit71.4

; <label>:2261:                                   ; preds = %.lr.ph141.4
  store i32 0, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 18), align 4
  br label %.loopexit71.4

; <label>:2262:                                   ; preds = %.lr.ph141.4
  store i32 0, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 17), align 8
  %2263 = load i8*, i8** @optarg, align 8
  %2264 = icmp ne i8* %2263, null
  br i1 %2264, label %2265, label %.loopexit71.4

; <label>:2265:                                   ; preds = %2262
  %2266 = load i8*, i8** @optarg, align 8
  %2267 = call i32 (i8*, i8*, ...) @sscanf(i8* %2266, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 17)) #9
  %2268 = icmp ne i32 %2267, 1
  br i1 %2268, label %463, label %2269

; <label>:2269:                                   ; preds = %2265
  %2270 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 17), align 8
  %2271 = icmp slt i32 %2270, 0
  br i1 %2271, label %463, label %2272

; <label>:2272:                                   ; preds = %2269
  %2273 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 17), align 8
  %2274 = icmp sgt i32 %2273, 4
  br i1 %2274, label %463, label %.loopexit71.4

; <label>:2275:                                   ; preds = %.lr.ph141.4
  %2276 = load i8*, i8** @optarg, align 8
  %2277 = call i32 (i8*, i8*, ...) @sscanf(i8* %2276, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 39)) #9
  %2278 = icmp ne i32 %2277, 1
  br i1 %2278, label %443, label %2279

; <label>:2279:                                   ; preds = %2275
  %2280 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 39), align 4
  %2281 = icmp slt i32 %2280, 0
  br i1 %2281, label %443, label %2282

; <label>:2282:                                   ; preds = %2279
  %2283 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 39), align 4
  %2284 = icmp sgt i32 %2283, 2
  br i1 %2284, label %443, label %.loopexit71.4

; <label>:2285:                                   ; preds = %.lr.ph141.4
  %2286 = load i8*, i8** @optarg, align 8
  %2287 = call i32 (i8*, i8*, ...) @sscanf(i8* %2286, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 33)) #9
  %2288 = icmp ne i32 %2287, 1
  br i1 %2288, label %421, label %2289

; <label>:2289:                                   ; preds = %2285
  %2290 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 33), align 8
  %2291 = icmp slt i32 %2290, 1
  br i1 %2291, label %421, label %2292

; <label>:2292:                                   ; preds = %2289
  %2293 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 13), align 8
  %2294 = sub nsw i32 %2293, 1
  %2295 = sext i32 %2294 to i64
  %2296 = getelementptr inbounds [17 x i32], [17 x i32]* @K_COEFF, i64 0, i64 %2295
  store i32 0, i32* %2296, align 4
  br label %.loopexit71.4

; <label>:2297:                                   ; preds = %.lr.ph141.4
  %2298 = load i8*, i8** @optarg, align 8
  %2299 = call i64 @strlen(i8* %2298) #10
  %2300 = add i64 %2299, 1
  %2301 = call noalias i8* @calloc(i64 1, i64 %2300) #9, !track !221
  store i8* %2301, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 42), align 8
  %2302 = load i8*, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 42), align 8
  %2303 = icmp eq i8* %2302, null
  br i1 %2303, label %405, label %2304

; <label>:2304:                                   ; preds = %2297
  %2305 = load i8*, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 42), align 8
  %2306 = load i8*, i8** @optarg, align 8
  %2307 = load i8*, i8** @optarg, align 8
  %2308 = call i64 @strlen(i8* %2307) #10
  %2309 = call i8* @strncpy(i8* %2305, i8* %2306, i64 %2308) #9, !track !222
  br label %.loopexit71.4

; <label>:2310:                                   ; preds = %.lr.ph141.4
  %2311 = load i8*, i8** @optarg, align 8
  %2312 = call i32 (i8*, i8*, ...) @sscanf(i8* %2311, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 13)) #9
  %2313 = icmp ne i32 %2312, 1
  br i1 %2313, label %386, label %2314

; <label>:2314:                                   ; preds = %2310
  %2315 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 13), align 8
  %2316 = icmp slt i32 %2315, 1
  br i1 %2316, label %386, label %2317

; <label>:2317:                                   ; preds = %2314
  %2318 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 13), align 8
  %2319 = icmp sgt i32 %2318, 17
  br i1 %2319, label %386, label %2320

; <label>:2320:                                   ; preds = %2317
  %2321 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 13), align 8
  %2322 = sub nsw i32 %2321, 1
  %2323 = sext i32 %2322 to i64
  %2324 = getelementptr inbounds [17 x i32], [17 x i32]* @K_COEFF, i64 0, i64 %2323
  store i32 0, i32* %2324, align 4
  br label %.loopexit71.4

; <label>:2325:                                   ; preds = %.lr.ph141.4
  %2326 = load i8*, i8** @optarg, align 8
  %2327 = call i32 (i8*, i8*, ...) @sscanf(i8* %2326, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.103, i64 0, i64 0), float* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 12)) #9
  %2328 = icmp ne i32 %2327, 1
  br i1 %2328, label %369, label %2329

; <label>:2329:                                   ; preds = %2325
  %2330 = load float, float* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 12), align 4
  %2331 = fcmp olt float %2330, 1.000000e+00
  br i1 %2331, label %369, label %.loopexit71.4

; <label>:2332:                                   ; preds = %.lr.ph141.4
  %2333 = load i8*, i8** @optarg, align 8
  %2334 = call i32 (i8*, i8*, ...) @sscanf(i8* %2333, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 11)) #9
  %2335 = icmp ne i32 %2334, 1
  br i1 %2335, label %355, label %2336

; <label>:2336:                                   ; preds = %2332
  %2337 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 11), align 8
  %2338 = icmp slt i32 %2337, 1
  br i1 %2338, label %355, label %2339

; <label>:2339:                                   ; preds = %2336
  %2340 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 11), align 8
  %2341 = icmp sgt i32 %2340, 4
  br i1 %2341, label %355, label %.loopexit71.4

; <label>:2342:                                   ; preds = %.lr.ph141.4
  %2343 = load i8*, i8** @optarg, align 8
  %2344 = call i32 (i8*, i8*, ...) @sscanf(i8* %2343, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10)) #9
  %2345 = icmp ne i32 %2344, 1
  br i1 %2345, label %334, label %2346

; <label>:2346:                                   ; preds = %2342
  %2347 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %2348 = icmp ne i32 %2347, 64
  br i1 %2348, label %2349, label %2361

; <label>:2349:                                   ; preds = %2346
  %2350 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %2351 = icmp ne i32 %2350, 128
  br i1 %2351, label %2352, label %2361

; <label>:2352:                                   ; preds = %2349
  %2353 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %2354 = icmp ne i32 %2353, 152
  br i1 %2354, label %2355, label %2361

; <label>:2355:                                   ; preds = %2352
  %2356 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %2357 = icmp ne i32 %2356, 256
  br i1 %2357, label %2358, label %2361

; <label>:2358:                                   ; preds = %2355
  %2359 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %2360 = icmp ne i32 %2359, 512
  br i1 %2360, label %334, label %2361

; <label>:2361:                                   ; preds = %2358, %2355, %2352, %2349, %2346
  %2362 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %2363 = sdiv i32 %2362, 8
  %2364 = sub nsw i32 %2363, 3
  store i32 %2364, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  br label %.loopexit71.4

; <label>:2365:                                   ; preds = %.lr.ph141.4
  %2366 = load i8*, i8** @optarg, align 8
  %2367 = call i32 @getmac(i8* %2366, i32 1, i8* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 9, i64 0))
  %2368 = icmp ne i32 %2367, 0
  br i1 %2368, label %308, label %.loopexit71.4

; <label>:2369:                                   ; preds = %.lr.ph141.4
  store i32 0, i32* %27, align 4
  %2370 = load i8*, i8** @optarg, align 8
  %2371 = load i8, i8* %2370, align 1
  %2372 = sext i8 %2371 to i32
  %2373 = icmp ne i32 %2372, 0
  br i1 %2373, label %.lr.ph136.preheader.4, label %._crit_edge137.4

.lr.ph136.preheader.4:                            ; preds = %2369
  br label %.lr.ph136.4

.lr.ph136.4:                                      ; preds = %2420, %.lr.ph136.preheader.4
  %.02134.4 = phi i32 [ %.13.4, %2420 ], [ 0, %.lr.ph136.preheader.4 ]
  call void @unroll_loop(i32 125)
  %2374 = sext i32 %.02134.4 to i64
  %2375 = getelementptr inbounds i8, i8* %2370, i64 %2374
  %2376 = load i8, i8* %2375, align 1
  %2377 = sext i8 %2376 to i32
  %2378 = icmp eq i32 %2377, 120
  br i1 %2378, label %2379, label %2382

; <label>:2379:                                   ; preds = %.lr.ph136.4
  %2380 = sext i32 %.02134.4 to i64
  %2381 = getelementptr inbounds i8, i8* %2370, i64 %2380
  store i8 88, i8* %2381, align 1
  br label %2382

; <label>:2382:                                   ; preds = %2379, %.lr.ph136.4
  %2383 = sext i32 %.02134.4 to i64
  %2384 = getelementptr inbounds i8, i8* %2370, i64 %2383
  %2385 = load i8, i8* %2384, align 1
  %2386 = sext i8 %2385 to i32
  %2387 = icmp eq i32 %2386, 121
  br i1 %2387, label %2388, label %2391

; <label>:2388:                                   ; preds = %2382
  %2389 = sext i32 %.02134.4 to i64
  %2390 = getelementptr inbounds i8, i8* %2370, i64 %2389
  store i8 89, i8* %2390, align 1
  br label %2391

; <label>:2391:                                   ; preds = %2388, %2382
  %2392 = sext i32 %.02134.4 to i64
  %2393 = getelementptr inbounds i8, i8* %2370, i64 %2392
  %2394 = load i8, i8* %2393, align 1
  %2395 = sext i8 %2394 to i32
  %2396 = icmp eq i32 %2395, 45
  br i1 %2396, label %2418, label %2397

; <label>:2397:                                   ; preds = %2391
  %2398 = sext i32 %.02134.4 to i64
  %2399 = getelementptr inbounds i8, i8* %2370, i64 %2398
  %2400 = load i8, i8* %2399, align 1
  %2401 = sext i8 %2400 to i32
  %2402 = icmp eq i32 %2401, 58
  br i1 %2402, label %2418, label %2403

; <label>:2403:                                   ; preds = %2397
  %2404 = sext i32 %.02134.4 to i64
  %2405 = getelementptr inbounds i8, i8* %2370, i64 %2404
  %2406 = load i8, i8* %2405, align 1
  %2407 = sext i8 %2406 to i32
  %2408 = icmp eq i32 %2407, 32
  br i1 %2408, label %2418, label %2409

; <label>:2409:                                   ; preds = %2403
  %2410 = add nsw i32 %.02134.4, 1
  %2411 = sext i32 %.02134.4 to i64
  %2412 = getelementptr inbounds i8, i8* %2370, i64 %2411
  %2413 = load i8, i8* %2412, align 1
  %2414 = load i32, i32* %27, align 4
  %2415 = add nsw i32 %2414, 1
  store i32 %2415, i32* %27, align 4
  %2416 = sext i32 %2414 to i64
  %2417 = getelementptr inbounds i8, i8* %2370, i64 %2416
  store i8 %2413, i8* %2417, align 1
  br label %2420

; <label>:2418:                                   ; preds = %2403, %2397, %2391
  %2419 = add nsw i32 %.02134.4, 1
  br label %2420

; <label>:2420:                                   ; preds = %2418, %2409
  %.13.4 = phi i32 [ %2419, %2418 ], [ %2410, %2409 ]
  %2421 = sext i32 %.13.4 to i64
  %2422 = getelementptr inbounds i8, i8* %2370, i64 %2421
  %2423 = load i8, i8* %2422, align 1
  %2424 = sext i8 %2423 to i32
  %2425 = icmp ne i32 %2424, 0
  br i1 %2425, label %.lr.ph136.4, label %._crit_edge137.loopexit.4

._crit_edge137.loopexit.4:                        ; preds = %2420
  br label %._crit_edge137.4

._crit_edge137.4:                                 ; preds = %._crit_edge137.loopexit.4, %2369
  %2426 = load i32, i32* %27, align 4
  %2427 = sext i32 %2426 to i64
  %2428 = getelementptr inbounds i8, i8* %2370, i64 %2427
  store i8 0, i8* %2428, align 1
  %2429 = load i8, i8* %2370, align 1
  store i8 %2429, i8* %61, align 16
  %2430 = getelementptr inbounds i8, i8* %2370, i64 1
  %2431 = load i8, i8* %2430, align 1
  store i8 %2431, i8* %62, align 1
  store i8 0, i8* %63, align 2
  %scevgep45.4 = getelementptr i8, i8* %2370, i64 3
  br label %2432

; <label>:2432:                                   ; preds = %2490, %._crit_edge137.4
  %lsr.iv48.4 = phi i8* [ %scevgep49.4, %2490 ], [ %scevgep45.4, %._crit_edge137.4 ]
  %.127.4 = phi i32 [ 0, %._crit_edge137.4 ], [ %.329.4, %2490 ]
  %.24.4 = phi i32 [ 0, %._crit_edge137.4 ], [ %.46.4, %2490 ]
  call void @unroll_loop(i32 126)
  %2433 = call i32 (i8*, i8*, ...) @sscanf(i8* %64, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.72, i64 0, i64 0), i32* %27) #9
  %2434 = icmp eq i32 %2433, 1
  br i1 %2434, label %.critedge.4, label %2435

; <label>:2435:                                   ; preds = %2432
  %2436 = load i8, i8* %66, align 16
  %2437 = sext i8 %2436 to i32
  %2438 = icmp eq i32 %2437, 88
  br i1 %2438, label %2439, label %2443

; <label>:2439:                                   ; preds = %2435
  %2440 = load i8, i8* %69, align 1
  %2441 = sext i8 %2440 to i32
  %2442 = icmp eq i32 %2441, 88
  br i1 %2442, label %.critedge.4, label %2443

; <label>:2443:                                   ; preds = %2439, %2435
  %2444 = load i8, i8* %70, align 16
  %2445 = sext i8 %2444 to i32
  %2446 = icmp eq i32 %2445, 89
  %2447 = load i8, i8* %71, align 1
  %2448 = sext i8 %2447 to i32
  %2449 = icmp eq i32 %2448, 89
  %2450 = select i1 %2446, i1 %2449, i1 false
  br i1 %2450, label %.critedge.4, label %.loopexit71.loopexit.4

.critedge.4:                                      ; preds = %2443, %2439, %2432
  %2451 = load i8, i8* %65, align 16
  %2452 = sext i8 %2451 to i32
  %2453 = icmp eq i32 %2452, 88
  br i1 %2453, label %2454, label %2458

; <label>:2454:                                   ; preds = %.critedge.4
  %2455 = load i8, i8* %67, align 1
  %2456 = sext i8 %2455 to i32
  %2457 = icmp eq i32 %2456, 88
  br i1 %2457, label %2484, label %2458

; <label>:2458:                                   ; preds = %2454, %.critedge.4
  %2459 = load i8, i8* %68, align 16
  %2460 = sext i8 %2459 to i32
  %2461 = icmp eq i32 %2460, 89
  br i1 %2461, label %2462, label %2466

; <label>:2462:                                   ; preds = %2458
  %2463 = load i8, i8* %74, align 1
  %2464 = sext i8 %2463 to i32
  %2465 = icmp eq i32 %2464, 89
  br i1 %2465, label %2479, label %2466

; <label>:2466:                                   ; preds = %2462, %2458
  %2467 = load i32, i32* %27, align 4
  %2468 = icmp slt i32 %2467, 0
  %2469 = load i32, i32* %27, align 4
  %2470 = icmp sgt i32 %2469, 255
  %or.cond.4 = or i1 %2468, %2470
  br i1 %or.cond.4, label %.loopexit6, label %2471

; <label>:2471:                                   ; preds = %2466
  %2472 = load i32, i32* %27, align 4
  %2473 = trunc i32 %2472 to i8
  %2474 = sext i32 %.24.4 to i64
  %2475 = getelementptr inbounds [64 x i8], [64 x i8]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 7), i64 0, i64 %2474
  store i8 %2473, i8* %2475, align 1
  %2476 = add nsw i32 %.24.4, 1
  %2477 = sext i32 %.24.4 to i64
  %2478 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 8), i64 0, i64 %2477
  store i32 1, i32* %2478, align 4
  br label %2488

; <label>:2479:                                   ; preds = %2462
  %2480 = add nsw i32 %.24.4, 1
  %2481 = add nsw i32 %.127.4, 1
  %2482 = sext i32 %.127.4 to i64
  %2483 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 31), i64 0, i64 %2482
  store i32 %.24.4, i32* %2483, align 4
  br label %2488

; <label>:2484:                                   ; preds = %2454
  %2485 = add nsw i32 %.24.4, 1
  %2486 = sext i32 %.24.4 to i64
  %2487 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 8), i64 0, i64 %2486
  store i32 0, i32* %2487, align 4
  br label %2488

; <label>:2488:                                   ; preds = %2484, %2479, %2471
  %.329.4 = phi i32 [ %.127.4, %2484 ], [ %2481, %2479 ], [ %.127.4, %2471 ]
  %.46.4 = phi i32 [ %2485, %2484 ], [ %2480, %2479 ], [ %2476, %2471 ]
  %2489 = icmp sge i32 %.46.4, 64
  br i1 %2489, label %.loopexit71.loopexit.4, label %2490

; <label>:2490:                                   ; preds = %2488
  %scevgep50.4 = getelementptr i8, i8* %lsr.iv48.4, i64 -1
  %2491 = load i8, i8* %scevgep50.4, align 1
  store i8 %2491, i8* %72, align 16
  %2492 = load i8, i8* %lsr.iv48.4, align 1
  store i8 %2492, i8* %73, align 1
  %scevgep49.4 = getelementptr i8, i8* %lsr.iv48.4, i64 2
  br label %2432

.loopexit71.loopexit.4:                           ; preds = %2488, %2443
  %.531.ph.4 = phi i32 [ %.329.4, %2488 ], [ %.127.4, %2443 ]
  br label %.loopexit71.4

; <label>:2493:                                   ; preds = %.lr.ph141.4
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 41), align 4
  br label %.loopexit71.4

; <label>:2494:                                   ; preds = %.lr.ph141.4
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 16), align 4
  br label %.loopexit71.4

; <label>:2495:                                   ; preds = %.lr.ph141.4
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 14), align 4
  br label %.loopexit71.4

; <label>:2496:                                   ; preds = %.lr.ph141.4
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 38), align 8
  br label %.loopexit71.4

; <label>:2497:                                   ; preds = %.lr.ph141.4
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 15), align 8
  br label %.loopexit71.4

; <label>:2498:                                   ; preds = %.lr.ph141.4
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 6), align 8
  br label %.loopexit71.4

; <label>:2499:                                   ; preds = %.lr.ph141.4
  %2500 = load i8*, i8** @optarg, align 8
  %2501 = call i32 (i8*, i8*, ...) @sscanf(i8* %2500, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 5)) #9
  %2502 = icmp ne i32 %2501, 1
  br i1 %2502, label %160, label %2503

; <label>:2503:                                   ; preds = %2499
  %2504 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 5), align 4
  %2505 = icmp slt i32 %2504, 1
  br i1 %2505, label %160, label %2506

; <label>:2506:                                   ; preds = %2503
  %2507 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 5), align 4
  %2508 = icmp sgt i32 %2507, 128
  br i1 %2508, label %160, label %.loopexit71.4

; <label>:2509:                                   ; preds = %.lr.ph141.4
  %2510 = load i8*, i8** @optarg, align 8
  %2511 = call i32 @getmac(i8* %2510, i32 1, i8* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 4, i64 0))
  %2512 = icmp ne i32 %2511, 0
  br i1 %2512, label %142, label %2513

; <label>:2513:                                   ; preds = %2509
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 2), align 8
  br label %.loopexit71.4

; <label>:2514:                                   ; preds = %.lr.ph141.4
  call void @llvm.memset.p0i8.i64(i8* align 4 getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 3, i64 0), i8 0, i64 33, i1 false)
  %2515 = load i8*, i8** @optarg, align 8
  %2516 = call i8* @strncpy(i8* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 3, i64 0), i8* %2515, i64 32) #9, !track !220
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 1), align 4
  br label %.loopexit71.4

; <label>:2517:                                   ; preds = %.lr.ph141.4
  %2518 = load i8*, i8** @optarg, align 8
  %2519 = call i32 (i8*, i8*, ...) @sscanf(i8* %2518, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 0)) #9
  %2520 = load i8*, i8** @optarg, align 8
  %2521 = call i32 @strcasecmp(i8* %2520, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.94, i64 0, i64 0)) #10
  %2522 = icmp eq i32 %2521, 0
  br i1 %2522, label %2528, label %2523

; <label>:2523:                                   ; preds = %2517
  %2524 = load i8*, i8** @optarg, align 8
  %2525 = call i32 @strcasecmp(i8* %2524, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.95, i64 0, i64 0)) #10
  %2526 = icmp eq i32 %2525, 0
  br i1 %2526, label %2527, label %2529

; <label>:2527:                                   ; preds = %2523
  store i32 2, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 0), align 8
  br label %2529

; <label>:2528:                                   ; preds = %2517
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 0), align 8
  br label %2529

; <label>:2529:                                   ; preds = %2528, %2527, %2523
  %2530 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 0), align 8
  %2531 = icmp ne i32 %2530, 1
  br i1 %2531, label %2532, label %.loopexit71.4

; <label>:2532:                                   ; preds = %2529
  %2533 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 0), align 8
  %2534 = icmp ne i32 %2533, 2
  br i1 %2534, label %128, label %.loopexit71.4

; <label>:2535:                                   ; preds = %.lr.ph141.4
  %2536 = icmp ne i32 %.134.3, 0
  br i1 %2536, label %102, label %2537

; <label>:2537:                                   ; preds = %2535
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 40), align 8
  store i32 0, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 20), align 4
  br label %.loopexit71.4

.loopexit71.4:                                    ; preds = %2537, %2532, %2529, %2514, %2513, %2506, %2498, %2497, %2496, %2495, %2494, %2493, %.loopexit71.loopexit.4, %2365, %2361, %2339, %2329, %2320, %2304, %2292, %2282, %2272, %2262, %2261, %2260, %2259, %2258, %2254, %2253, %2251, %2249, %2240
  %.134.4 = phi i32 [ %.134.3, %2253 ], [ %.134.3, %2258 ], [ %.134.3, %2259 ], [ %.134.3, %2260 ], [ %.134.3, %2261 ], [ %.134.3, %2292 ], [ %.134.3, %2304 ], [ %.134.3, %2320 ], [ %.134.3, %2361 ], [ %.134.3, %2493 ], [ %.134.3, %2494 ], [ %.134.3, %2495 ], [ %.134.3, %2496 ], [ %.134.3, %2497 ], [ %.134.3, %2498 ], [ %.134.3, %2513 ], [ %.134.3, %2514 ], [ %.134.3, %2537 ], [ %.134.3, %2532 ], [ %.134.3, %2529 ], [ %.134.3, %2506 ], [ %.134.3, %2365 ], [ %.134.3, %2339 ], [ %.134.3, %2329 ], [ %.134.3, %2282 ], [ %.134.3, %2272 ], [ %.134.3, %2262 ], [ %.134.3, %2254 ], [ %.134.3, %2249 ], [ %.134.3, %2251 ], [ 1, %2240 ], [ %.134.3, %.loopexit71.loopexit.4 ]
  %.531.4 = phi i32 [ %.531.3, %2253 ], [ %.531.3, %2258 ], [ %.531.3, %2259 ], [ %.531.3, %2260 ], [ %.531.3, %2261 ], [ %.531.3, %2292 ], [ %.531.3, %2304 ], [ %.531.3, %2320 ], [ %.531.3, %2361 ], [ %.531.3, %2493 ], [ %.531.3, %2494 ], [ %.531.3, %2495 ], [ %.531.3, %2496 ], [ %.531.3, %2497 ], [ %.531.3, %2498 ], [ %.531.3, %2513 ], [ %.531.3, %2514 ], [ %.531.3, %2537 ], [ %.531.3, %2532 ], [ %.531.3, %2529 ], [ %.531.3, %2506 ], [ %.531.3, %2365 ], [ %.531.3, %2339 ], [ %.531.3, %2329 ], [ %.531.3, %2282 ], [ %.531.3, %2272 ], [ %.531.3, %2262 ], [ %.531.3, %2254 ], [ %.531.3, %2249 ], [ %.531.3, %2251 ], [ %.531.3, %2240 ], [ %.531.ph.4, %.loopexit71.loopexit.4 ]
  call void @__loop_iteration_test___0()
  store i32 0, i32* %30, align 4
  %2538 = call i32 @getopt_long(i32 4, i8** %25, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.86, i64 0, i64 0), %struct.option* getelementptr inbounds ([10 x %struct.option], [10 x %struct.option]* @main.long_options, i64 0, i64 0), i32* %30) #9, !track_argc !219
  %2539 = icmp slt i32 %2538, 0
  br i1 %2539, label %._crit_edge142.loopexit, label %.lr.ph141.5

.lr.ph141.5:                                      ; preds = %.loopexit71.4
  call void @unroll_loop(i32 124)
  switch i32 %2538, label %.loopexit1 [
    i32 58, label %75
    i32 63, label %80
    i32 117, label %85
    i32 86, label %2835
    i32 97, label %2817
    i32 101, label %2814
    i32 98, label %2809
    i32 112, label %2799
    i32 113, label %2798
    i32 99, label %2797
    i32 68, label %2796
    i32 104, label %2795
    i32 116, label %2794
    i32 49, label %2793
    i32 100, label %2669
    i32 109, label %2665
    i32 110, label %2642
    i32 105, label %2632
    i32 102, label %2625
    i32 107, label %2610
    i32 108, label %2597
    i32 77, label %2585
    i32 80, label %2575
    i32 120, label %2562
    i32 88, label %2561
    i32 121, label %2560
    i32 75, label %2559
    i32 115, label %2558
    i32 119, label %2554
    i32 114, label %484
    i32 48, label %2553
    i32 72, label %.loopexit13
    i32 67, label %2543
    i32 122, label %2540
  ]

; <label>:2540:                                   ; preds = %.lr.ph141.5
  %2541 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 40), align 8
  %2542 = icmp ne i32 %2541, 0
  br i1 %2542, label %507, label %.loopexit71.5

; <label>:2543:                                   ; preds = %.lr.ph141.5
  %2544 = load i8*, i8** @optarg, align 8
  %2545 = call i32 @checkbssids(i8* %2544)
  %2546 = icmp slt i32 %2545, 1
  br i1 %2546, label %493, label %2547

; <label>:2547:                                   ; preds = %2543
  %2548 = icmp eq i32 %2545, 1
  br i1 %2548, label %2551, label %2549

; <label>:2549:                                   ; preds = %2547
  %2550 = load i8*, i8** @optarg, align 8
  store i8* %2550, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 34), align 8
  br label %.loopexit71.5

; <label>:2551:                                   ; preds = %2547
  %2552 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.112, i64 0, i64 0))
  br label %.loopexit71.5

; <label>:2553:                                   ; preds = %.lr.ph141.5
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 27), align 4
  br label %.loopexit71.5

; <label>:2554:                                   ; preds = %.lr.ph141.5
  %2555 = load i8*, i8** @optarg, align 8
  %2556 = call i32 @set_dicts(i8* %2555)
  %2557 = icmp ne i32 %2556, 0
  br i1 %2557, label %479, label %.loopexit71.5

; <label>:2558:                                   ; preds = %.lr.ph141.5
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 26), align 8
  br label %.loopexit71.5

; <label>:2559:                                   ; preds = %.lr.ph141.5
  store i32 0, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 20), align 4
  br label %.loopexit71.5

; <label>:2560:                                   ; preds = %.lr.ph141.5
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 19), align 8
  br label %.loopexit71.5

; <label>:2561:                                   ; preds = %.lr.ph141.5
  store i32 0, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 18), align 4
  br label %.loopexit71.5

; <label>:2562:                                   ; preds = %.lr.ph141.5
  store i32 0, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 17), align 8
  %2563 = load i8*, i8** @optarg, align 8
  %2564 = icmp ne i8* %2563, null
  br i1 %2564, label %2565, label %.loopexit71.5

; <label>:2565:                                   ; preds = %2562
  %2566 = load i8*, i8** @optarg, align 8
  %2567 = call i32 (i8*, i8*, ...) @sscanf(i8* %2566, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 17)) #9
  %2568 = icmp ne i32 %2567, 1
  br i1 %2568, label %463, label %2569

; <label>:2569:                                   ; preds = %2565
  %2570 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 17), align 8
  %2571 = icmp slt i32 %2570, 0
  br i1 %2571, label %463, label %2572

; <label>:2572:                                   ; preds = %2569
  %2573 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 17), align 8
  %2574 = icmp sgt i32 %2573, 4
  br i1 %2574, label %463, label %.loopexit71.5

; <label>:2575:                                   ; preds = %.lr.ph141.5
  %2576 = load i8*, i8** @optarg, align 8
  %2577 = call i32 (i8*, i8*, ...) @sscanf(i8* %2576, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 39)) #9
  %2578 = icmp ne i32 %2577, 1
  br i1 %2578, label %443, label %2579

; <label>:2579:                                   ; preds = %2575
  %2580 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 39), align 4
  %2581 = icmp slt i32 %2580, 0
  br i1 %2581, label %443, label %2582

; <label>:2582:                                   ; preds = %2579
  %2583 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 39), align 4
  %2584 = icmp sgt i32 %2583, 2
  br i1 %2584, label %443, label %.loopexit71.5

; <label>:2585:                                   ; preds = %.lr.ph141.5
  %2586 = load i8*, i8** @optarg, align 8
  %2587 = call i32 (i8*, i8*, ...) @sscanf(i8* %2586, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 33)) #9
  %2588 = icmp ne i32 %2587, 1
  br i1 %2588, label %421, label %2589

; <label>:2589:                                   ; preds = %2585
  %2590 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 33), align 8
  %2591 = icmp slt i32 %2590, 1
  br i1 %2591, label %421, label %2592

; <label>:2592:                                   ; preds = %2589
  %2593 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 13), align 8
  %2594 = sub nsw i32 %2593, 1
  %2595 = sext i32 %2594 to i64
  %2596 = getelementptr inbounds [17 x i32], [17 x i32]* @K_COEFF, i64 0, i64 %2595
  store i32 0, i32* %2596, align 4
  br label %.loopexit71.5

; <label>:2597:                                   ; preds = %.lr.ph141.5
  %2598 = load i8*, i8** @optarg, align 8
  %2599 = call i64 @strlen(i8* %2598) #10
  %2600 = add i64 %2599, 1
  %2601 = call noalias i8* @calloc(i64 1, i64 %2600) #9, !track !221
  store i8* %2601, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 42), align 8
  %2602 = load i8*, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 42), align 8
  %2603 = icmp eq i8* %2602, null
  br i1 %2603, label %405, label %2604

; <label>:2604:                                   ; preds = %2597
  %2605 = load i8*, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 42), align 8
  %2606 = load i8*, i8** @optarg, align 8
  %2607 = load i8*, i8** @optarg, align 8
  %2608 = call i64 @strlen(i8* %2607) #10
  %2609 = call i8* @strncpy(i8* %2605, i8* %2606, i64 %2608) #9, !track !222
  br label %.loopexit71.5

; <label>:2610:                                   ; preds = %.lr.ph141.5
  %2611 = load i8*, i8** @optarg, align 8
  %2612 = call i32 (i8*, i8*, ...) @sscanf(i8* %2611, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 13)) #9
  %2613 = icmp ne i32 %2612, 1
  br i1 %2613, label %386, label %2614

; <label>:2614:                                   ; preds = %2610
  %2615 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 13), align 8
  %2616 = icmp slt i32 %2615, 1
  br i1 %2616, label %386, label %2617

; <label>:2617:                                   ; preds = %2614
  %2618 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 13), align 8
  %2619 = icmp sgt i32 %2618, 17
  br i1 %2619, label %386, label %2620

; <label>:2620:                                   ; preds = %2617
  %2621 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 13), align 8
  %2622 = sub nsw i32 %2621, 1
  %2623 = sext i32 %2622 to i64
  %2624 = getelementptr inbounds [17 x i32], [17 x i32]* @K_COEFF, i64 0, i64 %2623
  store i32 0, i32* %2624, align 4
  br label %.loopexit71.5

; <label>:2625:                                   ; preds = %.lr.ph141.5
  %2626 = load i8*, i8** @optarg, align 8
  %2627 = call i32 (i8*, i8*, ...) @sscanf(i8* %2626, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.103, i64 0, i64 0), float* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 12)) #9
  %2628 = icmp ne i32 %2627, 1
  br i1 %2628, label %369, label %2629

; <label>:2629:                                   ; preds = %2625
  %2630 = load float, float* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 12), align 4
  %2631 = fcmp olt float %2630, 1.000000e+00
  br i1 %2631, label %369, label %.loopexit71.5

; <label>:2632:                                   ; preds = %.lr.ph141.5
  %2633 = load i8*, i8** @optarg, align 8
  %2634 = call i32 (i8*, i8*, ...) @sscanf(i8* %2633, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 11)) #9
  %2635 = icmp ne i32 %2634, 1
  br i1 %2635, label %355, label %2636

; <label>:2636:                                   ; preds = %2632
  %2637 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 11), align 8
  %2638 = icmp slt i32 %2637, 1
  br i1 %2638, label %355, label %2639

; <label>:2639:                                   ; preds = %2636
  %2640 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 11), align 8
  %2641 = icmp sgt i32 %2640, 4
  br i1 %2641, label %355, label %.loopexit71.5

; <label>:2642:                                   ; preds = %.lr.ph141.5
  %2643 = load i8*, i8** @optarg, align 8
  %2644 = call i32 (i8*, i8*, ...) @sscanf(i8* %2643, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10)) #9
  %2645 = icmp ne i32 %2644, 1
  br i1 %2645, label %334, label %2646

; <label>:2646:                                   ; preds = %2642
  %2647 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %2648 = icmp ne i32 %2647, 64
  br i1 %2648, label %2649, label %2661

; <label>:2649:                                   ; preds = %2646
  %2650 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %2651 = icmp ne i32 %2650, 128
  br i1 %2651, label %2652, label %2661

; <label>:2652:                                   ; preds = %2649
  %2653 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %2654 = icmp ne i32 %2653, 152
  br i1 %2654, label %2655, label %2661

; <label>:2655:                                   ; preds = %2652
  %2656 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %2657 = icmp ne i32 %2656, 256
  br i1 %2657, label %2658, label %2661

; <label>:2658:                                   ; preds = %2655
  %2659 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %2660 = icmp ne i32 %2659, 512
  br i1 %2660, label %334, label %2661

; <label>:2661:                                   ; preds = %2658, %2655, %2652, %2649, %2646
  %2662 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %2663 = sdiv i32 %2662, 8
  %2664 = sub nsw i32 %2663, 3
  store i32 %2664, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  br label %.loopexit71.5

; <label>:2665:                                   ; preds = %.lr.ph141.5
  %2666 = load i8*, i8** @optarg, align 8
  %2667 = call i32 @getmac(i8* %2666, i32 1, i8* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 9, i64 0))
  %2668 = icmp ne i32 %2667, 0
  br i1 %2668, label %308, label %.loopexit71.5

; <label>:2669:                                   ; preds = %.lr.ph141.5
  store i32 0, i32* %27, align 4
  %2670 = load i8*, i8** @optarg, align 8
  %2671 = load i8, i8* %2670, align 1
  %2672 = sext i8 %2671 to i32
  %2673 = icmp ne i32 %2672, 0
  br i1 %2673, label %.lr.ph136.preheader.5, label %._crit_edge137.5

.lr.ph136.preheader.5:                            ; preds = %2669
  br label %.lr.ph136.5

.lr.ph136.5:                                      ; preds = %2720, %.lr.ph136.preheader.5
  %.02134.5 = phi i32 [ %.13.5, %2720 ], [ 0, %.lr.ph136.preheader.5 ]
  call void @unroll_loop(i32 125)
  %2674 = sext i32 %.02134.5 to i64
  %2675 = getelementptr inbounds i8, i8* %2670, i64 %2674
  %2676 = load i8, i8* %2675, align 1
  %2677 = sext i8 %2676 to i32
  %2678 = icmp eq i32 %2677, 120
  br i1 %2678, label %2679, label %2682

; <label>:2679:                                   ; preds = %.lr.ph136.5
  %2680 = sext i32 %.02134.5 to i64
  %2681 = getelementptr inbounds i8, i8* %2670, i64 %2680
  store i8 88, i8* %2681, align 1
  br label %2682

; <label>:2682:                                   ; preds = %2679, %.lr.ph136.5
  %2683 = sext i32 %.02134.5 to i64
  %2684 = getelementptr inbounds i8, i8* %2670, i64 %2683
  %2685 = load i8, i8* %2684, align 1
  %2686 = sext i8 %2685 to i32
  %2687 = icmp eq i32 %2686, 121
  br i1 %2687, label %2688, label %2691

; <label>:2688:                                   ; preds = %2682
  %2689 = sext i32 %.02134.5 to i64
  %2690 = getelementptr inbounds i8, i8* %2670, i64 %2689
  store i8 89, i8* %2690, align 1
  br label %2691

; <label>:2691:                                   ; preds = %2688, %2682
  %2692 = sext i32 %.02134.5 to i64
  %2693 = getelementptr inbounds i8, i8* %2670, i64 %2692
  %2694 = load i8, i8* %2693, align 1
  %2695 = sext i8 %2694 to i32
  %2696 = icmp eq i32 %2695, 45
  br i1 %2696, label %2718, label %2697

; <label>:2697:                                   ; preds = %2691
  %2698 = sext i32 %.02134.5 to i64
  %2699 = getelementptr inbounds i8, i8* %2670, i64 %2698
  %2700 = load i8, i8* %2699, align 1
  %2701 = sext i8 %2700 to i32
  %2702 = icmp eq i32 %2701, 58
  br i1 %2702, label %2718, label %2703

; <label>:2703:                                   ; preds = %2697
  %2704 = sext i32 %.02134.5 to i64
  %2705 = getelementptr inbounds i8, i8* %2670, i64 %2704
  %2706 = load i8, i8* %2705, align 1
  %2707 = sext i8 %2706 to i32
  %2708 = icmp eq i32 %2707, 32
  br i1 %2708, label %2718, label %2709

; <label>:2709:                                   ; preds = %2703
  %2710 = add nsw i32 %.02134.5, 1
  %2711 = sext i32 %.02134.5 to i64
  %2712 = getelementptr inbounds i8, i8* %2670, i64 %2711
  %2713 = load i8, i8* %2712, align 1
  %2714 = load i32, i32* %27, align 4
  %2715 = add nsw i32 %2714, 1
  store i32 %2715, i32* %27, align 4
  %2716 = sext i32 %2714 to i64
  %2717 = getelementptr inbounds i8, i8* %2670, i64 %2716
  store i8 %2713, i8* %2717, align 1
  br label %2720

; <label>:2718:                                   ; preds = %2703, %2697, %2691
  %2719 = add nsw i32 %.02134.5, 1
  br label %2720

; <label>:2720:                                   ; preds = %2718, %2709
  %.13.5 = phi i32 [ %2719, %2718 ], [ %2710, %2709 ]
  %2721 = sext i32 %.13.5 to i64
  %2722 = getelementptr inbounds i8, i8* %2670, i64 %2721
  %2723 = load i8, i8* %2722, align 1
  %2724 = sext i8 %2723 to i32
  %2725 = icmp ne i32 %2724, 0
  br i1 %2725, label %.lr.ph136.5, label %._crit_edge137.loopexit.5

._crit_edge137.loopexit.5:                        ; preds = %2720
  br label %._crit_edge137.5

._crit_edge137.5:                                 ; preds = %._crit_edge137.loopexit.5, %2669
  %2726 = load i32, i32* %27, align 4
  %2727 = sext i32 %2726 to i64
  %2728 = getelementptr inbounds i8, i8* %2670, i64 %2727
  store i8 0, i8* %2728, align 1
  %2729 = load i8, i8* %2670, align 1
  store i8 %2729, i8* %61, align 16
  %2730 = getelementptr inbounds i8, i8* %2670, i64 1
  %2731 = load i8, i8* %2730, align 1
  store i8 %2731, i8* %62, align 1
  store i8 0, i8* %63, align 2
  %scevgep45.5 = getelementptr i8, i8* %2670, i64 3
  br label %2732

; <label>:2732:                                   ; preds = %2790, %._crit_edge137.5
  %lsr.iv48.5 = phi i8* [ %scevgep49.5, %2790 ], [ %scevgep45.5, %._crit_edge137.5 ]
  %.127.5 = phi i32 [ 0, %._crit_edge137.5 ], [ %.329.5, %2790 ]
  %.24.5 = phi i32 [ 0, %._crit_edge137.5 ], [ %.46.5, %2790 ]
  call void @unroll_loop(i32 126)
  %2733 = call i32 (i8*, i8*, ...) @sscanf(i8* %64, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.72, i64 0, i64 0), i32* %27) #9
  %2734 = icmp eq i32 %2733, 1
  br i1 %2734, label %.critedge.5, label %2735

; <label>:2735:                                   ; preds = %2732
  %2736 = load i8, i8* %66, align 16
  %2737 = sext i8 %2736 to i32
  %2738 = icmp eq i32 %2737, 88
  br i1 %2738, label %2739, label %2743

; <label>:2739:                                   ; preds = %2735
  %2740 = load i8, i8* %69, align 1
  %2741 = sext i8 %2740 to i32
  %2742 = icmp eq i32 %2741, 88
  br i1 %2742, label %.critedge.5, label %2743

; <label>:2743:                                   ; preds = %2739, %2735
  %2744 = load i8, i8* %70, align 16
  %2745 = sext i8 %2744 to i32
  %2746 = icmp eq i32 %2745, 89
  %2747 = load i8, i8* %71, align 1
  %2748 = sext i8 %2747 to i32
  %2749 = icmp eq i32 %2748, 89
  %2750 = select i1 %2746, i1 %2749, i1 false
  br i1 %2750, label %.critedge.5, label %.loopexit71.loopexit.5

.critedge.5:                                      ; preds = %2743, %2739, %2732
  %2751 = load i8, i8* %65, align 16
  %2752 = sext i8 %2751 to i32
  %2753 = icmp eq i32 %2752, 88
  br i1 %2753, label %2754, label %2758

; <label>:2754:                                   ; preds = %.critedge.5
  %2755 = load i8, i8* %67, align 1
  %2756 = sext i8 %2755 to i32
  %2757 = icmp eq i32 %2756, 88
  br i1 %2757, label %2784, label %2758

; <label>:2758:                                   ; preds = %2754, %.critedge.5
  %2759 = load i8, i8* %68, align 16
  %2760 = sext i8 %2759 to i32
  %2761 = icmp eq i32 %2760, 89
  br i1 %2761, label %2762, label %2766

; <label>:2762:                                   ; preds = %2758
  %2763 = load i8, i8* %74, align 1
  %2764 = sext i8 %2763 to i32
  %2765 = icmp eq i32 %2764, 89
  br i1 %2765, label %2779, label %2766

; <label>:2766:                                   ; preds = %2762, %2758
  %2767 = load i32, i32* %27, align 4
  %2768 = icmp slt i32 %2767, 0
  %2769 = load i32, i32* %27, align 4
  %2770 = icmp sgt i32 %2769, 255
  %or.cond.5 = or i1 %2768, %2770
  br i1 %or.cond.5, label %.loopexit7, label %2771

; <label>:2771:                                   ; preds = %2766
  %2772 = load i32, i32* %27, align 4
  %2773 = trunc i32 %2772 to i8
  %2774 = sext i32 %.24.5 to i64
  %2775 = getelementptr inbounds [64 x i8], [64 x i8]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 7), i64 0, i64 %2774
  store i8 %2773, i8* %2775, align 1
  %2776 = add nsw i32 %.24.5, 1
  %2777 = sext i32 %.24.5 to i64
  %2778 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 8), i64 0, i64 %2777
  store i32 1, i32* %2778, align 4
  br label %2788

; <label>:2779:                                   ; preds = %2762
  %2780 = add nsw i32 %.24.5, 1
  %2781 = add nsw i32 %.127.5, 1
  %2782 = sext i32 %.127.5 to i64
  %2783 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 31), i64 0, i64 %2782
  store i32 %.24.5, i32* %2783, align 4
  br label %2788

; <label>:2784:                                   ; preds = %2754
  %2785 = add nsw i32 %.24.5, 1
  %2786 = sext i32 %.24.5 to i64
  %2787 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 8), i64 0, i64 %2786
  store i32 0, i32* %2787, align 4
  br label %2788

; <label>:2788:                                   ; preds = %2784, %2779, %2771
  %.329.5 = phi i32 [ %.127.5, %2784 ], [ %2781, %2779 ], [ %.127.5, %2771 ]
  %.46.5 = phi i32 [ %2785, %2784 ], [ %2780, %2779 ], [ %2776, %2771 ]
  %2789 = icmp sge i32 %.46.5, 64
  br i1 %2789, label %.loopexit71.loopexit.5, label %2790

; <label>:2790:                                   ; preds = %2788
  %scevgep50.5 = getelementptr i8, i8* %lsr.iv48.5, i64 -1
  %2791 = load i8, i8* %scevgep50.5, align 1
  store i8 %2791, i8* %72, align 16
  %2792 = load i8, i8* %lsr.iv48.5, align 1
  store i8 %2792, i8* %73, align 1
  %scevgep49.5 = getelementptr i8, i8* %lsr.iv48.5, i64 2
  br label %2732

.loopexit71.loopexit.5:                           ; preds = %2788, %2743
  %.531.ph.5 = phi i32 [ %.329.5, %2788 ], [ %.127.5, %2743 ]
  br label %.loopexit71.5

; <label>:2793:                                   ; preds = %.lr.ph141.5
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 41), align 4
  br label %.loopexit71.5

; <label>:2794:                                   ; preds = %.lr.ph141.5
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 16), align 4
  br label %.loopexit71.5

; <label>:2795:                                   ; preds = %.lr.ph141.5
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 14), align 4
  br label %.loopexit71.5

; <label>:2796:                                   ; preds = %.lr.ph141.5
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 38), align 8
  br label %.loopexit71.5

; <label>:2797:                                   ; preds = %.lr.ph141.5
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 15), align 8
  br label %.loopexit71.5

; <label>:2798:                                   ; preds = %.lr.ph141.5
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 6), align 8
  br label %.loopexit71.5

; <label>:2799:                                   ; preds = %.lr.ph141.5
  %2800 = load i8*, i8** @optarg, align 8
  %2801 = call i32 (i8*, i8*, ...) @sscanf(i8* %2800, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 5)) #9
  %2802 = icmp ne i32 %2801, 1
  br i1 %2802, label %160, label %2803

; <label>:2803:                                   ; preds = %2799
  %2804 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 5), align 4
  %2805 = icmp slt i32 %2804, 1
  br i1 %2805, label %160, label %2806

; <label>:2806:                                   ; preds = %2803
  %2807 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 5), align 4
  %2808 = icmp sgt i32 %2807, 128
  br i1 %2808, label %160, label %.loopexit71.5

; <label>:2809:                                   ; preds = %.lr.ph141.5
  %2810 = load i8*, i8** @optarg, align 8
  %2811 = call i32 @getmac(i8* %2810, i32 1, i8* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 4, i64 0))
  %2812 = icmp ne i32 %2811, 0
  br i1 %2812, label %142, label %2813

; <label>:2813:                                   ; preds = %2809
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 2), align 8
  br label %.loopexit71.5

; <label>:2814:                                   ; preds = %.lr.ph141.5
  call void @llvm.memset.p0i8.i64(i8* align 4 getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 3, i64 0), i8 0, i64 33, i1 false)
  %2815 = load i8*, i8** @optarg, align 8
  %2816 = call i8* @strncpy(i8* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 3, i64 0), i8* %2815, i64 32) #9, !track !220
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 1), align 4
  br label %.loopexit71.5

; <label>:2817:                                   ; preds = %.lr.ph141.5
  %2818 = load i8*, i8** @optarg, align 8
  %2819 = call i32 (i8*, i8*, ...) @sscanf(i8* %2818, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 0)) #9
  %2820 = load i8*, i8** @optarg, align 8
  %2821 = call i32 @strcasecmp(i8* %2820, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.94, i64 0, i64 0)) #10
  %2822 = icmp eq i32 %2821, 0
  br i1 %2822, label %2828, label %2823

; <label>:2823:                                   ; preds = %2817
  %2824 = load i8*, i8** @optarg, align 8
  %2825 = call i32 @strcasecmp(i8* %2824, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.95, i64 0, i64 0)) #10
  %2826 = icmp eq i32 %2825, 0
  br i1 %2826, label %2827, label %2829

; <label>:2827:                                   ; preds = %2823
  store i32 2, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 0), align 8
  br label %2829

; <label>:2828:                                   ; preds = %2817
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 0), align 8
  br label %2829

; <label>:2829:                                   ; preds = %2828, %2827, %2823
  %2830 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 0), align 8
  %2831 = icmp ne i32 %2830, 1
  br i1 %2831, label %2832, label %.loopexit71.5

; <label>:2832:                                   ; preds = %2829
  %2833 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 0), align 8
  %2834 = icmp ne i32 %2833, 2
  br i1 %2834, label %128, label %.loopexit71.5

; <label>:2835:                                   ; preds = %.lr.ph141.5
  %2836 = icmp ne i32 %.134.4, 0
  br i1 %2836, label %102, label %2837

; <label>:2837:                                   ; preds = %2835
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 40), align 8
  store i32 0, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 20), align 4
  br label %.loopexit71.5

.loopexit71.5:                                    ; preds = %2837, %2832, %2829, %2814, %2813, %2806, %2798, %2797, %2796, %2795, %2794, %2793, %.loopexit71.loopexit.5, %2665, %2661, %2639, %2629, %2620, %2604, %2592, %2582, %2572, %2562, %2561, %2560, %2559, %2558, %2554, %2553, %2551, %2549, %2540
  %.134.5 = phi i32 [ %.134.4, %2553 ], [ %.134.4, %2558 ], [ %.134.4, %2559 ], [ %.134.4, %2560 ], [ %.134.4, %2561 ], [ %.134.4, %2592 ], [ %.134.4, %2604 ], [ %.134.4, %2620 ], [ %.134.4, %2661 ], [ %.134.4, %2793 ], [ %.134.4, %2794 ], [ %.134.4, %2795 ], [ %.134.4, %2796 ], [ %.134.4, %2797 ], [ %.134.4, %2798 ], [ %.134.4, %2813 ], [ %.134.4, %2814 ], [ %.134.4, %2837 ], [ %.134.4, %2832 ], [ %.134.4, %2829 ], [ %.134.4, %2806 ], [ %.134.4, %2665 ], [ %.134.4, %2639 ], [ %.134.4, %2629 ], [ %.134.4, %2582 ], [ %.134.4, %2572 ], [ %.134.4, %2562 ], [ %.134.4, %2554 ], [ %.134.4, %2549 ], [ %.134.4, %2551 ], [ 1, %2540 ], [ %.134.4, %.loopexit71.loopexit.5 ]
  %.531.5 = phi i32 [ %.531.4, %2553 ], [ %.531.4, %2558 ], [ %.531.4, %2559 ], [ %.531.4, %2560 ], [ %.531.4, %2561 ], [ %.531.4, %2592 ], [ %.531.4, %2604 ], [ %.531.4, %2620 ], [ %.531.4, %2661 ], [ %.531.4, %2793 ], [ %.531.4, %2794 ], [ %.531.4, %2795 ], [ %.531.4, %2796 ], [ %.531.4, %2797 ], [ %.531.4, %2798 ], [ %.531.4, %2813 ], [ %.531.4, %2814 ], [ %.531.4, %2837 ], [ %.531.4, %2832 ], [ %.531.4, %2829 ], [ %.531.4, %2806 ], [ %.531.4, %2665 ], [ %.531.4, %2639 ], [ %.531.4, %2629 ], [ %.531.4, %2582 ], [ %.531.4, %2572 ], [ %.531.4, %2562 ], [ %.531.4, %2554 ], [ %.531.4, %2549 ], [ %.531.4, %2551 ], [ %.531.4, %2540 ], [ %.531.ph.5, %.loopexit71.loopexit.5 ]
  call void @__loop_iteration_test___0()
  store i32 0, i32* %30, align 4
  %2838 = call i32 @getopt_long(i32 4, i8** %25, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.86, i64 0, i64 0), %struct.option* getelementptr inbounds ([10 x %struct.option], [10 x %struct.option]* @main.long_options, i64 0, i64 0), i32* %30) #9, !track_argc !219
  %2839 = icmp slt i32 %2838, 0
  br i1 %2839, label %._crit_edge142.loopexit, label %.lr.ph141.6

.lr.ph141.6:                                      ; preds = %.loopexit71.5
  call void @unroll_loop(i32 124)
  switch i32 %2838, label %.loopexit1 [
    i32 58, label %75
    i32 63, label %80
    i32 117, label %85
    i32 86, label %3135
    i32 97, label %3117
    i32 101, label %3114
    i32 98, label %3109
    i32 112, label %3099
    i32 113, label %3098
    i32 99, label %3097
    i32 68, label %3096
    i32 104, label %3095
    i32 116, label %3094
    i32 49, label %3093
    i32 100, label %2969
    i32 109, label %2965
    i32 110, label %2942
    i32 105, label %2932
    i32 102, label %2925
    i32 107, label %2910
    i32 108, label %2897
    i32 77, label %2885
    i32 80, label %2875
    i32 120, label %2862
    i32 88, label %2861
    i32 121, label %2860
    i32 75, label %2859
    i32 115, label %2858
    i32 119, label %2854
    i32 114, label %484
    i32 48, label %2853
    i32 72, label %.loopexit13
    i32 67, label %2843
    i32 122, label %2840
  ]

; <label>:2840:                                   ; preds = %.lr.ph141.6
  %2841 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 40), align 8
  %2842 = icmp ne i32 %2841, 0
  br i1 %2842, label %507, label %.loopexit71.6

; <label>:2843:                                   ; preds = %.lr.ph141.6
  %2844 = load i8*, i8** @optarg, align 8
  %2845 = call i32 @checkbssids(i8* %2844)
  %2846 = icmp slt i32 %2845, 1
  br i1 %2846, label %493, label %2847

; <label>:2847:                                   ; preds = %2843
  %2848 = icmp eq i32 %2845, 1
  br i1 %2848, label %2851, label %2849

; <label>:2849:                                   ; preds = %2847
  %2850 = load i8*, i8** @optarg, align 8
  store i8* %2850, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 34), align 8
  br label %.loopexit71.6

; <label>:2851:                                   ; preds = %2847
  %2852 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.112, i64 0, i64 0))
  br label %.loopexit71.6

; <label>:2853:                                   ; preds = %.lr.ph141.6
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 27), align 4
  br label %.loopexit71.6

; <label>:2854:                                   ; preds = %.lr.ph141.6
  %2855 = load i8*, i8** @optarg, align 8
  %2856 = call i32 @set_dicts(i8* %2855)
  %2857 = icmp ne i32 %2856, 0
  br i1 %2857, label %479, label %.loopexit71.6

; <label>:2858:                                   ; preds = %.lr.ph141.6
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 26), align 8
  br label %.loopexit71.6

; <label>:2859:                                   ; preds = %.lr.ph141.6
  store i32 0, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 20), align 4
  br label %.loopexit71.6

; <label>:2860:                                   ; preds = %.lr.ph141.6
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 19), align 8
  br label %.loopexit71.6

; <label>:2861:                                   ; preds = %.lr.ph141.6
  store i32 0, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 18), align 4
  br label %.loopexit71.6

; <label>:2862:                                   ; preds = %.lr.ph141.6
  store i32 0, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 17), align 8
  %2863 = load i8*, i8** @optarg, align 8
  %2864 = icmp ne i8* %2863, null
  br i1 %2864, label %2865, label %.loopexit71.6

; <label>:2865:                                   ; preds = %2862
  %2866 = load i8*, i8** @optarg, align 8
  %2867 = call i32 (i8*, i8*, ...) @sscanf(i8* %2866, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 17)) #9
  %2868 = icmp ne i32 %2867, 1
  br i1 %2868, label %463, label %2869

; <label>:2869:                                   ; preds = %2865
  %2870 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 17), align 8
  %2871 = icmp slt i32 %2870, 0
  br i1 %2871, label %463, label %2872

; <label>:2872:                                   ; preds = %2869
  %2873 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 17), align 8
  %2874 = icmp sgt i32 %2873, 4
  br i1 %2874, label %463, label %.loopexit71.6

; <label>:2875:                                   ; preds = %.lr.ph141.6
  %2876 = load i8*, i8** @optarg, align 8
  %2877 = call i32 (i8*, i8*, ...) @sscanf(i8* %2876, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 39)) #9
  %2878 = icmp ne i32 %2877, 1
  br i1 %2878, label %443, label %2879

; <label>:2879:                                   ; preds = %2875
  %2880 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 39), align 4
  %2881 = icmp slt i32 %2880, 0
  br i1 %2881, label %443, label %2882

; <label>:2882:                                   ; preds = %2879
  %2883 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 39), align 4
  %2884 = icmp sgt i32 %2883, 2
  br i1 %2884, label %443, label %.loopexit71.6

; <label>:2885:                                   ; preds = %.lr.ph141.6
  %2886 = load i8*, i8** @optarg, align 8
  %2887 = call i32 (i8*, i8*, ...) @sscanf(i8* %2886, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 33)) #9
  %2888 = icmp ne i32 %2887, 1
  br i1 %2888, label %421, label %2889

; <label>:2889:                                   ; preds = %2885
  %2890 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 33), align 8
  %2891 = icmp slt i32 %2890, 1
  br i1 %2891, label %421, label %2892

; <label>:2892:                                   ; preds = %2889
  %2893 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 13), align 8
  %2894 = sub nsw i32 %2893, 1
  %2895 = sext i32 %2894 to i64
  %2896 = getelementptr inbounds [17 x i32], [17 x i32]* @K_COEFF, i64 0, i64 %2895
  store i32 0, i32* %2896, align 4
  br label %.loopexit71.6

; <label>:2897:                                   ; preds = %.lr.ph141.6
  %2898 = load i8*, i8** @optarg, align 8
  %2899 = call i64 @strlen(i8* %2898) #10
  %2900 = add i64 %2899, 1
  %2901 = call noalias i8* @calloc(i64 1, i64 %2900) #9, !track !221
  store i8* %2901, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 42), align 8
  %2902 = load i8*, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 42), align 8
  %2903 = icmp eq i8* %2902, null
  br i1 %2903, label %405, label %2904

; <label>:2904:                                   ; preds = %2897
  %2905 = load i8*, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 42), align 8
  %2906 = load i8*, i8** @optarg, align 8
  %2907 = load i8*, i8** @optarg, align 8
  %2908 = call i64 @strlen(i8* %2907) #10
  %2909 = call i8* @strncpy(i8* %2905, i8* %2906, i64 %2908) #9, !track !222
  br label %.loopexit71.6

; <label>:2910:                                   ; preds = %.lr.ph141.6
  %2911 = load i8*, i8** @optarg, align 8
  %2912 = call i32 (i8*, i8*, ...) @sscanf(i8* %2911, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 13)) #9
  %2913 = icmp ne i32 %2912, 1
  br i1 %2913, label %386, label %2914

; <label>:2914:                                   ; preds = %2910
  %2915 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 13), align 8
  %2916 = icmp slt i32 %2915, 1
  br i1 %2916, label %386, label %2917

; <label>:2917:                                   ; preds = %2914
  %2918 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 13), align 8
  %2919 = icmp sgt i32 %2918, 17
  br i1 %2919, label %386, label %2920

; <label>:2920:                                   ; preds = %2917
  %2921 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 13), align 8
  %2922 = sub nsw i32 %2921, 1
  %2923 = sext i32 %2922 to i64
  %2924 = getelementptr inbounds [17 x i32], [17 x i32]* @K_COEFF, i64 0, i64 %2923
  store i32 0, i32* %2924, align 4
  br label %.loopexit71.6

; <label>:2925:                                   ; preds = %.lr.ph141.6
  %2926 = load i8*, i8** @optarg, align 8
  %2927 = call i32 (i8*, i8*, ...) @sscanf(i8* %2926, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.103, i64 0, i64 0), float* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 12)) #9
  %2928 = icmp ne i32 %2927, 1
  br i1 %2928, label %369, label %2929

; <label>:2929:                                   ; preds = %2925
  %2930 = load float, float* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 12), align 4
  %2931 = fcmp olt float %2930, 1.000000e+00
  br i1 %2931, label %369, label %.loopexit71.6

; <label>:2932:                                   ; preds = %.lr.ph141.6
  %2933 = load i8*, i8** @optarg, align 8
  %2934 = call i32 (i8*, i8*, ...) @sscanf(i8* %2933, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 11)) #9
  %2935 = icmp ne i32 %2934, 1
  br i1 %2935, label %355, label %2936

; <label>:2936:                                   ; preds = %2932
  %2937 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 11), align 8
  %2938 = icmp slt i32 %2937, 1
  br i1 %2938, label %355, label %2939

; <label>:2939:                                   ; preds = %2936
  %2940 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 11), align 8
  %2941 = icmp sgt i32 %2940, 4
  br i1 %2941, label %355, label %.loopexit71.6

; <label>:2942:                                   ; preds = %.lr.ph141.6
  %2943 = load i8*, i8** @optarg, align 8
  %2944 = call i32 (i8*, i8*, ...) @sscanf(i8* %2943, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10)) #9
  %2945 = icmp ne i32 %2944, 1
  br i1 %2945, label %334, label %2946

; <label>:2946:                                   ; preds = %2942
  %2947 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %2948 = icmp ne i32 %2947, 64
  br i1 %2948, label %2949, label %2961

; <label>:2949:                                   ; preds = %2946
  %2950 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %2951 = icmp ne i32 %2950, 128
  br i1 %2951, label %2952, label %2961

; <label>:2952:                                   ; preds = %2949
  %2953 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %2954 = icmp ne i32 %2953, 152
  br i1 %2954, label %2955, label %2961

; <label>:2955:                                   ; preds = %2952
  %2956 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %2957 = icmp ne i32 %2956, 256
  br i1 %2957, label %2958, label %2961

; <label>:2958:                                   ; preds = %2955
  %2959 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %2960 = icmp ne i32 %2959, 512
  br i1 %2960, label %334, label %2961

; <label>:2961:                                   ; preds = %2958, %2955, %2952, %2949, %2946
  %2962 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %2963 = sdiv i32 %2962, 8
  %2964 = sub nsw i32 %2963, 3
  store i32 %2964, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  br label %.loopexit71.6

; <label>:2965:                                   ; preds = %.lr.ph141.6
  %2966 = load i8*, i8** @optarg, align 8
  %2967 = call i32 @getmac(i8* %2966, i32 1, i8* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 9, i64 0))
  %2968 = icmp ne i32 %2967, 0
  br i1 %2968, label %308, label %.loopexit71.6

; <label>:2969:                                   ; preds = %.lr.ph141.6
  store i32 0, i32* %27, align 4
  %2970 = load i8*, i8** @optarg, align 8
  %2971 = load i8, i8* %2970, align 1
  %2972 = sext i8 %2971 to i32
  %2973 = icmp ne i32 %2972, 0
  br i1 %2973, label %.lr.ph136.preheader.6, label %._crit_edge137.6

.lr.ph136.preheader.6:                            ; preds = %2969
  br label %.lr.ph136.6

.lr.ph136.6:                                      ; preds = %3020, %.lr.ph136.preheader.6
  %.02134.6 = phi i32 [ %.13.6, %3020 ], [ 0, %.lr.ph136.preheader.6 ]
  call void @unroll_loop(i32 125)
  %2974 = sext i32 %.02134.6 to i64
  %2975 = getelementptr inbounds i8, i8* %2970, i64 %2974
  %2976 = load i8, i8* %2975, align 1
  %2977 = sext i8 %2976 to i32
  %2978 = icmp eq i32 %2977, 120
  br i1 %2978, label %2979, label %2982

; <label>:2979:                                   ; preds = %.lr.ph136.6
  %2980 = sext i32 %.02134.6 to i64
  %2981 = getelementptr inbounds i8, i8* %2970, i64 %2980
  store i8 88, i8* %2981, align 1
  br label %2982

; <label>:2982:                                   ; preds = %2979, %.lr.ph136.6
  %2983 = sext i32 %.02134.6 to i64
  %2984 = getelementptr inbounds i8, i8* %2970, i64 %2983
  %2985 = load i8, i8* %2984, align 1
  %2986 = sext i8 %2985 to i32
  %2987 = icmp eq i32 %2986, 121
  br i1 %2987, label %2988, label %2991

; <label>:2988:                                   ; preds = %2982
  %2989 = sext i32 %.02134.6 to i64
  %2990 = getelementptr inbounds i8, i8* %2970, i64 %2989
  store i8 89, i8* %2990, align 1
  br label %2991

; <label>:2991:                                   ; preds = %2988, %2982
  %2992 = sext i32 %.02134.6 to i64
  %2993 = getelementptr inbounds i8, i8* %2970, i64 %2992
  %2994 = load i8, i8* %2993, align 1
  %2995 = sext i8 %2994 to i32
  %2996 = icmp eq i32 %2995, 45
  br i1 %2996, label %3018, label %2997

; <label>:2997:                                   ; preds = %2991
  %2998 = sext i32 %.02134.6 to i64
  %2999 = getelementptr inbounds i8, i8* %2970, i64 %2998
  %3000 = load i8, i8* %2999, align 1
  %3001 = sext i8 %3000 to i32
  %3002 = icmp eq i32 %3001, 58
  br i1 %3002, label %3018, label %3003

; <label>:3003:                                   ; preds = %2997
  %3004 = sext i32 %.02134.6 to i64
  %3005 = getelementptr inbounds i8, i8* %2970, i64 %3004
  %3006 = load i8, i8* %3005, align 1
  %3007 = sext i8 %3006 to i32
  %3008 = icmp eq i32 %3007, 32
  br i1 %3008, label %3018, label %3009

; <label>:3009:                                   ; preds = %3003
  %3010 = add nsw i32 %.02134.6, 1
  %3011 = sext i32 %.02134.6 to i64
  %3012 = getelementptr inbounds i8, i8* %2970, i64 %3011
  %3013 = load i8, i8* %3012, align 1
  %3014 = load i32, i32* %27, align 4
  %3015 = add nsw i32 %3014, 1
  store i32 %3015, i32* %27, align 4
  %3016 = sext i32 %3014 to i64
  %3017 = getelementptr inbounds i8, i8* %2970, i64 %3016
  store i8 %3013, i8* %3017, align 1
  br label %3020

; <label>:3018:                                   ; preds = %3003, %2997, %2991
  %3019 = add nsw i32 %.02134.6, 1
  br label %3020

; <label>:3020:                                   ; preds = %3018, %3009
  %.13.6 = phi i32 [ %3019, %3018 ], [ %3010, %3009 ]
  %3021 = sext i32 %.13.6 to i64
  %3022 = getelementptr inbounds i8, i8* %2970, i64 %3021
  %3023 = load i8, i8* %3022, align 1
  %3024 = sext i8 %3023 to i32
  %3025 = icmp ne i32 %3024, 0
  br i1 %3025, label %.lr.ph136.6, label %._crit_edge137.loopexit.6

._crit_edge137.loopexit.6:                        ; preds = %3020
  br label %._crit_edge137.6

._crit_edge137.6:                                 ; preds = %._crit_edge137.loopexit.6, %2969
  %3026 = load i32, i32* %27, align 4
  %3027 = sext i32 %3026 to i64
  %3028 = getelementptr inbounds i8, i8* %2970, i64 %3027
  store i8 0, i8* %3028, align 1
  %3029 = load i8, i8* %2970, align 1
  store i8 %3029, i8* %61, align 16
  %3030 = getelementptr inbounds i8, i8* %2970, i64 1
  %3031 = load i8, i8* %3030, align 1
  store i8 %3031, i8* %62, align 1
  store i8 0, i8* %63, align 2
  %scevgep45.6 = getelementptr i8, i8* %2970, i64 3
  br label %3032

; <label>:3032:                                   ; preds = %3090, %._crit_edge137.6
  %lsr.iv48.6 = phi i8* [ %scevgep49.6, %3090 ], [ %scevgep45.6, %._crit_edge137.6 ]
  %.127.6 = phi i32 [ 0, %._crit_edge137.6 ], [ %.329.6, %3090 ]
  %.24.6 = phi i32 [ 0, %._crit_edge137.6 ], [ %.46.6, %3090 ]
  call void @unroll_loop(i32 126)
  %3033 = call i32 (i8*, i8*, ...) @sscanf(i8* %64, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.72, i64 0, i64 0), i32* %27) #9
  %3034 = icmp eq i32 %3033, 1
  br i1 %3034, label %.critedge.6, label %3035

; <label>:3035:                                   ; preds = %3032
  %3036 = load i8, i8* %66, align 16
  %3037 = sext i8 %3036 to i32
  %3038 = icmp eq i32 %3037, 88
  br i1 %3038, label %3039, label %3043

; <label>:3039:                                   ; preds = %3035
  %3040 = load i8, i8* %69, align 1
  %3041 = sext i8 %3040 to i32
  %3042 = icmp eq i32 %3041, 88
  br i1 %3042, label %.critedge.6, label %3043

; <label>:3043:                                   ; preds = %3039, %3035
  %3044 = load i8, i8* %70, align 16
  %3045 = sext i8 %3044 to i32
  %3046 = icmp eq i32 %3045, 89
  %3047 = load i8, i8* %71, align 1
  %3048 = sext i8 %3047 to i32
  %3049 = icmp eq i32 %3048, 89
  %3050 = select i1 %3046, i1 %3049, i1 false
  br i1 %3050, label %.critedge.6, label %.loopexit71.loopexit.6

.critedge.6:                                      ; preds = %3043, %3039, %3032
  %3051 = load i8, i8* %65, align 16
  %3052 = sext i8 %3051 to i32
  %3053 = icmp eq i32 %3052, 88
  br i1 %3053, label %3054, label %3058

; <label>:3054:                                   ; preds = %.critedge.6
  %3055 = load i8, i8* %67, align 1
  %3056 = sext i8 %3055 to i32
  %3057 = icmp eq i32 %3056, 88
  br i1 %3057, label %3084, label %3058

; <label>:3058:                                   ; preds = %3054, %.critedge.6
  %3059 = load i8, i8* %68, align 16
  %3060 = sext i8 %3059 to i32
  %3061 = icmp eq i32 %3060, 89
  br i1 %3061, label %3062, label %3066

; <label>:3062:                                   ; preds = %3058
  %3063 = load i8, i8* %74, align 1
  %3064 = sext i8 %3063 to i32
  %3065 = icmp eq i32 %3064, 89
  br i1 %3065, label %3079, label %3066

; <label>:3066:                                   ; preds = %3062, %3058
  %3067 = load i32, i32* %27, align 4
  %3068 = icmp slt i32 %3067, 0
  %3069 = load i32, i32* %27, align 4
  %3070 = icmp sgt i32 %3069, 255
  %or.cond.6 = or i1 %3068, %3070
  br i1 %or.cond.6, label %.loopexit10, label %3071

; <label>:3071:                                   ; preds = %3066
  %3072 = load i32, i32* %27, align 4
  %3073 = trunc i32 %3072 to i8
  %3074 = sext i32 %.24.6 to i64
  %3075 = getelementptr inbounds [64 x i8], [64 x i8]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 7), i64 0, i64 %3074
  store i8 %3073, i8* %3075, align 1
  %3076 = add nsw i32 %.24.6, 1
  %3077 = sext i32 %.24.6 to i64
  %3078 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 8), i64 0, i64 %3077
  store i32 1, i32* %3078, align 4
  br label %3088

; <label>:3079:                                   ; preds = %3062
  %3080 = add nsw i32 %.24.6, 1
  %3081 = add nsw i32 %.127.6, 1
  %3082 = sext i32 %.127.6 to i64
  %3083 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 31), i64 0, i64 %3082
  store i32 %.24.6, i32* %3083, align 4
  br label %3088

; <label>:3084:                                   ; preds = %3054
  %3085 = add nsw i32 %.24.6, 1
  %3086 = sext i32 %.24.6 to i64
  %3087 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 8), i64 0, i64 %3086
  store i32 0, i32* %3087, align 4
  br label %3088

; <label>:3088:                                   ; preds = %3084, %3079, %3071
  %.329.6 = phi i32 [ %.127.6, %3084 ], [ %3081, %3079 ], [ %.127.6, %3071 ]
  %.46.6 = phi i32 [ %3085, %3084 ], [ %3080, %3079 ], [ %3076, %3071 ]
  %3089 = icmp sge i32 %.46.6, 64
  br i1 %3089, label %.loopexit71.loopexit.6, label %3090

; <label>:3090:                                   ; preds = %3088
  %scevgep50.6 = getelementptr i8, i8* %lsr.iv48.6, i64 -1
  %3091 = load i8, i8* %scevgep50.6, align 1
  store i8 %3091, i8* %72, align 16
  %3092 = load i8, i8* %lsr.iv48.6, align 1
  store i8 %3092, i8* %73, align 1
  %scevgep49.6 = getelementptr i8, i8* %lsr.iv48.6, i64 2
  br label %3032

.loopexit71.loopexit.6:                           ; preds = %3088, %3043
  %.531.ph.6 = phi i32 [ %.329.6, %3088 ], [ %.127.6, %3043 ]
  br label %.loopexit71.6

; <label>:3093:                                   ; preds = %.lr.ph141.6
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 41), align 4
  br label %.loopexit71.6

; <label>:3094:                                   ; preds = %.lr.ph141.6
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 16), align 4
  br label %.loopexit71.6

; <label>:3095:                                   ; preds = %.lr.ph141.6
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 14), align 4
  br label %.loopexit71.6

; <label>:3096:                                   ; preds = %.lr.ph141.6
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 38), align 8
  br label %.loopexit71.6

; <label>:3097:                                   ; preds = %.lr.ph141.6
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 15), align 8
  br label %.loopexit71.6

; <label>:3098:                                   ; preds = %.lr.ph141.6
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 6), align 8
  br label %.loopexit71.6

; <label>:3099:                                   ; preds = %.lr.ph141.6
  %3100 = load i8*, i8** @optarg, align 8
  %3101 = call i32 (i8*, i8*, ...) @sscanf(i8* %3100, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 5)) #9
  %3102 = icmp ne i32 %3101, 1
  br i1 %3102, label %160, label %3103

; <label>:3103:                                   ; preds = %3099
  %3104 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 5), align 4
  %3105 = icmp slt i32 %3104, 1
  br i1 %3105, label %160, label %3106

; <label>:3106:                                   ; preds = %3103
  %3107 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 5), align 4
  %3108 = icmp sgt i32 %3107, 128
  br i1 %3108, label %160, label %.loopexit71.6

; <label>:3109:                                   ; preds = %.lr.ph141.6
  %3110 = load i8*, i8** @optarg, align 8
  %3111 = call i32 @getmac(i8* %3110, i32 1, i8* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 4, i64 0))
  %3112 = icmp ne i32 %3111, 0
  br i1 %3112, label %142, label %3113

; <label>:3113:                                   ; preds = %3109
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 2), align 8
  br label %.loopexit71.6

; <label>:3114:                                   ; preds = %.lr.ph141.6
  call void @llvm.memset.p0i8.i64(i8* align 4 getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 3, i64 0), i8 0, i64 33, i1 false)
  %3115 = load i8*, i8** @optarg, align 8
  %3116 = call i8* @strncpy(i8* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 3, i64 0), i8* %3115, i64 32) #9, !track !220
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 1), align 4
  br label %.loopexit71.6

; <label>:3117:                                   ; preds = %.lr.ph141.6
  %3118 = load i8*, i8** @optarg, align 8
  %3119 = call i32 (i8*, i8*, ...) @sscanf(i8* %3118, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 0)) #9
  %3120 = load i8*, i8** @optarg, align 8
  %3121 = call i32 @strcasecmp(i8* %3120, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.94, i64 0, i64 0)) #10
  %3122 = icmp eq i32 %3121, 0
  br i1 %3122, label %3128, label %3123

; <label>:3123:                                   ; preds = %3117
  %3124 = load i8*, i8** @optarg, align 8
  %3125 = call i32 @strcasecmp(i8* %3124, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.95, i64 0, i64 0)) #10
  %3126 = icmp eq i32 %3125, 0
  br i1 %3126, label %3127, label %3129

; <label>:3127:                                   ; preds = %3123
  store i32 2, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 0), align 8
  br label %3129

; <label>:3128:                                   ; preds = %3117
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 0), align 8
  br label %3129

; <label>:3129:                                   ; preds = %3128, %3127, %3123
  %3130 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 0), align 8
  %3131 = icmp ne i32 %3130, 1
  br i1 %3131, label %3132, label %.loopexit71.6

; <label>:3132:                                   ; preds = %3129
  %3133 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 0), align 8
  %3134 = icmp ne i32 %3133, 2
  br i1 %3134, label %128, label %.loopexit71.6

; <label>:3135:                                   ; preds = %.lr.ph141.6
  %3136 = icmp ne i32 %.134.5, 0
  br i1 %3136, label %102, label %3137

; <label>:3137:                                   ; preds = %3135
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 40), align 8
  store i32 0, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 20), align 4
  br label %.loopexit71.6

.loopexit71.6:                                    ; preds = %3137, %3132, %3129, %3114, %3113, %3106, %3098, %3097, %3096, %3095, %3094, %3093, %.loopexit71.loopexit.6, %2965, %2961, %2939, %2929, %2920, %2904, %2892, %2882, %2872, %2862, %2861, %2860, %2859, %2858, %2854, %2853, %2851, %2849, %2840
  %.134.6 = phi i32 [ %.134.5, %2853 ], [ %.134.5, %2858 ], [ %.134.5, %2859 ], [ %.134.5, %2860 ], [ %.134.5, %2861 ], [ %.134.5, %2892 ], [ %.134.5, %2904 ], [ %.134.5, %2920 ], [ %.134.5, %2961 ], [ %.134.5, %3093 ], [ %.134.5, %3094 ], [ %.134.5, %3095 ], [ %.134.5, %3096 ], [ %.134.5, %3097 ], [ %.134.5, %3098 ], [ %.134.5, %3113 ], [ %.134.5, %3114 ], [ %.134.5, %3137 ], [ %.134.5, %3132 ], [ %.134.5, %3129 ], [ %.134.5, %3106 ], [ %.134.5, %2965 ], [ %.134.5, %2939 ], [ %.134.5, %2929 ], [ %.134.5, %2882 ], [ %.134.5, %2872 ], [ %.134.5, %2862 ], [ %.134.5, %2854 ], [ %.134.5, %2849 ], [ %.134.5, %2851 ], [ 1, %2840 ], [ %.134.5, %.loopexit71.loopexit.6 ]
  %.531.6 = phi i32 [ %.531.5, %2853 ], [ %.531.5, %2858 ], [ %.531.5, %2859 ], [ %.531.5, %2860 ], [ %.531.5, %2861 ], [ %.531.5, %2892 ], [ %.531.5, %2904 ], [ %.531.5, %2920 ], [ %.531.5, %2961 ], [ %.531.5, %3093 ], [ %.531.5, %3094 ], [ %.531.5, %3095 ], [ %.531.5, %3096 ], [ %.531.5, %3097 ], [ %.531.5, %3098 ], [ %.531.5, %3113 ], [ %.531.5, %3114 ], [ %.531.5, %3137 ], [ %.531.5, %3132 ], [ %.531.5, %3129 ], [ %.531.5, %3106 ], [ %.531.5, %2965 ], [ %.531.5, %2939 ], [ %.531.5, %2929 ], [ %.531.5, %2882 ], [ %.531.5, %2872 ], [ %.531.5, %2862 ], [ %.531.5, %2854 ], [ %.531.5, %2849 ], [ %.531.5, %2851 ], [ %.531.5, %2840 ], [ %.531.ph.6, %.loopexit71.loopexit.6 ]
  call void @__loop_iteration_test___0()
  store i32 0, i32* %30, align 4
  %3138 = call i32 @getopt_long(i32 4, i8** %25, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.86, i64 0, i64 0), %struct.option* getelementptr inbounds ([10 x %struct.option], [10 x %struct.option]* @main.long_options, i64 0, i64 0), i32* %30) #9, !track_argc !219
  %3139 = icmp slt i32 %3138, 0
  br i1 %3139, label %._crit_edge142.loopexit, label %.lr.ph141.7

.lr.ph141.7:                                      ; preds = %.loopexit71.6
  call void @unroll_loop(i32 124)
  switch i32 %3138, label %.loopexit1 [
    i32 58, label %75
    i32 63, label %80
    i32 117, label %85
    i32 86, label %3435
    i32 97, label %3417
    i32 101, label %3414
    i32 98, label %3409
    i32 112, label %3399
    i32 113, label %3398
    i32 99, label %3397
    i32 68, label %3396
    i32 104, label %3395
    i32 116, label %3394
    i32 49, label %3393
    i32 100, label %3269
    i32 109, label %3265
    i32 110, label %3242
    i32 105, label %3232
    i32 102, label %3225
    i32 107, label %3210
    i32 108, label %3197
    i32 77, label %3185
    i32 80, label %3175
    i32 120, label %3162
    i32 88, label %3161
    i32 121, label %3160
    i32 75, label %3159
    i32 115, label %3158
    i32 119, label %3154
    i32 114, label %484
    i32 48, label %3153
    i32 72, label %.loopexit13
    i32 67, label %3143
    i32 122, label %3140
  ]

; <label>:3140:                                   ; preds = %.lr.ph141.7
  %3141 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 40), align 8
  %3142 = icmp ne i32 %3141, 0
  br i1 %3142, label %507, label %.loopexit71.7

; <label>:3143:                                   ; preds = %.lr.ph141.7
  %3144 = load i8*, i8** @optarg, align 8
  %3145 = call i32 @checkbssids(i8* %3144)
  %3146 = icmp slt i32 %3145, 1
  br i1 %3146, label %493, label %3147

; <label>:3147:                                   ; preds = %3143
  %3148 = icmp eq i32 %3145, 1
  br i1 %3148, label %3151, label %3149

; <label>:3149:                                   ; preds = %3147
  %3150 = load i8*, i8** @optarg, align 8
  store i8* %3150, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 34), align 8
  br label %.loopexit71.7

; <label>:3151:                                   ; preds = %3147
  %3152 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.112, i64 0, i64 0))
  br label %.loopexit71.7

; <label>:3153:                                   ; preds = %.lr.ph141.7
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 27), align 4
  br label %.loopexit71.7

; <label>:3154:                                   ; preds = %.lr.ph141.7
  %3155 = load i8*, i8** @optarg, align 8
  %3156 = call i32 @set_dicts(i8* %3155)
  %3157 = icmp ne i32 %3156, 0
  br i1 %3157, label %479, label %.loopexit71.7

; <label>:3158:                                   ; preds = %.lr.ph141.7
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 26), align 8
  br label %.loopexit71.7

; <label>:3159:                                   ; preds = %.lr.ph141.7
  store i32 0, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 20), align 4
  br label %.loopexit71.7

; <label>:3160:                                   ; preds = %.lr.ph141.7
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 19), align 8
  br label %.loopexit71.7

; <label>:3161:                                   ; preds = %.lr.ph141.7
  store i32 0, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 18), align 4
  br label %.loopexit71.7

; <label>:3162:                                   ; preds = %.lr.ph141.7
  store i32 0, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 17), align 8
  %3163 = load i8*, i8** @optarg, align 8
  %3164 = icmp ne i8* %3163, null
  br i1 %3164, label %3165, label %.loopexit71.7

; <label>:3165:                                   ; preds = %3162
  %3166 = load i8*, i8** @optarg, align 8
  %3167 = call i32 (i8*, i8*, ...) @sscanf(i8* %3166, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 17)) #9
  %3168 = icmp ne i32 %3167, 1
  br i1 %3168, label %463, label %3169

; <label>:3169:                                   ; preds = %3165
  %3170 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 17), align 8
  %3171 = icmp slt i32 %3170, 0
  br i1 %3171, label %463, label %3172

; <label>:3172:                                   ; preds = %3169
  %3173 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 17), align 8
  %3174 = icmp sgt i32 %3173, 4
  br i1 %3174, label %463, label %.loopexit71.7

; <label>:3175:                                   ; preds = %.lr.ph141.7
  %3176 = load i8*, i8** @optarg, align 8
  %3177 = call i32 (i8*, i8*, ...) @sscanf(i8* %3176, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 39)) #9
  %3178 = icmp ne i32 %3177, 1
  br i1 %3178, label %443, label %3179

; <label>:3179:                                   ; preds = %3175
  %3180 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 39), align 4
  %3181 = icmp slt i32 %3180, 0
  br i1 %3181, label %443, label %3182

; <label>:3182:                                   ; preds = %3179
  %3183 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 39), align 4
  %3184 = icmp sgt i32 %3183, 2
  br i1 %3184, label %443, label %.loopexit71.7

; <label>:3185:                                   ; preds = %.lr.ph141.7
  %3186 = load i8*, i8** @optarg, align 8
  %3187 = call i32 (i8*, i8*, ...) @sscanf(i8* %3186, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 33)) #9
  %3188 = icmp ne i32 %3187, 1
  br i1 %3188, label %421, label %3189

; <label>:3189:                                   ; preds = %3185
  %3190 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 33), align 8
  %3191 = icmp slt i32 %3190, 1
  br i1 %3191, label %421, label %3192

; <label>:3192:                                   ; preds = %3189
  %3193 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 13), align 8
  %3194 = sub nsw i32 %3193, 1
  %3195 = sext i32 %3194 to i64
  %3196 = getelementptr inbounds [17 x i32], [17 x i32]* @K_COEFF, i64 0, i64 %3195
  store i32 0, i32* %3196, align 4
  br label %.loopexit71.7

; <label>:3197:                                   ; preds = %.lr.ph141.7
  %3198 = load i8*, i8** @optarg, align 8
  %3199 = call i64 @strlen(i8* %3198) #10
  %3200 = add i64 %3199, 1
  %3201 = call noalias i8* @calloc(i64 1, i64 %3200) #9, !track !221
  store i8* %3201, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 42), align 8
  %3202 = load i8*, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 42), align 8
  %3203 = icmp eq i8* %3202, null
  br i1 %3203, label %405, label %3204

; <label>:3204:                                   ; preds = %3197
  %3205 = load i8*, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 42), align 8
  %3206 = load i8*, i8** @optarg, align 8
  %3207 = load i8*, i8** @optarg, align 8
  %3208 = call i64 @strlen(i8* %3207) #10
  %3209 = call i8* @strncpy(i8* %3205, i8* %3206, i64 %3208) #9, !track !222
  br label %.loopexit71.7

; <label>:3210:                                   ; preds = %.lr.ph141.7
  %3211 = load i8*, i8** @optarg, align 8
  %3212 = call i32 (i8*, i8*, ...) @sscanf(i8* %3211, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 13)) #9
  %3213 = icmp ne i32 %3212, 1
  br i1 %3213, label %386, label %3214

; <label>:3214:                                   ; preds = %3210
  %3215 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 13), align 8
  %3216 = icmp slt i32 %3215, 1
  br i1 %3216, label %386, label %3217

; <label>:3217:                                   ; preds = %3214
  %3218 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 13), align 8
  %3219 = icmp sgt i32 %3218, 17
  br i1 %3219, label %386, label %3220

; <label>:3220:                                   ; preds = %3217
  %3221 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 13), align 8
  %3222 = sub nsw i32 %3221, 1
  %3223 = sext i32 %3222 to i64
  %3224 = getelementptr inbounds [17 x i32], [17 x i32]* @K_COEFF, i64 0, i64 %3223
  store i32 0, i32* %3224, align 4
  br label %.loopexit71.7

; <label>:3225:                                   ; preds = %.lr.ph141.7
  %3226 = load i8*, i8** @optarg, align 8
  %3227 = call i32 (i8*, i8*, ...) @sscanf(i8* %3226, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.103, i64 0, i64 0), float* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 12)) #9
  %3228 = icmp ne i32 %3227, 1
  br i1 %3228, label %369, label %3229

; <label>:3229:                                   ; preds = %3225
  %3230 = load float, float* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 12), align 4
  %3231 = fcmp olt float %3230, 1.000000e+00
  br i1 %3231, label %369, label %.loopexit71.7

; <label>:3232:                                   ; preds = %.lr.ph141.7
  %3233 = load i8*, i8** @optarg, align 8
  %3234 = call i32 (i8*, i8*, ...) @sscanf(i8* %3233, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 11)) #9
  %3235 = icmp ne i32 %3234, 1
  br i1 %3235, label %355, label %3236

; <label>:3236:                                   ; preds = %3232
  %3237 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 11), align 8
  %3238 = icmp slt i32 %3237, 1
  br i1 %3238, label %355, label %3239

; <label>:3239:                                   ; preds = %3236
  %3240 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 11), align 8
  %3241 = icmp sgt i32 %3240, 4
  br i1 %3241, label %355, label %.loopexit71.7

; <label>:3242:                                   ; preds = %.lr.ph141.7
  %3243 = load i8*, i8** @optarg, align 8
  %3244 = call i32 (i8*, i8*, ...) @sscanf(i8* %3243, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10)) #9
  %3245 = icmp ne i32 %3244, 1
  br i1 %3245, label %334, label %3246

; <label>:3246:                                   ; preds = %3242
  %3247 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %3248 = icmp ne i32 %3247, 64
  br i1 %3248, label %3249, label %3261

; <label>:3249:                                   ; preds = %3246
  %3250 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %3251 = icmp ne i32 %3250, 128
  br i1 %3251, label %3252, label %3261

; <label>:3252:                                   ; preds = %3249
  %3253 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %3254 = icmp ne i32 %3253, 152
  br i1 %3254, label %3255, label %3261

; <label>:3255:                                   ; preds = %3252
  %3256 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %3257 = icmp ne i32 %3256, 256
  br i1 %3257, label %3258, label %3261

; <label>:3258:                                   ; preds = %3255
  %3259 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %3260 = icmp ne i32 %3259, 512
  br i1 %3260, label %334, label %3261

; <label>:3261:                                   ; preds = %3258, %3255, %3252, %3249, %3246
  %3262 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %3263 = sdiv i32 %3262, 8
  %3264 = sub nsw i32 %3263, 3
  store i32 %3264, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  br label %.loopexit71.7

; <label>:3265:                                   ; preds = %.lr.ph141.7
  %3266 = load i8*, i8** @optarg, align 8
  %3267 = call i32 @getmac(i8* %3266, i32 1, i8* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 9, i64 0))
  %3268 = icmp ne i32 %3267, 0
  br i1 %3268, label %308, label %.loopexit71.7

; <label>:3269:                                   ; preds = %.lr.ph141.7
  store i32 0, i32* %27, align 4
  %3270 = load i8*, i8** @optarg, align 8
  %3271 = load i8, i8* %3270, align 1
  %3272 = sext i8 %3271 to i32
  %3273 = icmp ne i32 %3272, 0
  br i1 %3273, label %.lr.ph136.preheader.7, label %._crit_edge137.7

.lr.ph136.preheader.7:                            ; preds = %3269
  br label %.lr.ph136.7

.lr.ph136.7:                                      ; preds = %3320, %.lr.ph136.preheader.7
  %.02134.7 = phi i32 [ %.13.7, %3320 ], [ 0, %.lr.ph136.preheader.7 ]
  call void @unroll_loop(i32 125)
  %3274 = sext i32 %.02134.7 to i64
  %3275 = getelementptr inbounds i8, i8* %3270, i64 %3274
  %3276 = load i8, i8* %3275, align 1
  %3277 = sext i8 %3276 to i32
  %3278 = icmp eq i32 %3277, 120
  br i1 %3278, label %3279, label %3282

; <label>:3279:                                   ; preds = %.lr.ph136.7
  %3280 = sext i32 %.02134.7 to i64
  %3281 = getelementptr inbounds i8, i8* %3270, i64 %3280
  store i8 88, i8* %3281, align 1
  br label %3282

; <label>:3282:                                   ; preds = %3279, %.lr.ph136.7
  %3283 = sext i32 %.02134.7 to i64
  %3284 = getelementptr inbounds i8, i8* %3270, i64 %3283
  %3285 = load i8, i8* %3284, align 1
  %3286 = sext i8 %3285 to i32
  %3287 = icmp eq i32 %3286, 121
  br i1 %3287, label %3288, label %3291

; <label>:3288:                                   ; preds = %3282
  %3289 = sext i32 %.02134.7 to i64
  %3290 = getelementptr inbounds i8, i8* %3270, i64 %3289
  store i8 89, i8* %3290, align 1
  br label %3291

; <label>:3291:                                   ; preds = %3288, %3282
  %3292 = sext i32 %.02134.7 to i64
  %3293 = getelementptr inbounds i8, i8* %3270, i64 %3292
  %3294 = load i8, i8* %3293, align 1
  %3295 = sext i8 %3294 to i32
  %3296 = icmp eq i32 %3295, 45
  br i1 %3296, label %3318, label %3297

; <label>:3297:                                   ; preds = %3291
  %3298 = sext i32 %.02134.7 to i64
  %3299 = getelementptr inbounds i8, i8* %3270, i64 %3298
  %3300 = load i8, i8* %3299, align 1
  %3301 = sext i8 %3300 to i32
  %3302 = icmp eq i32 %3301, 58
  br i1 %3302, label %3318, label %3303

; <label>:3303:                                   ; preds = %3297
  %3304 = sext i32 %.02134.7 to i64
  %3305 = getelementptr inbounds i8, i8* %3270, i64 %3304
  %3306 = load i8, i8* %3305, align 1
  %3307 = sext i8 %3306 to i32
  %3308 = icmp eq i32 %3307, 32
  br i1 %3308, label %3318, label %3309

; <label>:3309:                                   ; preds = %3303
  %3310 = add nsw i32 %.02134.7, 1
  %3311 = sext i32 %.02134.7 to i64
  %3312 = getelementptr inbounds i8, i8* %3270, i64 %3311
  %3313 = load i8, i8* %3312, align 1
  %3314 = load i32, i32* %27, align 4
  %3315 = add nsw i32 %3314, 1
  store i32 %3315, i32* %27, align 4
  %3316 = sext i32 %3314 to i64
  %3317 = getelementptr inbounds i8, i8* %3270, i64 %3316
  store i8 %3313, i8* %3317, align 1
  br label %3320

; <label>:3318:                                   ; preds = %3303, %3297, %3291
  %3319 = add nsw i32 %.02134.7, 1
  br label %3320

; <label>:3320:                                   ; preds = %3318, %3309
  %.13.7 = phi i32 [ %3319, %3318 ], [ %3310, %3309 ]
  %3321 = sext i32 %.13.7 to i64
  %3322 = getelementptr inbounds i8, i8* %3270, i64 %3321
  %3323 = load i8, i8* %3322, align 1
  %3324 = sext i8 %3323 to i32
  %3325 = icmp ne i32 %3324, 0
  br i1 %3325, label %.lr.ph136.7, label %._crit_edge137.loopexit.7

._crit_edge137.loopexit.7:                        ; preds = %3320
  br label %._crit_edge137.7

._crit_edge137.7:                                 ; preds = %._crit_edge137.loopexit.7, %3269
  %3326 = load i32, i32* %27, align 4
  %3327 = sext i32 %3326 to i64
  %3328 = getelementptr inbounds i8, i8* %3270, i64 %3327
  store i8 0, i8* %3328, align 1
  %3329 = load i8, i8* %3270, align 1
  store i8 %3329, i8* %61, align 16
  %3330 = getelementptr inbounds i8, i8* %3270, i64 1
  %3331 = load i8, i8* %3330, align 1
  store i8 %3331, i8* %62, align 1
  store i8 0, i8* %63, align 2
  %scevgep45.7 = getelementptr i8, i8* %3270, i64 3
  br label %3332

; <label>:3332:                                   ; preds = %3390, %._crit_edge137.7
  %lsr.iv48.7 = phi i8* [ %scevgep49.7, %3390 ], [ %scevgep45.7, %._crit_edge137.7 ]
  %.127.7 = phi i32 [ 0, %._crit_edge137.7 ], [ %.329.7, %3390 ]
  %.24.7 = phi i32 [ 0, %._crit_edge137.7 ], [ %.46.7, %3390 ]
  call void @unroll_loop(i32 126)
  %3333 = call i32 (i8*, i8*, ...) @sscanf(i8* %64, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.72, i64 0, i64 0), i32* %27) #9
  %3334 = icmp eq i32 %3333, 1
  br i1 %3334, label %.critedge.7, label %3335

; <label>:3335:                                   ; preds = %3332
  %3336 = load i8, i8* %66, align 16
  %3337 = sext i8 %3336 to i32
  %3338 = icmp eq i32 %3337, 88
  br i1 %3338, label %3339, label %3343

; <label>:3339:                                   ; preds = %3335
  %3340 = load i8, i8* %69, align 1
  %3341 = sext i8 %3340 to i32
  %3342 = icmp eq i32 %3341, 88
  br i1 %3342, label %.critedge.7, label %3343

; <label>:3343:                                   ; preds = %3339, %3335
  %3344 = load i8, i8* %70, align 16
  %3345 = sext i8 %3344 to i32
  %3346 = icmp eq i32 %3345, 89
  %3347 = load i8, i8* %71, align 1
  %3348 = sext i8 %3347 to i32
  %3349 = icmp eq i32 %3348, 89
  %3350 = select i1 %3346, i1 %3349, i1 false
  br i1 %3350, label %.critedge.7, label %.loopexit71.loopexit.7

.critedge.7:                                      ; preds = %3343, %3339, %3332
  %3351 = load i8, i8* %65, align 16
  %3352 = sext i8 %3351 to i32
  %3353 = icmp eq i32 %3352, 88
  br i1 %3353, label %3354, label %3358

; <label>:3354:                                   ; preds = %.critedge.7
  %3355 = load i8, i8* %67, align 1
  %3356 = sext i8 %3355 to i32
  %3357 = icmp eq i32 %3356, 88
  br i1 %3357, label %3384, label %3358

; <label>:3358:                                   ; preds = %3354, %.critedge.7
  %3359 = load i8, i8* %68, align 16
  %3360 = sext i8 %3359 to i32
  %3361 = icmp eq i32 %3360, 89
  br i1 %3361, label %3362, label %3366

; <label>:3362:                                   ; preds = %3358
  %3363 = load i8, i8* %74, align 1
  %3364 = sext i8 %3363 to i32
  %3365 = icmp eq i32 %3364, 89
  br i1 %3365, label %3379, label %3366

; <label>:3366:                                   ; preds = %3362, %3358
  %3367 = load i32, i32* %27, align 4
  %3368 = icmp slt i32 %3367, 0
  %3369 = load i32, i32* %27, align 4
  %3370 = icmp sgt i32 %3369, 255
  %or.cond.7 = or i1 %3368, %3370
  br i1 %or.cond.7, label %.loopexit12, label %3371

; <label>:3371:                                   ; preds = %3366
  %3372 = load i32, i32* %27, align 4
  %3373 = trunc i32 %3372 to i8
  %3374 = sext i32 %.24.7 to i64
  %3375 = getelementptr inbounds [64 x i8], [64 x i8]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 7), i64 0, i64 %3374
  store i8 %3373, i8* %3375, align 1
  %3376 = add nsw i32 %.24.7, 1
  %3377 = sext i32 %.24.7 to i64
  %3378 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 8), i64 0, i64 %3377
  store i32 1, i32* %3378, align 4
  br label %3388

; <label>:3379:                                   ; preds = %3362
  %3380 = add nsw i32 %.24.7, 1
  %3381 = add nsw i32 %.127.7, 1
  %3382 = sext i32 %.127.7 to i64
  %3383 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 31), i64 0, i64 %3382
  store i32 %.24.7, i32* %3383, align 4
  br label %3388

; <label>:3384:                                   ; preds = %3354
  %3385 = add nsw i32 %.24.7, 1
  %3386 = sext i32 %.24.7 to i64
  %3387 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 8), i64 0, i64 %3386
  store i32 0, i32* %3387, align 4
  br label %3388

; <label>:3388:                                   ; preds = %3384, %3379, %3371
  %.329.7 = phi i32 [ %.127.7, %3384 ], [ %3381, %3379 ], [ %.127.7, %3371 ]
  %.46.7 = phi i32 [ %3385, %3384 ], [ %3380, %3379 ], [ %3376, %3371 ]
  %3389 = icmp sge i32 %.46.7, 64
  br i1 %3389, label %.loopexit71.loopexit.7, label %3390

; <label>:3390:                                   ; preds = %3388
  %scevgep50.7 = getelementptr i8, i8* %lsr.iv48.7, i64 -1
  %3391 = load i8, i8* %scevgep50.7, align 1
  store i8 %3391, i8* %72, align 16
  %3392 = load i8, i8* %lsr.iv48.7, align 1
  store i8 %3392, i8* %73, align 1
  %scevgep49.7 = getelementptr i8, i8* %lsr.iv48.7, i64 2
  br label %3332

.loopexit71.loopexit.7:                           ; preds = %3388, %3343
  %.531.ph.7 = phi i32 [ %.329.7, %3388 ], [ %.127.7, %3343 ]
  br label %.loopexit71.7

; <label>:3393:                                   ; preds = %.lr.ph141.7
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 41), align 4
  br label %.loopexit71.7

; <label>:3394:                                   ; preds = %.lr.ph141.7
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 16), align 4
  br label %.loopexit71.7

; <label>:3395:                                   ; preds = %.lr.ph141.7
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 14), align 4
  br label %.loopexit71.7

; <label>:3396:                                   ; preds = %.lr.ph141.7
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 38), align 8
  br label %.loopexit71.7

; <label>:3397:                                   ; preds = %.lr.ph141.7
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 15), align 8
  br label %.loopexit71.7

; <label>:3398:                                   ; preds = %.lr.ph141.7
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 6), align 8
  br label %.loopexit71.7

; <label>:3399:                                   ; preds = %.lr.ph141.7
  %3400 = load i8*, i8** @optarg, align 8
  %3401 = call i32 (i8*, i8*, ...) @sscanf(i8* %3400, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 5)) #9
  %3402 = icmp ne i32 %3401, 1
  br i1 %3402, label %160, label %3403

; <label>:3403:                                   ; preds = %3399
  %3404 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 5), align 4
  %3405 = icmp slt i32 %3404, 1
  br i1 %3405, label %160, label %3406

; <label>:3406:                                   ; preds = %3403
  %3407 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 5), align 4
  %3408 = icmp sgt i32 %3407, 128
  br i1 %3408, label %160, label %.loopexit71.7

; <label>:3409:                                   ; preds = %.lr.ph141.7
  %3410 = load i8*, i8** @optarg, align 8
  %3411 = call i32 @getmac(i8* %3410, i32 1, i8* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 4, i64 0))
  %3412 = icmp ne i32 %3411, 0
  br i1 %3412, label %142, label %3413

; <label>:3413:                                   ; preds = %3409
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 2), align 8
  br label %.loopexit71.7

; <label>:3414:                                   ; preds = %.lr.ph141.7
  call void @llvm.memset.p0i8.i64(i8* align 4 getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 3, i64 0), i8 0, i64 33, i1 false)
  %3415 = load i8*, i8** @optarg, align 8
  %3416 = call i8* @strncpy(i8* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 3, i64 0), i8* %3415, i64 32) #9, !track !220
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 1), align 4
  br label %.loopexit71.7

; <label>:3417:                                   ; preds = %.lr.ph141.7
  %3418 = load i8*, i8** @optarg, align 8
  %3419 = call i32 (i8*, i8*, ...) @sscanf(i8* %3418, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 0)) #9
  %3420 = load i8*, i8** @optarg, align 8
  %3421 = call i32 @strcasecmp(i8* %3420, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.94, i64 0, i64 0)) #10
  %3422 = icmp eq i32 %3421, 0
  br i1 %3422, label %3428, label %3423

; <label>:3423:                                   ; preds = %3417
  %3424 = load i8*, i8** @optarg, align 8
  %3425 = call i32 @strcasecmp(i8* %3424, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.95, i64 0, i64 0)) #10
  %3426 = icmp eq i32 %3425, 0
  br i1 %3426, label %3427, label %3429

; <label>:3427:                                   ; preds = %3423
  store i32 2, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 0), align 8
  br label %3429

; <label>:3428:                                   ; preds = %3417
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 0), align 8
  br label %3429

; <label>:3429:                                   ; preds = %3428, %3427, %3423
  %3430 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 0), align 8
  %3431 = icmp ne i32 %3430, 1
  br i1 %3431, label %3432, label %.loopexit71.7

; <label>:3432:                                   ; preds = %3429
  %3433 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 0), align 8
  %3434 = icmp ne i32 %3433, 2
  br i1 %3434, label %128, label %.loopexit71.7

; <label>:3435:                                   ; preds = %.lr.ph141.7
  %3436 = icmp ne i32 %.134.6, 0
  br i1 %3436, label %102, label %3437

; <label>:3437:                                   ; preds = %3435
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 40), align 8
  store i32 0, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 20), align 4
  br label %.loopexit71.7

.loopexit71.7:                                    ; preds = %3437, %3432, %3429, %3414, %3413, %3406, %3398, %3397, %3396, %3395, %3394, %3393, %.loopexit71.loopexit.7, %3265, %3261, %3239, %3229, %3220, %3204, %3192, %3182, %3172, %3162, %3161, %3160, %3159, %3158, %3154, %3153, %3151, %3149, %3140
  %.134.7 = phi i32 [ %.134.6, %3153 ], [ %.134.6, %3158 ], [ %.134.6, %3159 ], [ %.134.6, %3160 ], [ %.134.6, %3161 ], [ %.134.6, %3192 ], [ %.134.6, %3204 ], [ %.134.6, %3220 ], [ %.134.6, %3261 ], [ %.134.6, %3393 ], [ %.134.6, %3394 ], [ %.134.6, %3395 ], [ %.134.6, %3396 ], [ %.134.6, %3397 ], [ %.134.6, %3398 ], [ %.134.6, %3413 ], [ %.134.6, %3414 ], [ %.134.6, %3437 ], [ %.134.6, %3432 ], [ %.134.6, %3429 ], [ %.134.6, %3406 ], [ %.134.6, %3265 ], [ %.134.6, %3239 ], [ %.134.6, %3229 ], [ %.134.6, %3182 ], [ %.134.6, %3172 ], [ %.134.6, %3162 ], [ %.134.6, %3154 ], [ %.134.6, %3149 ], [ %.134.6, %3151 ], [ 1, %3140 ], [ %.134.6, %.loopexit71.loopexit.7 ]
  %.531.7 = phi i32 [ %.531.6, %3153 ], [ %.531.6, %3158 ], [ %.531.6, %3159 ], [ %.531.6, %3160 ], [ %.531.6, %3161 ], [ %.531.6, %3192 ], [ %.531.6, %3204 ], [ %.531.6, %3220 ], [ %.531.6, %3261 ], [ %.531.6, %3393 ], [ %.531.6, %3394 ], [ %.531.6, %3395 ], [ %.531.6, %3396 ], [ %.531.6, %3397 ], [ %.531.6, %3398 ], [ %.531.6, %3413 ], [ %.531.6, %3414 ], [ %.531.6, %3437 ], [ %.531.6, %3432 ], [ %.531.6, %3429 ], [ %.531.6, %3406 ], [ %.531.6, %3265 ], [ %.531.6, %3239 ], [ %.531.6, %3229 ], [ %.531.6, %3182 ], [ %.531.6, %3172 ], [ %.531.6, %3162 ], [ %.531.6, %3154 ], [ %.531.6, %3149 ], [ %.531.6, %3151 ], [ %.531.6, %3140 ], [ %.531.ph.7, %.loopexit71.loopexit.7 ]
  call void @__loop_iteration_test___0()
  store i32 0, i32* %30, align 4
  %3438 = call i32 @getopt_long(i32 4, i8** %25, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.86, i64 0, i64 0), %struct.option* getelementptr inbounds ([10 x %struct.option], [10 x %struct.option]* @main.long_options, i64 0, i64 0), i32* %30) #9, !track_argc !219
  %3439 = icmp slt i32 %3438, 0
  br i1 %3439, label %._crit_edge142.loopexit, label %.lr.ph141.8

.lr.ph141.8:                                      ; preds = %.loopexit71.7
  call void @unroll_loop(i32 124)
  switch i32 %3438, label %.loopexit1 [
    i32 58, label %75
    i32 63, label %80
    i32 117, label %85
    i32 86, label %3735
    i32 97, label %3717
    i32 101, label %3714
    i32 98, label %3709
    i32 112, label %3699
    i32 113, label %3698
    i32 99, label %3697
    i32 68, label %3696
    i32 104, label %3695
    i32 116, label %3694
    i32 49, label %3693
    i32 100, label %3569
    i32 109, label %3565
    i32 110, label %3542
    i32 105, label %3532
    i32 102, label %3525
    i32 107, label %3510
    i32 108, label %3497
    i32 77, label %3485
    i32 80, label %3475
    i32 120, label %3462
    i32 88, label %3461
    i32 121, label %3460
    i32 75, label %3459
    i32 115, label %3458
    i32 119, label %3454
    i32 114, label %484
    i32 48, label %3453
    i32 72, label %.loopexit13
    i32 67, label %3443
    i32 122, label %3440
  ]

; <label>:3440:                                   ; preds = %.lr.ph141.8
  %3441 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 40), align 8
  %3442 = icmp ne i32 %3441, 0
  br i1 %3442, label %507, label %.loopexit71.8

; <label>:3443:                                   ; preds = %.lr.ph141.8
  %3444 = load i8*, i8** @optarg, align 8
  %3445 = call i32 @checkbssids(i8* %3444)
  %3446 = icmp slt i32 %3445, 1
  br i1 %3446, label %493, label %3447

; <label>:3447:                                   ; preds = %3443
  %3448 = icmp eq i32 %3445, 1
  br i1 %3448, label %3451, label %3449

; <label>:3449:                                   ; preds = %3447
  %3450 = load i8*, i8** @optarg, align 8
  store i8* %3450, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 34), align 8
  br label %.loopexit71.8

; <label>:3451:                                   ; preds = %3447
  %3452 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.112, i64 0, i64 0))
  br label %.loopexit71.8

; <label>:3453:                                   ; preds = %.lr.ph141.8
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 27), align 4
  br label %.loopexit71.8

; <label>:3454:                                   ; preds = %.lr.ph141.8
  %3455 = load i8*, i8** @optarg, align 8
  %3456 = call i32 @set_dicts(i8* %3455)
  %3457 = icmp ne i32 %3456, 0
  br i1 %3457, label %479, label %.loopexit71.8

; <label>:3458:                                   ; preds = %.lr.ph141.8
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 26), align 8
  br label %.loopexit71.8

; <label>:3459:                                   ; preds = %.lr.ph141.8
  store i32 0, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 20), align 4
  br label %.loopexit71.8

; <label>:3460:                                   ; preds = %.lr.ph141.8
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 19), align 8
  br label %.loopexit71.8

; <label>:3461:                                   ; preds = %.lr.ph141.8
  store i32 0, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 18), align 4
  br label %.loopexit71.8

; <label>:3462:                                   ; preds = %.lr.ph141.8
  store i32 0, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 17), align 8
  %3463 = load i8*, i8** @optarg, align 8
  %3464 = icmp ne i8* %3463, null
  br i1 %3464, label %3465, label %.loopexit71.8

; <label>:3465:                                   ; preds = %3462
  %3466 = load i8*, i8** @optarg, align 8
  %3467 = call i32 (i8*, i8*, ...) @sscanf(i8* %3466, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 17)) #9
  %3468 = icmp ne i32 %3467, 1
  br i1 %3468, label %463, label %3469

; <label>:3469:                                   ; preds = %3465
  %3470 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 17), align 8
  %3471 = icmp slt i32 %3470, 0
  br i1 %3471, label %463, label %3472

; <label>:3472:                                   ; preds = %3469
  %3473 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 17), align 8
  %3474 = icmp sgt i32 %3473, 4
  br i1 %3474, label %463, label %.loopexit71.8

; <label>:3475:                                   ; preds = %.lr.ph141.8
  %3476 = load i8*, i8** @optarg, align 8
  %3477 = call i32 (i8*, i8*, ...) @sscanf(i8* %3476, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 39)) #9
  %3478 = icmp ne i32 %3477, 1
  br i1 %3478, label %443, label %3479

; <label>:3479:                                   ; preds = %3475
  %3480 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 39), align 4
  %3481 = icmp slt i32 %3480, 0
  br i1 %3481, label %443, label %3482

; <label>:3482:                                   ; preds = %3479
  %3483 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 39), align 4
  %3484 = icmp sgt i32 %3483, 2
  br i1 %3484, label %443, label %.loopexit71.8

; <label>:3485:                                   ; preds = %.lr.ph141.8
  %3486 = load i8*, i8** @optarg, align 8
  %3487 = call i32 (i8*, i8*, ...) @sscanf(i8* %3486, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 33)) #9
  %3488 = icmp ne i32 %3487, 1
  br i1 %3488, label %421, label %3489

; <label>:3489:                                   ; preds = %3485
  %3490 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 33), align 8
  %3491 = icmp slt i32 %3490, 1
  br i1 %3491, label %421, label %3492

; <label>:3492:                                   ; preds = %3489
  %3493 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 13), align 8
  %3494 = sub nsw i32 %3493, 1
  %3495 = sext i32 %3494 to i64
  %3496 = getelementptr inbounds [17 x i32], [17 x i32]* @K_COEFF, i64 0, i64 %3495
  store i32 0, i32* %3496, align 4
  br label %.loopexit71.8

; <label>:3497:                                   ; preds = %.lr.ph141.8
  %3498 = load i8*, i8** @optarg, align 8
  %3499 = call i64 @strlen(i8* %3498) #10
  %3500 = add i64 %3499, 1
  %3501 = call noalias i8* @calloc(i64 1, i64 %3500) #9, !track !221
  store i8* %3501, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 42), align 8
  %3502 = load i8*, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 42), align 8
  %3503 = icmp eq i8* %3502, null
  br i1 %3503, label %405, label %3504

; <label>:3504:                                   ; preds = %3497
  %3505 = load i8*, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 42), align 8
  %3506 = load i8*, i8** @optarg, align 8
  %3507 = load i8*, i8** @optarg, align 8
  %3508 = call i64 @strlen(i8* %3507) #10
  %3509 = call i8* @strncpy(i8* %3505, i8* %3506, i64 %3508) #9, !track !222
  br label %.loopexit71.8

; <label>:3510:                                   ; preds = %.lr.ph141.8
  %3511 = load i8*, i8** @optarg, align 8
  %3512 = call i32 (i8*, i8*, ...) @sscanf(i8* %3511, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 13)) #9
  %3513 = icmp ne i32 %3512, 1
  br i1 %3513, label %386, label %3514

; <label>:3514:                                   ; preds = %3510
  %3515 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 13), align 8
  %3516 = icmp slt i32 %3515, 1
  br i1 %3516, label %386, label %3517

; <label>:3517:                                   ; preds = %3514
  %3518 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 13), align 8
  %3519 = icmp sgt i32 %3518, 17
  br i1 %3519, label %386, label %3520

; <label>:3520:                                   ; preds = %3517
  %3521 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 13), align 8
  %3522 = sub nsw i32 %3521, 1
  %3523 = sext i32 %3522 to i64
  %3524 = getelementptr inbounds [17 x i32], [17 x i32]* @K_COEFF, i64 0, i64 %3523
  store i32 0, i32* %3524, align 4
  br label %.loopexit71.8

; <label>:3525:                                   ; preds = %.lr.ph141.8
  %3526 = load i8*, i8** @optarg, align 8
  %3527 = call i32 (i8*, i8*, ...) @sscanf(i8* %3526, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.103, i64 0, i64 0), float* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 12)) #9
  %3528 = icmp ne i32 %3527, 1
  br i1 %3528, label %369, label %3529

; <label>:3529:                                   ; preds = %3525
  %3530 = load float, float* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 12), align 4
  %3531 = fcmp olt float %3530, 1.000000e+00
  br i1 %3531, label %369, label %.loopexit71.8

; <label>:3532:                                   ; preds = %.lr.ph141.8
  %3533 = load i8*, i8** @optarg, align 8
  %3534 = call i32 (i8*, i8*, ...) @sscanf(i8* %3533, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 11)) #9
  %3535 = icmp ne i32 %3534, 1
  br i1 %3535, label %355, label %3536

; <label>:3536:                                   ; preds = %3532
  %3537 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 11), align 8
  %3538 = icmp slt i32 %3537, 1
  br i1 %3538, label %355, label %3539

; <label>:3539:                                   ; preds = %3536
  %3540 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 11), align 8
  %3541 = icmp sgt i32 %3540, 4
  br i1 %3541, label %355, label %.loopexit71.8

; <label>:3542:                                   ; preds = %.lr.ph141.8
  %3543 = load i8*, i8** @optarg, align 8
  %3544 = call i32 (i8*, i8*, ...) @sscanf(i8* %3543, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10)) #9
  %3545 = icmp ne i32 %3544, 1
  br i1 %3545, label %334, label %3546

; <label>:3546:                                   ; preds = %3542
  %3547 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %3548 = icmp ne i32 %3547, 64
  br i1 %3548, label %3549, label %3561

; <label>:3549:                                   ; preds = %3546
  %3550 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %3551 = icmp ne i32 %3550, 128
  br i1 %3551, label %3552, label %3561

; <label>:3552:                                   ; preds = %3549
  %3553 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %3554 = icmp ne i32 %3553, 152
  br i1 %3554, label %3555, label %3561

; <label>:3555:                                   ; preds = %3552
  %3556 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %3557 = icmp ne i32 %3556, 256
  br i1 %3557, label %3558, label %3561

; <label>:3558:                                   ; preds = %3555
  %3559 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %3560 = icmp ne i32 %3559, 512
  br i1 %3560, label %334, label %3561

; <label>:3561:                                   ; preds = %3558, %3555, %3552, %3549, %3546
  %3562 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %3563 = sdiv i32 %3562, 8
  %3564 = sub nsw i32 %3563, 3
  store i32 %3564, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  br label %.loopexit71.8

; <label>:3565:                                   ; preds = %.lr.ph141.8
  %3566 = load i8*, i8** @optarg, align 8
  %3567 = call i32 @getmac(i8* %3566, i32 1, i8* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 9, i64 0))
  %3568 = icmp ne i32 %3567, 0
  br i1 %3568, label %308, label %.loopexit71.8

; <label>:3569:                                   ; preds = %.lr.ph141.8
  store i32 0, i32* %27, align 4
  %3570 = load i8*, i8** @optarg, align 8
  %3571 = load i8, i8* %3570, align 1
  %3572 = sext i8 %3571 to i32
  %3573 = icmp ne i32 %3572, 0
  br i1 %3573, label %.lr.ph136.preheader.8, label %._crit_edge137.8

.lr.ph136.preheader.8:                            ; preds = %3569
  br label %.lr.ph136.8

.lr.ph136.8:                                      ; preds = %3620, %.lr.ph136.preheader.8
  %.02134.8 = phi i32 [ %.13.8, %3620 ], [ 0, %.lr.ph136.preheader.8 ]
  call void @unroll_loop(i32 125)
  %3574 = sext i32 %.02134.8 to i64
  %3575 = getelementptr inbounds i8, i8* %3570, i64 %3574
  %3576 = load i8, i8* %3575, align 1
  %3577 = sext i8 %3576 to i32
  %3578 = icmp eq i32 %3577, 120
  br i1 %3578, label %3579, label %3582

; <label>:3579:                                   ; preds = %.lr.ph136.8
  %3580 = sext i32 %.02134.8 to i64
  %3581 = getelementptr inbounds i8, i8* %3570, i64 %3580
  store i8 88, i8* %3581, align 1
  br label %3582

; <label>:3582:                                   ; preds = %3579, %.lr.ph136.8
  %3583 = sext i32 %.02134.8 to i64
  %3584 = getelementptr inbounds i8, i8* %3570, i64 %3583
  %3585 = load i8, i8* %3584, align 1
  %3586 = sext i8 %3585 to i32
  %3587 = icmp eq i32 %3586, 121
  br i1 %3587, label %3588, label %3591

; <label>:3588:                                   ; preds = %3582
  %3589 = sext i32 %.02134.8 to i64
  %3590 = getelementptr inbounds i8, i8* %3570, i64 %3589
  store i8 89, i8* %3590, align 1
  br label %3591

; <label>:3591:                                   ; preds = %3588, %3582
  %3592 = sext i32 %.02134.8 to i64
  %3593 = getelementptr inbounds i8, i8* %3570, i64 %3592
  %3594 = load i8, i8* %3593, align 1
  %3595 = sext i8 %3594 to i32
  %3596 = icmp eq i32 %3595, 45
  br i1 %3596, label %3618, label %3597

; <label>:3597:                                   ; preds = %3591
  %3598 = sext i32 %.02134.8 to i64
  %3599 = getelementptr inbounds i8, i8* %3570, i64 %3598
  %3600 = load i8, i8* %3599, align 1
  %3601 = sext i8 %3600 to i32
  %3602 = icmp eq i32 %3601, 58
  br i1 %3602, label %3618, label %3603

; <label>:3603:                                   ; preds = %3597
  %3604 = sext i32 %.02134.8 to i64
  %3605 = getelementptr inbounds i8, i8* %3570, i64 %3604
  %3606 = load i8, i8* %3605, align 1
  %3607 = sext i8 %3606 to i32
  %3608 = icmp eq i32 %3607, 32
  br i1 %3608, label %3618, label %3609

; <label>:3609:                                   ; preds = %3603
  %3610 = add nsw i32 %.02134.8, 1
  %3611 = sext i32 %.02134.8 to i64
  %3612 = getelementptr inbounds i8, i8* %3570, i64 %3611
  %3613 = load i8, i8* %3612, align 1
  %3614 = load i32, i32* %27, align 4
  %3615 = add nsw i32 %3614, 1
  store i32 %3615, i32* %27, align 4
  %3616 = sext i32 %3614 to i64
  %3617 = getelementptr inbounds i8, i8* %3570, i64 %3616
  store i8 %3613, i8* %3617, align 1
  br label %3620

; <label>:3618:                                   ; preds = %3603, %3597, %3591
  %3619 = add nsw i32 %.02134.8, 1
  br label %3620

; <label>:3620:                                   ; preds = %3618, %3609
  %.13.8 = phi i32 [ %3619, %3618 ], [ %3610, %3609 ]
  %3621 = sext i32 %.13.8 to i64
  %3622 = getelementptr inbounds i8, i8* %3570, i64 %3621
  %3623 = load i8, i8* %3622, align 1
  %3624 = sext i8 %3623 to i32
  %3625 = icmp ne i32 %3624, 0
  br i1 %3625, label %.lr.ph136.8, label %._crit_edge137.loopexit.8

._crit_edge137.loopexit.8:                        ; preds = %3620
  br label %._crit_edge137.8

._crit_edge137.8:                                 ; preds = %._crit_edge137.loopexit.8, %3569
  %3626 = load i32, i32* %27, align 4
  %3627 = sext i32 %3626 to i64
  %3628 = getelementptr inbounds i8, i8* %3570, i64 %3627
  store i8 0, i8* %3628, align 1
  %3629 = load i8, i8* %3570, align 1
  store i8 %3629, i8* %61, align 16
  %3630 = getelementptr inbounds i8, i8* %3570, i64 1
  %3631 = load i8, i8* %3630, align 1
  store i8 %3631, i8* %62, align 1
  store i8 0, i8* %63, align 2
  %scevgep45.8 = getelementptr i8, i8* %3570, i64 3
  br label %3632

; <label>:3632:                                   ; preds = %3690, %._crit_edge137.8
  %lsr.iv48.8 = phi i8* [ %scevgep49.8, %3690 ], [ %scevgep45.8, %._crit_edge137.8 ]
  %.127.8 = phi i32 [ 0, %._crit_edge137.8 ], [ %.329.8, %3690 ]
  %.24.8 = phi i32 [ 0, %._crit_edge137.8 ], [ %.46.8, %3690 ]
  call void @unroll_loop(i32 126)
  %3633 = call i32 (i8*, i8*, ...) @sscanf(i8* %64, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.72, i64 0, i64 0), i32* %27) #9
  %3634 = icmp eq i32 %3633, 1
  br i1 %3634, label %.critedge.8, label %3635

; <label>:3635:                                   ; preds = %3632
  %3636 = load i8, i8* %66, align 16
  %3637 = sext i8 %3636 to i32
  %3638 = icmp eq i32 %3637, 88
  br i1 %3638, label %3639, label %3643

; <label>:3639:                                   ; preds = %3635
  %3640 = load i8, i8* %69, align 1
  %3641 = sext i8 %3640 to i32
  %3642 = icmp eq i32 %3641, 88
  br i1 %3642, label %.critedge.8, label %3643

; <label>:3643:                                   ; preds = %3639, %3635
  %3644 = load i8, i8* %70, align 16
  %3645 = sext i8 %3644 to i32
  %3646 = icmp eq i32 %3645, 89
  %3647 = load i8, i8* %71, align 1
  %3648 = sext i8 %3647 to i32
  %3649 = icmp eq i32 %3648, 89
  %3650 = select i1 %3646, i1 %3649, i1 false
  br i1 %3650, label %.critedge.8, label %.loopexit71.loopexit.8

.critedge.8:                                      ; preds = %3643, %3639, %3632
  %3651 = load i8, i8* %65, align 16
  %3652 = sext i8 %3651 to i32
  %3653 = icmp eq i32 %3652, 88
  br i1 %3653, label %3654, label %3658

; <label>:3654:                                   ; preds = %.critedge.8
  %3655 = load i8, i8* %67, align 1
  %3656 = sext i8 %3655 to i32
  %3657 = icmp eq i32 %3656, 88
  br i1 %3657, label %3684, label %3658

; <label>:3658:                                   ; preds = %3654, %.critedge.8
  %3659 = load i8, i8* %68, align 16
  %3660 = sext i8 %3659 to i32
  %3661 = icmp eq i32 %3660, 89
  br i1 %3661, label %3662, label %3666

; <label>:3662:                                   ; preds = %3658
  %3663 = load i8, i8* %74, align 1
  %3664 = sext i8 %3663 to i32
  %3665 = icmp eq i32 %3664, 89
  br i1 %3665, label %3679, label %3666

; <label>:3666:                                   ; preds = %3662, %3658
  %3667 = load i32, i32* %27, align 4
  %3668 = icmp slt i32 %3667, 0
  %3669 = load i32, i32* %27, align 4
  %3670 = icmp sgt i32 %3669, 255
  %or.cond.8 = or i1 %3668, %3670
  br i1 %or.cond.8, label %.loopexit14, label %3671

; <label>:3671:                                   ; preds = %3666
  %3672 = load i32, i32* %27, align 4
  %3673 = trunc i32 %3672 to i8
  %3674 = sext i32 %.24.8 to i64
  %3675 = getelementptr inbounds [64 x i8], [64 x i8]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 7), i64 0, i64 %3674
  store i8 %3673, i8* %3675, align 1
  %3676 = add nsw i32 %.24.8, 1
  %3677 = sext i32 %.24.8 to i64
  %3678 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 8), i64 0, i64 %3677
  store i32 1, i32* %3678, align 4
  br label %3688

; <label>:3679:                                   ; preds = %3662
  %3680 = add nsw i32 %.24.8, 1
  %3681 = add nsw i32 %.127.8, 1
  %3682 = sext i32 %.127.8 to i64
  %3683 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 31), i64 0, i64 %3682
  store i32 %.24.8, i32* %3683, align 4
  br label %3688

; <label>:3684:                                   ; preds = %3654
  %3685 = add nsw i32 %.24.8, 1
  %3686 = sext i32 %.24.8 to i64
  %3687 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 8), i64 0, i64 %3686
  store i32 0, i32* %3687, align 4
  br label %3688

; <label>:3688:                                   ; preds = %3684, %3679, %3671
  %.329.8 = phi i32 [ %.127.8, %3684 ], [ %3681, %3679 ], [ %.127.8, %3671 ]
  %.46.8 = phi i32 [ %3685, %3684 ], [ %3680, %3679 ], [ %3676, %3671 ]
  %3689 = icmp sge i32 %.46.8, 64
  br i1 %3689, label %.loopexit71.loopexit.8, label %3690

; <label>:3690:                                   ; preds = %3688
  %scevgep50.8 = getelementptr i8, i8* %lsr.iv48.8, i64 -1
  %3691 = load i8, i8* %scevgep50.8, align 1
  store i8 %3691, i8* %72, align 16
  %3692 = load i8, i8* %lsr.iv48.8, align 1
  store i8 %3692, i8* %73, align 1
  %scevgep49.8 = getelementptr i8, i8* %lsr.iv48.8, i64 2
  br label %3632

.loopexit71.loopexit.8:                           ; preds = %3688, %3643
  %.531.ph.8 = phi i32 [ %.329.8, %3688 ], [ %.127.8, %3643 ]
  br label %.loopexit71.8

; <label>:3693:                                   ; preds = %.lr.ph141.8
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 41), align 4
  br label %.loopexit71.8

; <label>:3694:                                   ; preds = %.lr.ph141.8
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 16), align 4
  br label %.loopexit71.8

; <label>:3695:                                   ; preds = %.lr.ph141.8
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 14), align 4
  br label %.loopexit71.8

; <label>:3696:                                   ; preds = %.lr.ph141.8
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 38), align 8
  br label %.loopexit71.8

; <label>:3697:                                   ; preds = %.lr.ph141.8
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 15), align 8
  br label %.loopexit71.8

; <label>:3698:                                   ; preds = %.lr.ph141.8
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 6), align 8
  br label %.loopexit71.8

; <label>:3699:                                   ; preds = %.lr.ph141.8
  %3700 = load i8*, i8** @optarg, align 8
  %3701 = call i32 (i8*, i8*, ...) @sscanf(i8* %3700, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 5)) #9
  %3702 = icmp ne i32 %3701, 1
  br i1 %3702, label %160, label %3703

; <label>:3703:                                   ; preds = %3699
  %3704 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 5), align 4
  %3705 = icmp slt i32 %3704, 1
  br i1 %3705, label %160, label %3706

; <label>:3706:                                   ; preds = %3703
  %3707 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 5), align 4
  %3708 = icmp sgt i32 %3707, 128
  br i1 %3708, label %160, label %.loopexit71.8

; <label>:3709:                                   ; preds = %.lr.ph141.8
  %3710 = load i8*, i8** @optarg, align 8
  %3711 = call i32 @getmac(i8* %3710, i32 1, i8* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 4, i64 0))
  %3712 = icmp ne i32 %3711, 0
  br i1 %3712, label %142, label %3713

; <label>:3713:                                   ; preds = %3709
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 2), align 8
  br label %.loopexit71.8

; <label>:3714:                                   ; preds = %.lr.ph141.8
  call void @llvm.memset.p0i8.i64(i8* align 4 getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 3, i64 0), i8 0, i64 33, i1 false)
  %3715 = load i8*, i8** @optarg, align 8
  %3716 = call i8* @strncpy(i8* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 3, i64 0), i8* %3715, i64 32) #9, !track !220
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 1), align 4
  br label %.loopexit71.8

; <label>:3717:                                   ; preds = %.lr.ph141.8
  %3718 = load i8*, i8** @optarg, align 8
  %3719 = call i32 (i8*, i8*, ...) @sscanf(i8* %3718, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 0)) #9
  %3720 = load i8*, i8** @optarg, align 8
  %3721 = call i32 @strcasecmp(i8* %3720, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.94, i64 0, i64 0)) #10
  %3722 = icmp eq i32 %3721, 0
  br i1 %3722, label %3728, label %3723

; <label>:3723:                                   ; preds = %3717
  %3724 = load i8*, i8** @optarg, align 8
  %3725 = call i32 @strcasecmp(i8* %3724, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.95, i64 0, i64 0)) #10
  %3726 = icmp eq i32 %3725, 0
  br i1 %3726, label %3727, label %3729

; <label>:3727:                                   ; preds = %3723
  store i32 2, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 0), align 8
  br label %3729

; <label>:3728:                                   ; preds = %3717
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 0), align 8
  br label %3729

; <label>:3729:                                   ; preds = %3728, %3727, %3723
  %3730 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 0), align 8
  %3731 = icmp ne i32 %3730, 1
  br i1 %3731, label %3732, label %.loopexit71.8

; <label>:3732:                                   ; preds = %3729
  %3733 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 0), align 8
  %3734 = icmp ne i32 %3733, 2
  br i1 %3734, label %128, label %.loopexit71.8

; <label>:3735:                                   ; preds = %.lr.ph141.8
  %3736 = icmp ne i32 %.134.7, 0
  br i1 %3736, label %102, label %3737

; <label>:3737:                                   ; preds = %3735
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 40), align 8
  store i32 0, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 20), align 4
  br label %.loopexit71.8

.loopexit71.8:                                    ; preds = %3737, %3732, %3729, %3714, %3713, %3706, %3698, %3697, %3696, %3695, %3694, %3693, %.loopexit71.loopexit.8, %3565, %3561, %3539, %3529, %3520, %3504, %3492, %3482, %3472, %3462, %3461, %3460, %3459, %3458, %3454, %3453, %3451, %3449, %3440
  %.134.8 = phi i32 [ %.134.7, %3453 ], [ %.134.7, %3458 ], [ %.134.7, %3459 ], [ %.134.7, %3460 ], [ %.134.7, %3461 ], [ %.134.7, %3492 ], [ %.134.7, %3504 ], [ %.134.7, %3520 ], [ %.134.7, %3561 ], [ %.134.7, %3693 ], [ %.134.7, %3694 ], [ %.134.7, %3695 ], [ %.134.7, %3696 ], [ %.134.7, %3697 ], [ %.134.7, %3698 ], [ %.134.7, %3713 ], [ %.134.7, %3714 ], [ %.134.7, %3737 ], [ %.134.7, %3732 ], [ %.134.7, %3729 ], [ %.134.7, %3706 ], [ %.134.7, %3565 ], [ %.134.7, %3539 ], [ %.134.7, %3529 ], [ %.134.7, %3482 ], [ %.134.7, %3472 ], [ %.134.7, %3462 ], [ %.134.7, %3454 ], [ %.134.7, %3449 ], [ %.134.7, %3451 ], [ 1, %3440 ], [ %.134.7, %.loopexit71.loopexit.8 ]
  %.531.8 = phi i32 [ %.531.7, %3453 ], [ %.531.7, %3458 ], [ %.531.7, %3459 ], [ %.531.7, %3460 ], [ %.531.7, %3461 ], [ %.531.7, %3492 ], [ %.531.7, %3504 ], [ %.531.7, %3520 ], [ %.531.7, %3561 ], [ %.531.7, %3693 ], [ %.531.7, %3694 ], [ %.531.7, %3695 ], [ %.531.7, %3696 ], [ %.531.7, %3697 ], [ %.531.7, %3698 ], [ %.531.7, %3713 ], [ %.531.7, %3714 ], [ %.531.7, %3737 ], [ %.531.7, %3732 ], [ %.531.7, %3729 ], [ %.531.7, %3706 ], [ %.531.7, %3565 ], [ %.531.7, %3539 ], [ %.531.7, %3529 ], [ %.531.7, %3482 ], [ %.531.7, %3472 ], [ %.531.7, %3462 ], [ %.531.7, %3454 ], [ %.531.7, %3449 ], [ %.531.7, %3451 ], [ %.531.7, %3440 ], [ %.531.ph.8, %.loopexit71.loopexit.8 ]
  call void @__loop_iteration_test___0()
  store i32 0, i32* %30, align 4
  %3738 = call i32 @getopt_long(i32 4, i8** %25, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.86, i64 0, i64 0), %struct.option* getelementptr inbounds ([10 x %struct.option], [10 x %struct.option]* @main.long_options, i64 0, i64 0), i32* %30) #9, !track_argc !219
  %3739 = icmp slt i32 %3738, 0
  br i1 %3739, label %._crit_edge142.loopexit, label %.lr.ph141.9

.lr.ph141.9:                                      ; preds = %.loopexit71.8
  call void @unroll_loop(i32 124)
  switch i32 %3738, label %.loopexit1 [
    i32 58, label %75
    i32 63, label %80
    i32 117, label %85
    i32 86, label %4035
    i32 97, label %4017
    i32 101, label %4014
    i32 98, label %4009
    i32 112, label %3999
    i32 113, label %3998
    i32 99, label %3997
    i32 68, label %3996
    i32 104, label %3995
    i32 116, label %3994
    i32 49, label %3993
    i32 100, label %3869
    i32 109, label %3865
    i32 110, label %3842
    i32 105, label %3832
    i32 102, label %3825
    i32 107, label %3810
    i32 108, label %3797
    i32 77, label %3785
    i32 80, label %3775
    i32 120, label %3762
    i32 88, label %3761
    i32 121, label %3760
    i32 75, label %3759
    i32 115, label %3758
    i32 119, label %3754
    i32 114, label %484
    i32 48, label %3753
    i32 72, label %.loopexit13
    i32 67, label %3743
    i32 122, label %3740
  ]

; <label>:3740:                                   ; preds = %.lr.ph141.9
  %3741 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 40), align 8
  %3742 = icmp ne i32 %3741, 0
  br i1 %3742, label %507, label %.loopexit71.9

; <label>:3743:                                   ; preds = %.lr.ph141.9
  %3744 = load i8*, i8** @optarg, align 8
  %3745 = call i32 @checkbssids(i8* %3744)
  %3746 = icmp slt i32 %3745, 1
  br i1 %3746, label %493, label %3747

; <label>:3747:                                   ; preds = %3743
  %3748 = icmp eq i32 %3745, 1
  br i1 %3748, label %3751, label %3749

; <label>:3749:                                   ; preds = %3747
  %3750 = load i8*, i8** @optarg, align 8
  store i8* %3750, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 34), align 8
  br label %.loopexit71.9

; <label>:3751:                                   ; preds = %3747
  %3752 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.112, i64 0, i64 0))
  br label %.loopexit71.9

; <label>:3753:                                   ; preds = %.lr.ph141.9
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 27), align 4
  br label %.loopexit71.9

; <label>:3754:                                   ; preds = %.lr.ph141.9
  %3755 = load i8*, i8** @optarg, align 8
  %3756 = call i32 @set_dicts(i8* %3755)
  %3757 = icmp ne i32 %3756, 0
  br i1 %3757, label %479, label %.loopexit71.9

; <label>:3758:                                   ; preds = %.lr.ph141.9
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 26), align 8
  br label %.loopexit71.9

; <label>:3759:                                   ; preds = %.lr.ph141.9
  store i32 0, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 20), align 4
  br label %.loopexit71.9

; <label>:3760:                                   ; preds = %.lr.ph141.9
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 19), align 8
  br label %.loopexit71.9

; <label>:3761:                                   ; preds = %.lr.ph141.9
  store i32 0, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 18), align 4
  br label %.loopexit71.9

; <label>:3762:                                   ; preds = %.lr.ph141.9
  store i32 0, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 17), align 8
  %3763 = load i8*, i8** @optarg, align 8
  %3764 = icmp ne i8* %3763, null
  br i1 %3764, label %3765, label %.loopexit71.9

; <label>:3765:                                   ; preds = %3762
  %3766 = load i8*, i8** @optarg, align 8
  %3767 = call i32 (i8*, i8*, ...) @sscanf(i8* %3766, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 17)) #9
  %3768 = icmp ne i32 %3767, 1
  br i1 %3768, label %463, label %3769

; <label>:3769:                                   ; preds = %3765
  %3770 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 17), align 8
  %3771 = icmp slt i32 %3770, 0
  br i1 %3771, label %463, label %3772

; <label>:3772:                                   ; preds = %3769
  %3773 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 17), align 8
  %3774 = icmp sgt i32 %3773, 4
  br i1 %3774, label %463, label %.loopexit71.9

; <label>:3775:                                   ; preds = %.lr.ph141.9
  %3776 = load i8*, i8** @optarg, align 8
  %3777 = call i32 (i8*, i8*, ...) @sscanf(i8* %3776, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 39)) #9
  %3778 = icmp ne i32 %3777, 1
  br i1 %3778, label %443, label %3779

; <label>:3779:                                   ; preds = %3775
  %3780 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 39), align 4
  %3781 = icmp slt i32 %3780, 0
  br i1 %3781, label %443, label %3782

; <label>:3782:                                   ; preds = %3779
  %3783 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 39), align 4
  %3784 = icmp sgt i32 %3783, 2
  br i1 %3784, label %443, label %.loopexit71.9

; <label>:3785:                                   ; preds = %.lr.ph141.9
  %3786 = load i8*, i8** @optarg, align 8
  %3787 = call i32 (i8*, i8*, ...) @sscanf(i8* %3786, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 33)) #9
  %3788 = icmp ne i32 %3787, 1
  br i1 %3788, label %421, label %3789

; <label>:3789:                                   ; preds = %3785
  %3790 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 33), align 8
  %3791 = icmp slt i32 %3790, 1
  br i1 %3791, label %421, label %3792

; <label>:3792:                                   ; preds = %3789
  %3793 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 13), align 8
  %3794 = sub nsw i32 %3793, 1
  %3795 = sext i32 %3794 to i64
  %3796 = getelementptr inbounds [17 x i32], [17 x i32]* @K_COEFF, i64 0, i64 %3795
  store i32 0, i32* %3796, align 4
  br label %.loopexit71.9

; <label>:3797:                                   ; preds = %.lr.ph141.9
  %3798 = load i8*, i8** @optarg, align 8
  %3799 = call i64 @strlen(i8* %3798) #10
  %3800 = add i64 %3799, 1
  %3801 = call noalias i8* @calloc(i64 1, i64 %3800) #9, !track !221
  store i8* %3801, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 42), align 8
  %3802 = load i8*, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 42), align 8
  %3803 = icmp eq i8* %3802, null
  br i1 %3803, label %405, label %3804

; <label>:3804:                                   ; preds = %3797
  %3805 = load i8*, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 42), align 8
  %3806 = load i8*, i8** @optarg, align 8
  %3807 = load i8*, i8** @optarg, align 8
  %3808 = call i64 @strlen(i8* %3807) #10
  %3809 = call i8* @strncpy(i8* %3805, i8* %3806, i64 %3808) #9, !track !222
  br label %.loopexit71.9

; <label>:3810:                                   ; preds = %.lr.ph141.9
  %3811 = load i8*, i8** @optarg, align 8
  %3812 = call i32 (i8*, i8*, ...) @sscanf(i8* %3811, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 13)) #9
  %3813 = icmp ne i32 %3812, 1
  br i1 %3813, label %386, label %3814

; <label>:3814:                                   ; preds = %3810
  %3815 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 13), align 8
  %3816 = icmp slt i32 %3815, 1
  br i1 %3816, label %386, label %3817

; <label>:3817:                                   ; preds = %3814
  %3818 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 13), align 8
  %3819 = icmp sgt i32 %3818, 17
  br i1 %3819, label %386, label %3820

; <label>:3820:                                   ; preds = %3817
  %3821 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 13), align 8
  %3822 = sub nsw i32 %3821, 1
  %3823 = sext i32 %3822 to i64
  %3824 = getelementptr inbounds [17 x i32], [17 x i32]* @K_COEFF, i64 0, i64 %3823
  store i32 0, i32* %3824, align 4
  br label %.loopexit71.9

; <label>:3825:                                   ; preds = %.lr.ph141.9
  %3826 = load i8*, i8** @optarg, align 8
  %3827 = call i32 (i8*, i8*, ...) @sscanf(i8* %3826, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.103, i64 0, i64 0), float* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 12)) #9
  %3828 = icmp ne i32 %3827, 1
  br i1 %3828, label %369, label %3829

; <label>:3829:                                   ; preds = %3825
  %3830 = load float, float* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 12), align 4
  %3831 = fcmp olt float %3830, 1.000000e+00
  br i1 %3831, label %369, label %.loopexit71.9

; <label>:3832:                                   ; preds = %.lr.ph141.9
  %3833 = load i8*, i8** @optarg, align 8
  %3834 = call i32 (i8*, i8*, ...) @sscanf(i8* %3833, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 11)) #9
  %3835 = icmp ne i32 %3834, 1
  br i1 %3835, label %355, label %3836

; <label>:3836:                                   ; preds = %3832
  %3837 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 11), align 8
  %3838 = icmp slt i32 %3837, 1
  br i1 %3838, label %355, label %3839

; <label>:3839:                                   ; preds = %3836
  %3840 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 11), align 8
  %3841 = icmp sgt i32 %3840, 4
  br i1 %3841, label %355, label %.loopexit71.9

; <label>:3842:                                   ; preds = %.lr.ph141.9
  %3843 = load i8*, i8** @optarg, align 8
  %3844 = call i32 (i8*, i8*, ...) @sscanf(i8* %3843, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10)) #9
  %3845 = icmp ne i32 %3844, 1
  br i1 %3845, label %334, label %3846

; <label>:3846:                                   ; preds = %3842
  %3847 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %3848 = icmp ne i32 %3847, 64
  br i1 %3848, label %3849, label %3861

; <label>:3849:                                   ; preds = %3846
  %3850 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %3851 = icmp ne i32 %3850, 128
  br i1 %3851, label %3852, label %3861

; <label>:3852:                                   ; preds = %3849
  %3853 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %3854 = icmp ne i32 %3853, 152
  br i1 %3854, label %3855, label %3861

; <label>:3855:                                   ; preds = %3852
  %3856 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %3857 = icmp ne i32 %3856, 256
  br i1 %3857, label %3858, label %3861

; <label>:3858:                                   ; preds = %3855
  %3859 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %3860 = icmp ne i32 %3859, 512
  br i1 %3860, label %334, label %3861

; <label>:3861:                                   ; preds = %3858, %3855, %3852, %3849, %3846
  %3862 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %3863 = sdiv i32 %3862, 8
  %3864 = sub nsw i32 %3863, 3
  store i32 %3864, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  br label %.loopexit71.9

; <label>:3865:                                   ; preds = %.lr.ph141.9
  %3866 = load i8*, i8** @optarg, align 8
  %3867 = call i32 @getmac(i8* %3866, i32 1, i8* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 9, i64 0))
  %3868 = icmp ne i32 %3867, 0
  br i1 %3868, label %308, label %.loopexit71.9

; <label>:3869:                                   ; preds = %.lr.ph141.9
  store i32 0, i32* %27, align 4
  %3870 = load i8*, i8** @optarg, align 8
  %3871 = load i8, i8* %3870, align 1
  %3872 = sext i8 %3871 to i32
  %3873 = icmp ne i32 %3872, 0
  br i1 %3873, label %.lr.ph136.preheader.9, label %._crit_edge137.9

.lr.ph136.preheader.9:                            ; preds = %3869
  br label %.lr.ph136.9

.lr.ph136.9:                                      ; preds = %3920, %.lr.ph136.preheader.9
  %.02134.9 = phi i32 [ %.13.9, %3920 ], [ 0, %.lr.ph136.preheader.9 ]
  call void @unroll_loop(i32 125)
  %3874 = sext i32 %.02134.9 to i64
  %3875 = getelementptr inbounds i8, i8* %3870, i64 %3874
  %3876 = load i8, i8* %3875, align 1
  %3877 = sext i8 %3876 to i32
  %3878 = icmp eq i32 %3877, 120
  br i1 %3878, label %3879, label %3882

; <label>:3879:                                   ; preds = %.lr.ph136.9
  %3880 = sext i32 %.02134.9 to i64
  %3881 = getelementptr inbounds i8, i8* %3870, i64 %3880
  store i8 88, i8* %3881, align 1
  br label %3882

; <label>:3882:                                   ; preds = %3879, %.lr.ph136.9
  %3883 = sext i32 %.02134.9 to i64
  %3884 = getelementptr inbounds i8, i8* %3870, i64 %3883
  %3885 = load i8, i8* %3884, align 1
  %3886 = sext i8 %3885 to i32
  %3887 = icmp eq i32 %3886, 121
  br i1 %3887, label %3888, label %3891

; <label>:3888:                                   ; preds = %3882
  %3889 = sext i32 %.02134.9 to i64
  %3890 = getelementptr inbounds i8, i8* %3870, i64 %3889
  store i8 89, i8* %3890, align 1
  br label %3891

; <label>:3891:                                   ; preds = %3888, %3882
  %3892 = sext i32 %.02134.9 to i64
  %3893 = getelementptr inbounds i8, i8* %3870, i64 %3892
  %3894 = load i8, i8* %3893, align 1
  %3895 = sext i8 %3894 to i32
  %3896 = icmp eq i32 %3895, 45
  br i1 %3896, label %3918, label %3897

; <label>:3897:                                   ; preds = %3891
  %3898 = sext i32 %.02134.9 to i64
  %3899 = getelementptr inbounds i8, i8* %3870, i64 %3898
  %3900 = load i8, i8* %3899, align 1
  %3901 = sext i8 %3900 to i32
  %3902 = icmp eq i32 %3901, 58
  br i1 %3902, label %3918, label %3903

; <label>:3903:                                   ; preds = %3897
  %3904 = sext i32 %.02134.9 to i64
  %3905 = getelementptr inbounds i8, i8* %3870, i64 %3904
  %3906 = load i8, i8* %3905, align 1
  %3907 = sext i8 %3906 to i32
  %3908 = icmp eq i32 %3907, 32
  br i1 %3908, label %3918, label %3909

; <label>:3909:                                   ; preds = %3903
  %3910 = add nsw i32 %.02134.9, 1
  %3911 = sext i32 %.02134.9 to i64
  %3912 = getelementptr inbounds i8, i8* %3870, i64 %3911
  %3913 = load i8, i8* %3912, align 1
  %3914 = load i32, i32* %27, align 4
  %3915 = add nsw i32 %3914, 1
  store i32 %3915, i32* %27, align 4
  %3916 = sext i32 %3914 to i64
  %3917 = getelementptr inbounds i8, i8* %3870, i64 %3916
  store i8 %3913, i8* %3917, align 1
  br label %3920

; <label>:3918:                                   ; preds = %3903, %3897, %3891
  %3919 = add nsw i32 %.02134.9, 1
  br label %3920

; <label>:3920:                                   ; preds = %3918, %3909
  %.13.9 = phi i32 [ %3919, %3918 ], [ %3910, %3909 ]
  %3921 = sext i32 %.13.9 to i64
  %3922 = getelementptr inbounds i8, i8* %3870, i64 %3921
  %3923 = load i8, i8* %3922, align 1
  %3924 = sext i8 %3923 to i32
  %3925 = icmp ne i32 %3924, 0
  br i1 %3925, label %.lr.ph136.9, label %._crit_edge137.loopexit.9

._crit_edge137.loopexit.9:                        ; preds = %3920
  br label %._crit_edge137.9

._crit_edge137.9:                                 ; preds = %._crit_edge137.loopexit.9, %3869
  %3926 = load i32, i32* %27, align 4
  %3927 = sext i32 %3926 to i64
  %3928 = getelementptr inbounds i8, i8* %3870, i64 %3927
  store i8 0, i8* %3928, align 1
  %3929 = load i8, i8* %3870, align 1
  store i8 %3929, i8* %61, align 16
  %3930 = getelementptr inbounds i8, i8* %3870, i64 1
  %3931 = load i8, i8* %3930, align 1
  store i8 %3931, i8* %62, align 1
  store i8 0, i8* %63, align 2
  %scevgep45.9 = getelementptr i8, i8* %3870, i64 3
  br label %3932

; <label>:3932:                                   ; preds = %3990, %._crit_edge137.9
  %lsr.iv48.9 = phi i8* [ %scevgep49.9, %3990 ], [ %scevgep45.9, %._crit_edge137.9 ]
  %.127.9 = phi i32 [ 0, %._crit_edge137.9 ], [ %.329.9, %3990 ]
  %.24.9 = phi i32 [ 0, %._crit_edge137.9 ], [ %.46.9, %3990 ]
  call void @unroll_loop(i32 126)
  %3933 = call i32 (i8*, i8*, ...) @sscanf(i8* %64, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.72, i64 0, i64 0), i32* %27) #9
  %3934 = icmp eq i32 %3933, 1
  br i1 %3934, label %.critedge.9, label %3935

; <label>:3935:                                   ; preds = %3932
  %3936 = load i8, i8* %66, align 16
  %3937 = sext i8 %3936 to i32
  %3938 = icmp eq i32 %3937, 88
  br i1 %3938, label %3939, label %3943

; <label>:3939:                                   ; preds = %3935
  %3940 = load i8, i8* %69, align 1
  %3941 = sext i8 %3940 to i32
  %3942 = icmp eq i32 %3941, 88
  br i1 %3942, label %.critedge.9, label %3943

; <label>:3943:                                   ; preds = %3939, %3935
  %3944 = load i8, i8* %70, align 16
  %3945 = sext i8 %3944 to i32
  %3946 = icmp eq i32 %3945, 89
  %3947 = load i8, i8* %71, align 1
  %3948 = sext i8 %3947 to i32
  %3949 = icmp eq i32 %3948, 89
  %3950 = select i1 %3946, i1 %3949, i1 false
  br i1 %3950, label %.critedge.9, label %.loopexit71.loopexit.9

.critedge.9:                                      ; preds = %3943, %3939, %3932
  %3951 = load i8, i8* %65, align 16
  %3952 = sext i8 %3951 to i32
  %3953 = icmp eq i32 %3952, 88
  br i1 %3953, label %3954, label %3958

; <label>:3954:                                   ; preds = %.critedge.9
  %3955 = load i8, i8* %67, align 1
  %3956 = sext i8 %3955 to i32
  %3957 = icmp eq i32 %3956, 88
  br i1 %3957, label %3984, label %3958

; <label>:3958:                                   ; preds = %3954, %.critedge.9
  %3959 = load i8, i8* %68, align 16
  %3960 = sext i8 %3959 to i32
  %3961 = icmp eq i32 %3960, 89
  br i1 %3961, label %3962, label %3966

; <label>:3962:                                   ; preds = %3958
  %3963 = load i8, i8* %74, align 1
  %3964 = sext i8 %3963 to i32
  %3965 = icmp eq i32 %3964, 89
  br i1 %3965, label %3979, label %3966

; <label>:3966:                                   ; preds = %3962, %3958
  %3967 = load i32, i32* %27, align 4
  %3968 = icmp slt i32 %3967, 0
  %3969 = load i32, i32* %27, align 4
  %3970 = icmp sgt i32 %3969, 255
  %or.cond.9 = or i1 %3968, %3970
  br i1 %or.cond.9, label %.loopexit15, label %3971

; <label>:3971:                                   ; preds = %3966
  %3972 = load i32, i32* %27, align 4
  %3973 = trunc i32 %3972 to i8
  %3974 = sext i32 %.24.9 to i64
  %3975 = getelementptr inbounds [64 x i8], [64 x i8]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 7), i64 0, i64 %3974
  store i8 %3973, i8* %3975, align 1
  %3976 = add nsw i32 %.24.9, 1
  %3977 = sext i32 %.24.9 to i64
  %3978 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 8), i64 0, i64 %3977
  store i32 1, i32* %3978, align 4
  br label %3988

; <label>:3979:                                   ; preds = %3962
  %3980 = add nsw i32 %.24.9, 1
  %3981 = add nsw i32 %.127.9, 1
  %3982 = sext i32 %.127.9 to i64
  %3983 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 31), i64 0, i64 %3982
  store i32 %.24.9, i32* %3983, align 4
  br label %3988

; <label>:3984:                                   ; preds = %3954
  %3985 = add nsw i32 %.24.9, 1
  %3986 = sext i32 %.24.9 to i64
  %3987 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 8), i64 0, i64 %3986
  store i32 0, i32* %3987, align 4
  br label %3988

; <label>:3988:                                   ; preds = %3984, %3979, %3971
  %.329.9 = phi i32 [ %.127.9, %3984 ], [ %3981, %3979 ], [ %.127.9, %3971 ]
  %.46.9 = phi i32 [ %3985, %3984 ], [ %3980, %3979 ], [ %3976, %3971 ]
  %3989 = icmp sge i32 %.46.9, 64
  br i1 %3989, label %.loopexit71.loopexit.9, label %3990

; <label>:3990:                                   ; preds = %3988
  %scevgep50.9 = getelementptr i8, i8* %lsr.iv48.9, i64 -1
  %3991 = load i8, i8* %scevgep50.9, align 1
  store i8 %3991, i8* %72, align 16
  %3992 = load i8, i8* %lsr.iv48.9, align 1
  store i8 %3992, i8* %73, align 1
  %scevgep49.9 = getelementptr i8, i8* %lsr.iv48.9, i64 2
  br label %3932

.loopexit71.loopexit.9:                           ; preds = %3988, %3943
  %.531.ph.9 = phi i32 [ %.329.9, %3988 ], [ %.127.9, %3943 ]
  br label %.loopexit71.9

; <label>:3993:                                   ; preds = %.lr.ph141.9
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 41), align 4
  br label %.loopexit71.9

; <label>:3994:                                   ; preds = %.lr.ph141.9
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 16), align 4
  br label %.loopexit71.9

; <label>:3995:                                   ; preds = %.lr.ph141.9
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 14), align 4
  br label %.loopexit71.9

; <label>:3996:                                   ; preds = %.lr.ph141.9
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 38), align 8
  br label %.loopexit71.9

; <label>:3997:                                   ; preds = %.lr.ph141.9
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 15), align 8
  br label %.loopexit71.9

; <label>:3998:                                   ; preds = %.lr.ph141.9
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 6), align 8
  br label %.loopexit71.9

; <label>:3999:                                   ; preds = %.lr.ph141.9
  %4000 = load i8*, i8** @optarg, align 8
  %4001 = call i32 (i8*, i8*, ...) @sscanf(i8* %4000, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 5)) #9
  %4002 = icmp ne i32 %4001, 1
  br i1 %4002, label %160, label %4003

; <label>:4003:                                   ; preds = %3999
  %4004 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 5), align 4
  %4005 = icmp slt i32 %4004, 1
  br i1 %4005, label %160, label %4006

; <label>:4006:                                   ; preds = %4003
  %4007 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 5), align 4
  %4008 = icmp sgt i32 %4007, 128
  br i1 %4008, label %160, label %.loopexit71.9

; <label>:4009:                                   ; preds = %.lr.ph141.9
  %4010 = load i8*, i8** @optarg, align 8
  %4011 = call i32 @getmac(i8* %4010, i32 1, i8* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 4, i64 0))
  %4012 = icmp ne i32 %4011, 0
  br i1 %4012, label %142, label %4013

; <label>:4013:                                   ; preds = %4009
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 2), align 8
  br label %.loopexit71.9

; <label>:4014:                                   ; preds = %.lr.ph141.9
  call void @llvm.memset.p0i8.i64(i8* align 4 getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 3, i64 0), i8 0, i64 33, i1 false)
  %4015 = load i8*, i8** @optarg, align 8
  %4016 = call i8* @strncpy(i8* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 3, i64 0), i8* %4015, i64 32) #9, !track !220
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 1), align 4
  br label %.loopexit71.9

; <label>:4017:                                   ; preds = %.lr.ph141.9
  %4018 = load i8*, i8** @optarg, align 8
  %4019 = call i32 (i8*, i8*, ...) @sscanf(i8* %4018, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 0)) #9
  %4020 = load i8*, i8** @optarg, align 8
  %4021 = call i32 @strcasecmp(i8* %4020, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.94, i64 0, i64 0)) #10
  %4022 = icmp eq i32 %4021, 0
  br i1 %4022, label %4028, label %4023

; <label>:4023:                                   ; preds = %4017
  %4024 = load i8*, i8** @optarg, align 8
  %4025 = call i32 @strcasecmp(i8* %4024, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.95, i64 0, i64 0)) #10
  %4026 = icmp eq i32 %4025, 0
  br i1 %4026, label %4027, label %4029

; <label>:4027:                                   ; preds = %4023
  store i32 2, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 0), align 8
  br label %4029

; <label>:4028:                                   ; preds = %4017
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 0), align 8
  br label %4029

; <label>:4029:                                   ; preds = %4028, %4027, %4023
  %4030 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 0), align 8
  %4031 = icmp ne i32 %4030, 1
  br i1 %4031, label %4032, label %.loopexit71.9

; <label>:4032:                                   ; preds = %4029
  %4033 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 0), align 8
  %4034 = icmp ne i32 %4033, 2
  br i1 %4034, label %128, label %.loopexit71.9

; <label>:4035:                                   ; preds = %.lr.ph141.9
  %4036 = icmp ne i32 %.134.8, 0
  br i1 %4036, label %102, label %4037

; <label>:4037:                                   ; preds = %4035
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 40), align 8
  store i32 0, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 20), align 4
  br label %.loopexit71.9

.loopexit71.9:                                    ; preds = %4037, %4032, %4029, %4014, %4013, %4006, %3998, %3997, %3996, %3995, %3994, %3993, %.loopexit71.loopexit.9, %3865, %3861, %3839, %3829, %3820, %3804, %3792, %3782, %3772, %3762, %3761, %3760, %3759, %3758, %3754, %3753, %3751, %3749, %3740
  %.134.9 = phi i32 [ %.134.8, %3753 ], [ %.134.8, %3758 ], [ %.134.8, %3759 ], [ %.134.8, %3760 ], [ %.134.8, %3761 ], [ %.134.8, %3792 ], [ %.134.8, %3804 ], [ %.134.8, %3820 ], [ %.134.8, %3861 ], [ %.134.8, %3993 ], [ %.134.8, %3994 ], [ %.134.8, %3995 ], [ %.134.8, %3996 ], [ %.134.8, %3997 ], [ %.134.8, %3998 ], [ %.134.8, %4013 ], [ %.134.8, %4014 ], [ %.134.8, %4037 ], [ %.134.8, %4032 ], [ %.134.8, %4029 ], [ %.134.8, %4006 ], [ %.134.8, %3865 ], [ %.134.8, %3839 ], [ %.134.8, %3829 ], [ %.134.8, %3782 ], [ %.134.8, %3772 ], [ %.134.8, %3762 ], [ %.134.8, %3754 ], [ %.134.8, %3749 ], [ %.134.8, %3751 ], [ 1, %3740 ], [ %.134.8, %.loopexit71.loopexit.9 ]
  %.531.9 = phi i32 [ %.531.8, %3753 ], [ %.531.8, %3758 ], [ %.531.8, %3759 ], [ %.531.8, %3760 ], [ %.531.8, %3761 ], [ %.531.8, %3792 ], [ %.531.8, %3804 ], [ %.531.8, %3820 ], [ %.531.8, %3861 ], [ %.531.8, %3993 ], [ %.531.8, %3994 ], [ %.531.8, %3995 ], [ %.531.8, %3996 ], [ %.531.8, %3997 ], [ %.531.8, %3998 ], [ %.531.8, %4013 ], [ %.531.8, %4014 ], [ %.531.8, %4037 ], [ %.531.8, %4032 ], [ %.531.8, %4029 ], [ %.531.8, %4006 ], [ %.531.8, %3865 ], [ %.531.8, %3839 ], [ %.531.8, %3829 ], [ %.531.8, %3782 ], [ %.531.8, %3772 ], [ %.531.8, %3762 ], [ %.531.8, %3754 ], [ %.531.8, %3749 ], [ %.531.8, %3751 ], [ %.531.8, %3740 ], [ %.531.ph.9, %.loopexit71.loopexit.9 ]
  call void @__loop_iteration_test___0()
  store i32 0, i32* %30, align 4
  %4038 = call i32 @getopt_long(i32 4, i8** %25, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.86, i64 0, i64 0), %struct.option* getelementptr inbounds ([10 x %struct.option], [10 x %struct.option]* @main.long_options, i64 0, i64 0), i32* %30) #9, !track_argc !219
  %4039 = icmp slt i32 %4038, 0
  br i1 %4039, label %._crit_edge142.loopexit, label %.lr.ph141.10

.lr.ph141.10:                                     ; preds = %.loopexit71.9
  call void @unroll_loop(i32 124)
  switch i32 %4038, label %.loopexit1 [
    i32 58, label %75
    i32 63, label %80
    i32 117, label %85
    i32 86, label %4335
    i32 97, label %4317
    i32 101, label %4314
    i32 98, label %4309
    i32 112, label %4299
    i32 113, label %4298
    i32 99, label %4297
    i32 68, label %4296
    i32 104, label %4295
    i32 116, label %4294
    i32 49, label %4293
    i32 100, label %4169
    i32 109, label %4165
    i32 110, label %4142
    i32 105, label %4132
    i32 102, label %4125
    i32 107, label %4110
    i32 108, label %4097
    i32 77, label %4085
    i32 80, label %4075
    i32 120, label %4062
    i32 88, label %4061
    i32 121, label %4060
    i32 75, label %4059
    i32 115, label %4058
    i32 119, label %4054
    i32 114, label %484
    i32 48, label %4053
    i32 72, label %.loopexit13
    i32 67, label %4043
    i32 122, label %4040
  ]

; <label>:4040:                                   ; preds = %.lr.ph141.10
  %4041 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 40), align 8
  %4042 = icmp ne i32 %4041, 0
  br i1 %4042, label %507, label %.loopexit71.10

; <label>:4043:                                   ; preds = %.lr.ph141.10
  %4044 = load i8*, i8** @optarg, align 8
  %4045 = call i32 @checkbssids(i8* %4044)
  %4046 = icmp slt i32 %4045, 1
  br i1 %4046, label %493, label %4047

; <label>:4047:                                   ; preds = %4043
  %4048 = icmp eq i32 %4045, 1
  br i1 %4048, label %4051, label %4049

; <label>:4049:                                   ; preds = %4047
  %4050 = load i8*, i8** @optarg, align 8
  store i8* %4050, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 34), align 8
  br label %.loopexit71.10

; <label>:4051:                                   ; preds = %4047
  %4052 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.112, i64 0, i64 0))
  br label %.loopexit71.10

; <label>:4053:                                   ; preds = %.lr.ph141.10
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 27), align 4
  br label %.loopexit71.10

; <label>:4054:                                   ; preds = %.lr.ph141.10
  %4055 = load i8*, i8** @optarg, align 8
  %4056 = call i32 @set_dicts(i8* %4055)
  %4057 = icmp ne i32 %4056, 0
  br i1 %4057, label %479, label %.loopexit71.10

; <label>:4058:                                   ; preds = %.lr.ph141.10
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 26), align 8
  br label %.loopexit71.10

; <label>:4059:                                   ; preds = %.lr.ph141.10
  store i32 0, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 20), align 4
  br label %.loopexit71.10

; <label>:4060:                                   ; preds = %.lr.ph141.10
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 19), align 8
  br label %.loopexit71.10

; <label>:4061:                                   ; preds = %.lr.ph141.10
  store i32 0, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 18), align 4
  br label %.loopexit71.10

; <label>:4062:                                   ; preds = %.lr.ph141.10
  store i32 0, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 17), align 8
  %4063 = load i8*, i8** @optarg, align 8
  %4064 = icmp ne i8* %4063, null
  br i1 %4064, label %4065, label %.loopexit71.10

; <label>:4065:                                   ; preds = %4062
  %4066 = load i8*, i8** @optarg, align 8
  %4067 = call i32 (i8*, i8*, ...) @sscanf(i8* %4066, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 17)) #9
  %4068 = icmp ne i32 %4067, 1
  br i1 %4068, label %463, label %4069

; <label>:4069:                                   ; preds = %4065
  %4070 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 17), align 8
  %4071 = icmp slt i32 %4070, 0
  br i1 %4071, label %463, label %4072

; <label>:4072:                                   ; preds = %4069
  %4073 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 17), align 8
  %4074 = icmp sgt i32 %4073, 4
  br i1 %4074, label %463, label %.loopexit71.10

; <label>:4075:                                   ; preds = %.lr.ph141.10
  %4076 = load i8*, i8** @optarg, align 8
  %4077 = call i32 (i8*, i8*, ...) @sscanf(i8* %4076, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 39)) #9
  %4078 = icmp ne i32 %4077, 1
  br i1 %4078, label %443, label %4079

; <label>:4079:                                   ; preds = %4075
  %4080 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 39), align 4
  %4081 = icmp slt i32 %4080, 0
  br i1 %4081, label %443, label %4082

; <label>:4082:                                   ; preds = %4079
  %4083 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 39), align 4
  %4084 = icmp sgt i32 %4083, 2
  br i1 %4084, label %443, label %.loopexit71.10

; <label>:4085:                                   ; preds = %.lr.ph141.10
  %4086 = load i8*, i8** @optarg, align 8
  %4087 = call i32 (i8*, i8*, ...) @sscanf(i8* %4086, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 33)) #9
  %4088 = icmp ne i32 %4087, 1
  br i1 %4088, label %421, label %4089

; <label>:4089:                                   ; preds = %4085
  %4090 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 33), align 8
  %4091 = icmp slt i32 %4090, 1
  br i1 %4091, label %421, label %4092

; <label>:4092:                                   ; preds = %4089
  %4093 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 13), align 8
  %4094 = sub nsw i32 %4093, 1
  %4095 = sext i32 %4094 to i64
  %4096 = getelementptr inbounds [17 x i32], [17 x i32]* @K_COEFF, i64 0, i64 %4095
  store i32 0, i32* %4096, align 4
  br label %.loopexit71.10

; <label>:4097:                                   ; preds = %.lr.ph141.10
  %4098 = load i8*, i8** @optarg, align 8
  %4099 = call i64 @strlen(i8* %4098) #10
  %4100 = add i64 %4099, 1
  %4101 = call noalias i8* @calloc(i64 1, i64 %4100) #9, !track !221
  store i8* %4101, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 42), align 8
  %4102 = load i8*, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 42), align 8
  %4103 = icmp eq i8* %4102, null
  br i1 %4103, label %405, label %4104

; <label>:4104:                                   ; preds = %4097
  %4105 = load i8*, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 42), align 8
  %4106 = load i8*, i8** @optarg, align 8
  %4107 = load i8*, i8** @optarg, align 8
  %4108 = call i64 @strlen(i8* %4107) #10
  %4109 = call i8* @strncpy(i8* %4105, i8* %4106, i64 %4108) #9, !track !222
  br label %.loopexit71.10

; <label>:4110:                                   ; preds = %.lr.ph141.10
  %4111 = load i8*, i8** @optarg, align 8
  %4112 = call i32 (i8*, i8*, ...) @sscanf(i8* %4111, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 13)) #9
  %4113 = icmp ne i32 %4112, 1
  br i1 %4113, label %386, label %4114

; <label>:4114:                                   ; preds = %4110
  %4115 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 13), align 8
  %4116 = icmp slt i32 %4115, 1
  br i1 %4116, label %386, label %4117

; <label>:4117:                                   ; preds = %4114
  %4118 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 13), align 8
  %4119 = icmp sgt i32 %4118, 17
  br i1 %4119, label %386, label %4120

; <label>:4120:                                   ; preds = %4117
  %4121 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 13), align 8
  %4122 = sub nsw i32 %4121, 1
  %4123 = sext i32 %4122 to i64
  %4124 = getelementptr inbounds [17 x i32], [17 x i32]* @K_COEFF, i64 0, i64 %4123
  store i32 0, i32* %4124, align 4
  br label %.loopexit71.10

; <label>:4125:                                   ; preds = %.lr.ph141.10
  %4126 = load i8*, i8** @optarg, align 8
  %4127 = call i32 (i8*, i8*, ...) @sscanf(i8* %4126, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.103, i64 0, i64 0), float* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 12)) #9
  %4128 = icmp ne i32 %4127, 1
  br i1 %4128, label %369, label %4129

; <label>:4129:                                   ; preds = %4125
  %4130 = load float, float* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 12), align 4
  %4131 = fcmp olt float %4130, 1.000000e+00
  br i1 %4131, label %369, label %.loopexit71.10

; <label>:4132:                                   ; preds = %.lr.ph141.10
  %4133 = load i8*, i8** @optarg, align 8
  %4134 = call i32 (i8*, i8*, ...) @sscanf(i8* %4133, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 11)) #9
  %4135 = icmp ne i32 %4134, 1
  br i1 %4135, label %355, label %4136

; <label>:4136:                                   ; preds = %4132
  %4137 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 11), align 8
  %4138 = icmp slt i32 %4137, 1
  br i1 %4138, label %355, label %4139

; <label>:4139:                                   ; preds = %4136
  %4140 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 11), align 8
  %4141 = icmp sgt i32 %4140, 4
  br i1 %4141, label %355, label %.loopexit71.10

; <label>:4142:                                   ; preds = %.lr.ph141.10
  %4143 = load i8*, i8** @optarg, align 8
  %4144 = call i32 (i8*, i8*, ...) @sscanf(i8* %4143, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10)) #9
  %4145 = icmp ne i32 %4144, 1
  br i1 %4145, label %334, label %4146

; <label>:4146:                                   ; preds = %4142
  %4147 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %4148 = icmp ne i32 %4147, 64
  br i1 %4148, label %4149, label %4161

; <label>:4149:                                   ; preds = %4146
  %4150 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %4151 = icmp ne i32 %4150, 128
  br i1 %4151, label %4152, label %4161

; <label>:4152:                                   ; preds = %4149
  %4153 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %4154 = icmp ne i32 %4153, 152
  br i1 %4154, label %4155, label %4161

; <label>:4155:                                   ; preds = %4152
  %4156 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %4157 = icmp ne i32 %4156, 256
  br i1 %4157, label %4158, label %4161

; <label>:4158:                                   ; preds = %4155
  %4159 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %4160 = icmp ne i32 %4159, 512
  br i1 %4160, label %334, label %4161

; <label>:4161:                                   ; preds = %4158, %4155, %4152, %4149, %4146
  %4162 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %4163 = sdiv i32 %4162, 8
  %4164 = sub nsw i32 %4163, 3
  store i32 %4164, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  br label %.loopexit71.10

; <label>:4165:                                   ; preds = %.lr.ph141.10
  %4166 = load i8*, i8** @optarg, align 8
  %4167 = call i32 @getmac(i8* %4166, i32 1, i8* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 9, i64 0))
  %4168 = icmp ne i32 %4167, 0
  br i1 %4168, label %308, label %.loopexit71.10

; <label>:4169:                                   ; preds = %.lr.ph141.10
  store i32 0, i32* %27, align 4
  %4170 = load i8*, i8** @optarg, align 8
  %4171 = load i8, i8* %4170, align 1
  %4172 = sext i8 %4171 to i32
  %4173 = icmp ne i32 %4172, 0
  br i1 %4173, label %.lr.ph136.preheader.10, label %._crit_edge137.10

.lr.ph136.preheader.10:                           ; preds = %4169
  br label %.lr.ph136.10

.lr.ph136.10:                                     ; preds = %4220, %.lr.ph136.preheader.10
  %.02134.10 = phi i32 [ %.13.10, %4220 ], [ 0, %.lr.ph136.preheader.10 ]
  call void @unroll_loop(i32 125)
  %4174 = sext i32 %.02134.10 to i64
  %4175 = getelementptr inbounds i8, i8* %4170, i64 %4174
  %4176 = load i8, i8* %4175, align 1
  %4177 = sext i8 %4176 to i32
  %4178 = icmp eq i32 %4177, 120
  br i1 %4178, label %4179, label %4182

; <label>:4179:                                   ; preds = %.lr.ph136.10
  %4180 = sext i32 %.02134.10 to i64
  %4181 = getelementptr inbounds i8, i8* %4170, i64 %4180
  store i8 88, i8* %4181, align 1
  br label %4182

; <label>:4182:                                   ; preds = %4179, %.lr.ph136.10
  %4183 = sext i32 %.02134.10 to i64
  %4184 = getelementptr inbounds i8, i8* %4170, i64 %4183
  %4185 = load i8, i8* %4184, align 1
  %4186 = sext i8 %4185 to i32
  %4187 = icmp eq i32 %4186, 121
  br i1 %4187, label %4188, label %4191

; <label>:4188:                                   ; preds = %4182
  %4189 = sext i32 %.02134.10 to i64
  %4190 = getelementptr inbounds i8, i8* %4170, i64 %4189
  store i8 89, i8* %4190, align 1
  br label %4191

; <label>:4191:                                   ; preds = %4188, %4182
  %4192 = sext i32 %.02134.10 to i64
  %4193 = getelementptr inbounds i8, i8* %4170, i64 %4192
  %4194 = load i8, i8* %4193, align 1
  %4195 = sext i8 %4194 to i32
  %4196 = icmp eq i32 %4195, 45
  br i1 %4196, label %4218, label %4197

; <label>:4197:                                   ; preds = %4191
  %4198 = sext i32 %.02134.10 to i64
  %4199 = getelementptr inbounds i8, i8* %4170, i64 %4198
  %4200 = load i8, i8* %4199, align 1
  %4201 = sext i8 %4200 to i32
  %4202 = icmp eq i32 %4201, 58
  br i1 %4202, label %4218, label %4203

; <label>:4203:                                   ; preds = %4197
  %4204 = sext i32 %.02134.10 to i64
  %4205 = getelementptr inbounds i8, i8* %4170, i64 %4204
  %4206 = load i8, i8* %4205, align 1
  %4207 = sext i8 %4206 to i32
  %4208 = icmp eq i32 %4207, 32
  br i1 %4208, label %4218, label %4209

; <label>:4209:                                   ; preds = %4203
  %4210 = add nsw i32 %.02134.10, 1
  %4211 = sext i32 %.02134.10 to i64
  %4212 = getelementptr inbounds i8, i8* %4170, i64 %4211
  %4213 = load i8, i8* %4212, align 1
  %4214 = load i32, i32* %27, align 4
  %4215 = add nsw i32 %4214, 1
  store i32 %4215, i32* %27, align 4
  %4216 = sext i32 %4214 to i64
  %4217 = getelementptr inbounds i8, i8* %4170, i64 %4216
  store i8 %4213, i8* %4217, align 1
  br label %4220

; <label>:4218:                                   ; preds = %4203, %4197, %4191
  %4219 = add nsw i32 %.02134.10, 1
  br label %4220

; <label>:4220:                                   ; preds = %4218, %4209
  %.13.10 = phi i32 [ %4219, %4218 ], [ %4210, %4209 ]
  %4221 = sext i32 %.13.10 to i64
  %4222 = getelementptr inbounds i8, i8* %4170, i64 %4221
  %4223 = load i8, i8* %4222, align 1
  %4224 = sext i8 %4223 to i32
  %4225 = icmp ne i32 %4224, 0
  br i1 %4225, label %.lr.ph136.10, label %._crit_edge137.loopexit.10

._crit_edge137.loopexit.10:                       ; preds = %4220
  br label %._crit_edge137.10

._crit_edge137.10:                                ; preds = %._crit_edge137.loopexit.10, %4169
  %4226 = load i32, i32* %27, align 4
  %4227 = sext i32 %4226 to i64
  %4228 = getelementptr inbounds i8, i8* %4170, i64 %4227
  store i8 0, i8* %4228, align 1
  %4229 = load i8, i8* %4170, align 1
  store i8 %4229, i8* %61, align 16
  %4230 = getelementptr inbounds i8, i8* %4170, i64 1
  %4231 = load i8, i8* %4230, align 1
  store i8 %4231, i8* %62, align 1
  store i8 0, i8* %63, align 2
  %scevgep45.10 = getelementptr i8, i8* %4170, i64 3
  br label %4232

; <label>:4232:                                   ; preds = %4290, %._crit_edge137.10
  %lsr.iv48.10 = phi i8* [ %scevgep49.10, %4290 ], [ %scevgep45.10, %._crit_edge137.10 ]
  %.127.10 = phi i32 [ 0, %._crit_edge137.10 ], [ %.329.10, %4290 ]
  %.24.10 = phi i32 [ 0, %._crit_edge137.10 ], [ %.46.10, %4290 ]
  call void @unroll_loop(i32 126)
  %4233 = call i32 (i8*, i8*, ...) @sscanf(i8* %64, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.72, i64 0, i64 0), i32* %27) #9
  %4234 = icmp eq i32 %4233, 1
  br i1 %4234, label %.critedge.10, label %4235

; <label>:4235:                                   ; preds = %4232
  %4236 = load i8, i8* %66, align 16
  %4237 = sext i8 %4236 to i32
  %4238 = icmp eq i32 %4237, 88
  br i1 %4238, label %4239, label %4243

; <label>:4239:                                   ; preds = %4235
  %4240 = load i8, i8* %69, align 1
  %4241 = sext i8 %4240 to i32
  %4242 = icmp eq i32 %4241, 88
  br i1 %4242, label %.critedge.10, label %4243

; <label>:4243:                                   ; preds = %4239, %4235
  %4244 = load i8, i8* %70, align 16
  %4245 = sext i8 %4244 to i32
  %4246 = icmp eq i32 %4245, 89
  %4247 = load i8, i8* %71, align 1
  %4248 = sext i8 %4247 to i32
  %4249 = icmp eq i32 %4248, 89
  %4250 = select i1 %4246, i1 %4249, i1 false
  br i1 %4250, label %.critedge.10, label %.loopexit71.loopexit.10

.critedge.10:                                     ; preds = %4243, %4239, %4232
  %4251 = load i8, i8* %65, align 16
  %4252 = sext i8 %4251 to i32
  %4253 = icmp eq i32 %4252, 88
  br i1 %4253, label %4254, label %4258

; <label>:4254:                                   ; preds = %.critedge.10
  %4255 = load i8, i8* %67, align 1
  %4256 = sext i8 %4255 to i32
  %4257 = icmp eq i32 %4256, 88
  br i1 %4257, label %4284, label %4258

; <label>:4258:                                   ; preds = %4254, %.critedge.10
  %4259 = load i8, i8* %68, align 16
  %4260 = sext i8 %4259 to i32
  %4261 = icmp eq i32 %4260, 89
  br i1 %4261, label %4262, label %4266

; <label>:4262:                                   ; preds = %4258
  %4263 = load i8, i8* %74, align 1
  %4264 = sext i8 %4263 to i32
  %4265 = icmp eq i32 %4264, 89
  br i1 %4265, label %4279, label %4266

; <label>:4266:                                   ; preds = %4262, %4258
  %4267 = load i32, i32* %27, align 4
  %4268 = icmp slt i32 %4267, 0
  %4269 = load i32, i32* %27, align 4
  %4270 = icmp sgt i32 %4269, 255
  %or.cond.10 = or i1 %4268, %4270
  br i1 %or.cond.10, label %.loopexit16, label %4271

; <label>:4271:                                   ; preds = %4266
  %4272 = load i32, i32* %27, align 4
  %4273 = trunc i32 %4272 to i8
  %4274 = sext i32 %.24.10 to i64
  %4275 = getelementptr inbounds [64 x i8], [64 x i8]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 7), i64 0, i64 %4274
  store i8 %4273, i8* %4275, align 1
  %4276 = add nsw i32 %.24.10, 1
  %4277 = sext i32 %.24.10 to i64
  %4278 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 8), i64 0, i64 %4277
  store i32 1, i32* %4278, align 4
  br label %4288

; <label>:4279:                                   ; preds = %4262
  %4280 = add nsw i32 %.24.10, 1
  %4281 = add nsw i32 %.127.10, 1
  %4282 = sext i32 %.127.10 to i64
  %4283 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 31), i64 0, i64 %4282
  store i32 %.24.10, i32* %4283, align 4
  br label %4288

; <label>:4284:                                   ; preds = %4254
  %4285 = add nsw i32 %.24.10, 1
  %4286 = sext i32 %.24.10 to i64
  %4287 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 8), i64 0, i64 %4286
  store i32 0, i32* %4287, align 4
  br label %4288

; <label>:4288:                                   ; preds = %4284, %4279, %4271
  %.329.10 = phi i32 [ %.127.10, %4284 ], [ %4281, %4279 ], [ %.127.10, %4271 ]
  %.46.10 = phi i32 [ %4285, %4284 ], [ %4280, %4279 ], [ %4276, %4271 ]
  %4289 = icmp sge i32 %.46.10, 64
  br i1 %4289, label %.loopexit71.loopexit.10, label %4290

; <label>:4290:                                   ; preds = %4288
  %scevgep50.10 = getelementptr i8, i8* %lsr.iv48.10, i64 -1
  %4291 = load i8, i8* %scevgep50.10, align 1
  store i8 %4291, i8* %72, align 16
  %4292 = load i8, i8* %lsr.iv48.10, align 1
  store i8 %4292, i8* %73, align 1
  %scevgep49.10 = getelementptr i8, i8* %lsr.iv48.10, i64 2
  br label %4232

.loopexit71.loopexit.10:                          ; preds = %4288, %4243
  %.531.ph.10 = phi i32 [ %.329.10, %4288 ], [ %.127.10, %4243 ]
  br label %.loopexit71.10

; <label>:4293:                                   ; preds = %.lr.ph141.10
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 41), align 4
  br label %.loopexit71.10

; <label>:4294:                                   ; preds = %.lr.ph141.10
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 16), align 4
  br label %.loopexit71.10

; <label>:4295:                                   ; preds = %.lr.ph141.10
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 14), align 4
  br label %.loopexit71.10

; <label>:4296:                                   ; preds = %.lr.ph141.10
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 38), align 8
  br label %.loopexit71.10

; <label>:4297:                                   ; preds = %.lr.ph141.10
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 15), align 8
  br label %.loopexit71.10

; <label>:4298:                                   ; preds = %.lr.ph141.10
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 6), align 8
  br label %.loopexit71.10

; <label>:4299:                                   ; preds = %.lr.ph141.10
  %4300 = load i8*, i8** @optarg, align 8
  %4301 = call i32 (i8*, i8*, ...) @sscanf(i8* %4300, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 5)) #9
  %4302 = icmp ne i32 %4301, 1
  br i1 %4302, label %160, label %4303

; <label>:4303:                                   ; preds = %4299
  %4304 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 5), align 4
  %4305 = icmp slt i32 %4304, 1
  br i1 %4305, label %160, label %4306

; <label>:4306:                                   ; preds = %4303
  %4307 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 5), align 4
  %4308 = icmp sgt i32 %4307, 128
  br i1 %4308, label %160, label %.loopexit71.10

; <label>:4309:                                   ; preds = %.lr.ph141.10
  %4310 = load i8*, i8** @optarg, align 8
  %4311 = call i32 @getmac(i8* %4310, i32 1, i8* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 4, i64 0))
  %4312 = icmp ne i32 %4311, 0
  br i1 %4312, label %142, label %4313

; <label>:4313:                                   ; preds = %4309
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 2), align 8
  br label %.loopexit71.10

; <label>:4314:                                   ; preds = %.lr.ph141.10
  call void @llvm.memset.p0i8.i64(i8* align 4 getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 3, i64 0), i8 0, i64 33, i1 false)
  %4315 = load i8*, i8** @optarg, align 8
  %4316 = call i8* @strncpy(i8* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 3, i64 0), i8* %4315, i64 32) #9, !track !220
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 1), align 4
  br label %.loopexit71.10

; <label>:4317:                                   ; preds = %.lr.ph141.10
  %4318 = load i8*, i8** @optarg, align 8
  %4319 = call i32 (i8*, i8*, ...) @sscanf(i8* %4318, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 0)) #9
  %4320 = load i8*, i8** @optarg, align 8
  %4321 = call i32 @strcasecmp(i8* %4320, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.94, i64 0, i64 0)) #10
  %4322 = icmp eq i32 %4321, 0
  br i1 %4322, label %4328, label %4323

; <label>:4323:                                   ; preds = %4317
  %4324 = load i8*, i8** @optarg, align 8
  %4325 = call i32 @strcasecmp(i8* %4324, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.95, i64 0, i64 0)) #10
  %4326 = icmp eq i32 %4325, 0
  br i1 %4326, label %4327, label %4329

; <label>:4327:                                   ; preds = %4323
  store i32 2, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 0), align 8
  br label %4329

; <label>:4328:                                   ; preds = %4317
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 0), align 8
  br label %4329

; <label>:4329:                                   ; preds = %4328, %4327, %4323
  %4330 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 0), align 8
  %4331 = icmp ne i32 %4330, 1
  br i1 %4331, label %4332, label %.loopexit71.10

; <label>:4332:                                   ; preds = %4329
  %4333 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 0), align 8
  %4334 = icmp ne i32 %4333, 2
  br i1 %4334, label %128, label %.loopexit71.10

; <label>:4335:                                   ; preds = %.lr.ph141.10
  %4336 = icmp ne i32 %.134.9, 0
  br i1 %4336, label %102, label %4337

; <label>:4337:                                   ; preds = %4335
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 40), align 8
  store i32 0, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 20), align 4
  br label %.loopexit71.10

.loopexit71.10:                                   ; preds = %4337, %4332, %4329, %4314, %4313, %4306, %4298, %4297, %4296, %4295, %4294, %4293, %.loopexit71.loopexit.10, %4165, %4161, %4139, %4129, %4120, %4104, %4092, %4082, %4072, %4062, %4061, %4060, %4059, %4058, %4054, %4053, %4051, %4049, %4040
  %.134.10 = phi i32 [ %.134.9, %4053 ], [ %.134.9, %4058 ], [ %.134.9, %4059 ], [ %.134.9, %4060 ], [ %.134.9, %4061 ], [ %.134.9, %4092 ], [ %.134.9, %4104 ], [ %.134.9, %4120 ], [ %.134.9, %4161 ], [ %.134.9, %4293 ], [ %.134.9, %4294 ], [ %.134.9, %4295 ], [ %.134.9, %4296 ], [ %.134.9, %4297 ], [ %.134.9, %4298 ], [ %.134.9, %4313 ], [ %.134.9, %4314 ], [ %.134.9, %4337 ], [ %.134.9, %4332 ], [ %.134.9, %4329 ], [ %.134.9, %4306 ], [ %.134.9, %4165 ], [ %.134.9, %4139 ], [ %.134.9, %4129 ], [ %.134.9, %4082 ], [ %.134.9, %4072 ], [ %.134.9, %4062 ], [ %.134.9, %4054 ], [ %.134.9, %4049 ], [ %.134.9, %4051 ], [ 1, %4040 ], [ %.134.9, %.loopexit71.loopexit.10 ]
  %.531.10 = phi i32 [ %.531.9, %4053 ], [ %.531.9, %4058 ], [ %.531.9, %4059 ], [ %.531.9, %4060 ], [ %.531.9, %4061 ], [ %.531.9, %4092 ], [ %.531.9, %4104 ], [ %.531.9, %4120 ], [ %.531.9, %4161 ], [ %.531.9, %4293 ], [ %.531.9, %4294 ], [ %.531.9, %4295 ], [ %.531.9, %4296 ], [ %.531.9, %4297 ], [ %.531.9, %4298 ], [ %.531.9, %4313 ], [ %.531.9, %4314 ], [ %.531.9, %4337 ], [ %.531.9, %4332 ], [ %.531.9, %4329 ], [ %.531.9, %4306 ], [ %.531.9, %4165 ], [ %.531.9, %4139 ], [ %.531.9, %4129 ], [ %.531.9, %4082 ], [ %.531.9, %4072 ], [ %.531.9, %4062 ], [ %.531.9, %4054 ], [ %.531.9, %4049 ], [ %.531.9, %4051 ], [ %.531.9, %4040 ], [ %.531.ph.10, %.loopexit71.loopexit.10 ]
  call void @__loop_iteration_test___0()
  store i32 0, i32* %30, align 4
  %4338 = call i32 @getopt_long(i32 4, i8** %25, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.86, i64 0, i64 0), %struct.option* getelementptr inbounds ([10 x %struct.option], [10 x %struct.option]* @main.long_options, i64 0, i64 0), i32* %30) #9, !track_argc !219
  %4339 = icmp slt i32 %4338, 0
  br i1 %4339, label %._crit_edge142.loopexit, label %.lr.ph141.11

.lr.ph141.11:                                     ; preds = %.loopexit71.10
  call void @unroll_loop(i32 124)
  switch i32 %4338, label %.loopexit1 [
    i32 58, label %75
    i32 63, label %80
    i32 117, label %85
    i32 86, label %4635
    i32 97, label %4617
    i32 101, label %4614
    i32 98, label %4609
    i32 112, label %4599
    i32 113, label %4598
    i32 99, label %4597
    i32 68, label %4596
    i32 104, label %4595
    i32 116, label %4594
    i32 49, label %4593
    i32 100, label %4469
    i32 109, label %4465
    i32 110, label %4442
    i32 105, label %4432
    i32 102, label %4425
    i32 107, label %4410
    i32 108, label %4397
    i32 77, label %4385
    i32 80, label %4375
    i32 120, label %4362
    i32 88, label %4361
    i32 121, label %4360
    i32 75, label %4359
    i32 115, label %4358
    i32 119, label %4354
    i32 114, label %484
    i32 48, label %4353
    i32 72, label %.loopexit13
    i32 67, label %4343
    i32 122, label %4340
  ]

; <label>:4340:                                   ; preds = %.lr.ph141.11
  %4341 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 40), align 8
  %4342 = icmp ne i32 %4341, 0
  br i1 %4342, label %507, label %.loopexit71.11

; <label>:4343:                                   ; preds = %.lr.ph141.11
  %4344 = load i8*, i8** @optarg, align 8
  %4345 = call i32 @checkbssids(i8* %4344)
  %4346 = icmp slt i32 %4345, 1
  br i1 %4346, label %493, label %4347

; <label>:4347:                                   ; preds = %4343
  %4348 = icmp eq i32 %4345, 1
  br i1 %4348, label %4351, label %4349

; <label>:4349:                                   ; preds = %4347
  %4350 = load i8*, i8** @optarg, align 8
  store i8* %4350, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 34), align 8
  br label %.loopexit71.11

; <label>:4351:                                   ; preds = %4347
  %4352 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.112, i64 0, i64 0))
  br label %.loopexit71.11

; <label>:4353:                                   ; preds = %.lr.ph141.11
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 27), align 4
  br label %.loopexit71.11

; <label>:4354:                                   ; preds = %.lr.ph141.11
  %4355 = load i8*, i8** @optarg, align 8
  %4356 = call i32 @set_dicts(i8* %4355)
  %4357 = icmp ne i32 %4356, 0
  br i1 %4357, label %479, label %.loopexit71.11

; <label>:4358:                                   ; preds = %.lr.ph141.11
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 26), align 8
  br label %.loopexit71.11

; <label>:4359:                                   ; preds = %.lr.ph141.11
  store i32 0, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 20), align 4
  br label %.loopexit71.11

; <label>:4360:                                   ; preds = %.lr.ph141.11
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 19), align 8
  br label %.loopexit71.11

; <label>:4361:                                   ; preds = %.lr.ph141.11
  store i32 0, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 18), align 4
  br label %.loopexit71.11

; <label>:4362:                                   ; preds = %.lr.ph141.11
  store i32 0, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 17), align 8
  %4363 = load i8*, i8** @optarg, align 8
  %4364 = icmp ne i8* %4363, null
  br i1 %4364, label %4365, label %.loopexit71.11

; <label>:4365:                                   ; preds = %4362
  %4366 = load i8*, i8** @optarg, align 8
  %4367 = call i32 (i8*, i8*, ...) @sscanf(i8* %4366, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 17)) #9
  %4368 = icmp ne i32 %4367, 1
  br i1 %4368, label %463, label %4369

; <label>:4369:                                   ; preds = %4365
  %4370 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 17), align 8
  %4371 = icmp slt i32 %4370, 0
  br i1 %4371, label %463, label %4372

; <label>:4372:                                   ; preds = %4369
  %4373 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 17), align 8
  %4374 = icmp sgt i32 %4373, 4
  br i1 %4374, label %463, label %.loopexit71.11

; <label>:4375:                                   ; preds = %.lr.ph141.11
  %4376 = load i8*, i8** @optarg, align 8
  %4377 = call i32 (i8*, i8*, ...) @sscanf(i8* %4376, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 39)) #9
  %4378 = icmp ne i32 %4377, 1
  br i1 %4378, label %443, label %4379

; <label>:4379:                                   ; preds = %4375
  %4380 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 39), align 4
  %4381 = icmp slt i32 %4380, 0
  br i1 %4381, label %443, label %4382

; <label>:4382:                                   ; preds = %4379
  %4383 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 39), align 4
  %4384 = icmp sgt i32 %4383, 2
  br i1 %4384, label %443, label %.loopexit71.11

; <label>:4385:                                   ; preds = %.lr.ph141.11
  %4386 = load i8*, i8** @optarg, align 8
  %4387 = call i32 (i8*, i8*, ...) @sscanf(i8* %4386, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 33)) #9
  %4388 = icmp ne i32 %4387, 1
  br i1 %4388, label %421, label %4389

; <label>:4389:                                   ; preds = %4385
  %4390 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 33), align 8
  %4391 = icmp slt i32 %4390, 1
  br i1 %4391, label %421, label %4392

; <label>:4392:                                   ; preds = %4389
  %4393 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 13), align 8
  %4394 = sub nsw i32 %4393, 1
  %4395 = sext i32 %4394 to i64
  %4396 = getelementptr inbounds [17 x i32], [17 x i32]* @K_COEFF, i64 0, i64 %4395
  store i32 0, i32* %4396, align 4
  br label %.loopexit71.11

; <label>:4397:                                   ; preds = %.lr.ph141.11
  %4398 = load i8*, i8** @optarg, align 8
  %4399 = call i64 @strlen(i8* %4398) #10
  %4400 = add i64 %4399, 1
  %4401 = call noalias i8* @calloc(i64 1, i64 %4400) #9, !track !221
  store i8* %4401, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 42), align 8
  %4402 = load i8*, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 42), align 8
  %4403 = icmp eq i8* %4402, null
  br i1 %4403, label %405, label %4404

; <label>:4404:                                   ; preds = %4397
  %4405 = load i8*, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 42), align 8
  %4406 = load i8*, i8** @optarg, align 8
  %4407 = load i8*, i8** @optarg, align 8
  %4408 = call i64 @strlen(i8* %4407) #10
  %4409 = call i8* @strncpy(i8* %4405, i8* %4406, i64 %4408) #9, !track !222
  br label %.loopexit71.11

; <label>:4410:                                   ; preds = %.lr.ph141.11
  %4411 = load i8*, i8** @optarg, align 8
  %4412 = call i32 (i8*, i8*, ...) @sscanf(i8* %4411, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 13)) #9
  %4413 = icmp ne i32 %4412, 1
  br i1 %4413, label %386, label %4414

; <label>:4414:                                   ; preds = %4410
  %4415 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 13), align 8
  %4416 = icmp slt i32 %4415, 1
  br i1 %4416, label %386, label %4417

; <label>:4417:                                   ; preds = %4414
  %4418 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 13), align 8
  %4419 = icmp sgt i32 %4418, 17
  br i1 %4419, label %386, label %4420

; <label>:4420:                                   ; preds = %4417
  %4421 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 13), align 8
  %4422 = sub nsw i32 %4421, 1
  %4423 = sext i32 %4422 to i64
  %4424 = getelementptr inbounds [17 x i32], [17 x i32]* @K_COEFF, i64 0, i64 %4423
  store i32 0, i32* %4424, align 4
  br label %.loopexit71.11

; <label>:4425:                                   ; preds = %.lr.ph141.11
  %4426 = load i8*, i8** @optarg, align 8
  %4427 = call i32 (i8*, i8*, ...) @sscanf(i8* %4426, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.103, i64 0, i64 0), float* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 12)) #9
  %4428 = icmp ne i32 %4427, 1
  br i1 %4428, label %369, label %4429

; <label>:4429:                                   ; preds = %4425
  %4430 = load float, float* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 12), align 4
  %4431 = fcmp olt float %4430, 1.000000e+00
  br i1 %4431, label %369, label %.loopexit71.11

; <label>:4432:                                   ; preds = %.lr.ph141.11
  %4433 = load i8*, i8** @optarg, align 8
  %4434 = call i32 (i8*, i8*, ...) @sscanf(i8* %4433, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 11)) #9
  %4435 = icmp ne i32 %4434, 1
  br i1 %4435, label %355, label %4436

; <label>:4436:                                   ; preds = %4432
  %4437 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 11), align 8
  %4438 = icmp slt i32 %4437, 1
  br i1 %4438, label %355, label %4439

; <label>:4439:                                   ; preds = %4436
  %4440 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 11), align 8
  %4441 = icmp sgt i32 %4440, 4
  br i1 %4441, label %355, label %.loopexit71.11

; <label>:4442:                                   ; preds = %.lr.ph141.11
  %4443 = load i8*, i8** @optarg, align 8
  %4444 = call i32 (i8*, i8*, ...) @sscanf(i8* %4443, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10)) #9
  %4445 = icmp ne i32 %4444, 1
  br i1 %4445, label %334, label %4446

; <label>:4446:                                   ; preds = %4442
  %4447 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %4448 = icmp ne i32 %4447, 64
  br i1 %4448, label %4449, label %4461

; <label>:4449:                                   ; preds = %4446
  %4450 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %4451 = icmp ne i32 %4450, 128
  br i1 %4451, label %4452, label %4461

; <label>:4452:                                   ; preds = %4449
  %4453 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %4454 = icmp ne i32 %4453, 152
  br i1 %4454, label %4455, label %4461

; <label>:4455:                                   ; preds = %4452
  %4456 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %4457 = icmp ne i32 %4456, 256
  br i1 %4457, label %4458, label %4461

; <label>:4458:                                   ; preds = %4455
  %4459 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %4460 = icmp ne i32 %4459, 512
  br i1 %4460, label %334, label %4461

; <label>:4461:                                   ; preds = %4458, %4455, %4452, %4449, %4446
  %4462 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %4463 = sdiv i32 %4462, 8
  %4464 = sub nsw i32 %4463, 3
  store i32 %4464, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  br label %.loopexit71.11

; <label>:4465:                                   ; preds = %.lr.ph141.11
  %4466 = load i8*, i8** @optarg, align 8
  %4467 = call i32 @getmac(i8* %4466, i32 1, i8* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 9, i64 0))
  %4468 = icmp ne i32 %4467, 0
  br i1 %4468, label %308, label %.loopexit71.11

; <label>:4469:                                   ; preds = %.lr.ph141.11
  store i32 0, i32* %27, align 4
  %4470 = load i8*, i8** @optarg, align 8
  %4471 = load i8, i8* %4470, align 1
  %4472 = sext i8 %4471 to i32
  %4473 = icmp ne i32 %4472, 0
  br i1 %4473, label %.lr.ph136.preheader.11, label %._crit_edge137.11

.lr.ph136.preheader.11:                           ; preds = %4469
  br label %.lr.ph136.11

.lr.ph136.11:                                     ; preds = %4520, %.lr.ph136.preheader.11
  %.02134.11 = phi i32 [ %.13.11, %4520 ], [ 0, %.lr.ph136.preheader.11 ]
  call void @unroll_loop(i32 125)
  %4474 = sext i32 %.02134.11 to i64
  %4475 = getelementptr inbounds i8, i8* %4470, i64 %4474
  %4476 = load i8, i8* %4475, align 1
  %4477 = sext i8 %4476 to i32
  %4478 = icmp eq i32 %4477, 120
  br i1 %4478, label %4479, label %4482

; <label>:4479:                                   ; preds = %.lr.ph136.11
  %4480 = sext i32 %.02134.11 to i64
  %4481 = getelementptr inbounds i8, i8* %4470, i64 %4480
  store i8 88, i8* %4481, align 1
  br label %4482

; <label>:4482:                                   ; preds = %4479, %.lr.ph136.11
  %4483 = sext i32 %.02134.11 to i64
  %4484 = getelementptr inbounds i8, i8* %4470, i64 %4483
  %4485 = load i8, i8* %4484, align 1
  %4486 = sext i8 %4485 to i32
  %4487 = icmp eq i32 %4486, 121
  br i1 %4487, label %4488, label %4491

; <label>:4488:                                   ; preds = %4482
  %4489 = sext i32 %.02134.11 to i64
  %4490 = getelementptr inbounds i8, i8* %4470, i64 %4489
  store i8 89, i8* %4490, align 1
  br label %4491

; <label>:4491:                                   ; preds = %4488, %4482
  %4492 = sext i32 %.02134.11 to i64
  %4493 = getelementptr inbounds i8, i8* %4470, i64 %4492
  %4494 = load i8, i8* %4493, align 1
  %4495 = sext i8 %4494 to i32
  %4496 = icmp eq i32 %4495, 45
  br i1 %4496, label %4518, label %4497

; <label>:4497:                                   ; preds = %4491
  %4498 = sext i32 %.02134.11 to i64
  %4499 = getelementptr inbounds i8, i8* %4470, i64 %4498
  %4500 = load i8, i8* %4499, align 1
  %4501 = sext i8 %4500 to i32
  %4502 = icmp eq i32 %4501, 58
  br i1 %4502, label %4518, label %4503

; <label>:4503:                                   ; preds = %4497
  %4504 = sext i32 %.02134.11 to i64
  %4505 = getelementptr inbounds i8, i8* %4470, i64 %4504
  %4506 = load i8, i8* %4505, align 1
  %4507 = sext i8 %4506 to i32
  %4508 = icmp eq i32 %4507, 32
  br i1 %4508, label %4518, label %4509

; <label>:4509:                                   ; preds = %4503
  %4510 = add nsw i32 %.02134.11, 1
  %4511 = sext i32 %.02134.11 to i64
  %4512 = getelementptr inbounds i8, i8* %4470, i64 %4511
  %4513 = load i8, i8* %4512, align 1
  %4514 = load i32, i32* %27, align 4
  %4515 = add nsw i32 %4514, 1
  store i32 %4515, i32* %27, align 4
  %4516 = sext i32 %4514 to i64
  %4517 = getelementptr inbounds i8, i8* %4470, i64 %4516
  store i8 %4513, i8* %4517, align 1
  br label %4520

; <label>:4518:                                   ; preds = %4503, %4497, %4491
  %4519 = add nsw i32 %.02134.11, 1
  br label %4520

; <label>:4520:                                   ; preds = %4518, %4509
  %.13.11 = phi i32 [ %4519, %4518 ], [ %4510, %4509 ]
  %4521 = sext i32 %.13.11 to i64
  %4522 = getelementptr inbounds i8, i8* %4470, i64 %4521
  %4523 = load i8, i8* %4522, align 1
  %4524 = sext i8 %4523 to i32
  %4525 = icmp ne i32 %4524, 0
  br i1 %4525, label %.lr.ph136.11, label %._crit_edge137.loopexit.11

._crit_edge137.loopexit.11:                       ; preds = %4520
  br label %._crit_edge137.11

._crit_edge137.11:                                ; preds = %._crit_edge137.loopexit.11, %4469
  %4526 = load i32, i32* %27, align 4
  %4527 = sext i32 %4526 to i64
  %4528 = getelementptr inbounds i8, i8* %4470, i64 %4527
  store i8 0, i8* %4528, align 1
  %4529 = load i8, i8* %4470, align 1
  store i8 %4529, i8* %61, align 16
  %4530 = getelementptr inbounds i8, i8* %4470, i64 1
  %4531 = load i8, i8* %4530, align 1
  store i8 %4531, i8* %62, align 1
  store i8 0, i8* %63, align 2
  %scevgep45.11 = getelementptr i8, i8* %4470, i64 3
  br label %4532

; <label>:4532:                                   ; preds = %4590, %._crit_edge137.11
  %lsr.iv48.11 = phi i8* [ %scevgep49.11, %4590 ], [ %scevgep45.11, %._crit_edge137.11 ]
  %.127.11 = phi i32 [ 0, %._crit_edge137.11 ], [ %.329.11, %4590 ]
  %.24.11 = phi i32 [ 0, %._crit_edge137.11 ], [ %.46.11, %4590 ]
  call void @unroll_loop(i32 126)
  %4533 = call i32 (i8*, i8*, ...) @sscanf(i8* %64, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.72, i64 0, i64 0), i32* %27) #9
  %4534 = icmp eq i32 %4533, 1
  br i1 %4534, label %.critedge.11, label %4535

; <label>:4535:                                   ; preds = %4532
  %4536 = load i8, i8* %66, align 16
  %4537 = sext i8 %4536 to i32
  %4538 = icmp eq i32 %4537, 88
  br i1 %4538, label %4539, label %4543

; <label>:4539:                                   ; preds = %4535
  %4540 = load i8, i8* %69, align 1
  %4541 = sext i8 %4540 to i32
  %4542 = icmp eq i32 %4541, 88
  br i1 %4542, label %.critedge.11, label %4543

; <label>:4543:                                   ; preds = %4539, %4535
  %4544 = load i8, i8* %70, align 16
  %4545 = sext i8 %4544 to i32
  %4546 = icmp eq i32 %4545, 89
  %4547 = load i8, i8* %71, align 1
  %4548 = sext i8 %4547 to i32
  %4549 = icmp eq i32 %4548, 89
  %4550 = select i1 %4546, i1 %4549, i1 false
  br i1 %4550, label %.critedge.11, label %.loopexit71.loopexit.11

.critedge.11:                                     ; preds = %4543, %4539, %4532
  %4551 = load i8, i8* %65, align 16
  %4552 = sext i8 %4551 to i32
  %4553 = icmp eq i32 %4552, 88
  br i1 %4553, label %4554, label %4558

; <label>:4554:                                   ; preds = %.critedge.11
  %4555 = load i8, i8* %67, align 1
  %4556 = sext i8 %4555 to i32
  %4557 = icmp eq i32 %4556, 88
  br i1 %4557, label %4584, label %4558

; <label>:4558:                                   ; preds = %4554, %.critedge.11
  %4559 = load i8, i8* %68, align 16
  %4560 = sext i8 %4559 to i32
  %4561 = icmp eq i32 %4560, 89
  br i1 %4561, label %4562, label %4566

; <label>:4562:                                   ; preds = %4558
  %4563 = load i8, i8* %74, align 1
  %4564 = sext i8 %4563 to i32
  %4565 = icmp eq i32 %4564, 89
  br i1 %4565, label %4579, label %4566

; <label>:4566:                                   ; preds = %4562, %4558
  %4567 = load i32, i32* %27, align 4
  %4568 = icmp slt i32 %4567, 0
  %4569 = load i32, i32* %27, align 4
  %4570 = icmp sgt i32 %4569, 255
  %or.cond.11 = or i1 %4568, %4570
  br i1 %or.cond.11, label %.loopexit17, label %4571

; <label>:4571:                                   ; preds = %4566
  %4572 = load i32, i32* %27, align 4
  %4573 = trunc i32 %4572 to i8
  %4574 = sext i32 %.24.11 to i64
  %4575 = getelementptr inbounds [64 x i8], [64 x i8]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 7), i64 0, i64 %4574
  store i8 %4573, i8* %4575, align 1
  %4576 = add nsw i32 %.24.11, 1
  %4577 = sext i32 %.24.11 to i64
  %4578 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 8), i64 0, i64 %4577
  store i32 1, i32* %4578, align 4
  br label %4588

; <label>:4579:                                   ; preds = %4562
  %4580 = add nsw i32 %.24.11, 1
  %4581 = add nsw i32 %.127.11, 1
  %4582 = sext i32 %.127.11 to i64
  %4583 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 31), i64 0, i64 %4582
  store i32 %.24.11, i32* %4583, align 4
  br label %4588

; <label>:4584:                                   ; preds = %4554
  %4585 = add nsw i32 %.24.11, 1
  %4586 = sext i32 %.24.11 to i64
  %4587 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 8), i64 0, i64 %4586
  store i32 0, i32* %4587, align 4
  br label %4588

; <label>:4588:                                   ; preds = %4584, %4579, %4571
  %.329.11 = phi i32 [ %.127.11, %4584 ], [ %4581, %4579 ], [ %.127.11, %4571 ]
  %.46.11 = phi i32 [ %4585, %4584 ], [ %4580, %4579 ], [ %4576, %4571 ]
  %4589 = icmp sge i32 %.46.11, 64
  br i1 %4589, label %.loopexit71.loopexit.11, label %4590

; <label>:4590:                                   ; preds = %4588
  %scevgep50.11 = getelementptr i8, i8* %lsr.iv48.11, i64 -1
  %4591 = load i8, i8* %scevgep50.11, align 1
  store i8 %4591, i8* %72, align 16
  %4592 = load i8, i8* %lsr.iv48.11, align 1
  store i8 %4592, i8* %73, align 1
  %scevgep49.11 = getelementptr i8, i8* %lsr.iv48.11, i64 2
  br label %4532

.loopexit71.loopexit.11:                          ; preds = %4588, %4543
  %.531.ph.11 = phi i32 [ %.329.11, %4588 ], [ %.127.11, %4543 ]
  br label %.loopexit71.11

; <label>:4593:                                   ; preds = %.lr.ph141.11
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 41), align 4
  br label %.loopexit71.11

; <label>:4594:                                   ; preds = %.lr.ph141.11
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 16), align 4
  br label %.loopexit71.11

; <label>:4595:                                   ; preds = %.lr.ph141.11
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 14), align 4
  br label %.loopexit71.11

; <label>:4596:                                   ; preds = %.lr.ph141.11
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 38), align 8
  br label %.loopexit71.11

; <label>:4597:                                   ; preds = %.lr.ph141.11
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 15), align 8
  br label %.loopexit71.11

; <label>:4598:                                   ; preds = %.lr.ph141.11
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 6), align 8
  br label %.loopexit71.11

; <label>:4599:                                   ; preds = %.lr.ph141.11
  %4600 = load i8*, i8** @optarg, align 8
  %4601 = call i32 (i8*, i8*, ...) @sscanf(i8* %4600, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 5)) #9
  %4602 = icmp ne i32 %4601, 1
  br i1 %4602, label %160, label %4603

; <label>:4603:                                   ; preds = %4599
  %4604 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 5), align 4
  %4605 = icmp slt i32 %4604, 1
  br i1 %4605, label %160, label %4606

; <label>:4606:                                   ; preds = %4603
  %4607 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 5), align 4
  %4608 = icmp sgt i32 %4607, 128
  br i1 %4608, label %160, label %.loopexit71.11

; <label>:4609:                                   ; preds = %.lr.ph141.11
  %4610 = load i8*, i8** @optarg, align 8
  %4611 = call i32 @getmac(i8* %4610, i32 1, i8* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 4, i64 0))
  %4612 = icmp ne i32 %4611, 0
  br i1 %4612, label %142, label %4613

; <label>:4613:                                   ; preds = %4609
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 2), align 8
  br label %.loopexit71.11

; <label>:4614:                                   ; preds = %.lr.ph141.11
  call void @llvm.memset.p0i8.i64(i8* align 4 getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 3, i64 0), i8 0, i64 33, i1 false)
  %4615 = load i8*, i8** @optarg, align 8
  %4616 = call i8* @strncpy(i8* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 3, i64 0), i8* %4615, i64 32) #9, !track !220
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 1), align 4
  br label %.loopexit71.11

; <label>:4617:                                   ; preds = %.lr.ph141.11
  %4618 = load i8*, i8** @optarg, align 8
  %4619 = call i32 (i8*, i8*, ...) @sscanf(i8* %4618, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 0)) #9
  %4620 = load i8*, i8** @optarg, align 8
  %4621 = call i32 @strcasecmp(i8* %4620, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.94, i64 0, i64 0)) #10
  %4622 = icmp eq i32 %4621, 0
  br i1 %4622, label %4628, label %4623

; <label>:4623:                                   ; preds = %4617
  %4624 = load i8*, i8** @optarg, align 8
  %4625 = call i32 @strcasecmp(i8* %4624, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.95, i64 0, i64 0)) #10
  %4626 = icmp eq i32 %4625, 0
  br i1 %4626, label %4627, label %4629

; <label>:4627:                                   ; preds = %4623
  store i32 2, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 0), align 8
  br label %4629

; <label>:4628:                                   ; preds = %4617
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 0), align 8
  br label %4629

; <label>:4629:                                   ; preds = %4628, %4627, %4623
  %4630 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 0), align 8
  %4631 = icmp ne i32 %4630, 1
  br i1 %4631, label %4632, label %.loopexit71.11

; <label>:4632:                                   ; preds = %4629
  %4633 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 0), align 8
  %4634 = icmp ne i32 %4633, 2
  br i1 %4634, label %128, label %.loopexit71.11

; <label>:4635:                                   ; preds = %.lr.ph141.11
  %4636 = icmp ne i32 %.134.10, 0
  br i1 %4636, label %102, label %4637

; <label>:4637:                                   ; preds = %4635
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 40), align 8
  store i32 0, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 20), align 4
  br label %.loopexit71.11

.loopexit71.11:                                   ; preds = %4637, %4632, %4629, %4614, %4613, %4606, %4598, %4597, %4596, %4595, %4594, %4593, %.loopexit71.loopexit.11, %4465, %4461, %4439, %4429, %4420, %4404, %4392, %4382, %4372, %4362, %4361, %4360, %4359, %4358, %4354, %4353, %4351, %4349, %4340
  %.134.11 = phi i32 [ %.134.10, %4353 ], [ %.134.10, %4358 ], [ %.134.10, %4359 ], [ %.134.10, %4360 ], [ %.134.10, %4361 ], [ %.134.10, %4392 ], [ %.134.10, %4404 ], [ %.134.10, %4420 ], [ %.134.10, %4461 ], [ %.134.10, %4593 ], [ %.134.10, %4594 ], [ %.134.10, %4595 ], [ %.134.10, %4596 ], [ %.134.10, %4597 ], [ %.134.10, %4598 ], [ %.134.10, %4613 ], [ %.134.10, %4614 ], [ %.134.10, %4637 ], [ %.134.10, %4632 ], [ %.134.10, %4629 ], [ %.134.10, %4606 ], [ %.134.10, %4465 ], [ %.134.10, %4439 ], [ %.134.10, %4429 ], [ %.134.10, %4382 ], [ %.134.10, %4372 ], [ %.134.10, %4362 ], [ %.134.10, %4354 ], [ %.134.10, %4349 ], [ %.134.10, %4351 ], [ 1, %4340 ], [ %.134.10, %.loopexit71.loopexit.11 ]
  %.531.11 = phi i32 [ %.531.10, %4353 ], [ %.531.10, %4358 ], [ %.531.10, %4359 ], [ %.531.10, %4360 ], [ %.531.10, %4361 ], [ %.531.10, %4392 ], [ %.531.10, %4404 ], [ %.531.10, %4420 ], [ %.531.10, %4461 ], [ %.531.10, %4593 ], [ %.531.10, %4594 ], [ %.531.10, %4595 ], [ %.531.10, %4596 ], [ %.531.10, %4597 ], [ %.531.10, %4598 ], [ %.531.10, %4613 ], [ %.531.10, %4614 ], [ %.531.10, %4637 ], [ %.531.10, %4632 ], [ %.531.10, %4629 ], [ %.531.10, %4606 ], [ %.531.10, %4465 ], [ %.531.10, %4439 ], [ %.531.10, %4429 ], [ %.531.10, %4382 ], [ %.531.10, %4372 ], [ %.531.10, %4362 ], [ %.531.10, %4354 ], [ %.531.10, %4349 ], [ %.531.10, %4351 ], [ %.531.10, %4340 ], [ %.531.ph.11, %.loopexit71.loopexit.11 ]
  call void @__loop_iteration_test___0()
  store i32 0, i32* %30, align 4
  %4638 = call i32 @getopt_long(i32 4, i8** %25, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.86, i64 0, i64 0), %struct.option* getelementptr inbounds ([10 x %struct.option], [10 x %struct.option]* @main.long_options, i64 0, i64 0), i32* %30) #9, !track_argc !219
  %4639 = icmp slt i32 %4638, 0
  br i1 %4639, label %._crit_edge142.loopexit, label %.lr.ph141.12

.lr.ph141.12:                                     ; preds = %.loopexit71.11
  call void @unroll_loop(i32 124)
  switch i32 %4638, label %.loopexit1 [
    i32 58, label %75
    i32 63, label %80
    i32 117, label %85
    i32 86, label %4935
    i32 97, label %4917
    i32 101, label %4914
    i32 98, label %4909
    i32 112, label %4899
    i32 113, label %4898
    i32 99, label %4897
    i32 68, label %4896
    i32 104, label %4895
    i32 116, label %4894
    i32 49, label %4893
    i32 100, label %4769
    i32 109, label %4765
    i32 110, label %4742
    i32 105, label %4732
    i32 102, label %4725
    i32 107, label %4710
    i32 108, label %4697
    i32 77, label %4685
    i32 80, label %4675
    i32 120, label %4662
    i32 88, label %4661
    i32 121, label %4660
    i32 75, label %4659
    i32 115, label %4658
    i32 119, label %4654
    i32 114, label %484
    i32 48, label %4653
    i32 72, label %.loopexit13
    i32 67, label %4643
    i32 122, label %4640
  ]

; <label>:4640:                                   ; preds = %.lr.ph141.12
  %4641 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 40), align 8
  %4642 = icmp ne i32 %4641, 0
  br i1 %4642, label %507, label %.loopexit71.12

; <label>:4643:                                   ; preds = %.lr.ph141.12
  %4644 = load i8*, i8** @optarg, align 8
  %4645 = call i32 @checkbssids(i8* %4644)
  %4646 = icmp slt i32 %4645, 1
  br i1 %4646, label %493, label %4647

; <label>:4647:                                   ; preds = %4643
  %4648 = icmp eq i32 %4645, 1
  br i1 %4648, label %4651, label %4649

; <label>:4649:                                   ; preds = %4647
  %4650 = load i8*, i8** @optarg, align 8
  store i8* %4650, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 34), align 8
  br label %.loopexit71.12

; <label>:4651:                                   ; preds = %4647
  %4652 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.112, i64 0, i64 0))
  br label %.loopexit71.12

; <label>:4653:                                   ; preds = %.lr.ph141.12
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 27), align 4
  br label %.loopexit71.12

; <label>:4654:                                   ; preds = %.lr.ph141.12
  %4655 = load i8*, i8** @optarg, align 8
  %4656 = call i32 @set_dicts(i8* %4655)
  %4657 = icmp ne i32 %4656, 0
  br i1 %4657, label %479, label %.loopexit71.12

; <label>:4658:                                   ; preds = %.lr.ph141.12
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 26), align 8
  br label %.loopexit71.12

; <label>:4659:                                   ; preds = %.lr.ph141.12
  store i32 0, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 20), align 4
  br label %.loopexit71.12

; <label>:4660:                                   ; preds = %.lr.ph141.12
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 19), align 8
  br label %.loopexit71.12

; <label>:4661:                                   ; preds = %.lr.ph141.12
  store i32 0, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 18), align 4
  br label %.loopexit71.12

; <label>:4662:                                   ; preds = %.lr.ph141.12
  store i32 0, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 17), align 8
  %4663 = load i8*, i8** @optarg, align 8
  %4664 = icmp ne i8* %4663, null
  br i1 %4664, label %4665, label %.loopexit71.12

; <label>:4665:                                   ; preds = %4662
  %4666 = load i8*, i8** @optarg, align 8
  %4667 = call i32 (i8*, i8*, ...) @sscanf(i8* %4666, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 17)) #9
  %4668 = icmp ne i32 %4667, 1
  br i1 %4668, label %463, label %4669

; <label>:4669:                                   ; preds = %4665
  %4670 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 17), align 8
  %4671 = icmp slt i32 %4670, 0
  br i1 %4671, label %463, label %4672

; <label>:4672:                                   ; preds = %4669
  %4673 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 17), align 8
  %4674 = icmp sgt i32 %4673, 4
  br i1 %4674, label %463, label %.loopexit71.12

; <label>:4675:                                   ; preds = %.lr.ph141.12
  %4676 = load i8*, i8** @optarg, align 8
  %4677 = call i32 (i8*, i8*, ...) @sscanf(i8* %4676, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 39)) #9
  %4678 = icmp ne i32 %4677, 1
  br i1 %4678, label %443, label %4679

; <label>:4679:                                   ; preds = %4675
  %4680 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 39), align 4
  %4681 = icmp slt i32 %4680, 0
  br i1 %4681, label %443, label %4682

; <label>:4682:                                   ; preds = %4679
  %4683 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 39), align 4
  %4684 = icmp sgt i32 %4683, 2
  br i1 %4684, label %443, label %.loopexit71.12

; <label>:4685:                                   ; preds = %.lr.ph141.12
  %4686 = load i8*, i8** @optarg, align 8
  %4687 = call i32 (i8*, i8*, ...) @sscanf(i8* %4686, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 33)) #9
  %4688 = icmp ne i32 %4687, 1
  br i1 %4688, label %421, label %4689

; <label>:4689:                                   ; preds = %4685
  %4690 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 33), align 8
  %4691 = icmp slt i32 %4690, 1
  br i1 %4691, label %421, label %4692

; <label>:4692:                                   ; preds = %4689
  %4693 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 13), align 8
  %4694 = sub nsw i32 %4693, 1
  %4695 = sext i32 %4694 to i64
  %4696 = getelementptr inbounds [17 x i32], [17 x i32]* @K_COEFF, i64 0, i64 %4695
  store i32 0, i32* %4696, align 4
  br label %.loopexit71.12

; <label>:4697:                                   ; preds = %.lr.ph141.12
  %4698 = load i8*, i8** @optarg, align 8
  %4699 = call i64 @strlen(i8* %4698) #10
  %4700 = add i64 %4699, 1
  %4701 = call noalias i8* @calloc(i64 1, i64 %4700) #9, !track !221
  store i8* %4701, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 42), align 8
  %4702 = load i8*, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 42), align 8
  %4703 = icmp eq i8* %4702, null
  br i1 %4703, label %405, label %4704

; <label>:4704:                                   ; preds = %4697
  %4705 = load i8*, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 42), align 8
  %4706 = load i8*, i8** @optarg, align 8
  %4707 = load i8*, i8** @optarg, align 8
  %4708 = call i64 @strlen(i8* %4707) #10
  %4709 = call i8* @strncpy(i8* %4705, i8* %4706, i64 %4708) #9, !track !222
  br label %.loopexit71.12

; <label>:4710:                                   ; preds = %.lr.ph141.12
  %4711 = load i8*, i8** @optarg, align 8
  %4712 = call i32 (i8*, i8*, ...) @sscanf(i8* %4711, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 13)) #9
  %4713 = icmp ne i32 %4712, 1
  br i1 %4713, label %386, label %4714

; <label>:4714:                                   ; preds = %4710
  %4715 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 13), align 8
  %4716 = icmp slt i32 %4715, 1
  br i1 %4716, label %386, label %4717

; <label>:4717:                                   ; preds = %4714
  %4718 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 13), align 8
  %4719 = icmp sgt i32 %4718, 17
  br i1 %4719, label %386, label %4720

; <label>:4720:                                   ; preds = %4717
  %4721 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 13), align 8
  %4722 = sub nsw i32 %4721, 1
  %4723 = sext i32 %4722 to i64
  %4724 = getelementptr inbounds [17 x i32], [17 x i32]* @K_COEFF, i64 0, i64 %4723
  store i32 0, i32* %4724, align 4
  br label %.loopexit71.12

; <label>:4725:                                   ; preds = %.lr.ph141.12
  %4726 = load i8*, i8** @optarg, align 8
  %4727 = call i32 (i8*, i8*, ...) @sscanf(i8* %4726, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.103, i64 0, i64 0), float* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 12)) #9
  %4728 = icmp ne i32 %4727, 1
  br i1 %4728, label %369, label %4729

; <label>:4729:                                   ; preds = %4725
  %4730 = load float, float* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 12), align 4
  %4731 = fcmp olt float %4730, 1.000000e+00
  br i1 %4731, label %369, label %.loopexit71.12

; <label>:4732:                                   ; preds = %.lr.ph141.12
  %4733 = load i8*, i8** @optarg, align 8
  %4734 = call i32 (i8*, i8*, ...) @sscanf(i8* %4733, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 11)) #9
  %4735 = icmp ne i32 %4734, 1
  br i1 %4735, label %355, label %4736

; <label>:4736:                                   ; preds = %4732
  %4737 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 11), align 8
  %4738 = icmp slt i32 %4737, 1
  br i1 %4738, label %355, label %4739

; <label>:4739:                                   ; preds = %4736
  %4740 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 11), align 8
  %4741 = icmp sgt i32 %4740, 4
  br i1 %4741, label %355, label %.loopexit71.12

; <label>:4742:                                   ; preds = %.lr.ph141.12
  %4743 = load i8*, i8** @optarg, align 8
  %4744 = call i32 (i8*, i8*, ...) @sscanf(i8* %4743, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10)) #9
  %4745 = icmp ne i32 %4744, 1
  br i1 %4745, label %334, label %4746

; <label>:4746:                                   ; preds = %4742
  %4747 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %4748 = icmp ne i32 %4747, 64
  br i1 %4748, label %4749, label %4761

; <label>:4749:                                   ; preds = %4746
  %4750 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %4751 = icmp ne i32 %4750, 128
  br i1 %4751, label %4752, label %4761

; <label>:4752:                                   ; preds = %4749
  %4753 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %4754 = icmp ne i32 %4753, 152
  br i1 %4754, label %4755, label %4761

; <label>:4755:                                   ; preds = %4752
  %4756 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %4757 = icmp ne i32 %4756, 256
  br i1 %4757, label %4758, label %4761

; <label>:4758:                                   ; preds = %4755
  %4759 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %4760 = icmp ne i32 %4759, 512
  br i1 %4760, label %334, label %4761

; <label>:4761:                                   ; preds = %4758, %4755, %4752, %4749, %4746
  %4762 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %4763 = sdiv i32 %4762, 8
  %4764 = sub nsw i32 %4763, 3
  store i32 %4764, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  br label %.loopexit71.12

; <label>:4765:                                   ; preds = %.lr.ph141.12
  %4766 = load i8*, i8** @optarg, align 8
  %4767 = call i32 @getmac(i8* %4766, i32 1, i8* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 9, i64 0))
  %4768 = icmp ne i32 %4767, 0
  br i1 %4768, label %308, label %.loopexit71.12

; <label>:4769:                                   ; preds = %.lr.ph141.12
  store i32 0, i32* %27, align 4
  %4770 = load i8*, i8** @optarg, align 8
  %4771 = load i8, i8* %4770, align 1
  %4772 = sext i8 %4771 to i32
  %4773 = icmp ne i32 %4772, 0
  br i1 %4773, label %.lr.ph136.preheader.12, label %._crit_edge137.12

.lr.ph136.preheader.12:                           ; preds = %4769
  br label %.lr.ph136.12

.lr.ph136.12:                                     ; preds = %4820, %.lr.ph136.preheader.12
  %.02134.12 = phi i32 [ %.13.12, %4820 ], [ 0, %.lr.ph136.preheader.12 ]
  call void @unroll_loop(i32 125)
  %4774 = sext i32 %.02134.12 to i64
  %4775 = getelementptr inbounds i8, i8* %4770, i64 %4774
  %4776 = load i8, i8* %4775, align 1
  %4777 = sext i8 %4776 to i32
  %4778 = icmp eq i32 %4777, 120
  br i1 %4778, label %4779, label %4782

; <label>:4779:                                   ; preds = %.lr.ph136.12
  %4780 = sext i32 %.02134.12 to i64
  %4781 = getelementptr inbounds i8, i8* %4770, i64 %4780
  store i8 88, i8* %4781, align 1
  br label %4782

; <label>:4782:                                   ; preds = %4779, %.lr.ph136.12
  %4783 = sext i32 %.02134.12 to i64
  %4784 = getelementptr inbounds i8, i8* %4770, i64 %4783
  %4785 = load i8, i8* %4784, align 1
  %4786 = sext i8 %4785 to i32
  %4787 = icmp eq i32 %4786, 121
  br i1 %4787, label %4788, label %4791

; <label>:4788:                                   ; preds = %4782
  %4789 = sext i32 %.02134.12 to i64
  %4790 = getelementptr inbounds i8, i8* %4770, i64 %4789
  store i8 89, i8* %4790, align 1
  br label %4791

; <label>:4791:                                   ; preds = %4788, %4782
  %4792 = sext i32 %.02134.12 to i64
  %4793 = getelementptr inbounds i8, i8* %4770, i64 %4792
  %4794 = load i8, i8* %4793, align 1
  %4795 = sext i8 %4794 to i32
  %4796 = icmp eq i32 %4795, 45
  br i1 %4796, label %4818, label %4797

; <label>:4797:                                   ; preds = %4791
  %4798 = sext i32 %.02134.12 to i64
  %4799 = getelementptr inbounds i8, i8* %4770, i64 %4798
  %4800 = load i8, i8* %4799, align 1
  %4801 = sext i8 %4800 to i32
  %4802 = icmp eq i32 %4801, 58
  br i1 %4802, label %4818, label %4803

; <label>:4803:                                   ; preds = %4797
  %4804 = sext i32 %.02134.12 to i64
  %4805 = getelementptr inbounds i8, i8* %4770, i64 %4804
  %4806 = load i8, i8* %4805, align 1
  %4807 = sext i8 %4806 to i32
  %4808 = icmp eq i32 %4807, 32
  br i1 %4808, label %4818, label %4809

; <label>:4809:                                   ; preds = %4803
  %4810 = add nsw i32 %.02134.12, 1
  %4811 = sext i32 %.02134.12 to i64
  %4812 = getelementptr inbounds i8, i8* %4770, i64 %4811
  %4813 = load i8, i8* %4812, align 1
  %4814 = load i32, i32* %27, align 4
  %4815 = add nsw i32 %4814, 1
  store i32 %4815, i32* %27, align 4
  %4816 = sext i32 %4814 to i64
  %4817 = getelementptr inbounds i8, i8* %4770, i64 %4816
  store i8 %4813, i8* %4817, align 1
  br label %4820

; <label>:4818:                                   ; preds = %4803, %4797, %4791
  %4819 = add nsw i32 %.02134.12, 1
  br label %4820

; <label>:4820:                                   ; preds = %4818, %4809
  %.13.12 = phi i32 [ %4819, %4818 ], [ %4810, %4809 ]
  %4821 = sext i32 %.13.12 to i64
  %4822 = getelementptr inbounds i8, i8* %4770, i64 %4821
  %4823 = load i8, i8* %4822, align 1
  %4824 = sext i8 %4823 to i32
  %4825 = icmp ne i32 %4824, 0
  br i1 %4825, label %.lr.ph136.12, label %._crit_edge137.loopexit.12

._crit_edge137.loopexit.12:                       ; preds = %4820
  br label %._crit_edge137.12

._crit_edge137.12:                                ; preds = %._crit_edge137.loopexit.12, %4769
  %4826 = load i32, i32* %27, align 4
  %4827 = sext i32 %4826 to i64
  %4828 = getelementptr inbounds i8, i8* %4770, i64 %4827
  store i8 0, i8* %4828, align 1
  %4829 = load i8, i8* %4770, align 1
  store i8 %4829, i8* %61, align 16
  %4830 = getelementptr inbounds i8, i8* %4770, i64 1
  %4831 = load i8, i8* %4830, align 1
  store i8 %4831, i8* %62, align 1
  store i8 0, i8* %63, align 2
  %scevgep45.12 = getelementptr i8, i8* %4770, i64 3
  br label %4832

; <label>:4832:                                   ; preds = %4890, %._crit_edge137.12
  %lsr.iv48.12 = phi i8* [ %scevgep49.12, %4890 ], [ %scevgep45.12, %._crit_edge137.12 ]
  %.127.12 = phi i32 [ 0, %._crit_edge137.12 ], [ %.329.12, %4890 ]
  %.24.12 = phi i32 [ 0, %._crit_edge137.12 ], [ %.46.12, %4890 ]
  call void @unroll_loop(i32 126)
  %4833 = call i32 (i8*, i8*, ...) @sscanf(i8* %64, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.72, i64 0, i64 0), i32* %27) #9
  %4834 = icmp eq i32 %4833, 1
  br i1 %4834, label %.critedge.12, label %4835

; <label>:4835:                                   ; preds = %4832
  %4836 = load i8, i8* %66, align 16
  %4837 = sext i8 %4836 to i32
  %4838 = icmp eq i32 %4837, 88
  br i1 %4838, label %4839, label %4843

; <label>:4839:                                   ; preds = %4835
  %4840 = load i8, i8* %69, align 1
  %4841 = sext i8 %4840 to i32
  %4842 = icmp eq i32 %4841, 88
  br i1 %4842, label %.critedge.12, label %4843

; <label>:4843:                                   ; preds = %4839, %4835
  %4844 = load i8, i8* %70, align 16
  %4845 = sext i8 %4844 to i32
  %4846 = icmp eq i32 %4845, 89
  %4847 = load i8, i8* %71, align 1
  %4848 = sext i8 %4847 to i32
  %4849 = icmp eq i32 %4848, 89
  %4850 = select i1 %4846, i1 %4849, i1 false
  br i1 %4850, label %.critedge.12, label %.loopexit71.loopexit.12

.critedge.12:                                     ; preds = %4843, %4839, %4832
  %4851 = load i8, i8* %65, align 16
  %4852 = sext i8 %4851 to i32
  %4853 = icmp eq i32 %4852, 88
  br i1 %4853, label %4854, label %4858

; <label>:4854:                                   ; preds = %.critedge.12
  %4855 = load i8, i8* %67, align 1
  %4856 = sext i8 %4855 to i32
  %4857 = icmp eq i32 %4856, 88
  br i1 %4857, label %4884, label %4858

; <label>:4858:                                   ; preds = %4854, %.critedge.12
  %4859 = load i8, i8* %68, align 16
  %4860 = sext i8 %4859 to i32
  %4861 = icmp eq i32 %4860, 89
  br i1 %4861, label %4862, label %4866

; <label>:4862:                                   ; preds = %4858
  %4863 = load i8, i8* %74, align 1
  %4864 = sext i8 %4863 to i32
  %4865 = icmp eq i32 %4864, 89
  br i1 %4865, label %4879, label %4866

; <label>:4866:                                   ; preds = %4862, %4858
  %4867 = load i32, i32* %27, align 4
  %4868 = icmp slt i32 %4867, 0
  %4869 = load i32, i32* %27, align 4
  %4870 = icmp sgt i32 %4869, 255
  %or.cond.12 = or i1 %4868, %4870
  br i1 %or.cond.12, label %.loopexit18, label %4871

; <label>:4871:                                   ; preds = %4866
  %4872 = load i32, i32* %27, align 4
  %4873 = trunc i32 %4872 to i8
  %4874 = sext i32 %.24.12 to i64
  %4875 = getelementptr inbounds [64 x i8], [64 x i8]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 7), i64 0, i64 %4874
  store i8 %4873, i8* %4875, align 1
  %4876 = add nsw i32 %.24.12, 1
  %4877 = sext i32 %.24.12 to i64
  %4878 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 8), i64 0, i64 %4877
  store i32 1, i32* %4878, align 4
  br label %4888

; <label>:4879:                                   ; preds = %4862
  %4880 = add nsw i32 %.24.12, 1
  %4881 = add nsw i32 %.127.12, 1
  %4882 = sext i32 %.127.12 to i64
  %4883 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 31), i64 0, i64 %4882
  store i32 %.24.12, i32* %4883, align 4
  br label %4888

; <label>:4884:                                   ; preds = %4854
  %4885 = add nsw i32 %.24.12, 1
  %4886 = sext i32 %.24.12 to i64
  %4887 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 8), i64 0, i64 %4886
  store i32 0, i32* %4887, align 4
  br label %4888

; <label>:4888:                                   ; preds = %4884, %4879, %4871
  %.329.12 = phi i32 [ %.127.12, %4884 ], [ %4881, %4879 ], [ %.127.12, %4871 ]
  %.46.12 = phi i32 [ %4885, %4884 ], [ %4880, %4879 ], [ %4876, %4871 ]
  %4889 = icmp sge i32 %.46.12, 64
  br i1 %4889, label %.loopexit71.loopexit.12, label %4890

; <label>:4890:                                   ; preds = %4888
  %scevgep50.12 = getelementptr i8, i8* %lsr.iv48.12, i64 -1
  %4891 = load i8, i8* %scevgep50.12, align 1
  store i8 %4891, i8* %72, align 16
  %4892 = load i8, i8* %lsr.iv48.12, align 1
  store i8 %4892, i8* %73, align 1
  %scevgep49.12 = getelementptr i8, i8* %lsr.iv48.12, i64 2
  br label %4832

.loopexit71.loopexit.12:                          ; preds = %4888, %4843
  %.531.ph.12 = phi i32 [ %.329.12, %4888 ], [ %.127.12, %4843 ]
  br label %.loopexit71.12

; <label>:4893:                                   ; preds = %.lr.ph141.12
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 41), align 4
  br label %.loopexit71.12

; <label>:4894:                                   ; preds = %.lr.ph141.12
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 16), align 4
  br label %.loopexit71.12

; <label>:4895:                                   ; preds = %.lr.ph141.12
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 14), align 4
  br label %.loopexit71.12

; <label>:4896:                                   ; preds = %.lr.ph141.12
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 38), align 8
  br label %.loopexit71.12

; <label>:4897:                                   ; preds = %.lr.ph141.12
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 15), align 8
  br label %.loopexit71.12

; <label>:4898:                                   ; preds = %.lr.ph141.12
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 6), align 8
  br label %.loopexit71.12

; <label>:4899:                                   ; preds = %.lr.ph141.12
  %4900 = load i8*, i8** @optarg, align 8
  %4901 = call i32 (i8*, i8*, ...) @sscanf(i8* %4900, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 5)) #9
  %4902 = icmp ne i32 %4901, 1
  br i1 %4902, label %160, label %4903

; <label>:4903:                                   ; preds = %4899
  %4904 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 5), align 4
  %4905 = icmp slt i32 %4904, 1
  br i1 %4905, label %160, label %4906

; <label>:4906:                                   ; preds = %4903
  %4907 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 5), align 4
  %4908 = icmp sgt i32 %4907, 128
  br i1 %4908, label %160, label %.loopexit71.12

; <label>:4909:                                   ; preds = %.lr.ph141.12
  %4910 = load i8*, i8** @optarg, align 8
  %4911 = call i32 @getmac(i8* %4910, i32 1, i8* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 4, i64 0))
  %4912 = icmp ne i32 %4911, 0
  br i1 %4912, label %142, label %4913

; <label>:4913:                                   ; preds = %4909
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 2), align 8
  br label %.loopexit71.12

; <label>:4914:                                   ; preds = %.lr.ph141.12
  call void @llvm.memset.p0i8.i64(i8* align 4 getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 3, i64 0), i8 0, i64 33, i1 false)
  %4915 = load i8*, i8** @optarg, align 8
  %4916 = call i8* @strncpy(i8* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 3, i64 0), i8* %4915, i64 32) #9, !track !220
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 1), align 4
  br label %.loopexit71.12

; <label>:4917:                                   ; preds = %.lr.ph141.12
  %4918 = load i8*, i8** @optarg, align 8
  %4919 = call i32 (i8*, i8*, ...) @sscanf(i8* %4918, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 0)) #9
  %4920 = load i8*, i8** @optarg, align 8
  %4921 = call i32 @strcasecmp(i8* %4920, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.94, i64 0, i64 0)) #10
  %4922 = icmp eq i32 %4921, 0
  br i1 %4922, label %4928, label %4923

; <label>:4923:                                   ; preds = %4917
  %4924 = load i8*, i8** @optarg, align 8
  %4925 = call i32 @strcasecmp(i8* %4924, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.95, i64 0, i64 0)) #10
  %4926 = icmp eq i32 %4925, 0
  br i1 %4926, label %4927, label %4929

; <label>:4927:                                   ; preds = %4923
  store i32 2, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 0), align 8
  br label %4929

; <label>:4928:                                   ; preds = %4917
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 0), align 8
  br label %4929

; <label>:4929:                                   ; preds = %4928, %4927, %4923
  %4930 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 0), align 8
  %4931 = icmp ne i32 %4930, 1
  br i1 %4931, label %4932, label %.loopexit71.12

; <label>:4932:                                   ; preds = %4929
  %4933 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 0), align 8
  %4934 = icmp ne i32 %4933, 2
  br i1 %4934, label %128, label %.loopexit71.12

; <label>:4935:                                   ; preds = %.lr.ph141.12
  %4936 = icmp ne i32 %.134.11, 0
  br i1 %4936, label %102, label %4937

; <label>:4937:                                   ; preds = %4935
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 40), align 8
  store i32 0, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 20), align 4
  br label %.loopexit71.12

.loopexit71.12:                                   ; preds = %4937, %4932, %4929, %4914, %4913, %4906, %4898, %4897, %4896, %4895, %4894, %4893, %.loopexit71.loopexit.12, %4765, %4761, %4739, %4729, %4720, %4704, %4692, %4682, %4672, %4662, %4661, %4660, %4659, %4658, %4654, %4653, %4651, %4649, %4640
  %.134.12 = phi i32 [ %.134.11, %4653 ], [ %.134.11, %4658 ], [ %.134.11, %4659 ], [ %.134.11, %4660 ], [ %.134.11, %4661 ], [ %.134.11, %4692 ], [ %.134.11, %4704 ], [ %.134.11, %4720 ], [ %.134.11, %4761 ], [ %.134.11, %4893 ], [ %.134.11, %4894 ], [ %.134.11, %4895 ], [ %.134.11, %4896 ], [ %.134.11, %4897 ], [ %.134.11, %4898 ], [ %.134.11, %4913 ], [ %.134.11, %4914 ], [ %.134.11, %4937 ], [ %.134.11, %4932 ], [ %.134.11, %4929 ], [ %.134.11, %4906 ], [ %.134.11, %4765 ], [ %.134.11, %4739 ], [ %.134.11, %4729 ], [ %.134.11, %4682 ], [ %.134.11, %4672 ], [ %.134.11, %4662 ], [ %.134.11, %4654 ], [ %.134.11, %4649 ], [ %.134.11, %4651 ], [ 1, %4640 ], [ %.134.11, %.loopexit71.loopexit.12 ]
  %.531.12 = phi i32 [ %.531.11, %4653 ], [ %.531.11, %4658 ], [ %.531.11, %4659 ], [ %.531.11, %4660 ], [ %.531.11, %4661 ], [ %.531.11, %4692 ], [ %.531.11, %4704 ], [ %.531.11, %4720 ], [ %.531.11, %4761 ], [ %.531.11, %4893 ], [ %.531.11, %4894 ], [ %.531.11, %4895 ], [ %.531.11, %4896 ], [ %.531.11, %4897 ], [ %.531.11, %4898 ], [ %.531.11, %4913 ], [ %.531.11, %4914 ], [ %.531.11, %4937 ], [ %.531.11, %4932 ], [ %.531.11, %4929 ], [ %.531.11, %4906 ], [ %.531.11, %4765 ], [ %.531.11, %4739 ], [ %.531.11, %4729 ], [ %.531.11, %4682 ], [ %.531.11, %4672 ], [ %.531.11, %4662 ], [ %.531.11, %4654 ], [ %.531.11, %4649 ], [ %.531.11, %4651 ], [ %.531.11, %4640 ], [ %.531.ph.12, %.loopexit71.loopexit.12 ]
  call void @__loop_iteration_test___0()
  store i32 0, i32* %30, align 4
  %4938 = call i32 @getopt_long(i32 4, i8** %25, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.86, i64 0, i64 0), %struct.option* getelementptr inbounds ([10 x %struct.option], [10 x %struct.option]* @main.long_options, i64 0, i64 0), i32* %30) #9, !track_argc !219
  %4939 = icmp slt i32 %4938, 0
  br i1 %4939, label %._crit_edge142.loopexit, label %.lr.ph141.13

.lr.ph141.13:                                     ; preds = %.loopexit71.12
  call void @unroll_loop(i32 124)
  switch i32 %4938, label %.loopexit1 [
    i32 58, label %75
    i32 63, label %80
    i32 117, label %85
    i32 86, label %5235
    i32 97, label %5217
    i32 101, label %5214
    i32 98, label %5209
    i32 112, label %5199
    i32 113, label %5198
    i32 99, label %5197
    i32 68, label %5196
    i32 104, label %5195
    i32 116, label %5194
    i32 49, label %5193
    i32 100, label %5069
    i32 109, label %5065
    i32 110, label %5042
    i32 105, label %5032
    i32 102, label %5025
    i32 107, label %5010
    i32 108, label %4997
    i32 77, label %4985
    i32 80, label %4975
    i32 120, label %4962
    i32 88, label %4961
    i32 121, label %4960
    i32 75, label %4959
    i32 115, label %4958
    i32 119, label %4954
    i32 114, label %484
    i32 48, label %4953
    i32 72, label %.loopexit13
    i32 67, label %4943
    i32 122, label %4940
  ]

; <label>:4940:                                   ; preds = %.lr.ph141.13
  %4941 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 40), align 8
  %4942 = icmp ne i32 %4941, 0
  br i1 %4942, label %507, label %.loopexit71.13

; <label>:4943:                                   ; preds = %.lr.ph141.13
  %4944 = load i8*, i8** @optarg, align 8
  %4945 = call i32 @checkbssids(i8* %4944)
  %4946 = icmp slt i32 %4945, 1
  br i1 %4946, label %493, label %4947

; <label>:4947:                                   ; preds = %4943
  %4948 = icmp eq i32 %4945, 1
  br i1 %4948, label %4951, label %4949

; <label>:4949:                                   ; preds = %4947
  %4950 = load i8*, i8** @optarg, align 8
  store i8* %4950, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 34), align 8
  br label %.loopexit71.13

; <label>:4951:                                   ; preds = %4947
  %4952 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.112, i64 0, i64 0))
  br label %.loopexit71.13

; <label>:4953:                                   ; preds = %.lr.ph141.13
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 27), align 4
  br label %.loopexit71.13

; <label>:4954:                                   ; preds = %.lr.ph141.13
  %4955 = load i8*, i8** @optarg, align 8
  %4956 = call i32 @set_dicts(i8* %4955)
  %4957 = icmp ne i32 %4956, 0
  br i1 %4957, label %479, label %.loopexit71.13

; <label>:4958:                                   ; preds = %.lr.ph141.13
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 26), align 8
  br label %.loopexit71.13

; <label>:4959:                                   ; preds = %.lr.ph141.13
  store i32 0, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 20), align 4
  br label %.loopexit71.13

; <label>:4960:                                   ; preds = %.lr.ph141.13
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 19), align 8
  br label %.loopexit71.13

; <label>:4961:                                   ; preds = %.lr.ph141.13
  store i32 0, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 18), align 4
  br label %.loopexit71.13

; <label>:4962:                                   ; preds = %.lr.ph141.13
  store i32 0, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 17), align 8
  %4963 = load i8*, i8** @optarg, align 8
  %4964 = icmp ne i8* %4963, null
  br i1 %4964, label %4965, label %.loopexit71.13

; <label>:4965:                                   ; preds = %4962
  %4966 = load i8*, i8** @optarg, align 8
  %4967 = call i32 (i8*, i8*, ...) @sscanf(i8* %4966, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 17)) #9
  %4968 = icmp ne i32 %4967, 1
  br i1 %4968, label %463, label %4969

; <label>:4969:                                   ; preds = %4965
  %4970 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 17), align 8
  %4971 = icmp slt i32 %4970, 0
  br i1 %4971, label %463, label %4972

; <label>:4972:                                   ; preds = %4969
  %4973 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 17), align 8
  %4974 = icmp sgt i32 %4973, 4
  br i1 %4974, label %463, label %.loopexit71.13

; <label>:4975:                                   ; preds = %.lr.ph141.13
  %4976 = load i8*, i8** @optarg, align 8
  %4977 = call i32 (i8*, i8*, ...) @sscanf(i8* %4976, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 39)) #9
  %4978 = icmp ne i32 %4977, 1
  br i1 %4978, label %443, label %4979

; <label>:4979:                                   ; preds = %4975
  %4980 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 39), align 4
  %4981 = icmp slt i32 %4980, 0
  br i1 %4981, label %443, label %4982

; <label>:4982:                                   ; preds = %4979
  %4983 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 39), align 4
  %4984 = icmp sgt i32 %4983, 2
  br i1 %4984, label %443, label %.loopexit71.13

; <label>:4985:                                   ; preds = %.lr.ph141.13
  %4986 = load i8*, i8** @optarg, align 8
  %4987 = call i32 (i8*, i8*, ...) @sscanf(i8* %4986, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 33)) #9
  %4988 = icmp ne i32 %4987, 1
  br i1 %4988, label %421, label %4989

; <label>:4989:                                   ; preds = %4985
  %4990 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 33), align 8
  %4991 = icmp slt i32 %4990, 1
  br i1 %4991, label %421, label %4992

; <label>:4992:                                   ; preds = %4989
  %4993 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 13), align 8
  %4994 = sub nsw i32 %4993, 1
  %4995 = sext i32 %4994 to i64
  %4996 = getelementptr inbounds [17 x i32], [17 x i32]* @K_COEFF, i64 0, i64 %4995
  store i32 0, i32* %4996, align 4
  br label %.loopexit71.13

; <label>:4997:                                   ; preds = %.lr.ph141.13
  %4998 = load i8*, i8** @optarg, align 8
  %4999 = call i64 @strlen(i8* %4998) #10
  %5000 = add i64 %4999, 1
  %5001 = call noalias i8* @calloc(i64 1, i64 %5000) #9, !track !221
  store i8* %5001, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 42), align 8
  %5002 = load i8*, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 42), align 8
  %5003 = icmp eq i8* %5002, null
  br i1 %5003, label %405, label %5004

; <label>:5004:                                   ; preds = %4997
  %5005 = load i8*, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 42), align 8
  %5006 = load i8*, i8** @optarg, align 8
  %5007 = load i8*, i8** @optarg, align 8
  %5008 = call i64 @strlen(i8* %5007) #10
  %5009 = call i8* @strncpy(i8* %5005, i8* %5006, i64 %5008) #9, !track !222
  br label %.loopexit71.13

; <label>:5010:                                   ; preds = %.lr.ph141.13
  %5011 = load i8*, i8** @optarg, align 8
  %5012 = call i32 (i8*, i8*, ...) @sscanf(i8* %5011, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 13)) #9
  %5013 = icmp ne i32 %5012, 1
  br i1 %5013, label %386, label %5014

; <label>:5014:                                   ; preds = %5010
  %5015 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 13), align 8
  %5016 = icmp slt i32 %5015, 1
  br i1 %5016, label %386, label %5017

; <label>:5017:                                   ; preds = %5014
  %5018 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 13), align 8
  %5019 = icmp sgt i32 %5018, 17
  br i1 %5019, label %386, label %5020

; <label>:5020:                                   ; preds = %5017
  %5021 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 13), align 8
  %5022 = sub nsw i32 %5021, 1
  %5023 = sext i32 %5022 to i64
  %5024 = getelementptr inbounds [17 x i32], [17 x i32]* @K_COEFF, i64 0, i64 %5023
  store i32 0, i32* %5024, align 4
  br label %.loopexit71.13

; <label>:5025:                                   ; preds = %.lr.ph141.13
  %5026 = load i8*, i8** @optarg, align 8
  %5027 = call i32 (i8*, i8*, ...) @sscanf(i8* %5026, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.103, i64 0, i64 0), float* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 12)) #9
  %5028 = icmp ne i32 %5027, 1
  br i1 %5028, label %369, label %5029

; <label>:5029:                                   ; preds = %5025
  %5030 = load float, float* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 12), align 4
  %5031 = fcmp olt float %5030, 1.000000e+00
  br i1 %5031, label %369, label %.loopexit71.13

; <label>:5032:                                   ; preds = %.lr.ph141.13
  %5033 = load i8*, i8** @optarg, align 8
  %5034 = call i32 (i8*, i8*, ...) @sscanf(i8* %5033, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 11)) #9
  %5035 = icmp ne i32 %5034, 1
  br i1 %5035, label %355, label %5036

; <label>:5036:                                   ; preds = %5032
  %5037 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 11), align 8
  %5038 = icmp slt i32 %5037, 1
  br i1 %5038, label %355, label %5039

; <label>:5039:                                   ; preds = %5036
  %5040 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 11), align 8
  %5041 = icmp sgt i32 %5040, 4
  br i1 %5041, label %355, label %.loopexit71.13

; <label>:5042:                                   ; preds = %.lr.ph141.13
  %5043 = load i8*, i8** @optarg, align 8
  %5044 = call i32 (i8*, i8*, ...) @sscanf(i8* %5043, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10)) #9
  %5045 = icmp ne i32 %5044, 1
  br i1 %5045, label %334, label %5046

; <label>:5046:                                   ; preds = %5042
  %5047 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %5048 = icmp ne i32 %5047, 64
  br i1 %5048, label %5049, label %5061

; <label>:5049:                                   ; preds = %5046
  %5050 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %5051 = icmp ne i32 %5050, 128
  br i1 %5051, label %5052, label %5061

; <label>:5052:                                   ; preds = %5049
  %5053 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %5054 = icmp ne i32 %5053, 152
  br i1 %5054, label %5055, label %5061

; <label>:5055:                                   ; preds = %5052
  %5056 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %5057 = icmp ne i32 %5056, 256
  br i1 %5057, label %5058, label %5061

; <label>:5058:                                   ; preds = %5055
  %5059 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %5060 = icmp ne i32 %5059, 512
  br i1 %5060, label %334, label %5061

; <label>:5061:                                   ; preds = %5058, %5055, %5052, %5049, %5046
  %5062 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %5063 = sdiv i32 %5062, 8
  %5064 = sub nsw i32 %5063, 3
  store i32 %5064, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  br label %.loopexit71.13

; <label>:5065:                                   ; preds = %.lr.ph141.13
  %5066 = load i8*, i8** @optarg, align 8
  %5067 = call i32 @getmac(i8* %5066, i32 1, i8* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 9, i64 0))
  %5068 = icmp ne i32 %5067, 0
  br i1 %5068, label %308, label %.loopexit71.13

; <label>:5069:                                   ; preds = %.lr.ph141.13
  store i32 0, i32* %27, align 4
  %5070 = load i8*, i8** @optarg, align 8
  %5071 = load i8, i8* %5070, align 1
  %5072 = sext i8 %5071 to i32
  %5073 = icmp ne i32 %5072, 0
  br i1 %5073, label %.lr.ph136.preheader.13, label %._crit_edge137.13

.lr.ph136.preheader.13:                           ; preds = %5069
  br label %.lr.ph136.13

.lr.ph136.13:                                     ; preds = %5120, %.lr.ph136.preheader.13
  %.02134.13 = phi i32 [ %.13.13, %5120 ], [ 0, %.lr.ph136.preheader.13 ]
  call void @unroll_loop(i32 125)
  %5074 = sext i32 %.02134.13 to i64
  %5075 = getelementptr inbounds i8, i8* %5070, i64 %5074
  %5076 = load i8, i8* %5075, align 1
  %5077 = sext i8 %5076 to i32
  %5078 = icmp eq i32 %5077, 120
  br i1 %5078, label %5079, label %5082

; <label>:5079:                                   ; preds = %.lr.ph136.13
  %5080 = sext i32 %.02134.13 to i64
  %5081 = getelementptr inbounds i8, i8* %5070, i64 %5080
  store i8 88, i8* %5081, align 1
  br label %5082

; <label>:5082:                                   ; preds = %5079, %.lr.ph136.13
  %5083 = sext i32 %.02134.13 to i64
  %5084 = getelementptr inbounds i8, i8* %5070, i64 %5083
  %5085 = load i8, i8* %5084, align 1
  %5086 = sext i8 %5085 to i32
  %5087 = icmp eq i32 %5086, 121
  br i1 %5087, label %5088, label %5091

; <label>:5088:                                   ; preds = %5082
  %5089 = sext i32 %.02134.13 to i64
  %5090 = getelementptr inbounds i8, i8* %5070, i64 %5089
  store i8 89, i8* %5090, align 1
  br label %5091

; <label>:5091:                                   ; preds = %5088, %5082
  %5092 = sext i32 %.02134.13 to i64
  %5093 = getelementptr inbounds i8, i8* %5070, i64 %5092
  %5094 = load i8, i8* %5093, align 1
  %5095 = sext i8 %5094 to i32
  %5096 = icmp eq i32 %5095, 45
  br i1 %5096, label %5118, label %5097

; <label>:5097:                                   ; preds = %5091
  %5098 = sext i32 %.02134.13 to i64
  %5099 = getelementptr inbounds i8, i8* %5070, i64 %5098
  %5100 = load i8, i8* %5099, align 1
  %5101 = sext i8 %5100 to i32
  %5102 = icmp eq i32 %5101, 58
  br i1 %5102, label %5118, label %5103

; <label>:5103:                                   ; preds = %5097
  %5104 = sext i32 %.02134.13 to i64
  %5105 = getelementptr inbounds i8, i8* %5070, i64 %5104
  %5106 = load i8, i8* %5105, align 1
  %5107 = sext i8 %5106 to i32
  %5108 = icmp eq i32 %5107, 32
  br i1 %5108, label %5118, label %5109

; <label>:5109:                                   ; preds = %5103
  %5110 = add nsw i32 %.02134.13, 1
  %5111 = sext i32 %.02134.13 to i64
  %5112 = getelementptr inbounds i8, i8* %5070, i64 %5111
  %5113 = load i8, i8* %5112, align 1
  %5114 = load i32, i32* %27, align 4
  %5115 = add nsw i32 %5114, 1
  store i32 %5115, i32* %27, align 4
  %5116 = sext i32 %5114 to i64
  %5117 = getelementptr inbounds i8, i8* %5070, i64 %5116
  store i8 %5113, i8* %5117, align 1
  br label %5120

; <label>:5118:                                   ; preds = %5103, %5097, %5091
  %5119 = add nsw i32 %.02134.13, 1
  br label %5120

; <label>:5120:                                   ; preds = %5118, %5109
  %.13.13 = phi i32 [ %5119, %5118 ], [ %5110, %5109 ]
  %5121 = sext i32 %.13.13 to i64
  %5122 = getelementptr inbounds i8, i8* %5070, i64 %5121
  %5123 = load i8, i8* %5122, align 1
  %5124 = sext i8 %5123 to i32
  %5125 = icmp ne i32 %5124, 0
  br i1 %5125, label %.lr.ph136.13, label %._crit_edge137.loopexit.13

._crit_edge137.loopexit.13:                       ; preds = %5120
  br label %._crit_edge137.13

._crit_edge137.13:                                ; preds = %._crit_edge137.loopexit.13, %5069
  %5126 = load i32, i32* %27, align 4
  %5127 = sext i32 %5126 to i64
  %5128 = getelementptr inbounds i8, i8* %5070, i64 %5127
  store i8 0, i8* %5128, align 1
  %5129 = load i8, i8* %5070, align 1
  store i8 %5129, i8* %61, align 16
  %5130 = getelementptr inbounds i8, i8* %5070, i64 1
  %5131 = load i8, i8* %5130, align 1
  store i8 %5131, i8* %62, align 1
  store i8 0, i8* %63, align 2
  %scevgep45.13 = getelementptr i8, i8* %5070, i64 3
  br label %5132

; <label>:5132:                                   ; preds = %5190, %._crit_edge137.13
  %lsr.iv48.13 = phi i8* [ %scevgep49.13, %5190 ], [ %scevgep45.13, %._crit_edge137.13 ]
  %.127.13 = phi i32 [ 0, %._crit_edge137.13 ], [ %.329.13, %5190 ]
  %.24.13 = phi i32 [ 0, %._crit_edge137.13 ], [ %.46.13, %5190 ]
  call void @unroll_loop(i32 126)
  %5133 = call i32 (i8*, i8*, ...) @sscanf(i8* %64, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.72, i64 0, i64 0), i32* %27) #9
  %5134 = icmp eq i32 %5133, 1
  br i1 %5134, label %.critedge.13, label %5135

; <label>:5135:                                   ; preds = %5132
  %5136 = load i8, i8* %66, align 16
  %5137 = sext i8 %5136 to i32
  %5138 = icmp eq i32 %5137, 88
  br i1 %5138, label %5139, label %5143

; <label>:5139:                                   ; preds = %5135
  %5140 = load i8, i8* %69, align 1
  %5141 = sext i8 %5140 to i32
  %5142 = icmp eq i32 %5141, 88
  br i1 %5142, label %.critedge.13, label %5143

; <label>:5143:                                   ; preds = %5139, %5135
  %5144 = load i8, i8* %70, align 16
  %5145 = sext i8 %5144 to i32
  %5146 = icmp eq i32 %5145, 89
  %5147 = load i8, i8* %71, align 1
  %5148 = sext i8 %5147 to i32
  %5149 = icmp eq i32 %5148, 89
  %5150 = select i1 %5146, i1 %5149, i1 false
  br i1 %5150, label %.critedge.13, label %.loopexit71.loopexit.13

.critedge.13:                                     ; preds = %5143, %5139, %5132
  %5151 = load i8, i8* %65, align 16
  %5152 = sext i8 %5151 to i32
  %5153 = icmp eq i32 %5152, 88
  br i1 %5153, label %5154, label %5158

; <label>:5154:                                   ; preds = %.critedge.13
  %5155 = load i8, i8* %67, align 1
  %5156 = sext i8 %5155 to i32
  %5157 = icmp eq i32 %5156, 88
  br i1 %5157, label %5184, label %5158

; <label>:5158:                                   ; preds = %5154, %.critedge.13
  %5159 = load i8, i8* %68, align 16
  %5160 = sext i8 %5159 to i32
  %5161 = icmp eq i32 %5160, 89
  br i1 %5161, label %5162, label %5166

; <label>:5162:                                   ; preds = %5158
  %5163 = load i8, i8* %74, align 1
  %5164 = sext i8 %5163 to i32
  %5165 = icmp eq i32 %5164, 89
  br i1 %5165, label %5179, label %5166

; <label>:5166:                                   ; preds = %5162, %5158
  %5167 = load i32, i32* %27, align 4
  %5168 = icmp slt i32 %5167, 0
  %5169 = load i32, i32* %27, align 4
  %5170 = icmp sgt i32 %5169, 255
  %or.cond.13 = or i1 %5168, %5170
  br i1 %or.cond.13, label %.loopexit19, label %5171

; <label>:5171:                                   ; preds = %5166
  %5172 = load i32, i32* %27, align 4
  %5173 = trunc i32 %5172 to i8
  %5174 = sext i32 %.24.13 to i64
  %5175 = getelementptr inbounds [64 x i8], [64 x i8]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 7), i64 0, i64 %5174
  store i8 %5173, i8* %5175, align 1
  %5176 = add nsw i32 %.24.13, 1
  %5177 = sext i32 %.24.13 to i64
  %5178 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 8), i64 0, i64 %5177
  store i32 1, i32* %5178, align 4
  br label %5188

; <label>:5179:                                   ; preds = %5162
  %5180 = add nsw i32 %.24.13, 1
  %5181 = add nsw i32 %.127.13, 1
  %5182 = sext i32 %.127.13 to i64
  %5183 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 31), i64 0, i64 %5182
  store i32 %.24.13, i32* %5183, align 4
  br label %5188

; <label>:5184:                                   ; preds = %5154
  %5185 = add nsw i32 %.24.13, 1
  %5186 = sext i32 %.24.13 to i64
  %5187 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 8), i64 0, i64 %5186
  store i32 0, i32* %5187, align 4
  br label %5188

; <label>:5188:                                   ; preds = %5184, %5179, %5171
  %.329.13 = phi i32 [ %.127.13, %5184 ], [ %5181, %5179 ], [ %.127.13, %5171 ]
  %.46.13 = phi i32 [ %5185, %5184 ], [ %5180, %5179 ], [ %5176, %5171 ]
  %5189 = icmp sge i32 %.46.13, 64
  br i1 %5189, label %.loopexit71.loopexit.13, label %5190

; <label>:5190:                                   ; preds = %5188
  %scevgep50.13 = getelementptr i8, i8* %lsr.iv48.13, i64 -1
  %5191 = load i8, i8* %scevgep50.13, align 1
  store i8 %5191, i8* %72, align 16
  %5192 = load i8, i8* %lsr.iv48.13, align 1
  store i8 %5192, i8* %73, align 1
  %scevgep49.13 = getelementptr i8, i8* %lsr.iv48.13, i64 2
  br label %5132

.loopexit71.loopexit.13:                          ; preds = %5188, %5143
  %.531.ph.13 = phi i32 [ %.329.13, %5188 ], [ %.127.13, %5143 ]
  br label %.loopexit71.13

; <label>:5193:                                   ; preds = %.lr.ph141.13
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 41), align 4
  br label %.loopexit71.13

; <label>:5194:                                   ; preds = %.lr.ph141.13
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 16), align 4
  br label %.loopexit71.13

; <label>:5195:                                   ; preds = %.lr.ph141.13
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 14), align 4
  br label %.loopexit71.13

; <label>:5196:                                   ; preds = %.lr.ph141.13
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 38), align 8
  br label %.loopexit71.13

; <label>:5197:                                   ; preds = %.lr.ph141.13
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 15), align 8
  br label %.loopexit71.13

; <label>:5198:                                   ; preds = %.lr.ph141.13
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 6), align 8
  br label %.loopexit71.13

; <label>:5199:                                   ; preds = %.lr.ph141.13
  %5200 = load i8*, i8** @optarg, align 8
  %5201 = call i32 (i8*, i8*, ...) @sscanf(i8* %5200, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 5)) #9
  %5202 = icmp ne i32 %5201, 1
  br i1 %5202, label %160, label %5203

; <label>:5203:                                   ; preds = %5199
  %5204 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 5), align 4
  %5205 = icmp slt i32 %5204, 1
  br i1 %5205, label %160, label %5206

; <label>:5206:                                   ; preds = %5203
  %5207 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 5), align 4
  %5208 = icmp sgt i32 %5207, 128
  br i1 %5208, label %160, label %.loopexit71.13

; <label>:5209:                                   ; preds = %.lr.ph141.13
  %5210 = load i8*, i8** @optarg, align 8
  %5211 = call i32 @getmac(i8* %5210, i32 1, i8* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 4, i64 0))
  %5212 = icmp ne i32 %5211, 0
  br i1 %5212, label %142, label %5213

; <label>:5213:                                   ; preds = %5209
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 2), align 8
  br label %.loopexit71.13

; <label>:5214:                                   ; preds = %.lr.ph141.13
  call void @llvm.memset.p0i8.i64(i8* align 4 getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 3, i64 0), i8 0, i64 33, i1 false)
  %5215 = load i8*, i8** @optarg, align 8
  %5216 = call i8* @strncpy(i8* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 3, i64 0), i8* %5215, i64 32) #9, !track !220
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 1), align 4
  br label %.loopexit71.13

; <label>:5217:                                   ; preds = %.lr.ph141.13
  %5218 = load i8*, i8** @optarg, align 8
  %5219 = call i32 (i8*, i8*, ...) @sscanf(i8* %5218, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 0)) #9
  %5220 = load i8*, i8** @optarg, align 8
  %5221 = call i32 @strcasecmp(i8* %5220, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.94, i64 0, i64 0)) #10
  %5222 = icmp eq i32 %5221, 0
  br i1 %5222, label %5228, label %5223

; <label>:5223:                                   ; preds = %5217
  %5224 = load i8*, i8** @optarg, align 8
  %5225 = call i32 @strcasecmp(i8* %5224, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.95, i64 0, i64 0)) #10
  %5226 = icmp eq i32 %5225, 0
  br i1 %5226, label %5227, label %5229

; <label>:5227:                                   ; preds = %5223
  store i32 2, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 0), align 8
  br label %5229

; <label>:5228:                                   ; preds = %5217
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 0), align 8
  br label %5229

; <label>:5229:                                   ; preds = %5228, %5227, %5223
  %5230 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 0), align 8
  %5231 = icmp ne i32 %5230, 1
  br i1 %5231, label %5232, label %.loopexit71.13

; <label>:5232:                                   ; preds = %5229
  %5233 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 0), align 8
  %5234 = icmp ne i32 %5233, 2
  br i1 %5234, label %128, label %.loopexit71.13

; <label>:5235:                                   ; preds = %.lr.ph141.13
  %5236 = icmp ne i32 %.134.12, 0
  br i1 %5236, label %102, label %5237

; <label>:5237:                                   ; preds = %5235
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 40), align 8
  store i32 0, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 20), align 4
  br label %.loopexit71.13

.loopexit71.13:                                   ; preds = %5237, %5232, %5229, %5214, %5213, %5206, %5198, %5197, %5196, %5195, %5194, %5193, %.loopexit71.loopexit.13, %5065, %5061, %5039, %5029, %5020, %5004, %4992, %4982, %4972, %4962, %4961, %4960, %4959, %4958, %4954, %4953, %4951, %4949, %4940
  %.134.13 = phi i32 [ %.134.12, %4953 ], [ %.134.12, %4958 ], [ %.134.12, %4959 ], [ %.134.12, %4960 ], [ %.134.12, %4961 ], [ %.134.12, %4992 ], [ %.134.12, %5004 ], [ %.134.12, %5020 ], [ %.134.12, %5061 ], [ %.134.12, %5193 ], [ %.134.12, %5194 ], [ %.134.12, %5195 ], [ %.134.12, %5196 ], [ %.134.12, %5197 ], [ %.134.12, %5198 ], [ %.134.12, %5213 ], [ %.134.12, %5214 ], [ %.134.12, %5237 ], [ %.134.12, %5232 ], [ %.134.12, %5229 ], [ %.134.12, %5206 ], [ %.134.12, %5065 ], [ %.134.12, %5039 ], [ %.134.12, %5029 ], [ %.134.12, %4982 ], [ %.134.12, %4972 ], [ %.134.12, %4962 ], [ %.134.12, %4954 ], [ %.134.12, %4949 ], [ %.134.12, %4951 ], [ 1, %4940 ], [ %.134.12, %.loopexit71.loopexit.13 ]
  %.531.13 = phi i32 [ %.531.12, %4953 ], [ %.531.12, %4958 ], [ %.531.12, %4959 ], [ %.531.12, %4960 ], [ %.531.12, %4961 ], [ %.531.12, %4992 ], [ %.531.12, %5004 ], [ %.531.12, %5020 ], [ %.531.12, %5061 ], [ %.531.12, %5193 ], [ %.531.12, %5194 ], [ %.531.12, %5195 ], [ %.531.12, %5196 ], [ %.531.12, %5197 ], [ %.531.12, %5198 ], [ %.531.12, %5213 ], [ %.531.12, %5214 ], [ %.531.12, %5237 ], [ %.531.12, %5232 ], [ %.531.12, %5229 ], [ %.531.12, %5206 ], [ %.531.12, %5065 ], [ %.531.12, %5039 ], [ %.531.12, %5029 ], [ %.531.12, %4982 ], [ %.531.12, %4972 ], [ %.531.12, %4962 ], [ %.531.12, %4954 ], [ %.531.12, %4949 ], [ %.531.12, %4951 ], [ %.531.12, %4940 ], [ %.531.ph.13, %.loopexit71.loopexit.13 ]
  call void @__loop_iteration_test___0()
  store i32 0, i32* %30, align 4
  %5238 = call i32 @getopt_long(i32 4, i8** %25, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.86, i64 0, i64 0), %struct.option* getelementptr inbounds ([10 x %struct.option], [10 x %struct.option]* @main.long_options, i64 0, i64 0), i32* %30) #9, !track_argc !219
  %5239 = icmp slt i32 %5238, 0
  br i1 %5239, label %._crit_edge142.loopexit, label %.lr.ph141.14

.lr.ph141.14:                                     ; preds = %.loopexit71.13
  call void @unroll_loop(i32 124)
  switch i32 %5238, label %.loopexit1 [
    i32 58, label %75
    i32 63, label %80
    i32 117, label %85
    i32 86, label %5535
    i32 97, label %5517
    i32 101, label %5514
    i32 98, label %5509
    i32 112, label %5499
    i32 113, label %5498
    i32 99, label %5497
    i32 68, label %5496
    i32 104, label %5495
    i32 116, label %5494
    i32 49, label %5493
    i32 100, label %5369
    i32 109, label %5365
    i32 110, label %5342
    i32 105, label %5332
    i32 102, label %5325
    i32 107, label %5310
    i32 108, label %5297
    i32 77, label %5285
    i32 80, label %5275
    i32 120, label %5262
    i32 88, label %5261
    i32 121, label %5260
    i32 75, label %5259
    i32 115, label %5258
    i32 119, label %5254
    i32 114, label %484
    i32 48, label %5253
    i32 72, label %.loopexit13
    i32 67, label %5243
    i32 122, label %5240
  ]

; <label>:5240:                                   ; preds = %.lr.ph141.14
  %5241 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 40), align 8
  %5242 = icmp ne i32 %5241, 0
  br i1 %5242, label %507, label %.loopexit71.14

; <label>:5243:                                   ; preds = %.lr.ph141.14
  %5244 = load i8*, i8** @optarg, align 8
  %5245 = call i32 @checkbssids(i8* %5244)
  %5246 = icmp slt i32 %5245, 1
  br i1 %5246, label %493, label %5247

; <label>:5247:                                   ; preds = %5243
  %5248 = icmp eq i32 %5245, 1
  br i1 %5248, label %5251, label %5249

; <label>:5249:                                   ; preds = %5247
  %5250 = load i8*, i8** @optarg, align 8
  store i8* %5250, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 34), align 8
  br label %.loopexit71.14

; <label>:5251:                                   ; preds = %5247
  %5252 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.112, i64 0, i64 0))
  br label %.loopexit71.14

; <label>:5253:                                   ; preds = %.lr.ph141.14
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 27), align 4
  br label %.loopexit71.14

; <label>:5254:                                   ; preds = %.lr.ph141.14
  %5255 = load i8*, i8** @optarg, align 8
  %5256 = call i32 @set_dicts(i8* %5255)
  %5257 = icmp ne i32 %5256, 0
  br i1 %5257, label %479, label %.loopexit71.14

; <label>:5258:                                   ; preds = %.lr.ph141.14
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 26), align 8
  br label %.loopexit71.14

; <label>:5259:                                   ; preds = %.lr.ph141.14
  store i32 0, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 20), align 4
  br label %.loopexit71.14

; <label>:5260:                                   ; preds = %.lr.ph141.14
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 19), align 8
  br label %.loopexit71.14

; <label>:5261:                                   ; preds = %.lr.ph141.14
  store i32 0, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 18), align 4
  br label %.loopexit71.14

; <label>:5262:                                   ; preds = %.lr.ph141.14
  store i32 0, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 17), align 8
  %5263 = load i8*, i8** @optarg, align 8
  %5264 = icmp ne i8* %5263, null
  br i1 %5264, label %5265, label %.loopexit71.14

; <label>:5265:                                   ; preds = %5262
  %5266 = load i8*, i8** @optarg, align 8
  %5267 = call i32 (i8*, i8*, ...) @sscanf(i8* %5266, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 17)) #9
  %5268 = icmp ne i32 %5267, 1
  br i1 %5268, label %463, label %5269

; <label>:5269:                                   ; preds = %5265
  %5270 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 17), align 8
  %5271 = icmp slt i32 %5270, 0
  br i1 %5271, label %463, label %5272

; <label>:5272:                                   ; preds = %5269
  %5273 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 17), align 8
  %5274 = icmp sgt i32 %5273, 4
  br i1 %5274, label %463, label %.loopexit71.14

; <label>:5275:                                   ; preds = %.lr.ph141.14
  %5276 = load i8*, i8** @optarg, align 8
  %5277 = call i32 (i8*, i8*, ...) @sscanf(i8* %5276, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 39)) #9
  %5278 = icmp ne i32 %5277, 1
  br i1 %5278, label %443, label %5279

; <label>:5279:                                   ; preds = %5275
  %5280 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 39), align 4
  %5281 = icmp slt i32 %5280, 0
  br i1 %5281, label %443, label %5282

; <label>:5282:                                   ; preds = %5279
  %5283 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 39), align 4
  %5284 = icmp sgt i32 %5283, 2
  br i1 %5284, label %443, label %.loopexit71.14

; <label>:5285:                                   ; preds = %.lr.ph141.14
  %5286 = load i8*, i8** @optarg, align 8
  %5287 = call i32 (i8*, i8*, ...) @sscanf(i8* %5286, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 33)) #9
  %5288 = icmp ne i32 %5287, 1
  br i1 %5288, label %421, label %5289

; <label>:5289:                                   ; preds = %5285
  %5290 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 33), align 8
  %5291 = icmp slt i32 %5290, 1
  br i1 %5291, label %421, label %5292

; <label>:5292:                                   ; preds = %5289
  %5293 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 13), align 8
  %5294 = sub nsw i32 %5293, 1
  %5295 = sext i32 %5294 to i64
  %5296 = getelementptr inbounds [17 x i32], [17 x i32]* @K_COEFF, i64 0, i64 %5295
  store i32 0, i32* %5296, align 4
  br label %.loopexit71.14

; <label>:5297:                                   ; preds = %.lr.ph141.14
  %5298 = load i8*, i8** @optarg, align 8
  %5299 = call i64 @strlen(i8* %5298) #10
  %5300 = add i64 %5299, 1
  %5301 = call noalias i8* @calloc(i64 1, i64 %5300) #9, !track !221
  store i8* %5301, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 42), align 8
  %5302 = load i8*, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 42), align 8
  %5303 = icmp eq i8* %5302, null
  br i1 %5303, label %405, label %5304

; <label>:5304:                                   ; preds = %5297
  %5305 = load i8*, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 42), align 8
  %5306 = load i8*, i8** @optarg, align 8
  %5307 = load i8*, i8** @optarg, align 8
  %5308 = call i64 @strlen(i8* %5307) #10
  %5309 = call i8* @strncpy(i8* %5305, i8* %5306, i64 %5308) #9, !track !222
  br label %.loopexit71.14

; <label>:5310:                                   ; preds = %.lr.ph141.14
  %5311 = load i8*, i8** @optarg, align 8
  %5312 = call i32 (i8*, i8*, ...) @sscanf(i8* %5311, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 13)) #9
  %5313 = icmp ne i32 %5312, 1
  br i1 %5313, label %386, label %5314

; <label>:5314:                                   ; preds = %5310
  %5315 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 13), align 8
  %5316 = icmp slt i32 %5315, 1
  br i1 %5316, label %386, label %5317

; <label>:5317:                                   ; preds = %5314
  %5318 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 13), align 8
  %5319 = icmp sgt i32 %5318, 17
  br i1 %5319, label %386, label %5320

; <label>:5320:                                   ; preds = %5317
  %5321 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 13), align 8
  %5322 = sub nsw i32 %5321, 1
  %5323 = sext i32 %5322 to i64
  %5324 = getelementptr inbounds [17 x i32], [17 x i32]* @K_COEFF, i64 0, i64 %5323
  store i32 0, i32* %5324, align 4
  br label %.loopexit71.14

; <label>:5325:                                   ; preds = %.lr.ph141.14
  %5326 = load i8*, i8** @optarg, align 8
  %5327 = call i32 (i8*, i8*, ...) @sscanf(i8* %5326, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.103, i64 0, i64 0), float* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 12)) #9
  %5328 = icmp ne i32 %5327, 1
  br i1 %5328, label %369, label %5329

; <label>:5329:                                   ; preds = %5325
  %5330 = load float, float* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 12), align 4
  %5331 = fcmp olt float %5330, 1.000000e+00
  br i1 %5331, label %369, label %.loopexit71.14

; <label>:5332:                                   ; preds = %.lr.ph141.14
  %5333 = load i8*, i8** @optarg, align 8
  %5334 = call i32 (i8*, i8*, ...) @sscanf(i8* %5333, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 11)) #9
  %5335 = icmp ne i32 %5334, 1
  br i1 %5335, label %355, label %5336

; <label>:5336:                                   ; preds = %5332
  %5337 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 11), align 8
  %5338 = icmp slt i32 %5337, 1
  br i1 %5338, label %355, label %5339

; <label>:5339:                                   ; preds = %5336
  %5340 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 11), align 8
  %5341 = icmp sgt i32 %5340, 4
  br i1 %5341, label %355, label %.loopexit71.14

; <label>:5342:                                   ; preds = %.lr.ph141.14
  %5343 = load i8*, i8** @optarg, align 8
  %5344 = call i32 (i8*, i8*, ...) @sscanf(i8* %5343, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10)) #9
  %5345 = icmp ne i32 %5344, 1
  br i1 %5345, label %334, label %5346

; <label>:5346:                                   ; preds = %5342
  %5347 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %5348 = icmp ne i32 %5347, 64
  br i1 %5348, label %5349, label %5361

; <label>:5349:                                   ; preds = %5346
  %5350 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %5351 = icmp ne i32 %5350, 128
  br i1 %5351, label %5352, label %5361

; <label>:5352:                                   ; preds = %5349
  %5353 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %5354 = icmp ne i32 %5353, 152
  br i1 %5354, label %5355, label %5361

; <label>:5355:                                   ; preds = %5352
  %5356 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %5357 = icmp ne i32 %5356, 256
  br i1 %5357, label %5358, label %5361

; <label>:5358:                                   ; preds = %5355
  %5359 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %5360 = icmp ne i32 %5359, 512
  br i1 %5360, label %334, label %5361

; <label>:5361:                                   ; preds = %5358, %5355, %5352, %5349, %5346
  %5362 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %5363 = sdiv i32 %5362, 8
  %5364 = sub nsw i32 %5363, 3
  store i32 %5364, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  br label %.loopexit71.14

; <label>:5365:                                   ; preds = %.lr.ph141.14
  %5366 = load i8*, i8** @optarg, align 8
  %5367 = call i32 @getmac(i8* %5366, i32 1, i8* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 9, i64 0))
  %5368 = icmp ne i32 %5367, 0
  br i1 %5368, label %308, label %.loopexit71.14

; <label>:5369:                                   ; preds = %.lr.ph141.14
  store i32 0, i32* %27, align 4
  %5370 = load i8*, i8** @optarg, align 8
  %5371 = load i8, i8* %5370, align 1
  %5372 = sext i8 %5371 to i32
  %5373 = icmp ne i32 %5372, 0
  br i1 %5373, label %.lr.ph136.preheader.14, label %._crit_edge137.14

.lr.ph136.preheader.14:                           ; preds = %5369
  br label %.lr.ph136.14

.lr.ph136.14:                                     ; preds = %5420, %.lr.ph136.preheader.14
  %.02134.14 = phi i32 [ %.13.14, %5420 ], [ 0, %.lr.ph136.preheader.14 ]
  call void @unroll_loop(i32 125)
  %5374 = sext i32 %.02134.14 to i64
  %5375 = getelementptr inbounds i8, i8* %5370, i64 %5374
  %5376 = load i8, i8* %5375, align 1
  %5377 = sext i8 %5376 to i32
  %5378 = icmp eq i32 %5377, 120
  br i1 %5378, label %5379, label %5382

; <label>:5379:                                   ; preds = %.lr.ph136.14
  %5380 = sext i32 %.02134.14 to i64
  %5381 = getelementptr inbounds i8, i8* %5370, i64 %5380
  store i8 88, i8* %5381, align 1
  br label %5382

; <label>:5382:                                   ; preds = %5379, %.lr.ph136.14
  %5383 = sext i32 %.02134.14 to i64
  %5384 = getelementptr inbounds i8, i8* %5370, i64 %5383
  %5385 = load i8, i8* %5384, align 1
  %5386 = sext i8 %5385 to i32
  %5387 = icmp eq i32 %5386, 121
  br i1 %5387, label %5388, label %5391

; <label>:5388:                                   ; preds = %5382
  %5389 = sext i32 %.02134.14 to i64
  %5390 = getelementptr inbounds i8, i8* %5370, i64 %5389
  store i8 89, i8* %5390, align 1
  br label %5391

; <label>:5391:                                   ; preds = %5388, %5382
  %5392 = sext i32 %.02134.14 to i64
  %5393 = getelementptr inbounds i8, i8* %5370, i64 %5392
  %5394 = load i8, i8* %5393, align 1
  %5395 = sext i8 %5394 to i32
  %5396 = icmp eq i32 %5395, 45
  br i1 %5396, label %5418, label %5397

; <label>:5397:                                   ; preds = %5391
  %5398 = sext i32 %.02134.14 to i64
  %5399 = getelementptr inbounds i8, i8* %5370, i64 %5398
  %5400 = load i8, i8* %5399, align 1
  %5401 = sext i8 %5400 to i32
  %5402 = icmp eq i32 %5401, 58
  br i1 %5402, label %5418, label %5403

; <label>:5403:                                   ; preds = %5397
  %5404 = sext i32 %.02134.14 to i64
  %5405 = getelementptr inbounds i8, i8* %5370, i64 %5404
  %5406 = load i8, i8* %5405, align 1
  %5407 = sext i8 %5406 to i32
  %5408 = icmp eq i32 %5407, 32
  br i1 %5408, label %5418, label %5409

; <label>:5409:                                   ; preds = %5403
  %5410 = add nsw i32 %.02134.14, 1
  %5411 = sext i32 %.02134.14 to i64
  %5412 = getelementptr inbounds i8, i8* %5370, i64 %5411
  %5413 = load i8, i8* %5412, align 1
  %5414 = load i32, i32* %27, align 4
  %5415 = add nsw i32 %5414, 1
  store i32 %5415, i32* %27, align 4
  %5416 = sext i32 %5414 to i64
  %5417 = getelementptr inbounds i8, i8* %5370, i64 %5416
  store i8 %5413, i8* %5417, align 1
  br label %5420

; <label>:5418:                                   ; preds = %5403, %5397, %5391
  %5419 = add nsw i32 %.02134.14, 1
  br label %5420

; <label>:5420:                                   ; preds = %5418, %5409
  %.13.14 = phi i32 [ %5419, %5418 ], [ %5410, %5409 ]
  %5421 = sext i32 %.13.14 to i64
  %5422 = getelementptr inbounds i8, i8* %5370, i64 %5421
  %5423 = load i8, i8* %5422, align 1
  %5424 = sext i8 %5423 to i32
  %5425 = icmp ne i32 %5424, 0
  br i1 %5425, label %.lr.ph136.14, label %._crit_edge137.loopexit.14

._crit_edge137.loopexit.14:                       ; preds = %5420
  br label %._crit_edge137.14

._crit_edge137.14:                                ; preds = %._crit_edge137.loopexit.14, %5369
  %5426 = load i32, i32* %27, align 4
  %5427 = sext i32 %5426 to i64
  %5428 = getelementptr inbounds i8, i8* %5370, i64 %5427
  store i8 0, i8* %5428, align 1
  %5429 = load i8, i8* %5370, align 1
  store i8 %5429, i8* %61, align 16
  %5430 = getelementptr inbounds i8, i8* %5370, i64 1
  %5431 = load i8, i8* %5430, align 1
  store i8 %5431, i8* %62, align 1
  store i8 0, i8* %63, align 2
  %scevgep45.14 = getelementptr i8, i8* %5370, i64 3
  br label %5432

; <label>:5432:                                   ; preds = %5490, %._crit_edge137.14
  %lsr.iv48.14 = phi i8* [ %scevgep49.14, %5490 ], [ %scevgep45.14, %._crit_edge137.14 ]
  %.127.14 = phi i32 [ 0, %._crit_edge137.14 ], [ %.329.14, %5490 ]
  %.24.14 = phi i32 [ 0, %._crit_edge137.14 ], [ %.46.14, %5490 ]
  call void @unroll_loop(i32 126)
  %5433 = call i32 (i8*, i8*, ...) @sscanf(i8* %64, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.72, i64 0, i64 0), i32* %27) #9
  %5434 = icmp eq i32 %5433, 1
  br i1 %5434, label %.critedge.14, label %5435

; <label>:5435:                                   ; preds = %5432
  %5436 = load i8, i8* %66, align 16
  %5437 = sext i8 %5436 to i32
  %5438 = icmp eq i32 %5437, 88
  br i1 %5438, label %5439, label %5443

; <label>:5439:                                   ; preds = %5435
  %5440 = load i8, i8* %69, align 1
  %5441 = sext i8 %5440 to i32
  %5442 = icmp eq i32 %5441, 88
  br i1 %5442, label %.critedge.14, label %5443

; <label>:5443:                                   ; preds = %5439, %5435
  %5444 = load i8, i8* %70, align 16
  %5445 = sext i8 %5444 to i32
  %5446 = icmp eq i32 %5445, 89
  %5447 = load i8, i8* %71, align 1
  %5448 = sext i8 %5447 to i32
  %5449 = icmp eq i32 %5448, 89
  %5450 = select i1 %5446, i1 %5449, i1 false
  br i1 %5450, label %.critedge.14, label %.loopexit71.loopexit.14

.critedge.14:                                     ; preds = %5443, %5439, %5432
  %5451 = load i8, i8* %65, align 16
  %5452 = sext i8 %5451 to i32
  %5453 = icmp eq i32 %5452, 88
  br i1 %5453, label %5454, label %5458

; <label>:5454:                                   ; preds = %.critedge.14
  %5455 = load i8, i8* %67, align 1
  %5456 = sext i8 %5455 to i32
  %5457 = icmp eq i32 %5456, 88
  br i1 %5457, label %5484, label %5458

; <label>:5458:                                   ; preds = %5454, %.critedge.14
  %5459 = load i8, i8* %68, align 16
  %5460 = sext i8 %5459 to i32
  %5461 = icmp eq i32 %5460, 89
  br i1 %5461, label %5462, label %5466

; <label>:5462:                                   ; preds = %5458
  %5463 = load i8, i8* %74, align 1
  %5464 = sext i8 %5463 to i32
  %5465 = icmp eq i32 %5464, 89
  br i1 %5465, label %5479, label %5466

; <label>:5466:                                   ; preds = %5462, %5458
  %5467 = load i32, i32* %27, align 4
  %5468 = icmp slt i32 %5467, 0
  %5469 = load i32, i32* %27, align 4
  %5470 = icmp sgt i32 %5469, 255
  %or.cond.14 = or i1 %5468, %5470
  br i1 %or.cond.14, label %.loopexit20, label %5471

; <label>:5471:                                   ; preds = %5466
  %5472 = load i32, i32* %27, align 4
  %5473 = trunc i32 %5472 to i8
  %5474 = sext i32 %.24.14 to i64
  %5475 = getelementptr inbounds [64 x i8], [64 x i8]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 7), i64 0, i64 %5474
  store i8 %5473, i8* %5475, align 1
  %5476 = add nsw i32 %.24.14, 1
  %5477 = sext i32 %.24.14 to i64
  %5478 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 8), i64 0, i64 %5477
  store i32 1, i32* %5478, align 4
  br label %5488

; <label>:5479:                                   ; preds = %5462
  %5480 = add nsw i32 %.24.14, 1
  %5481 = add nsw i32 %.127.14, 1
  %5482 = sext i32 %.127.14 to i64
  %5483 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 31), i64 0, i64 %5482
  store i32 %.24.14, i32* %5483, align 4
  br label %5488

; <label>:5484:                                   ; preds = %5454
  %5485 = add nsw i32 %.24.14, 1
  %5486 = sext i32 %.24.14 to i64
  %5487 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 8), i64 0, i64 %5486
  store i32 0, i32* %5487, align 4
  br label %5488

; <label>:5488:                                   ; preds = %5484, %5479, %5471
  %.329.14 = phi i32 [ %.127.14, %5484 ], [ %5481, %5479 ], [ %.127.14, %5471 ]
  %.46.14 = phi i32 [ %5485, %5484 ], [ %5480, %5479 ], [ %5476, %5471 ]
  %5489 = icmp sge i32 %.46.14, 64
  br i1 %5489, label %.loopexit71.loopexit.14, label %5490

; <label>:5490:                                   ; preds = %5488
  %scevgep50.14 = getelementptr i8, i8* %lsr.iv48.14, i64 -1
  %5491 = load i8, i8* %scevgep50.14, align 1
  store i8 %5491, i8* %72, align 16
  %5492 = load i8, i8* %lsr.iv48.14, align 1
  store i8 %5492, i8* %73, align 1
  %scevgep49.14 = getelementptr i8, i8* %lsr.iv48.14, i64 2
  br label %5432

.loopexit71.loopexit.14:                          ; preds = %5488, %5443
  %.531.ph.14 = phi i32 [ %.329.14, %5488 ], [ %.127.14, %5443 ]
  br label %.loopexit71.14

; <label>:5493:                                   ; preds = %.lr.ph141.14
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 41), align 4
  br label %.loopexit71.14

; <label>:5494:                                   ; preds = %.lr.ph141.14
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 16), align 4
  br label %.loopexit71.14

; <label>:5495:                                   ; preds = %.lr.ph141.14
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 14), align 4
  br label %.loopexit71.14

; <label>:5496:                                   ; preds = %.lr.ph141.14
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 38), align 8
  br label %.loopexit71.14

; <label>:5497:                                   ; preds = %.lr.ph141.14
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 15), align 8
  br label %.loopexit71.14

; <label>:5498:                                   ; preds = %.lr.ph141.14
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 6), align 8
  br label %.loopexit71.14

; <label>:5499:                                   ; preds = %.lr.ph141.14
  %5500 = load i8*, i8** @optarg, align 8
  %5501 = call i32 (i8*, i8*, ...) @sscanf(i8* %5500, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 5)) #9
  %5502 = icmp ne i32 %5501, 1
  br i1 %5502, label %160, label %5503

; <label>:5503:                                   ; preds = %5499
  %5504 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 5), align 4
  %5505 = icmp slt i32 %5504, 1
  br i1 %5505, label %160, label %5506

; <label>:5506:                                   ; preds = %5503
  %5507 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 5), align 4
  %5508 = icmp sgt i32 %5507, 128
  br i1 %5508, label %160, label %.loopexit71.14

; <label>:5509:                                   ; preds = %.lr.ph141.14
  %5510 = load i8*, i8** @optarg, align 8
  %5511 = call i32 @getmac(i8* %5510, i32 1, i8* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 4, i64 0))
  %5512 = icmp ne i32 %5511, 0
  br i1 %5512, label %142, label %5513

; <label>:5513:                                   ; preds = %5509
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 2), align 8
  br label %.loopexit71.14

; <label>:5514:                                   ; preds = %.lr.ph141.14
  call void @llvm.memset.p0i8.i64(i8* align 4 getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 3, i64 0), i8 0, i64 33, i1 false)
  %5515 = load i8*, i8** @optarg, align 8
  %5516 = call i8* @strncpy(i8* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 3, i64 0), i8* %5515, i64 32) #9, !track !220
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 1), align 4
  br label %.loopexit71.14

; <label>:5517:                                   ; preds = %.lr.ph141.14
  %5518 = load i8*, i8** @optarg, align 8
  %5519 = call i32 (i8*, i8*, ...) @sscanf(i8* %5518, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 0)) #9
  %5520 = load i8*, i8** @optarg, align 8
  %5521 = call i32 @strcasecmp(i8* %5520, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.94, i64 0, i64 0)) #10
  %5522 = icmp eq i32 %5521, 0
  br i1 %5522, label %5528, label %5523

; <label>:5523:                                   ; preds = %5517
  %5524 = load i8*, i8** @optarg, align 8
  %5525 = call i32 @strcasecmp(i8* %5524, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.95, i64 0, i64 0)) #10
  %5526 = icmp eq i32 %5525, 0
  br i1 %5526, label %5527, label %5529

; <label>:5527:                                   ; preds = %5523
  store i32 2, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 0), align 8
  br label %5529

; <label>:5528:                                   ; preds = %5517
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 0), align 8
  br label %5529

; <label>:5529:                                   ; preds = %5528, %5527, %5523
  %5530 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 0), align 8
  %5531 = icmp ne i32 %5530, 1
  br i1 %5531, label %5532, label %.loopexit71.14

; <label>:5532:                                   ; preds = %5529
  %5533 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 0), align 8
  %5534 = icmp ne i32 %5533, 2
  br i1 %5534, label %128, label %.loopexit71.14

; <label>:5535:                                   ; preds = %.lr.ph141.14
  %5536 = icmp ne i32 %.134.13, 0
  br i1 %5536, label %102, label %5537

; <label>:5537:                                   ; preds = %5535
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 40), align 8
  store i32 0, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 20), align 4
  br label %.loopexit71.14

.loopexit71.14:                                   ; preds = %5537, %5532, %5529, %5514, %5513, %5506, %5498, %5497, %5496, %5495, %5494, %5493, %.loopexit71.loopexit.14, %5365, %5361, %5339, %5329, %5320, %5304, %5292, %5282, %5272, %5262, %5261, %5260, %5259, %5258, %5254, %5253, %5251, %5249, %5240
  %.134.14 = phi i32 [ %.134.13, %5253 ], [ %.134.13, %5258 ], [ %.134.13, %5259 ], [ %.134.13, %5260 ], [ %.134.13, %5261 ], [ %.134.13, %5292 ], [ %.134.13, %5304 ], [ %.134.13, %5320 ], [ %.134.13, %5361 ], [ %.134.13, %5493 ], [ %.134.13, %5494 ], [ %.134.13, %5495 ], [ %.134.13, %5496 ], [ %.134.13, %5497 ], [ %.134.13, %5498 ], [ %.134.13, %5513 ], [ %.134.13, %5514 ], [ %.134.13, %5537 ], [ %.134.13, %5532 ], [ %.134.13, %5529 ], [ %.134.13, %5506 ], [ %.134.13, %5365 ], [ %.134.13, %5339 ], [ %.134.13, %5329 ], [ %.134.13, %5282 ], [ %.134.13, %5272 ], [ %.134.13, %5262 ], [ %.134.13, %5254 ], [ %.134.13, %5249 ], [ %.134.13, %5251 ], [ 1, %5240 ], [ %.134.13, %.loopexit71.loopexit.14 ]
  %.531.14 = phi i32 [ %.531.13, %5253 ], [ %.531.13, %5258 ], [ %.531.13, %5259 ], [ %.531.13, %5260 ], [ %.531.13, %5261 ], [ %.531.13, %5292 ], [ %.531.13, %5304 ], [ %.531.13, %5320 ], [ %.531.13, %5361 ], [ %.531.13, %5493 ], [ %.531.13, %5494 ], [ %.531.13, %5495 ], [ %.531.13, %5496 ], [ %.531.13, %5497 ], [ %.531.13, %5498 ], [ %.531.13, %5513 ], [ %.531.13, %5514 ], [ %.531.13, %5537 ], [ %.531.13, %5532 ], [ %.531.13, %5529 ], [ %.531.13, %5506 ], [ %.531.13, %5365 ], [ %.531.13, %5339 ], [ %.531.13, %5329 ], [ %.531.13, %5282 ], [ %.531.13, %5272 ], [ %.531.13, %5262 ], [ %.531.13, %5254 ], [ %.531.13, %5249 ], [ %.531.13, %5251 ], [ %.531.13, %5240 ], [ %.531.ph.14, %.loopexit71.loopexit.14 ]
  call void @__loop_iteration_test___0()
  store i32 0, i32* %30, align 4
  %5538 = call i32 @getopt_long(i32 4, i8** %25, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.86, i64 0, i64 0), %struct.option* getelementptr inbounds ([10 x %struct.option], [10 x %struct.option]* @main.long_options, i64 0, i64 0), i32* %30) #9, !track_argc !219
  %5539 = icmp slt i32 %5538, 0
  br i1 %5539, label %._crit_edge142.loopexit, label %.lr.ph141.15

.lr.ph141.15:                                     ; preds = %.loopexit71.14
  call void @unroll_loop(i32 124)
  switch i32 %5538, label %.loopexit1 [
    i32 58, label %75
    i32 63, label %80
    i32 117, label %85
    i32 86, label %5835
    i32 97, label %5817
    i32 101, label %5814
    i32 98, label %5809
    i32 112, label %5799
    i32 113, label %5798
    i32 99, label %5797
    i32 68, label %5796
    i32 104, label %5795
    i32 116, label %5794
    i32 49, label %5793
    i32 100, label %5669
    i32 109, label %5665
    i32 110, label %5642
    i32 105, label %5632
    i32 102, label %5625
    i32 107, label %5610
    i32 108, label %5597
    i32 77, label %5585
    i32 80, label %5575
    i32 120, label %5562
    i32 88, label %5561
    i32 121, label %5560
    i32 75, label %5559
    i32 115, label %5558
    i32 119, label %5554
    i32 114, label %484
    i32 48, label %5553
    i32 72, label %.loopexit13
    i32 67, label %5543
    i32 122, label %5540
  ]

; <label>:5540:                                   ; preds = %.lr.ph141.15
  %5541 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 40), align 8
  %5542 = icmp ne i32 %5541, 0
  br i1 %5542, label %507, label %.loopexit71.15

; <label>:5543:                                   ; preds = %.lr.ph141.15
  %5544 = load i8*, i8** @optarg, align 8
  %5545 = call i32 @checkbssids(i8* %5544)
  %5546 = icmp slt i32 %5545, 1
  br i1 %5546, label %493, label %5547

; <label>:5547:                                   ; preds = %5543
  %5548 = icmp eq i32 %5545, 1
  br i1 %5548, label %5551, label %5549

; <label>:5549:                                   ; preds = %5547
  %5550 = load i8*, i8** @optarg, align 8
  store i8* %5550, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 34), align 8
  br label %.loopexit71.15

; <label>:5551:                                   ; preds = %5547
  %5552 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.112, i64 0, i64 0))
  br label %.loopexit71.15

; <label>:5553:                                   ; preds = %.lr.ph141.15
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 27), align 4
  br label %.loopexit71.15

; <label>:5554:                                   ; preds = %.lr.ph141.15
  %5555 = load i8*, i8** @optarg, align 8
  %5556 = call i32 @set_dicts(i8* %5555)
  %5557 = icmp ne i32 %5556, 0
  br i1 %5557, label %479, label %.loopexit71.15

; <label>:5558:                                   ; preds = %.lr.ph141.15
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 26), align 8
  br label %.loopexit71.15

; <label>:5559:                                   ; preds = %.lr.ph141.15
  store i32 0, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 20), align 4
  br label %.loopexit71.15

; <label>:5560:                                   ; preds = %.lr.ph141.15
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 19), align 8
  br label %.loopexit71.15

; <label>:5561:                                   ; preds = %.lr.ph141.15
  store i32 0, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 18), align 4
  br label %.loopexit71.15

; <label>:5562:                                   ; preds = %.lr.ph141.15
  store i32 0, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 17), align 8
  %5563 = load i8*, i8** @optarg, align 8
  %5564 = icmp ne i8* %5563, null
  br i1 %5564, label %5565, label %.loopexit71.15

; <label>:5565:                                   ; preds = %5562
  %5566 = load i8*, i8** @optarg, align 8
  %5567 = call i32 (i8*, i8*, ...) @sscanf(i8* %5566, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 17)) #9
  %5568 = icmp ne i32 %5567, 1
  br i1 %5568, label %463, label %5569

; <label>:5569:                                   ; preds = %5565
  %5570 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 17), align 8
  %5571 = icmp slt i32 %5570, 0
  br i1 %5571, label %463, label %5572

; <label>:5572:                                   ; preds = %5569
  %5573 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 17), align 8
  %5574 = icmp sgt i32 %5573, 4
  br i1 %5574, label %463, label %.loopexit71.15

; <label>:5575:                                   ; preds = %.lr.ph141.15
  %5576 = load i8*, i8** @optarg, align 8
  %5577 = call i32 (i8*, i8*, ...) @sscanf(i8* %5576, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 39)) #9
  %5578 = icmp ne i32 %5577, 1
  br i1 %5578, label %443, label %5579

; <label>:5579:                                   ; preds = %5575
  %5580 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 39), align 4
  %5581 = icmp slt i32 %5580, 0
  br i1 %5581, label %443, label %5582

; <label>:5582:                                   ; preds = %5579
  %5583 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 39), align 4
  %5584 = icmp sgt i32 %5583, 2
  br i1 %5584, label %443, label %.loopexit71.15

; <label>:5585:                                   ; preds = %.lr.ph141.15
  %5586 = load i8*, i8** @optarg, align 8
  %5587 = call i32 (i8*, i8*, ...) @sscanf(i8* %5586, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 33)) #9
  %5588 = icmp ne i32 %5587, 1
  br i1 %5588, label %421, label %5589

; <label>:5589:                                   ; preds = %5585
  %5590 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 33), align 8
  %5591 = icmp slt i32 %5590, 1
  br i1 %5591, label %421, label %5592

; <label>:5592:                                   ; preds = %5589
  %5593 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 13), align 8
  %5594 = sub nsw i32 %5593, 1
  %5595 = sext i32 %5594 to i64
  %5596 = getelementptr inbounds [17 x i32], [17 x i32]* @K_COEFF, i64 0, i64 %5595
  store i32 0, i32* %5596, align 4
  br label %.loopexit71.15

; <label>:5597:                                   ; preds = %.lr.ph141.15
  %5598 = load i8*, i8** @optarg, align 8
  %5599 = call i64 @strlen(i8* %5598) #10
  %5600 = add i64 %5599, 1
  %5601 = call noalias i8* @calloc(i64 1, i64 %5600) #9, !track !221
  store i8* %5601, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 42), align 8
  %5602 = load i8*, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 42), align 8
  %5603 = icmp eq i8* %5602, null
  br i1 %5603, label %405, label %5604

; <label>:5604:                                   ; preds = %5597
  %5605 = load i8*, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 42), align 8
  %5606 = load i8*, i8** @optarg, align 8
  %5607 = load i8*, i8** @optarg, align 8
  %5608 = call i64 @strlen(i8* %5607) #10
  %5609 = call i8* @strncpy(i8* %5605, i8* %5606, i64 %5608) #9, !track !222
  br label %.loopexit71.15

; <label>:5610:                                   ; preds = %.lr.ph141.15
  %5611 = load i8*, i8** @optarg, align 8
  %5612 = call i32 (i8*, i8*, ...) @sscanf(i8* %5611, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 13)) #9
  %5613 = icmp ne i32 %5612, 1
  br i1 %5613, label %386, label %5614

; <label>:5614:                                   ; preds = %5610
  %5615 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 13), align 8
  %5616 = icmp slt i32 %5615, 1
  br i1 %5616, label %386, label %5617

; <label>:5617:                                   ; preds = %5614
  %5618 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 13), align 8
  %5619 = icmp sgt i32 %5618, 17
  br i1 %5619, label %386, label %5620

; <label>:5620:                                   ; preds = %5617
  %5621 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 13), align 8
  %5622 = sub nsw i32 %5621, 1
  %5623 = sext i32 %5622 to i64
  %5624 = getelementptr inbounds [17 x i32], [17 x i32]* @K_COEFF, i64 0, i64 %5623
  store i32 0, i32* %5624, align 4
  br label %.loopexit71.15

; <label>:5625:                                   ; preds = %.lr.ph141.15
  %5626 = load i8*, i8** @optarg, align 8
  %5627 = call i32 (i8*, i8*, ...) @sscanf(i8* %5626, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.103, i64 0, i64 0), float* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 12)) #9
  %5628 = icmp ne i32 %5627, 1
  br i1 %5628, label %369, label %5629

; <label>:5629:                                   ; preds = %5625
  %5630 = load float, float* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 12), align 4
  %5631 = fcmp olt float %5630, 1.000000e+00
  br i1 %5631, label %369, label %.loopexit71.15

; <label>:5632:                                   ; preds = %.lr.ph141.15
  %5633 = load i8*, i8** @optarg, align 8
  %5634 = call i32 (i8*, i8*, ...) @sscanf(i8* %5633, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 11)) #9
  %5635 = icmp ne i32 %5634, 1
  br i1 %5635, label %355, label %5636

; <label>:5636:                                   ; preds = %5632
  %5637 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 11), align 8
  %5638 = icmp slt i32 %5637, 1
  br i1 %5638, label %355, label %5639

; <label>:5639:                                   ; preds = %5636
  %5640 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 11), align 8
  %5641 = icmp sgt i32 %5640, 4
  br i1 %5641, label %355, label %.loopexit71.15

; <label>:5642:                                   ; preds = %.lr.ph141.15
  %5643 = load i8*, i8** @optarg, align 8
  %5644 = call i32 (i8*, i8*, ...) @sscanf(i8* %5643, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10)) #9
  %5645 = icmp ne i32 %5644, 1
  br i1 %5645, label %334, label %5646

; <label>:5646:                                   ; preds = %5642
  %5647 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %5648 = icmp ne i32 %5647, 64
  br i1 %5648, label %5649, label %5661

; <label>:5649:                                   ; preds = %5646
  %5650 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %5651 = icmp ne i32 %5650, 128
  br i1 %5651, label %5652, label %5661

; <label>:5652:                                   ; preds = %5649
  %5653 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %5654 = icmp ne i32 %5653, 152
  br i1 %5654, label %5655, label %5661

; <label>:5655:                                   ; preds = %5652
  %5656 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %5657 = icmp ne i32 %5656, 256
  br i1 %5657, label %5658, label %5661

; <label>:5658:                                   ; preds = %5655
  %5659 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %5660 = icmp ne i32 %5659, 512
  br i1 %5660, label %334, label %5661

; <label>:5661:                                   ; preds = %5658, %5655, %5652, %5649, %5646
  %5662 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %5663 = sdiv i32 %5662, 8
  %5664 = sub nsw i32 %5663, 3
  store i32 %5664, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  br label %.loopexit71.15

; <label>:5665:                                   ; preds = %.lr.ph141.15
  %5666 = load i8*, i8** @optarg, align 8
  %5667 = call i32 @getmac(i8* %5666, i32 1, i8* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 9, i64 0))
  %5668 = icmp ne i32 %5667, 0
  br i1 %5668, label %308, label %.loopexit71.15

; <label>:5669:                                   ; preds = %.lr.ph141.15
  store i32 0, i32* %27, align 4
  %5670 = load i8*, i8** @optarg, align 8
  %5671 = load i8, i8* %5670, align 1
  %5672 = sext i8 %5671 to i32
  %5673 = icmp ne i32 %5672, 0
  br i1 %5673, label %.lr.ph136.preheader.15, label %._crit_edge137.15

.lr.ph136.preheader.15:                           ; preds = %5669
  br label %.lr.ph136.15

.lr.ph136.15:                                     ; preds = %5720, %.lr.ph136.preheader.15
  %.02134.15 = phi i32 [ %.13.15, %5720 ], [ 0, %.lr.ph136.preheader.15 ]
  call void @unroll_loop(i32 125)
  %5674 = sext i32 %.02134.15 to i64
  %5675 = getelementptr inbounds i8, i8* %5670, i64 %5674
  %5676 = load i8, i8* %5675, align 1
  %5677 = sext i8 %5676 to i32
  %5678 = icmp eq i32 %5677, 120
  br i1 %5678, label %5679, label %5682

; <label>:5679:                                   ; preds = %.lr.ph136.15
  %5680 = sext i32 %.02134.15 to i64
  %5681 = getelementptr inbounds i8, i8* %5670, i64 %5680
  store i8 88, i8* %5681, align 1
  br label %5682

; <label>:5682:                                   ; preds = %5679, %.lr.ph136.15
  %5683 = sext i32 %.02134.15 to i64
  %5684 = getelementptr inbounds i8, i8* %5670, i64 %5683
  %5685 = load i8, i8* %5684, align 1
  %5686 = sext i8 %5685 to i32
  %5687 = icmp eq i32 %5686, 121
  br i1 %5687, label %5688, label %5691

; <label>:5688:                                   ; preds = %5682
  %5689 = sext i32 %.02134.15 to i64
  %5690 = getelementptr inbounds i8, i8* %5670, i64 %5689
  store i8 89, i8* %5690, align 1
  br label %5691

; <label>:5691:                                   ; preds = %5688, %5682
  %5692 = sext i32 %.02134.15 to i64
  %5693 = getelementptr inbounds i8, i8* %5670, i64 %5692
  %5694 = load i8, i8* %5693, align 1
  %5695 = sext i8 %5694 to i32
  %5696 = icmp eq i32 %5695, 45
  br i1 %5696, label %5718, label %5697

; <label>:5697:                                   ; preds = %5691
  %5698 = sext i32 %.02134.15 to i64
  %5699 = getelementptr inbounds i8, i8* %5670, i64 %5698
  %5700 = load i8, i8* %5699, align 1
  %5701 = sext i8 %5700 to i32
  %5702 = icmp eq i32 %5701, 58
  br i1 %5702, label %5718, label %5703

; <label>:5703:                                   ; preds = %5697
  %5704 = sext i32 %.02134.15 to i64
  %5705 = getelementptr inbounds i8, i8* %5670, i64 %5704
  %5706 = load i8, i8* %5705, align 1
  %5707 = sext i8 %5706 to i32
  %5708 = icmp eq i32 %5707, 32
  br i1 %5708, label %5718, label %5709

; <label>:5709:                                   ; preds = %5703
  %5710 = add nsw i32 %.02134.15, 1
  %5711 = sext i32 %.02134.15 to i64
  %5712 = getelementptr inbounds i8, i8* %5670, i64 %5711
  %5713 = load i8, i8* %5712, align 1
  %5714 = load i32, i32* %27, align 4
  %5715 = add nsw i32 %5714, 1
  store i32 %5715, i32* %27, align 4
  %5716 = sext i32 %5714 to i64
  %5717 = getelementptr inbounds i8, i8* %5670, i64 %5716
  store i8 %5713, i8* %5717, align 1
  br label %5720

; <label>:5718:                                   ; preds = %5703, %5697, %5691
  %5719 = add nsw i32 %.02134.15, 1
  br label %5720

; <label>:5720:                                   ; preds = %5718, %5709
  %.13.15 = phi i32 [ %5719, %5718 ], [ %5710, %5709 ]
  %5721 = sext i32 %.13.15 to i64
  %5722 = getelementptr inbounds i8, i8* %5670, i64 %5721
  %5723 = load i8, i8* %5722, align 1
  %5724 = sext i8 %5723 to i32
  %5725 = icmp ne i32 %5724, 0
  br i1 %5725, label %.lr.ph136.15, label %._crit_edge137.loopexit.15

._crit_edge137.loopexit.15:                       ; preds = %5720
  br label %._crit_edge137.15

._crit_edge137.15:                                ; preds = %._crit_edge137.loopexit.15, %5669
  %5726 = load i32, i32* %27, align 4
  %5727 = sext i32 %5726 to i64
  %5728 = getelementptr inbounds i8, i8* %5670, i64 %5727
  store i8 0, i8* %5728, align 1
  %5729 = load i8, i8* %5670, align 1
  store i8 %5729, i8* %61, align 16
  %5730 = getelementptr inbounds i8, i8* %5670, i64 1
  %5731 = load i8, i8* %5730, align 1
  store i8 %5731, i8* %62, align 1
  store i8 0, i8* %63, align 2
  %scevgep45.15 = getelementptr i8, i8* %5670, i64 3
  br label %5732

; <label>:5732:                                   ; preds = %5790, %._crit_edge137.15
  %lsr.iv48.15 = phi i8* [ %scevgep49.15, %5790 ], [ %scevgep45.15, %._crit_edge137.15 ]
  %.127.15 = phi i32 [ 0, %._crit_edge137.15 ], [ %.329.15, %5790 ]
  %.24.15 = phi i32 [ 0, %._crit_edge137.15 ], [ %.46.15, %5790 ]
  call void @unroll_loop(i32 126)
  %5733 = call i32 (i8*, i8*, ...) @sscanf(i8* %64, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.72, i64 0, i64 0), i32* %27) #9
  %5734 = icmp eq i32 %5733, 1
  br i1 %5734, label %.critedge.15, label %5735

; <label>:5735:                                   ; preds = %5732
  %5736 = load i8, i8* %66, align 16
  %5737 = sext i8 %5736 to i32
  %5738 = icmp eq i32 %5737, 88
  br i1 %5738, label %5739, label %5743

; <label>:5739:                                   ; preds = %5735
  %5740 = load i8, i8* %69, align 1
  %5741 = sext i8 %5740 to i32
  %5742 = icmp eq i32 %5741, 88
  br i1 %5742, label %.critedge.15, label %5743

; <label>:5743:                                   ; preds = %5739, %5735
  %5744 = load i8, i8* %70, align 16
  %5745 = sext i8 %5744 to i32
  %5746 = icmp eq i32 %5745, 89
  %5747 = load i8, i8* %71, align 1
  %5748 = sext i8 %5747 to i32
  %5749 = icmp eq i32 %5748, 89
  %5750 = select i1 %5746, i1 %5749, i1 false
  br i1 %5750, label %.critedge.15, label %.loopexit71.loopexit.15

.critedge.15:                                     ; preds = %5743, %5739, %5732
  %5751 = load i8, i8* %65, align 16
  %5752 = sext i8 %5751 to i32
  %5753 = icmp eq i32 %5752, 88
  br i1 %5753, label %5754, label %5758

; <label>:5754:                                   ; preds = %.critedge.15
  %5755 = load i8, i8* %67, align 1
  %5756 = sext i8 %5755 to i32
  %5757 = icmp eq i32 %5756, 88
  br i1 %5757, label %5784, label %5758

; <label>:5758:                                   ; preds = %5754, %.critedge.15
  %5759 = load i8, i8* %68, align 16
  %5760 = sext i8 %5759 to i32
  %5761 = icmp eq i32 %5760, 89
  br i1 %5761, label %5762, label %5766

; <label>:5762:                                   ; preds = %5758
  %5763 = load i8, i8* %74, align 1
  %5764 = sext i8 %5763 to i32
  %5765 = icmp eq i32 %5764, 89
  br i1 %5765, label %5779, label %5766

; <label>:5766:                                   ; preds = %5762, %5758
  %5767 = load i32, i32* %27, align 4
  %5768 = icmp slt i32 %5767, 0
  %5769 = load i32, i32* %27, align 4
  %5770 = icmp sgt i32 %5769, 255
  %or.cond.15 = or i1 %5768, %5770
  br i1 %or.cond.15, label %.loopexit21, label %5771

; <label>:5771:                                   ; preds = %5766
  %5772 = load i32, i32* %27, align 4
  %5773 = trunc i32 %5772 to i8
  %5774 = sext i32 %.24.15 to i64
  %5775 = getelementptr inbounds [64 x i8], [64 x i8]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 7), i64 0, i64 %5774
  store i8 %5773, i8* %5775, align 1
  %5776 = add nsw i32 %.24.15, 1
  %5777 = sext i32 %.24.15 to i64
  %5778 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 8), i64 0, i64 %5777
  store i32 1, i32* %5778, align 4
  br label %5788

; <label>:5779:                                   ; preds = %5762
  %5780 = add nsw i32 %.24.15, 1
  %5781 = add nsw i32 %.127.15, 1
  %5782 = sext i32 %.127.15 to i64
  %5783 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 31), i64 0, i64 %5782
  store i32 %.24.15, i32* %5783, align 4
  br label %5788

; <label>:5784:                                   ; preds = %5754
  %5785 = add nsw i32 %.24.15, 1
  %5786 = sext i32 %.24.15 to i64
  %5787 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 8), i64 0, i64 %5786
  store i32 0, i32* %5787, align 4
  br label %5788

; <label>:5788:                                   ; preds = %5784, %5779, %5771
  %.329.15 = phi i32 [ %.127.15, %5784 ], [ %5781, %5779 ], [ %.127.15, %5771 ]
  %.46.15 = phi i32 [ %5785, %5784 ], [ %5780, %5779 ], [ %5776, %5771 ]
  %5789 = icmp sge i32 %.46.15, 64
  br i1 %5789, label %.loopexit71.loopexit.15, label %5790

; <label>:5790:                                   ; preds = %5788
  %scevgep50.15 = getelementptr i8, i8* %lsr.iv48.15, i64 -1
  %5791 = load i8, i8* %scevgep50.15, align 1
  store i8 %5791, i8* %72, align 16
  %5792 = load i8, i8* %lsr.iv48.15, align 1
  store i8 %5792, i8* %73, align 1
  %scevgep49.15 = getelementptr i8, i8* %lsr.iv48.15, i64 2
  br label %5732

.loopexit71.loopexit.15:                          ; preds = %5788, %5743
  %.531.ph.15 = phi i32 [ %.329.15, %5788 ], [ %.127.15, %5743 ]
  br label %.loopexit71.15

; <label>:5793:                                   ; preds = %.lr.ph141.15
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 41), align 4
  br label %.loopexit71.15

; <label>:5794:                                   ; preds = %.lr.ph141.15
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 16), align 4
  br label %.loopexit71.15

; <label>:5795:                                   ; preds = %.lr.ph141.15
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 14), align 4
  br label %.loopexit71.15

; <label>:5796:                                   ; preds = %.lr.ph141.15
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 38), align 8
  br label %.loopexit71.15

; <label>:5797:                                   ; preds = %.lr.ph141.15
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 15), align 8
  br label %.loopexit71.15

; <label>:5798:                                   ; preds = %.lr.ph141.15
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 6), align 8
  br label %.loopexit71.15

; <label>:5799:                                   ; preds = %.lr.ph141.15
  %5800 = load i8*, i8** @optarg, align 8
  %5801 = call i32 (i8*, i8*, ...) @sscanf(i8* %5800, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 5)) #9
  %5802 = icmp ne i32 %5801, 1
  br i1 %5802, label %160, label %5803

; <label>:5803:                                   ; preds = %5799
  %5804 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 5), align 4
  %5805 = icmp slt i32 %5804, 1
  br i1 %5805, label %160, label %5806

; <label>:5806:                                   ; preds = %5803
  %5807 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 5), align 4
  %5808 = icmp sgt i32 %5807, 128
  br i1 %5808, label %160, label %.loopexit71.15

; <label>:5809:                                   ; preds = %.lr.ph141.15
  %5810 = load i8*, i8** @optarg, align 8
  %5811 = call i32 @getmac(i8* %5810, i32 1, i8* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 4, i64 0))
  %5812 = icmp ne i32 %5811, 0
  br i1 %5812, label %142, label %5813

; <label>:5813:                                   ; preds = %5809
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 2), align 8
  br label %.loopexit71.15

; <label>:5814:                                   ; preds = %.lr.ph141.15
  call void @llvm.memset.p0i8.i64(i8* align 4 getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 3, i64 0), i8 0, i64 33, i1 false)
  %5815 = load i8*, i8** @optarg, align 8
  %5816 = call i8* @strncpy(i8* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 3, i64 0), i8* %5815, i64 32) #9, !track !220
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 1), align 4
  br label %.loopexit71.15

; <label>:5817:                                   ; preds = %.lr.ph141.15
  %5818 = load i8*, i8** @optarg, align 8
  %5819 = call i32 (i8*, i8*, ...) @sscanf(i8* %5818, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 0)) #9
  %5820 = load i8*, i8** @optarg, align 8
  %5821 = call i32 @strcasecmp(i8* %5820, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.94, i64 0, i64 0)) #10
  %5822 = icmp eq i32 %5821, 0
  br i1 %5822, label %5828, label %5823

; <label>:5823:                                   ; preds = %5817
  %5824 = load i8*, i8** @optarg, align 8
  %5825 = call i32 @strcasecmp(i8* %5824, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.95, i64 0, i64 0)) #10
  %5826 = icmp eq i32 %5825, 0
  br i1 %5826, label %5827, label %5829

; <label>:5827:                                   ; preds = %5823
  store i32 2, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 0), align 8
  br label %5829

; <label>:5828:                                   ; preds = %5817
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 0), align 8
  br label %5829

; <label>:5829:                                   ; preds = %5828, %5827, %5823
  %5830 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 0), align 8
  %5831 = icmp ne i32 %5830, 1
  br i1 %5831, label %5832, label %.loopexit71.15

; <label>:5832:                                   ; preds = %5829
  %5833 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 0), align 8
  %5834 = icmp ne i32 %5833, 2
  br i1 %5834, label %128, label %.loopexit71.15

; <label>:5835:                                   ; preds = %.lr.ph141.15
  %5836 = icmp ne i32 %.134.14, 0
  br i1 %5836, label %102, label %5837

; <label>:5837:                                   ; preds = %5835
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 40), align 8
  store i32 0, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 20), align 4
  br label %.loopexit71.15

.loopexit71.15:                                   ; preds = %5837, %5832, %5829, %5814, %5813, %5806, %5798, %5797, %5796, %5795, %5794, %5793, %.loopexit71.loopexit.15, %5665, %5661, %5639, %5629, %5620, %5604, %5592, %5582, %5572, %5562, %5561, %5560, %5559, %5558, %5554, %5553, %5551, %5549, %5540
  %.134.15 = phi i32 [ %.134.14, %5553 ], [ %.134.14, %5558 ], [ %.134.14, %5559 ], [ %.134.14, %5560 ], [ %.134.14, %5561 ], [ %.134.14, %5592 ], [ %.134.14, %5604 ], [ %.134.14, %5620 ], [ %.134.14, %5661 ], [ %.134.14, %5793 ], [ %.134.14, %5794 ], [ %.134.14, %5795 ], [ %.134.14, %5796 ], [ %.134.14, %5797 ], [ %.134.14, %5798 ], [ %.134.14, %5813 ], [ %.134.14, %5814 ], [ %.134.14, %5837 ], [ %.134.14, %5832 ], [ %.134.14, %5829 ], [ %.134.14, %5806 ], [ %.134.14, %5665 ], [ %.134.14, %5639 ], [ %.134.14, %5629 ], [ %.134.14, %5582 ], [ %.134.14, %5572 ], [ %.134.14, %5562 ], [ %.134.14, %5554 ], [ %.134.14, %5549 ], [ %.134.14, %5551 ], [ 1, %5540 ], [ %.134.14, %.loopexit71.loopexit.15 ]
  %.531.15 = phi i32 [ %.531.14, %5553 ], [ %.531.14, %5558 ], [ %.531.14, %5559 ], [ %.531.14, %5560 ], [ %.531.14, %5561 ], [ %.531.14, %5592 ], [ %.531.14, %5604 ], [ %.531.14, %5620 ], [ %.531.14, %5661 ], [ %.531.14, %5793 ], [ %.531.14, %5794 ], [ %.531.14, %5795 ], [ %.531.14, %5796 ], [ %.531.14, %5797 ], [ %.531.14, %5798 ], [ %.531.14, %5813 ], [ %.531.14, %5814 ], [ %.531.14, %5837 ], [ %.531.14, %5832 ], [ %.531.14, %5829 ], [ %.531.14, %5806 ], [ %.531.14, %5665 ], [ %.531.14, %5639 ], [ %.531.14, %5629 ], [ %.531.14, %5582 ], [ %.531.14, %5572 ], [ %.531.14, %5562 ], [ %.531.14, %5554 ], [ %.531.14, %5549 ], [ %.531.14, %5551 ], [ %.531.14, %5540 ], [ %.531.ph.15, %.loopexit71.loopexit.15 ]
  call void @__loop_iteration_test___0()
  store i32 0, i32* %30, align 4
  %5838 = call i32 @getopt_long(i32 4, i8** %25, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.86, i64 0, i64 0), %struct.option* getelementptr inbounds ([10 x %struct.option], [10 x %struct.option]* @main.long_options, i64 0, i64 0), i32* %30) #9, !track_argc !219
  %5839 = icmp slt i32 %5838, 0
  br i1 %5839, label %._crit_edge142.loopexit, label %.lr.ph141.16

.lr.ph141.16:                                     ; preds = %.loopexit71.15
  call void @unroll_loop(i32 124)
  switch i32 %5838, label %.loopexit1 [
    i32 58, label %75
    i32 63, label %80
    i32 117, label %85
    i32 86, label %6135
    i32 97, label %6117
    i32 101, label %6114
    i32 98, label %6109
    i32 112, label %6099
    i32 113, label %6098
    i32 99, label %6097
    i32 68, label %6096
    i32 104, label %6095
    i32 116, label %6094
    i32 49, label %6093
    i32 100, label %5969
    i32 109, label %5965
    i32 110, label %5942
    i32 105, label %5932
    i32 102, label %5925
    i32 107, label %5910
    i32 108, label %5897
    i32 77, label %5885
    i32 80, label %5875
    i32 120, label %5862
    i32 88, label %5861
    i32 121, label %5860
    i32 75, label %5859
    i32 115, label %5858
    i32 119, label %5854
    i32 114, label %484
    i32 48, label %5853
    i32 72, label %.loopexit13
    i32 67, label %5843
    i32 122, label %5840
  ]

; <label>:5840:                                   ; preds = %.lr.ph141.16
  %5841 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 40), align 8
  %5842 = icmp ne i32 %5841, 0
  br i1 %5842, label %507, label %.loopexit71.16

; <label>:5843:                                   ; preds = %.lr.ph141.16
  %5844 = load i8*, i8** @optarg, align 8
  %5845 = call i32 @checkbssids(i8* %5844)
  %5846 = icmp slt i32 %5845, 1
  br i1 %5846, label %493, label %5847

; <label>:5847:                                   ; preds = %5843
  %5848 = icmp eq i32 %5845, 1
  br i1 %5848, label %5851, label %5849

; <label>:5849:                                   ; preds = %5847
  %5850 = load i8*, i8** @optarg, align 8
  store i8* %5850, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 34), align 8
  br label %.loopexit71.16

; <label>:5851:                                   ; preds = %5847
  %5852 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.112, i64 0, i64 0))
  br label %.loopexit71.16

; <label>:5853:                                   ; preds = %.lr.ph141.16
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 27), align 4
  br label %.loopexit71.16

; <label>:5854:                                   ; preds = %.lr.ph141.16
  %5855 = load i8*, i8** @optarg, align 8
  %5856 = call i32 @set_dicts(i8* %5855)
  %5857 = icmp ne i32 %5856, 0
  br i1 %5857, label %479, label %.loopexit71.16

; <label>:5858:                                   ; preds = %.lr.ph141.16
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 26), align 8
  br label %.loopexit71.16

; <label>:5859:                                   ; preds = %.lr.ph141.16
  store i32 0, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 20), align 4
  br label %.loopexit71.16

; <label>:5860:                                   ; preds = %.lr.ph141.16
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 19), align 8
  br label %.loopexit71.16

; <label>:5861:                                   ; preds = %.lr.ph141.16
  store i32 0, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 18), align 4
  br label %.loopexit71.16

; <label>:5862:                                   ; preds = %.lr.ph141.16
  store i32 0, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 17), align 8
  %5863 = load i8*, i8** @optarg, align 8
  %5864 = icmp ne i8* %5863, null
  br i1 %5864, label %5865, label %.loopexit71.16

; <label>:5865:                                   ; preds = %5862
  %5866 = load i8*, i8** @optarg, align 8
  %5867 = call i32 (i8*, i8*, ...) @sscanf(i8* %5866, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 17)) #9
  %5868 = icmp ne i32 %5867, 1
  br i1 %5868, label %463, label %5869

; <label>:5869:                                   ; preds = %5865
  %5870 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 17), align 8
  %5871 = icmp slt i32 %5870, 0
  br i1 %5871, label %463, label %5872

; <label>:5872:                                   ; preds = %5869
  %5873 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 17), align 8
  %5874 = icmp sgt i32 %5873, 4
  br i1 %5874, label %463, label %.loopexit71.16

; <label>:5875:                                   ; preds = %.lr.ph141.16
  %5876 = load i8*, i8** @optarg, align 8
  %5877 = call i32 (i8*, i8*, ...) @sscanf(i8* %5876, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 39)) #9
  %5878 = icmp ne i32 %5877, 1
  br i1 %5878, label %443, label %5879

; <label>:5879:                                   ; preds = %5875
  %5880 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 39), align 4
  %5881 = icmp slt i32 %5880, 0
  br i1 %5881, label %443, label %5882

; <label>:5882:                                   ; preds = %5879
  %5883 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 39), align 4
  %5884 = icmp sgt i32 %5883, 2
  br i1 %5884, label %443, label %.loopexit71.16

; <label>:5885:                                   ; preds = %.lr.ph141.16
  %5886 = load i8*, i8** @optarg, align 8
  %5887 = call i32 (i8*, i8*, ...) @sscanf(i8* %5886, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 33)) #9
  %5888 = icmp ne i32 %5887, 1
  br i1 %5888, label %421, label %5889

; <label>:5889:                                   ; preds = %5885
  %5890 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 33), align 8
  %5891 = icmp slt i32 %5890, 1
  br i1 %5891, label %421, label %5892

; <label>:5892:                                   ; preds = %5889
  %5893 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 13), align 8
  %5894 = sub nsw i32 %5893, 1
  %5895 = sext i32 %5894 to i64
  %5896 = getelementptr inbounds [17 x i32], [17 x i32]* @K_COEFF, i64 0, i64 %5895
  store i32 0, i32* %5896, align 4
  br label %.loopexit71.16

; <label>:5897:                                   ; preds = %.lr.ph141.16
  %5898 = load i8*, i8** @optarg, align 8
  %5899 = call i64 @strlen(i8* %5898) #10
  %5900 = add i64 %5899, 1
  %5901 = call noalias i8* @calloc(i64 1, i64 %5900) #9, !track !221
  store i8* %5901, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 42), align 8
  %5902 = load i8*, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 42), align 8
  %5903 = icmp eq i8* %5902, null
  br i1 %5903, label %405, label %5904

; <label>:5904:                                   ; preds = %5897
  %5905 = load i8*, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 42), align 8
  %5906 = load i8*, i8** @optarg, align 8
  %5907 = load i8*, i8** @optarg, align 8
  %5908 = call i64 @strlen(i8* %5907) #10
  %5909 = call i8* @strncpy(i8* %5905, i8* %5906, i64 %5908) #9, !track !222
  br label %.loopexit71.16

; <label>:5910:                                   ; preds = %.lr.ph141.16
  %5911 = load i8*, i8** @optarg, align 8
  %5912 = call i32 (i8*, i8*, ...) @sscanf(i8* %5911, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 13)) #9
  %5913 = icmp ne i32 %5912, 1
  br i1 %5913, label %386, label %5914

; <label>:5914:                                   ; preds = %5910
  %5915 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 13), align 8
  %5916 = icmp slt i32 %5915, 1
  br i1 %5916, label %386, label %5917

; <label>:5917:                                   ; preds = %5914
  %5918 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 13), align 8
  %5919 = icmp sgt i32 %5918, 17
  br i1 %5919, label %386, label %5920

; <label>:5920:                                   ; preds = %5917
  %5921 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 13), align 8
  %5922 = sub nsw i32 %5921, 1
  %5923 = sext i32 %5922 to i64
  %5924 = getelementptr inbounds [17 x i32], [17 x i32]* @K_COEFF, i64 0, i64 %5923
  store i32 0, i32* %5924, align 4
  br label %.loopexit71.16

; <label>:5925:                                   ; preds = %.lr.ph141.16
  %5926 = load i8*, i8** @optarg, align 8
  %5927 = call i32 (i8*, i8*, ...) @sscanf(i8* %5926, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.103, i64 0, i64 0), float* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 12)) #9
  %5928 = icmp ne i32 %5927, 1
  br i1 %5928, label %369, label %5929

; <label>:5929:                                   ; preds = %5925
  %5930 = load float, float* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 12), align 4
  %5931 = fcmp olt float %5930, 1.000000e+00
  br i1 %5931, label %369, label %.loopexit71.16

; <label>:5932:                                   ; preds = %.lr.ph141.16
  %5933 = load i8*, i8** @optarg, align 8
  %5934 = call i32 (i8*, i8*, ...) @sscanf(i8* %5933, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 11)) #9
  %5935 = icmp ne i32 %5934, 1
  br i1 %5935, label %355, label %5936

; <label>:5936:                                   ; preds = %5932
  %5937 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 11), align 8
  %5938 = icmp slt i32 %5937, 1
  br i1 %5938, label %355, label %5939

; <label>:5939:                                   ; preds = %5936
  %5940 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 11), align 8
  %5941 = icmp sgt i32 %5940, 4
  br i1 %5941, label %355, label %.loopexit71.16

; <label>:5942:                                   ; preds = %.lr.ph141.16
  %5943 = load i8*, i8** @optarg, align 8
  %5944 = call i32 (i8*, i8*, ...) @sscanf(i8* %5943, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10)) #9
  %5945 = icmp ne i32 %5944, 1
  br i1 %5945, label %334, label %5946

; <label>:5946:                                   ; preds = %5942
  %5947 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %5948 = icmp ne i32 %5947, 64
  br i1 %5948, label %5949, label %5961

; <label>:5949:                                   ; preds = %5946
  %5950 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %5951 = icmp ne i32 %5950, 128
  br i1 %5951, label %5952, label %5961

; <label>:5952:                                   ; preds = %5949
  %5953 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %5954 = icmp ne i32 %5953, 152
  br i1 %5954, label %5955, label %5961

; <label>:5955:                                   ; preds = %5952
  %5956 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %5957 = icmp ne i32 %5956, 256
  br i1 %5957, label %5958, label %5961

; <label>:5958:                                   ; preds = %5955
  %5959 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %5960 = icmp ne i32 %5959, 512
  br i1 %5960, label %334, label %5961

; <label>:5961:                                   ; preds = %5958, %5955, %5952, %5949, %5946
  %5962 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %5963 = sdiv i32 %5962, 8
  %5964 = sub nsw i32 %5963, 3
  store i32 %5964, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  br label %.loopexit71.16

; <label>:5965:                                   ; preds = %.lr.ph141.16
  %5966 = load i8*, i8** @optarg, align 8
  %5967 = call i32 @getmac(i8* %5966, i32 1, i8* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 9, i64 0))
  %5968 = icmp ne i32 %5967, 0
  br i1 %5968, label %308, label %.loopexit71.16

; <label>:5969:                                   ; preds = %.lr.ph141.16
  store i32 0, i32* %27, align 4
  %5970 = load i8*, i8** @optarg, align 8
  %5971 = load i8, i8* %5970, align 1
  %5972 = sext i8 %5971 to i32
  %5973 = icmp ne i32 %5972, 0
  br i1 %5973, label %.lr.ph136.preheader.16, label %._crit_edge137.16

.lr.ph136.preheader.16:                           ; preds = %5969
  br label %.lr.ph136.16

.lr.ph136.16:                                     ; preds = %6020, %.lr.ph136.preheader.16
  %.02134.16 = phi i32 [ %.13.16, %6020 ], [ 0, %.lr.ph136.preheader.16 ]
  call void @unroll_loop(i32 125)
  %5974 = sext i32 %.02134.16 to i64
  %5975 = getelementptr inbounds i8, i8* %5970, i64 %5974
  %5976 = load i8, i8* %5975, align 1
  %5977 = sext i8 %5976 to i32
  %5978 = icmp eq i32 %5977, 120
  br i1 %5978, label %5979, label %5982

; <label>:5979:                                   ; preds = %.lr.ph136.16
  %5980 = sext i32 %.02134.16 to i64
  %5981 = getelementptr inbounds i8, i8* %5970, i64 %5980
  store i8 88, i8* %5981, align 1
  br label %5982

; <label>:5982:                                   ; preds = %5979, %.lr.ph136.16
  %5983 = sext i32 %.02134.16 to i64
  %5984 = getelementptr inbounds i8, i8* %5970, i64 %5983
  %5985 = load i8, i8* %5984, align 1
  %5986 = sext i8 %5985 to i32
  %5987 = icmp eq i32 %5986, 121
  br i1 %5987, label %5988, label %5991

; <label>:5988:                                   ; preds = %5982
  %5989 = sext i32 %.02134.16 to i64
  %5990 = getelementptr inbounds i8, i8* %5970, i64 %5989
  store i8 89, i8* %5990, align 1
  br label %5991

; <label>:5991:                                   ; preds = %5988, %5982
  %5992 = sext i32 %.02134.16 to i64
  %5993 = getelementptr inbounds i8, i8* %5970, i64 %5992
  %5994 = load i8, i8* %5993, align 1
  %5995 = sext i8 %5994 to i32
  %5996 = icmp eq i32 %5995, 45
  br i1 %5996, label %6018, label %5997

; <label>:5997:                                   ; preds = %5991
  %5998 = sext i32 %.02134.16 to i64
  %5999 = getelementptr inbounds i8, i8* %5970, i64 %5998
  %6000 = load i8, i8* %5999, align 1
  %6001 = sext i8 %6000 to i32
  %6002 = icmp eq i32 %6001, 58
  br i1 %6002, label %6018, label %6003

; <label>:6003:                                   ; preds = %5997
  %6004 = sext i32 %.02134.16 to i64
  %6005 = getelementptr inbounds i8, i8* %5970, i64 %6004
  %6006 = load i8, i8* %6005, align 1
  %6007 = sext i8 %6006 to i32
  %6008 = icmp eq i32 %6007, 32
  br i1 %6008, label %6018, label %6009

; <label>:6009:                                   ; preds = %6003
  %6010 = add nsw i32 %.02134.16, 1
  %6011 = sext i32 %.02134.16 to i64
  %6012 = getelementptr inbounds i8, i8* %5970, i64 %6011
  %6013 = load i8, i8* %6012, align 1
  %6014 = load i32, i32* %27, align 4
  %6015 = add nsw i32 %6014, 1
  store i32 %6015, i32* %27, align 4
  %6016 = sext i32 %6014 to i64
  %6017 = getelementptr inbounds i8, i8* %5970, i64 %6016
  store i8 %6013, i8* %6017, align 1
  br label %6020

; <label>:6018:                                   ; preds = %6003, %5997, %5991
  %6019 = add nsw i32 %.02134.16, 1
  br label %6020

; <label>:6020:                                   ; preds = %6018, %6009
  %.13.16 = phi i32 [ %6019, %6018 ], [ %6010, %6009 ]
  %6021 = sext i32 %.13.16 to i64
  %6022 = getelementptr inbounds i8, i8* %5970, i64 %6021
  %6023 = load i8, i8* %6022, align 1
  %6024 = sext i8 %6023 to i32
  %6025 = icmp ne i32 %6024, 0
  br i1 %6025, label %.lr.ph136.16, label %._crit_edge137.loopexit.16

._crit_edge137.loopexit.16:                       ; preds = %6020
  br label %._crit_edge137.16

._crit_edge137.16:                                ; preds = %._crit_edge137.loopexit.16, %5969
  %6026 = load i32, i32* %27, align 4
  %6027 = sext i32 %6026 to i64
  %6028 = getelementptr inbounds i8, i8* %5970, i64 %6027
  store i8 0, i8* %6028, align 1
  %6029 = load i8, i8* %5970, align 1
  store i8 %6029, i8* %61, align 16
  %6030 = getelementptr inbounds i8, i8* %5970, i64 1
  %6031 = load i8, i8* %6030, align 1
  store i8 %6031, i8* %62, align 1
  store i8 0, i8* %63, align 2
  %scevgep45.16 = getelementptr i8, i8* %5970, i64 3
  br label %6032

; <label>:6032:                                   ; preds = %6090, %._crit_edge137.16
  %lsr.iv48.16 = phi i8* [ %scevgep49.16, %6090 ], [ %scevgep45.16, %._crit_edge137.16 ]
  %.127.16 = phi i32 [ 0, %._crit_edge137.16 ], [ %.329.16, %6090 ]
  %.24.16 = phi i32 [ 0, %._crit_edge137.16 ], [ %.46.16, %6090 ]
  call void @unroll_loop(i32 126)
  %6033 = call i32 (i8*, i8*, ...) @sscanf(i8* %64, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.72, i64 0, i64 0), i32* %27) #9
  %6034 = icmp eq i32 %6033, 1
  br i1 %6034, label %.critedge.16, label %6035

; <label>:6035:                                   ; preds = %6032
  %6036 = load i8, i8* %66, align 16
  %6037 = sext i8 %6036 to i32
  %6038 = icmp eq i32 %6037, 88
  br i1 %6038, label %6039, label %6043

; <label>:6039:                                   ; preds = %6035
  %6040 = load i8, i8* %69, align 1
  %6041 = sext i8 %6040 to i32
  %6042 = icmp eq i32 %6041, 88
  br i1 %6042, label %.critedge.16, label %6043

; <label>:6043:                                   ; preds = %6039, %6035
  %6044 = load i8, i8* %70, align 16
  %6045 = sext i8 %6044 to i32
  %6046 = icmp eq i32 %6045, 89
  %6047 = load i8, i8* %71, align 1
  %6048 = sext i8 %6047 to i32
  %6049 = icmp eq i32 %6048, 89
  %6050 = select i1 %6046, i1 %6049, i1 false
  br i1 %6050, label %.critedge.16, label %.loopexit71.loopexit.16

.critedge.16:                                     ; preds = %6043, %6039, %6032
  %6051 = load i8, i8* %65, align 16
  %6052 = sext i8 %6051 to i32
  %6053 = icmp eq i32 %6052, 88
  br i1 %6053, label %6054, label %6058

; <label>:6054:                                   ; preds = %.critedge.16
  %6055 = load i8, i8* %67, align 1
  %6056 = sext i8 %6055 to i32
  %6057 = icmp eq i32 %6056, 88
  br i1 %6057, label %6084, label %6058

; <label>:6058:                                   ; preds = %6054, %.critedge.16
  %6059 = load i8, i8* %68, align 16
  %6060 = sext i8 %6059 to i32
  %6061 = icmp eq i32 %6060, 89
  br i1 %6061, label %6062, label %6066

; <label>:6062:                                   ; preds = %6058
  %6063 = load i8, i8* %74, align 1
  %6064 = sext i8 %6063 to i32
  %6065 = icmp eq i32 %6064, 89
  br i1 %6065, label %6079, label %6066

; <label>:6066:                                   ; preds = %6062, %6058
  %6067 = load i32, i32* %27, align 4
  %6068 = icmp slt i32 %6067, 0
  %6069 = load i32, i32* %27, align 4
  %6070 = icmp sgt i32 %6069, 255
  %or.cond.16 = or i1 %6068, %6070
  br i1 %or.cond.16, label %.loopexit22, label %6071

; <label>:6071:                                   ; preds = %6066
  %6072 = load i32, i32* %27, align 4
  %6073 = trunc i32 %6072 to i8
  %6074 = sext i32 %.24.16 to i64
  %6075 = getelementptr inbounds [64 x i8], [64 x i8]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 7), i64 0, i64 %6074
  store i8 %6073, i8* %6075, align 1
  %6076 = add nsw i32 %.24.16, 1
  %6077 = sext i32 %.24.16 to i64
  %6078 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 8), i64 0, i64 %6077
  store i32 1, i32* %6078, align 4
  br label %6088

; <label>:6079:                                   ; preds = %6062
  %6080 = add nsw i32 %.24.16, 1
  %6081 = add nsw i32 %.127.16, 1
  %6082 = sext i32 %.127.16 to i64
  %6083 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 31), i64 0, i64 %6082
  store i32 %.24.16, i32* %6083, align 4
  br label %6088

; <label>:6084:                                   ; preds = %6054
  %6085 = add nsw i32 %.24.16, 1
  %6086 = sext i32 %.24.16 to i64
  %6087 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 8), i64 0, i64 %6086
  store i32 0, i32* %6087, align 4
  br label %6088

; <label>:6088:                                   ; preds = %6084, %6079, %6071
  %.329.16 = phi i32 [ %.127.16, %6084 ], [ %6081, %6079 ], [ %.127.16, %6071 ]
  %.46.16 = phi i32 [ %6085, %6084 ], [ %6080, %6079 ], [ %6076, %6071 ]
  %6089 = icmp sge i32 %.46.16, 64
  br i1 %6089, label %.loopexit71.loopexit.16, label %6090

; <label>:6090:                                   ; preds = %6088
  %scevgep50.16 = getelementptr i8, i8* %lsr.iv48.16, i64 -1
  %6091 = load i8, i8* %scevgep50.16, align 1
  store i8 %6091, i8* %72, align 16
  %6092 = load i8, i8* %lsr.iv48.16, align 1
  store i8 %6092, i8* %73, align 1
  %scevgep49.16 = getelementptr i8, i8* %lsr.iv48.16, i64 2
  br label %6032

.loopexit71.loopexit.16:                          ; preds = %6088, %6043
  %.531.ph.16 = phi i32 [ %.329.16, %6088 ], [ %.127.16, %6043 ]
  br label %.loopexit71.16

; <label>:6093:                                   ; preds = %.lr.ph141.16
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 41), align 4
  br label %.loopexit71.16

; <label>:6094:                                   ; preds = %.lr.ph141.16
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 16), align 4
  br label %.loopexit71.16

; <label>:6095:                                   ; preds = %.lr.ph141.16
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 14), align 4
  br label %.loopexit71.16

; <label>:6096:                                   ; preds = %.lr.ph141.16
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 38), align 8
  br label %.loopexit71.16

; <label>:6097:                                   ; preds = %.lr.ph141.16
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 15), align 8
  br label %.loopexit71.16

; <label>:6098:                                   ; preds = %.lr.ph141.16
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 6), align 8
  br label %.loopexit71.16

; <label>:6099:                                   ; preds = %.lr.ph141.16
  %6100 = load i8*, i8** @optarg, align 8
  %6101 = call i32 (i8*, i8*, ...) @sscanf(i8* %6100, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 5)) #9
  %6102 = icmp ne i32 %6101, 1
  br i1 %6102, label %160, label %6103

; <label>:6103:                                   ; preds = %6099
  %6104 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 5), align 4
  %6105 = icmp slt i32 %6104, 1
  br i1 %6105, label %160, label %6106

; <label>:6106:                                   ; preds = %6103
  %6107 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 5), align 4
  %6108 = icmp sgt i32 %6107, 128
  br i1 %6108, label %160, label %.loopexit71.16

; <label>:6109:                                   ; preds = %.lr.ph141.16
  %6110 = load i8*, i8** @optarg, align 8
  %6111 = call i32 @getmac(i8* %6110, i32 1, i8* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 4, i64 0))
  %6112 = icmp ne i32 %6111, 0
  br i1 %6112, label %142, label %6113

; <label>:6113:                                   ; preds = %6109
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 2), align 8
  br label %.loopexit71.16

; <label>:6114:                                   ; preds = %.lr.ph141.16
  call void @llvm.memset.p0i8.i64(i8* align 4 getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 3, i64 0), i8 0, i64 33, i1 false)
  %6115 = load i8*, i8** @optarg, align 8
  %6116 = call i8* @strncpy(i8* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 3, i64 0), i8* %6115, i64 32) #9, !track !220
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 1), align 4
  br label %.loopexit71.16

; <label>:6117:                                   ; preds = %.lr.ph141.16
  %6118 = load i8*, i8** @optarg, align 8
  %6119 = call i32 (i8*, i8*, ...) @sscanf(i8* %6118, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 0)) #9
  %6120 = load i8*, i8** @optarg, align 8
  %6121 = call i32 @strcasecmp(i8* %6120, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.94, i64 0, i64 0)) #10
  %6122 = icmp eq i32 %6121, 0
  br i1 %6122, label %6128, label %6123

; <label>:6123:                                   ; preds = %6117
  %6124 = load i8*, i8** @optarg, align 8
  %6125 = call i32 @strcasecmp(i8* %6124, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.95, i64 0, i64 0)) #10
  %6126 = icmp eq i32 %6125, 0
  br i1 %6126, label %6127, label %6129

; <label>:6127:                                   ; preds = %6123
  store i32 2, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 0), align 8
  br label %6129

; <label>:6128:                                   ; preds = %6117
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 0), align 8
  br label %6129

; <label>:6129:                                   ; preds = %6128, %6127, %6123
  %6130 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 0), align 8
  %6131 = icmp ne i32 %6130, 1
  br i1 %6131, label %6132, label %.loopexit71.16

; <label>:6132:                                   ; preds = %6129
  %6133 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 0), align 8
  %6134 = icmp ne i32 %6133, 2
  br i1 %6134, label %128, label %.loopexit71.16

; <label>:6135:                                   ; preds = %.lr.ph141.16
  %6136 = icmp ne i32 %.134.15, 0
  br i1 %6136, label %102, label %6137

; <label>:6137:                                   ; preds = %6135
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 40), align 8
  store i32 0, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 20), align 4
  br label %.loopexit71.16

.loopexit71.16:                                   ; preds = %6137, %6132, %6129, %6114, %6113, %6106, %6098, %6097, %6096, %6095, %6094, %6093, %.loopexit71.loopexit.16, %5965, %5961, %5939, %5929, %5920, %5904, %5892, %5882, %5872, %5862, %5861, %5860, %5859, %5858, %5854, %5853, %5851, %5849, %5840
  %.134.16 = phi i32 [ %.134.15, %5853 ], [ %.134.15, %5858 ], [ %.134.15, %5859 ], [ %.134.15, %5860 ], [ %.134.15, %5861 ], [ %.134.15, %5892 ], [ %.134.15, %5904 ], [ %.134.15, %5920 ], [ %.134.15, %5961 ], [ %.134.15, %6093 ], [ %.134.15, %6094 ], [ %.134.15, %6095 ], [ %.134.15, %6096 ], [ %.134.15, %6097 ], [ %.134.15, %6098 ], [ %.134.15, %6113 ], [ %.134.15, %6114 ], [ %.134.15, %6137 ], [ %.134.15, %6132 ], [ %.134.15, %6129 ], [ %.134.15, %6106 ], [ %.134.15, %5965 ], [ %.134.15, %5939 ], [ %.134.15, %5929 ], [ %.134.15, %5882 ], [ %.134.15, %5872 ], [ %.134.15, %5862 ], [ %.134.15, %5854 ], [ %.134.15, %5849 ], [ %.134.15, %5851 ], [ 1, %5840 ], [ %.134.15, %.loopexit71.loopexit.16 ]
  %.531.16 = phi i32 [ %.531.15, %5853 ], [ %.531.15, %5858 ], [ %.531.15, %5859 ], [ %.531.15, %5860 ], [ %.531.15, %5861 ], [ %.531.15, %5892 ], [ %.531.15, %5904 ], [ %.531.15, %5920 ], [ %.531.15, %5961 ], [ %.531.15, %6093 ], [ %.531.15, %6094 ], [ %.531.15, %6095 ], [ %.531.15, %6096 ], [ %.531.15, %6097 ], [ %.531.15, %6098 ], [ %.531.15, %6113 ], [ %.531.15, %6114 ], [ %.531.15, %6137 ], [ %.531.15, %6132 ], [ %.531.15, %6129 ], [ %.531.15, %6106 ], [ %.531.15, %5965 ], [ %.531.15, %5939 ], [ %.531.15, %5929 ], [ %.531.15, %5882 ], [ %.531.15, %5872 ], [ %.531.15, %5862 ], [ %.531.15, %5854 ], [ %.531.15, %5849 ], [ %.531.15, %5851 ], [ %.531.15, %5840 ], [ %.531.ph.16, %.loopexit71.loopexit.16 ]
  call void @__loop_iteration_test___0()
  store i32 0, i32* %30, align 4
  %6138 = call i32 @getopt_long(i32 4, i8** %25, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.86, i64 0, i64 0), %struct.option* getelementptr inbounds ([10 x %struct.option], [10 x %struct.option]* @main.long_options, i64 0, i64 0), i32* %30) #9, !track_argc !219
  %6139 = icmp slt i32 %6138, 0
  br i1 %6139, label %._crit_edge142.loopexit, label %.lr.ph141.17

.lr.ph141.17:                                     ; preds = %.loopexit71.16
  call void @unroll_loop(i32 124)
  switch i32 %6138, label %.loopexit1 [
    i32 58, label %75
    i32 63, label %80
    i32 117, label %85
    i32 86, label %6435
    i32 97, label %6417
    i32 101, label %6414
    i32 98, label %6409
    i32 112, label %6399
    i32 113, label %6398
    i32 99, label %6397
    i32 68, label %6396
    i32 104, label %6395
    i32 116, label %6394
    i32 49, label %6393
    i32 100, label %6269
    i32 109, label %6265
    i32 110, label %6242
    i32 105, label %6232
    i32 102, label %6225
    i32 107, label %6210
    i32 108, label %6197
    i32 77, label %6185
    i32 80, label %6175
    i32 120, label %6162
    i32 88, label %6161
    i32 121, label %6160
    i32 75, label %6159
    i32 115, label %6158
    i32 119, label %6154
    i32 114, label %484
    i32 48, label %6153
    i32 72, label %.loopexit13
    i32 67, label %6143
    i32 122, label %6140
  ]

; <label>:6140:                                   ; preds = %.lr.ph141.17
  %6141 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 40), align 8
  %6142 = icmp ne i32 %6141, 0
  br i1 %6142, label %507, label %.loopexit71.17

; <label>:6143:                                   ; preds = %.lr.ph141.17
  %6144 = load i8*, i8** @optarg, align 8
  %6145 = call i32 @checkbssids(i8* %6144)
  %6146 = icmp slt i32 %6145, 1
  br i1 %6146, label %493, label %6147

; <label>:6147:                                   ; preds = %6143
  %6148 = icmp eq i32 %6145, 1
  br i1 %6148, label %6151, label %6149

; <label>:6149:                                   ; preds = %6147
  %6150 = load i8*, i8** @optarg, align 8
  store i8* %6150, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 34), align 8
  br label %.loopexit71.17

; <label>:6151:                                   ; preds = %6147
  %6152 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.112, i64 0, i64 0))
  br label %.loopexit71.17

; <label>:6153:                                   ; preds = %.lr.ph141.17
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 27), align 4
  br label %.loopexit71.17

; <label>:6154:                                   ; preds = %.lr.ph141.17
  %6155 = load i8*, i8** @optarg, align 8
  %6156 = call i32 @set_dicts(i8* %6155)
  %6157 = icmp ne i32 %6156, 0
  br i1 %6157, label %479, label %.loopexit71.17

; <label>:6158:                                   ; preds = %.lr.ph141.17
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 26), align 8
  br label %.loopexit71.17

; <label>:6159:                                   ; preds = %.lr.ph141.17
  store i32 0, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 20), align 4
  br label %.loopexit71.17

; <label>:6160:                                   ; preds = %.lr.ph141.17
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 19), align 8
  br label %.loopexit71.17

; <label>:6161:                                   ; preds = %.lr.ph141.17
  store i32 0, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 18), align 4
  br label %.loopexit71.17

; <label>:6162:                                   ; preds = %.lr.ph141.17
  store i32 0, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 17), align 8
  %6163 = load i8*, i8** @optarg, align 8
  %6164 = icmp ne i8* %6163, null
  br i1 %6164, label %6165, label %.loopexit71.17

; <label>:6165:                                   ; preds = %6162
  %6166 = load i8*, i8** @optarg, align 8
  %6167 = call i32 (i8*, i8*, ...) @sscanf(i8* %6166, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 17)) #9
  %6168 = icmp ne i32 %6167, 1
  br i1 %6168, label %463, label %6169

; <label>:6169:                                   ; preds = %6165
  %6170 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 17), align 8
  %6171 = icmp slt i32 %6170, 0
  br i1 %6171, label %463, label %6172

; <label>:6172:                                   ; preds = %6169
  %6173 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 17), align 8
  %6174 = icmp sgt i32 %6173, 4
  br i1 %6174, label %463, label %.loopexit71.17

; <label>:6175:                                   ; preds = %.lr.ph141.17
  %6176 = load i8*, i8** @optarg, align 8
  %6177 = call i32 (i8*, i8*, ...) @sscanf(i8* %6176, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 39)) #9
  %6178 = icmp ne i32 %6177, 1
  br i1 %6178, label %443, label %6179

; <label>:6179:                                   ; preds = %6175
  %6180 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 39), align 4
  %6181 = icmp slt i32 %6180, 0
  br i1 %6181, label %443, label %6182

; <label>:6182:                                   ; preds = %6179
  %6183 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 39), align 4
  %6184 = icmp sgt i32 %6183, 2
  br i1 %6184, label %443, label %.loopexit71.17

; <label>:6185:                                   ; preds = %.lr.ph141.17
  %6186 = load i8*, i8** @optarg, align 8
  %6187 = call i32 (i8*, i8*, ...) @sscanf(i8* %6186, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 33)) #9
  %6188 = icmp ne i32 %6187, 1
  br i1 %6188, label %421, label %6189

; <label>:6189:                                   ; preds = %6185
  %6190 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 33), align 8
  %6191 = icmp slt i32 %6190, 1
  br i1 %6191, label %421, label %6192

; <label>:6192:                                   ; preds = %6189
  %6193 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 13), align 8
  %6194 = sub nsw i32 %6193, 1
  %6195 = sext i32 %6194 to i64
  %6196 = getelementptr inbounds [17 x i32], [17 x i32]* @K_COEFF, i64 0, i64 %6195
  store i32 0, i32* %6196, align 4
  br label %.loopexit71.17

; <label>:6197:                                   ; preds = %.lr.ph141.17
  %6198 = load i8*, i8** @optarg, align 8
  %6199 = call i64 @strlen(i8* %6198) #10
  %6200 = add i64 %6199, 1
  %6201 = call noalias i8* @calloc(i64 1, i64 %6200) #9, !track !221
  store i8* %6201, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 42), align 8
  %6202 = load i8*, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 42), align 8
  %6203 = icmp eq i8* %6202, null
  br i1 %6203, label %405, label %6204

; <label>:6204:                                   ; preds = %6197
  %6205 = load i8*, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 42), align 8
  %6206 = load i8*, i8** @optarg, align 8
  %6207 = load i8*, i8** @optarg, align 8
  %6208 = call i64 @strlen(i8* %6207) #10
  %6209 = call i8* @strncpy(i8* %6205, i8* %6206, i64 %6208) #9, !track !222
  br label %.loopexit71.17

; <label>:6210:                                   ; preds = %.lr.ph141.17
  %6211 = load i8*, i8** @optarg, align 8
  %6212 = call i32 (i8*, i8*, ...) @sscanf(i8* %6211, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 13)) #9
  %6213 = icmp ne i32 %6212, 1
  br i1 %6213, label %386, label %6214

; <label>:6214:                                   ; preds = %6210
  %6215 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 13), align 8
  %6216 = icmp slt i32 %6215, 1
  br i1 %6216, label %386, label %6217

; <label>:6217:                                   ; preds = %6214
  %6218 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 13), align 8
  %6219 = icmp sgt i32 %6218, 17
  br i1 %6219, label %386, label %6220

; <label>:6220:                                   ; preds = %6217
  %6221 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 13), align 8
  %6222 = sub nsw i32 %6221, 1
  %6223 = sext i32 %6222 to i64
  %6224 = getelementptr inbounds [17 x i32], [17 x i32]* @K_COEFF, i64 0, i64 %6223
  store i32 0, i32* %6224, align 4
  br label %.loopexit71.17

; <label>:6225:                                   ; preds = %.lr.ph141.17
  %6226 = load i8*, i8** @optarg, align 8
  %6227 = call i32 (i8*, i8*, ...) @sscanf(i8* %6226, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.103, i64 0, i64 0), float* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 12)) #9
  %6228 = icmp ne i32 %6227, 1
  br i1 %6228, label %369, label %6229

; <label>:6229:                                   ; preds = %6225
  %6230 = load float, float* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 12), align 4
  %6231 = fcmp olt float %6230, 1.000000e+00
  br i1 %6231, label %369, label %.loopexit71.17

; <label>:6232:                                   ; preds = %.lr.ph141.17
  %6233 = load i8*, i8** @optarg, align 8
  %6234 = call i32 (i8*, i8*, ...) @sscanf(i8* %6233, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 11)) #9
  %6235 = icmp ne i32 %6234, 1
  br i1 %6235, label %355, label %6236

; <label>:6236:                                   ; preds = %6232
  %6237 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 11), align 8
  %6238 = icmp slt i32 %6237, 1
  br i1 %6238, label %355, label %6239

; <label>:6239:                                   ; preds = %6236
  %6240 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 11), align 8
  %6241 = icmp sgt i32 %6240, 4
  br i1 %6241, label %355, label %.loopexit71.17

; <label>:6242:                                   ; preds = %.lr.ph141.17
  %6243 = load i8*, i8** @optarg, align 8
  %6244 = call i32 (i8*, i8*, ...) @sscanf(i8* %6243, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10)) #9
  %6245 = icmp ne i32 %6244, 1
  br i1 %6245, label %334, label %6246

; <label>:6246:                                   ; preds = %6242
  %6247 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %6248 = icmp ne i32 %6247, 64
  br i1 %6248, label %6249, label %6261

; <label>:6249:                                   ; preds = %6246
  %6250 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %6251 = icmp ne i32 %6250, 128
  br i1 %6251, label %6252, label %6261

; <label>:6252:                                   ; preds = %6249
  %6253 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %6254 = icmp ne i32 %6253, 152
  br i1 %6254, label %6255, label %6261

; <label>:6255:                                   ; preds = %6252
  %6256 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %6257 = icmp ne i32 %6256, 256
  br i1 %6257, label %6258, label %6261

; <label>:6258:                                   ; preds = %6255
  %6259 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %6260 = icmp ne i32 %6259, 512
  br i1 %6260, label %334, label %6261

; <label>:6261:                                   ; preds = %6258, %6255, %6252, %6249, %6246
  %6262 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %6263 = sdiv i32 %6262, 8
  %6264 = sub nsw i32 %6263, 3
  store i32 %6264, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  br label %.loopexit71.17

; <label>:6265:                                   ; preds = %.lr.ph141.17
  %6266 = load i8*, i8** @optarg, align 8
  %6267 = call i32 @getmac(i8* %6266, i32 1, i8* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 9, i64 0))
  %6268 = icmp ne i32 %6267, 0
  br i1 %6268, label %308, label %.loopexit71.17

; <label>:6269:                                   ; preds = %.lr.ph141.17
  store i32 0, i32* %27, align 4
  %6270 = load i8*, i8** @optarg, align 8
  %6271 = load i8, i8* %6270, align 1
  %6272 = sext i8 %6271 to i32
  %6273 = icmp ne i32 %6272, 0
  br i1 %6273, label %.lr.ph136.preheader.17, label %._crit_edge137.17

.lr.ph136.preheader.17:                           ; preds = %6269
  br label %.lr.ph136.17

.lr.ph136.17:                                     ; preds = %6320, %.lr.ph136.preheader.17
  %.02134.17 = phi i32 [ %.13.17, %6320 ], [ 0, %.lr.ph136.preheader.17 ]
  call void @unroll_loop(i32 125)
  %6274 = sext i32 %.02134.17 to i64
  %6275 = getelementptr inbounds i8, i8* %6270, i64 %6274
  %6276 = load i8, i8* %6275, align 1
  %6277 = sext i8 %6276 to i32
  %6278 = icmp eq i32 %6277, 120
  br i1 %6278, label %6279, label %6282

; <label>:6279:                                   ; preds = %.lr.ph136.17
  %6280 = sext i32 %.02134.17 to i64
  %6281 = getelementptr inbounds i8, i8* %6270, i64 %6280
  store i8 88, i8* %6281, align 1
  br label %6282

; <label>:6282:                                   ; preds = %6279, %.lr.ph136.17
  %6283 = sext i32 %.02134.17 to i64
  %6284 = getelementptr inbounds i8, i8* %6270, i64 %6283
  %6285 = load i8, i8* %6284, align 1
  %6286 = sext i8 %6285 to i32
  %6287 = icmp eq i32 %6286, 121
  br i1 %6287, label %6288, label %6291

; <label>:6288:                                   ; preds = %6282
  %6289 = sext i32 %.02134.17 to i64
  %6290 = getelementptr inbounds i8, i8* %6270, i64 %6289
  store i8 89, i8* %6290, align 1
  br label %6291

; <label>:6291:                                   ; preds = %6288, %6282
  %6292 = sext i32 %.02134.17 to i64
  %6293 = getelementptr inbounds i8, i8* %6270, i64 %6292
  %6294 = load i8, i8* %6293, align 1
  %6295 = sext i8 %6294 to i32
  %6296 = icmp eq i32 %6295, 45
  br i1 %6296, label %6318, label %6297

; <label>:6297:                                   ; preds = %6291
  %6298 = sext i32 %.02134.17 to i64
  %6299 = getelementptr inbounds i8, i8* %6270, i64 %6298
  %6300 = load i8, i8* %6299, align 1
  %6301 = sext i8 %6300 to i32
  %6302 = icmp eq i32 %6301, 58
  br i1 %6302, label %6318, label %6303

; <label>:6303:                                   ; preds = %6297
  %6304 = sext i32 %.02134.17 to i64
  %6305 = getelementptr inbounds i8, i8* %6270, i64 %6304
  %6306 = load i8, i8* %6305, align 1
  %6307 = sext i8 %6306 to i32
  %6308 = icmp eq i32 %6307, 32
  br i1 %6308, label %6318, label %6309

; <label>:6309:                                   ; preds = %6303
  %6310 = add nsw i32 %.02134.17, 1
  %6311 = sext i32 %.02134.17 to i64
  %6312 = getelementptr inbounds i8, i8* %6270, i64 %6311
  %6313 = load i8, i8* %6312, align 1
  %6314 = load i32, i32* %27, align 4
  %6315 = add nsw i32 %6314, 1
  store i32 %6315, i32* %27, align 4
  %6316 = sext i32 %6314 to i64
  %6317 = getelementptr inbounds i8, i8* %6270, i64 %6316
  store i8 %6313, i8* %6317, align 1
  br label %6320

; <label>:6318:                                   ; preds = %6303, %6297, %6291
  %6319 = add nsw i32 %.02134.17, 1
  br label %6320

; <label>:6320:                                   ; preds = %6318, %6309
  %.13.17 = phi i32 [ %6319, %6318 ], [ %6310, %6309 ]
  %6321 = sext i32 %.13.17 to i64
  %6322 = getelementptr inbounds i8, i8* %6270, i64 %6321
  %6323 = load i8, i8* %6322, align 1
  %6324 = sext i8 %6323 to i32
  %6325 = icmp ne i32 %6324, 0
  br i1 %6325, label %.lr.ph136.17, label %._crit_edge137.loopexit.17

._crit_edge137.loopexit.17:                       ; preds = %6320
  br label %._crit_edge137.17

._crit_edge137.17:                                ; preds = %._crit_edge137.loopexit.17, %6269
  %6326 = load i32, i32* %27, align 4
  %6327 = sext i32 %6326 to i64
  %6328 = getelementptr inbounds i8, i8* %6270, i64 %6327
  store i8 0, i8* %6328, align 1
  %6329 = load i8, i8* %6270, align 1
  store i8 %6329, i8* %61, align 16
  %6330 = getelementptr inbounds i8, i8* %6270, i64 1
  %6331 = load i8, i8* %6330, align 1
  store i8 %6331, i8* %62, align 1
  store i8 0, i8* %63, align 2
  %scevgep45.17 = getelementptr i8, i8* %6270, i64 3
  br label %6332

; <label>:6332:                                   ; preds = %6390, %._crit_edge137.17
  %lsr.iv48.17 = phi i8* [ %scevgep49.17, %6390 ], [ %scevgep45.17, %._crit_edge137.17 ]
  %.127.17 = phi i32 [ 0, %._crit_edge137.17 ], [ %.329.17, %6390 ]
  %.24.17 = phi i32 [ 0, %._crit_edge137.17 ], [ %.46.17, %6390 ]
  call void @unroll_loop(i32 126)
  %6333 = call i32 (i8*, i8*, ...) @sscanf(i8* %64, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.72, i64 0, i64 0), i32* %27) #9
  %6334 = icmp eq i32 %6333, 1
  br i1 %6334, label %.critedge.17, label %6335

; <label>:6335:                                   ; preds = %6332
  %6336 = load i8, i8* %66, align 16
  %6337 = sext i8 %6336 to i32
  %6338 = icmp eq i32 %6337, 88
  br i1 %6338, label %6339, label %6343

; <label>:6339:                                   ; preds = %6335
  %6340 = load i8, i8* %69, align 1
  %6341 = sext i8 %6340 to i32
  %6342 = icmp eq i32 %6341, 88
  br i1 %6342, label %.critedge.17, label %6343

; <label>:6343:                                   ; preds = %6339, %6335
  %6344 = load i8, i8* %70, align 16
  %6345 = sext i8 %6344 to i32
  %6346 = icmp eq i32 %6345, 89
  %6347 = load i8, i8* %71, align 1
  %6348 = sext i8 %6347 to i32
  %6349 = icmp eq i32 %6348, 89
  %6350 = select i1 %6346, i1 %6349, i1 false
  br i1 %6350, label %.critedge.17, label %.loopexit71.loopexit.17

.critedge.17:                                     ; preds = %6343, %6339, %6332
  %6351 = load i8, i8* %65, align 16
  %6352 = sext i8 %6351 to i32
  %6353 = icmp eq i32 %6352, 88
  br i1 %6353, label %6354, label %6358

; <label>:6354:                                   ; preds = %.critedge.17
  %6355 = load i8, i8* %67, align 1
  %6356 = sext i8 %6355 to i32
  %6357 = icmp eq i32 %6356, 88
  br i1 %6357, label %6384, label %6358

; <label>:6358:                                   ; preds = %6354, %.critedge.17
  %6359 = load i8, i8* %68, align 16
  %6360 = sext i8 %6359 to i32
  %6361 = icmp eq i32 %6360, 89
  br i1 %6361, label %6362, label %6366

; <label>:6362:                                   ; preds = %6358
  %6363 = load i8, i8* %74, align 1
  %6364 = sext i8 %6363 to i32
  %6365 = icmp eq i32 %6364, 89
  br i1 %6365, label %6379, label %6366

; <label>:6366:                                   ; preds = %6362, %6358
  %6367 = load i32, i32* %27, align 4
  %6368 = icmp slt i32 %6367, 0
  %6369 = load i32, i32* %27, align 4
  %6370 = icmp sgt i32 %6369, 255
  %or.cond.17 = or i1 %6368, %6370
  br i1 %or.cond.17, label %.loopexit23, label %6371

; <label>:6371:                                   ; preds = %6366
  %6372 = load i32, i32* %27, align 4
  %6373 = trunc i32 %6372 to i8
  %6374 = sext i32 %.24.17 to i64
  %6375 = getelementptr inbounds [64 x i8], [64 x i8]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 7), i64 0, i64 %6374
  store i8 %6373, i8* %6375, align 1
  %6376 = add nsw i32 %.24.17, 1
  %6377 = sext i32 %.24.17 to i64
  %6378 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 8), i64 0, i64 %6377
  store i32 1, i32* %6378, align 4
  br label %6388

; <label>:6379:                                   ; preds = %6362
  %6380 = add nsw i32 %.24.17, 1
  %6381 = add nsw i32 %.127.17, 1
  %6382 = sext i32 %.127.17 to i64
  %6383 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 31), i64 0, i64 %6382
  store i32 %.24.17, i32* %6383, align 4
  br label %6388

; <label>:6384:                                   ; preds = %6354
  %6385 = add nsw i32 %.24.17, 1
  %6386 = sext i32 %.24.17 to i64
  %6387 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 8), i64 0, i64 %6386
  store i32 0, i32* %6387, align 4
  br label %6388

; <label>:6388:                                   ; preds = %6384, %6379, %6371
  %.329.17 = phi i32 [ %.127.17, %6384 ], [ %6381, %6379 ], [ %.127.17, %6371 ]
  %.46.17 = phi i32 [ %6385, %6384 ], [ %6380, %6379 ], [ %6376, %6371 ]
  %6389 = icmp sge i32 %.46.17, 64
  br i1 %6389, label %.loopexit71.loopexit.17, label %6390

; <label>:6390:                                   ; preds = %6388
  %scevgep50.17 = getelementptr i8, i8* %lsr.iv48.17, i64 -1
  %6391 = load i8, i8* %scevgep50.17, align 1
  store i8 %6391, i8* %72, align 16
  %6392 = load i8, i8* %lsr.iv48.17, align 1
  store i8 %6392, i8* %73, align 1
  %scevgep49.17 = getelementptr i8, i8* %lsr.iv48.17, i64 2
  br label %6332

.loopexit71.loopexit.17:                          ; preds = %6388, %6343
  %.531.ph.17 = phi i32 [ %.329.17, %6388 ], [ %.127.17, %6343 ]
  br label %.loopexit71.17

; <label>:6393:                                   ; preds = %.lr.ph141.17
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 41), align 4
  br label %.loopexit71.17

; <label>:6394:                                   ; preds = %.lr.ph141.17
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 16), align 4
  br label %.loopexit71.17

; <label>:6395:                                   ; preds = %.lr.ph141.17
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 14), align 4
  br label %.loopexit71.17

; <label>:6396:                                   ; preds = %.lr.ph141.17
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 38), align 8
  br label %.loopexit71.17

; <label>:6397:                                   ; preds = %.lr.ph141.17
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 15), align 8
  br label %.loopexit71.17

; <label>:6398:                                   ; preds = %.lr.ph141.17
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 6), align 8
  br label %.loopexit71.17

; <label>:6399:                                   ; preds = %.lr.ph141.17
  %6400 = load i8*, i8** @optarg, align 8
  %6401 = call i32 (i8*, i8*, ...) @sscanf(i8* %6400, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 5)) #9
  %6402 = icmp ne i32 %6401, 1
  br i1 %6402, label %160, label %6403

; <label>:6403:                                   ; preds = %6399
  %6404 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 5), align 4
  %6405 = icmp slt i32 %6404, 1
  br i1 %6405, label %160, label %6406

; <label>:6406:                                   ; preds = %6403
  %6407 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 5), align 4
  %6408 = icmp sgt i32 %6407, 128
  br i1 %6408, label %160, label %.loopexit71.17

; <label>:6409:                                   ; preds = %.lr.ph141.17
  %6410 = load i8*, i8** @optarg, align 8
  %6411 = call i32 @getmac(i8* %6410, i32 1, i8* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 4, i64 0))
  %6412 = icmp ne i32 %6411, 0
  br i1 %6412, label %142, label %6413

; <label>:6413:                                   ; preds = %6409
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 2), align 8
  br label %.loopexit71.17

; <label>:6414:                                   ; preds = %.lr.ph141.17
  call void @llvm.memset.p0i8.i64(i8* align 4 getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 3, i64 0), i8 0, i64 33, i1 false)
  %6415 = load i8*, i8** @optarg, align 8
  %6416 = call i8* @strncpy(i8* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 3, i64 0), i8* %6415, i64 32) #9, !track !220
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 1), align 4
  br label %.loopexit71.17

; <label>:6417:                                   ; preds = %.lr.ph141.17
  %6418 = load i8*, i8** @optarg, align 8
  %6419 = call i32 (i8*, i8*, ...) @sscanf(i8* %6418, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 0)) #9
  %6420 = load i8*, i8** @optarg, align 8
  %6421 = call i32 @strcasecmp(i8* %6420, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.94, i64 0, i64 0)) #10
  %6422 = icmp eq i32 %6421, 0
  br i1 %6422, label %6428, label %6423

; <label>:6423:                                   ; preds = %6417
  %6424 = load i8*, i8** @optarg, align 8
  %6425 = call i32 @strcasecmp(i8* %6424, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.95, i64 0, i64 0)) #10
  %6426 = icmp eq i32 %6425, 0
  br i1 %6426, label %6427, label %6429

; <label>:6427:                                   ; preds = %6423
  store i32 2, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 0), align 8
  br label %6429

; <label>:6428:                                   ; preds = %6417
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 0), align 8
  br label %6429

; <label>:6429:                                   ; preds = %6428, %6427, %6423
  %6430 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 0), align 8
  %6431 = icmp ne i32 %6430, 1
  br i1 %6431, label %6432, label %.loopexit71.17

; <label>:6432:                                   ; preds = %6429
  %6433 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 0), align 8
  %6434 = icmp ne i32 %6433, 2
  br i1 %6434, label %128, label %.loopexit71.17

; <label>:6435:                                   ; preds = %.lr.ph141.17
  %6436 = icmp ne i32 %.134.16, 0
  br i1 %6436, label %102, label %6437

; <label>:6437:                                   ; preds = %6435
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 40), align 8
  store i32 0, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 20), align 4
  br label %.loopexit71.17

.loopexit71.17:                                   ; preds = %6437, %6432, %6429, %6414, %6413, %6406, %6398, %6397, %6396, %6395, %6394, %6393, %.loopexit71.loopexit.17, %6265, %6261, %6239, %6229, %6220, %6204, %6192, %6182, %6172, %6162, %6161, %6160, %6159, %6158, %6154, %6153, %6151, %6149, %6140
  %.134.17 = phi i32 [ %.134.16, %6153 ], [ %.134.16, %6158 ], [ %.134.16, %6159 ], [ %.134.16, %6160 ], [ %.134.16, %6161 ], [ %.134.16, %6192 ], [ %.134.16, %6204 ], [ %.134.16, %6220 ], [ %.134.16, %6261 ], [ %.134.16, %6393 ], [ %.134.16, %6394 ], [ %.134.16, %6395 ], [ %.134.16, %6396 ], [ %.134.16, %6397 ], [ %.134.16, %6398 ], [ %.134.16, %6413 ], [ %.134.16, %6414 ], [ %.134.16, %6437 ], [ %.134.16, %6432 ], [ %.134.16, %6429 ], [ %.134.16, %6406 ], [ %.134.16, %6265 ], [ %.134.16, %6239 ], [ %.134.16, %6229 ], [ %.134.16, %6182 ], [ %.134.16, %6172 ], [ %.134.16, %6162 ], [ %.134.16, %6154 ], [ %.134.16, %6149 ], [ %.134.16, %6151 ], [ 1, %6140 ], [ %.134.16, %.loopexit71.loopexit.17 ]
  %.531.17 = phi i32 [ %.531.16, %6153 ], [ %.531.16, %6158 ], [ %.531.16, %6159 ], [ %.531.16, %6160 ], [ %.531.16, %6161 ], [ %.531.16, %6192 ], [ %.531.16, %6204 ], [ %.531.16, %6220 ], [ %.531.16, %6261 ], [ %.531.16, %6393 ], [ %.531.16, %6394 ], [ %.531.16, %6395 ], [ %.531.16, %6396 ], [ %.531.16, %6397 ], [ %.531.16, %6398 ], [ %.531.16, %6413 ], [ %.531.16, %6414 ], [ %.531.16, %6437 ], [ %.531.16, %6432 ], [ %.531.16, %6429 ], [ %.531.16, %6406 ], [ %.531.16, %6265 ], [ %.531.16, %6239 ], [ %.531.16, %6229 ], [ %.531.16, %6182 ], [ %.531.16, %6172 ], [ %.531.16, %6162 ], [ %.531.16, %6154 ], [ %.531.16, %6149 ], [ %.531.16, %6151 ], [ %.531.16, %6140 ], [ %.531.ph.17, %.loopexit71.loopexit.17 ]
  call void @__loop_iteration_test___0()
  store i32 0, i32* %30, align 4
  %6438 = call i32 @getopt_long(i32 4, i8** %25, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.86, i64 0, i64 0), %struct.option* getelementptr inbounds ([10 x %struct.option], [10 x %struct.option]* @main.long_options, i64 0, i64 0), i32* %30) #9, !track_argc !219
  %6439 = icmp slt i32 %6438, 0
  br i1 %6439, label %._crit_edge142.loopexit, label %.lr.ph141.18

.lr.ph141.18:                                     ; preds = %.loopexit71.17
  call void @unroll_loop(i32 124)
  switch i32 %6438, label %.loopexit1 [
    i32 58, label %75
    i32 63, label %80
    i32 117, label %85
    i32 86, label %6735
    i32 97, label %6717
    i32 101, label %6714
    i32 98, label %6709
    i32 112, label %6699
    i32 113, label %6698
    i32 99, label %6697
    i32 68, label %6696
    i32 104, label %6695
    i32 116, label %6694
    i32 49, label %6693
    i32 100, label %6569
    i32 109, label %6565
    i32 110, label %6542
    i32 105, label %6532
    i32 102, label %6525
    i32 107, label %6510
    i32 108, label %6497
    i32 77, label %6485
    i32 80, label %6475
    i32 120, label %6462
    i32 88, label %6461
    i32 121, label %6460
    i32 75, label %6459
    i32 115, label %6458
    i32 119, label %6454
    i32 114, label %484
    i32 48, label %6453
    i32 72, label %.loopexit13
    i32 67, label %6443
    i32 122, label %6440
  ]

; <label>:6440:                                   ; preds = %.lr.ph141.18
  %6441 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 40), align 8
  %6442 = icmp ne i32 %6441, 0
  br i1 %6442, label %507, label %.loopexit71.18

; <label>:6443:                                   ; preds = %.lr.ph141.18
  %6444 = load i8*, i8** @optarg, align 8
  %6445 = call i32 @checkbssids(i8* %6444)
  %6446 = icmp slt i32 %6445, 1
  br i1 %6446, label %493, label %6447

; <label>:6447:                                   ; preds = %6443
  %6448 = icmp eq i32 %6445, 1
  br i1 %6448, label %6451, label %6449

; <label>:6449:                                   ; preds = %6447
  %6450 = load i8*, i8** @optarg, align 8
  store i8* %6450, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 34), align 8
  br label %.loopexit71.18

; <label>:6451:                                   ; preds = %6447
  %6452 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.112, i64 0, i64 0))
  br label %.loopexit71.18

; <label>:6453:                                   ; preds = %.lr.ph141.18
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 27), align 4
  br label %.loopexit71.18

; <label>:6454:                                   ; preds = %.lr.ph141.18
  %6455 = load i8*, i8** @optarg, align 8
  %6456 = call i32 @set_dicts(i8* %6455)
  %6457 = icmp ne i32 %6456, 0
  br i1 %6457, label %479, label %.loopexit71.18

; <label>:6458:                                   ; preds = %.lr.ph141.18
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 26), align 8
  br label %.loopexit71.18

; <label>:6459:                                   ; preds = %.lr.ph141.18
  store i32 0, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 20), align 4
  br label %.loopexit71.18

; <label>:6460:                                   ; preds = %.lr.ph141.18
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 19), align 8
  br label %.loopexit71.18

; <label>:6461:                                   ; preds = %.lr.ph141.18
  store i32 0, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 18), align 4
  br label %.loopexit71.18

; <label>:6462:                                   ; preds = %.lr.ph141.18
  store i32 0, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 17), align 8
  %6463 = load i8*, i8** @optarg, align 8
  %6464 = icmp ne i8* %6463, null
  br i1 %6464, label %6465, label %.loopexit71.18

; <label>:6465:                                   ; preds = %6462
  %6466 = load i8*, i8** @optarg, align 8
  %6467 = call i32 (i8*, i8*, ...) @sscanf(i8* %6466, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 17)) #9
  %6468 = icmp ne i32 %6467, 1
  br i1 %6468, label %463, label %6469

; <label>:6469:                                   ; preds = %6465
  %6470 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 17), align 8
  %6471 = icmp slt i32 %6470, 0
  br i1 %6471, label %463, label %6472

; <label>:6472:                                   ; preds = %6469
  %6473 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 17), align 8
  %6474 = icmp sgt i32 %6473, 4
  br i1 %6474, label %463, label %.loopexit71.18

; <label>:6475:                                   ; preds = %.lr.ph141.18
  %6476 = load i8*, i8** @optarg, align 8
  %6477 = call i32 (i8*, i8*, ...) @sscanf(i8* %6476, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 39)) #9
  %6478 = icmp ne i32 %6477, 1
  br i1 %6478, label %443, label %6479

; <label>:6479:                                   ; preds = %6475
  %6480 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 39), align 4
  %6481 = icmp slt i32 %6480, 0
  br i1 %6481, label %443, label %6482

; <label>:6482:                                   ; preds = %6479
  %6483 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 39), align 4
  %6484 = icmp sgt i32 %6483, 2
  br i1 %6484, label %443, label %.loopexit71.18

; <label>:6485:                                   ; preds = %.lr.ph141.18
  %6486 = load i8*, i8** @optarg, align 8
  %6487 = call i32 (i8*, i8*, ...) @sscanf(i8* %6486, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 33)) #9
  %6488 = icmp ne i32 %6487, 1
  br i1 %6488, label %421, label %6489

; <label>:6489:                                   ; preds = %6485
  %6490 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 33), align 8
  %6491 = icmp slt i32 %6490, 1
  br i1 %6491, label %421, label %6492

; <label>:6492:                                   ; preds = %6489
  %6493 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 13), align 8
  %6494 = sub nsw i32 %6493, 1
  %6495 = sext i32 %6494 to i64
  %6496 = getelementptr inbounds [17 x i32], [17 x i32]* @K_COEFF, i64 0, i64 %6495
  store i32 0, i32* %6496, align 4
  br label %.loopexit71.18

; <label>:6497:                                   ; preds = %.lr.ph141.18
  %6498 = load i8*, i8** @optarg, align 8
  %6499 = call i64 @strlen(i8* %6498) #10
  %6500 = add i64 %6499, 1
  %6501 = call noalias i8* @calloc(i64 1, i64 %6500) #9, !track !221
  store i8* %6501, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 42), align 8
  %6502 = load i8*, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 42), align 8
  %6503 = icmp eq i8* %6502, null
  br i1 %6503, label %405, label %6504

; <label>:6504:                                   ; preds = %6497
  %6505 = load i8*, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 42), align 8
  %6506 = load i8*, i8** @optarg, align 8
  %6507 = load i8*, i8** @optarg, align 8
  %6508 = call i64 @strlen(i8* %6507) #10
  %6509 = call i8* @strncpy(i8* %6505, i8* %6506, i64 %6508) #9, !track !222
  br label %.loopexit71.18

; <label>:6510:                                   ; preds = %.lr.ph141.18
  %6511 = load i8*, i8** @optarg, align 8
  %6512 = call i32 (i8*, i8*, ...) @sscanf(i8* %6511, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 13)) #9
  %6513 = icmp ne i32 %6512, 1
  br i1 %6513, label %386, label %6514

; <label>:6514:                                   ; preds = %6510
  %6515 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 13), align 8
  %6516 = icmp slt i32 %6515, 1
  br i1 %6516, label %386, label %6517

; <label>:6517:                                   ; preds = %6514
  %6518 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 13), align 8
  %6519 = icmp sgt i32 %6518, 17
  br i1 %6519, label %386, label %6520

; <label>:6520:                                   ; preds = %6517
  %6521 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 13), align 8
  %6522 = sub nsw i32 %6521, 1
  %6523 = sext i32 %6522 to i64
  %6524 = getelementptr inbounds [17 x i32], [17 x i32]* @K_COEFF, i64 0, i64 %6523
  store i32 0, i32* %6524, align 4
  br label %.loopexit71.18

; <label>:6525:                                   ; preds = %.lr.ph141.18
  %6526 = load i8*, i8** @optarg, align 8
  %6527 = call i32 (i8*, i8*, ...) @sscanf(i8* %6526, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.103, i64 0, i64 0), float* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 12)) #9
  %6528 = icmp ne i32 %6527, 1
  br i1 %6528, label %369, label %6529

; <label>:6529:                                   ; preds = %6525
  %6530 = load float, float* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 12), align 4
  %6531 = fcmp olt float %6530, 1.000000e+00
  br i1 %6531, label %369, label %.loopexit71.18

; <label>:6532:                                   ; preds = %.lr.ph141.18
  %6533 = load i8*, i8** @optarg, align 8
  %6534 = call i32 (i8*, i8*, ...) @sscanf(i8* %6533, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 11)) #9
  %6535 = icmp ne i32 %6534, 1
  br i1 %6535, label %355, label %6536

; <label>:6536:                                   ; preds = %6532
  %6537 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 11), align 8
  %6538 = icmp slt i32 %6537, 1
  br i1 %6538, label %355, label %6539

; <label>:6539:                                   ; preds = %6536
  %6540 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 11), align 8
  %6541 = icmp sgt i32 %6540, 4
  br i1 %6541, label %355, label %.loopexit71.18

; <label>:6542:                                   ; preds = %.lr.ph141.18
  %6543 = load i8*, i8** @optarg, align 8
  %6544 = call i32 (i8*, i8*, ...) @sscanf(i8* %6543, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10)) #9
  %6545 = icmp ne i32 %6544, 1
  br i1 %6545, label %334, label %6546

; <label>:6546:                                   ; preds = %6542
  %6547 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %6548 = icmp ne i32 %6547, 64
  br i1 %6548, label %6549, label %6561

; <label>:6549:                                   ; preds = %6546
  %6550 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %6551 = icmp ne i32 %6550, 128
  br i1 %6551, label %6552, label %6561

; <label>:6552:                                   ; preds = %6549
  %6553 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %6554 = icmp ne i32 %6553, 152
  br i1 %6554, label %6555, label %6561

; <label>:6555:                                   ; preds = %6552
  %6556 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %6557 = icmp ne i32 %6556, 256
  br i1 %6557, label %6558, label %6561

; <label>:6558:                                   ; preds = %6555
  %6559 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %6560 = icmp ne i32 %6559, 512
  br i1 %6560, label %334, label %6561

; <label>:6561:                                   ; preds = %6558, %6555, %6552, %6549, %6546
  %6562 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %6563 = sdiv i32 %6562, 8
  %6564 = sub nsw i32 %6563, 3
  store i32 %6564, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  br label %.loopexit71.18

; <label>:6565:                                   ; preds = %.lr.ph141.18
  %6566 = load i8*, i8** @optarg, align 8
  %6567 = call i32 @getmac(i8* %6566, i32 1, i8* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 9, i64 0))
  %6568 = icmp ne i32 %6567, 0
  br i1 %6568, label %308, label %.loopexit71.18

; <label>:6569:                                   ; preds = %.lr.ph141.18
  store i32 0, i32* %27, align 4
  %6570 = load i8*, i8** @optarg, align 8
  %6571 = load i8, i8* %6570, align 1
  %6572 = sext i8 %6571 to i32
  %6573 = icmp ne i32 %6572, 0
  br i1 %6573, label %.lr.ph136.preheader.18, label %._crit_edge137.18

.lr.ph136.preheader.18:                           ; preds = %6569
  br label %.lr.ph136.18

.lr.ph136.18:                                     ; preds = %6620, %.lr.ph136.preheader.18
  %.02134.18 = phi i32 [ %.13.18, %6620 ], [ 0, %.lr.ph136.preheader.18 ]
  call void @unroll_loop(i32 125)
  %6574 = sext i32 %.02134.18 to i64
  %6575 = getelementptr inbounds i8, i8* %6570, i64 %6574
  %6576 = load i8, i8* %6575, align 1
  %6577 = sext i8 %6576 to i32
  %6578 = icmp eq i32 %6577, 120
  br i1 %6578, label %6579, label %6582

; <label>:6579:                                   ; preds = %.lr.ph136.18
  %6580 = sext i32 %.02134.18 to i64
  %6581 = getelementptr inbounds i8, i8* %6570, i64 %6580
  store i8 88, i8* %6581, align 1
  br label %6582

; <label>:6582:                                   ; preds = %6579, %.lr.ph136.18
  %6583 = sext i32 %.02134.18 to i64
  %6584 = getelementptr inbounds i8, i8* %6570, i64 %6583
  %6585 = load i8, i8* %6584, align 1
  %6586 = sext i8 %6585 to i32
  %6587 = icmp eq i32 %6586, 121
  br i1 %6587, label %6588, label %6591

; <label>:6588:                                   ; preds = %6582
  %6589 = sext i32 %.02134.18 to i64
  %6590 = getelementptr inbounds i8, i8* %6570, i64 %6589
  store i8 89, i8* %6590, align 1
  br label %6591

; <label>:6591:                                   ; preds = %6588, %6582
  %6592 = sext i32 %.02134.18 to i64
  %6593 = getelementptr inbounds i8, i8* %6570, i64 %6592
  %6594 = load i8, i8* %6593, align 1
  %6595 = sext i8 %6594 to i32
  %6596 = icmp eq i32 %6595, 45
  br i1 %6596, label %6618, label %6597

; <label>:6597:                                   ; preds = %6591
  %6598 = sext i32 %.02134.18 to i64
  %6599 = getelementptr inbounds i8, i8* %6570, i64 %6598
  %6600 = load i8, i8* %6599, align 1
  %6601 = sext i8 %6600 to i32
  %6602 = icmp eq i32 %6601, 58
  br i1 %6602, label %6618, label %6603

; <label>:6603:                                   ; preds = %6597
  %6604 = sext i32 %.02134.18 to i64
  %6605 = getelementptr inbounds i8, i8* %6570, i64 %6604
  %6606 = load i8, i8* %6605, align 1
  %6607 = sext i8 %6606 to i32
  %6608 = icmp eq i32 %6607, 32
  br i1 %6608, label %6618, label %6609

; <label>:6609:                                   ; preds = %6603
  %6610 = add nsw i32 %.02134.18, 1
  %6611 = sext i32 %.02134.18 to i64
  %6612 = getelementptr inbounds i8, i8* %6570, i64 %6611
  %6613 = load i8, i8* %6612, align 1
  %6614 = load i32, i32* %27, align 4
  %6615 = add nsw i32 %6614, 1
  store i32 %6615, i32* %27, align 4
  %6616 = sext i32 %6614 to i64
  %6617 = getelementptr inbounds i8, i8* %6570, i64 %6616
  store i8 %6613, i8* %6617, align 1
  br label %6620

; <label>:6618:                                   ; preds = %6603, %6597, %6591
  %6619 = add nsw i32 %.02134.18, 1
  br label %6620

; <label>:6620:                                   ; preds = %6618, %6609
  %.13.18 = phi i32 [ %6619, %6618 ], [ %6610, %6609 ]
  %6621 = sext i32 %.13.18 to i64
  %6622 = getelementptr inbounds i8, i8* %6570, i64 %6621
  %6623 = load i8, i8* %6622, align 1
  %6624 = sext i8 %6623 to i32
  %6625 = icmp ne i32 %6624, 0
  br i1 %6625, label %.lr.ph136.18, label %._crit_edge137.loopexit.18

._crit_edge137.loopexit.18:                       ; preds = %6620
  br label %._crit_edge137.18

._crit_edge137.18:                                ; preds = %._crit_edge137.loopexit.18, %6569
  %6626 = load i32, i32* %27, align 4
  %6627 = sext i32 %6626 to i64
  %6628 = getelementptr inbounds i8, i8* %6570, i64 %6627
  store i8 0, i8* %6628, align 1
  %6629 = load i8, i8* %6570, align 1
  store i8 %6629, i8* %61, align 16
  %6630 = getelementptr inbounds i8, i8* %6570, i64 1
  %6631 = load i8, i8* %6630, align 1
  store i8 %6631, i8* %62, align 1
  store i8 0, i8* %63, align 2
  %scevgep45.18 = getelementptr i8, i8* %6570, i64 3
  br label %6632

; <label>:6632:                                   ; preds = %6690, %._crit_edge137.18
  %lsr.iv48.18 = phi i8* [ %scevgep49.18, %6690 ], [ %scevgep45.18, %._crit_edge137.18 ]
  %.127.18 = phi i32 [ 0, %._crit_edge137.18 ], [ %.329.18, %6690 ]
  %.24.18 = phi i32 [ 0, %._crit_edge137.18 ], [ %.46.18, %6690 ]
  call void @unroll_loop(i32 126)
  %6633 = call i32 (i8*, i8*, ...) @sscanf(i8* %64, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.72, i64 0, i64 0), i32* %27) #9
  %6634 = icmp eq i32 %6633, 1
  br i1 %6634, label %.critedge.18, label %6635

; <label>:6635:                                   ; preds = %6632
  %6636 = load i8, i8* %66, align 16
  %6637 = sext i8 %6636 to i32
  %6638 = icmp eq i32 %6637, 88
  br i1 %6638, label %6639, label %6643

; <label>:6639:                                   ; preds = %6635
  %6640 = load i8, i8* %69, align 1
  %6641 = sext i8 %6640 to i32
  %6642 = icmp eq i32 %6641, 88
  br i1 %6642, label %.critedge.18, label %6643

; <label>:6643:                                   ; preds = %6639, %6635
  %6644 = load i8, i8* %70, align 16
  %6645 = sext i8 %6644 to i32
  %6646 = icmp eq i32 %6645, 89
  %6647 = load i8, i8* %71, align 1
  %6648 = sext i8 %6647 to i32
  %6649 = icmp eq i32 %6648, 89
  %6650 = select i1 %6646, i1 %6649, i1 false
  br i1 %6650, label %.critedge.18, label %.loopexit71.loopexit.18

.critedge.18:                                     ; preds = %6643, %6639, %6632
  %6651 = load i8, i8* %65, align 16
  %6652 = sext i8 %6651 to i32
  %6653 = icmp eq i32 %6652, 88
  br i1 %6653, label %6654, label %6658

; <label>:6654:                                   ; preds = %.critedge.18
  %6655 = load i8, i8* %67, align 1
  %6656 = sext i8 %6655 to i32
  %6657 = icmp eq i32 %6656, 88
  br i1 %6657, label %6684, label %6658

; <label>:6658:                                   ; preds = %6654, %.critedge.18
  %6659 = load i8, i8* %68, align 16
  %6660 = sext i8 %6659 to i32
  %6661 = icmp eq i32 %6660, 89
  br i1 %6661, label %6662, label %6666

; <label>:6662:                                   ; preds = %6658
  %6663 = load i8, i8* %74, align 1
  %6664 = sext i8 %6663 to i32
  %6665 = icmp eq i32 %6664, 89
  br i1 %6665, label %6679, label %6666

; <label>:6666:                                   ; preds = %6662, %6658
  %6667 = load i32, i32* %27, align 4
  %6668 = icmp slt i32 %6667, 0
  %6669 = load i32, i32* %27, align 4
  %6670 = icmp sgt i32 %6669, 255
  %or.cond.18 = or i1 %6668, %6670
  br i1 %or.cond.18, label %.loopexit24, label %6671

; <label>:6671:                                   ; preds = %6666
  %6672 = load i32, i32* %27, align 4
  %6673 = trunc i32 %6672 to i8
  %6674 = sext i32 %.24.18 to i64
  %6675 = getelementptr inbounds [64 x i8], [64 x i8]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 7), i64 0, i64 %6674
  store i8 %6673, i8* %6675, align 1
  %6676 = add nsw i32 %.24.18, 1
  %6677 = sext i32 %.24.18 to i64
  %6678 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 8), i64 0, i64 %6677
  store i32 1, i32* %6678, align 4
  br label %6688

; <label>:6679:                                   ; preds = %6662
  %6680 = add nsw i32 %.24.18, 1
  %6681 = add nsw i32 %.127.18, 1
  %6682 = sext i32 %.127.18 to i64
  %6683 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 31), i64 0, i64 %6682
  store i32 %.24.18, i32* %6683, align 4
  br label %6688

; <label>:6684:                                   ; preds = %6654
  %6685 = add nsw i32 %.24.18, 1
  %6686 = sext i32 %.24.18 to i64
  %6687 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 8), i64 0, i64 %6686
  store i32 0, i32* %6687, align 4
  br label %6688

; <label>:6688:                                   ; preds = %6684, %6679, %6671
  %.329.18 = phi i32 [ %.127.18, %6684 ], [ %6681, %6679 ], [ %.127.18, %6671 ]
  %.46.18 = phi i32 [ %6685, %6684 ], [ %6680, %6679 ], [ %6676, %6671 ]
  %6689 = icmp sge i32 %.46.18, 64
  br i1 %6689, label %.loopexit71.loopexit.18, label %6690

; <label>:6690:                                   ; preds = %6688
  %scevgep50.18 = getelementptr i8, i8* %lsr.iv48.18, i64 -1
  %6691 = load i8, i8* %scevgep50.18, align 1
  store i8 %6691, i8* %72, align 16
  %6692 = load i8, i8* %lsr.iv48.18, align 1
  store i8 %6692, i8* %73, align 1
  %scevgep49.18 = getelementptr i8, i8* %lsr.iv48.18, i64 2
  br label %6632

.loopexit71.loopexit.18:                          ; preds = %6688, %6643
  %.531.ph.18 = phi i32 [ %.329.18, %6688 ], [ %.127.18, %6643 ]
  br label %.loopexit71.18

; <label>:6693:                                   ; preds = %.lr.ph141.18
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 41), align 4
  br label %.loopexit71.18

; <label>:6694:                                   ; preds = %.lr.ph141.18
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 16), align 4
  br label %.loopexit71.18

; <label>:6695:                                   ; preds = %.lr.ph141.18
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 14), align 4
  br label %.loopexit71.18

; <label>:6696:                                   ; preds = %.lr.ph141.18
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 38), align 8
  br label %.loopexit71.18

; <label>:6697:                                   ; preds = %.lr.ph141.18
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 15), align 8
  br label %.loopexit71.18

; <label>:6698:                                   ; preds = %.lr.ph141.18
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 6), align 8
  br label %.loopexit71.18

; <label>:6699:                                   ; preds = %.lr.ph141.18
  %6700 = load i8*, i8** @optarg, align 8
  %6701 = call i32 (i8*, i8*, ...) @sscanf(i8* %6700, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 5)) #9
  %6702 = icmp ne i32 %6701, 1
  br i1 %6702, label %160, label %6703

; <label>:6703:                                   ; preds = %6699
  %6704 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 5), align 4
  %6705 = icmp slt i32 %6704, 1
  br i1 %6705, label %160, label %6706

; <label>:6706:                                   ; preds = %6703
  %6707 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 5), align 4
  %6708 = icmp sgt i32 %6707, 128
  br i1 %6708, label %160, label %.loopexit71.18

; <label>:6709:                                   ; preds = %.lr.ph141.18
  %6710 = load i8*, i8** @optarg, align 8
  %6711 = call i32 @getmac(i8* %6710, i32 1, i8* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 4, i64 0))
  %6712 = icmp ne i32 %6711, 0
  br i1 %6712, label %142, label %6713

; <label>:6713:                                   ; preds = %6709
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 2), align 8
  br label %.loopexit71.18

; <label>:6714:                                   ; preds = %.lr.ph141.18
  call void @llvm.memset.p0i8.i64(i8* align 4 getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 3, i64 0), i8 0, i64 33, i1 false)
  %6715 = load i8*, i8** @optarg, align 8
  %6716 = call i8* @strncpy(i8* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 3, i64 0), i8* %6715, i64 32) #9, !track !220
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 1), align 4
  br label %.loopexit71.18

; <label>:6717:                                   ; preds = %.lr.ph141.18
  %6718 = load i8*, i8** @optarg, align 8
  %6719 = call i32 (i8*, i8*, ...) @sscanf(i8* %6718, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 0)) #9
  %6720 = load i8*, i8** @optarg, align 8
  %6721 = call i32 @strcasecmp(i8* %6720, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.94, i64 0, i64 0)) #10
  %6722 = icmp eq i32 %6721, 0
  br i1 %6722, label %6728, label %6723

; <label>:6723:                                   ; preds = %6717
  %6724 = load i8*, i8** @optarg, align 8
  %6725 = call i32 @strcasecmp(i8* %6724, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.95, i64 0, i64 0)) #10
  %6726 = icmp eq i32 %6725, 0
  br i1 %6726, label %6727, label %6729

; <label>:6727:                                   ; preds = %6723
  store i32 2, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 0), align 8
  br label %6729

; <label>:6728:                                   ; preds = %6717
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 0), align 8
  br label %6729

; <label>:6729:                                   ; preds = %6728, %6727, %6723
  %6730 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 0), align 8
  %6731 = icmp ne i32 %6730, 1
  br i1 %6731, label %6732, label %.loopexit71.18

; <label>:6732:                                   ; preds = %6729
  %6733 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 0), align 8
  %6734 = icmp ne i32 %6733, 2
  br i1 %6734, label %128, label %.loopexit71.18

; <label>:6735:                                   ; preds = %.lr.ph141.18
  %6736 = icmp ne i32 %.134.17, 0
  br i1 %6736, label %102, label %6737

; <label>:6737:                                   ; preds = %6735
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 40), align 8
  store i32 0, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 20), align 4
  br label %.loopexit71.18

.loopexit71.18:                                   ; preds = %6737, %6732, %6729, %6714, %6713, %6706, %6698, %6697, %6696, %6695, %6694, %6693, %.loopexit71.loopexit.18, %6565, %6561, %6539, %6529, %6520, %6504, %6492, %6482, %6472, %6462, %6461, %6460, %6459, %6458, %6454, %6453, %6451, %6449, %6440
  %.134.18 = phi i32 [ %.134.17, %6453 ], [ %.134.17, %6458 ], [ %.134.17, %6459 ], [ %.134.17, %6460 ], [ %.134.17, %6461 ], [ %.134.17, %6492 ], [ %.134.17, %6504 ], [ %.134.17, %6520 ], [ %.134.17, %6561 ], [ %.134.17, %6693 ], [ %.134.17, %6694 ], [ %.134.17, %6695 ], [ %.134.17, %6696 ], [ %.134.17, %6697 ], [ %.134.17, %6698 ], [ %.134.17, %6713 ], [ %.134.17, %6714 ], [ %.134.17, %6737 ], [ %.134.17, %6732 ], [ %.134.17, %6729 ], [ %.134.17, %6706 ], [ %.134.17, %6565 ], [ %.134.17, %6539 ], [ %.134.17, %6529 ], [ %.134.17, %6482 ], [ %.134.17, %6472 ], [ %.134.17, %6462 ], [ %.134.17, %6454 ], [ %.134.17, %6449 ], [ %.134.17, %6451 ], [ 1, %6440 ], [ %.134.17, %.loopexit71.loopexit.18 ]
  %.531.18 = phi i32 [ %.531.17, %6453 ], [ %.531.17, %6458 ], [ %.531.17, %6459 ], [ %.531.17, %6460 ], [ %.531.17, %6461 ], [ %.531.17, %6492 ], [ %.531.17, %6504 ], [ %.531.17, %6520 ], [ %.531.17, %6561 ], [ %.531.17, %6693 ], [ %.531.17, %6694 ], [ %.531.17, %6695 ], [ %.531.17, %6696 ], [ %.531.17, %6697 ], [ %.531.17, %6698 ], [ %.531.17, %6713 ], [ %.531.17, %6714 ], [ %.531.17, %6737 ], [ %.531.17, %6732 ], [ %.531.17, %6729 ], [ %.531.17, %6706 ], [ %.531.17, %6565 ], [ %.531.17, %6539 ], [ %.531.17, %6529 ], [ %.531.17, %6482 ], [ %.531.17, %6472 ], [ %.531.17, %6462 ], [ %.531.17, %6454 ], [ %.531.17, %6449 ], [ %.531.17, %6451 ], [ %.531.17, %6440 ], [ %.531.ph.18, %.loopexit71.loopexit.18 ]
  call void @__loop_iteration_test___0()
  store i32 0, i32* %30, align 4
  %6738 = call i32 @getopt_long(i32 4, i8** %25, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.86, i64 0, i64 0), %struct.option* getelementptr inbounds ([10 x %struct.option], [10 x %struct.option]* @main.long_options, i64 0, i64 0), i32* %30) #9, !track_argc !219
  %6739 = icmp slt i32 %6738, 0
  br i1 %6739, label %._crit_edge142.loopexit, label %.lr.ph141.19

.lr.ph141.19:                                     ; preds = %.loopexit71.18
  call void @unroll_loop(i32 124)
  switch i32 %6738, label %.loopexit1 [
    i32 58, label %75
    i32 63, label %80
    i32 117, label %85
    i32 86, label %7035
    i32 97, label %7017
    i32 101, label %7014
    i32 98, label %7009
    i32 112, label %6999
    i32 113, label %6998
    i32 99, label %6997
    i32 68, label %6996
    i32 104, label %6995
    i32 116, label %6994
    i32 49, label %6993
    i32 100, label %6869
    i32 109, label %6865
    i32 110, label %6842
    i32 105, label %6832
    i32 102, label %6825
    i32 107, label %6810
    i32 108, label %6797
    i32 77, label %6785
    i32 80, label %6775
    i32 120, label %6762
    i32 88, label %6761
    i32 121, label %6760
    i32 75, label %6759
    i32 115, label %6758
    i32 119, label %6754
    i32 114, label %484
    i32 48, label %6753
    i32 72, label %.loopexit13
    i32 67, label %6743
    i32 122, label %6740
  ]

; <label>:6740:                                   ; preds = %.lr.ph141.19
  %6741 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 40), align 8
  %6742 = icmp ne i32 %6741, 0
  br i1 %6742, label %507, label %.loopexit71.19

; <label>:6743:                                   ; preds = %.lr.ph141.19
  %6744 = load i8*, i8** @optarg, align 8
  %6745 = call i32 @checkbssids(i8* %6744)
  %6746 = icmp slt i32 %6745, 1
  br i1 %6746, label %493, label %6747

; <label>:6747:                                   ; preds = %6743
  %6748 = icmp eq i32 %6745, 1
  br i1 %6748, label %6751, label %6749

; <label>:6749:                                   ; preds = %6747
  %6750 = load i8*, i8** @optarg, align 8
  store i8* %6750, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 34), align 8
  br label %.loopexit71.19

; <label>:6751:                                   ; preds = %6747
  %6752 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.112, i64 0, i64 0))
  br label %.loopexit71.19

; <label>:6753:                                   ; preds = %.lr.ph141.19
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 27), align 4
  br label %.loopexit71.19

; <label>:6754:                                   ; preds = %.lr.ph141.19
  %6755 = load i8*, i8** @optarg, align 8
  %6756 = call i32 @set_dicts(i8* %6755)
  %6757 = icmp ne i32 %6756, 0
  br i1 %6757, label %479, label %.loopexit71.19

; <label>:6758:                                   ; preds = %.lr.ph141.19
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 26), align 8
  br label %.loopexit71.19

; <label>:6759:                                   ; preds = %.lr.ph141.19
  store i32 0, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 20), align 4
  br label %.loopexit71.19

; <label>:6760:                                   ; preds = %.lr.ph141.19
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 19), align 8
  br label %.loopexit71.19

; <label>:6761:                                   ; preds = %.lr.ph141.19
  store i32 0, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 18), align 4
  br label %.loopexit71.19

; <label>:6762:                                   ; preds = %.lr.ph141.19
  store i32 0, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 17), align 8
  %6763 = load i8*, i8** @optarg, align 8
  %6764 = icmp ne i8* %6763, null
  br i1 %6764, label %6765, label %.loopexit71.19

; <label>:6765:                                   ; preds = %6762
  %6766 = load i8*, i8** @optarg, align 8
  %6767 = call i32 (i8*, i8*, ...) @sscanf(i8* %6766, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 17)) #9
  %6768 = icmp ne i32 %6767, 1
  br i1 %6768, label %463, label %6769

; <label>:6769:                                   ; preds = %6765
  %6770 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 17), align 8
  %6771 = icmp slt i32 %6770, 0
  br i1 %6771, label %463, label %6772

; <label>:6772:                                   ; preds = %6769
  %6773 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 17), align 8
  %6774 = icmp sgt i32 %6773, 4
  br i1 %6774, label %463, label %.loopexit71.19

; <label>:6775:                                   ; preds = %.lr.ph141.19
  %6776 = load i8*, i8** @optarg, align 8
  %6777 = call i32 (i8*, i8*, ...) @sscanf(i8* %6776, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 39)) #9
  %6778 = icmp ne i32 %6777, 1
  br i1 %6778, label %443, label %6779

; <label>:6779:                                   ; preds = %6775
  %6780 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 39), align 4
  %6781 = icmp slt i32 %6780, 0
  br i1 %6781, label %443, label %6782

; <label>:6782:                                   ; preds = %6779
  %6783 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 39), align 4
  %6784 = icmp sgt i32 %6783, 2
  br i1 %6784, label %443, label %.loopexit71.19

; <label>:6785:                                   ; preds = %.lr.ph141.19
  %6786 = load i8*, i8** @optarg, align 8
  %6787 = call i32 (i8*, i8*, ...) @sscanf(i8* %6786, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 33)) #9
  %6788 = icmp ne i32 %6787, 1
  br i1 %6788, label %421, label %6789

; <label>:6789:                                   ; preds = %6785
  %6790 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 33), align 8
  %6791 = icmp slt i32 %6790, 1
  br i1 %6791, label %421, label %6792

; <label>:6792:                                   ; preds = %6789
  %6793 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 13), align 8
  %6794 = sub nsw i32 %6793, 1
  %6795 = sext i32 %6794 to i64
  %6796 = getelementptr inbounds [17 x i32], [17 x i32]* @K_COEFF, i64 0, i64 %6795
  store i32 0, i32* %6796, align 4
  br label %.loopexit71.19

; <label>:6797:                                   ; preds = %.lr.ph141.19
  %6798 = load i8*, i8** @optarg, align 8
  %6799 = call i64 @strlen(i8* %6798) #10
  %6800 = add i64 %6799, 1
  %6801 = call noalias i8* @calloc(i64 1, i64 %6800) #9, !track !221
  store i8* %6801, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 42), align 8
  %6802 = load i8*, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 42), align 8
  %6803 = icmp eq i8* %6802, null
  br i1 %6803, label %405, label %6804

; <label>:6804:                                   ; preds = %6797
  %6805 = load i8*, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 42), align 8
  %6806 = load i8*, i8** @optarg, align 8
  %6807 = load i8*, i8** @optarg, align 8
  %6808 = call i64 @strlen(i8* %6807) #10
  %6809 = call i8* @strncpy(i8* %6805, i8* %6806, i64 %6808) #9, !track !222
  br label %.loopexit71.19

; <label>:6810:                                   ; preds = %.lr.ph141.19
  %6811 = load i8*, i8** @optarg, align 8
  %6812 = call i32 (i8*, i8*, ...) @sscanf(i8* %6811, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 13)) #9
  %6813 = icmp ne i32 %6812, 1
  br i1 %6813, label %386, label %6814

; <label>:6814:                                   ; preds = %6810
  %6815 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 13), align 8
  %6816 = icmp slt i32 %6815, 1
  br i1 %6816, label %386, label %6817

; <label>:6817:                                   ; preds = %6814
  %6818 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 13), align 8
  %6819 = icmp sgt i32 %6818, 17
  br i1 %6819, label %386, label %6820

; <label>:6820:                                   ; preds = %6817
  %6821 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 13), align 8
  %6822 = sub nsw i32 %6821, 1
  %6823 = sext i32 %6822 to i64
  %6824 = getelementptr inbounds [17 x i32], [17 x i32]* @K_COEFF, i64 0, i64 %6823
  store i32 0, i32* %6824, align 4
  br label %.loopexit71.19

; <label>:6825:                                   ; preds = %.lr.ph141.19
  %6826 = load i8*, i8** @optarg, align 8
  %6827 = call i32 (i8*, i8*, ...) @sscanf(i8* %6826, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.103, i64 0, i64 0), float* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 12)) #9
  %6828 = icmp ne i32 %6827, 1
  br i1 %6828, label %369, label %6829

; <label>:6829:                                   ; preds = %6825
  %6830 = load float, float* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 12), align 4
  %6831 = fcmp olt float %6830, 1.000000e+00
  br i1 %6831, label %369, label %.loopexit71.19

; <label>:6832:                                   ; preds = %.lr.ph141.19
  %6833 = load i8*, i8** @optarg, align 8
  %6834 = call i32 (i8*, i8*, ...) @sscanf(i8* %6833, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 11)) #9
  %6835 = icmp ne i32 %6834, 1
  br i1 %6835, label %355, label %6836

; <label>:6836:                                   ; preds = %6832
  %6837 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 11), align 8
  %6838 = icmp slt i32 %6837, 1
  br i1 %6838, label %355, label %6839

; <label>:6839:                                   ; preds = %6836
  %6840 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 11), align 8
  %6841 = icmp sgt i32 %6840, 4
  br i1 %6841, label %355, label %.loopexit71.19

; <label>:6842:                                   ; preds = %.lr.ph141.19
  %6843 = load i8*, i8** @optarg, align 8
  %6844 = call i32 (i8*, i8*, ...) @sscanf(i8* %6843, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10)) #9
  %6845 = icmp ne i32 %6844, 1
  br i1 %6845, label %334, label %6846

; <label>:6846:                                   ; preds = %6842
  %6847 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %6848 = icmp ne i32 %6847, 64
  br i1 %6848, label %6849, label %6861

; <label>:6849:                                   ; preds = %6846
  %6850 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %6851 = icmp ne i32 %6850, 128
  br i1 %6851, label %6852, label %6861

; <label>:6852:                                   ; preds = %6849
  %6853 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %6854 = icmp ne i32 %6853, 152
  br i1 %6854, label %6855, label %6861

; <label>:6855:                                   ; preds = %6852
  %6856 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %6857 = icmp ne i32 %6856, 256
  br i1 %6857, label %6858, label %6861

; <label>:6858:                                   ; preds = %6855
  %6859 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %6860 = icmp ne i32 %6859, 512
  br i1 %6860, label %334, label %6861

; <label>:6861:                                   ; preds = %6858, %6855, %6852, %6849, %6846
  %6862 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  %6863 = sdiv i32 %6862, 8
  %6864 = sub nsw i32 %6863, 3
  store i32 %6864, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 10), align 4
  br label %.loopexit71.19

; <label>:6865:                                   ; preds = %.lr.ph141.19
  %6866 = load i8*, i8** @optarg, align 8
  %6867 = call i32 @getmac(i8* %6866, i32 1, i8* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 9, i64 0))
  %6868 = icmp ne i32 %6867, 0
  br i1 %6868, label %308, label %.loopexit71.19

; <label>:6869:                                   ; preds = %.lr.ph141.19
  store i32 0, i32* %27, align 4
  %6870 = load i8*, i8** @optarg, align 8
  %6871 = load i8, i8* %6870, align 1
  %6872 = sext i8 %6871 to i32
  %6873 = icmp ne i32 %6872, 0
  br i1 %6873, label %.lr.ph136.preheader.19, label %._crit_edge137.19

.lr.ph136.preheader.19:                           ; preds = %6869
  br label %.lr.ph136.19

.lr.ph136.19:                                     ; preds = %6920, %.lr.ph136.preheader.19
  %.02134.19 = phi i32 [ %.13.19, %6920 ], [ 0, %.lr.ph136.preheader.19 ]
  call void @unroll_loop(i32 125)
  %6874 = sext i32 %.02134.19 to i64
  %6875 = getelementptr inbounds i8, i8* %6870, i64 %6874
  %6876 = load i8, i8* %6875, align 1
  %6877 = sext i8 %6876 to i32
  %6878 = icmp eq i32 %6877, 120
  br i1 %6878, label %6879, label %6882

; <label>:6879:                                   ; preds = %.lr.ph136.19
  %6880 = sext i32 %.02134.19 to i64
  %6881 = getelementptr inbounds i8, i8* %6870, i64 %6880
  store i8 88, i8* %6881, align 1
  br label %6882

; <label>:6882:                                   ; preds = %6879, %.lr.ph136.19
  %6883 = sext i32 %.02134.19 to i64
  %6884 = getelementptr inbounds i8, i8* %6870, i64 %6883
  %6885 = load i8, i8* %6884, align 1
  %6886 = sext i8 %6885 to i32
  %6887 = icmp eq i32 %6886, 121
  br i1 %6887, label %6888, label %6891

; <label>:6888:                                   ; preds = %6882
  %6889 = sext i32 %.02134.19 to i64
  %6890 = getelementptr inbounds i8, i8* %6870, i64 %6889
  store i8 89, i8* %6890, align 1
  br label %6891

; <label>:6891:                                   ; preds = %6888, %6882
  %6892 = sext i32 %.02134.19 to i64
  %6893 = getelementptr inbounds i8, i8* %6870, i64 %6892
  %6894 = load i8, i8* %6893, align 1
  %6895 = sext i8 %6894 to i32
  %6896 = icmp eq i32 %6895, 45
  br i1 %6896, label %6918, label %6897

; <label>:6897:                                   ; preds = %6891
  %6898 = sext i32 %.02134.19 to i64
  %6899 = getelementptr inbounds i8, i8* %6870, i64 %6898
  %6900 = load i8, i8* %6899, align 1
  %6901 = sext i8 %6900 to i32
  %6902 = icmp eq i32 %6901, 58
  br i1 %6902, label %6918, label %6903

; <label>:6903:                                   ; preds = %6897
  %6904 = sext i32 %.02134.19 to i64
  %6905 = getelementptr inbounds i8, i8* %6870, i64 %6904
  %6906 = load i8, i8* %6905, align 1
  %6907 = sext i8 %6906 to i32
  %6908 = icmp eq i32 %6907, 32
  br i1 %6908, label %6918, label %6909

; <label>:6909:                                   ; preds = %6903
  %6910 = add nsw i32 %.02134.19, 1
  %6911 = sext i32 %.02134.19 to i64
  %6912 = getelementptr inbounds i8, i8* %6870, i64 %6911
  %6913 = load i8, i8* %6912, align 1
  %6914 = load i32, i32* %27, align 4
  %6915 = add nsw i32 %6914, 1
  store i32 %6915, i32* %27, align 4
  %6916 = sext i32 %6914 to i64
  %6917 = getelementptr inbounds i8, i8* %6870, i64 %6916
  store i8 %6913, i8* %6917, align 1
  br label %6920

; <label>:6918:                                   ; preds = %6903, %6897, %6891
  %6919 = add nsw i32 %.02134.19, 1
  br label %6920

; <label>:6920:                                   ; preds = %6918, %6909
  %.13.19 = phi i32 [ %6919, %6918 ], [ %6910, %6909 ]
  %6921 = sext i32 %.13.19 to i64
  %6922 = getelementptr inbounds i8, i8* %6870, i64 %6921
  %6923 = load i8, i8* %6922, align 1
  %6924 = sext i8 %6923 to i32
  %6925 = icmp ne i32 %6924, 0
  br i1 %6925, label %.lr.ph136.19, label %._crit_edge137.loopexit.19

._crit_edge137.loopexit.19:                       ; preds = %6920
  br label %._crit_edge137.19

._crit_edge137.19:                                ; preds = %._crit_edge137.loopexit.19, %6869
  %6926 = load i32, i32* %27, align 4
  %6927 = sext i32 %6926 to i64
  %6928 = getelementptr inbounds i8, i8* %6870, i64 %6927
  store i8 0, i8* %6928, align 1
  %6929 = load i8, i8* %6870, align 1
  store i8 %6929, i8* %61, align 16
  %6930 = getelementptr inbounds i8, i8* %6870, i64 1
  %6931 = load i8, i8* %6930, align 1
  store i8 %6931, i8* %62, align 1
  store i8 0, i8* %63, align 2
  %scevgep45.19 = getelementptr i8, i8* %6870, i64 3
  br label %6932

; <label>:6932:                                   ; preds = %6990, %._crit_edge137.19
  %lsr.iv48.19 = phi i8* [ %scevgep49.19, %6990 ], [ %scevgep45.19, %._crit_edge137.19 ]
  %.127.19 = phi i32 [ 0, %._crit_edge137.19 ], [ %.329.19, %6990 ]
  %.24.19 = phi i32 [ 0, %._crit_edge137.19 ], [ %.46.19, %6990 ]
  call void @unroll_loop(i32 126)
  %6933 = call i32 (i8*, i8*, ...) @sscanf(i8* %64, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.72, i64 0, i64 0), i32* %27) #9
  %6934 = icmp eq i32 %6933, 1
  br i1 %6934, label %.critedge.19, label %6935

; <label>:6935:                                   ; preds = %6932
  %6936 = load i8, i8* %66, align 16
  %6937 = sext i8 %6936 to i32
  %6938 = icmp eq i32 %6937, 88
  br i1 %6938, label %6939, label %6943

; <label>:6939:                                   ; preds = %6935
  %6940 = load i8, i8* %69, align 1
  %6941 = sext i8 %6940 to i32
  %6942 = icmp eq i32 %6941, 88
  br i1 %6942, label %.critedge.19, label %6943

; <label>:6943:                                   ; preds = %6939, %6935
  %6944 = load i8, i8* %70, align 16
  %6945 = sext i8 %6944 to i32
  %6946 = icmp eq i32 %6945, 89
  %6947 = load i8, i8* %71, align 1
  %6948 = sext i8 %6947 to i32
  %6949 = icmp eq i32 %6948, 89
  %6950 = select i1 %6946, i1 %6949, i1 false
  br i1 %6950, label %.critedge.19, label %.loopexit71.loopexit.19

.critedge.19:                                     ; preds = %6943, %6939, %6932
  %6951 = load i8, i8* %65, align 16
  %6952 = sext i8 %6951 to i32
  %6953 = icmp eq i32 %6952, 88
  br i1 %6953, label %6954, label %6958

; <label>:6954:                                   ; preds = %.critedge.19
  %6955 = load i8, i8* %67, align 1
  %6956 = sext i8 %6955 to i32
  %6957 = icmp eq i32 %6956, 88
  br i1 %6957, label %6984, label %6958

; <label>:6958:                                   ; preds = %6954, %.critedge.19
  %6959 = load i8, i8* %68, align 16
  %6960 = sext i8 %6959 to i32
  %6961 = icmp eq i32 %6960, 89
  br i1 %6961, label %6962, label %6966

; <label>:6962:                                   ; preds = %6958
  %6963 = load i8, i8* %74, align 1
  %6964 = sext i8 %6963 to i32
  %6965 = icmp eq i32 %6964, 89
  br i1 %6965, label %6979, label %6966

; <label>:6966:                                   ; preds = %6962, %6958
  %6967 = load i32, i32* %27, align 4
  %6968 = icmp slt i32 %6967, 0
  %6969 = load i32, i32* %27, align 4
  %6970 = icmp sgt i32 %6969, 255
  %or.cond.19 = or i1 %6968, %6970
  br i1 %or.cond.19, label %.loopexit25, label %6971

; <label>:6971:                                   ; preds = %6966
  %6972 = load i32, i32* %27, align 4
  %6973 = trunc i32 %6972 to i8
  %6974 = sext i32 %.24.19 to i64
  %6975 = getelementptr inbounds [64 x i8], [64 x i8]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 7), i64 0, i64 %6974
  store i8 %6973, i8* %6975, align 1
  %6976 = add nsw i32 %.24.19, 1
  %6977 = sext i32 %.24.19 to i64
  %6978 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 8), i64 0, i64 %6977
  store i32 1, i32* %6978, align 4
  br label %6988

; <label>:6979:                                   ; preds = %6962
  %6980 = add nsw i32 %.24.19, 1
  %6981 = add nsw i32 %.127.19, 1
  %6982 = sext i32 %.127.19 to i64
  %6983 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 31), i64 0, i64 %6982
  store i32 %.24.19, i32* %6983, align 4
  br label %6988

; <label>:6984:                                   ; preds = %6954
  %6985 = add nsw i32 %.24.19, 1
  %6986 = sext i32 %.24.19 to i64
  %6987 = getelementptr inbounds [64 x i32], [64 x i32]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 8), i64 0, i64 %6986
  store i32 0, i32* %6987, align 4
  br label %6988

; <label>:6988:                                   ; preds = %6984, %6979, %6971
  %.329.19 = phi i32 [ %.127.19, %6984 ], [ %6981, %6979 ], [ %.127.19, %6971 ]
  %.46.19 = phi i32 [ %6985, %6984 ], [ %6980, %6979 ], [ %6976, %6971 ]
  %6989 = icmp sge i32 %.46.19, 64
  br i1 %6989, label %.loopexit71.loopexit.19, label %6990

; <label>:6990:                                   ; preds = %6988
  %scevgep50.19 = getelementptr i8, i8* %lsr.iv48.19, i64 -1
  %6991 = load i8, i8* %scevgep50.19, align 1
  store i8 %6991, i8* %72, align 16
  %6992 = load i8, i8* %lsr.iv48.19, align 1
  store i8 %6992, i8* %73, align 1
  %scevgep49.19 = getelementptr i8, i8* %lsr.iv48.19, i64 2
  br label %6932

.loopexit71.loopexit.19:                          ; preds = %6988, %6943
  %.531.ph.19 = phi i32 [ %.329.19, %6988 ], [ %.127.19, %6943 ]
  br label %.loopexit71.19

; <label>:6993:                                   ; preds = %.lr.ph141.19
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 41), align 4
  br label %.loopexit71.19

; <label>:6994:                                   ; preds = %.lr.ph141.19
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 16), align 4
  br label %.loopexit71.19

; <label>:6995:                                   ; preds = %.lr.ph141.19
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 14), align 4
  br label %.loopexit71.19

; <label>:6996:                                   ; preds = %.lr.ph141.19
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 38), align 8
  br label %.loopexit71.19

; <label>:6997:                                   ; preds = %.lr.ph141.19
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 15), align 8
  br label %.loopexit71.19

; <label>:6998:                                   ; preds = %.lr.ph141.19
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 6), align 8
  br label %.loopexit71.19

; <label>:6999:                                   ; preds = %.lr.ph141.19
  %7000 = load i8*, i8** @optarg, align 8
  %7001 = call i32 (i8*, i8*, ...) @sscanf(i8* %7000, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 5)) #9
  %7002 = icmp ne i32 %7001, 1
  br i1 %7002, label %160, label %7003

; <label>:7003:                                   ; preds = %6999
  %7004 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 5), align 4
  %7005 = icmp slt i32 %7004, 1
  br i1 %7005, label %160, label %7006

; <label>:7006:                                   ; preds = %7003
  %7007 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 5), align 4
  %7008 = icmp sgt i32 %7007, 128
  br i1 %7008, label %160, label %.loopexit71.19

; <label>:7009:                                   ; preds = %.lr.ph141.19
  %7010 = load i8*, i8** @optarg, align 8
  %7011 = call i32 @getmac(i8* %7010, i32 1, i8* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 4, i64 0))
  %7012 = icmp ne i32 %7011, 0
  br i1 %7012, label %142, label %7013

; <label>:7013:                                   ; preds = %7009
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 2), align 8
  br label %.loopexit71.19

; <label>:7014:                                   ; preds = %.lr.ph141.19
  call void @llvm.memset.p0i8.i64(i8* align 4 getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 3, i64 0), i8 0, i64 33, i1 false)
  %7015 = load i8*, i8** @optarg, align 8
  %7016 = call i8* @strncpy(i8* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 3, i64 0), i8* %7015, i64 32) #9, !track !220
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 1), align 4
  br label %.loopexit71.19

; <label>:7017:                                   ; preds = %.lr.ph141.19
  %7018 = load i8*, i8** @optarg, align 8
  %7019 = call i32 (i8*, i8*, ...) @sscanf(i8* %7018, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.93, i64 0, i64 0), i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 0)) #9
  %7020 = load i8*, i8** @optarg, align 8
  %7021 = call i32 @strcasecmp(i8* %7020, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.94, i64 0, i64 0)) #10
  %7022 = icmp eq i32 %7021, 0
  br i1 %7022, label %7028, label %7023

; <label>:7023:                                   ; preds = %7017
  %7024 = load i8*, i8** @optarg, align 8
  %7025 = call i32 @strcasecmp(i8* %7024, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.95, i64 0, i64 0)) #10
  %7026 = icmp eq i32 %7025, 0
  br i1 %7026, label %7027, label %7029

; <label>:7027:                                   ; preds = %7023
  store i32 2, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 0), align 8
  br label %7029

; <label>:7028:                                   ; preds = %7017
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 0), align 8
  br label %7029

; <label>:7029:                                   ; preds = %7028, %7027, %7023
  %7030 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 0), align 8
  %7031 = icmp ne i32 %7030, 1
  br i1 %7031, label %7032, label %.loopexit71.19

; <label>:7032:                                   ; preds = %7029
  %7033 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 0), align 8
  %7034 = icmp ne i32 %7033, 2
  br i1 %7034, label %128, label %.loopexit71.19

; <label>:7035:                                   ; preds = %.lr.ph141.19
  %7036 = icmp ne i32 %.134.18, 0
  br i1 %7036, label %102, label %7037

; <label>:7037:                                   ; preds = %7035
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 40), align 8
  store i32 0, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 20), align 4
  br label %.loopexit71.19

.loopexit71.19:                                   ; preds = %7037, %7032, %7029, %7014, %7013, %7006, %6998, %6997, %6996, %6995, %6994, %6993, %.loopexit71.loopexit.19, %6865, %6861, %6839, %6829, %6820, %6804, %6792, %6782, %6772, %6762, %6761, %6760, %6759, %6758, %6754, %6753, %6751, %6749, %6740
  %.531.19 = phi i32 [ %.531.18, %6753 ], [ %.531.18, %6758 ], [ %.531.18, %6759 ], [ %.531.18, %6760 ], [ %.531.18, %6761 ], [ %.531.18, %6792 ], [ %.531.18, %6804 ], [ %.531.18, %6820 ], [ %.531.18, %6861 ], [ %.531.18, %6993 ], [ %.531.18, %6994 ], [ %.531.18, %6995 ], [ %.531.18, %6996 ], [ %.531.18, %6997 ], [ %.531.18, %6998 ], [ %.531.18, %7013 ], [ %.531.18, %7014 ], [ %.531.18, %7037 ], [ %.531.18, %7032 ], [ %.531.18, %7029 ], [ %.531.18, %7006 ], [ %.531.18, %6865 ], [ %.531.18, %6839 ], [ %.531.18, %6829 ], [ %.531.18, %6782 ], [ %.531.18, %6772 ], [ %.531.18, %6762 ], [ %.531.18, %6754 ], [ %.531.18, %6749 ], [ %.531.18, %6751 ], [ %.531.18, %6740 ], [ %.531.ph.19, %.loopexit71.loopexit.19 ]
  call void @__loop_iteration_test___0()
  store i32 0, i32* %30, align 4
  %7038 = call i32 @getopt_long(i32 4, i8** %25, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.86, i64 0, i64 0), %struct.option* getelementptr inbounds ([10 x %struct.option], [10 x %struct.option]* @main.long_options, i64 0, i64 0), i32* %30) #9, !track_argc !219
  br label %._crit_edge142.loopexit
}

declare void @__loop_termination_test___0()

declare void @__loop_iteration_test___0()

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @set_dicts_clone(i8*) #0 {
  %2 = alloca i8*, align 8, !track !210
  store i8* %0, i8** %2, align 8
  %3 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 23
  store i32 0, i32* %3, align 8
  %4 = getelementptr [2 x i8], [2 x i8]* @.str.6, i32 0, i32 0
  %5 = call i8* @strsep(i8** %2, i8* %4) #9
  br label %6

; <label>:6:                                      ; preds = %6, %1
  %lsr.iv = phi i64 [ -1024, %1 ], [ %lsr.iv.next, %6 ]
  %lsr.iv1 = inttoptr i64 %lsr.iv to i8**
  call void @unroll_loop(i32 116)
  %uglygep = getelementptr i8, i8* bitcast (%struct.options* @opt to i8*), i64 %lsr.iv
  %uglygep2 = bitcast i8* %uglygep to i8**
  %scevgep = getelementptr i8*, i8** %uglygep2, i64 182
  store i8* null, i8** %scevgep, align 8
  %lsr.iv.next = add nsw i64 %lsr.iv, 8
  %exitcond = icmp ne i64 %lsr.iv.next, 0
  br i1 %exitcond, label %6, label %.preheader

.preheader:                                       ; preds = %6
  %.02.ph = phi i8* [ %5, %6 ]
  call void @unroll_loop(i32 117)
  %7 = icmp ne i8* %.02.ph, null
  %8 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 23
  %9 = load i32, i32* %8, align 8
  %10 = icmp slt i32 %9, 128
  %11 = select i1 %7, i1 %10, i1 false
  br i1 %11, label %.lr.ph.preheader, label %._crit_edge

.lr.ph.preheader:                                 ; preds = %.preheader
  br label %.lr.ph

.lr.ph:                                           ; preds = %49, %.lr.ph.preheader
  %.021 = phi i8* [ %50, %49 ], [ %.02.ph, %.lr.ph.preheader ]
  %12 = call i64 @strlen(i8* %.021) #10
  %13 = add i64 %12, 1
  %14 = trunc i64 %13 to i32
  %15 = sext i32 %14 to i64
  %16 = mul i64 %15, 1
  %17 = call noalias i8* @malloc(i64 %16) #9, !track !211
  %18 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %19
  store i8* %17, i8** %20, align 8
  %21 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %22
  %24 = load i8*, i8** %23, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %26, label %28

; <label>:26:                                     ; preds = %.lr.ph
  %27 = getelementptr [19 x i8], [19 x i8]* @.str.73, i32 0, i32 0
  call void @perror(i8* %27)
  br label %65

; <label>:28:                                     ; preds = %.lr.ph
  %29 = call i32 @strncasecmp(i8* %.021, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.74, i64 0, i64 0), i64 2) #10
  %30 = icmp eq i32 %29, 0
  %31 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %32 = sext i32 %31 to i64
  %33 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %32
  %34 = load i8*, i8** %33, align 8
  br i1 %30, label %35, label %43

; <label>:35:                                     ; preds = %28
  %36 = getelementptr inbounds i8, i8* %.021, i64 2
  %37 = sub nsw i32 %14, 2
  %38 = sext i32 %37 to i64
  %39 = call i8* @strncpy(i8* %34, i8* %36, i64 %38) #9, !track !212
  %40 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %41 = sext i32 %40 to i64
  %42 = getelementptr inbounds [128 x i32], [128 x i32]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 25), i64 0, i64 %41
  store i32 1, i32* %42, align 4
  br label %49

; <label>:43:                                     ; preds = %28
  %44 = sext i32 %14 to i64
  %45 = call i8* @strncpy(i8* %34, i8* %.021, i64 %44) #9, !track !213
  %46 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %47 = sext i32 %46 to i64
  %48 = getelementptr inbounds [128 x i32], [128 x i32]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 25), i64 0, i64 %47
  store i32 0, i32* %48, align 4
  br label %49

; <label>:49:                                     ; preds = %43, %35
  %50 = call i8* @strsep(i8** %2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0)) #9
  %51 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %52 = add nsw i32 %51, 1
  store i32 %52, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  call void @unroll_loop(i32 117)
  %53 = icmp ne i8* %50, null
  %54 = load i32, i32* %8, align 8
  %55 = icmp slt i32 %54, 128
  %56 = select i1 %53, i1 %55, i1 false
  br i1 %56, label %.lr.ph, label %._crit_edge.loopexit

._crit_edge.loopexit:                             ; preds = %49
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %.preheader
  %57 = call i32 @next_dict(i32 0)
  br label %58

; <label>:58:                                     ; preds = %58, %._crit_edge
  %59 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %60 = add nsw i32 %59, 1
  %61 = call i32 @next_dict(i32 %60)
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %58, label %63

; <label>:63:                                     ; preds = %58
  %64 = call i32 @next_dict(i32 0)
  br label %65

; <label>:65:                                     ; preds = %63, %26
  %.0 = phi i32 [ 1, %26 ], [ 0, %63 ]
  ret i32 %.0
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @set_dicts_clone_clone(i8*) #0 {
  %2 = alloca i8*, align 8, !track !210
  store i8* %0, i8** %2, align 8
  %3 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 23
  store i32 0, i32* %3, align 8
  %4 = getelementptr [2 x i8], [2 x i8]* @.str.6, i32 0, i32 0
  %5 = call i8* @strsep(i8** %2, i8* %4) #9
  br label %6

; <label>:6:                                      ; preds = %1
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 0), align 8
  br i1 true, label %67, label %.preheader

.preheader:                                       ; preds
  %.02.ph = phi i8* [ %5, %6 ], [ %5, %67 ], [ %5, %68 ], [ %5, %69 ], [ %5, %70 ], [ %5, %71 ], [ %5, %72 ], [ %5, %73 ], [ %5, %74 ], [ %5, %75 ], [ %5, %76 ], [ %5, %77 ], [ %5, %78 ], [ %5, %79 ], [ %5, %80 ], [ %5, %81 ], [ %5, %82 ], [ %5, %83 ], [ %5, %84 ], [ %5, %85 ], [ %5, %86 ], [ %5, %87 ], [ %5, %88 ], [ %5, %89 ], [ %5, %90 ], [ %5, %91 ], [ %5, %92 ], [ %5, %93 ], [ %5, %94 ], [ %5, %95 ], [ %5, %96 ], [ %5, %97 ], [ %5, %98 ], [ %5, %99 ], [ %5, %100 ], [ %5, %101 ], [ %5, %102 ], [ %5, %103 ], [ %5, %104 ], [ %5, %105 ], [ %5, %106 ], [ %5, %107 ], [ %5, %108 ], [ %5, %109 ], [ %5, %110 ], [ %5, %111 ], [ %5, %112 ], [ %5, %113 ], [ %5, %114 ], [ %5, %115 ], [ %5, %116 ], [ %5, %117 ], [ %5, %118 ], [ %5, %119 ], [ %5, %120 ], [ %5, %121 ], [ %5, %122 ], [ %5, %123 ], [ %5, %124 ], [ %5, %125 ], [ %5, %126 ], [ %5, %127 ], [ %5, %128 ], [ %5, %129 ], [ %5, %130 ], [ %5, %131 ], [ %5, %132 ], [ %5, %133 ], [ %5, %134 ], [ %5, %135 ], [ %5, %136 ], [ %5, %137 ], [ %5, %138 ], [ %5, %139 ], [ %5, %140 ], [ %5, %141 ], [ %5, %142 ], [ %5, %143 ], [ %5, %144 ], [ %5, %145 ], [ %5, %146 ], [ %5, %147 ], [ %5, %148 ], [ %5, %149 ], [ %5, %150 ], [ %5, %151 ], [ %5, %152 ], [ %5, %153 ], [ %5, %154 ], [ %5, %155 ], [ %5, %156 ], [ %5, %157 ], [ %5, %158 ], [ %5, %159 ], [ %5, %160 ], [ %5, %161 ], [ %5, %162 ], [ %5, %163 ], [ %5, %164 ], [ %5, %165 ], [ %5, %166 ], [ %5, %167 ], [ %5, %168 ], [ %5, %169 ], [ %5, %170 ], [ %5, %171 ], [ %5, %172 ], [ %5, %173 ], [ %5, %174 ], [ %5, %175 ], [ %5, %176 ], [ %5, %177 ], [ %5, %178 ], [ %5, %179 ], [ %5, %180 ], [ %5, %181 ], [ %5, %182 ], [ %5, %183 ], [ %5, %184 ], [ %5, %185 ], [ %5, %186 ], [ %5, %187 ], [ %5, %188 ], [ %5, %189 ], [ %5, %190 ], [ %5, %191 ], [ %5, %192 ], [ %5, %193 ]
  call void @__loop_termination_test___1()
  call void @unroll_loop(i32 117)
  %7 = icmp ne i64 10000785, 0
  %8 = icmp ne i8* %.02.ph, null
  %9 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 23
  %10 = load i32, i32* %9, align 8
  %11 = icmp slt i32 0, 128
  %12 = select i1 true, i1 true, i1 false
  br i1 true, label %.lr.ph.preheader, label %._crit_edge

.lr.ph.preheader:                                 ; preds = %.preheader
  br label %.lr.ph

.lr.ph:                                           ; preds = %50, %.lr.ph.preheader
  %.021 = phi i8* [ %51, %50 ], [ %.02.ph, %.lr.ph.preheader ]
  %13 = call i64 @strlen(i8* %.021) #10
  %14 = add i64 %13, 1
  %15 = trunc i64 %14 to i32
  %16 = sext i32 %15 to i64
  %17 = mul i64 %16, 1
  %18 = call noalias i8* @malloc(i64 %17) #9, !track !211
  %19 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %20
  store i8* %18, i8** %21, align 8
  %22 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %23 = sext i32 %22 to i64
  %24 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %23
  %25 = load i8*, i8** %24, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %27, label %29

; <label>:27:                                     ; preds = %.lr.ph
  %28 = getelementptr [19 x i8], [19 x i8]* @.str.73, i32 0, i32 0
  call void @perror(i8* %28)
  br label %66

; <label>:29:                                     ; preds = %.lr.ph
  %30 = call i32 @strncasecmp(i8* %.021, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.74, i64 0, i64 0), i64 2) #10
  %31 = icmp eq i32 %30, 0
  %32 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %33
  %35 = load i8*, i8** %34, align 8
  br i1 %31, label %36, label %44

; <label>:36:                                     ; preds = %29
  %37 = getelementptr inbounds i8, i8* %.021, i64 2
  %38 = sub nsw i32 %15, 2
  %39 = sext i32 %38 to i64
  %40 = call i8* @strncpy(i8* %35, i8* %37, i64 %39) #9, !track !212
  %41 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %42 = sext i32 %41 to i64
  %43 = getelementptr inbounds [128 x i32], [128 x i32]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 25), i64 0, i64 %42
  store i32 1, i32* %43, align 4
  br label %50

; <label>:44:                                     ; preds = %29
  %45 = sext i32 %15 to i64
  %46 = call i8* @strncpy(i8* %35, i8* %.021, i64 %45) #9, !track !213
  %47 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds [128 x i32], [128 x i32]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 25), i64 0, i64 %48
  store i32 0, i32* %49, align 4
  br label %50

; <label>:50:                                     ; preds = %44, %36
  %51 = call i8* @strsep(i8** %2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0)) #9
  %52 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %53 = add nsw i32 %52, 1
  store i32 %53, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  call void @unroll_loop(i32 117)
  %54 = icmp ne i8* %51, null
  %55 = load i32, i32* %9, align 8
  %56 = icmp slt i32 %55, 128
  %57 = select i1 %54, i1 %56, i1 false
  br i1 %57, label %.lr.ph, label %._crit_edge.loopexit

._crit_edge.loopexit:                             ; preds = %50
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %.preheader
  %58 = call i32 @next_dict(i32 0)
  br label %59

; <label>:59:                                     ; preds = %59, %._crit_edge
  %60 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %61 = add nsw i32 %60, 1
  %62 = call i32 @next_dict(i32 %61)
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %59, label %64

; <label>:64:                                     ; preds = %59
  %65 = call i32 @next_dict(i32 0)
  br label %66

; <label>:66:                                     ; preds = %64, %27
  %.0 = phi i32 [ 1, %27 ], [ 0, %64 ]
  ret i32 %.0

; <label>:67:                                     ; preds = %6
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 1), align 8
  br i1 true, label %68, label %.preheader

; <label>:68:                                     ; preds = %67
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 2), align 8
  br i1 true, label %69, label %.preheader

; <label>:69:                                     ; preds = %68
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 3), align 8
  br i1 true, label %70, label %.preheader

; <label>:70:                                     ; preds = %69
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 4), align 8
  br i1 true, label %71, label %.preheader

; <label>:71:                                     ; preds = %70
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 5), align 8
  br i1 true, label %72, label %.preheader

; <label>:72:                                     ; preds = %71
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 6), align 8
  br i1 true, label %73, label %.preheader

; <label>:73:                                     ; preds = %72
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 7), align 8
  br i1 true, label %74, label %.preheader

; <label>:74:                                     ; preds = %73
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 8), align 8
  br i1 true, label %75, label %.preheader

; <label>:75:                                     ; preds = %74
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 9), align 8
  br i1 true, label %76, label %.preheader

; <label>:76:                                     ; preds = %75
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 10), align 8
  br i1 true, label %77, label %.preheader

; <label>:77:                                     ; preds = %76
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 11), align 8
  br i1 true, label %78, label %.preheader

; <label>:78:                                     ; preds = %77
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 12), align 8
  br i1 true, label %79, label %.preheader

; <label>:79:                                     ; preds = %78
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 13), align 8
  br i1 true, label %80, label %.preheader

; <label>:80:                                     ; preds = %79
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 14), align 8
  br i1 true, label %81, label %.preheader

; <label>:81:                                     ; preds = %80
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 15), align 8
  br i1 true, label %82, label %.preheader

; <label>:82:                                     ; preds = %81
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 16), align 8
  br i1 true, label %83, label %.preheader

; <label>:83:                                     ; preds = %82
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 17), align 8
  br i1 true, label %84, label %.preheader

; <label>:84:                                     ; preds = %83
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 18), align 8
  br i1 true, label %85, label %.preheader

; <label>:85:                                     ; preds = %84
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 19), align 8
  br i1 true, label %86, label %.preheader

; <label>:86:                                     ; preds = %85
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 20), align 8
  br i1 true, label %87, label %.preheader

; <label>:87:                                     ; preds = %86
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 21), align 8
  br i1 true, label %88, label %.preheader

; <label>:88:                                     ; preds = %87
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 22), align 8
  br i1 true, label %89, label %.preheader

; <label>:89:                                     ; preds = %88
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 23), align 8
  br i1 true, label %90, label %.preheader

; <label>:90:                                     ; preds = %89
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 24), align 8
  br i1 true, label %91, label %.preheader

; <label>:91:                                     ; preds = %90
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 25), align 8
  br i1 true, label %92, label %.preheader

; <label>:92:                                     ; preds = %91
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 26), align 8
  br i1 true, label %93, label %.preheader

; <label>:93:                                     ; preds = %92
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 27), align 8
  br i1 true, label %94, label %.preheader

; <label>:94:                                     ; preds = %93
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 28), align 8
  br i1 true, label %95, label %.preheader

; <label>:95:                                     ; preds = %94
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 29), align 8
  br i1 true, label %96, label %.preheader

; <label>:96:                                     ; preds = %95
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 30), align 8
  br i1 true, label %97, label %.preheader

; <label>:97:                                     ; preds = %96
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 31), align 8
  br i1 true, label %98, label %.preheader

; <label>:98:                                     ; preds = %97
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 32), align 8
  br i1 true, label %99, label %.preheader

; <label>:99:                                     ; preds = %98
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 33), align 8
  br i1 true, label %100, label %.preheader

; <label>:100:                                    ; preds = %99
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 34), align 8
  br i1 true, label %101, label %.preheader

; <label>:101:                                    ; preds = %100
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 35), align 8
  br i1 true, label %102, label %.preheader

; <label>:102:                                    ; preds = %101
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 36), align 8
  br i1 true, label %103, label %.preheader

; <label>:103:                                    ; preds = %102
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 37), align 8
  br i1 true, label %104, label %.preheader

; <label>:104:                                    ; preds = %103
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 38), align 8
  br i1 true, label %105, label %.preheader

; <label>:105:                                    ; preds = %104
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 39), align 8
  br i1 true, label %106, label %.preheader

; <label>:106:                                    ; preds = %105
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 40), align 8
  br i1 true, label %107, label %.preheader

; <label>:107:                                    ; preds = %106
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 41), align 8
  br i1 true, label %108, label %.preheader

; <label>:108:                                    ; preds = %107
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 42), align 8
  br i1 true, label %109, label %.preheader

; <label>:109:                                    ; preds = %108
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 43), align 8
  br i1 true, label %110, label %.preheader

; <label>:110:                                    ; preds = %109
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 44), align 8
  br i1 true, label %111, label %.preheader

; <label>:111:                                    ; preds = %110
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 45), align 8
  br i1 true, label %112, label %.preheader

; <label>:112:                                    ; preds = %111
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 46), align 8
  br i1 true, label %113, label %.preheader

; <label>:113:                                    ; preds = %112
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 47), align 8
  br i1 true, label %114, label %.preheader

; <label>:114:                                    ; preds = %113
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 48), align 8
  br i1 true, label %115, label %.preheader

; <label>:115:                                    ; preds = %114
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 49), align 8
  br i1 true, label %116, label %.preheader

; <label>:116:                                    ; preds = %115
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 50), align 8
  br i1 true, label %117, label %.preheader

; <label>:117:                                    ; preds = %116
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 51), align 8
  br i1 true, label %118, label %.preheader

; <label>:118:                                    ; preds = %117
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 52), align 8
  br i1 true, label %119, label %.preheader

; <label>:119:                                    ; preds = %118
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 53), align 8
  br i1 true, label %120, label %.preheader

; <label>:120:                                    ; preds = %119
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 54), align 8
  br i1 true, label %121, label %.preheader

; <label>:121:                                    ; preds = %120
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 55), align 8
  br i1 true, label %122, label %.preheader

; <label>:122:                                    ; preds = %121
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 56), align 8
  br i1 true, label %123, label %.preheader

; <label>:123:                                    ; preds = %122
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 57), align 8
  br i1 true, label %124, label %.preheader

; <label>:124:                                    ; preds = %123
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 58), align 8
  br i1 true, label %125, label %.preheader

; <label>:125:                                    ; preds = %124
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 59), align 8
  br i1 true, label %126, label %.preheader

; <label>:126:                                    ; preds = %125
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 60), align 8
  br i1 true, label %127, label %.preheader

; <label>:127:                                    ; preds = %126
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 61), align 8
  br i1 true, label %128, label %.preheader

; <label>:128:                                    ; preds = %127
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 62), align 8
  br i1 true, label %129, label %.preheader

; <label>:129:                                    ; preds = %128
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 63), align 8
  br i1 true, label %130, label %.preheader

; <label>:130:                                    ; preds = %129
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 64), align 8
  br i1 true, label %131, label %.preheader

; <label>:131:                                    ; preds = %130
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 65), align 8
  br i1 true, label %132, label %.preheader

; <label>:132:                                    ; preds = %131
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 66), align 8
  br i1 true, label %133, label %.preheader

; <label>:133:                                    ; preds = %132
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 67), align 8
  br i1 true, label %134, label %.preheader

; <label>:134:                                    ; preds = %133
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 68), align 8
  br i1 true, label %135, label %.preheader

; <label>:135:                                    ; preds = %134
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 69), align 8
  br i1 true, label %136, label %.preheader

; <label>:136:                                    ; preds = %135
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 70), align 8
  br i1 true, label %137, label %.preheader

; <label>:137:                                    ; preds = %136
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 71), align 8
  br i1 true, label %138, label %.preheader

; <label>:138:                                    ; preds = %137
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 72), align 8
  br i1 true, label %139, label %.preheader

; <label>:139:                                    ; preds = %138
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 73), align 8
  br i1 true, label %140, label %.preheader

; <label>:140:                                    ; preds = %139
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 74), align 8
  br i1 true, label %141, label %.preheader

; <label>:141:                                    ; preds = %140
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 75), align 8
  br i1 true, label %142, label %.preheader

; <label>:142:                                    ; preds = %141
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 76), align 8
  br i1 true, label %143, label %.preheader

; <label>:143:                                    ; preds = %142
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 77), align 8
  br i1 true, label %144, label %.preheader

; <label>:144:                                    ; preds = %143
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 78), align 8
  br i1 true, label %145, label %.preheader

; <label>:145:                                    ; preds = %144
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 79), align 8
  br i1 true, label %146, label %.preheader

; <label>:146:                                    ; preds = %145
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 80), align 8
  br i1 true, label %147, label %.preheader

; <label>:147:                                    ; preds = %146
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 81), align 8
  br i1 true, label %148, label %.preheader

; <label>:148:                                    ; preds = %147
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 82), align 8
  br i1 true, label %149, label %.preheader

; <label>:149:                                    ; preds = %148
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 83), align 8
  br i1 true, label %150, label %.preheader

; <label>:150:                                    ; preds = %149
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 84), align 8
  br i1 true, label %151, label %.preheader

; <label>:151:                                    ; preds = %150
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 85), align 8
  br i1 true, label %152, label %.preheader

; <label>:152:                                    ; preds = %151
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 86), align 8
  br i1 true, label %153, label %.preheader

; <label>:153:                                    ; preds = %152
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 87), align 8
  br i1 true, label %154, label %.preheader

; <label>:154:                                    ; preds = %153
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 88), align 8
  br i1 true, label %155, label %.preheader

; <label>:155:                                    ; preds = %154
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 89), align 8
  br i1 true, label %156, label %.preheader

; <label>:156:                                    ; preds = %155
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 90), align 8
  br i1 true, label %157, label %.preheader

; <label>:157:                                    ; preds = %156
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 91), align 8
  br i1 true, label %158, label %.preheader

; <label>:158:                                    ; preds = %157
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 92), align 8
  br i1 true, label %159, label %.preheader

; <label>:159:                                    ; preds = %158
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 93), align 8
  br i1 true, label %160, label %.preheader

; <label>:160:                                    ; preds = %159
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 94), align 8
  br i1 true, label %161, label %.preheader

; <label>:161:                                    ; preds = %160
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 95), align 8
  br i1 true, label %162, label %.preheader

; <label>:162:                                    ; preds = %161
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 96), align 8
  br i1 true, label %163, label %.preheader

; <label>:163:                                    ; preds = %162
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 97), align 8
  br i1 true, label %164, label %.preheader

; <label>:164:                                    ; preds = %163
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 98), align 8
  br i1 true, label %165, label %.preheader

; <label>:165:                                    ; preds = %164
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 99), align 8
  br i1 true, label %166, label %.preheader

; <label>:166:                                    ; preds = %165
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 100), align 8
  br i1 true, label %167, label %.preheader

; <label>:167:                                    ; preds = %166
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 101), align 8
  br i1 true, label %168, label %.preheader

; <label>:168:                                    ; preds = %167
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 102), align 8
  br i1 true, label %169, label %.preheader

; <label>:169:                                    ; preds = %168
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 103), align 8
  br i1 true, label %170, label %.preheader

; <label>:170:                                    ; preds = %169
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 104), align 8
  br i1 true, label %171, label %.preheader

; <label>:171:                                    ; preds = %170
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 105), align 8
  br i1 true, label %172, label %.preheader

; <label>:172:                                    ; preds = %171
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 106), align 8
  br i1 true, label %173, label %.preheader

; <label>:173:                                    ; preds = %172
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 107), align 8
  br i1 true, label %174, label %.preheader

; <label>:174:                                    ; preds = %173
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 108), align 8
  br i1 true, label %175, label %.preheader

; <label>:175:                                    ; preds = %174
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 109), align 8
  br i1 true, label %176, label %.preheader

; <label>:176:                                    ; preds = %175
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 110), align 8
  br i1 true, label %177, label %.preheader

; <label>:177:                                    ; preds = %176
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 111), align 8
  br i1 true, label %178, label %.preheader

; <label>:178:                                    ; preds = %177
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 112), align 8
  br i1 true, label %179, label %.preheader

; <label>:179:                                    ; preds = %178
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 113), align 8
  br i1 true, label %180, label %.preheader

; <label>:180:                                    ; preds = %179
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 114), align 8
  br i1 true, label %181, label %.preheader

; <label>:181:                                    ; preds = %180
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 115), align 8
  br i1 true, label %182, label %.preheader

; <label>:182:                                    ; preds = %181
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 116), align 8
  br i1 true, label %183, label %.preheader

; <label>:183:                                    ; preds = %182
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 117), align 8
  br i1 true, label %184, label %.preheader

; <label>:184:                                    ; preds = %183
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 118), align 8
  br i1 true, label %185, label %.preheader

; <label>:185:                                    ; preds = %184
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 119), align 8
  br i1 true, label %186, label %.preheader

; <label>:186:                                    ; preds = %185
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 120), align 8
  br i1 true, label %187, label %.preheader

; <label>:187:                                    ; preds = %186
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 121), align 8
  br i1 true, label %188, label %.preheader

; <label>:188:                                    ; preds = %187
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 122), align 8
  br i1 true, label %189, label %.preheader

; <label>:189:                                    ; preds = %188
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 123), align 8
  br i1 true, label %190, label %.preheader

; <label>:190:                                    ; preds = %189
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 124), align 8
  br i1 true, label %191, label %.preheader

; <label>:191:                                    ; preds = %190
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 125), align 8
  br i1 true, label %192, label %.preheader

; <label>:192:                                    ; preds = %191
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 126), align 8
  br i1 true, label %193, label %.preheader

; <label>:193:                                    ; preds = %192
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 127), align 8
  br label %.preheader
}

declare void @__loop_termination_test___1()

declare void @__loop_iteration_test___1()

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @set_dicts_clone_clone_clone(i8*) #0 {
  %2 = alloca i8*, align 8, !track !210
  store i8* %0, i8** %2, align 8
  %3 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 23
  store i32 0, i32* %3, align 8
  %4 = getelementptr [2 x i8], [2 x i8]* @.str.6, i32 0, i32 0
  %5 = call i8* @strsep(i8** %2, i8* %4) #9
  br label %6

; <label>:6:                                      ; preds = %1
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 0), align 8
  br i1 true, label %71, label %.preheader

.preheader:                                       ; preds
  %.02.ph = phi i8* [ %5, %6 ], [ %5, %71 ], [ %5, %72 ], [ %5, %73 ], [ %5, %74 ], [ %5, %75 ], [ %5, %76 ], [ %5, %77 ], [ %5, %78 ], [ %5, %79 ], [ %5, %80 ], [ %5, %81 ], [ %5, %82 ], [ %5, %83 ], [ %5, %84 ], [ %5, %85 ], [ %5, %86 ], [ %5, %87 ], [ %5, %88 ], [ %5, %89 ], [ %5, %90 ], [ %5, %91 ], [ %5, %92 ], [ %5, %93 ], [ %5, %94 ], [ %5, %95 ], [ %5, %96 ], [ %5, %97 ], [ %5, %98 ], [ %5, %99 ], [ %5, %100 ], [ %5, %101 ], [ %5, %102 ], [ %5, %103 ], [ %5, %104 ], [ %5, %105 ], [ %5, %106 ], [ %5, %107 ], [ %5, %108 ], [ %5, %109 ], [ %5, %110 ], [ %5, %111 ], [ %5, %112 ], [ %5, %113 ], [ %5, %114 ], [ %5, %115 ], [ %5, %116 ], [ %5, %117 ], [ %5, %118 ], [ %5, %119 ], [ %5, %120 ], [ %5, %121 ], [ %5, %122 ], [ %5, %123 ], [ %5, %124 ], [ %5, %125 ], [ %5, %126 ], [ %5, %127 ], [ %5, %128 ], [ %5, %129 ], [ %5, %130 ], [ %5, %131 ], [ %5, %132 ], [ %5, %133 ], [ %5, %134 ], [ %5, %135 ], [ %5, %136 ], [ %5, %137 ], [ %5, %138 ], [ %5, %139 ], [ %5, %140 ], [ %5, %141 ], [ %5, %142 ], [ %5, %143 ], [ %5, %144 ], [ %5, %145 ], [ %5, %146 ], [ %5, %147 ], [ %5, %148 ], [ %5, %149 ], [ %5, %150 ], [ %5, %151 ], [ %5, %152 ], [ %5, %153 ], [ %5, %154 ], [ %5, %155 ], [ %5, %156 ], [ %5, %157 ], [ %5, %158 ], [ %5, %159 ], [ %5, %160 ], [ %5, %161 ], [ %5, %162 ], [ %5, %163 ], [ %5, %164 ], [ %5, %165 ], [ %5, %166 ], [ %5, %167 ], [ %5, %168 ], [ %5, %169 ], [ %5, %170 ], [ %5, %171 ], [ %5, %172 ], [ %5, %173 ], [ %5, %174 ], [ %5, %175 ], [ %5, %176 ], [ %5, %177 ], [ %5, %178 ], [ %5, %179 ], [ %5, %180 ], [ %5, %181 ], [ %5, %182 ], [ %5, %183 ], [ %5, %184 ], [ %5, %185 ], [ %5, %186 ], [ %5, %187 ], [ %5, %188 ], [ %5, %189 ], [ %5, %190 ], [ %5, %191 ], [ %5, %192 ], [ %5, %193 ], [ %5, %194 ], [ %5, %195 ], [ %5, %196 ], [ %5, %197 ]
  call void @__loop_termination_test___1()
  call void @unroll_loop(i32 117)
  %7 = icmp ne i64 10000785, 0
  %8 = icmp ne i8* %.02.ph, null
  %9 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 23
  %10 = load i32, i32* %9, align 8
  %11 = icmp slt i32 0, 128
  %12 = select i1 true, i1 true, i1 false
  br i1 true, label %.lr.ph.preheader, label %._crit_edge

.lr.ph.preheader:                                 ; preds = %.preheader
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader
  %13 = getelementptr [13 x i8], [13 x i8]* @5, i64 0, i64 0
  %14 = call i64 @strlen(i8* %13) #10
  %15 = add i64 12, 1
  %16 = trunc i64 13 to i32
  %17 = sext i32 13 to i64
  %18 = call noalias i8* @malloc(i64 13) #9, !track !211
  %19 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %20 = sext i32 0 to i64
  %21 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 0
  store i8* %18, i8** %21, align 8
  %22 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %23 = sext i32 0 to i64
  %24 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 0
  %25 = load i8*, i8** %24, align 8
  %26 = icmp eq i64 10000886, 0
  %27 = icmp eq i8* %25, null
  br i1 false, label %28, label %30

; <label>:28:                                     ; preds = %.lr.ph.19, %.lr.ph.18, %.lr.ph.17, %.lr.ph.16, %.lr.ph.15, %.lr.ph.14, %.lr.ph.13, %.lr.ph.12, %.lr.ph.11, %.lr.ph.10, %.lr.ph.9, %.lr.ph.8, %.lr.ph.7, %.lr.ph.6, %.lr.ph.5, %.lr.ph.4, %.lr.ph.3, %.lr.ph.2, %.lr.ph.1, %.lr.ph
  call void @__loop_termination_test___2()
  %29 = getelementptr [19 x i8], [19 x i8]* @.str.73, i32 0, i32 0
  call void @perror(i8* %29)
  br label %70

; <label>:30:                                     ; preds = %.lr.ph
  %31 = getelementptr [13 x i8], [13 x i8]* @6, i64 0, i64 0
  %32 = getelementptr [3 x i8], [3 x i8]* @7, i64 0, i64 0
  %33 = call i32 @strncasecmp(i8* %31, i8* %32, i64 2) #10
  %34 = icmp eq i32 %33, 0
  %35 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %36 = sext i32 0 to i64
  %37 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 0
  %38 = load i8*, i8** %37, align 8
  br i1 %34, label %39, label %47

; <label>:39:                                     ; preds = %30
  %40 = getelementptr inbounds i8, i8* %.02.ph, i64 2
  %41 = sub nsw i32 13, 2
  %42 = sext i32 11 to i64
  %43 = call i8* @strncpy(i8* %38, i8* %40, i64 11) #9, !track !212
  %44 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %45 = sext i32 0 to i64
  %46 = getelementptr inbounds [128 x i32], [128 x i32]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 25), i64 0, i64 0
  store i32 1, i32* %46, align 4
  br label %53

; <label>:47:                                     ; preds = %30
  %48 = sext i32 13 to i64
  %49 = call i8* @strncpy(i8* %38, i8* %.02.ph, i64 13) #9, !track !213
  %50 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %51 = sext i32 0 to i64
  %52 = getelementptr inbounds [128 x i32], [128 x i32]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 25), i64 0, i64 0
  store i32 0, i32* %52, align 4
  br label %53

; <label>:53:                                     ; preds = %47, %39
  call void @__loop_iteration_test___2()
  %54 = call i8* @strsep(i8** %2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0)) #9
  %55 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %56 = add nsw i32 0, 1
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  call void @unroll_loop(i32 117)
  %57 = icmp ne i64 0, 0
  %58 = icmp ne i8* null, null
  %59 = load i32, i32* %9, align 8
  %60 = icmp slt i32 1, 128
  %61 = select i1 false, i1 true, i1 false
  br i1 false, label %.lr.ph.1, label %._crit_edge.loopexit

._crit_edge.loopexit:                             ; preds = %988, %946, %904, %862, %820, %778, %736, %694, %652, %610, %568, %526, %484, %442, %400, %358, %316, %274, %232, %53
  call void @__loop_termination_test___2()
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %.preheader
  %62 = call i32 @next_dict_clone_clone(i32 0)
  br label %63

; <label>:63:                                     ; preds = %63, %._crit_edge
  %64 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %65 = add nsw i32 %64, 1
  %66 = call i32 @next_dict(i32 %65)
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %63, label %68

; <label>:68:                                     ; preds = %63
  %69 = call i32 @next_dict_clone.50_clone(i32 0)
  br label %70

; <label>:70:                                     ; preds = %68, %28
  %.0 = phi i32 [ 1, %28 ], [ 0, %68 ]
  ret i32 0

; <label>:71:                                     ; preds = %6
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 1), align 8
  br i1 true, label %72, label %.preheader

; <label>:72:                                     ; preds = %71
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 2), align 8
  br i1 true, label %73, label %.preheader

; <label>:73:                                     ; preds = %72
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 3), align 8
  br i1 true, label %74, label %.preheader

; <label>:74:                                     ; preds = %73
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 4), align 8
  br i1 true, label %75, label %.preheader

; <label>:75:                                     ; preds = %74
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 5), align 8
  br i1 true, label %76, label %.preheader

; <label>:76:                                     ; preds = %75
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 6), align 8
  br i1 true, label %77, label %.preheader

; <label>:77:                                     ; preds = %76
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 7), align 8
  br i1 true, label %78, label %.preheader

; <label>:78:                                     ; preds = %77
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 8), align 8
  br i1 true, label %79, label %.preheader

; <label>:79:                                     ; preds = %78
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 9), align 8
  br i1 true, label %80, label %.preheader

; <label>:80:                                     ; preds = %79
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 10), align 8
  br i1 true, label %81, label %.preheader

; <label>:81:                                     ; preds = %80
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 11), align 8
  br i1 true, label %82, label %.preheader

; <label>:82:                                     ; preds = %81
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 12), align 8
  br i1 true, label %83, label %.preheader

; <label>:83:                                     ; preds = %82
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 13), align 8
  br i1 true, label %84, label %.preheader

; <label>:84:                                     ; preds = %83
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 14), align 8
  br i1 true, label %85, label %.preheader

; <label>:85:                                     ; preds = %84
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 15), align 8
  br i1 true, label %86, label %.preheader

; <label>:86:                                     ; preds = %85
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 16), align 8
  br i1 true, label %87, label %.preheader

; <label>:87:                                     ; preds = %86
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 17), align 8
  br i1 true, label %88, label %.preheader

; <label>:88:                                     ; preds = %87
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 18), align 8
  br i1 true, label %89, label %.preheader

; <label>:89:                                     ; preds = %88
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 19), align 8
  br i1 true, label %90, label %.preheader

; <label>:90:                                     ; preds = %89
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 20), align 8
  br i1 true, label %91, label %.preheader

; <label>:91:                                     ; preds = %90
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 21), align 8
  br i1 true, label %92, label %.preheader

; <label>:92:                                     ; preds = %91
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 22), align 8
  br i1 true, label %93, label %.preheader

; <label>:93:                                     ; preds = %92
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 23), align 8
  br i1 true, label %94, label %.preheader

; <label>:94:                                     ; preds = %93
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 24), align 8
  br i1 true, label %95, label %.preheader

; <label>:95:                                     ; preds = %94
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 25), align 8
  br i1 true, label %96, label %.preheader

; <label>:96:                                     ; preds = %95
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 26), align 8
  br i1 true, label %97, label %.preheader

; <label>:97:                                     ; preds = %96
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 27), align 8
  br i1 true, label %98, label %.preheader

; <label>:98:                                     ; preds = %97
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 28), align 8
  br i1 true, label %99, label %.preheader

; <label>:99:                                     ; preds = %98
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 29), align 8
  br i1 true, label %100, label %.preheader

; <label>:100:                                    ; preds = %99
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 30), align 8
  br i1 true, label %101, label %.preheader

; <label>:101:                                    ; preds = %100
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 31), align 8
  br i1 true, label %102, label %.preheader

; <label>:102:                                    ; preds = %101
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 32), align 8
  br i1 true, label %103, label %.preheader

; <label>:103:                                    ; preds = %102
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 33), align 8
  br i1 true, label %104, label %.preheader

; <label>:104:                                    ; preds = %103
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 34), align 8
  br i1 true, label %105, label %.preheader

; <label>:105:                                    ; preds = %104
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 35), align 8
  br i1 true, label %106, label %.preheader

; <label>:106:                                    ; preds = %105
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 36), align 8
  br i1 true, label %107, label %.preheader

; <label>:107:                                    ; preds = %106
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 37), align 8
  br i1 true, label %108, label %.preheader

; <label>:108:                                    ; preds = %107
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 38), align 8
  br i1 true, label %109, label %.preheader

; <label>:109:                                    ; preds = %108
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 39), align 8
  br i1 true, label %110, label %.preheader

; <label>:110:                                    ; preds = %109
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 40), align 8
  br i1 true, label %111, label %.preheader

; <label>:111:                                    ; preds = %110
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 41), align 8
  br i1 true, label %112, label %.preheader

; <label>:112:                                    ; preds = %111
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 42), align 8
  br i1 true, label %113, label %.preheader

; <label>:113:                                    ; preds = %112
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 43), align 8
  br i1 true, label %114, label %.preheader

; <label>:114:                                    ; preds = %113
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 44), align 8
  br i1 true, label %115, label %.preheader

; <label>:115:                                    ; preds = %114
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 45), align 8
  br i1 true, label %116, label %.preheader

; <label>:116:                                    ; preds = %115
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 46), align 8
  br i1 true, label %117, label %.preheader

; <label>:117:                                    ; preds = %116
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 47), align 8
  br i1 true, label %118, label %.preheader

; <label>:118:                                    ; preds = %117
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 48), align 8
  br i1 true, label %119, label %.preheader

; <label>:119:                                    ; preds = %118
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 49), align 8
  br i1 true, label %120, label %.preheader

; <label>:120:                                    ; preds = %119
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 50), align 8
  br i1 true, label %121, label %.preheader

; <label>:121:                                    ; preds = %120
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 51), align 8
  br i1 true, label %122, label %.preheader

; <label>:122:                                    ; preds = %121
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 52), align 8
  br i1 true, label %123, label %.preheader

; <label>:123:                                    ; preds = %122
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 53), align 8
  br i1 true, label %124, label %.preheader

; <label>:124:                                    ; preds = %123
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 54), align 8
  br i1 true, label %125, label %.preheader

; <label>:125:                                    ; preds = %124
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 55), align 8
  br i1 true, label %126, label %.preheader

; <label>:126:                                    ; preds = %125
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 56), align 8
  br i1 true, label %127, label %.preheader

; <label>:127:                                    ; preds = %126
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 57), align 8
  br i1 true, label %128, label %.preheader

; <label>:128:                                    ; preds = %127
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 58), align 8
  br i1 true, label %129, label %.preheader

; <label>:129:                                    ; preds = %128
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 59), align 8
  br i1 true, label %130, label %.preheader

; <label>:130:                                    ; preds = %129
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 60), align 8
  br i1 true, label %131, label %.preheader

; <label>:131:                                    ; preds = %130
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 61), align 8
  br i1 true, label %132, label %.preheader

; <label>:132:                                    ; preds = %131
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 62), align 8
  br i1 true, label %133, label %.preheader

; <label>:133:                                    ; preds = %132
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 63), align 8
  br i1 true, label %134, label %.preheader

; <label>:134:                                    ; preds = %133
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 64), align 8
  br i1 true, label %135, label %.preheader

; <label>:135:                                    ; preds = %134
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 65), align 8
  br i1 true, label %136, label %.preheader

; <label>:136:                                    ; preds = %135
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 66), align 8
  br i1 true, label %137, label %.preheader

; <label>:137:                                    ; preds = %136
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 67), align 8
  br i1 true, label %138, label %.preheader

; <label>:138:                                    ; preds = %137
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 68), align 8
  br i1 true, label %139, label %.preheader

; <label>:139:                                    ; preds = %138
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 69), align 8
  br i1 true, label %140, label %.preheader

; <label>:140:                                    ; preds = %139
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 70), align 8
  br i1 true, label %141, label %.preheader

; <label>:141:                                    ; preds = %140
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 71), align 8
  br i1 true, label %142, label %.preheader

; <label>:142:                                    ; preds = %141
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 72), align 8
  br i1 true, label %143, label %.preheader

; <label>:143:                                    ; preds = %142
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 73), align 8
  br i1 true, label %144, label %.preheader

; <label>:144:                                    ; preds = %143
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 74), align 8
  br i1 true, label %145, label %.preheader

; <label>:145:                                    ; preds = %144
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 75), align 8
  br i1 true, label %146, label %.preheader

; <label>:146:                                    ; preds = %145
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 76), align 8
  br i1 true, label %147, label %.preheader

; <label>:147:                                    ; preds = %146
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 77), align 8
  br i1 true, label %148, label %.preheader

; <label>:148:                                    ; preds = %147
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 78), align 8
  br i1 true, label %149, label %.preheader

; <label>:149:                                    ; preds = %148
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 79), align 8
  br i1 true, label %150, label %.preheader

; <label>:150:                                    ; preds = %149
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 80), align 8
  br i1 true, label %151, label %.preheader

; <label>:151:                                    ; preds = %150
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 81), align 8
  br i1 true, label %152, label %.preheader

; <label>:152:                                    ; preds = %151
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 82), align 8
  br i1 true, label %153, label %.preheader

; <label>:153:                                    ; preds = %152
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 83), align 8
  br i1 true, label %154, label %.preheader

; <label>:154:                                    ; preds = %153
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 84), align 8
  br i1 true, label %155, label %.preheader

; <label>:155:                                    ; preds = %154
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 85), align 8
  br i1 true, label %156, label %.preheader

; <label>:156:                                    ; preds = %155
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 86), align 8
  br i1 true, label %157, label %.preheader

; <label>:157:                                    ; preds = %156
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 87), align 8
  br i1 true, label %158, label %.preheader

; <label>:158:                                    ; preds = %157
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 88), align 8
  br i1 true, label %159, label %.preheader

; <label>:159:                                    ; preds = %158
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 89), align 8
  br i1 true, label %160, label %.preheader

; <label>:160:                                    ; preds = %159
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 90), align 8
  br i1 true, label %161, label %.preheader

; <label>:161:                                    ; preds = %160
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 91), align 8
  br i1 true, label %162, label %.preheader

; <label>:162:                                    ; preds = %161
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 92), align 8
  br i1 true, label %163, label %.preheader

; <label>:163:                                    ; preds = %162
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 93), align 8
  br i1 true, label %164, label %.preheader

; <label>:164:                                    ; preds = %163
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 94), align 8
  br i1 true, label %165, label %.preheader

; <label>:165:                                    ; preds = %164
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 95), align 8
  br i1 true, label %166, label %.preheader

; <label>:166:                                    ; preds = %165
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 96), align 8
  br i1 true, label %167, label %.preheader

; <label>:167:                                    ; preds = %166
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 97), align 8
  br i1 true, label %168, label %.preheader

; <label>:168:                                    ; preds = %167
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 98), align 8
  br i1 true, label %169, label %.preheader

; <label>:169:                                    ; preds = %168
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 99), align 8
  br i1 true, label %170, label %.preheader

; <label>:170:                                    ; preds = %169
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 100), align 8
  br i1 true, label %171, label %.preheader

; <label>:171:                                    ; preds = %170
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 101), align 8
  br i1 true, label %172, label %.preheader

; <label>:172:                                    ; preds = %171
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 102), align 8
  br i1 true, label %173, label %.preheader

; <label>:173:                                    ; preds = %172
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 103), align 8
  br i1 true, label %174, label %.preheader

; <label>:174:                                    ; preds = %173
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 104), align 8
  br i1 true, label %175, label %.preheader

; <label>:175:                                    ; preds = %174
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 105), align 8
  br i1 true, label %176, label %.preheader

; <label>:176:                                    ; preds = %175
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 106), align 8
  br i1 true, label %177, label %.preheader

; <label>:177:                                    ; preds = %176
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 107), align 8
  br i1 true, label %178, label %.preheader

; <label>:178:                                    ; preds = %177
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 108), align 8
  br i1 true, label %179, label %.preheader

; <label>:179:                                    ; preds = %178
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 109), align 8
  br i1 true, label %180, label %.preheader

; <label>:180:                                    ; preds = %179
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 110), align 8
  br i1 true, label %181, label %.preheader

; <label>:181:                                    ; preds = %180
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 111), align 8
  br i1 true, label %182, label %.preheader

; <label>:182:                                    ; preds = %181
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 112), align 8
  br i1 true, label %183, label %.preheader

; <label>:183:                                    ; preds = %182
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 113), align 8
  br i1 true, label %184, label %.preheader

; <label>:184:                                    ; preds = %183
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 114), align 8
  br i1 true, label %185, label %.preheader

; <label>:185:                                    ; preds = %184
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 115), align 8
  br i1 true, label %186, label %.preheader

; <label>:186:                                    ; preds = %185
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 116), align 8
  br i1 true, label %187, label %.preheader

; <label>:187:                                    ; preds = %186
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 117), align 8
  br i1 true, label %188, label %.preheader

; <label>:188:                                    ; preds = %187
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 118), align 8
  br i1 true, label %189, label %.preheader

; <label>:189:                                    ; preds = %188
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 119), align 8
  br i1 true, label %190, label %.preheader

; <label>:190:                                    ; preds = %189
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 120), align 8
  br i1 true, label %191, label %.preheader

; <label>:191:                                    ; preds = %190
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 121), align 8
  br i1 true, label %192, label %.preheader

; <label>:192:                                    ; preds = %191
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 122), align 8
  br i1 true, label %193, label %.preheader

; <label>:193:                                    ; preds = %192
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 123), align 8
  br i1 true, label %194, label %.preheader

; <label>:194:                                    ; preds = %193
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 124), align 8
  br i1 true, label %195, label %.preheader

; <label>:195:                                    ; preds = %194
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 125), align 8
  br i1 true, label %196, label %.preheader

; <label>:196:                                    ; preds = %195
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 126), align 8
  br i1 true, label %197, label %.preheader

; <label>:197:                                    ; preds = %196
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 127), align 8
  br label %.preheader

.lr.ph.1:                                         ; preds = %53
  %198 = call i64 @strlen(i8* null) #10
  %199 = add i64 %198, 1
  %200 = trunc i64 %199 to i32
  %201 = sext i32 %200 to i64
  %202 = call noalias i8* @malloc(i64 %201) #9, !track !211
  %203 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %204 = sext i32 %203 to i64
  %205 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %204
  store i8* %202, i8** %205, align 8
  %206 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %207 = sext i32 %206 to i64
  %208 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %207
  %209 = load i8*, i8** %208, align 8
  %210 = icmp eq i8* %209, null
  br i1 %210, label %28, label %211

; <label>:211:                                    ; preds = %.lr.ph.1
  %212 = call i32 @strncasecmp(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.74, i64 0, i64 0), i64 2) #10
  %213 = icmp eq i32 %212, 0
  %214 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %215 = sext i32 %214 to i64
  %216 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %215
  %217 = load i8*, i8** %216, align 8
  br i1 %213, label %224, label %218

; <label>:218:                                    ; preds = %211
  %219 = sext i32 %200 to i64
  %220 = call i8* @strncpy(i8* %217, i8* null, i64 %219) #9, !track !213
  %221 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %222 = sext i32 %221 to i64
  %223 = getelementptr inbounds [128 x i32], [128 x i32]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 25), i64 0, i64 %222
  store i32 0, i32* %223, align 4
  br label %232

; <label>:224:                                    ; preds = %211
  %225 = getelementptr inbounds i8, i8* null, i64 2
  %226 = sub nsw i32 %200, 2
  %227 = sext i32 %226 to i64
  %228 = call i8* @strncpy(i8* %217, i8* %225, i64 %227) #9, !track !212
  %229 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %230 = sext i32 %229 to i64
  %231 = getelementptr inbounds [128 x i32], [128 x i32]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 25), i64 0, i64 %230
  store i32 1, i32* %231, align 4
  br label %232

; <label>:232:                                    ; preds = %224, %218
  call void @__loop_iteration_test___2()
  %233 = call i8* @strsep(i8** %2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0)) #9
  %234 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %235 = add nsw i32 %234, 1
  store i32 %235, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  call void @unroll_loop(i32 117)
  %236 = icmp ne i8* %233, null
  %237 = load i32, i32* %9, align 8
  %238 = icmp slt i32 %237, 128
  %239 = select i1 %236, i1 %238, i1 false
  br i1 %239, label %.lr.ph.2, label %._crit_edge.loopexit

.lr.ph.2:                                         ; preds = %232
  %240 = call i64 @strlen(i8* %233) #10
  %241 = add i64 %240, 1
  %242 = trunc i64 %241 to i32
  %243 = sext i32 %242 to i64
  %244 = call noalias i8* @malloc(i64 %243) #9, !track !211
  %245 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %246 = sext i32 %245 to i64
  %247 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %246
  store i8* %244, i8** %247, align 8
  %248 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %249 = sext i32 %248 to i64
  %250 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %249
  %251 = load i8*, i8** %250, align 8
  %252 = icmp eq i8* %251, null
  br i1 %252, label %28, label %253

; <label>:253:                                    ; preds = %.lr.ph.2
  %254 = call i32 @strncasecmp(i8* %233, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.74, i64 0, i64 0), i64 2) #10
  %255 = icmp eq i32 %254, 0
  %256 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %257 = sext i32 %256 to i64
  %258 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %257
  %259 = load i8*, i8** %258, align 8
  br i1 %255, label %266, label %260

; <label>:260:                                    ; preds = %253
  %261 = sext i32 %242 to i64
  %262 = call i8* @strncpy(i8* %259, i8* %233, i64 %261) #9, !track !213
  %263 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %264 = sext i32 %263 to i64
  %265 = getelementptr inbounds [128 x i32], [128 x i32]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 25), i64 0, i64 %264
  store i32 0, i32* %265, align 4
  br label %274

; <label>:266:                                    ; preds = %253
  %267 = getelementptr inbounds i8, i8* %233, i64 2
  %268 = sub nsw i32 %242, 2
  %269 = sext i32 %268 to i64
  %270 = call i8* @strncpy(i8* %259, i8* %267, i64 %269) #9, !track !212
  %271 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %272 = sext i32 %271 to i64
  %273 = getelementptr inbounds [128 x i32], [128 x i32]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 25), i64 0, i64 %272
  store i32 1, i32* %273, align 4
  br label %274

; <label>:274:                                    ; preds = %266, %260
  call void @__loop_iteration_test___2()
  %275 = call i8* @strsep(i8** %2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0)) #9
  %276 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %277 = add nsw i32 %276, 1
  store i32 %277, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  call void @unroll_loop(i32 117)
  %278 = icmp ne i8* %275, null
  %279 = load i32, i32* %9, align 8
  %280 = icmp slt i32 %279, 128
  %281 = select i1 %278, i1 %280, i1 false
  br i1 %281, label %.lr.ph.3, label %._crit_edge.loopexit

.lr.ph.3:                                         ; preds = %274
  %282 = call i64 @strlen(i8* %275) #10
  %283 = add i64 %282, 1
  %284 = trunc i64 %283 to i32
  %285 = sext i32 %284 to i64
  %286 = call noalias i8* @malloc(i64 %285) #9, !track !211
  %287 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %288 = sext i32 %287 to i64
  %289 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %288
  store i8* %286, i8** %289, align 8
  %290 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %291 = sext i32 %290 to i64
  %292 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %291
  %293 = load i8*, i8** %292, align 8
  %294 = icmp eq i8* %293, null
  br i1 %294, label %28, label %295

; <label>:295:                                    ; preds = %.lr.ph.3
  %296 = call i32 @strncasecmp(i8* %275, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.74, i64 0, i64 0), i64 2) #10
  %297 = icmp eq i32 %296, 0
  %298 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %299 = sext i32 %298 to i64
  %300 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %299
  %301 = load i8*, i8** %300, align 8
  br i1 %297, label %308, label %302

; <label>:302:                                    ; preds = %295
  %303 = sext i32 %284 to i64
  %304 = call i8* @strncpy(i8* %301, i8* %275, i64 %303) #9, !track !213
  %305 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %306 = sext i32 %305 to i64
  %307 = getelementptr inbounds [128 x i32], [128 x i32]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 25), i64 0, i64 %306
  store i32 0, i32* %307, align 4
  br label %316

; <label>:308:                                    ; preds = %295
  %309 = getelementptr inbounds i8, i8* %275, i64 2
  %310 = sub nsw i32 %284, 2
  %311 = sext i32 %310 to i64
  %312 = call i8* @strncpy(i8* %301, i8* %309, i64 %311) #9, !track !212
  %313 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %314 = sext i32 %313 to i64
  %315 = getelementptr inbounds [128 x i32], [128 x i32]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 25), i64 0, i64 %314
  store i32 1, i32* %315, align 4
  br label %316

; <label>:316:                                    ; preds = %308, %302
  call void @__loop_iteration_test___2()
  %317 = call i8* @strsep(i8** %2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0)) #9
  %318 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %319 = add nsw i32 %318, 1
  store i32 %319, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  call void @unroll_loop(i32 117)
  %320 = icmp ne i8* %317, null
  %321 = load i32, i32* %9, align 8
  %322 = icmp slt i32 %321, 128
  %323 = select i1 %320, i1 %322, i1 false
  br i1 %323, label %.lr.ph.4, label %._crit_edge.loopexit

.lr.ph.4:                                         ; preds = %316
  %324 = call i64 @strlen(i8* %317) #10
  %325 = add i64 %324, 1
  %326 = trunc i64 %325 to i32
  %327 = sext i32 %326 to i64
  %328 = call noalias i8* @malloc(i64 %327) #9, !track !211
  %329 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %330 = sext i32 %329 to i64
  %331 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %330
  store i8* %328, i8** %331, align 8
  %332 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %333 = sext i32 %332 to i64
  %334 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %333
  %335 = load i8*, i8** %334, align 8
  %336 = icmp eq i8* %335, null
  br i1 %336, label %28, label %337

; <label>:337:                                    ; preds = %.lr.ph.4
  %338 = call i32 @strncasecmp(i8* %317, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.74, i64 0, i64 0), i64 2) #10
  %339 = icmp eq i32 %338, 0
  %340 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %341 = sext i32 %340 to i64
  %342 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %341
  %343 = load i8*, i8** %342, align 8
  br i1 %339, label %350, label %344

; <label>:344:                                    ; preds = %337
  %345 = sext i32 %326 to i64
  %346 = call i8* @strncpy(i8* %343, i8* %317, i64 %345) #9, !track !213
  %347 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %348 = sext i32 %347 to i64
  %349 = getelementptr inbounds [128 x i32], [128 x i32]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 25), i64 0, i64 %348
  store i32 0, i32* %349, align 4
  br label %358

; <label>:350:                                    ; preds = %337
  %351 = getelementptr inbounds i8, i8* %317, i64 2
  %352 = sub nsw i32 %326, 2
  %353 = sext i32 %352 to i64
  %354 = call i8* @strncpy(i8* %343, i8* %351, i64 %353) #9, !track !212
  %355 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %356 = sext i32 %355 to i64
  %357 = getelementptr inbounds [128 x i32], [128 x i32]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 25), i64 0, i64 %356
  store i32 1, i32* %357, align 4
  br label %358

; <label>:358:                                    ; preds = %350, %344
  call void @__loop_iteration_test___2()
  %359 = call i8* @strsep(i8** %2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0)) #9
  %360 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %361 = add nsw i32 %360, 1
  store i32 %361, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  call void @unroll_loop(i32 117)
  %362 = icmp ne i8* %359, null
  %363 = load i32, i32* %9, align 8
  %364 = icmp slt i32 %363, 128
  %365 = select i1 %362, i1 %364, i1 false
  br i1 %365, label %.lr.ph.5, label %._crit_edge.loopexit

.lr.ph.5:                                         ; preds = %358
  %366 = call i64 @strlen(i8* %359) #10
  %367 = add i64 %366, 1
  %368 = trunc i64 %367 to i32
  %369 = sext i32 %368 to i64
  %370 = call noalias i8* @malloc(i64 %369) #9, !track !211
  %371 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %372 = sext i32 %371 to i64
  %373 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %372
  store i8* %370, i8** %373, align 8
  %374 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %375 = sext i32 %374 to i64
  %376 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %375
  %377 = load i8*, i8** %376, align 8
  %378 = icmp eq i8* %377, null
  br i1 %378, label %28, label %379

; <label>:379:                                    ; preds = %.lr.ph.5
  %380 = call i32 @strncasecmp(i8* %359, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.74, i64 0, i64 0), i64 2) #10
  %381 = icmp eq i32 %380, 0
  %382 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %383 = sext i32 %382 to i64
  %384 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %383
  %385 = load i8*, i8** %384, align 8
  br i1 %381, label %392, label %386

; <label>:386:                                    ; preds = %379
  %387 = sext i32 %368 to i64
  %388 = call i8* @strncpy(i8* %385, i8* %359, i64 %387) #9, !track !213
  %389 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %390 = sext i32 %389 to i64
  %391 = getelementptr inbounds [128 x i32], [128 x i32]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 25), i64 0, i64 %390
  store i32 0, i32* %391, align 4
  br label %400

; <label>:392:                                    ; preds = %379
  %393 = getelementptr inbounds i8, i8* %359, i64 2
  %394 = sub nsw i32 %368, 2
  %395 = sext i32 %394 to i64
  %396 = call i8* @strncpy(i8* %385, i8* %393, i64 %395) #9, !track !212
  %397 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %398 = sext i32 %397 to i64
  %399 = getelementptr inbounds [128 x i32], [128 x i32]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 25), i64 0, i64 %398
  store i32 1, i32* %399, align 4
  br label %400

; <label>:400:                                    ; preds = %392, %386
  call void @__loop_iteration_test___2()
  %401 = call i8* @strsep(i8** %2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0)) #9
  %402 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %403 = add nsw i32 %402, 1
  store i32 %403, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  call void @unroll_loop(i32 117)
  %404 = icmp ne i8* %401, null
  %405 = load i32, i32* %9, align 8
  %406 = icmp slt i32 %405, 128
  %407 = select i1 %404, i1 %406, i1 false
  br i1 %407, label %.lr.ph.6, label %._crit_edge.loopexit

.lr.ph.6:                                         ; preds = %400
  %408 = call i64 @strlen(i8* %401) #10
  %409 = add i64 %408, 1
  %410 = trunc i64 %409 to i32
  %411 = sext i32 %410 to i64
  %412 = call noalias i8* @malloc(i64 %411) #9, !track !211
  %413 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %414 = sext i32 %413 to i64
  %415 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %414
  store i8* %412, i8** %415, align 8
  %416 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %417 = sext i32 %416 to i64
  %418 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %417
  %419 = load i8*, i8** %418, align 8
  %420 = icmp eq i8* %419, null
  br i1 %420, label %28, label %421

; <label>:421:                                    ; preds = %.lr.ph.6
  %422 = call i32 @strncasecmp(i8* %401, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.74, i64 0, i64 0), i64 2) #10
  %423 = icmp eq i32 %422, 0
  %424 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %425 = sext i32 %424 to i64
  %426 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %425
  %427 = load i8*, i8** %426, align 8
  br i1 %423, label %434, label %428

; <label>:428:                                    ; preds = %421
  %429 = sext i32 %410 to i64
  %430 = call i8* @strncpy(i8* %427, i8* %401, i64 %429) #9, !track !213
  %431 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %432 = sext i32 %431 to i64
  %433 = getelementptr inbounds [128 x i32], [128 x i32]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 25), i64 0, i64 %432
  store i32 0, i32* %433, align 4
  br label %442

; <label>:434:                                    ; preds = %421
  %435 = getelementptr inbounds i8, i8* %401, i64 2
  %436 = sub nsw i32 %410, 2
  %437 = sext i32 %436 to i64
  %438 = call i8* @strncpy(i8* %427, i8* %435, i64 %437) #9, !track !212
  %439 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %440 = sext i32 %439 to i64
  %441 = getelementptr inbounds [128 x i32], [128 x i32]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 25), i64 0, i64 %440
  store i32 1, i32* %441, align 4
  br label %442

; <label>:442:                                    ; preds = %434, %428
  call void @__loop_iteration_test___2()
  %443 = call i8* @strsep(i8** %2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0)) #9
  %444 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %445 = add nsw i32 %444, 1
  store i32 %445, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  call void @unroll_loop(i32 117)
  %446 = icmp ne i8* %443, null
  %447 = load i32, i32* %9, align 8
  %448 = icmp slt i32 %447, 128
  %449 = select i1 %446, i1 %448, i1 false
  br i1 %449, label %.lr.ph.7, label %._crit_edge.loopexit

.lr.ph.7:                                         ; preds = %442
  %450 = call i64 @strlen(i8* %443) #10
  %451 = add i64 %450, 1
  %452 = trunc i64 %451 to i32
  %453 = sext i32 %452 to i64
  %454 = call noalias i8* @malloc(i64 %453) #9, !track !211
  %455 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %456 = sext i32 %455 to i64
  %457 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %456
  store i8* %454, i8** %457, align 8
  %458 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %459 = sext i32 %458 to i64
  %460 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %459
  %461 = load i8*, i8** %460, align 8
  %462 = icmp eq i8* %461, null
  br i1 %462, label %28, label %463

; <label>:463:                                    ; preds = %.lr.ph.7
  %464 = call i32 @strncasecmp(i8* %443, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.74, i64 0, i64 0), i64 2) #10
  %465 = icmp eq i32 %464, 0
  %466 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %467 = sext i32 %466 to i64
  %468 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %467
  %469 = load i8*, i8** %468, align 8
  br i1 %465, label %476, label %470

; <label>:470:                                    ; preds = %463
  %471 = sext i32 %452 to i64
  %472 = call i8* @strncpy(i8* %469, i8* %443, i64 %471) #9, !track !213
  %473 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %474 = sext i32 %473 to i64
  %475 = getelementptr inbounds [128 x i32], [128 x i32]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 25), i64 0, i64 %474
  store i32 0, i32* %475, align 4
  br label %484

; <label>:476:                                    ; preds = %463
  %477 = getelementptr inbounds i8, i8* %443, i64 2
  %478 = sub nsw i32 %452, 2
  %479 = sext i32 %478 to i64
  %480 = call i8* @strncpy(i8* %469, i8* %477, i64 %479) #9, !track !212
  %481 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %482 = sext i32 %481 to i64
  %483 = getelementptr inbounds [128 x i32], [128 x i32]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 25), i64 0, i64 %482
  store i32 1, i32* %483, align 4
  br label %484

; <label>:484:                                    ; preds = %476, %470
  call void @__loop_iteration_test___2()
  %485 = call i8* @strsep(i8** %2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0)) #9
  %486 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %487 = add nsw i32 %486, 1
  store i32 %487, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  call void @unroll_loop(i32 117)
  %488 = icmp ne i8* %485, null
  %489 = load i32, i32* %9, align 8
  %490 = icmp slt i32 %489, 128
  %491 = select i1 %488, i1 %490, i1 false
  br i1 %491, label %.lr.ph.8, label %._crit_edge.loopexit

.lr.ph.8:                                         ; preds = %484
  %492 = call i64 @strlen(i8* %485) #10
  %493 = add i64 %492, 1
  %494 = trunc i64 %493 to i32
  %495 = sext i32 %494 to i64
  %496 = call noalias i8* @malloc(i64 %495) #9, !track !211
  %497 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %498 = sext i32 %497 to i64
  %499 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %498
  store i8* %496, i8** %499, align 8
  %500 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %501 = sext i32 %500 to i64
  %502 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %501
  %503 = load i8*, i8** %502, align 8
  %504 = icmp eq i8* %503, null
  br i1 %504, label %28, label %505

; <label>:505:                                    ; preds = %.lr.ph.8
  %506 = call i32 @strncasecmp(i8* %485, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.74, i64 0, i64 0), i64 2) #10
  %507 = icmp eq i32 %506, 0
  %508 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %509 = sext i32 %508 to i64
  %510 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %509
  %511 = load i8*, i8** %510, align 8
  br i1 %507, label %518, label %512

; <label>:512:                                    ; preds = %505
  %513 = sext i32 %494 to i64
  %514 = call i8* @strncpy(i8* %511, i8* %485, i64 %513) #9, !track !213
  %515 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %516 = sext i32 %515 to i64
  %517 = getelementptr inbounds [128 x i32], [128 x i32]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 25), i64 0, i64 %516
  store i32 0, i32* %517, align 4
  br label %526

; <label>:518:                                    ; preds = %505
  %519 = getelementptr inbounds i8, i8* %485, i64 2
  %520 = sub nsw i32 %494, 2
  %521 = sext i32 %520 to i64
  %522 = call i8* @strncpy(i8* %511, i8* %519, i64 %521) #9, !track !212
  %523 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %524 = sext i32 %523 to i64
  %525 = getelementptr inbounds [128 x i32], [128 x i32]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 25), i64 0, i64 %524
  store i32 1, i32* %525, align 4
  br label %526

; <label>:526:                                    ; preds = %518, %512
  call void @__loop_iteration_test___2()
  %527 = call i8* @strsep(i8** %2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0)) #9
  %528 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %529 = add nsw i32 %528, 1
  store i32 %529, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  call void @unroll_loop(i32 117)
  %530 = icmp ne i8* %527, null
  %531 = load i32, i32* %9, align 8
  %532 = icmp slt i32 %531, 128
  %533 = select i1 %530, i1 %532, i1 false
  br i1 %533, label %.lr.ph.9, label %._crit_edge.loopexit

.lr.ph.9:                                         ; preds = %526
  %534 = call i64 @strlen(i8* %527) #10
  %535 = add i64 %534, 1
  %536 = trunc i64 %535 to i32
  %537 = sext i32 %536 to i64
  %538 = call noalias i8* @malloc(i64 %537) #9, !track !211
  %539 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %540 = sext i32 %539 to i64
  %541 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %540
  store i8* %538, i8** %541, align 8
  %542 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %543 = sext i32 %542 to i64
  %544 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %543
  %545 = load i8*, i8** %544, align 8
  %546 = icmp eq i8* %545, null
  br i1 %546, label %28, label %547

; <label>:547:                                    ; preds = %.lr.ph.9
  %548 = call i32 @strncasecmp(i8* %527, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.74, i64 0, i64 0), i64 2) #10
  %549 = icmp eq i32 %548, 0
  %550 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %551 = sext i32 %550 to i64
  %552 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %551
  %553 = load i8*, i8** %552, align 8
  br i1 %549, label %560, label %554

; <label>:554:                                    ; preds = %547
  %555 = sext i32 %536 to i64
  %556 = call i8* @strncpy(i8* %553, i8* %527, i64 %555) #9, !track !213
  %557 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %558 = sext i32 %557 to i64
  %559 = getelementptr inbounds [128 x i32], [128 x i32]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 25), i64 0, i64 %558
  store i32 0, i32* %559, align 4
  br label %568

; <label>:560:                                    ; preds = %547
  %561 = getelementptr inbounds i8, i8* %527, i64 2
  %562 = sub nsw i32 %536, 2
  %563 = sext i32 %562 to i64
  %564 = call i8* @strncpy(i8* %553, i8* %561, i64 %563) #9, !track !212
  %565 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %566 = sext i32 %565 to i64
  %567 = getelementptr inbounds [128 x i32], [128 x i32]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 25), i64 0, i64 %566
  store i32 1, i32* %567, align 4
  br label %568

; <label>:568:                                    ; preds = %560, %554
  call void @__loop_iteration_test___2()
  %569 = call i8* @strsep(i8** %2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0)) #9
  %570 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %571 = add nsw i32 %570, 1
  store i32 %571, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  call void @unroll_loop(i32 117)
  %572 = icmp ne i8* %569, null
  %573 = load i32, i32* %9, align 8
  %574 = icmp slt i32 %573, 128
  %575 = select i1 %572, i1 %574, i1 false
  br i1 %575, label %.lr.ph.10, label %._crit_edge.loopexit

.lr.ph.10:                                        ; preds = %568
  %576 = call i64 @strlen(i8* %569) #10
  %577 = add i64 %576, 1
  %578 = trunc i64 %577 to i32
  %579 = sext i32 %578 to i64
  %580 = call noalias i8* @malloc(i64 %579) #9, !track !211
  %581 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %582 = sext i32 %581 to i64
  %583 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %582
  store i8* %580, i8** %583, align 8
  %584 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %585 = sext i32 %584 to i64
  %586 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %585
  %587 = load i8*, i8** %586, align 8
  %588 = icmp eq i8* %587, null
  br i1 %588, label %28, label %589

; <label>:589:                                    ; preds = %.lr.ph.10
  %590 = call i32 @strncasecmp(i8* %569, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.74, i64 0, i64 0), i64 2) #10
  %591 = icmp eq i32 %590, 0
  %592 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %593 = sext i32 %592 to i64
  %594 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %593
  %595 = load i8*, i8** %594, align 8
  br i1 %591, label %602, label %596

; <label>:596:                                    ; preds = %589
  %597 = sext i32 %578 to i64
  %598 = call i8* @strncpy(i8* %595, i8* %569, i64 %597) #9, !track !213
  %599 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %600 = sext i32 %599 to i64
  %601 = getelementptr inbounds [128 x i32], [128 x i32]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 25), i64 0, i64 %600
  store i32 0, i32* %601, align 4
  br label %610

; <label>:602:                                    ; preds = %589
  %603 = getelementptr inbounds i8, i8* %569, i64 2
  %604 = sub nsw i32 %578, 2
  %605 = sext i32 %604 to i64
  %606 = call i8* @strncpy(i8* %595, i8* %603, i64 %605) #9, !track !212
  %607 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %608 = sext i32 %607 to i64
  %609 = getelementptr inbounds [128 x i32], [128 x i32]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 25), i64 0, i64 %608
  store i32 1, i32* %609, align 4
  br label %610

; <label>:610:                                    ; preds = %602, %596
  call void @__loop_iteration_test___2()
  %611 = call i8* @strsep(i8** %2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0)) #9
  %612 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %613 = add nsw i32 %612, 1
  store i32 %613, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  call void @unroll_loop(i32 117)
  %614 = icmp ne i8* %611, null
  %615 = load i32, i32* %9, align 8
  %616 = icmp slt i32 %615, 128
  %617 = select i1 %614, i1 %616, i1 false
  br i1 %617, label %.lr.ph.11, label %._crit_edge.loopexit

.lr.ph.11:                                        ; preds = %610
  %618 = call i64 @strlen(i8* %611) #10
  %619 = add i64 %618, 1
  %620 = trunc i64 %619 to i32
  %621 = sext i32 %620 to i64
  %622 = call noalias i8* @malloc(i64 %621) #9, !track !211
  %623 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %624 = sext i32 %623 to i64
  %625 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %624
  store i8* %622, i8** %625, align 8
  %626 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %627 = sext i32 %626 to i64
  %628 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %627
  %629 = load i8*, i8** %628, align 8
  %630 = icmp eq i8* %629, null
  br i1 %630, label %28, label %631

; <label>:631:                                    ; preds = %.lr.ph.11
  %632 = call i32 @strncasecmp(i8* %611, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.74, i64 0, i64 0), i64 2) #10
  %633 = icmp eq i32 %632, 0
  %634 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %635 = sext i32 %634 to i64
  %636 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %635
  %637 = load i8*, i8** %636, align 8
  br i1 %633, label %644, label %638

; <label>:638:                                    ; preds = %631
  %639 = sext i32 %620 to i64
  %640 = call i8* @strncpy(i8* %637, i8* %611, i64 %639) #9, !track !213
  %641 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %642 = sext i32 %641 to i64
  %643 = getelementptr inbounds [128 x i32], [128 x i32]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 25), i64 0, i64 %642
  store i32 0, i32* %643, align 4
  br label %652

; <label>:644:                                    ; preds = %631
  %645 = getelementptr inbounds i8, i8* %611, i64 2
  %646 = sub nsw i32 %620, 2
  %647 = sext i32 %646 to i64
  %648 = call i8* @strncpy(i8* %637, i8* %645, i64 %647) #9, !track !212
  %649 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %650 = sext i32 %649 to i64
  %651 = getelementptr inbounds [128 x i32], [128 x i32]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 25), i64 0, i64 %650
  store i32 1, i32* %651, align 4
  br label %652

; <label>:652:                                    ; preds = %644, %638
  call void @__loop_iteration_test___2()
  %653 = call i8* @strsep(i8** %2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0)) #9
  %654 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %655 = add nsw i32 %654, 1
  store i32 %655, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  call void @unroll_loop(i32 117)
  %656 = icmp ne i8* %653, null
  %657 = load i32, i32* %9, align 8
  %658 = icmp slt i32 %657, 128
  %659 = select i1 %656, i1 %658, i1 false
  br i1 %659, label %.lr.ph.12, label %._crit_edge.loopexit

.lr.ph.12:                                        ; preds = %652
  %660 = call i64 @strlen(i8* %653) #10
  %661 = add i64 %660, 1
  %662 = trunc i64 %661 to i32
  %663 = sext i32 %662 to i64
  %664 = call noalias i8* @malloc(i64 %663) #9, !track !211
  %665 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %666 = sext i32 %665 to i64
  %667 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %666
  store i8* %664, i8** %667, align 8
  %668 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %669 = sext i32 %668 to i64
  %670 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %669
  %671 = load i8*, i8** %670, align 8
  %672 = icmp eq i8* %671, null
  br i1 %672, label %28, label %673

; <label>:673:                                    ; preds = %.lr.ph.12
  %674 = call i32 @strncasecmp(i8* %653, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.74, i64 0, i64 0), i64 2) #10
  %675 = icmp eq i32 %674, 0
  %676 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %677 = sext i32 %676 to i64
  %678 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %677
  %679 = load i8*, i8** %678, align 8
  br i1 %675, label %686, label %680

; <label>:680:                                    ; preds = %673
  %681 = sext i32 %662 to i64
  %682 = call i8* @strncpy(i8* %679, i8* %653, i64 %681) #9, !track !213
  %683 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %684 = sext i32 %683 to i64
  %685 = getelementptr inbounds [128 x i32], [128 x i32]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 25), i64 0, i64 %684
  store i32 0, i32* %685, align 4
  br label %694

; <label>:686:                                    ; preds = %673
  %687 = getelementptr inbounds i8, i8* %653, i64 2
  %688 = sub nsw i32 %662, 2
  %689 = sext i32 %688 to i64
  %690 = call i8* @strncpy(i8* %679, i8* %687, i64 %689) #9, !track !212
  %691 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %692 = sext i32 %691 to i64
  %693 = getelementptr inbounds [128 x i32], [128 x i32]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 25), i64 0, i64 %692
  store i32 1, i32* %693, align 4
  br label %694

; <label>:694:                                    ; preds = %686, %680
  call void @__loop_iteration_test___2()
  %695 = call i8* @strsep(i8** %2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0)) #9
  %696 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %697 = add nsw i32 %696, 1
  store i32 %697, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  call void @unroll_loop(i32 117)
  %698 = icmp ne i8* %695, null
  %699 = load i32, i32* %9, align 8
  %700 = icmp slt i32 %699, 128
  %701 = select i1 %698, i1 %700, i1 false
  br i1 %701, label %.lr.ph.13, label %._crit_edge.loopexit

.lr.ph.13:                                        ; preds = %694
  %702 = call i64 @strlen(i8* %695) #10
  %703 = add i64 %702, 1
  %704 = trunc i64 %703 to i32
  %705 = sext i32 %704 to i64
  %706 = call noalias i8* @malloc(i64 %705) #9, !track !211
  %707 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %708 = sext i32 %707 to i64
  %709 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %708
  store i8* %706, i8** %709, align 8
  %710 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %711 = sext i32 %710 to i64
  %712 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %711
  %713 = load i8*, i8** %712, align 8
  %714 = icmp eq i8* %713, null
  br i1 %714, label %28, label %715

; <label>:715:                                    ; preds = %.lr.ph.13
  %716 = call i32 @strncasecmp(i8* %695, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.74, i64 0, i64 0), i64 2) #10
  %717 = icmp eq i32 %716, 0
  %718 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %719 = sext i32 %718 to i64
  %720 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %719
  %721 = load i8*, i8** %720, align 8
  br i1 %717, label %728, label %722

; <label>:722:                                    ; preds = %715
  %723 = sext i32 %704 to i64
  %724 = call i8* @strncpy(i8* %721, i8* %695, i64 %723) #9, !track !213
  %725 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %726 = sext i32 %725 to i64
  %727 = getelementptr inbounds [128 x i32], [128 x i32]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 25), i64 0, i64 %726
  store i32 0, i32* %727, align 4
  br label %736

; <label>:728:                                    ; preds = %715
  %729 = getelementptr inbounds i8, i8* %695, i64 2
  %730 = sub nsw i32 %704, 2
  %731 = sext i32 %730 to i64
  %732 = call i8* @strncpy(i8* %721, i8* %729, i64 %731) #9, !track !212
  %733 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %734 = sext i32 %733 to i64
  %735 = getelementptr inbounds [128 x i32], [128 x i32]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 25), i64 0, i64 %734
  store i32 1, i32* %735, align 4
  br label %736

; <label>:736:                                    ; preds = %728, %722
  call void @__loop_iteration_test___2()
  %737 = call i8* @strsep(i8** %2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0)) #9
  %738 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %739 = add nsw i32 %738, 1
  store i32 %739, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  call void @unroll_loop(i32 117)
  %740 = icmp ne i8* %737, null
  %741 = load i32, i32* %9, align 8
  %742 = icmp slt i32 %741, 128
  %743 = select i1 %740, i1 %742, i1 false
  br i1 %743, label %.lr.ph.14, label %._crit_edge.loopexit

.lr.ph.14:                                        ; preds = %736
  %744 = call i64 @strlen(i8* %737) #10
  %745 = add i64 %744, 1
  %746 = trunc i64 %745 to i32
  %747 = sext i32 %746 to i64
  %748 = call noalias i8* @malloc(i64 %747) #9, !track !211
  %749 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %750 = sext i32 %749 to i64
  %751 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %750
  store i8* %748, i8** %751, align 8
  %752 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %753 = sext i32 %752 to i64
  %754 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %753
  %755 = load i8*, i8** %754, align 8
  %756 = icmp eq i8* %755, null
  br i1 %756, label %28, label %757

; <label>:757:                                    ; preds = %.lr.ph.14
  %758 = call i32 @strncasecmp(i8* %737, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.74, i64 0, i64 0), i64 2) #10
  %759 = icmp eq i32 %758, 0
  %760 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %761 = sext i32 %760 to i64
  %762 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %761
  %763 = load i8*, i8** %762, align 8
  br i1 %759, label %770, label %764

; <label>:764:                                    ; preds = %757
  %765 = sext i32 %746 to i64
  %766 = call i8* @strncpy(i8* %763, i8* %737, i64 %765) #9, !track !213
  %767 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %768 = sext i32 %767 to i64
  %769 = getelementptr inbounds [128 x i32], [128 x i32]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 25), i64 0, i64 %768
  store i32 0, i32* %769, align 4
  br label %778

; <label>:770:                                    ; preds = %757
  %771 = getelementptr inbounds i8, i8* %737, i64 2
  %772 = sub nsw i32 %746, 2
  %773 = sext i32 %772 to i64
  %774 = call i8* @strncpy(i8* %763, i8* %771, i64 %773) #9, !track !212
  %775 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %776 = sext i32 %775 to i64
  %777 = getelementptr inbounds [128 x i32], [128 x i32]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 25), i64 0, i64 %776
  store i32 1, i32* %777, align 4
  br label %778

; <label>:778:                                    ; preds = %770, %764
  call void @__loop_iteration_test___2()
  %779 = call i8* @strsep(i8** %2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0)) #9
  %780 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %781 = add nsw i32 %780, 1
  store i32 %781, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  call void @unroll_loop(i32 117)
  %782 = icmp ne i8* %779, null
  %783 = load i32, i32* %9, align 8
  %784 = icmp slt i32 %783, 128
  %785 = select i1 %782, i1 %784, i1 false
  br i1 %785, label %.lr.ph.15, label %._crit_edge.loopexit

.lr.ph.15:                                        ; preds = %778
  %786 = call i64 @strlen(i8* %779) #10
  %787 = add i64 %786, 1
  %788 = trunc i64 %787 to i32
  %789 = sext i32 %788 to i64
  %790 = call noalias i8* @malloc(i64 %789) #9, !track !211
  %791 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %792 = sext i32 %791 to i64
  %793 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %792
  store i8* %790, i8** %793, align 8
  %794 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %795 = sext i32 %794 to i64
  %796 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %795
  %797 = load i8*, i8** %796, align 8
  %798 = icmp eq i8* %797, null
  br i1 %798, label %28, label %799

; <label>:799:                                    ; preds = %.lr.ph.15
  %800 = call i32 @strncasecmp(i8* %779, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.74, i64 0, i64 0), i64 2) #10
  %801 = icmp eq i32 %800, 0
  %802 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %803 = sext i32 %802 to i64
  %804 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %803
  %805 = load i8*, i8** %804, align 8
  br i1 %801, label %812, label %806

; <label>:806:                                    ; preds = %799
  %807 = sext i32 %788 to i64
  %808 = call i8* @strncpy(i8* %805, i8* %779, i64 %807) #9, !track !213
  %809 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %810 = sext i32 %809 to i64
  %811 = getelementptr inbounds [128 x i32], [128 x i32]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 25), i64 0, i64 %810
  store i32 0, i32* %811, align 4
  br label %820

; <label>:812:                                    ; preds = %799
  %813 = getelementptr inbounds i8, i8* %779, i64 2
  %814 = sub nsw i32 %788, 2
  %815 = sext i32 %814 to i64
  %816 = call i8* @strncpy(i8* %805, i8* %813, i64 %815) #9, !track !212
  %817 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %818 = sext i32 %817 to i64
  %819 = getelementptr inbounds [128 x i32], [128 x i32]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 25), i64 0, i64 %818
  store i32 1, i32* %819, align 4
  br label %820

; <label>:820:                                    ; preds = %812, %806
  call void @__loop_iteration_test___2()
  %821 = call i8* @strsep(i8** %2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0)) #9
  %822 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %823 = add nsw i32 %822, 1
  store i32 %823, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  call void @unroll_loop(i32 117)
  %824 = icmp ne i8* %821, null
  %825 = load i32, i32* %9, align 8
  %826 = icmp slt i32 %825, 128
  %827 = select i1 %824, i1 %826, i1 false
  br i1 %827, label %.lr.ph.16, label %._crit_edge.loopexit

.lr.ph.16:                                        ; preds = %820
  %828 = call i64 @strlen(i8* %821) #10
  %829 = add i64 %828, 1
  %830 = trunc i64 %829 to i32
  %831 = sext i32 %830 to i64
  %832 = call noalias i8* @malloc(i64 %831) #9, !track !211
  %833 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %834 = sext i32 %833 to i64
  %835 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %834
  store i8* %832, i8** %835, align 8
  %836 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %837 = sext i32 %836 to i64
  %838 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %837
  %839 = load i8*, i8** %838, align 8
  %840 = icmp eq i8* %839, null
  br i1 %840, label %28, label %841

; <label>:841:                                    ; preds = %.lr.ph.16
  %842 = call i32 @strncasecmp(i8* %821, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.74, i64 0, i64 0), i64 2) #10
  %843 = icmp eq i32 %842, 0
  %844 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %845 = sext i32 %844 to i64
  %846 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %845
  %847 = load i8*, i8** %846, align 8
  br i1 %843, label %854, label %848

; <label>:848:                                    ; preds = %841
  %849 = sext i32 %830 to i64
  %850 = call i8* @strncpy(i8* %847, i8* %821, i64 %849) #9, !track !213
  %851 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %852 = sext i32 %851 to i64
  %853 = getelementptr inbounds [128 x i32], [128 x i32]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 25), i64 0, i64 %852
  store i32 0, i32* %853, align 4
  br label %862

; <label>:854:                                    ; preds = %841
  %855 = getelementptr inbounds i8, i8* %821, i64 2
  %856 = sub nsw i32 %830, 2
  %857 = sext i32 %856 to i64
  %858 = call i8* @strncpy(i8* %847, i8* %855, i64 %857) #9, !track !212
  %859 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %860 = sext i32 %859 to i64
  %861 = getelementptr inbounds [128 x i32], [128 x i32]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 25), i64 0, i64 %860
  store i32 1, i32* %861, align 4
  br label %862

; <label>:862:                                    ; preds = %854, %848
  call void @__loop_iteration_test___2()
  %863 = call i8* @strsep(i8** %2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0)) #9
  %864 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %865 = add nsw i32 %864, 1
  store i32 %865, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  call void @unroll_loop(i32 117)
  %866 = icmp ne i8* %863, null
  %867 = load i32, i32* %9, align 8
  %868 = icmp slt i32 %867, 128
  %869 = select i1 %866, i1 %868, i1 false
  br i1 %869, label %.lr.ph.17, label %._crit_edge.loopexit

.lr.ph.17:                                        ; preds = %862
  %870 = call i64 @strlen(i8* %863) #10
  %871 = add i64 %870, 1
  %872 = trunc i64 %871 to i32
  %873 = sext i32 %872 to i64
  %874 = call noalias i8* @malloc(i64 %873) #9, !track !211
  %875 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %876 = sext i32 %875 to i64
  %877 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %876
  store i8* %874, i8** %877, align 8
  %878 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %879 = sext i32 %878 to i64
  %880 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %879
  %881 = load i8*, i8** %880, align 8
  %882 = icmp eq i8* %881, null
  br i1 %882, label %28, label %883

; <label>:883:                                    ; preds = %.lr.ph.17
  %884 = call i32 @strncasecmp(i8* %863, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.74, i64 0, i64 0), i64 2) #10
  %885 = icmp eq i32 %884, 0
  %886 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %887 = sext i32 %886 to i64
  %888 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %887
  %889 = load i8*, i8** %888, align 8
  br i1 %885, label %896, label %890

; <label>:890:                                    ; preds = %883
  %891 = sext i32 %872 to i64
  %892 = call i8* @strncpy(i8* %889, i8* %863, i64 %891) #9, !track !213
  %893 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %894 = sext i32 %893 to i64
  %895 = getelementptr inbounds [128 x i32], [128 x i32]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 25), i64 0, i64 %894
  store i32 0, i32* %895, align 4
  br label %904

; <label>:896:                                    ; preds = %883
  %897 = getelementptr inbounds i8, i8* %863, i64 2
  %898 = sub nsw i32 %872, 2
  %899 = sext i32 %898 to i64
  %900 = call i8* @strncpy(i8* %889, i8* %897, i64 %899) #9, !track !212
  %901 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %902 = sext i32 %901 to i64
  %903 = getelementptr inbounds [128 x i32], [128 x i32]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 25), i64 0, i64 %902
  store i32 1, i32* %903, align 4
  br label %904

; <label>:904:                                    ; preds = %896, %890
  call void @__loop_iteration_test___2()
  %905 = call i8* @strsep(i8** %2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0)) #9
  %906 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %907 = add nsw i32 %906, 1
  store i32 %907, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  call void @unroll_loop(i32 117)
  %908 = icmp ne i8* %905, null
  %909 = load i32, i32* %9, align 8
  %910 = icmp slt i32 %909, 128
  %911 = select i1 %908, i1 %910, i1 false
  br i1 %911, label %.lr.ph.18, label %._crit_edge.loopexit

.lr.ph.18:                                        ; preds = %904
  %912 = call i64 @strlen(i8* %905) #10
  %913 = add i64 %912, 1
  %914 = trunc i64 %913 to i32
  %915 = sext i32 %914 to i64
  %916 = call noalias i8* @malloc(i64 %915) #9, !track !211
  %917 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %918 = sext i32 %917 to i64
  %919 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %918
  store i8* %916, i8** %919, align 8
  %920 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %921 = sext i32 %920 to i64
  %922 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %921
  %923 = load i8*, i8** %922, align 8
  %924 = icmp eq i8* %923, null
  br i1 %924, label %28, label %925

; <label>:925:                                    ; preds = %.lr.ph.18
  %926 = call i32 @strncasecmp(i8* %905, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.74, i64 0, i64 0), i64 2) #10
  %927 = icmp eq i32 %926, 0
  %928 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %929 = sext i32 %928 to i64
  %930 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %929
  %931 = load i8*, i8** %930, align 8
  br i1 %927, label %938, label %932

; <label>:932:                                    ; preds = %925
  %933 = sext i32 %914 to i64
  %934 = call i8* @strncpy(i8* %931, i8* %905, i64 %933) #9, !track !213
  %935 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %936 = sext i32 %935 to i64
  %937 = getelementptr inbounds [128 x i32], [128 x i32]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 25), i64 0, i64 %936
  store i32 0, i32* %937, align 4
  br label %946

; <label>:938:                                    ; preds = %925
  %939 = getelementptr inbounds i8, i8* %905, i64 2
  %940 = sub nsw i32 %914, 2
  %941 = sext i32 %940 to i64
  %942 = call i8* @strncpy(i8* %931, i8* %939, i64 %941) #9, !track !212
  %943 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %944 = sext i32 %943 to i64
  %945 = getelementptr inbounds [128 x i32], [128 x i32]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 25), i64 0, i64 %944
  store i32 1, i32* %945, align 4
  br label %946

; <label>:946:                                    ; preds = %938, %932
  call void @__loop_iteration_test___2()
  %947 = call i8* @strsep(i8** %2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0)) #9
  %948 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %949 = add nsw i32 %948, 1
  store i32 %949, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  call void @unroll_loop(i32 117)
  %950 = icmp ne i8* %947, null
  %951 = load i32, i32* %9, align 8
  %952 = icmp slt i32 %951, 128
  %953 = select i1 %950, i1 %952, i1 false
  br i1 %953, label %.lr.ph.19, label %._crit_edge.loopexit

.lr.ph.19:                                        ; preds = %946
  %954 = call i64 @strlen(i8* %947) #10
  %955 = add i64 %954, 1
  %956 = trunc i64 %955 to i32
  %957 = sext i32 %956 to i64
  %958 = call noalias i8* @malloc(i64 %957) #9, !track !211
  %959 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %960 = sext i32 %959 to i64
  %961 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %960
  store i8* %958, i8** %961, align 8
  %962 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %963 = sext i32 %962 to i64
  %964 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %963
  %965 = load i8*, i8** %964, align 8
  %966 = icmp eq i8* %965, null
  br i1 %966, label %28, label %967

; <label>:967:                                    ; preds = %.lr.ph.19
  %968 = call i32 @strncasecmp(i8* %947, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.74, i64 0, i64 0), i64 2) #10
  %969 = icmp eq i32 %968, 0
  %970 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %971 = sext i32 %970 to i64
  %972 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %971
  %973 = load i8*, i8** %972, align 8
  br i1 %969, label %980, label %974

; <label>:974:                                    ; preds = %967
  %975 = sext i32 %956 to i64
  %976 = call i8* @strncpy(i8* %973, i8* %947, i64 %975) #9, !track !213
  %977 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %978 = sext i32 %977 to i64
  %979 = getelementptr inbounds [128 x i32], [128 x i32]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 25), i64 0, i64 %978
  store i32 0, i32* %979, align 4
  br label %988

; <label>:980:                                    ; preds = %967
  %981 = getelementptr inbounds i8, i8* %947, i64 2
  %982 = sub nsw i32 %956, 2
  %983 = sext i32 %982 to i64
  %984 = call i8* @strncpy(i8* %973, i8* %981, i64 %983) #9, !track !212
  %985 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %986 = sext i32 %985 to i64
  %987 = getelementptr inbounds [128 x i32], [128 x i32]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 25), i64 0, i64 %986
  store i32 1, i32* %987, align 4
  br label %988

; <label>:988:                                    ; preds = %980, %974
  call void @__loop_iteration_test___2()
  %989 = call i8* @strsep(i8** %2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0)) #9
  %990 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %991 = add nsw i32 %990, 1
  store i32 %991, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  call void @unroll_loop(i32 117)
  %992 = icmp ne i8* %989, null
  %993 = load i32, i32* %9, align 8
  %994 = icmp slt i32 %993, 128
  br label %._crit_edge.loopexit
}

declare void @__loop_termination_test___2()

declare void @__loop_iteration_test___2()

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @next_dict_clone(i32) #0 {
  %2 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 22
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %2, align 8
  %4 = icmp ne i64 0, 0
  %5 = icmp ne %struct._IO_FILE* null, null
  br i1 false, label %6, label %16

; <label>:6:                                      ; preds = %1
  %7 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 28
  %8 = load i32, i32* %7, align 8
  %9 = icmp ne i32 %8, 0
  br i1 %9, label %14, label %10

; <label>:10:                                     ; preds = %6
  %11 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 22
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8
  %13 = call i32 @fclose(%struct._IO_FILE* %12)
  br label %14

; <label>:14:                                     ; preds = %10, %6
  %15 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 22
  store %struct._IO_FILE* null, %struct._IO_FILE** %15, align 8
  br label %16

; <label>:16:                                     ; preds = %14, %1
  %17 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 23
  store i32 0, i32* %17, align 8
  %18 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 23
  %19 = load i32, i32* %18, align 8
  %20 = sext i32 0 to i64
  %21 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 21
  %22 = getelementptr inbounds [128 x i8*], [128 x i8*]* %21, i64 0, i64 0
  %23 = load i8*, i8** %22, align 8
  %24 = icmp eq i64 10000886, 0
  %25 = icmp eq i8* %23, null
  br i1 false, label %UnifiedReturnBlock, label %.preheader

.preheader:                                       ; preds = %16
  call void @unroll_loop(i32 108)
  %26 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 23
  %27 = load i32, i32* %26, align 8
  %28 = icmp slt i32 0, 128
  br i1 true, label %.lr.ph.preheader, label %.loopexit

.lr.ph.preheader:                                 ; preds = %.preheader
  br label %.lr.ph

.lr.ph:                                           ; preds = %.backedge, %.lr.ph.preheader
  %29 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %30
  %32 = load i8*, i8** %31, align 8
  %33 = icmp ne i8* %32, null
  br i1 %33, label %34, label %.loopexit.loopexit

; <label>:34:                                     ; preds = %.lr.ph
  %35 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %36 = sext i32 %35 to i64
  %37 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %36
  %38 = load i8*, i8** %37, align 8
  %39 = call i32 @strcmp(i8* %38, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i64 0, i64 0)) #10
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %53

; <label>:41:                                     ; preds = %34
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 28), align 8
  %42 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
  %43 = call i32 @fileno(%struct._IO_FILE* %42) #9
  %44 = call %struct._IO_FILE* @fdopen(i32 %43, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.66, i64 0, i64 0)) #9, !track !201
  store %struct._IO_FILE* %44, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %45 = icmp eq %struct._IO_FILE* %44, null
  br i1 %45, label %46, label %51

; <label>:46:                                     ; preds = %41
  call void @perror(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.67, i64 0, i64 0))
  %47 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %48 = add nsw i32 %47, 1
  store i32 %48, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge

.backedge:                                        ; preds = %70, %60, %46
  call void @unroll_loop(i32 108)
  %49 = load i32, i32* %26, align 8
  %50 = icmp slt i32 %49, 128
  br i1 %50, label %.lr.ph, label %.loopexit.loopexit

; <label>:51:                                     ; preds = %41
  %52 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 24
  store i32 1, i32* %52, align 4
  br label %.loopexit

; <label>:53:                                     ; preds = %34
  store i32 0, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 28), align 8
  %54 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %55 = sext i32 %54 to i64
  %56 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %55
  %57 = load i8*, i8** %56, align 8
  %58 = call %struct._IO_FILE* @fopen64(i8* %57, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.66, i64 0, i64 0)), !track !202
  store %struct._IO_FILE* %58, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %59 = icmp eq %struct._IO_FILE* %58, null
  br i1 %59, label %60, label %63

; <label>:60:                                     ; preds = %53
  call void @perror(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.67, i64 0, i64 0))
  %61 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %62 = add nsw i32 %61, 1
  store i32 %62, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge

; <label>:63:                                     ; preds = %53
  %64 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %65 = call i32 @fseek(%struct._IO_FILE* %64, i64 0, i32 2)
  %66 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %67 = call i64 @ftell(%struct._IO_FILE* %66)
  %68 = icmp sle i64 %67, 0
  %69 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  br i1 %68, label %70, label %75

; <label>:70:                                     ; preds = %63
  %71 = call i32 @fclose(%struct._IO_FILE* %69)
  store %struct._IO_FILE* null, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %72 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.68, i64 0, i64 0))
  %73 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %74 = add nsw i32 %73, 1
  store i32 %74, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge

; <label>:75:                                     ; preds = %63
  %.lcssa = phi %struct._IO_FILE* [ %69, %63 ]
  call void @rewind(%struct._IO_FILE* %.lcssa)
  br label %.loopexit

.loopexit.loopexit:                               ; preds = %.backedge, %.lr.ph
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit.loopexit, %75, %51, %.preheader
  %76 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 23
  %77 = load i32, i32* %76, align 8
  %78 = icmp sge i32 %77, 128
  br i1 %78, label %UnifiedReturnBlock, label %79

; <label>:79:                                     ; preds = %.loopexit
  %80 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 23
  %81 = load i32, i32* %80, align 8
  %82 = sext i32 %81 to i64
  %83 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 21
  %84 = getelementptr inbounds [128 x i8*], [128 x i8*]* %83, i64 0, i64 %82
  %85 = load i8*, i8** %84, align 8
  %86 = icmp eq i8* %85, null
  %spec.select = select i1 %86, i32 1, i32 0
  br label %UnifiedReturnBlock

UnifiedReturnBlock:                               ; preds = %79, %.loopexit, %16
  %UnifiedRetVal = phi i32 [ %spec.select, %79 ], [ 1, %.loopexit ], [ 1, %16 ]
  ret i32 %UnifiedRetVal
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @next_dict_clone_clone(i32) #0 {
  %2 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 22
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %2, align 8
  %4 = icmp ne i64 0, 0
  %5 = icmp ne %struct._IO_FILE* null, null
  br i1 false, label %6, label %16

; <label>:6:                                      ; preds = %1
  %7 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 28
  %8 = load i32, i32* %7, align 8
  %9 = icmp ne i32 %8, 0
  br i1 %9, label %14, label %10

; <label>:10:                                     ; preds = %6
  %11 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 22
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8
  %13 = call i32 @fclose(%struct._IO_FILE* %12)
  br label %14

; <label>:14:                                     ; preds = %10, %6
  %15 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 22
  store %struct._IO_FILE* null, %struct._IO_FILE** %15, align 8
  br label %16

; <label>:16:                                     ; preds = %14, %1
  %17 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 23
  store i32 0, i32* %17, align 8
  %18 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 23
  %19 = load i32, i32* %18, align 8
  %20 = sext i32 0 to i64
  %21 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 21
  %22 = getelementptr inbounds [128 x i8*], [128 x i8*]* %21, i64 0, i64 0
  %23 = load i8*, i8** %22, align 8
  %24 = icmp eq i64 10000886, 0
  %25 = icmp eq i8* %23, null
  br i1 false, label %UnifiedReturnBlock, label %.preheader

.preheader:                                       ; preds = %16
  call void @unroll_loop(i32 108)
  %26 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 23
  %27 = load i32, i32* %26, align 8
  %28 = icmp slt i32 0, 128
  br i1 true, label %.lr.ph.preheader, label %.loopexit

.lr.ph.preheader:                                 ; preds = %.preheader
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader
  %29 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %30 = sext i32 0 to i64
  %31 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 0
  %32 = load i8*, i8** %31, align 8
  %33 = icmp ne i64 10000886, 0
  %34 = icmp ne i8* %32, null
  br i1 true, label %35, label %.loopexit.loopexit

; <label>:35:                                     ; preds = %.lr.ph
  %36 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %37 = sext i32 0 to i64
  %38 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 0
  %39 = load i8*, i8** %38, align 8
  %40 = getelementptr [2 x i8], [2 x i8]* @8, i64 0, i64 0
  %41 = call i32 @strcmp(i8* %39, i8* %40) #10
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %55

; <label>:43:                                     ; preds = %35
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 28), align 8
  %44 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
  %45 = call i32 @fileno(%struct._IO_FILE* %44) #9
  %46 = call %struct._IO_FILE* @fdopen(i32 %45, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.66, i64 0, i64 0)) #9, !track !201
  store %struct._IO_FILE* %46, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %47 = icmp eq %struct._IO_FILE* %46, null
  br i1 %47, label %48, label %53

; <label>:48:                                     ; preds = %43
  call void @perror(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.67, i64 0, i64 0))
  %49 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %50 = add nsw i32 0, 1
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge

.backedge:                                        ; preds = %72, %62, %48
  call void @__loop_iteration_test___3()
  call void @unroll_loop(i32 108)
  %51 = load i32, i32* %26, align 8
  %52 = icmp slt i32 1, 128
  br i1 true, label %.lr.ph.1, label %.loopexit.loopexit

; <label>:53:                                     ; preds = %916, %872, %828, %784, %740, %696, %652, %608, %564, %520, %476, %432, %388, %344, %300, %256, %212, %168, %124, %43
  call void @__loop_termination_test___3()
  %54 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 24
  store i32 1, i32* %54, align 4
  br label %.loopexit

; <label>:55:                                     ; preds = %35
  store i32 0, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 28), align 8
  %56 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %57 = sext i32 0 to i64
  %58 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 0
  %59 = load i8*, i8** %58, align 8
  %60 = call %struct._IO_FILE* @fopen64(i8* %59, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.66, i64 0, i64 0)), !track !202
  store %struct._IO_FILE* %60, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %61 = icmp eq %struct._IO_FILE* %60, null
  br i1 %61, label %62, label %65

; <label>:62:                                     ; preds = %55
  call void @perror(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.67, i64 0, i64 0))
  %63 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %64 = add nsw i32 0, 1
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge

; <label>:65:                                     ; preds = %55
  %66 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %67 = call i32 @fseek(%struct._IO_FILE* %66, i64 0, i32 2)
  %68 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %69 = call i64 @ftell(%struct._IO_FILE* %68)
  %70 = icmp sle i64 %69, 0
  %71 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  br i1 %70, label %72, label %77

; <label>:72:                                     ; preds = %65
  %73 = call i32 @fclose(%struct._IO_FILE* %71)
  store %struct._IO_FILE* null, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %74 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.68, i64 0, i64 0))
  %75 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %76 = add nsw i32 0, 1
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge

; <label>:77:                                     ; preds = %901, %857, %813, %769, %725, %681, %637, %593, %549, %505, %461, %417, %373, %329, %285, %241, %197, %153, %109, %65
  %.lcssa = phi %struct._IO_FILE* [ %71, %65 ], [ %115, %109 ], [ %159, %153 ], [ %203, %197 ], [ %247, %241 ], [ %291, %285 ], [ %335, %329 ], [ %379, %373 ], [ %423, %417 ], [ %467, %461 ], [ %511, %505 ], [ %555, %549 ], [ %599, %593 ], [ %643, %637 ], [ %687, %681 ], [ %731, %725 ], [ %775, %769 ], [ %819, %813 ], [ %863, %857 ], [ %907, %901 ]
  call void @__loop_termination_test___3()
  call void @rewind(%struct._IO_FILE* %.lcssa)
  br label %.loopexit

.loopexit.loopexit:                               ; preds = %.backedge.19, %.lr.ph.19, %.backedge.18, %.lr.ph.18, %.backedge.17, %.lr.ph.17, %.backedge.16, %.lr.ph.16, %.backedge.15, %.lr.ph.15, %.backedge.14, %.lr.ph.14, %.backedge.13, %.lr.ph.13, %.backedge.12, %.lr.ph.12, %.backedge.11, %.lr.ph.11, %.backedge.10, %.lr.ph.10, %.backedge.9, %.lr.ph.9, %.backedge.8, %.lr.ph.8, %.backedge.7, %.lr.ph.7, %.backedge.6, %.lr.ph.6, %.backedge.5, %.lr.ph.5, %.backedge.4, %.lr.ph.4, %.backedge.3, %.lr.ph.3, %.backedge.2, %.lr.ph.2, %.backedge.1, %.lr.ph.1, %.backedge, %.lr.ph
  call void @__loop_termination_test___3()
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit.loopexit, %77, %53, %.preheader
  %78 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 23
  %79 = load i32, i32* %78, align 8
  %80 = icmp sge i32 %79, 128
  br i1 %80, label %UnifiedReturnBlock, label %81

; <label>:81:                                     ; preds = %.loopexit
  %82 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 23
  %83 = load i32, i32* %82, align 8
  %84 = sext i32 %83 to i64
  %85 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 21
  %86 = getelementptr inbounds [128 x i8*], [128 x i8*]* %85, i64 0, i64 %84
  %87 = load i8*, i8** %86, align 8
  %88 = icmp eq i8* %87, null
  %spec.select = select i1 %88, i32 1, i32 0
  br label %UnifiedReturnBlock

UnifiedReturnBlock:                               ; preds = %81, %.loopexit, %16
  %UnifiedRetVal = phi i32 [ %spec.select, %81 ], [ 1, %.loopexit ], [ 1, %16 ]
  ret i32 %UnifiedRetVal

.lr.ph.1:                                         ; preds = %.backedge
  %89 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %90 = sext i32 1 to i64
  %91 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 1
  %92 = load i8*, i8** %91, align 8
  %93 = icmp ne i64 0, 0
  %94 = icmp ne i8* null, null
  br i1 false, label %95, label %.loopexit.loopexit

; <label>:95:                                     ; preds = %.lr.ph.1
  %96 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %97 = sext i32 %96 to i64
  %98 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %97
  %99 = load i8*, i8** %98, align 8
  %100 = call i32 @strcmp(i8* %99, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i64 0, i64 0)) #10
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %124, label %102

; <label>:102:                                    ; preds = %95
  store i32 0, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 28), align 8
  %103 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %104 = sext i32 %103 to i64
  %105 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %104
  %106 = load i8*, i8** %105, align 8
  %107 = call %struct._IO_FILE* @fopen64(i8* %106, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.66, i64 0, i64 0)), !track !202
  store %struct._IO_FILE* %107, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %108 = icmp eq %struct._IO_FILE* %107, null
  br i1 %108, label %121, label %109

; <label>:109:                                    ; preds = %102
  %110 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %111 = call i32 @fseek(%struct._IO_FILE* %110, i64 0, i32 2)
  %112 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %113 = call i64 @ftell(%struct._IO_FILE* %112)
  %114 = icmp sle i64 %113, 0
  %115 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  br i1 %114, label %116, label %77

; <label>:116:                                    ; preds = %109
  %117 = call i32 @fclose(%struct._IO_FILE* %115)
  store %struct._IO_FILE* null, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %118 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.68, i64 0, i64 0))
  %119 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %120 = add nsw i32 %119, 1
  store i32 %120, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge.1

; <label>:121:                                    ; preds = %102
  call void @perror(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.67, i64 0, i64 0))
  %122 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %123 = add nsw i32 %122, 1
  store i32 %123, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge.1

; <label>:124:                                    ; preds = %95
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 28), align 8
  %125 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
  %126 = call i32 @fileno(%struct._IO_FILE* %125) #9
  %127 = call %struct._IO_FILE* @fdopen(i32 %126, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.66, i64 0, i64 0)) #9, !track !201
  store %struct._IO_FILE* %127, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %128 = icmp eq %struct._IO_FILE* %127, null
  br i1 %128, label %129, label %53

; <label>:129:                                    ; preds = %124
  call void @perror(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.67, i64 0, i64 0))
  %130 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %131 = add nsw i32 %130, 1
  store i32 %131, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge.1

.backedge.1:                                      ; preds = %129, %121, %116
  call void @__loop_iteration_test___3()
  call void @unroll_loop(i32 108)
  %132 = load i32, i32* %26, align 8
  %133 = icmp slt i32 %132, 128
  br i1 %133, label %.lr.ph.2, label %.loopexit.loopexit

.lr.ph.2:                                         ; preds = %.backedge.1
  %134 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %135 = sext i32 %134 to i64
  %136 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %135
  %137 = load i8*, i8** %136, align 8
  %138 = icmp ne i8* %137, null
  br i1 %138, label %139, label %.loopexit.loopexit

; <label>:139:                                    ; preds = %.lr.ph.2
  %140 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %141 = sext i32 %140 to i64
  %142 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %141
  %143 = load i8*, i8** %142, align 8
  %144 = call i32 @strcmp(i8* %143, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i64 0, i64 0)) #10
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %168, label %146

; <label>:146:                                    ; preds = %139
  store i32 0, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 28), align 8
  %147 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %148 = sext i32 %147 to i64
  %149 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %148
  %150 = load i8*, i8** %149, align 8
  %151 = call %struct._IO_FILE* @fopen64(i8* %150, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.66, i64 0, i64 0)), !track !202
  store %struct._IO_FILE* %151, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %152 = icmp eq %struct._IO_FILE* %151, null
  br i1 %152, label %165, label %153

; <label>:153:                                    ; preds = %146
  %154 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %155 = call i32 @fseek(%struct._IO_FILE* %154, i64 0, i32 2)
  %156 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %157 = call i64 @ftell(%struct._IO_FILE* %156)
  %158 = icmp sle i64 %157, 0
  %159 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  br i1 %158, label %160, label %77

; <label>:160:                                    ; preds = %153
  %161 = call i32 @fclose(%struct._IO_FILE* %159)
  store %struct._IO_FILE* null, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %162 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.68, i64 0, i64 0))
  %163 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %164 = add nsw i32 %163, 1
  store i32 %164, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge.2

; <label>:165:                                    ; preds = %146
  call void @perror(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.67, i64 0, i64 0))
  %166 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %167 = add nsw i32 %166, 1
  store i32 %167, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge.2

; <label>:168:                                    ; preds = %139
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 28), align 8
  %169 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
  %170 = call i32 @fileno(%struct._IO_FILE* %169) #9
  %171 = call %struct._IO_FILE* @fdopen(i32 %170, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.66, i64 0, i64 0)) #9, !track !201
  store %struct._IO_FILE* %171, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %172 = icmp eq %struct._IO_FILE* %171, null
  br i1 %172, label %173, label %53

; <label>:173:                                    ; preds = %168
  call void @perror(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.67, i64 0, i64 0))
  %174 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %175 = add nsw i32 %174, 1
  store i32 %175, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge.2

.backedge.2:                                      ; preds = %173, %165, %160
  call void @__loop_iteration_test___3()
  call void @unroll_loop(i32 108)
  %176 = load i32, i32* %26, align 8
  %177 = icmp slt i32 %176, 128
  br i1 %177, label %.lr.ph.3, label %.loopexit.loopexit

.lr.ph.3:                                         ; preds = %.backedge.2
  %178 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %179 = sext i32 %178 to i64
  %180 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %179
  %181 = load i8*, i8** %180, align 8
  %182 = icmp ne i8* %181, null
  br i1 %182, label %183, label %.loopexit.loopexit

; <label>:183:                                    ; preds = %.lr.ph.3
  %184 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %185 = sext i32 %184 to i64
  %186 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %185
  %187 = load i8*, i8** %186, align 8
  %188 = call i32 @strcmp(i8* %187, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i64 0, i64 0)) #10
  %189 = icmp eq i32 %188, 0
  br i1 %189, label %212, label %190

; <label>:190:                                    ; preds = %183
  store i32 0, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 28), align 8
  %191 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %192 = sext i32 %191 to i64
  %193 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %192
  %194 = load i8*, i8** %193, align 8
  %195 = call %struct._IO_FILE* @fopen64(i8* %194, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.66, i64 0, i64 0)), !track !202
  store %struct._IO_FILE* %195, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %196 = icmp eq %struct._IO_FILE* %195, null
  br i1 %196, label %209, label %197

; <label>:197:                                    ; preds = %190
  %198 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %199 = call i32 @fseek(%struct._IO_FILE* %198, i64 0, i32 2)
  %200 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %201 = call i64 @ftell(%struct._IO_FILE* %200)
  %202 = icmp sle i64 %201, 0
  %203 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  br i1 %202, label %204, label %77

; <label>:204:                                    ; preds = %197
  %205 = call i32 @fclose(%struct._IO_FILE* %203)
  store %struct._IO_FILE* null, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %206 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.68, i64 0, i64 0))
  %207 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %208 = add nsw i32 %207, 1
  store i32 %208, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge.3

; <label>:209:                                    ; preds = %190
  call void @perror(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.67, i64 0, i64 0))
  %210 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %211 = add nsw i32 %210, 1
  store i32 %211, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge.3

; <label>:212:                                    ; preds = %183
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 28), align 8
  %213 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
  %214 = call i32 @fileno(%struct._IO_FILE* %213) #9
  %215 = call %struct._IO_FILE* @fdopen(i32 %214, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.66, i64 0, i64 0)) #9, !track !201
  store %struct._IO_FILE* %215, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %216 = icmp eq %struct._IO_FILE* %215, null
  br i1 %216, label %217, label %53

; <label>:217:                                    ; preds = %212
  call void @perror(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.67, i64 0, i64 0))
  %218 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %219 = add nsw i32 %218, 1
  store i32 %219, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge.3

.backedge.3:                                      ; preds = %217, %209, %204
  call void @__loop_iteration_test___3()
  call void @unroll_loop(i32 108)
  %220 = load i32, i32* %26, align 8
  %221 = icmp slt i32 %220, 128
  br i1 %221, label %.lr.ph.4, label %.loopexit.loopexit

.lr.ph.4:                                         ; preds = %.backedge.3
  %222 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %223 = sext i32 %222 to i64
  %224 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %223
  %225 = load i8*, i8** %224, align 8
  %226 = icmp ne i8* %225, null
  br i1 %226, label %227, label %.loopexit.loopexit

; <label>:227:                                    ; preds = %.lr.ph.4
  %228 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %229 = sext i32 %228 to i64
  %230 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %229
  %231 = load i8*, i8** %230, align 8
  %232 = call i32 @strcmp(i8* %231, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i64 0, i64 0)) #10
  %233 = icmp eq i32 %232, 0
  br i1 %233, label %256, label %234

; <label>:234:                                    ; preds = %227
  store i32 0, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 28), align 8
  %235 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %236 = sext i32 %235 to i64
  %237 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %236
  %238 = load i8*, i8** %237, align 8
  %239 = call %struct._IO_FILE* @fopen64(i8* %238, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.66, i64 0, i64 0)), !track !202
  store %struct._IO_FILE* %239, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %240 = icmp eq %struct._IO_FILE* %239, null
  br i1 %240, label %253, label %241

; <label>:241:                                    ; preds = %234
  %242 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %243 = call i32 @fseek(%struct._IO_FILE* %242, i64 0, i32 2)
  %244 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %245 = call i64 @ftell(%struct._IO_FILE* %244)
  %246 = icmp sle i64 %245, 0
  %247 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  br i1 %246, label %248, label %77

; <label>:248:                                    ; preds = %241
  %249 = call i32 @fclose(%struct._IO_FILE* %247)
  store %struct._IO_FILE* null, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %250 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.68, i64 0, i64 0))
  %251 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %252 = add nsw i32 %251, 1
  store i32 %252, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge.4

; <label>:253:                                    ; preds = %234
  call void @perror(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.67, i64 0, i64 0))
  %254 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %255 = add nsw i32 %254, 1
  store i32 %255, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge.4

; <label>:256:                                    ; preds = %227
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 28), align 8
  %257 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
  %258 = call i32 @fileno(%struct._IO_FILE* %257) #9
  %259 = call %struct._IO_FILE* @fdopen(i32 %258, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.66, i64 0, i64 0)) #9, !track !201
  store %struct._IO_FILE* %259, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %260 = icmp eq %struct._IO_FILE* %259, null
  br i1 %260, label %261, label %53

; <label>:261:                                    ; preds = %256
  call void @perror(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.67, i64 0, i64 0))
  %262 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %263 = add nsw i32 %262, 1
  store i32 %263, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge.4

.backedge.4:                                      ; preds = %261, %253, %248
  call void @__loop_iteration_test___3()
  call void @unroll_loop(i32 108)
  %264 = load i32, i32* %26, align 8
  %265 = icmp slt i32 %264, 128
  br i1 %265, label %.lr.ph.5, label %.loopexit.loopexit

.lr.ph.5:                                         ; preds = %.backedge.4
  %266 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %267 = sext i32 %266 to i64
  %268 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %267
  %269 = load i8*, i8** %268, align 8
  %270 = icmp ne i8* %269, null
  br i1 %270, label %271, label %.loopexit.loopexit

; <label>:271:                                    ; preds = %.lr.ph.5
  %272 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %273 = sext i32 %272 to i64
  %274 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %273
  %275 = load i8*, i8** %274, align 8
  %276 = call i32 @strcmp(i8* %275, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i64 0, i64 0)) #10
  %277 = icmp eq i32 %276, 0
  br i1 %277, label %300, label %278

; <label>:278:                                    ; preds = %271
  store i32 0, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 28), align 8
  %279 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %280 = sext i32 %279 to i64
  %281 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %280
  %282 = load i8*, i8** %281, align 8
  %283 = call %struct._IO_FILE* @fopen64(i8* %282, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.66, i64 0, i64 0)), !track !202
  store %struct._IO_FILE* %283, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %284 = icmp eq %struct._IO_FILE* %283, null
  br i1 %284, label %297, label %285

; <label>:285:                                    ; preds = %278
  %286 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %287 = call i32 @fseek(%struct._IO_FILE* %286, i64 0, i32 2)
  %288 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %289 = call i64 @ftell(%struct._IO_FILE* %288)
  %290 = icmp sle i64 %289, 0
  %291 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  br i1 %290, label %292, label %77

; <label>:292:                                    ; preds = %285
  %293 = call i32 @fclose(%struct._IO_FILE* %291)
  store %struct._IO_FILE* null, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %294 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.68, i64 0, i64 0))
  %295 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %296 = add nsw i32 %295, 1
  store i32 %296, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge.5

; <label>:297:                                    ; preds = %278
  call void @perror(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.67, i64 0, i64 0))
  %298 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %299 = add nsw i32 %298, 1
  store i32 %299, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge.5

; <label>:300:                                    ; preds = %271
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 28), align 8
  %301 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
  %302 = call i32 @fileno(%struct._IO_FILE* %301) #9
  %303 = call %struct._IO_FILE* @fdopen(i32 %302, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.66, i64 0, i64 0)) #9, !track !201
  store %struct._IO_FILE* %303, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %304 = icmp eq %struct._IO_FILE* %303, null
  br i1 %304, label %305, label %53

; <label>:305:                                    ; preds = %300
  call void @perror(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.67, i64 0, i64 0))
  %306 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %307 = add nsw i32 %306, 1
  store i32 %307, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge.5

.backedge.5:                                      ; preds = %305, %297, %292
  call void @__loop_iteration_test___3()
  call void @unroll_loop(i32 108)
  %308 = load i32, i32* %26, align 8
  %309 = icmp slt i32 %308, 128
  br i1 %309, label %.lr.ph.6, label %.loopexit.loopexit

.lr.ph.6:                                         ; preds = %.backedge.5
  %310 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %311 = sext i32 %310 to i64
  %312 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %311
  %313 = load i8*, i8** %312, align 8
  %314 = icmp ne i8* %313, null
  br i1 %314, label %315, label %.loopexit.loopexit

; <label>:315:                                    ; preds = %.lr.ph.6
  %316 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %317 = sext i32 %316 to i64
  %318 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %317
  %319 = load i8*, i8** %318, align 8
  %320 = call i32 @strcmp(i8* %319, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i64 0, i64 0)) #10
  %321 = icmp eq i32 %320, 0
  br i1 %321, label %344, label %322

; <label>:322:                                    ; preds = %315
  store i32 0, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 28), align 8
  %323 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %324 = sext i32 %323 to i64
  %325 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %324
  %326 = load i8*, i8** %325, align 8
  %327 = call %struct._IO_FILE* @fopen64(i8* %326, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.66, i64 0, i64 0)), !track !202
  store %struct._IO_FILE* %327, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %328 = icmp eq %struct._IO_FILE* %327, null
  br i1 %328, label %341, label %329

; <label>:329:                                    ; preds = %322
  %330 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %331 = call i32 @fseek(%struct._IO_FILE* %330, i64 0, i32 2)
  %332 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %333 = call i64 @ftell(%struct._IO_FILE* %332)
  %334 = icmp sle i64 %333, 0
  %335 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  br i1 %334, label %336, label %77

; <label>:336:                                    ; preds = %329
  %337 = call i32 @fclose(%struct._IO_FILE* %335)
  store %struct._IO_FILE* null, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %338 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.68, i64 0, i64 0))
  %339 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %340 = add nsw i32 %339, 1
  store i32 %340, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge.6

; <label>:341:                                    ; preds = %322
  call void @perror(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.67, i64 0, i64 0))
  %342 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %343 = add nsw i32 %342, 1
  store i32 %343, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge.6

; <label>:344:                                    ; preds = %315
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 28), align 8
  %345 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
  %346 = call i32 @fileno(%struct._IO_FILE* %345) #9
  %347 = call %struct._IO_FILE* @fdopen(i32 %346, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.66, i64 0, i64 0)) #9, !track !201
  store %struct._IO_FILE* %347, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %348 = icmp eq %struct._IO_FILE* %347, null
  br i1 %348, label %349, label %53

; <label>:349:                                    ; preds = %344
  call void @perror(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.67, i64 0, i64 0))
  %350 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %351 = add nsw i32 %350, 1
  store i32 %351, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge.6

.backedge.6:                                      ; preds = %349, %341, %336
  call void @__loop_iteration_test___3()
  call void @unroll_loop(i32 108)
  %352 = load i32, i32* %26, align 8
  %353 = icmp slt i32 %352, 128
  br i1 %353, label %.lr.ph.7, label %.loopexit.loopexit

.lr.ph.7:                                         ; preds = %.backedge.6
  %354 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %355 = sext i32 %354 to i64
  %356 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %355
  %357 = load i8*, i8** %356, align 8
  %358 = icmp ne i8* %357, null
  br i1 %358, label %359, label %.loopexit.loopexit

; <label>:359:                                    ; preds = %.lr.ph.7
  %360 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %361 = sext i32 %360 to i64
  %362 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %361
  %363 = load i8*, i8** %362, align 8
  %364 = call i32 @strcmp(i8* %363, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i64 0, i64 0)) #10
  %365 = icmp eq i32 %364, 0
  br i1 %365, label %388, label %366

; <label>:366:                                    ; preds = %359
  store i32 0, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 28), align 8
  %367 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %368 = sext i32 %367 to i64
  %369 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %368
  %370 = load i8*, i8** %369, align 8
  %371 = call %struct._IO_FILE* @fopen64(i8* %370, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.66, i64 0, i64 0)), !track !202
  store %struct._IO_FILE* %371, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %372 = icmp eq %struct._IO_FILE* %371, null
  br i1 %372, label %385, label %373

; <label>:373:                                    ; preds = %366
  %374 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %375 = call i32 @fseek(%struct._IO_FILE* %374, i64 0, i32 2)
  %376 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %377 = call i64 @ftell(%struct._IO_FILE* %376)
  %378 = icmp sle i64 %377, 0
  %379 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  br i1 %378, label %380, label %77

; <label>:380:                                    ; preds = %373
  %381 = call i32 @fclose(%struct._IO_FILE* %379)
  store %struct._IO_FILE* null, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %382 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.68, i64 0, i64 0))
  %383 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %384 = add nsw i32 %383, 1
  store i32 %384, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge.7

; <label>:385:                                    ; preds = %366
  call void @perror(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.67, i64 0, i64 0))
  %386 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %387 = add nsw i32 %386, 1
  store i32 %387, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge.7

; <label>:388:                                    ; preds = %359
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 28), align 8
  %389 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
  %390 = call i32 @fileno(%struct._IO_FILE* %389) #9
  %391 = call %struct._IO_FILE* @fdopen(i32 %390, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.66, i64 0, i64 0)) #9, !track !201
  store %struct._IO_FILE* %391, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %392 = icmp eq %struct._IO_FILE* %391, null
  br i1 %392, label %393, label %53

; <label>:393:                                    ; preds = %388
  call void @perror(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.67, i64 0, i64 0))
  %394 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %395 = add nsw i32 %394, 1
  store i32 %395, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge.7

.backedge.7:                                      ; preds = %393, %385, %380
  call void @__loop_iteration_test___3()
  call void @unroll_loop(i32 108)
  %396 = load i32, i32* %26, align 8
  %397 = icmp slt i32 %396, 128
  br i1 %397, label %.lr.ph.8, label %.loopexit.loopexit

.lr.ph.8:                                         ; preds = %.backedge.7
  %398 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %399 = sext i32 %398 to i64
  %400 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %399
  %401 = load i8*, i8** %400, align 8
  %402 = icmp ne i8* %401, null
  br i1 %402, label %403, label %.loopexit.loopexit

; <label>:403:                                    ; preds = %.lr.ph.8
  %404 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %405 = sext i32 %404 to i64
  %406 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %405
  %407 = load i8*, i8** %406, align 8
  %408 = call i32 @strcmp(i8* %407, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i64 0, i64 0)) #10
  %409 = icmp eq i32 %408, 0
  br i1 %409, label %432, label %410

; <label>:410:                                    ; preds = %403
  store i32 0, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 28), align 8
  %411 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %412 = sext i32 %411 to i64
  %413 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %412
  %414 = load i8*, i8** %413, align 8
  %415 = call %struct._IO_FILE* @fopen64(i8* %414, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.66, i64 0, i64 0)), !track !202
  store %struct._IO_FILE* %415, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %416 = icmp eq %struct._IO_FILE* %415, null
  br i1 %416, label %429, label %417

; <label>:417:                                    ; preds = %410
  %418 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %419 = call i32 @fseek(%struct._IO_FILE* %418, i64 0, i32 2)
  %420 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %421 = call i64 @ftell(%struct._IO_FILE* %420)
  %422 = icmp sle i64 %421, 0
  %423 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  br i1 %422, label %424, label %77

; <label>:424:                                    ; preds = %417
  %425 = call i32 @fclose(%struct._IO_FILE* %423)
  store %struct._IO_FILE* null, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %426 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.68, i64 0, i64 0))
  %427 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %428 = add nsw i32 %427, 1
  store i32 %428, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge.8

; <label>:429:                                    ; preds = %410
  call void @perror(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.67, i64 0, i64 0))
  %430 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %431 = add nsw i32 %430, 1
  store i32 %431, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge.8

; <label>:432:                                    ; preds = %403
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 28), align 8
  %433 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
  %434 = call i32 @fileno(%struct._IO_FILE* %433) #9
  %435 = call %struct._IO_FILE* @fdopen(i32 %434, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.66, i64 0, i64 0)) #9, !track !201
  store %struct._IO_FILE* %435, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %436 = icmp eq %struct._IO_FILE* %435, null
  br i1 %436, label %437, label %53

; <label>:437:                                    ; preds = %432
  call void @perror(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.67, i64 0, i64 0))
  %438 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %439 = add nsw i32 %438, 1
  store i32 %439, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge.8

.backedge.8:                                      ; preds = %437, %429, %424
  call void @__loop_iteration_test___3()
  call void @unroll_loop(i32 108)
  %440 = load i32, i32* %26, align 8
  %441 = icmp slt i32 %440, 128
  br i1 %441, label %.lr.ph.9, label %.loopexit.loopexit

.lr.ph.9:                                         ; preds = %.backedge.8
  %442 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %443 = sext i32 %442 to i64
  %444 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %443
  %445 = load i8*, i8** %444, align 8
  %446 = icmp ne i8* %445, null
  br i1 %446, label %447, label %.loopexit.loopexit

; <label>:447:                                    ; preds = %.lr.ph.9
  %448 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %449 = sext i32 %448 to i64
  %450 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %449
  %451 = load i8*, i8** %450, align 8
  %452 = call i32 @strcmp(i8* %451, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i64 0, i64 0)) #10
  %453 = icmp eq i32 %452, 0
  br i1 %453, label %476, label %454

; <label>:454:                                    ; preds = %447
  store i32 0, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 28), align 8
  %455 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %456 = sext i32 %455 to i64
  %457 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %456
  %458 = load i8*, i8** %457, align 8
  %459 = call %struct._IO_FILE* @fopen64(i8* %458, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.66, i64 0, i64 0)), !track !202
  store %struct._IO_FILE* %459, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %460 = icmp eq %struct._IO_FILE* %459, null
  br i1 %460, label %473, label %461

; <label>:461:                                    ; preds = %454
  %462 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %463 = call i32 @fseek(%struct._IO_FILE* %462, i64 0, i32 2)
  %464 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %465 = call i64 @ftell(%struct._IO_FILE* %464)
  %466 = icmp sle i64 %465, 0
  %467 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  br i1 %466, label %468, label %77

; <label>:468:                                    ; preds = %461
  %469 = call i32 @fclose(%struct._IO_FILE* %467)
  store %struct._IO_FILE* null, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %470 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.68, i64 0, i64 0))
  %471 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %472 = add nsw i32 %471, 1
  store i32 %472, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge.9

; <label>:473:                                    ; preds = %454
  call void @perror(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.67, i64 0, i64 0))
  %474 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %475 = add nsw i32 %474, 1
  store i32 %475, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge.9

; <label>:476:                                    ; preds = %447
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 28), align 8
  %477 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
  %478 = call i32 @fileno(%struct._IO_FILE* %477) #9
  %479 = call %struct._IO_FILE* @fdopen(i32 %478, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.66, i64 0, i64 0)) #9, !track !201
  store %struct._IO_FILE* %479, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %480 = icmp eq %struct._IO_FILE* %479, null
  br i1 %480, label %481, label %53

; <label>:481:                                    ; preds = %476
  call void @perror(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.67, i64 0, i64 0))
  %482 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %483 = add nsw i32 %482, 1
  store i32 %483, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge.9

.backedge.9:                                      ; preds = %481, %473, %468
  call void @__loop_iteration_test___3()
  call void @unroll_loop(i32 108)
  %484 = load i32, i32* %26, align 8
  %485 = icmp slt i32 %484, 128
  br i1 %485, label %.lr.ph.10, label %.loopexit.loopexit

.lr.ph.10:                                        ; preds = %.backedge.9
  %486 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %487 = sext i32 %486 to i64
  %488 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %487
  %489 = load i8*, i8** %488, align 8
  %490 = icmp ne i8* %489, null
  br i1 %490, label %491, label %.loopexit.loopexit

; <label>:491:                                    ; preds = %.lr.ph.10
  %492 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %493 = sext i32 %492 to i64
  %494 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %493
  %495 = load i8*, i8** %494, align 8
  %496 = call i32 @strcmp(i8* %495, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i64 0, i64 0)) #10
  %497 = icmp eq i32 %496, 0
  br i1 %497, label %520, label %498

; <label>:498:                                    ; preds = %491
  store i32 0, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 28), align 8
  %499 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %500 = sext i32 %499 to i64
  %501 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %500
  %502 = load i8*, i8** %501, align 8
  %503 = call %struct._IO_FILE* @fopen64(i8* %502, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.66, i64 0, i64 0)), !track !202
  store %struct._IO_FILE* %503, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %504 = icmp eq %struct._IO_FILE* %503, null
  br i1 %504, label %517, label %505

; <label>:505:                                    ; preds = %498
  %506 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %507 = call i32 @fseek(%struct._IO_FILE* %506, i64 0, i32 2)
  %508 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %509 = call i64 @ftell(%struct._IO_FILE* %508)
  %510 = icmp sle i64 %509, 0
  %511 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  br i1 %510, label %512, label %77

; <label>:512:                                    ; preds = %505
  %513 = call i32 @fclose(%struct._IO_FILE* %511)
  store %struct._IO_FILE* null, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %514 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.68, i64 0, i64 0))
  %515 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %516 = add nsw i32 %515, 1
  store i32 %516, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge.10

; <label>:517:                                    ; preds = %498
  call void @perror(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.67, i64 0, i64 0))
  %518 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %519 = add nsw i32 %518, 1
  store i32 %519, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge.10

; <label>:520:                                    ; preds = %491
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 28), align 8
  %521 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
  %522 = call i32 @fileno(%struct._IO_FILE* %521) #9
  %523 = call %struct._IO_FILE* @fdopen(i32 %522, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.66, i64 0, i64 0)) #9, !track !201
  store %struct._IO_FILE* %523, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %524 = icmp eq %struct._IO_FILE* %523, null
  br i1 %524, label %525, label %53

; <label>:525:                                    ; preds = %520
  call void @perror(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.67, i64 0, i64 0))
  %526 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %527 = add nsw i32 %526, 1
  store i32 %527, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge.10

.backedge.10:                                     ; preds = %525, %517, %512
  call void @__loop_iteration_test___3()
  call void @unroll_loop(i32 108)
  %528 = load i32, i32* %26, align 8
  %529 = icmp slt i32 %528, 128
  br i1 %529, label %.lr.ph.11, label %.loopexit.loopexit

.lr.ph.11:                                        ; preds = %.backedge.10
  %530 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %531 = sext i32 %530 to i64
  %532 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %531
  %533 = load i8*, i8** %532, align 8
  %534 = icmp ne i8* %533, null
  br i1 %534, label %535, label %.loopexit.loopexit

; <label>:535:                                    ; preds = %.lr.ph.11
  %536 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %537 = sext i32 %536 to i64
  %538 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %537
  %539 = load i8*, i8** %538, align 8
  %540 = call i32 @strcmp(i8* %539, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i64 0, i64 0)) #10
  %541 = icmp eq i32 %540, 0
  br i1 %541, label %564, label %542

; <label>:542:                                    ; preds = %535
  store i32 0, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 28), align 8
  %543 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %544 = sext i32 %543 to i64
  %545 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %544
  %546 = load i8*, i8** %545, align 8
  %547 = call %struct._IO_FILE* @fopen64(i8* %546, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.66, i64 0, i64 0)), !track !202
  store %struct._IO_FILE* %547, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %548 = icmp eq %struct._IO_FILE* %547, null
  br i1 %548, label %561, label %549

; <label>:549:                                    ; preds = %542
  %550 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %551 = call i32 @fseek(%struct._IO_FILE* %550, i64 0, i32 2)
  %552 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %553 = call i64 @ftell(%struct._IO_FILE* %552)
  %554 = icmp sle i64 %553, 0
  %555 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  br i1 %554, label %556, label %77

; <label>:556:                                    ; preds = %549
  %557 = call i32 @fclose(%struct._IO_FILE* %555)
  store %struct._IO_FILE* null, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %558 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.68, i64 0, i64 0))
  %559 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %560 = add nsw i32 %559, 1
  store i32 %560, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge.11

; <label>:561:                                    ; preds = %542
  call void @perror(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.67, i64 0, i64 0))
  %562 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %563 = add nsw i32 %562, 1
  store i32 %563, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge.11

; <label>:564:                                    ; preds = %535
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 28), align 8
  %565 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
  %566 = call i32 @fileno(%struct._IO_FILE* %565) #9
  %567 = call %struct._IO_FILE* @fdopen(i32 %566, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.66, i64 0, i64 0)) #9, !track !201
  store %struct._IO_FILE* %567, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %568 = icmp eq %struct._IO_FILE* %567, null
  br i1 %568, label %569, label %53

; <label>:569:                                    ; preds = %564
  call void @perror(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.67, i64 0, i64 0))
  %570 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %571 = add nsw i32 %570, 1
  store i32 %571, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge.11

.backedge.11:                                     ; preds = %569, %561, %556
  call void @__loop_iteration_test___3()
  call void @unroll_loop(i32 108)
  %572 = load i32, i32* %26, align 8
  %573 = icmp slt i32 %572, 128
  br i1 %573, label %.lr.ph.12, label %.loopexit.loopexit

.lr.ph.12:                                        ; preds = %.backedge.11
  %574 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %575 = sext i32 %574 to i64
  %576 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %575
  %577 = load i8*, i8** %576, align 8
  %578 = icmp ne i8* %577, null
  br i1 %578, label %579, label %.loopexit.loopexit

; <label>:579:                                    ; preds = %.lr.ph.12
  %580 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %581 = sext i32 %580 to i64
  %582 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %581
  %583 = load i8*, i8** %582, align 8
  %584 = call i32 @strcmp(i8* %583, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i64 0, i64 0)) #10
  %585 = icmp eq i32 %584, 0
  br i1 %585, label %608, label %586

; <label>:586:                                    ; preds = %579
  store i32 0, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 28), align 8
  %587 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %588 = sext i32 %587 to i64
  %589 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %588
  %590 = load i8*, i8** %589, align 8
  %591 = call %struct._IO_FILE* @fopen64(i8* %590, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.66, i64 0, i64 0)), !track !202
  store %struct._IO_FILE* %591, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %592 = icmp eq %struct._IO_FILE* %591, null
  br i1 %592, label %605, label %593

; <label>:593:                                    ; preds = %586
  %594 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %595 = call i32 @fseek(%struct._IO_FILE* %594, i64 0, i32 2)
  %596 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %597 = call i64 @ftell(%struct._IO_FILE* %596)
  %598 = icmp sle i64 %597, 0
  %599 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  br i1 %598, label %600, label %77

; <label>:600:                                    ; preds = %593
  %601 = call i32 @fclose(%struct._IO_FILE* %599)
  store %struct._IO_FILE* null, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %602 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.68, i64 0, i64 0))
  %603 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %604 = add nsw i32 %603, 1
  store i32 %604, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge.12

; <label>:605:                                    ; preds = %586
  call void @perror(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.67, i64 0, i64 0))
  %606 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %607 = add nsw i32 %606, 1
  store i32 %607, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge.12

; <label>:608:                                    ; preds = %579
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 28), align 8
  %609 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
  %610 = call i32 @fileno(%struct._IO_FILE* %609) #9
  %611 = call %struct._IO_FILE* @fdopen(i32 %610, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.66, i64 0, i64 0)) #9, !track !201
  store %struct._IO_FILE* %611, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %612 = icmp eq %struct._IO_FILE* %611, null
  br i1 %612, label %613, label %53

; <label>:613:                                    ; preds = %608
  call void @perror(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.67, i64 0, i64 0))
  %614 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %615 = add nsw i32 %614, 1
  store i32 %615, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge.12

.backedge.12:                                     ; preds = %613, %605, %600
  call void @__loop_iteration_test___3()
  call void @unroll_loop(i32 108)
  %616 = load i32, i32* %26, align 8
  %617 = icmp slt i32 %616, 128
  br i1 %617, label %.lr.ph.13, label %.loopexit.loopexit

.lr.ph.13:                                        ; preds = %.backedge.12
  %618 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %619 = sext i32 %618 to i64
  %620 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %619
  %621 = load i8*, i8** %620, align 8
  %622 = icmp ne i8* %621, null
  br i1 %622, label %623, label %.loopexit.loopexit

; <label>:623:                                    ; preds = %.lr.ph.13
  %624 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %625 = sext i32 %624 to i64
  %626 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %625
  %627 = load i8*, i8** %626, align 8
  %628 = call i32 @strcmp(i8* %627, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i64 0, i64 0)) #10
  %629 = icmp eq i32 %628, 0
  br i1 %629, label %652, label %630

; <label>:630:                                    ; preds = %623
  store i32 0, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 28), align 8
  %631 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %632 = sext i32 %631 to i64
  %633 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %632
  %634 = load i8*, i8** %633, align 8
  %635 = call %struct._IO_FILE* @fopen64(i8* %634, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.66, i64 0, i64 0)), !track !202
  store %struct._IO_FILE* %635, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %636 = icmp eq %struct._IO_FILE* %635, null
  br i1 %636, label %649, label %637

; <label>:637:                                    ; preds = %630
  %638 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %639 = call i32 @fseek(%struct._IO_FILE* %638, i64 0, i32 2)
  %640 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %641 = call i64 @ftell(%struct._IO_FILE* %640)
  %642 = icmp sle i64 %641, 0
  %643 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  br i1 %642, label %644, label %77

; <label>:644:                                    ; preds = %637
  %645 = call i32 @fclose(%struct._IO_FILE* %643)
  store %struct._IO_FILE* null, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %646 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.68, i64 0, i64 0))
  %647 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %648 = add nsw i32 %647, 1
  store i32 %648, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge.13

; <label>:649:                                    ; preds = %630
  call void @perror(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.67, i64 0, i64 0))
  %650 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %651 = add nsw i32 %650, 1
  store i32 %651, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge.13

; <label>:652:                                    ; preds = %623
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 28), align 8
  %653 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
  %654 = call i32 @fileno(%struct._IO_FILE* %653) #9
  %655 = call %struct._IO_FILE* @fdopen(i32 %654, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.66, i64 0, i64 0)) #9, !track !201
  store %struct._IO_FILE* %655, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %656 = icmp eq %struct._IO_FILE* %655, null
  br i1 %656, label %657, label %53

; <label>:657:                                    ; preds = %652
  call void @perror(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.67, i64 0, i64 0))
  %658 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %659 = add nsw i32 %658, 1
  store i32 %659, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge.13

.backedge.13:                                     ; preds = %657, %649, %644
  call void @__loop_iteration_test___3()
  call void @unroll_loop(i32 108)
  %660 = load i32, i32* %26, align 8
  %661 = icmp slt i32 %660, 128
  br i1 %661, label %.lr.ph.14, label %.loopexit.loopexit

.lr.ph.14:                                        ; preds = %.backedge.13
  %662 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %663 = sext i32 %662 to i64
  %664 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %663
  %665 = load i8*, i8** %664, align 8
  %666 = icmp ne i8* %665, null
  br i1 %666, label %667, label %.loopexit.loopexit

; <label>:667:                                    ; preds = %.lr.ph.14
  %668 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %669 = sext i32 %668 to i64
  %670 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %669
  %671 = load i8*, i8** %670, align 8
  %672 = call i32 @strcmp(i8* %671, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i64 0, i64 0)) #10
  %673 = icmp eq i32 %672, 0
  br i1 %673, label %696, label %674

; <label>:674:                                    ; preds = %667
  store i32 0, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 28), align 8
  %675 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %676 = sext i32 %675 to i64
  %677 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %676
  %678 = load i8*, i8** %677, align 8
  %679 = call %struct._IO_FILE* @fopen64(i8* %678, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.66, i64 0, i64 0)), !track !202
  store %struct._IO_FILE* %679, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %680 = icmp eq %struct._IO_FILE* %679, null
  br i1 %680, label %693, label %681

; <label>:681:                                    ; preds = %674
  %682 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %683 = call i32 @fseek(%struct._IO_FILE* %682, i64 0, i32 2)
  %684 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %685 = call i64 @ftell(%struct._IO_FILE* %684)
  %686 = icmp sle i64 %685, 0
  %687 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  br i1 %686, label %688, label %77

; <label>:688:                                    ; preds = %681
  %689 = call i32 @fclose(%struct._IO_FILE* %687)
  store %struct._IO_FILE* null, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %690 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.68, i64 0, i64 0))
  %691 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %692 = add nsw i32 %691, 1
  store i32 %692, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge.14

; <label>:693:                                    ; preds = %674
  call void @perror(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.67, i64 0, i64 0))
  %694 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %695 = add nsw i32 %694, 1
  store i32 %695, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge.14

; <label>:696:                                    ; preds = %667
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 28), align 8
  %697 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
  %698 = call i32 @fileno(%struct._IO_FILE* %697) #9
  %699 = call %struct._IO_FILE* @fdopen(i32 %698, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.66, i64 0, i64 0)) #9, !track !201
  store %struct._IO_FILE* %699, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %700 = icmp eq %struct._IO_FILE* %699, null
  br i1 %700, label %701, label %53

; <label>:701:                                    ; preds = %696
  call void @perror(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.67, i64 0, i64 0))
  %702 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %703 = add nsw i32 %702, 1
  store i32 %703, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge.14

.backedge.14:                                     ; preds = %701, %693, %688
  call void @__loop_iteration_test___3()
  call void @unroll_loop(i32 108)
  %704 = load i32, i32* %26, align 8
  %705 = icmp slt i32 %704, 128
  br i1 %705, label %.lr.ph.15, label %.loopexit.loopexit

.lr.ph.15:                                        ; preds = %.backedge.14
  %706 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %707 = sext i32 %706 to i64
  %708 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %707
  %709 = load i8*, i8** %708, align 8
  %710 = icmp ne i8* %709, null
  br i1 %710, label %711, label %.loopexit.loopexit

; <label>:711:                                    ; preds = %.lr.ph.15
  %712 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %713 = sext i32 %712 to i64
  %714 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %713
  %715 = load i8*, i8** %714, align 8
  %716 = call i32 @strcmp(i8* %715, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i64 0, i64 0)) #10
  %717 = icmp eq i32 %716, 0
  br i1 %717, label %740, label %718

; <label>:718:                                    ; preds = %711
  store i32 0, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 28), align 8
  %719 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %720 = sext i32 %719 to i64
  %721 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %720
  %722 = load i8*, i8** %721, align 8
  %723 = call %struct._IO_FILE* @fopen64(i8* %722, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.66, i64 0, i64 0)), !track !202
  store %struct._IO_FILE* %723, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %724 = icmp eq %struct._IO_FILE* %723, null
  br i1 %724, label %737, label %725

; <label>:725:                                    ; preds = %718
  %726 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %727 = call i32 @fseek(%struct._IO_FILE* %726, i64 0, i32 2)
  %728 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %729 = call i64 @ftell(%struct._IO_FILE* %728)
  %730 = icmp sle i64 %729, 0
  %731 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  br i1 %730, label %732, label %77

; <label>:732:                                    ; preds = %725
  %733 = call i32 @fclose(%struct._IO_FILE* %731)
  store %struct._IO_FILE* null, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %734 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.68, i64 0, i64 0))
  %735 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %736 = add nsw i32 %735, 1
  store i32 %736, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge.15

; <label>:737:                                    ; preds = %718
  call void @perror(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.67, i64 0, i64 0))
  %738 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %739 = add nsw i32 %738, 1
  store i32 %739, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge.15

; <label>:740:                                    ; preds = %711
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 28), align 8
  %741 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
  %742 = call i32 @fileno(%struct._IO_FILE* %741) #9
  %743 = call %struct._IO_FILE* @fdopen(i32 %742, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.66, i64 0, i64 0)) #9, !track !201
  store %struct._IO_FILE* %743, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %744 = icmp eq %struct._IO_FILE* %743, null
  br i1 %744, label %745, label %53

; <label>:745:                                    ; preds = %740
  call void @perror(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.67, i64 0, i64 0))
  %746 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %747 = add nsw i32 %746, 1
  store i32 %747, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge.15

.backedge.15:                                     ; preds = %745, %737, %732
  call void @__loop_iteration_test___3()
  call void @unroll_loop(i32 108)
  %748 = load i32, i32* %26, align 8
  %749 = icmp slt i32 %748, 128
  br i1 %749, label %.lr.ph.16, label %.loopexit.loopexit

.lr.ph.16:                                        ; preds = %.backedge.15
  %750 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %751 = sext i32 %750 to i64
  %752 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %751
  %753 = load i8*, i8** %752, align 8
  %754 = icmp ne i8* %753, null
  br i1 %754, label %755, label %.loopexit.loopexit

; <label>:755:                                    ; preds = %.lr.ph.16
  %756 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %757 = sext i32 %756 to i64
  %758 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %757
  %759 = load i8*, i8** %758, align 8
  %760 = call i32 @strcmp(i8* %759, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i64 0, i64 0)) #10
  %761 = icmp eq i32 %760, 0
  br i1 %761, label %784, label %762

; <label>:762:                                    ; preds = %755
  store i32 0, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 28), align 8
  %763 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %764 = sext i32 %763 to i64
  %765 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %764
  %766 = load i8*, i8** %765, align 8
  %767 = call %struct._IO_FILE* @fopen64(i8* %766, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.66, i64 0, i64 0)), !track !202
  store %struct._IO_FILE* %767, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %768 = icmp eq %struct._IO_FILE* %767, null
  br i1 %768, label %781, label %769

; <label>:769:                                    ; preds = %762
  %770 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %771 = call i32 @fseek(%struct._IO_FILE* %770, i64 0, i32 2)
  %772 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %773 = call i64 @ftell(%struct._IO_FILE* %772)
  %774 = icmp sle i64 %773, 0
  %775 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  br i1 %774, label %776, label %77

; <label>:776:                                    ; preds = %769
  %777 = call i32 @fclose(%struct._IO_FILE* %775)
  store %struct._IO_FILE* null, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %778 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.68, i64 0, i64 0))
  %779 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %780 = add nsw i32 %779, 1
  store i32 %780, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge.16

; <label>:781:                                    ; preds = %762
  call void @perror(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.67, i64 0, i64 0))
  %782 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %783 = add nsw i32 %782, 1
  store i32 %783, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge.16

; <label>:784:                                    ; preds = %755
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 28), align 8
  %785 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
  %786 = call i32 @fileno(%struct._IO_FILE* %785) #9
  %787 = call %struct._IO_FILE* @fdopen(i32 %786, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.66, i64 0, i64 0)) #9, !track !201
  store %struct._IO_FILE* %787, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %788 = icmp eq %struct._IO_FILE* %787, null
  br i1 %788, label %789, label %53

; <label>:789:                                    ; preds = %784
  call void @perror(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.67, i64 0, i64 0))
  %790 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %791 = add nsw i32 %790, 1
  store i32 %791, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge.16

.backedge.16:                                     ; preds = %789, %781, %776
  call void @__loop_iteration_test___3()
  call void @unroll_loop(i32 108)
  %792 = load i32, i32* %26, align 8
  %793 = icmp slt i32 %792, 128
  br i1 %793, label %.lr.ph.17, label %.loopexit.loopexit

.lr.ph.17:                                        ; preds = %.backedge.16
  %794 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %795 = sext i32 %794 to i64
  %796 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %795
  %797 = load i8*, i8** %796, align 8
  %798 = icmp ne i8* %797, null
  br i1 %798, label %799, label %.loopexit.loopexit

; <label>:799:                                    ; preds = %.lr.ph.17
  %800 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %801 = sext i32 %800 to i64
  %802 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %801
  %803 = load i8*, i8** %802, align 8
  %804 = call i32 @strcmp(i8* %803, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i64 0, i64 0)) #10
  %805 = icmp eq i32 %804, 0
  br i1 %805, label %828, label %806

; <label>:806:                                    ; preds = %799
  store i32 0, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 28), align 8
  %807 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %808 = sext i32 %807 to i64
  %809 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %808
  %810 = load i8*, i8** %809, align 8
  %811 = call %struct._IO_FILE* @fopen64(i8* %810, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.66, i64 0, i64 0)), !track !202
  store %struct._IO_FILE* %811, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %812 = icmp eq %struct._IO_FILE* %811, null
  br i1 %812, label %825, label %813

; <label>:813:                                    ; preds = %806
  %814 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %815 = call i32 @fseek(%struct._IO_FILE* %814, i64 0, i32 2)
  %816 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %817 = call i64 @ftell(%struct._IO_FILE* %816)
  %818 = icmp sle i64 %817, 0
  %819 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  br i1 %818, label %820, label %77

; <label>:820:                                    ; preds = %813
  %821 = call i32 @fclose(%struct._IO_FILE* %819)
  store %struct._IO_FILE* null, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %822 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.68, i64 0, i64 0))
  %823 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %824 = add nsw i32 %823, 1
  store i32 %824, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge.17

; <label>:825:                                    ; preds = %806
  call void @perror(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.67, i64 0, i64 0))
  %826 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %827 = add nsw i32 %826, 1
  store i32 %827, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge.17

; <label>:828:                                    ; preds = %799
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 28), align 8
  %829 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
  %830 = call i32 @fileno(%struct._IO_FILE* %829) #9
  %831 = call %struct._IO_FILE* @fdopen(i32 %830, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.66, i64 0, i64 0)) #9, !track !201
  store %struct._IO_FILE* %831, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %832 = icmp eq %struct._IO_FILE* %831, null
  br i1 %832, label %833, label %53

; <label>:833:                                    ; preds = %828
  call void @perror(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.67, i64 0, i64 0))
  %834 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %835 = add nsw i32 %834, 1
  store i32 %835, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge.17

.backedge.17:                                     ; preds = %833, %825, %820
  call void @__loop_iteration_test___3()
  call void @unroll_loop(i32 108)
  %836 = load i32, i32* %26, align 8
  %837 = icmp slt i32 %836, 128
  br i1 %837, label %.lr.ph.18, label %.loopexit.loopexit

.lr.ph.18:                                        ; preds = %.backedge.17
  %838 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %839 = sext i32 %838 to i64
  %840 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %839
  %841 = load i8*, i8** %840, align 8
  %842 = icmp ne i8* %841, null
  br i1 %842, label %843, label %.loopexit.loopexit

; <label>:843:                                    ; preds = %.lr.ph.18
  %844 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %845 = sext i32 %844 to i64
  %846 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %845
  %847 = load i8*, i8** %846, align 8
  %848 = call i32 @strcmp(i8* %847, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i64 0, i64 0)) #10
  %849 = icmp eq i32 %848, 0
  br i1 %849, label %872, label %850

; <label>:850:                                    ; preds = %843
  store i32 0, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 28), align 8
  %851 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %852 = sext i32 %851 to i64
  %853 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %852
  %854 = load i8*, i8** %853, align 8
  %855 = call %struct._IO_FILE* @fopen64(i8* %854, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.66, i64 0, i64 0)), !track !202
  store %struct._IO_FILE* %855, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %856 = icmp eq %struct._IO_FILE* %855, null
  br i1 %856, label %869, label %857

; <label>:857:                                    ; preds = %850
  %858 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %859 = call i32 @fseek(%struct._IO_FILE* %858, i64 0, i32 2)
  %860 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %861 = call i64 @ftell(%struct._IO_FILE* %860)
  %862 = icmp sle i64 %861, 0
  %863 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  br i1 %862, label %864, label %77

; <label>:864:                                    ; preds = %857
  %865 = call i32 @fclose(%struct._IO_FILE* %863)
  store %struct._IO_FILE* null, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %866 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.68, i64 0, i64 0))
  %867 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %868 = add nsw i32 %867, 1
  store i32 %868, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge.18

; <label>:869:                                    ; preds = %850
  call void @perror(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.67, i64 0, i64 0))
  %870 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %871 = add nsw i32 %870, 1
  store i32 %871, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge.18

; <label>:872:                                    ; preds = %843
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 28), align 8
  %873 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
  %874 = call i32 @fileno(%struct._IO_FILE* %873) #9
  %875 = call %struct._IO_FILE* @fdopen(i32 %874, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.66, i64 0, i64 0)) #9, !track !201
  store %struct._IO_FILE* %875, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %876 = icmp eq %struct._IO_FILE* %875, null
  br i1 %876, label %877, label %53

; <label>:877:                                    ; preds = %872
  call void @perror(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.67, i64 0, i64 0))
  %878 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %879 = add nsw i32 %878, 1
  store i32 %879, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge.18

.backedge.18:                                     ; preds = %877, %869, %864
  call void @__loop_iteration_test___3()
  call void @unroll_loop(i32 108)
  %880 = load i32, i32* %26, align 8
  %881 = icmp slt i32 %880, 128
  br i1 %881, label %.lr.ph.19, label %.loopexit.loopexit

.lr.ph.19:                                        ; preds = %.backedge.18
  %882 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %883 = sext i32 %882 to i64
  %884 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %883
  %885 = load i8*, i8** %884, align 8
  %886 = icmp ne i8* %885, null
  br i1 %886, label %887, label %.loopexit.loopexit

; <label>:887:                                    ; preds = %.lr.ph.19
  %888 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %889 = sext i32 %888 to i64
  %890 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %889
  %891 = load i8*, i8** %890, align 8
  %892 = call i32 @strcmp(i8* %891, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i64 0, i64 0)) #10
  %893 = icmp eq i32 %892, 0
  br i1 %893, label %916, label %894

; <label>:894:                                    ; preds = %887
  store i32 0, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 28), align 8
  %895 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %896 = sext i32 %895 to i64
  %897 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %896
  %898 = load i8*, i8** %897, align 8
  %899 = call %struct._IO_FILE* @fopen64(i8* %898, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.66, i64 0, i64 0)), !track !202
  store %struct._IO_FILE* %899, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %900 = icmp eq %struct._IO_FILE* %899, null
  br i1 %900, label %913, label %901

; <label>:901:                                    ; preds = %894
  %902 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %903 = call i32 @fseek(%struct._IO_FILE* %902, i64 0, i32 2)
  %904 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %905 = call i64 @ftell(%struct._IO_FILE* %904)
  %906 = icmp sle i64 %905, 0
  %907 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  br i1 %906, label %908, label %77

; <label>:908:                                    ; preds = %901
  %909 = call i32 @fclose(%struct._IO_FILE* %907)
  store %struct._IO_FILE* null, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %910 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.68, i64 0, i64 0))
  %911 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %912 = add nsw i32 %911, 1
  store i32 %912, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge.19

; <label>:913:                                    ; preds = %894
  call void @perror(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.67, i64 0, i64 0))
  %914 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %915 = add nsw i32 %914, 1
  store i32 %915, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge.19

; <label>:916:                                    ; preds = %887
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 28), align 8
  %917 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
  %918 = call i32 @fileno(%struct._IO_FILE* %917) #9
  %919 = call %struct._IO_FILE* @fdopen(i32 %918, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.66, i64 0, i64 0)) #9, !track !201
  store %struct._IO_FILE* %919, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %920 = icmp eq %struct._IO_FILE* %919, null
  br i1 %920, label %921, label %53

; <label>:921:                                    ; preds = %916
  call void @perror(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.67, i64 0, i64 0))
  %922 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %923 = add nsw i32 %922, 1
  store i32 %923, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge.19

.backedge.19:                                     ; preds = %921, %913, %908
  call void @__loop_iteration_test___3()
  call void @unroll_loop(i32 108)
  %924 = load i32, i32* %26, align 8
  br label %.loopexit.loopexit
}

declare void @__loop_termination_test___3()

declare void @__loop_iteration_test___3()

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @set_dicts_clone_clone_clone_clone(i8*) #0 {
  %2 = alloca i8*, align 8, !track !210
  store i8* %0, i8** %2, align 8
  %3 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 23
  store i32 0, i32* %3, align 8
  %4 = getelementptr [2 x i8], [2 x i8]* @.str.6, i32 0, i32 0
  %5 = call i8* @strsep(i8** %2, i8* %4) #9
  br label %6

; <label>:6:                                      ; preds = %1
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 0), align 8
  br i1 true, label %71, label %.preheader

.preheader:                                       ; preds
  %.02.ph = phi i8* [ %5, %6 ], [ %5, %71 ], [ %5, %72 ], [ %5, %73 ], [ %5, %74 ], [ %5, %75 ], [ %5, %76 ], [ %5, %77 ], [ %5, %78 ], [ %5, %79 ], [ %5, %80 ], [ %5, %81 ], [ %5, %82 ], [ %5, %83 ], [ %5, %84 ], [ %5, %85 ], [ %5, %86 ], [ %5, %87 ], [ %5, %88 ], [ %5, %89 ], [ %5, %90 ], [ %5, %91 ], [ %5, %92 ], [ %5, %93 ], [ %5, %94 ], [ %5, %95 ], [ %5, %96 ], [ %5, %97 ], [ %5, %98 ], [ %5, %99 ], [ %5, %100 ], [ %5, %101 ], [ %5, %102 ], [ %5, %103 ], [ %5, %104 ], [ %5, %105 ], [ %5, %106 ], [ %5, %107 ], [ %5, %108 ], [ %5, %109 ], [ %5, %110 ], [ %5, %111 ], [ %5, %112 ], [ %5, %113 ], [ %5, %114 ], [ %5, %115 ], [ %5, %116 ], [ %5, %117 ], [ %5, %118 ], [ %5, %119 ], [ %5, %120 ], [ %5, %121 ], [ %5, %122 ], [ %5, %123 ], [ %5, %124 ], [ %5, %125 ], [ %5, %126 ], [ %5, %127 ], [ %5, %128 ], [ %5, %129 ], [ %5, %130 ], [ %5, %131 ], [ %5, %132 ], [ %5, %133 ], [ %5, %134 ], [ %5, %135 ], [ %5, %136 ], [ %5, %137 ], [ %5, %138 ], [ %5, %139 ], [ %5, %140 ], [ %5, %141 ], [ %5, %142 ], [ %5, %143 ], [ %5, %144 ], [ %5, %145 ], [ %5, %146 ], [ %5, %147 ], [ %5, %148 ], [ %5, %149 ], [ %5, %150 ], [ %5, %151 ], [ %5, %152 ], [ %5, %153 ], [ %5, %154 ], [ %5, %155 ], [ %5, %156 ], [ %5, %157 ], [ %5, %158 ], [ %5, %159 ], [ %5, %160 ], [ %5, %161 ], [ %5, %162 ], [ %5, %163 ], [ %5, %164 ], [ %5, %165 ], [ %5, %166 ], [ %5, %167 ], [ %5, %168 ], [ %5, %169 ], [ %5, %170 ], [ %5, %171 ], [ %5, %172 ], [ %5, %173 ], [ %5, %174 ], [ %5, %175 ], [ %5, %176 ], [ %5, %177 ], [ %5, %178 ], [ %5, %179 ], [ %5, %180 ], [ %5, %181 ], [ %5, %182 ], [ %5, %183 ], [ %5, %184 ], [ %5, %185 ], [ %5, %186 ], [ %5, %187 ], [ %5, %188 ], [ %5, %189 ], [ %5, %190 ], [ %5, %191 ], [ %5, %192 ], [ %5, %193 ], [ %5, %194 ], [ %5, %195 ], [ %5, %196 ], [ %5, %197 ]
  call void @__loop_termination_test___1()
  call void @unroll_loop(i32 117)
  %7 = icmp ne i64 10000785, 0
  %8 = icmp ne i8* %.02.ph, null
  %9 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 23
  %10 = load i32, i32* %9, align 8
  %11 = icmp slt i32 0, 128
  %12 = select i1 true, i1 true, i1 false
  br i1 true, label %.lr.ph.preheader, label %._crit_edge

.lr.ph.preheader:                                 ; preds = %.preheader
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader
  %13 = getelementptr [13 x i8], [13 x i8]* @5, i64 0, i64 0
  %14 = call i64 @strlen(i8* %13) #10
  %15 = add i64 12, 1
  %16 = trunc i64 13 to i32
  %17 = sext i32 13 to i64
  %18 = call noalias i8* @malloc(i64 13) #9, !track !211
  %19 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %20 = sext i32 0 to i64
  %21 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 0
  store i8* %18, i8** %21, align 8
  %22 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %23 = sext i32 0 to i64
  %24 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 0
  %25 = load i8*, i8** %24, align 8
  %26 = icmp eq i64 10000886, 0
  %27 = icmp eq i8* %25, null
  br i1 false, label %28, label %30

; <label>:28:                                     ; preds = %.lr.ph.19, %.lr.ph.18, %.lr.ph.17, %.lr.ph.16, %.lr.ph.15, %.lr.ph.14, %.lr.ph.13, %.lr.ph.12, %.lr.ph.11, %.lr.ph.10, %.lr.ph.9, %.lr.ph.8, %.lr.ph.7, %.lr.ph.6, %.lr.ph.5, %.lr.ph.4, %.lr.ph.3, %.lr.ph.2, %.lr.ph.1, %.lr.ph
  call void @__loop_termination_test___2()
  %29 = getelementptr [19 x i8], [19 x i8]* @.str.73, i32 0, i32 0
  call void @perror(i8* %29)
  br label %70

; <label>:30:                                     ; preds = %.lr.ph
  %31 = getelementptr [13 x i8], [13 x i8]* @6, i64 0, i64 0
  %32 = getelementptr [3 x i8], [3 x i8]* @7, i64 0, i64 0
  %33 = call i32 @strncasecmp(i8* %31, i8* %32, i64 2) #10
  %34 = icmp eq i32 %33, 0
  %35 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %36 = sext i32 0 to i64
  %37 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 0
  %38 = load i8*, i8** %37, align 8
  br i1 %34, label %39, label %47

; <label>:39:                                     ; preds = %30
  %40 = getelementptr inbounds i8, i8* %.02.ph, i64 2
  %41 = sub nsw i32 13, 2
  %42 = sext i32 11 to i64
  %43 = call i8* @strncpy(i8* %38, i8* %40, i64 11) #9, !track !212
  %44 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %45 = sext i32 0 to i64
  %46 = getelementptr inbounds [128 x i32], [128 x i32]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 25), i64 0, i64 0
  store i32 1, i32* %46, align 4
  br label %53

; <label>:47:                                     ; preds = %30
  %48 = sext i32 13 to i64
  %49 = call i8* @strncpy(i8* %38, i8* %.02.ph, i64 13) #9, !track !213
  %50 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %51 = sext i32 0 to i64
  %52 = getelementptr inbounds [128 x i32], [128 x i32]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 25), i64 0, i64 0
  store i32 0, i32* %52, align 4
  br label %53

; <label>:53:                                     ; preds = %47, %39
  call void @__loop_iteration_test___2()
  %54 = call i8* @strsep(i8** %2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0)) #9
  %55 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %56 = add nsw i32 0, 1
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  call void @unroll_loop(i32 117)
  %57 = icmp ne i64 0, 0
  %58 = icmp ne i8* null, null
  %59 = load i32, i32* %9, align 8
  %60 = icmp slt i32 1, 128
  %61 = select i1 false, i1 true, i1 false
  br i1 false, label %.lr.ph.1, label %._crit_edge.loopexit

._crit_edge.loopexit:                             ; preds = %988, %946, %904, %862, %820, %778, %736, %694, %652, %610, %568, %526, %484, %442, %400, %358, %316, %274, %232, %53
  call void @__loop_termination_test___2()
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %.preheader
  %62 = call i32 @next_dict_clone_clone(i32 0)
  br label %63

; <label>:63:                                     ; preds = %._crit_edge
  call void @__loop_iteration_test___4()
  %64 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %65 = add nsw i32 %64, 1
  %66 = call i32 @next_dict_clone.10(i32 %65)
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %995, label %68

; <label>:68:                                     ; preds = %1085, %1080, %1075, %1070, %1065, %1060, %1055, %1050, %1045, %1040, %1035, %1030, %1025, %1020, %1015, %1010, %1005, %1000, %995, %63
  call void @__loop_termination_test___4()
  %69 = call i32 @next_dict(i32 0)
  br label %70

; <label>:70:                                     ; preds = %68, %28
  %.0 = phi i32 [ 1, %28 ], [ 0, %68 ]
  ret i32 %.0

; <label>:71:                                     ; preds = %6
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 1), align 8
  br i1 true, label %72, label %.preheader

; <label>:72:                                     ; preds = %71
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 2), align 8
  br i1 true, label %73, label %.preheader

; <label>:73:                                     ; preds = %72
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 3), align 8
  br i1 true, label %74, label %.preheader

; <label>:74:                                     ; preds = %73
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 4), align 8
  br i1 true, label %75, label %.preheader

; <label>:75:                                     ; preds = %74
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 5), align 8
  br i1 true, label %76, label %.preheader

; <label>:76:                                     ; preds = %75
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 6), align 8
  br i1 true, label %77, label %.preheader

; <label>:77:                                     ; preds = %76
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 7), align 8
  br i1 true, label %78, label %.preheader

; <label>:78:                                     ; preds = %77
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 8), align 8
  br i1 true, label %79, label %.preheader

; <label>:79:                                     ; preds = %78
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 9), align 8
  br i1 true, label %80, label %.preheader

; <label>:80:                                     ; preds = %79
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 10), align 8
  br i1 true, label %81, label %.preheader

; <label>:81:                                     ; preds = %80
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 11), align 8
  br i1 true, label %82, label %.preheader

; <label>:82:                                     ; preds = %81
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 12), align 8
  br i1 true, label %83, label %.preheader

; <label>:83:                                     ; preds = %82
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 13), align 8
  br i1 true, label %84, label %.preheader

; <label>:84:                                     ; preds = %83
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 14), align 8
  br i1 true, label %85, label %.preheader

; <label>:85:                                     ; preds = %84
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 15), align 8
  br i1 true, label %86, label %.preheader

; <label>:86:                                     ; preds = %85
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 16), align 8
  br i1 true, label %87, label %.preheader

; <label>:87:                                     ; preds = %86
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 17), align 8
  br i1 true, label %88, label %.preheader

; <label>:88:                                     ; preds = %87
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 18), align 8
  br i1 true, label %89, label %.preheader

; <label>:89:                                     ; preds = %88
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 19), align 8
  br i1 true, label %90, label %.preheader

; <label>:90:                                     ; preds = %89
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 20), align 8
  br i1 true, label %91, label %.preheader

; <label>:91:                                     ; preds = %90
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 21), align 8
  br i1 true, label %92, label %.preheader

; <label>:92:                                     ; preds = %91
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 22), align 8
  br i1 true, label %93, label %.preheader

; <label>:93:                                     ; preds = %92
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 23), align 8
  br i1 true, label %94, label %.preheader

; <label>:94:                                     ; preds = %93
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 24), align 8
  br i1 true, label %95, label %.preheader

; <label>:95:                                     ; preds = %94
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 25), align 8
  br i1 true, label %96, label %.preheader

; <label>:96:                                     ; preds = %95
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 26), align 8
  br i1 true, label %97, label %.preheader

; <label>:97:                                     ; preds = %96
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 27), align 8
  br i1 true, label %98, label %.preheader

; <label>:98:                                     ; preds = %97
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 28), align 8
  br i1 true, label %99, label %.preheader

; <label>:99:                                     ; preds = %98
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 29), align 8
  br i1 true, label %100, label %.preheader

; <label>:100:                                    ; preds = %99
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 30), align 8
  br i1 true, label %101, label %.preheader

; <label>:101:                                    ; preds = %100
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 31), align 8
  br i1 true, label %102, label %.preheader

; <label>:102:                                    ; preds = %101
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 32), align 8
  br i1 true, label %103, label %.preheader

; <label>:103:                                    ; preds = %102
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 33), align 8
  br i1 true, label %104, label %.preheader

; <label>:104:                                    ; preds = %103
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 34), align 8
  br i1 true, label %105, label %.preheader

; <label>:105:                                    ; preds = %104
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 35), align 8
  br i1 true, label %106, label %.preheader

; <label>:106:                                    ; preds = %105
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 36), align 8
  br i1 true, label %107, label %.preheader

; <label>:107:                                    ; preds = %106
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 37), align 8
  br i1 true, label %108, label %.preheader

; <label>:108:                                    ; preds = %107
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 38), align 8
  br i1 true, label %109, label %.preheader

; <label>:109:                                    ; preds = %108
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 39), align 8
  br i1 true, label %110, label %.preheader

; <label>:110:                                    ; preds = %109
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 40), align 8
  br i1 true, label %111, label %.preheader

; <label>:111:                                    ; preds = %110
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 41), align 8
  br i1 true, label %112, label %.preheader

; <label>:112:                                    ; preds = %111
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 42), align 8
  br i1 true, label %113, label %.preheader

; <label>:113:                                    ; preds = %112
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 43), align 8
  br i1 true, label %114, label %.preheader

; <label>:114:                                    ; preds = %113
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 44), align 8
  br i1 true, label %115, label %.preheader

; <label>:115:                                    ; preds = %114
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 45), align 8
  br i1 true, label %116, label %.preheader

; <label>:116:                                    ; preds = %115
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 46), align 8
  br i1 true, label %117, label %.preheader

; <label>:117:                                    ; preds = %116
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 47), align 8
  br i1 true, label %118, label %.preheader

; <label>:118:                                    ; preds = %117
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 48), align 8
  br i1 true, label %119, label %.preheader

; <label>:119:                                    ; preds = %118
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 49), align 8
  br i1 true, label %120, label %.preheader

; <label>:120:                                    ; preds = %119
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 50), align 8
  br i1 true, label %121, label %.preheader

; <label>:121:                                    ; preds = %120
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 51), align 8
  br i1 true, label %122, label %.preheader

; <label>:122:                                    ; preds = %121
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 52), align 8
  br i1 true, label %123, label %.preheader

; <label>:123:                                    ; preds = %122
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 53), align 8
  br i1 true, label %124, label %.preheader

; <label>:124:                                    ; preds = %123
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 54), align 8
  br i1 true, label %125, label %.preheader

; <label>:125:                                    ; preds = %124
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 55), align 8
  br i1 true, label %126, label %.preheader

; <label>:126:                                    ; preds = %125
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 56), align 8
  br i1 true, label %127, label %.preheader

; <label>:127:                                    ; preds = %126
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 57), align 8
  br i1 true, label %128, label %.preheader

; <label>:128:                                    ; preds = %127
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 58), align 8
  br i1 true, label %129, label %.preheader

; <label>:129:                                    ; preds = %128
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 59), align 8
  br i1 true, label %130, label %.preheader

; <label>:130:                                    ; preds = %129
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 60), align 8
  br i1 true, label %131, label %.preheader

; <label>:131:                                    ; preds = %130
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 61), align 8
  br i1 true, label %132, label %.preheader

; <label>:132:                                    ; preds = %131
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 62), align 8
  br i1 true, label %133, label %.preheader

; <label>:133:                                    ; preds = %132
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 63), align 8
  br i1 true, label %134, label %.preheader

; <label>:134:                                    ; preds = %133
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 64), align 8
  br i1 true, label %135, label %.preheader

; <label>:135:                                    ; preds = %134
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 65), align 8
  br i1 true, label %136, label %.preheader

; <label>:136:                                    ; preds = %135
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 66), align 8
  br i1 true, label %137, label %.preheader

; <label>:137:                                    ; preds = %136
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 67), align 8
  br i1 true, label %138, label %.preheader

; <label>:138:                                    ; preds = %137
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 68), align 8
  br i1 true, label %139, label %.preheader

; <label>:139:                                    ; preds = %138
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 69), align 8
  br i1 true, label %140, label %.preheader

; <label>:140:                                    ; preds = %139
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 70), align 8
  br i1 true, label %141, label %.preheader

; <label>:141:                                    ; preds = %140
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 71), align 8
  br i1 true, label %142, label %.preheader

; <label>:142:                                    ; preds = %141
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 72), align 8
  br i1 true, label %143, label %.preheader

; <label>:143:                                    ; preds = %142
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 73), align 8
  br i1 true, label %144, label %.preheader

; <label>:144:                                    ; preds = %143
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 74), align 8
  br i1 true, label %145, label %.preheader

; <label>:145:                                    ; preds = %144
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 75), align 8
  br i1 true, label %146, label %.preheader

; <label>:146:                                    ; preds = %145
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 76), align 8
  br i1 true, label %147, label %.preheader

; <label>:147:                                    ; preds = %146
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 77), align 8
  br i1 true, label %148, label %.preheader

; <label>:148:                                    ; preds = %147
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 78), align 8
  br i1 true, label %149, label %.preheader

; <label>:149:                                    ; preds = %148
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 79), align 8
  br i1 true, label %150, label %.preheader

; <label>:150:                                    ; preds = %149
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 80), align 8
  br i1 true, label %151, label %.preheader

; <label>:151:                                    ; preds = %150
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 81), align 8
  br i1 true, label %152, label %.preheader

; <label>:152:                                    ; preds = %151
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 82), align 8
  br i1 true, label %153, label %.preheader

; <label>:153:                                    ; preds = %152
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 83), align 8
  br i1 true, label %154, label %.preheader

; <label>:154:                                    ; preds = %153
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 84), align 8
  br i1 true, label %155, label %.preheader

; <label>:155:                                    ; preds = %154
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 85), align 8
  br i1 true, label %156, label %.preheader

; <label>:156:                                    ; preds = %155
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 86), align 8
  br i1 true, label %157, label %.preheader

; <label>:157:                                    ; preds = %156
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 87), align 8
  br i1 true, label %158, label %.preheader

; <label>:158:                                    ; preds = %157
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 88), align 8
  br i1 true, label %159, label %.preheader

; <label>:159:                                    ; preds = %158
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 89), align 8
  br i1 true, label %160, label %.preheader

; <label>:160:                                    ; preds = %159
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 90), align 8
  br i1 true, label %161, label %.preheader

; <label>:161:                                    ; preds = %160
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 91), align 8
  br i1 true, label %162, label %.preheader

; <label>:162:                                    ; preds = %161
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 92), align 8
  br i1 true, label %163, label %.preheader

; <label>:163:                                    ; preds = %162
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 93), align 8
  br i1 true, label %164, label %.preheader

; <label>:164:                                    ; preds = %163
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 94), align 8
  br i1 true, label %165, label %.preheader

; <label>:165:                                    ; preds = %164
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 95), align 8
  br i1 true, label %166, label %.preheader

; <label>:166:                                    ; preds = %165
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 96), align 8
  br i1 true, label %167, label %.preheader

; <label>:167:                                    ; preds = %166
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 97), align 8
  br i1 true, label %168, label %.preheader

; <label>:168:                                    ; preds = %167
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 98), align 8
  br i1 true, label %169, label %.preheader

; <label>:169:                                    ; preds = %168
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 99), align 8
  br i1 true, label %170, label %.preheader

; <label>:170:                                    ; preds = %169
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 100), align 8
  br i1 true, label %171, label %.preheader

; <label>:171:                                    ; preds = %170
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 101), align 8
  br i1 true, label %172, label %.preheader

; <label>:172:                                    ; preds = %171
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 102), align 8
  br i1 true, label %173, label %.preheader

; <label>:173:                                    ; preds = %172
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 103), align 8
  br i1 true, label %174, label %.preheader

; <label>:174:                                    ; preds = %173
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 104), align 8
  br i1 true, label %175, label %.preheader

; <label>:175:                                    ; preds = %174
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 105), align 8
  br i1 true, label %176, label %.preheader

; <label>:176:                                    ; preds = %175
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 106), align 8
  br i1 true, label %177, label %.preheader

; <label>:177:                                    ; preds = %176
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 107), align 8
  br i1 true, label %178, label %.preheader

; <label>:178:                                    ; preds = %177
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 108), align 8
  br i1 true, label %179, label %.preheader

; <label>:179:                                    ; preds = %178
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 109), align 8
  br i1 true, label %180, label %.preheader

; <label>:180:                                    ; preds = %179
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 110), align 8
  br i1 true, label %181, label %.preheader

; <label>:181:                                    ; preds = %180
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 111), align 8
  br i1 true, label %182, label %.preheader

; <label>:182:                                    ; preds = %181
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 112), align 8
  br i1 true, label %183, label %.preheader

; <label>:183:                                    ; preds = %182
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 113), align 8
  br i1 true, label %184, label %.preheader

; <label>:184:                                    ; preds = %183
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 114), align 8
  br i1 true, label %185, label %.preheader

; <label>:185:                                    ; preds = %184
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 115), align 8
  br i1 true, label %186, label %.preheader

; <label>:186:                                    ; preds = %185
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 116), align 8
  br i1 true, label %187, label %.preheader

; <label>:187:                                    ; preds = %186
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 117), align 8
  br i1 true, label %188, label %.preheader

; <label>:188:                                    ; preds = %187
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 118), align 8
  br i1 true, label %189, label %.preheader

; <label>:189:                                    ; preds = %188
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 119), align 8
  br i1 true, label %190, label %.preheader

; <label>:190:                                    ; preds = %189
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 120), align 8
  br i1 true, label %191, label %.preheader

; <label>:191:                                    ; preds = %190
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 121), align 8
  br i1 true, label %192, label %.preheader

; <label>:192:                                    ; preds = %191
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 122), align 8
  br i1 true, label %193, label %.preheader

; <label>:193:                                    ; preds = %192
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 123), align 8
  br i1 true, label %194, label %.preheader

; <label>:194:                                    ; preds = %193
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 124), align 8
  br i1 true, label %195, label %.preheader

; <label>:195:                                    ; preds = %194
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 125), align 8
  br i1 true, label %196, label %.preheader

; <label>:196:                                    ; preds = %195
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 126), align 8
  br i1 true, label %197, label %.preheader

; <label>:197:                                    ; preds = %196
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 116)
  store i8* null, i8** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21, i64 127), align 8
  br label %.preheader

.lr.ph.1:                                         ; preds = %53
  %198 = call i64 @strlen(i8* null) #10
  %199 = add i64 %198, 1
  %200 = trunc i64 %199 to i32
  %201 = sext i32 %200 to i64
  %202 = call noalias i8* @malloc(i64 %201) #9, !track !211
  %203 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %204 = sext i32 %203 to i64
  %205 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %204
  store i8* %202, i8** %205, align 8
  %206 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %207 = sext i32 %206 to i64
  %208 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %207
  %209 = load i8*, i8** %208, align 8
  %210 = icmp eq i8* %209, null
  br i1 %210, label %28, label %211

; <label>:211:                                    ; preds = %.lr.ph.1
  %212 = call i32 @strncasecmp(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.74, i64 0, i64 0), i64 2) #10
  %213 = icmp eq i32 %212, 0
  %214 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %215 = sext i32 %214 to i64
  %216 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %215
  %217 = load i8*, i8** %216, align 8
  br i1 %213, label %224, label %218

; <label>:218:                                    ; preds = %211
  %219 = sext i32 %200 to i64
  %220 = call i8* @strncpy(i8* %217, i8* null, i64 %219) #9, !track !213
  %221 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %222 = sext i32 %221 to i64
  %223 = getelementptr inbounds [128 x i32], [128 x i32]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 25), i64 0, i64 %222
  store i32 0, i32* %223, align 4
  br label %232

; <label>:224:                                    ; preds = %211
  %225 = getelementptr inbounds i8, i8* null, i64 2
  %226 = sub nsw i32 %200, 2
  %227 = sext i32 %226 to i64
  %228 = call i8* @strncpy(i8* %217, i8* %225, i64 %227) #9, !track !212
  %229 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %230 = sext i32 %229 to i64
  %231 = getelementptr inbounds [128 x i32], [128 x i32]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 25), i64 0, i64 %230
  store i32 1, i32* %231, align 4
  br label %232

; <label>:232:                                    ; preds = %224, %218
  call void @__loop_iteration_test___2()
  %233 = call i8* @strsep(i8** %2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0)) #9
  %234 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %235 = add nsw i32 %234, 1
  store i32 %235, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  call void @unroll_loop(i32 117)
  %236 = icmp ne i8* %233, null
  %237 = load i32, i32* %9, align 8
  %238 = icmp slt i32 %237, 128
  %239 = select i1 %236, i1 %238, i1 false
  br i1 %239, label %.lr.ph.2, label %._crit_edge.loopexit

.lr.ph.2:                                         ; preds = %232
  %240 = call i64 @strlen(i8* %233) #10
  %241 = add i64 %240, 1
  %242 = trunc i64 %241 to i32
  %243 = sext i32 %242 to i64
  %244 = call noalias i8* @malloc(i64 %243) #9, !track !211
  %245 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %246 = sext i32 %245 to i64
  %247 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %246
  store i8* %244, i8** %247, align 8
  %248 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %249 = sext i32 %248 to i64
  %250 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %249
  %251 = load i8*, i8** %250, align 8
  %252 = icmp eq i8* %251, null
  br i1 %252, label %28, label %253

; <label>:253:                                    ; preds = %.lr.ph.2
  %254 = call i32 @strncasecmp(i8* %233, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.74, i64 0, i64 0), i64 2) #10
  %255 = icmp eq i32 %254, 0
  %256 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %257 = sext i32 %256 to i64
  %258 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %257
  %259 = load i8*, i8** %258, align 8
  br i1 %255, label %266, label %260

; <label>:260:                                    ; preds = %253
  %261 = sext i32 %242 to i64
  %262 = call i8* @strncpy(i8* %259, i8* %233, i64 %261) #9, !track !213
  %263 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %264 = sext i32 %263 to i64
  %265 = getelementptr inbounds [128 x i32], [128 x i32]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 25), i64 0, i64 %264
  store i32 0, i32* %265, align 4
  br label %274

; <label>:266:                                    ; preds = %253
  %267 = getelementptr inbounds i8, i8* %233, i64 2
  %268 = sub nsw i32 %242, 2
  %269 = sext i32 %268 to i64
  %270 = call i8* @strncpy(i8* %259, i8* %267, i64 %269) #9, !track !212
  %271 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %272 = sext i32 %271 to i64
  %273 = getelementptr inbounds [128 x i32], [128 x i32]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 25), i64 0, i64 %272
  store i32 1, i32* %273, align 4
  br label %274

; <label>:274:                                    ; preds = %266, %260
  call void @__loop_iteration_test___2()
  %275 = call i8* @strsep(i8** %2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0)) #9
  %276 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %277 = add nsw i32 %276, 1
  store i32 %277, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  call void @unroll_loop(i32 117)
  %278 = icmp ne i8* %275, null
  %279 = load i32, i32* %9, align 8
  %280 = icmp slt i32 %279, 128
  %281 = select i1 %278, i1 %280, i1 false
  br i1 %281, label %.lr.ph.3, label %._crit_edge.loopexit

.lr.ph.3:                                         ; preds = %274
  %282 = call i64 @strlen(i8* %275) #10
  %283 = add i64 %282, 1
  %284 = trunc i64 %283 to i32
  %285 = sext i32 %284 to i64
  %286 = call noalias i8* @malloc(i64 %285) #9, !track !211
  %287 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %288 = sext i32 %287 to i64
  %289 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %288
  store i8* %286, i8** %289, align 8
  %290 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %291 = sext i32 %290 to i64
  %292 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %291
  %293 = load i8*, i8** %292, align 8
  %294 = icmp eq i8* %293, null
  br i1 %294, label %28, label %295

; <label>:295:                                    ; preds = %.lr.ph.3
  %296 = call i32 @strncasecmp(i8* %275, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.74, i64 0, i64 0), i64 2) #10
  %297 = icmp eq i32 %296, 0
  %298 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %299 = sext i32 %298 to i64
  %300 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %299
  %301 = load i8*, i8** %300, align 8
  br i1 %297, label %308, label %302

; <label>:302:                                    ; preds = %295
  %303 = sext i32 %284 to i64
  %304 = call i8* @strncpy(i8* %301, i8* %275, i64 %303) #9, !track !213
  %305 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %306 = sext i32 %305 to i64
  %307 = getelementptr inbounds [128 x i32], [128 x i32]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 25), i64 0, i64 %306
  store i32 0, i32* %307, align 4
  br label %316

; <label>:308:                                    ; preds = %295
  %309 = getelementptr inbounds i8, i8* %275, i64 2
  %310 = sub nsw i32 %284, 2
  %311 = sext i32 %310 to i64
  %312 = call i8* @strncpy(i8* %301, i8* %309, i64 %311) #9, !track !212
  %313 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %314 = sext i32 %313 to i64
  %315 = getelementptr inbounds [128 x i32], [128 x i32]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 25), i64 0, i64 %314
  store i32 1, i32* %315, align 4
  br label %316

; <label>:316:                                    ; preds = %308, %302
  call void @__loop_iteration_test___2()
  %317 = call i8* @strsep(i8** %2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0)) #9
  %318 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %319 = add nsw i32 %318, 1
  store i32 %319, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  call void @unroll_loop(i32 117)
  %320 = icmp ne i8* %317, null
  %321 = load i32, i32* %9, align 8
  %322 = icmp slt i32 %321, 128
  %323 = select i1 %320, i1 %322, i1 false
  br i1 %323, label %.lr.ph.4, label %._crit_edge.loopexit

.lr.ph.4:                                         ; preds = %316
  %324 = call i64 @strlen(i8* %317) #10
  %325 = add i64 %324, 1
  %326 = trunc i64 %325 to i32
  %327 = sext i32 %326 to i64
  %328 = call noalias i8* @malloc(i64 %327) #9, !track !211
  %329 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %330 = sext i32 %329 to i64
  %331 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %330
  store i8* %328, i8** %331, align 8
  %332 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %333 = sext i32 %332 to i64
  %334 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %333
  %335 = load i8*, i8** %334, align 8
  %336 = icmp eq i8* %335, null
  br i1 %336, label %28, label %337

; <label>:337:                                    ; preds = %.lr.ph.4
  %338 = call i32 @strncasecmp(i8* %317, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.74, i64 0, i64 0), i64 2) #10
  %339 = icmp eq i32 %338, 0
  %340 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %341 = sext i32 %340 to i64
  %342 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %341
  %343 = load i8*, i8** %342, align 8
  br i1 %339, label %350, label %344

; <label>:344:                                    ; preds = %337
  %345 = sext i32 %326 to i64
  %346 = call i8* @strncpy(i8* %343, i8* %317, i64 %345) #9, !track !213
  %347 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %348 = sext i32 %347 to i64
  %349 = getelementptr inbounds [128 x i32], [128 x i32]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 25), i64 0, i64 %348
  store i32 0, i32* %349, align 4
  br label %358

; <label>:350:                                    ; preds = %337
  %351 = getelementptr inbounds i8, i8* %317, i64 2
  %352 = sub nsw i32 %326, 2
  %353 = sext i32 %352 to i64
  %354 = call i8* @strncpy(i8* %343, i8* %351, i64 %353) #9, !track !212
  %355 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %356 = sext i32 %355 to i64
  %357 = getelementptr inbounds [128 x i32], [128 x i32]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 25), i64 0, i64 %356
  store i32 1, i32* %357, align 4
  br label %358

; <label>:358:                                    ; preds = %350, %344
  call void @__loop_iteration_test___2()
  %359 = call i8* @strsep(i8** %2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0)) #9
  %360 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %361 = add nsw i32 %360, 1
  store i32 %361, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  call void @unroll_loop(i32 117)
  %362 = icmp ne i8* %359, null
  %363 = load i32, i32* %9, align 8
  %364 = icmp slt i32 %363, 128
  %365 = select i1 %362, i1 %364, i1 false
  br i1 %365, label %.lr.ph.5, label %._crit_edge.loopexit

.lr.ph.5:                                         ; preds = %358
  %366 = call i64 @strlen(i8* %359) #10
  %367 = add i64 %366, 1
  %368 = trunc i64 %367 to i32
  %369 = sext i32 %368 to i64
  %370 = call noalias i8* @malloc(i64 %369) #9, !track !211
  %371 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %372 = sext i32 %371 to i64
  %373 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %372
  store i8* %370, i8** %373, align 8
  %374 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %375 = sext i32 %374 to i64
  %376 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %375
  %377 = load i8*, i8** %376, align 8
  %378 = icmp eq i8* %377, null
  br i1 %378, label %28, label %379

; <label>:379:                                    ; preds = %.lr.ph.5
  %380 = call i32 @strncasecmp(i8* %359, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.74, i64 0, i64 0), i64 2) #10
  %381 = icmp eq i32 %380, 0
  %382 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %383 = sext i32 %382 to i64
  %384 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %383
  %385 = load i8*, i8** %384, align 8
  br i1 %381, label %392, label %386

; <label>:386:                                    ; preds = %379
  %387 = sext i32 %368 to i64
  %388 = call i8* @strncpy(i8* %385, i8* %359, i64 %387) #9, !track !213
  %389 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %390 = sext i32 %389 to i64
  %391 = getelementptr inbounds [128 x i32], [128 x i32]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 25), i64 0, i64 %390
  store i32 0, i32* %391, align 4
  br label %400

; <label>:392:                                    ; preds = %379
  %393 = getelementptr inbounds i8, i8* %359, i64 2
  %394 = sub nsw i32 %368, 2
  %395 = sext i32 %394 to i64
  %396 = call i8* @strncpy(i8* %385, i8* %393, i64 %395) #9, !track !212
  %397 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %398 = sext i32 %397 to i64
  %399 = getelementptr inbounds [128 x i32], [128 x i32]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 25), i64 0, i64 %398
  store i32 1, i32* %399, align 4
  br label %400

; <label>:400:                                    ; preds = %392, %386
  call void @__loop_iteration_test___2()
  %401 = call i8* @strsep(i8** %2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0)) #9
  %402 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %403 = add nsw i32 %402, 1
  store i32 %403, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  call void @unroll_loop(i32 117)
  %404 = icmp ne i8* %401, null
  %405 = load i32, i32* %9, align 8
  %406 = icmp slt i32 %405, 128
  %407 = select i1 %404, i1 %406, i1 false
  br i1 %407, label %.lr.ph.6, label %._crit_edge.loopexit

.lr.ph.6:                                         ; preds = %400
  %408 = call i64 @strlen(i8* %401) #10
  %409 = add i64 %408, 1
  %410 = trunc i64 %409 to i32
  %411 = sext i32 %410 to i64
  %412 = call noalias i8* @malloc(i64 %411) #9, !track !211
  %413 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %414 = sext i32 %413 to i64
  %415 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %414
  store i8* %412, i8** %415, align 8
  %416 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %417 = sext i32 %416 to i64
  %418 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %417
  %419 = load i8*, i8** %418, align 8
  %420 = icmp eq i8* %419, null
  br i1 %420, label %28, label %421

; <label>:421:                                    ; preds = %.lr.ph.6
  %422 = call i32 @strncasecmp(i8* %401, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.74, i64 0, i64 0), i64 2) #10
  %423 = icmp eq i32 %422, 0
  %424 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %425 = sext i32 %424 to i64
  %426 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %425
  %427 = load i8*, i8** %426, align 8
  br i1 %423, label %434, label %428

; <label>:428:                                    ; preds = %421
  %429 = sext i32 %410 to i64
  %430 = call i8* @strncpy(i8* %427, i8* %401, i64 %429) #9, !track !213
  %431 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %432 = sext i32 %431 to i64
  %433 = getelementptr inbounds [128 x i32], [128 x i32]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 25), i64 0, i64 %432
  store i32 0, i32* %433, align 4
  br label %442

; <label>:434:                                    ; preds = %421
  %435 = getelementptr inbounds i8, i8* %401, i64 2
  %436 = sub nsw i32 %410, 2
  %437 = sext i32 %436 to i64
  %438 = call i8* @strncpy(i8* %427, i8* %435, i64 %437) #9, !track !212
  %439 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %440 = sext i32 %439 to i64
  %441 = getelementptr inbounds [128 x i32], [128 x i32]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 25), i64 0, i64 %440
  store i32 1, i32* %441, align 4
  br label %442

; <label>:442:                                    ; preds = %434, %428
  call void @__loop_iteration_test___2()
  %443 = call i8* @strsep(i8** %2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0)) #9
  %444 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %445 = add nsw i32 %444, 1
  store i32 %445, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  call void @unroll_loop(i32 117)
  %446 = icmp ne i8* %443, null
  %447 = load i32, i32* %9, align 8
  %448 = icmp slt i32 %447, 128
  %449 = select i1 %446, i1 %448, i1 false
  br i1 %449, label %.lr.ph.7, label %._crit_edge.loopexit

.lr.ph.7:                                         ; preds = %442
  %450 = call i64 @strlen(i8* %443) #10
  %451 = add i64 %450, 1
  %452 = trunc i64 %451 to i32
  %453 = sext i32 %452 to i64
  %454 = call noalias i8* @malloc(i64 %453) #9, !track !211
  %455 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %456 = sext i32 %455 to i64
  %457 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %456
  store i8* %454, i8** %457, align 8
  %458 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %459 = sext i32 %458 to i64
  %460 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %459
  %461 = load i8*, i8** %460, align 8
  %462 = icmp eq i8* %461, null
  br i1 %462, label %28, label %463

; <label>:463:                                    ; preds = %.lr.ph.7
  %464 = call i32 @strncasecmp(i8* %443, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.74, i64 0, i64 0), i64 2) #10
  %465 = icmp eq i32 %464, 0
  %466 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %467 = sext i32 %466 to i64
  %468 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %467
  %469 = load i8*, i8** %468, align 8
  br i1 %465, label %476, label %470

; <label>:470:                                    ; preds = %463
  %471 = sext i32 %452 to i64
  %472 = call i8* @strncpy(i8* %469, i8* %443, i64 %471) #9, !track !213
  %473 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %474 = sext i32 %473 to i64
  %475 = getelementptr inbounds [128 x i32], [128 x i32]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 25), i64 0, i64 %474
  store i32 0, i32* %475, align 4
  br label %484

; <label>:476:                                    ; preds = %463
  %477 = getelementptr inbounds i8, i8* %443, i64 2
  %478 = sub nsw i32 %452, 2
  %479 = sext i32 %478 to i64
  %480 = call i8* @strncpy(i8* %469, i8* %477, i64 %479) #9, !track !212
  %481 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %482 = sext i32 %481 to i64
  %483 = getelementptr inbounds [128 x i32], [128 x i32]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 25), i64 0, i64 %482
  store i32 1, i32* %483, align 4
  br label %484

; <label>:484:                                    ; preds = %476, %470
  call void @__loop_iteration_test___2()
  %485 = call i8* @strsep(i8** %2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0)) #9
  %486 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %487 = add nsw i32 %486, 1
  store i32 %487, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  call void @unroll_loop(i32 117)
  %488 = icmp ne i8* %485, null
  %489 = load i32, i32* %9, align 8
  %490 = icmp slt i32 %489, 128
  %491 = select i1 %488, i1 %490, i1 false
  br i1 %491, label %.lr.ph.8, label %._crit_edge.loopexit

.lr.ph.8:                                         ; preds = %484
  %492 = call i64 @strlen(i8* %485) #10
  %493 = add i64 %492, 1
  %494 = trunc i64 %493 to i32
  %495 = sext i32 %494 to i64
  %496 = call noalias i8* @malloc(i64 %495) #9, !track !211
  %497 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %498 = sext i32 %497 to i64
  %499 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %498
  store i8* %496, i8** %499, align 8
  %500 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %501 = sext i32 %500 to i64
  %502 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %501
  %503 = load i8*, i8** %502, align 8
  %504 = icmp eq i8* %503, null
  br i1 %504, label %28, label %505

; <label>:505:                                    ; preds = %.lr.ph.8
  %506 = call i32 @strncasecmp(i8* %485, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.74, i64 0, i64 0), i64 2) #10
  %507 = icmp eq i32 %506, 0
  %508 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %509 = sext i32 %508 to i64
  %510 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %509
  %511 = load i8*, i8** %510, align 8
  br i1 %507, label %518, label %512

; <label>:512:                                    ; preds = %505
  %513 = sext i32 %494 to i64
  %514 = call i8* @strncpy(i8* %511, i8* %485, i64 %513) #9, !track !213
  %515 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %516 = sext i32 %515 to i64
  %517 = getelementptr inbounds [128 x i32], [128 x i32]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 25), i64 0, i64 %516
  store i32 0, i32* %517, align 4
  br label %526

; <label>:518:                                    ; preds = %505
  %519 = getelementptr inbounds i8, i8* %485, i64 2
  %520 = sub nsw i32 %494, 2
  %521 = sext i32 %520 to i64
  %522 = call i8* @strncpy(i8* %511, i8* %519, i64 %521) #9, !track !212
  %523 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %524 = sext i32 %523 to i64
  %525 = getelementptr inbounds [128 x i32], [128 x i32]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 25), i64 0, i64 %524
  store i32 1, i32* %525, align 4
  br label %526

; <label>:526:                                    ; preds = %518, %512
  call void @__loop_iteration_test___2()
  %527 = call i8* @strsep(i8** %2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0)) #9
  %528 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %529 = add nsw i32 %528, 1
  store i32 %529, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  call void @unroll_loop(i32 117)
  %530 = icmp ne i8* %527, null
  %531 = load i32, i32* %9, align 8
  %532 = icmp slt i32 %531, 128
  %533 = select i1 %530, i1 %532, i1 false
  br i1 %533, label %.lr.ph.9, label %._crit_edge.loopexit

.lr.ph.9:                                         ; preds = %526
  %534 = call i64 @strlen(i8* %527) #10
  %535 = add i64 %534, 1
  %536 = trunc i64 %535 to i32
  %537 = sext i32 %536 to i64
  %538 = call noalias i8* @malloc(i64 %537) #9, !track !211
  %539 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %540 = sext i32 %539 to i64
  %541 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %540
  store i8* %538, i8** %541, align 8
  %542 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %543 = sext i32 %542 to i64
  %544 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %543
  %545 = load i8*, i8** %544, align 8
  %546 = icmp eq i8* %545, null
  br i1 %546, label %28, label %547

; <label>:547:                                    ; preds = %.lr.ph.9
  %548 = call i32 @strncasecmp(i8* %527, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.74, i64 0, i64 0), i64 2) #10
  %549 = icmp eq i32 %548, 0
  %550 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %551 = sext i32 %550 to i64
  %552 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %551
  %553 = load i8*, i8** %552, align 8
  br i1 %549, label %560, label %554

; <label>:554:                                    ; preds = %547
  %555 = sext i32 %536 to i64
  %556 = call i8* @strncpy(i8* %553, i8* %527, i64 %555) #9, !track !213
  %557 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %558 = sext i32 %557 to i64
  %559 = getelementptr inbounds [128 x i32], [128 x i32]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 25), i64 0, i64 %558
  store i32 0, i32* %559, align 4
  br label %568

; <label>:560:                                    ; preds = %547
  %561 = getelementptr inbounds i8, i8* %527, i64 2
  %562 = sub nsw i32 %536, 2
  %563 = sext i32 %562 to i64
  %564 = call i8* @strncpy(i8* %553, i8* %561, i64 %563) #9, !track !212
  %565 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %566 = sext i32 %565 to i64
  %567 = getelementptr inbounds [128 x i32], [128 x i32]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 25), i64 0, i64 %566
  store i32 1, i32* %567, align 4
  br label %568

; <label>:568:                                    ; preds = %560, %554
  call void @__loop_iteration_test___2()
  %569 = call i8* @strsep(i8** %2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0)) #9
  %570 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %571 = add nsw i32 %570, 1
  store i32 %571, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  call void @unroll_loop(i32 117)
  %572 = icmp ne i8* %569, null
  %573 = load i32, i32* %9, align 8
  %574 = icmp slt i32 %573, 128
  %575 = select i1 %572, i1 %574, i1 false
  br i1 %575, label %.lr.ph.10, label %._crit_edge.loopexit

.lr.ph.10:                                        ; preds = %568
  %576 = call i64 @strlen(i8* %569) #10
  %577 = add i64 %576, 1
  %578 = trunc i64 %577 to i32
  %579 = sext i32 %578 to i64
  %580 = call noalias i8* @malloc(i64 %579) #9, !track !211
  %581 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %582 = sext i32 %581 to i64
  %583 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %582
  store i8* %580, i8** %583, align 8
  %584 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %585 = sext i32 %584 to i64
  %586 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %585
  %587 = load i8*, i8** %586, align 8
  %588 = icmp eq i8* %587, null
  br i1 %588, label %28, label %589

; <label>:589:                                    ; preds = %.lr.ph.10
  %590 = call i32 @strncasecmp(i8* %569, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.74, i64 0, i64 0), i64 2) #10
  %591 = icmp eq i32 %590, 0
  %592 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %593 = sext i32 %592 to i64
  %594 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %593
  %595 = load i8*, i8** %594, align 8
  br i1 %591, label %602, label %596

; <label>:596:                                    ; preds = %589
  %597 = sext i32 %578 to i64
  %598 = call i8* @strncpy(i8* %595, i8* %569, i64 %597) #9, !track !213
  %599 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %600 = sext i32 %599 to i64
  %601 = getelementptr inbounds [128 x i32], [128 x i32]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 25), i64 0, i64 %600
  store i32 0, i32* %601, align 4
  br label %610

; <label>:602:                                    ; preds = %589
  %603 = getelementptr inbounds i8, i8* %569, i64 2
  %604 = sub nsw i32 %578, 2
  %605 = sext i32 %604 to i64
  %606 = call i8* @strncpy(i8* %595, i8* %603, i64 %605) #9, !track !212
  %607 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %608 = sext i32 %607 to i64
  %609 = getelementptr inbounds [128 x i32], [128 x i32]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 25), i64 0, i64 %608
  store i32 1, i32* %609, align 4
  br label %610

; <label>:610:                                    ; preds = %602, %596
  call void @__loop_iteration_test___2()
  %611 = call i8* @strsep(i8** %2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0)) #9
  %612 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %613 = add nsw i32 %612, 1
  store i32 %613, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  call void @unroll_loop(i32 117)
  %614 = icmp ne i8* %611, null
  %615 = load i32, i32* %9, align 8
  %616 = icmp slt i32 %615, 128
  %617 = select i1 %614, i1 %616, i1 false
  br i1 %617, label %.lr.ph.11, label %._crit_edge.loopexit

.lr.ph.11:                                        ; preds = %610
  %618 = call i64 @strlen(i8* %611) #10
  %619 = add i64 %618, 1
  %620 = trunc i64 %619 to i32
  %621 = sext i32 %620 to i64
  %622 = call noalias i8* @malloc(i64 %621) #9, !track !211
  %623 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %624 = sext i32 %623 to i64
  %625 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %624
  store i8* %622, i8** %625, align 8
  %626 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %627 = sext i32 %626 to i64
  %628 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %627
  %629 = load i8*, i8** %628, align 8
  %630 = icmp eq i8* %629, null
  br i1 %630, label %28, label %631

; <label>:631:                                    ; preds = %.lr.ph.11
  %632 = call i32 @strncasecmp(i8* %611, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.74, i64 0, i64 0), i64 2) #10
  %633 = icmp eq i32 %632, 0
  %634 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %635 = sext i32 %634 to i64
  %636 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %635
  %637 = load i8*, i8** %636, align 8
  br i1 %633, label %644, label %638

; <label>:638:                                    ; preds = %631
  %639 = sext i32 %620 to i64
  %640 = call i8* @strncpy(i8* %637, i8* %611, i64 %639) #9, !track !213
  %641 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %642 = sext i32 %641 to i64
  %643 = getelementptr inbounds [128 x i32], [128 x i32]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 25), i64 0, i64 %642
  store i32 0, i32* %643, align 4
  br label %652

; <label>:644:                                    ; preds = %631
  %645 = getelementptr inbounds i8, i8* %611, i64 2
  %646 = sub nsw i32 %620, 2
  %647 = sext i32 %646 to i64
  %648 = call i8* @strncpy(i8* %637, i8* %645, i64 %647) #9, !track !212
  %649 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %650 = sext i32 %649 to i64
  %651 = getelementptr inbounds [128 x i32], [128 x i32]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 25), i64 0, i64 %650
  store i32 1, i32* %651, align 4
  br label %652

; <label>:652:                                    ; preds = %644, %638
  call void @__loop_iteration_test___2()
  %653 = call i8* @strsep(i8** %2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0)) #9
  %654 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %655 = add nsw i32 %654, 1
  store i32 %655, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  call void @unroll_loop(i32 117)
  %656 = icmp ne i8* %653, null
  %657 = load i32, i32* %9, align 8
  %658 = icmp slt i32 %657, 128
  %659 = select i1 %656, i1 %658, i1 false
  br i1 %659, label %.lr.ph.12, label %._crit_edge.loopexit

.lr.ph.12:                                        ; preds = %652
  %660 = call i64 @strlen(i8* %653) #10
  %661 = add i64 %660, 1
  %662 = trunc i64 %661 to i32
  %663 = sext i32 %662 to i64
  %664 = call noalias i8* @malloc(i64 %663) #9, !track !211
  %665 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %666 = sext i32 %665 to i64
  %667 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %666
  store i8* %664, i8** %667, align 8
  %668 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %669 = sext i32 %668 to i64
  %670 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %669
  %671 = load i8*, i8** %670, align 8
  %672 = icmp eq i8* %671, null
  br i1 %672, label %28, label %673

; <label>:673:                                    ; preds = %.lr.ph.12
  %674 = call i32 @strncasecmp(i8* %653, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.74, i64 0, i64 0), i64 2) #10
  %675 = icmp eq i32 %674, 0
  %676 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %677 = sext i32 %676 to i64
  %678 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %677
  %679 = load i8*, i8** %678, align 8
  br i1 %675, label %686, label %680

; <label>:680:                                    ; preds = %673
  %681 = sext i32 %662 to i64
  %682 = call i8* @strncpy(i8* %679, i8* %653, i64 %681) #9, !track !213
  %683 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %684 = sext i32 %683 to i64
  %685 = getelementptr inbounds [128 x i32], [128 x i32]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 25), i64 0, i64 %684
  store i32 0, i32* %685, align 4
  br label %694

; <label>:686:                                    ; preds = %673
  %687 = getelementptr inbounds i8, i8* %653, i64 2
  %688 = sub nsw i32 %662, 2
  %689 = sext i32 %688 to i64
  %690 = call i8* @strncpy(i8* %679, i8* %687, i64 %689) #9, !track !212
  %691 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %692 = sext i32 %691 to i64
  %693 = getelementptr inbounds [128 x i32], [128 x i32]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 25), i64 0, i64 %692
  store i32 1, i32* %693, align 4
  br label %694

; <label>:694:                                    ; preds = %686, %680
  call void @__loop_iteration_test___2()
  %695 = call i8* @strsep(i8** %2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0)) #9
  %696 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %697 = add nsw i32 %696, 1
  store i32 %697, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  call void @unroll_loop(i32 117)
  %698 = icmp ne i8* %695, null
  %699 = load i32, i32* %9, align 8
  %700 = icmp slt i32 %699, 128
  %701 = select i1 %698, i1 %700, i1 false
  br i1 %701, label %.lr.ph.13, label %._crit_edge.loopexit

.lr.ph.13:                                        ; preds = %694
  %702 = call i64 @strlen(i8* %695) #10
  %703 = add i64 %702, 1
  %704 = trunc i64 %703 to i32
  %705 = sext i32 %704 to i64
  %706 = call noalias i8* @malloc(i64 %705) #9, !track !211
  %707 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %708 = sext i32 %707 to i64
  %709 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %708
  store i8* %706, i8** %709, align 8
  %710 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %711 = sext i32 %710 to i64
  %712 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %711
  %713 = load i8*, i8** %712, align 8
  %714 = icmp eq i8* %713, null
  br i1 %714, label %28, label %715

; <label>:715:                                    ; preds = %.lr.ph.13
  %716 = call i32 @strncasecmp(i8* %695, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.74, i64 0, i64 0), i64 2) #10
  %717 = icmp eq i32 %716, 0
  %718 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %719 = sext i32 %718 to i64
  %720 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %719
  %721 = load i8*, i8** %720, align 8
  br i1 %717, label %728, label %722

; <label>:722:                                    ; preds = %715
  %723 = sext i32 %704 to i64
  %724 = call i8* @strncpy(i8* %721, i8* %695, i64 %723) #9, !track !213
  %725 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %726 = sext i32 %725 to i64
  %727 = getelementptr inbounds [128 x i32], [128 x i32]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 25), i64 0, i64 %726
  store i32 0, i32* %727, align 4
  br label %736

; <label>:728:                                    ; preds = %715
  %729 = getelementptr inbounds i8, i8* %695, i64 2
  %730 = sub nsw i32 %704, 2
  %731 = sext i32 %730 to i64
  %732 = call i8* @strncpy(i8* %721, i8* %729, i64 %731) #9, !track !212
  %733 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %734 = sext i32 %733 to i64
  %735 = getelementptr inbounds [128 x i32], [128 x i32]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 25), i64 0, i64 %734
  store i32 1, i32* %735, align 4
  br label %736

; <label>:736:                                    ; preds = %728, %722
  call void @__loop_iteration_test___2()
  %737 = call i8* @strsep(i8** %2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0)) #9
  %738 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %739 = add nsw i32 %738, 1
  store i32 %739, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  call void @unroll_loop(i32 117)
  %740 = icmp ne i8* %737, null
  %741 = load i32, i32* %9, align 8
  %742 = icmp slt i32 %741, 128
  %743 = select i1 %740, i1 %742, i1 false
  br i1 %743, label %.lr.ph.14, label %._crit_edge.loopexit

.lr.ph.14:                                        ; preds = %736
  %744 = call i64 @strlen(i8* %737) #10
  %745 = add i64 %744, 1
  %746 = trunc i64 %745 to i32
  %747 = sext i32 %746 to i64
  %748 = call noalias i8* @malloc(i64 %747) #9, !track !211
  %749 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %750 = sext i32 %749 to i64
  %751 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %750
  store i8* %748, i8** %751, align 8
  %752 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %753 = sext i32 %752 to i64
  %754 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %753
  %755 = load i8*, i8** %754, align 8
  %756 = icmp eq i8* %755, null
  br i1 %756, label %28, label %757

; <label>:757:                                    ; preds = %.lr.ph.14
  %758 = call i32 @strncasecmp(i8* %737, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.74, i64 0, i64 0), i64 2) #10
  %759 = icmp eq i32 %758, 0
  %760 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %761 = sext i32 %760 to i64
  %762 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %761
  %763 = load i8*, i8** %762, align 8
  br i1 %759, label %770, label %764

; <label>:764:                                    ; preds = %757
  %765 = sext i32 %746 to i64
  %766 = call i8* @strncpy(i8* %763, i8* %737, i64 %765) #9, !track !213
  %767 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %768 = sext i32 %767 to i64
  %769 = getelementptr inbounds [128 x i32], [128 x i32]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 25), i64 0, i64 %768
  store i32 0, i32* %769, align 4
  br label %778

; <label>:770:                                    ; preds = %757
  %771 = getelementptr inbounds i8, i8* %737, i64 2
  %772 = sub nsw i32 %746, 2
  %773 = sext i32 %772 to i64
  %774 = call i8* @strncpy(i8* %763, i8* %771, i64 %773) #9, !track !212
  %775 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %776 = sext i32 %775 to i64
  %777 = getelementptr inbounds [128 x i32], [128 x i32]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 25), i64 0, i64 %776
  store i32 1, i32* %777, align 4
  br label %778

; <label>:778:                                    ; preds = %770, %764
  call void @__loop_iteration_test___2()
  %779 = call i8* @strsep(i8** %2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0)) #9
  %780 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %781 = add nsw i32 %780, 1
  store i32 %781, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  call void @unroll_loop(i32 117)
  %782 = icmp ne i8* %779, null
  %783 = load i32, i32* %9, align 8
  %784 = icmp slt i32 %783, 128
  %785 = select i1 %782, i1 %784, i1 false
  br i1 %785, label %.lr.ph.15, label %._crit_edge.loopexit

.lr.ph.15:                                        ; preds = %778
  %786 = call i64 @strlen(i8* %779) #10
  %787 = add i64 %786, 1
  %788 = trunc i64 %787 to i32
  %789 = sext i32 %788 to i64
  %790 = call noalias i8* @malloc(i64 %789) #9, !track !211
  %791 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %792 = sext i32 %791 to i64
  %793 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %792
  store i8* %790, i8** %793, align 8
  %794 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %795 = sext i32 %794 to i64
  %796 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %795
  %797 = load i8*, i8** %796, align 8
  %798 = icmp eq i8* %797, null
  br i1 %798, label %28, label %799

; <label>:799:                                    ; preds = %.lr.ph.15
  %800 = call i32 @strncasecmp(i8* %779, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.74, i64 0, i64 0), i64 2) #10
  %801 = icmp eq i32 %800, 0
  %802 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %803 = sext i32 %802 to i64
  %804 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %803
  %805 = load i8*, i8** %804, align 8
  br i1 %801, label %812, label %806

; <label>:806:                                    ; preds = %799
  %807 = sext i32 %788 to i64
  %808 = call i8* @strncpy(i8* %805, i8* %779, i64 %807) #9, !track !213
  %809 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %810 = sext i32 %809 to i64
  %811 = getelementptr inbounds [128 x i32], [128 x i32]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 25), i64 0, i64 %810
  store i32 0, i32* %811, align 4
  br label %820

; <label>:812:                                    ; preds = %799
  %813 = getelementptr inbounds i8, i8* %779, i64 2
  %814 = sub nsw i32 %788, 2
  %815 = sext i32 %814 to i64
  %816 = call i8* @strncpy(i8* %805, i8* %813, i64 %815) #9, !track !212
  %817 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %818 = sext i32 %817 to i64
  %819 = getelementptr inbounds [128 x i32], [128 x i32]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 25), i64 0, i64 %818
  store i32 1, i32* %819, align 4
  br label %820

; <label>:820:                                    ; preds = %812, %806
  call void @__loop_iteration_test___2()
  %821 = call i8* @strsep(i8** %2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0)) #9
  %822 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %823 = add nsw i32 %822, 1
  store i32 %823, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  call void @unroll_loop(i32 117)
  %824 = icmp ne i8* %821, null
  %825 = load i32, i32* %9, align 8
  %826 = icmp slt i32 %825, 128
  %827 = select i1 %824, i1 %826, i1 false
  br i1 %827, label %.lr.ph.16, label %._crit_edge.loopexit

.lr.ph.16:                                        ; preds = %820
  %828 = call i64 @strlen(i8* %821) #10
  %829 = add i64 %828, 1
  %830 = trunc i64 %829 to i32
  %831 = sext i32 %830 to i64
  %832 = call noalias i8* @malloc(i64 %831) #9, !track !211
  %833 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %834 = sext i32 %833 to i64
  %835 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %834
  store i8* %832, i8** %835, align 8
  %836 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %837 = sext i32 %836 to i64
  %838 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %837
  %839 = load i8*, i8** %838, align 8
  %840 = icmp eq i8* %839, null
  br i1 %840, label %28, label %841

; <label>:841:                                    ; preds = %.lr.ph.16
  %842 = call i32 @strncasecmp(i8* %821, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.74, i64 0, i64 0), i64 2) #10
  %843 = icmp eq i32 %842, 0
  %844 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %845 = sext i32 %844 to i64
  %846 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %845
  %847 = load i8*, i8** %846, align 8
  br i1 %843, label %854, label %848

; <label>:848:                                    ; preds = %841
  %849 = sext i32 %830 to i64
  %850 = call i8* @strncpy(i8* %847, i8* %821, i64 %849) #9, !track !213
  %851 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %852 = sext i32 %851 to i64
  %853 = getelementptr inbounds [128 x i32], [128 x i32]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 25), i64 0, i64 %852
  store i32 0, i32* %853, align 4
  br label %862

; <label>:854:                                    ; preds = %841
  %855 = getelementptr inbounds i8, i8* %821, i64 2
  %856 = sub nsw i32 %830, 2
  %857 = sext i32 %856 to i64
  %858 = call i8* @strncpy(i8* %847, i8* %855, i64 %857) #9, !track !212
  %859 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %860 = sext i32 %859 to i64
  %861 = getelementptr inbounds [128 x i32], [128 x i32]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 25), i64 0, i64 %860
  store i32 1, i32* %861, align 4
  br label %862

; <label>:862:                                    ; preds = %854, %848
  call void @__loop_iteration_test___2()
  %863 = call i8* @strsep(i8** %2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0)) #9
  %864 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %865 = add nsw i32 %864, 1
  store i32 %865, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  call void @unroll_loop(i32 117)
  %866 = icmp ne i8* %863, null
  %867 = load i32, i32* %9, align 8
  %868 = icmp slt i32 %867, 128
  %869 = select i1 %866, i1 %868, i1 false
  br i1 %869, label %.lr.ph.17, label %._crit_edge.loopexit

.lr.ph.17:                                        ; preds = %862
  %870 = call i64 @strlen(i8* %863) #10
  %871 = add i64 %870, 1
  %872 = trunc i64 %871 to i32
  %873 = sext i32 %872 to i64
  %874 = call noalias i8* @malloc(i64 %873) #9, !track !211
  %875 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %876 = sext i32 %875 to i64
  %877 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %876
  store i8* %874, i8** %877, align 8
  %878 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %879 = sext i32 %878 to i64
  %880 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %879
  %881 = load i8*, i8** %880, align 8
  %882 = icmp eq i8* %881, null
  br i1 %882, label %28, label %883

; <label>:883:                                    ; preds = %.lr.ph.17
  %884 = call i32 @strncasecmp(i8* %863, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.74, i64 0, i64 0), i64 2) #10
  %885 = icmp eq i32 %884, 0
  %886 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %887 = sext i32 %886 to i64
  %888 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %887
  %889 = load i8*, i8** %888, align 8
  br i1 %885, label %896, label %890

; <label>:890:                                    ; preds = %883
  %891 = sext i32 %872 to i64
  %892 = call i8* @strncpy(i8* %889, i8* %863, i64 %891) #9, !track !213
  %893 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %894 = sext i32 %893 to i64
  %895 = getelementptr inbounds [128 x i32], [128 x i32]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 25), i64 0, i64 %894
  store i32 0, i32* %895, align 4
  br label %904

; <label>:896:                                    ; preds = %883
  %897 = getelementptr inbounds i8, i8* %863, i64 2
  %898 = sub nsw i32 %872, 2
  %899 = sext i32 %898 to i64
  %900 = call i8* @strncpy(i8* %889, i8* %897, i64 %899) #9, !track !212
  %901 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %902 = sext i32 %901 to i64
  %903 = getelementptr inbounds [128 x i32], [128 x i32]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 25), i64 0, i64 %902
  store i32 1, i32* %903, align 4
  br label %904

; <label>:904:                                    ; preds = %896, %890
  call void @__loop_iteration_test___2()
  %905 = call i8* @strsep(i8** %2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0)) #9
  %906 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %907 = add nsw i32 %906, 1
  store i32 %907, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  call void @unroll_loop(i32 117)
  %908 = icmp ne i8* %905, null
  %909 = load i32, i32* %9, align 8
  %910 = icmp slt i32 %909, 128
  %911 = select i1 %908, i1 %910, i1 false
  br i1 %911, label %.lr.ph.18, label %._crit_edge.loopexit

.lr.ph.18:                                        ; preds = %904
  %912 = call i64 @strlen(i8* %905) #10
  %913 = add i64 %912, 1
  %914 = trunc i64 %913 to i32
  %915 = sext i32 %914 to i64
  %916 = call noalias i8* @malloc(i64 %915) #9, !track !211
  %917 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %918 = sext i32 %917 to i64
  %919 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %918
  store i8* %916, i8** %919, align 8
  %920 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %921 = sext i32 %920 to i64
  %922 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %921
  %923 = load i8*, i8** %922, align 8
  %924 = icmp eq i8* %923, null
  br i1 %924, label %28, label %925

; <label>:925:                                    ; preds = %.lr.ph.18
  %926 = call i32 @strncasecmp(i8* %905, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.74, i64 0, i64 0), i64 2) #10
  %927 = icmp eq i32 %926, 0
  %928 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %929 = sext i32 %928 to i64
  %930 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %929
  %931 = load i8*, i8** %930, align 8
  br i1 %927, label %938, label %932

; <label>:932:                                    ; preds = %925
  %933 = sext i32 %914 to i64
  %934 = call i8* @strncpy(i8* %931, i8* %905, i64 %933) #9, !track !213
  %935 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %936 = sext i32 %935 to i64
  %937 = getelementptr inbounds [128 x i32], [128 x i32]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 25), i64 0, i64 %936
  store i32 0, i32* %937, align 4
  br label %946

; <label>:938:                                    ; preds = %925
  %939 = getelementptr inbounds i8, i8* %905, i64 2
  %940 = sub nsw i32 %914, 2
  %941 = sext i32 %940 to i64
  %942 = call i8* @strncpy(i8* %931, i8* %939, i64 %941) #9, !track !212
  %943 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %944 = sext i32 %943 to i64
  %945 = getelementptr inbounds [128 x i32], [128 x i32]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 25), i64 0, i64 %944
  store i32 1, i32* %945, align 4
  br label %946

; <label>:946:                                    ; preds = %938, %932
  call void @__loop_iteration_test___2()
  %947 = call i8* @strsep(i8** %2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0)) #9
  %948 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %949 = add nsw i32 %948, 1
  store i32 %949, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  call void @unroll_loop(i32 117)
  %950 = icmp ne i8* %947, null
  %951 = load i32, i32* %9, align 8
  %952 = icmp slt i32 %951, 128
  %953 = select i1 %950, i1 %952, i1 false
  br i1 %953, label %.lr.ph.19, label %._crit_edge.loopexit

.lr.ph.19:                                        ; preds = %946
  %954 = call i64 @strlen(i8* %947) #10
  %955 = add i64 %954, 1
  %956 = trunc i64 %955 to i32
  %957 = sext i32 %956 to i64
  %958 = call noalias i8* @malloc(i64 %957) #9, !track !211
  %959 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %960 = sext i32 %959 to i64
  %961 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %960
  store i8* %958, i8** %961, align 8
  %962 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %963 = sext i32 %962 to i64
  %964 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %963
  %965 = load i8*, i8** %964, align 8
  %966 = icmp eq i8* %965, null
  br i1 %966, label %28, label %967

; <label>:967:                                    ; preds = %.lr.ph.19
  %968 = call i32 @strncasecmp(i8* %947, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.74, i64 0, i64 0), i64 2) #10
  %969 = icmp eq i32 %968, 0
  %970 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %971 = sext i32 %970 to i64
  %972 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %971
  %973 = load i8*, i8** %972, align 8
  br i1 %969, label %980, label %974

; <label>:974:                                    ; preds = %967
  %975 = sext i32 %956 to i64
  %976 = call i8* @strncpy(i8* %973, i8* %947, i64 %975) #9, !track !213
  %977 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %978 = sext i32 %977 to i64
  %979 = getelementptr inbounds [128 x i32], [128 x i32]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 25), i64 0, i64 %978
  store i32 0, i32* %979, align 4
  br label %988

; <label>:980:                                    ; preds = %967
  %981 = getelementptr inbounds i8, i8* %947, i64 2
  %982 = sub nsw i32 %956, 2
  %983 = sext i32 %982 to i64
  %984 = call i8* @strncpy(i8* %973, i8* %981, i64 %983) #9, !track !212
  %985 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %986 = sext i32 %985 to i64
  %987 = getelementptr inbounds [128 x i32], [128 x i32]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 25), i64 0, i64 %986
  store i32 1, i32* %987, align 4
  br label %988

; <label>:988:                                    ; preds = %980, %974
  call void @__loop_iteration_test___2()
  %989 = call i8* @strsep(i8** %2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0)) #9
  %990 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %991 = add nsw i32 %990, 1
  store i32 %991, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  call void @unroll_loop(i32 117)
  %992 = icmp ne i8* %989, null
  %993 = load i32, i32* %9, align 8
  %994 = icmp slt i32 %993, 128
  br label %._crit_edge.loopexit

; <label>:995:                                    ; preds = %63
  call void @__loop_iteration_test___4()
  %996 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %997 = add nsw i32 %996, 1
  %998 = call i32 @next_dict_clone.12(i32 %997)
  %999 = icmp eq i32 %998, 0
  br i1 %999, label %1000, label %68

; <label>:1000:                                   ; preds = %995
  call void @__loop_iteration_test___4()
  %1001 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %1002 = add nsw i32 %1001, 1
  %1003 = call i32 @next_dict_clone.14(i32 %1002)
  %1004 = icmp eq i32 %1003, 0
  br i1 %1004, label %1005, label %68

; <label>:1005:                                   ; preds = %1000
  call void @__loop_iteration_test___4()
  %1006 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %1007 = add nsw i32 %1006, 1
  %1008 = call i32 @next_dict_clone.16(i32 %1007)
  %1009 = icmp eq i32 %1008, 0
  br i1 %1009, label %1010, label %68

; <label>:1010:                                   ; preds = %1005
  call void @__loop_iteration_test___4()
  %1011 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %1012 = add nsw i32 %1011, 1
  %1013 = call i32 @next_dict_clone.18(i32 %1012)
  %1014 = icmp eq i32 %1013, 0
  br i1 %1014, label %1015, label %68

; <label>:1015:                                   ; preds = %1010
  call void @__loop_iteration_test___4()
  %1016 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %1017 = add nsw i32 %1016, 1
  %1018 = call i32 @next_dict_clone.20(i32 %1017)
  %1019 = icmp eq i32 %1018, 0
  br i1 %1019, label %1020, label %68

; <label>:1020:                                   ; preds = %1015
  call void @__loop_iteration_test___4()
  %1021 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %1022 = add nsw i32 %1021, 1
  %1023 = call i32 @next_dict_clone.22(i32 %1022)
  %1024 = icmp eq i32 %1023, 0
  br i1 %1024, label %1025, label %68

; <label>:1025:                                   ; preds = %1020
  call void @__loop_iteration_test___4()
  %1026 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %1027 = add nsw i32 %1026, 1
  %1028 = call i32 @next_dict_clone.24(i32 %1027)
  %1029 = icmp eq i32 %1028, 0
  br i1 %1029, label %1030, label %68

; <label>:1030:                                   ; preds = %1025
  call void @__loop_iteration_test___4()
  %1031 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %1032 = add nsw i32 %1031, 1
  %1033 = call i32 @next_dict_clone.26(i32 %1032)
  %1034 = icmp eq i32 %1033, 0
  br i1 %1034, label %1035, label %68

; <label>:1035:                                   ; preds = %1030
  call void @__loop_iteration_test___4()
  %1036 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %1037 = add nsw i32 %1036, 1
  %1038 = call i32 @next_dict_clone.28(i32 %1037)
  %1039 = icmp eq i32 %1038, 0
  br i1 %1039, label %1040, label %68

; <label>:1040:                                   ; preds = %1035
  call void @__loop_iteration_test___4()
  %1041 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %1042 = add nsw i32 %1041, 1
  %1043 = call i32 @next_dict_clone.30(i32 %1042)
  %1044 = icmp eq i32 %1043, 0
  br i1 %1044, label %1045, label %68

; <label>:1045:                                   ; preds = %1040
  call void @__loop_iteration_test___4()
  %1046 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %1047 = add nsw i32 %1046, 1
  %1048 = call i32 @next_dict_clone.32(i32 %1047)
  %1049 = icmp eq i32 %1048, 0
  br i1 %1049, label %1050, label %68

; <label>:1050:                                   ; preds = %1045
  call void @__loop_iteration_test___4()
  %1051 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %1052 = add nsw i32 %1051, 1
  %1053 = call i32 @next_dict_clone.34(i32 %1052)
  %1054 = icmp eq i32 %1053, 0
  br i1 %1054, label %1055, label %68

; <label>:1055:                                   ; preds = %1050
  call void @__loop_iteration_test___4()
  %1056 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %1057 = add nsw i32 %1056, 1
  %1058 = call i32 @next_dict_clone.36(i32 %1057)
  %1059 = icmp eq i32 %1058, 0
  br i1 %1059, label %1060, label %68

; <label>:1060:                                   ; preds = %1055
  call void @__loop_iteration_test___4()
  %1061 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %1062 = add nsw i32 %1061, 1
  %1063 = call i32 @next_dict_clone.38(i32 %1062)
  %1064 = icmp eq i32 %1063, 0
  br i1 %1064, label %1065, label %68

; <label>:1065:                                   ; preds = %1060
  call void @__loop_iteration_test___4()
  %1066 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %1067 = add nsw i32 %1066, 1
  %1068 = call i32 @next_dict_clone.40(i32 %1067)
  %1069 = icmp eq i32 %1068, 0
  br i1 %1069, label %1070, label %68

; <label>:1070:                                   ; preds = %1065
  call void @__loop_iteration_test___4()
  %1071 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %1072 = add nsw i32 %1071, 1
  %1073 = call i32 @next_dict_clone.42(i32 %1072)
  %1074 = icmp eq i32 %1073, 0
  br i1 %1074, label %1075, label %68

; <label>:1075:                                   ; preds = %1070
  call void @__loop_iteration_test___4()
  %1076 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %1077 = add nsw i32 %1076, 1
  %1078 = call i32 @next_dict_clone.44(i32 %1077)
  %1079 = icmp eq i32 %1078, 0
  br i1 %1079, label %1080, label %68

; <label>:1080:                                   ; preds = %1075
  call void @__loop_iteration_test___4()
  %1081 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %1082 = add nsw i32 %1081, 1
  %1083 = call i32 @next_dict_clone.46(i32 %1082)
  %1084 = icmp eq i32 %1083, 0
  br i1 %1084, label %1085, label %68

; <label>:1085:                                   ; preds = %1080
  call void @__loop_iteration_test___4()
  %1086 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %1087 = add nsw i32 %1086, 1
  %1088 = call i32 @next_dict_clone.48(i32 %1087)
  br label %68
}

declare void @__loop_termination_test___4()

declare void @__loop_iteration_test___4()

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @next_dict_clone.10(i32) #0 {
  %2 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 22
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %2, align 8
  %4 = icmp ne %struct._IO_FILE* %3, null
  br i1 %4, label %5, label %15

; <label>:5:                                      ; preds = %1
  %6 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 28
  %7 = load i32, i32* %6, align 8
  %8 = icmp ne i32 %7, 0
  br i1 %8, label %13, label %9

; <label>:9:                                      ; preds = %5
  %10 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 22
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** %10, align 8
  %12 = call i32 @fclose(%struct._IO_FILE* %11)
  br label %13

; <label>:13:                                     ; preds = %9, %5
  %14 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 22
  store %struct._IO_FILE* null, %struct._IO_FILE** %14, align 8
  br label %15

; <label>:15:                                     ; preds = %13, %1
  %16 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 23
  store i32 %0, i32* %16, align 8
  %17 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 23
  %18 = load i32, i32* %17, align 8
  %19 = sext i32 %18 to i64
  %20 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 21
  %21 = getelementptr inbounds [128 x i8*], [128 x i8*]* %20, i64 0, i64 %19
  %22 = load i8*, i8** %21, align 8
  %23 = icmp eq i8* %22, null
  br i1 %23, label %UnifiedReturnBlock, label %.preheader

.preheader:                                       ; preds = %15
  call void @unroll_loop(i32 108)
  %24 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 23
  %25 = load i32, i32* %24, align 8
  %26 = icmp slt i32 %25, 128
  br i1 %26, label %.lr.ph.preheader, label %.loopexit

.lr.ph.preheader:                                 ; preds = %.preheader
  br label %.lr.ph

.lr.ph:                                           ; preds = %.backedge, %.lr.ph.preheader
  %27 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %28
  %30 = load i8*, i8** %29, align 8
  %31 = icmp ne i8* %30, null
  br i1 %31, label %32, label %.loopexit.loopexit

; <label>:32:                                     ; preds = %.lr.ph
  %33 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %34
  %36 = load i8*, i8** %35, align 8
  %37 = call i32 @strcmp(i8* %36, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i64 0, i64 0)) #10
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %51

; <label>:39:                                     ; preds = %32
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 28), align 8
  %40 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
  %41 = call i32 @fileno(%struct._IO_FILE* %40) #9
  %42 = call %struct._IO_FILE* @fdopen(i32 %41, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.66, i64 0, i64 0)) #9, !track !201
  store %struct._IO_FILE* %42, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %43 = icmp eq %struct._IO_FILE* %42, null
  br i1 %43, label %44, label %49

; <label>:44:                                     ; preds = %39
  call void @perror(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.67, i64 0, i64 0))
  %45 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %46 = add nsw i32 %45, 1
  store i32 %46, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge

.backedge:                                        ; preds = %68, %58, %44
  call void @unroll_loop(i32 108)
  %47 = load i32, i32* %24, align 8
  %48 = icmp slt i32 %47, 128
  br i1 %48, label %.lr.ph, label %.loopexit.loopexit

; <label>:49:                                     ; preds = %39
  %50 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 24
  store i32 1, i32* %50, align 4
  br label %.loopexit

; <label>:51:                                     ; preds = %32
  store i32 0, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 28), align 8
  %52 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %53 = sext i32 %52 to i64
  %54 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %53
  %55 = load i8*, i8** %54, align 8
  %56 = call %struct._IO_FILE* @fopen64(i8* %55, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.66, i64 0, i64 0)), !track !202
  store %struct._IO_FILE* %56, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %57 = icmp eq %struct._IO_FILE* %56, null
  br i1 %57, label %58, label %61

; <label>:58:                                     ; preds = %51
  call void @perror(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.67, i64 0, i64 0))
  %59 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %60 = add nsw i32 %59, 1
  store i32 %60, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge

; <label>:61:                                     ; preds = %51
  %62 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %63 = call i32 @fseek(%struct._IO_FILE* %62, i64 0, i32 2)
  %64 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %65 = call i64 @ftell(%struct._IO_FILE* %64)
  %66 = icmp sle i64 %65, 0
  %67 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  br i1 %66, label %68, label %73

; <label>:68:                                     ; preds = %61
  %69 = call i32 @fclose(%struct._IO_FILE* %67)
  store %struct._IO_FILE* null, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %70 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.68, i64 0, i64 0))
  %71 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %72 = add nsw i32 %71, 1
  store i32 %72, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge

; <label>:73:                                     ; preds = %61
  %.lcssa = phi %struct._IO_FILE* [ %67, %61 ]
  call void @rewind(%struct._IO_FILE* %.lcssa)
  br label %.loopexit

.loopexit.loopexit:                               ; preds = %.backedge, %.lr.ph
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit.loopexit, %73, %49, %.preheader
  %74 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 23
  %75 = load i32, i32* %74, align 8
  %76 = icmp sge i32 %75, 128
  br i1 %76, label %UnifiedReturnBlock, label %77

; <label>:77:                                     ; preds = %.loopexit
  %78 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 23
  %79 = load i32, i32* %78, align 8
  %80 = sext i32 %79 to i64
  %81 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 21
  %82 = getelementptr inbounds [128 x i8*], [128 x i8*]* %81, i64 0, i64 %80
  %83 = load i8*, i8** %82, align 8
  %84 = icmp eq i8* %83, null
  %spec.select = select i1 %84, i32 1, i32 0
  br label %UnifiedReturnBlock

UnifiedReturnBlock:                               ; preds = %77, %.loopexit, %15
  %UnifiedRetVal = phi i32 [ %spec.select, %77 ], [ 1, %.loopexit ], [ 1, %15 ]
  ret i32 %UnifiedRetVal
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @next_dict_clone.12(i32) #0 {
  %2 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 22
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %2, align 8
  %4 = icmp ne %struct._IO_FILE* %3, null
  br i1 %4, label %5, label %15

; <label>:5:                                      ; preds = %1
  %6 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 28
  %7 = load i32, i32* %6, align 8
  %8 = icmp ne i32 %7, 0
  br i1 %8, label %13, label %9

; <label>:9:                                      ; preds = %5
  %10 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 22
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** %10, align 8
  %12 = call i32 @fclose(%struct._IO_FILE* %11)
  br label %13

; <label>:13:                                     ; preds = %9, %5
  %14 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 22
  store %struct._IO_FILE* null, %struct._IO_FILE** %14, align 8
  br label %15

; <label>:15:                                     ; preds = %13, %1
  %16 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 23
  store i32 %0, i32* %16, align 8
  %17 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 23
  %18 = load i32, i32* %17, align 8
  %19 = sext i32 %18 to i64
  %20 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 21
  %21 = getelementptr inbounds [128 x i8*], [128 x i8*]* %20, i64 0, i64 %19
  %22 = load i8*, i8** %21, align 8
  %23 = icmp eq i8* %22, null
  br i1 %23, label %UnifiedReturnBlock, label %.preheader

.preheader:                                       ; preds = %15
  call void @unroll_loop(i32 108)
  %24 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 23
  %25 = load i32, i32* %24, align 8
  %26 = icmp slt i32 %25, 128
  br i1 %26, label %.lr.ph.preheader, label %.loopexit

.lr.ph.preheader:                                 ; preds = %.preheader
  br label %.lr.ph

.lr.ph:                                           ; preds = %.backedge, %.lr.ph.preheader
  %27 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %28
  %30 = load i8*, i8** %29, align 8
  %31 = icmp ne i8* %30, null
  br i1 %31, label %32, label %.loopexit.loopexit

; <label>:32:                                     ; preds = %.lr.ph
  %33 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %34
  %36 = load i8*, i8** %35, align 8
  %37 = call i32 @strcmp(i8* %36, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i64 0, i64 0)) #10
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %51

; <label>:39:                                     ; preds = %32
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 28), align 8
  %40 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
  %41 = call i32 @fileno(%struct._IO_FILE* %40) #9
  %42 = call %struct._IO_FILE* @fdopen(i32 %41, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.66, i64 0, i64 0)) #9, !track !201
  store %struct._IO_FILE* %42, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %43 = icmp eq %struct._IO_FILE* %42, null
  br i1 %43, label %44, label %49

; <label>:44:                                     ; preds = %39
  call void @perror(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.67, i64 0, i64 0))
  %45 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %46 = add nsw i32 %45, 1
  store i32 %46, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge

.backedge:                                        ; preds = %68, %58, %44
  call void @unroll_loop(i32 108)
  %47 = load i32, i32* %24, align 8
  %48 = icmp slt i32 %47, 128
  br i1 %48, label %.lr.ph, label %.loopexit.loopexit

; <label>:49:                                     ; preds = %39
  %50 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 24
  store i32 1, i32* %50, align 4
  br label %.loopexit

; <label>:51:                                     ; preds = %32
  store i32 0, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 28), align 8
  %52 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %53 = sext i32 %52 to i64
  %54 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %53
  %55 = load i8*, i8** %54, align 8
  %56 = call %struct._IO_FILE* @fopen64(i8* %55, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.66, i64 0, i64 0)), !track !202
  store %struct._IO_FILE* %56, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %57 = icmp eq %struct._IO_FILE* %56, null
  br i1 %57, label %58, label %61

; <label>:58:                                     ; preds = %51
  call void @perror(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.67, i64 0, i64 0))
  %59 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %60 = add nsw i32 %59, 1
  store i32 %60, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge

; <label>:61:                                     ; preds = %51
  %62 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %63 = call i32 @fseek(%struct._IO_FILE* %62, i64 0, i32 2)
  %64 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %65 = call i64 @ftell(%struct._IO_FILE* %64)
  %66 = icmp sle i64 %65, 0
  %67 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  br i1 %66, label %68, label %73

; <label>:68:                                     ; preds = %61
  %69 = call i32 @fclose(%struct._IO_FILE* %67)
  store %struct._IO_FILE* null, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %70 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.68, i64 0, i64 0))
  %71 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %72 = add nsw i32 %71, 1
  store i32 %72, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge

; <label>:73:                                     ; preds = %61
  %.lcssa = phi %struct._IO_FILE* [ %67, %61 ]
  call void @rewind(%struct._IO_FILE* %.lcssa)
  br label %.loopexit

.loopexit.loopexit:                               ; preds = %.backedge, %.lr.ph
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit.loopexit, %73, %49, %.preheader
  %74 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 23
  %75 = load i32, i32* %74, align 8
  %76 = icmp sge i32 %75, 128
  br i1 %76, label %UnifiedReturnBlock, label %77

; <label>:77:                                     ; preds = %.loopexit
  %78 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 23
  %79 = load i32, i32* %78, align 8
  %80 = sext i32 %79 to i64
  %81 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 21
  %82 = getelementptr inbounds [128 x i8*], [128 x i8*]* %81, i64 0, i64 %80
  %83 = load i8*, i8** %82, align 8
  %84 = icmp eq i8* %83, null
  %spec.select = select i1 %84, i32 1, i32 0
  br label %UnifiedReturnBlock

UnifiedReturnBlock:                               ; preds = %77, %.loopexit, %15
  %UnifiedRetVal = phi i32 [ %spec.select, %77 ], [ 1, %.loopexit ], [ 1, %15 ]
  ret i32 %UnifiedRetVal
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @next_dict_clone.14(i32) #0 {
  %2 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 22
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %2, align 8
  %4 = icmp ne %struct._IO_FILE* %3, null
  br i1 %4, label %5, label %15

; <label>:5:                                      ; preds = %1
  %6 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 28
  %7 = load i32, i32* %6, align 8
  %8 = icmp ne i32 %7, 0
  br i1 %8, label %13, label %9

; <label>:9:                                      ; preds = %5
  %10 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 22
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** %10, align 8
  %12 = call i32 @fclose(%struct._IO_FILE* %11)
  br label %13

; <label>:13:                                     ; preds = %9, %5
  %14 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 22
  store %struct._IO_FILE* null, %struct._IO_FILE** %14, align 8
  br label %15

; <label>:15:                                     ; preds = %13, %1
  %16 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 23
  store i32 %0, i32* %16, align 8
  %17 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 23
  %18 = load i32, i32* %17, align 8
  %19 = sext i32 %18 to i64
  %20 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 21
  %21 = getelementptr inbounds [128 x i8*], [128 x i8*]* %20, i64 0, i64 %19
  %22 = load i8*, i8** %21, align 8
  %23 = icmp eq i8* %22, null
  br i1 %23, label %UnifiedReturnBlock, label %.preheader

.preheader:                                       ; preds = %15
  call void @unroll_loop(i32 108)
  %24 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 23
  %25 = load i32, i32* %24, align 8
  %26 = icmp slt i32 %25, 128
  br i1 %26, label %.lr.ph.preheader, label %.loopexit

.lr.ph.preheader:                                 ; preds = %.preheader
  br label %.lr.ph

.lr.ph:                                           ; preds = %.backedge, %.lr.ph.preheader
  %27 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %28
  %30 = load i8*, i8** %29, align 8
  %31 = icmp ne i8* %30, null
  br i1 %31, label %32, label %.loopexit.loopexit

; <label>:32:                                     ; preds = %.lr.ph
  %33 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %34
  %36 = load i8*, i8** %35, align 8
  %37 = call i32 @strcmp(i8* %36, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i64 0, i64 0)) #10
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %51

; <label>:39:                                     ; preds = %32
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 28), align 8
  %40 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
  %41 = call i32 @fileno(%struct._IO_FILE* %40) #9
  %42 = call %struct._IO_FILE* @fdopen(i32 %41, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.66, i64 0, i64 0)) #9, !track !201
  store %struct._IO_FILE* %42, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %43 = icmp eq %struct._IO_FILE* %42, null
  br i1 %43, label %44, label %49

; <label>:44:                                     ; preds = %39
  call void @perror(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.67, i64 0, i64 0))
  %45 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %46 = add nsw i32 %45, 1
  store i32 %46, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge

.backedge:                                        ; preds = %68, %58, %44
  call void @unroll_loop(i32 108)
  %47 = load i32, i32* %24, align 8
  %48 = icmp slt i32 %47, 128
  br i1 %48, label %.lr.ph, label %.loopexit.loopexit

; <label>:49:                                     ; preds = %39
  %50 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 24
  store i32 1, i32* %50, align 4
  br label %.loopexit

; <label>:51:                                     ; preds = %32
  store i32 0, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 28), align 8
  %52 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %53 = sext i32 %52 to i64
  %54 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %53
  %55 = load i8*, i8** %54, align 8
  %56 = call %struct._IO_FILE* @fopen64(i8* %55, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.66, i64 0, i64 0)), !track !202
  store %struct._IO_FILE* %56, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %57 = icmp eq %struct._IO_FILE* %56, null
  br i1 %57, label %58, label %61

; <label>:58:                                     ; preds = %51
  call void @perror(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.67, i64 0, i64 0))
  %59 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %60 = add nsw i32 %59, 1
  store i32 %60, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge

; <label>:61:                                     ; preds = %51
  %62 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %63 = call i32 @fseek(%struct._IO_FILE* %62, i64 0, i32 2)
  %64 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %65 = call i64 @ftell(%struct._IO_FILE* %64)
  %66 = icmp sle i64 %65, 0
  %67 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  br i1 %66, label %68, label %73

; <label>:68:                                     ; preds = %61
  %69 = call i32 @fclose(%struct._IO_FILE* %67)
  store %struct._IO_FILE* null, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %70 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.68, i64 0, i64 0))
  %71 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %72 = add nsw i32 %71, 1
  store i32 %72, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge

; <label>:73:                                     ; preds = %61
  %.lcssa = phi %struct._IO_FILE* [ %67, %61 ]
  call void @rewind(%struct._IO_FILE* %.lcssa)
  br label %.loopexit

.loopexit.loopexit:                               ; preds = %.backedge, %.lr.ph
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit.loopexit, %73, %49, %.preheader
  %74 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 23
  %75 = load i32, i32* %74, align 8
  %76 = icmp sge i32 %75, 128
  br i1 %76, label %UnifiedReturnBlock, label %77

; <label>:77:                                     ; preds = %.loopexit
  %78 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 23
  %79 = load i32, i32* %78, align 8
  %80 = sext i32 %79 to i64
  %81 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 21
  %82 = getelementptr inbounds [128 x i8*], [128 x i8*]* %81, i64 0, i64 %80
  %83 = load i8*, i8** %82, align 8
  %84 = icmp eq i8* %83, null
  %spec.select = select i1 %84, i32 1, i32 0
  br label %UnifiedReturnBlock

UnifiedReturnBlock:                               ; preds = %77, %.loopexit, %15
  %UnifiedRetVal = phi i32 [ %spec.select, %77 ], [ 1, %.loopexit ], [ 1, %15 ]
  ret i32 %UnifiedRetVal
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @next_dict_clone.16(i32) #0 {
  %2 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 22
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %2, align 8
  %4 = icmp ne %struct._IO_FILE* %3, null
  br i1 %4, label %5, label %15

; <label>:5:                                      ; preds = %1
  %6 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 28
  %7 = load i32, i32* %6, align 8
  %8 = icmp ne i32 %7, 0
  br i1 %8, label %13, label %9

; <label>:9:                                      ; preds = %5
  %10 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 22
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** %10, align 8
  %12 = call i32 @fclose(%struct._IO_FILE* %11)
  br label %13

; <label>:13:                                     ; preds = %9, %5
  %14 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 22
  store %struct._IO_FILE* null, %struct._IO_FILE** %14, align 8
  br label %15

; <label>:15:                                     ; preds = %13, %1
  %16 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 23
  store i32 %0, i32* %16, align 8
  %17 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 23
  %18 = load i32, i32* %17, align 8
  %19 = sext i32 %18 to i64
  %20 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 21
  %21 = getelementptr inbounds [128 x i8*], [128 x i8*]* %20, i64 0, i64 %19
  %22 = load i8*, i8** %21, align 8
  %23 = icmp eq i8* %22, null
  br i1 %23, label %UnifiedReturnBlock, label %.preheader

.preheader:                                       ; preds = %15
  call void @unroll_loop(i32 108)
  %24 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 23
  %25 = load i32, i32* %24, align 8
  %26 = icmp slt i32 %25, 128
  br i1 %26, label %.lr.ph.preheader, label %.loopexit

.lr.ph.preheader:                                 ; preds = %.preheader
  br label %.lr.ph

.lr.ph:                                           ; preds = %.backedge, %.lr.ph.preheader
  %27 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %28
  %30 = load i8*, i8** %29, align 8
  %31 = icmp ne i8* %30, null
  br i1 %31, label %32, label %.loopexit.loopexit

; <label>:32:                                     ; preds = %.lr.ph
  %33 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %34
  %36 = load i8*, i8** %35, align 8
  %37 = call i32 @strcmp(i8* %36, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i64 0, i64 0)) #10
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %51

; <label>:39:                                     ; preds = %32
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 28), align 8
  %40 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
  %41 = call i32 @fileno(%struct._IO_FILE* %40) #9
  %42 = call %struct._IO_FILE* @fdopen(i32 %41, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.66, i64 0, i64 0)) #9, !track !201
  store %struct._IO_FILE* %42, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %43 = icmp eq %struct._IO_FILE* %42, null
  br i1 %43, label %44, label %49

; <label>:44:                                     ; preds = %39
  call void @perror(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.67, i64 0, i64 0))
  %45 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %46 = add nsw i32 %45, 1
  store i32 %46, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge

.backedge:                                        ; preds = %68, %58, %44
  call void @unroll_loop(i32 108)
  %47 = load i32, i32* %24, align 8
  %48 = icmp slt i32 %47, 128
  br i1 %48, label %.lr.ph, label %.loopexit.loopexit

; <label>:49:                                     ; preds = %39
  %50 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 24
  store i32 1, i32* %50, align 4
  br label %.loopexit

; <label>:51:                                     ; preds = %32
  store i32 0, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 28), align 8
  %52 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %53 = sext i32 %52 to i64
  %54 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %53
  %55 = load i8*, i8** %54, align 8
  %56 = call %struct._IO_FILE* @fopen64(i8* %55, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.66, i64 0, i64 0)), !track !202
  store %struct._IO_FILE* %56, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %57 = icmp eq %struct._IO_FILE* %56, null
  br i1 %57, label %58, label %61

; <label>:58:                                     ; preds = %51
  call void @perror(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.67, i64 0, i64 0))
  %59 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %60 = add nsw i32 %59, 1
  store i32 %60, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge

; <label>:61:                                     ; preds = %51
  %62 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %63 = call i32 @fseek(%struct._IO_FILE* %62, i64 0, i32 2)
  %64 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %65 = call i64 @ftell(%struct._IO_FILE* %64)
  %66 = icmp sle i64 %65, 0
  %67 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  br i1 %66, label %68, label %73

; <label>:68:                                     ; preds = %61
  %69 = call i32 @fclose(%struct._IO_FILE* %67)
  store %struct._IO_FILE* null, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %70 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.68, i64 0, i64 0))
  %71 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %72 = add nsw i32 %71, 1
  store i32 %72, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge

; <label>:73:                                     ; preds = %61
  %.lcssa = phi %struct._IO_FILE* [ %67, %61 ]
  call void @rewind(%struct._IO_FILE* %.lcssa)
  br label %.loopexit

.loopexit.loopexit:                               ; preds = %.backedge, %.lr.ph
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit.loopexit, %73, %49, %.preheader
  %74 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 23
  %75 = load i32, i32* %74, align 8
  %76 = icmp sge i32 %75, 128
  br i1 %76, label %UnifiedReturnBlock, label %77

; <label>:77:                                     ; preds = %.loopexit
  %78 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 23
  %79 = load i32, i32* %78, align 8
  %80 = sext i32 %79 to i64
  %81 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 21
  %82 = getelementptr inbounds [128 x i8*], [128 x i8*]* %81, i64 0, i64 %80
  %83 = load i8*, i8** %82, align 8
  %84 = icmp eq i8* %83, null
  %spec.select = select i1 %84, i32 1, i32 0
  br label %UnifiedReturnBlock

UnifiedReturnBlock:                               ; preds = %77, %.loopexit, %15
  %UnifiedRetVal = phi i32 [ %spec.select, %77 ], [ 1, %.loopexit ], [ 1, %15 ]
  ret i32 %UnifiedRetVal
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @next_dict_clone.18(i32) #0 {
  %2 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 22
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %2, align 8
  %4 = icmp ne %struct._IO_FILE* %3, null
  br i1 %4, label %5, label %15

; <label>:5:                                      ; preds = %1
  %6 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 28
  %7 = load i32, i32* %6, align 8
  %8 = icmp ne i32 %7, 0
  br i1 %8, label %13, label %9

; <label>:9:                                      ; preds = %5
  %10 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 22
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** %10, align 8
  %12 = call i32 @fclose(%struct._IO_FILE* %11)
  br label %13

; <label>:13:                                     ; preds = %9, %5
  %14 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 22
  store %struct._IO_FILE* null, %struct._IO_FILE** %14, align 8
  br label %15

; <label>:15:                                     ; preds = %13, %1
  %16 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 23
  store i32 %0, i32* %16, align 8
  %17 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 23
  %18 = load i32, i32* %17, align 8
  %19 = sext i32 %18 to i64
  %20 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 21
  %21 = getelementptr inbounds [128 x i8*], [128 x i8*]* %20, i64 0, i64 %19
  %22 = load i8*, i8** %21, align 8
  %23 = icmp eq i8* %22, null
  br i1 %23, label %UnifiedReturnBlock, label %.preheader

.preheader:                                       ; preds = %15
  call void @unroll_loop(i32 108)
  %24 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 23
  %25 = load i32, i32* %24, align 8
  %26 = icmp slt i32 %25, 128
  br i1 %26, label %.lr.ph.preheader, label %.loopexit

.lr.ph.preheader:                                 ; preds = %.preheader
  br label %.lr.ph

.lr.ph:                                           ; preds = %.backedge, %.lr.ph.preheader
  %27 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %28
  %30 = load i8*, i8** %29, align 8
  %31 = icmp ne i8* %30, null
  br i1 %31, label %32, label %.loopexit.loopexit

; <label>:32:                                     ; preds = %.lr.ph
  %33 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %34
  %36 = load i8*, i8** %35, align 8
  %37 = call i32 @strcmp(i8* %36, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i64 0, i64 0)) #10
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %51

; <label>:39:                                     ; preds = %32
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 28), align 8
  %40 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
  %41 = call i32 @fileno(%struct._IO_FILE* %40) #9
  %42 = call %struct._IO_FILE* @fdopen(i32 %41, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.66, i64 0, i64 0)) #9, !track !201
  store %struct._IO_FILE* %42, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %43 = icmp eq %struct._IO_FILE* %42, null
  br i1 %43, label %44, label %49

; <label>:44:                                     ; preds = %39
  call void @perror(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.67, i64 0, i64 0))
  %45 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %46 = add nsw i32 %45, 1
  store i32 %46, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge

.backedge:                                        ; preds = %68, %58, %44
  call void @unroll_loop(i32 108)
  %47 = load i32, i32* %24, align 8
  %48 = icmp slt i32 %47, 128
  br i1 %48, label %.lr.ph, label %.loopexit.loopexit

; <label>:49:                                     ; preds = %39
  %50 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 24
  store i32 1, i32* %50, align 4
  br label %.loopexit

; <label>:51:                                     ; preds = %32
  store i32 0, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 28), align 8
  %52 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %53 = sext i32 %52 to i64
  %54 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %53
  %55 = load i8*, i8** %54, align 8
  %56 = call %struct._IO_FILE* @fopen64(i8* %55, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.66, i64 0, i64 0)), !track !202
  store %struct._IO_FILE* %56, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %57 = icmp eq %struct._IO_FILE* %56, null
  br i1 %57, label %58, label %61

; <label>:58:                                     ; preds = %51
  call void @perror(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.67, i64 0, i64 0))
  %59 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %60 = add nsw i32 %59, 1
  store i32 %60, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge

; <label>:61:                                     ; preds = %51
  %62 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %63 = call i32 @fseek(%struct._IO_FILE* %62, i64 0, i32 2)
  %64 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %65 = call i64 @ftell(%struct._IO_FILE* %64)
  %66 = icmp sle i64 %65, 0
  %67 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  br i1 %66, label %68, label %73

; <label>:68:                                     ; preds = %61
  %69 = call i32 @fclose(%struct._IO_FILE* %67)
  store %struct._IO_FILE* null, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %70 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.68, i64 0, i64 0))
  %71 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %72 = add nsw i32 %71, 1
  store i32 %72, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge

; <label>:73:                                     ; preds = %61
  %.lcssa = phi %struct._IO_FILE* [ %67, %61 ]
  call void @rewind(%struct._IO_FILE* %.lcssa)
  br label %.loopexit

.loopexit.loopexit:                               ; preds = %.backedge, %.lr.ph
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit.loopexit, %73, %49, %.preheader
  %74 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 23
  %75 = load i32, i32* %74, align 8
  %76 = icmp sge i32 %75, 128
  br i1 %76, label %UnifiedReturnBlock, label %77

; <label>:77:                                     ; preds = %.loopexit
  %78 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 23
  %79 = load i32, i32* %78, align 8
  %80 = sext i32 %79 to i64
  %81 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 21
  %82 = getelementptr inbounds [128 x i8*], [128 x i8*]* %81, i64 0, i64 %80
  %83 = load i8*, i8** %82, align 8
  %84 = icmp eq i8* %83, null
  %spec.select = select i1 %84, i32 1, i32 0
  br label %UnifiedReturnBlock

UnifiedReturnBlock:                               ; preds = %77, %.loopexit, %15
  %UnifiedRetVal = phi i32 [ %spec.select, %77 ], [ 1, %.loopexit ], [ 1, %15 ]
  ret i32 %UnifiedRetVal
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @next_dict_clone.20(i32) #0 {
  %2 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 22
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %2, align 8
  %4 = icmp ne %struct._IO_FILE* %3, null
  br i1 %4, label %5, label %15

; <label>:5:                                      ; preds = %1
  %6 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 28
  %7 = load i32, i32* %6, align 8
  %8 = icmp ne i32 %7, 0
  br i1 %8, label %13, label %9

; <label>:9:                                      ; preds = %5
  %10 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 22
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** %10, align 8
  %12 = call i32 @fclose(%struct._IO_FILE* %11)
  br label %13

; <label>:13:                                     ; preds = %9, %5
  %14 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 22
  store %struct._IO_FILE* null, %struct._IO_FILE** %14, align 8
  br label %15

; <label>:15:                                     ; preds = %13, %1
  %16 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 23
  store i32 %0, i32* %16, align 8
  %17 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 23
  %18 = load i32, i32* %17, align 8
  %19 = sext i32 %18 to i64
  %20 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 21
  %21 = getelementptr inbounds [128 x i8*], [128 x i8*]* %20, i64 0, i64 %19
  %22 = load i8*, i8** %21, align 8
  %23 = icmp eq i8* %22, null
  br i1 %23, label %UnifiedReturnBlock, label %.preheader

.preheader:                                       ; preds = %15
  call void @unroll_loop(i32 108)
  %24 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 23
  %25 = load i32, i32* %24, align 8
  %26 = icmp slt i32 %25, 128
  br i1 %26, label %.lr.ph.preheader, label %.loopexit

.lr.ph.preheader:                                 ; preds = %.preheader
  br label %.lr.ph

.lr.ph:                                           ; preds = %.backedge, %.lr.ph.preheader
  %27 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %28
  %30 = load i8*, i8** %29, align 8
  %31 = icmp ne i8* %30, null
  br i1 %31, label %32, label %.loopexit.loopexit

; <label>:32:                                     ; preds = %.lr.ph
  %33 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %34
  %36 = load i8*, i8** %35, align 8
  %37 = call i32 @strcmp(i8* %36, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i64 0, i64 0)) #10
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %51

; <label>:39:                                     ; preds = %32
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 28), align 8
  %40 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
  %41 = call i32 @fileno(%struct._IO_FILE* %40) #9
  %42 = call %struct._IO_FILE* @fdopen(i32 %41, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.66, i64 0, i64 0)) #9, !track !201
  store %struct._IO_FILE* %42, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %43 = icmp eq %struct._IO_FILE* %42, null
  br i1 %43, label %44, label %49

; <label>:44:                                     ; preds = %39
  call void @perror(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.67, i64 0, i64 0))
  %45 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %46 = add nsw i32 %45, 1
  store i32 %46, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge

.backedge:                                        ; preds = %68, %58, %44
  call void @unroll_loop(i32 108)
  %47 = load i32, i32* %24, align 8
  %48 = icmp slt i32 %47, 128
  br i1 %48, label %.lr.ph, label %.loopexit.loopexit

; <label>:49:                                     ; preds = %39
  %50 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 24
  store i32 1, i32* %50, align 4
  br label %.loopexit

; <label>:51:                                     ; preds = %32
  store i32 0, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 28), align 8
  %52 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %53 = sext i32 %52 to i64
  %54 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %53
  %55 = load i8*, i8** %54, align 8
  %56 = call %struct._IO_FILE* @fopen64(i8* %55, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.66, i64 0, i64 0)), !track !202
  store %struct._IO_FILE* %56, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %57 = icmp eq %struct._IO_FILE* %56, null
  br i1 %57, label %58, label %61

; <label>:58:                                     ; preds = %51
  call void @perror(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.67, i64 0, i64 0))
  %59 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %60 = add nsw i32 %59, 1
  store i32 %60, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge

; <label>:61:                                     ; preds = %51
  %62 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %63 = call i32 @fseek(%struct._IO_FILE* %62, i64 0, i32 2)
  %64 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %65 = call i64 @ftell(%struct._IO_FILE* %64)
  %66 = icmp sle i64 %65, 0
  %67 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  br i1 %66, label %68, label %73

; <label>:68:                                     ; preds = %61
  %69 = call i32 @fclose(%struct._IO_FILE* %67)
  store %struct._IO_FILE* null, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %70 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.68, i64 0, i64 0))
  %71 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %72 = add nsw i32 %71, 1
  store i32 %72, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge

; <label>:73:                                     ; preds = %61
  %.lcssa = phi %struct._IO_FILE* [ %67, %61 ]
  call void @rewind(%struct._IO_FILE* %.lcssa)
  br label %.loopexit

.loopexit.loopexit:                               ; preds = %.backedge, %.lr.ph
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit.loopexit, %73, %49, %.preheader
  %74 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 23
  %75 = load i32, i32* %74, align 8
  %76 = icmp sge i32 %75, 128
  br i1 %76, label %UnifiedReturnBlock, label %77

; <label>:77:                                     ; preds = %.loopexit
  %78 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 23
  %79 = load i32, i32* %78, align 8
  %80 = sext i32 %79 to i64
  %81 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 21
  %82 = getelementptr inbounds [128 x i8*], [128 x i8*]* %81, i64 0, i64 %80
  %83 = load i8*, i8** %82, align 8
  %84 = icmp eq i8* %83, null
  %spec.select = select i1 %84, i32 1, i32 0
  br label %UnifiedReturnBlock

UnifiedReturnBlock:                               ; preds = %77, %.loopexit, %15
  %UnifiedRetVal = phi i32 [ %spec.select, %77 ], [ 1, %.loopexit ], [ 1, %15 ]
  ret i32 %UnifiedRetVal
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @next_dict_clone.22(i32) #0 {
  %2 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 22
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %2, align 8
  %4 = icmp ne %struct._IO_FILE* %3, null
  br i1 %4, label %5, label %15

; <label>:5:                                      ; preds = %1
  %6 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 28
  %7 = load i32, i32* %6, align 8
  %8 = icmp ne i32 %7, 0
  br i1 %8, label %13, label %9

; <label>:9:                                      ; preds = %5
  %10 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 22
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** %10, align 8
  %12 = call i32 @fclose(%struct._IO_FILE* %11)
  br label %13

; <label>:13:                                     ; preds = %9, %5
  %14 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 22
  store %struct._IO_FILE* null, %struct._IO_FILE** %14, align 8
  br label %15

; <label>:15:                                     ; preds = %13, %1
  %16 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 23
  store i32 %0, i32* %16, align 8
  %17 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 23
  %18 = load i32, i32* %17, align 8
  %19 = sext i32 %18 to i64
  %20 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 21
  %21 = getelementptr inbounds [128 x i8*], [128 x i8*]* %20, i64 0, i64 %19
  %22 = load i8*, i8** %21, align 8
  %23 = icmp eq i8* %22, null
  br i1 %23, label %UnifiedReturnBlock, label %.preheader

.preheader:                                       ; preds = %15
  call void @unroll_loop(i32 108)
  %24 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 23
  %25 = load i32, i32* %24, align 8
  %26 = icmp slt i32 %25, 128
  br i1 %26, label %.lr.ph.preheader, label %.loopexit

.lr.ph.preheader:                                 ; preds = %.preheader
  br label %.lr.ph

.lr.ph:                                           ; preds = %.backedge, %.lr.ph.preheader
  %27 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %28
  %30 = load i8*, i8** %29, align 8
  %31 = icmp ne i8* %30, null
  br i1 %31, label %32, label %.loopexit.loopexit

; <label>:32:                                     ; preds = %.lr.ph
  %33 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %34
  %36 = load i8*, i8** %35, align 8
  %37 = call i32 @strcmp(i8* %36, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i64 0, i64 0)) #10
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %51

; <label>:39:                                     ; preds = %32
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 28), align 8
  %40 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
  %41 = call i32 @fileno(%struct._IO_FILE* %40) #9
  %42 = call %struct._IO_FILE* @fdopen(i32 %41, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.66, i64 0, i64 0)) #9, !track !201
  store %struct._IO_FILE* %42, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %43 = icmp eq %struct._IO_FILE* %42, null
  br i1 %43, label %44, label %49

; <label>:44:                                     ; preds = %39
  call void @perror(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.67, i64 0, i64 0))
  %45 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %46 = add nsw i32 %45, 1
  store i32 %46, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge

.backedge:                                        ; preds = %68, %58, %44
  call void @unroll_loop(i32 108)
  %47 = load i32, i32* %24, align 8
  %48 = icmp slt i32 %47, 128
  br i1 %48, label %.lr.ph, label %.loopexit.loopexit

; <label>:49:                                     ; preds = %39
  %50 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 24
  store i32 1, i32* %50, align 4
  br label %.loopexit

; <label>:51:                                     ; preds = %32
  store i32 0, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 28), align 8
  %52 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %53 = sext i32 %52 to i64
  %54 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %53
  %55 = load i8*, i8** %54, align 8
  %56 = call %struct._IO_FILE* @fopen64(i8* %55, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.66, i64 0, i64 0)), !track !202
  store %struct._IO_FILE* %56, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %57 = icmp eq %struct._IO_FILE* %56, null
  br i1 %57, label %58, label %61

; <label>:58:                                     ; preds = %51
  call void @perror(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.67, i64 0, i64 0))
  %59 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %60 = add nsw i32 %59, 1
  store i32 %60, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge

; <label>:61:                                     ; preds = %51
  %62 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %63 = call i32 @fseek(%struct._IO_FILE* %62, i64 0, i32 2)
  %64 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %65 = call i64 @ftell(%struct._IO_FILE* %64)
  %66 = icmp sle i64 %65, 0
  %67 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  br i1 %66, label %68, label %73

; <label>:68:                                     ; preds = %61
  %69 = call i32 @fclose(%struct._IO_FILE* %67)
  store %struct._IO_FILE* null, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %70 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.68, i64 0, i64 0))
  %71 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %72 = add nsw i32 %71, 1
  store i32 %72, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge

; <label>:73:                                     ; preds = %61
  %.lcssa = phi %struct._IO_FILE* [ %67, %61 ]
  call void @rewind(%struct._IO_FILE* %.lcssa)
  br label %.loopexit

.loopexit.loopexit:                               ; preds = %.backedge, %.lr.ph
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit.loopexit, %73, %49, %.preheader
  %74 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 23
  %75 = load i32, i32* %74, align 8
  %76 = icmp sge i32 %75, 128
  br i1 %76, label %UnifiedReturnBlock, label %77

; <label>:77:                                     ; preds = %.loopexit
  %78 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 23
  %79 = load i32, i32* %78, align 8
  %80 = sext i32 %79 to i64
  %81 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 21
  %82 = getelementptr inbounds [128 x i8*], [128 x i8*]* %81, i64 0, i64 %80
  %83 = load i8*, i8** %82, align 8
  %84 = icmp eq i8* %83, null
  %spec.select = select i1 %84, i32 1, i32 0
  br label %UnifiedReturnBlock

UnifiedReturnBlock:                               ; preds = %77, %.loopexit, %15
  %UnifiedRetVal = phi i32 [ %spec.select, %77 ], [ 1, %.loopexit ], [ 1, %15 ]
  ret i32 %UnifiedRetVal
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @next_dict_clone.24(i32) #0 {
  %2 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 22
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %2, align 8
  %4 = icmp ne %struct._IO_FILE* %3, null
  br i1 %4, label %5, label %15

; <label>:5:                                      ; preds = %1
  %6 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 28
  %7 = load i32, i32* %6, align 8
  %8 = icmp ne i32 %7, 0
  br i1 %8, label %13, label %9

; <label>:9:                                      ; preds = %5
  %10 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 22
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** %10, align 8
  %12 = call i32 @fclose(%struct._IO_FILE* %11)
  br label %13

; <label>:13:                                     ; preds = %9, %5
  %14 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 22
  store %struct._IO_FILE* null, %struct._IO_FILE** %14, align 8
  br label %15

; <label>:15:                                     ; preds = %13, %1
  %16 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 23
  store i32 %0, i32* %16, align 8
  %17 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 23
  %18 = load i32, i32* %17, align 8
  %19 = sext i32 %18 to i64
  %20 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 21
  %21 = getelementptr inbounds [128 x i8*], [128 x i8*]* %20, i64 0, i64 %19
  %22 = load i8*, i8** %21, align 8
  %23 = icmp eq i8* %22, null
  br i1 %23, label %UnifiedReturnBlock, label %.preheader

.preheader:                                       ; preds = %15
  call void @unroll_loop(i32 108)
  %24 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 23
  %25 = load i32, i32* %24, align 8
  %26 = icmp slt i32 %25, 128
  br i1 %26, label %.lr.ph.preheader, label %.loopexit

.lr.ph.preheader:                                 ; preds = %.preheader
  br label %.lr.ph

.lr.ph:                                           ; preds = %.backedge, %.lr.ph.preheader
  %27 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %28
  %30 = load i8*, i8** %29, align 8
  %31 = icmp ne i8* %30, null
  br i1 %31, label %32, label %.loopexit.loopexit

; <label>:32:                                     ; preds = %.lr.ph
  %33 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %34
  %36 = load i8*, i8** %35, align 8
  %37 = call i32 @strcmp(i8* %36, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i64 0, i64 0)) #10
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %51

; <label>:39:                                     ; preds = %32
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 28), align 8
  %40 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
  %41 = call i32 @fileno(%struct._IO_FILE* %40) #9
  %42 = call %struct._IO_FILE* @fdopen(i32 %41, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.66, i64 0, i64 0)) #9, !track !201
  store %struct._IO_FILE* %42, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %43 = icmp eq %struct._IO_FILE* %42, null
  br i1 %43, label %44, label %49

; <label>:44:                                     ; preds = %39
  call void @perror(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.67, i64 0, i64 0))
  %45 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %46 = add nsw i32 %45, 1
  store i32 %46, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge

.backedge:                                        ; preds = %68, %58, %44
  call void @unroll_loop(i32 108)
  %47 = load i32, i32* %24, align 8
  %48 = icmp slt i32 %47, 128
  br i1 %48, label %.lr.ph, label %.loopexit.loopexit

; <label>:49:                                     ; preds = %39
  %50 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 24
  store i32 1, i32* %50, align 4
  br label %.loopexit

; <label>:51:                                     ; preds = %32
  store i32 0, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 28), align 8
  %52 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %53 = sext i32 %52 to i64
  %54 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %53
  %55 = load i8*, i8** %54, align 8
  %56 = call %struct._IO_FILE* @fopen64(i8* %55, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.66, i64 0, i64 0)), !track !202
  store %struct._IO_FILE* %56, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %57 = icmp eq %struct._IO_FILE* %56, null
  br i1 %57, label %58, label %61

; <label>:58:                                     ; preds = %51
  call void @perror(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.67, i64 0, i64 0))
  %59 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %60 = add nsw i32 %59, 1
  store i32 %60, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge

; <label>:61:                                     ; preds = %51
  %62 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %63 = call i32 @fseek(%struct._IO_FILE* %62, i64 0, i32 2)
  %64 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %65 = call i64 @ftell(%struct._IO_FILE* %64)
  %66 = icmp sle i64 %65, 0
  %67 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  br i1 %66, label %68, label %73

; <label>:68:                                     ; preds = %61
  %69 = call i32 @fclose(%struct._IO_FILE* %67)
  store %struct._IO_FILE* null, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %70 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.68, i64 0, i64 0))
  %71 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %72 = add nsw i32 %71, 1
  store i32 %72, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge

; <label>:73:                                     ; preds = %61
  %.lcssa = phi %struct._IO_FILE* [ %67, %61 ]
  call void @rewind(%struct._IO_FILE* %.lcssa)
  br label %.loopexit

.loopexit.loopexit:                               ; preds = %.backedge, %.lr.ph
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit.loopexit, %73, %49, %.preheader
  %74 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 23
  %75 = load i32, i32* %74, align 8
  %76 = icmp sge i32 %75, 128
  br i1 %76, label %UnifiedReturnBlock, label %77

; <label>:77:                                     ; preds = %.loopexit
  %78 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 23
  %79 = load i32, i32* %78, align 8
  %80 = sext i32 %79 to i64
  %81 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 21
  %82 = getelementptr inbounds [128 x i8*], [128 x i8*]* %81, i64 0, i64 %80
  %83 = load i8*, i8** %82, align 8
  %84 = icmp eq i8* %83, null
  %spec.select = select i1 %84, i32 1, i32 0
  br label %UnifiedReturnBlock

UnifiedReturnBlock:                               ; preds = %77, %.loopexit, %15
  %UnifiedRetVal = phi i32 [ %spec.select, %77 ], [ 1, %.loopexit ], [ 1, %15 ]
  ret i32 %UnifiedRetVal
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @next_dict_clone.26(i32) #0 {
  %2 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 22
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %2, align 8
  %4 = icmp ne %struct._IO_FILE* %3, null
  br i1 %4, label %5, label %15

; <label>:5:                                      ; preds = %1
  %6 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 28
  %7 = load i32, i32* %6, align 8
  %8 = icmp ne i32 %7, 0
  br i1 %8, label %13, label %9

; <label>:9:                                      ; preds = %5
  %10 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 22
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** %10, align 8
  %12 = call i32 @fclose(%struct._IO_FILE* %11)
  br label %13

; <label>:13:                                     ; preds = %9, %5
  %14 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 22
  store %struct._IO_FILE* null, %struct._IO_FILE** %14, align 8
  br label %15

; <label>:15:                                     ; preds = %13, %1
  %16 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 23
  store i32 %0, i32* %16, align 8
  %17 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 23
  %18 = load i32, i32* %17, align 8
  %19 = sext i32 %18 to i64
  %20 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 21
  %21 = getelementptr inbounds [128 x i8*], [128 x i8*]* %20, i64 0, i64 %19
  %22 = load i8*, i8** %21, align 8
  %23 = icmp eq i8* %22, null
  br i1 %23, label %UnifiedReturnBlock, label %.preheader

.preheader:                                       ; preds = %15
  call void @unroll_loop(i32 108)
  %24 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 23
  %25 = load i32, i32* %24, align 8
  %26 = icmp slt i32 %25, 128
  br i1 %26, label %.lr.ph.preheader, label %.loopexit

.lr.ph.preheader:                                 ; preds = %.preheader
  br label %.lr.ph

.lr.ph:                                           ; preds = %.backedge, %.lr.ph.preheader
  %27 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %28
  %30 = load i8*, i8** %29, align 8
  %31 = icmp ne i8* %30, null
  br i1 %31, label %32, label %.loopexit.loopexit

; <label>:32:                                     ; preds = %.lr.ph
  %33 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %34
  %36 = load i8*, i8** %35, align 8
  %37 = call i32 @strcmp(i8* %36, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i64 0, i64 0)) #10
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %51

; <label>:39:                                     ; preds = %32
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 28), align 8
  %40 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
  %41 = call i32 @fileno(%struct._IO_FILE* %40) #9
  %42 = call %struct._IO_FILE* @fdopen(i32 %41, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.66, i64 0, i64 0)) #9, !track !201
  store %struct._IO_FILE* %42, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %43 = icmp eq %struct._IO_FILE* %42, null
  br i1 %43, label %44, label %49

; <label>:44:                                     ; preds = %39
  call void @perror(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.67, i64 0, i64 0))
  %45 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %46 = add nsw i32 %45, 1
  store i32 %46, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge

.backedge:                                        ; preds = %68, %58, %44
  call void @unroll_loop(i32 108)
  %47 = load i32, i32* %24, align 8
  %48 = icmp slt i32 %47, 128
  br i1 %48, label %.lr.ph, label %.loopexit.loopexit

; <label>:49:                                     ; preds = %39
  %50 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 24
  store i32 1, i32* %50, align 4
  br label %.loopexit

; <label>:51:                                     ; preds = %32
  store i32 0, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 28), align 8
  %52 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %53 = sext i32 %52 to i64
  %54 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %53
  %55 = load i8*, i8** %54, align 8
  %56 = call %struct._IO_FILE* @fopen64(i8* %55, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.66, i64 0, i64 0)), !track !202
  store %struct._IO_FILE* %56, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %57 = icmp eq %struct._IO_FILE* %56, null
  br i1 %57, label %58, label %61

; <label>:58:                                     ; preds = %51
  call void @perror(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.67, i64 0, i64 0))
  %59 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %60 = add nsw i32 %59, 1
  store i32 %60, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge

; <label>:61:                                     ; preds = %51
  %62 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %63 = call i32 @fseek(%struct._IO_FILE* %62, i64 0, i32 2)
  %64 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %65 = call i64 @ftell(%struct._IO_FILE* %64)
  %66 = icmp sle i64 %65, 0
  %67 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  br i1 %66, label %68, label %73

; <label>:68:                                     ; preds = %61
  %69 = call i32 @fclose(%struct._IO_FILE* %67)
  store %struct._IO_FILE* null, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %70 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.68, i64 0, i64 0))
  %71 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %72 = add nsw i32 %71, 1
  store i32 %72, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge

; <label>:73:                                     ; preds = %61
  %.lcssa = phi %struct._IO_FILE* [ %67, %61 ]
  call void @rewind(%struct._IO_FILE* %.lcssa)
  br label %.loopexit

.loopexit.loopexit:                               ; preds = %.backedge, %.lr.ph
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit.loopexit, %73, %49, %.preheader
  %74 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 23
  %75 = load i32, i32* %74, align 8
  %76 = icmp sge i32 %75, 128
  br i1 %76, label %UnifiedReturnBlock, label %77

; <label>:77:                                     ; preds = %.loopexit
  %78 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 23
  %79 = load i32, i32* %78, align 8
  %80 = sext i32 %79 to i64
  %81 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 21
  %82 = getelementptr inbounds [128 x i8*], [128 x i8*]* %81, i64 0, i64 %80
  %83 = load i8*, i8** %82, align 8
  %84 = icmp eq i8* %83, null
  %spec.select = select i1 %84, i32 1, i32 0
  br label %UnifiedReturnBlock

UnifiedReturnBlock:                               ; preds = %77, %.loopexit, %15
  %UnifiedRetVal = phi i32 [ %spec.select, %77 ], [ 1, %.loopexit ], [ 1, %15 ]
  ret i32 %UnifiedRetVal
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @next_dict_clone.28(i32) #0 {
  %2 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 22
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %2, align 8
  %4 = icmp ne %struct._IO_FILE* %3, null
  br i1 %4, label %5, label %15

; <label>:5:                                      ; preds = %1
  %6 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 28
  %7 = load i32, i32* %6, align 8
  %8 = icmp ne i32 %7, 0
  br i1 %8, label %13, label %9

; <label>:9:                                      ; preds = %5
  %10 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 22
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** %10, align 8
  %12 = call i32 @fclose(%struct._IO_FILE* %11)
  br label %13

; <label>:13:                                     ; preds = %9, %5
  %14 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 22
  store %struct._IO_FILE* null, %struct._IO_FILE** %14, align 8
  br label %15

; <label>:15:                                     ; preds = %13, %1
  %16 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 23
  store i32 %0, i32* %16, align 8
  %17 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 23
  %18 = load i32, i32* %17, align 8
  %19 = sext i32 %18 to i64
  %20 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 21
  %21 = getelementptr inbounds [128 x i8*], [128 x i8*]* %20, i64 0, i64 %19
  %22 = load i8*, i8** %21, align 8
  %23 = icmp eq i8* %22, null
  br i1 %23, label %UnifiedReturnBlock, label %.preheader

.preheader:                                       ; preds = %15
  call void @unroll_loop(i32 108)
  %24 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 23
  %25 = load i32, i32* %24, align 8
  %26 = icmp slt i32 %25, 128
  br i1 %26, label %.lr.ph.preheader, label %.loopexit

.lr.ph.preheader:                                 ; preds = %.preheader
  br label %.lr.ph

.lr.ph:                                           ; preds = %.backedge, %.lr.ph.preheader
  %27 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %28
  %30 = load i8*, i8** %29, align 8
  %31 = icmp ne i8* %30, null
  br i1 %31, label %32, label %.loopexit.loopexit

; <label>:32:                                     ; preds = %.lr.ph
  %33 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %34
  %36 = load i8*, i8** %35, align 8
  %37 = call i32 @strcmp(i8* %36, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i64 0, i64 0)) #10
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %51

; <label>:39:                                     ; preds = %32
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 28), align 8
  %40 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
  %41 = call i32 @fileno(%struct._IO_FILE* %40) #9
  %42 = call %struct._IO_FILE* @fdopen(i32 %41, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.66, i64 0, i64 0)) #9, !track !201
  store %struct._IO_FILE* %42, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %43 = icmp eq %struct._IO_FILE* %42, null
  br i1 %43, label %44, label %49

; <label>:44:                                     ; preds = %39
  call void @perror(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.67, i64 0, i64 0))
  %45 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %46 = add nsw i32 %45, 1
  store i32 %46, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge

.backedge:                                        ; preds = %68, %58, %44
  call void @unroll_loop(i32 108)
  %47 = load i32, i32* %24, align 8
  %48 = icmp slt i32 %47, 128
  br i1 %48, label %.lr.ph, label %.loopexit.loopexit

; <label>:49:                                     ; preds = %39
  %50 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 24
  store i32 1, i32* %50, align 4
  br label %.loopexit

; <label>:51:                                     ; preds = %32
  store i32 0, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 28), align 8
  %52 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %53 = sext i32 %52 to i64
  %54 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %53
  %55 = load i8*, i8** %54, align 8
  %56 = call %struct._IO_FILE* @fopen64(i8* %55, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.66, i64 0, i64 0)), !track !202
  store %struct._IO_FILE* %56, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %57 = icmp eq %struct._IO_FILE* %56, null
  br i1 %57, label %58, label %61

; <label>:58:                                     ; preds = %51
  call void @perror(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.67, i64 0, i64 0))
  %59 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %60 = add nsw i32 %59, 1
  store i32 %60, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge

; <label>:61:                                     ; preds = %51
  %62 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %63 = call i32 @fseek(%struct._IO_FILE* %62, i64 0, i32 2)
  %64 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %65 = call i64 @ftell(%struct._IO_FILE* %64)
  %66 = icmp sle i64 %65, 0
  %67 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  br i1 %66, label %68, label %73

; <label>:68:                                     ; preds = %61
  %69 = call i32 @fclose(%struct._IO_FILE* %67)
  store %struct._IO_FILE* null, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %70 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.68, i64 0, i64 0))
  %71 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %72 = add nsw i32 %71, 1
  store i32 %72, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge

; <label>:73:                                     ; preds = %61
  %.lcssa = phi %struct._IO_FILE* [ %67, %61 ]
  call void @rewind(%struct._IO_FILE* %.lcssa)
  br label %.loopexit

.loopexit.loopexit:                               ; preds = %.backedge, %.lr.ph
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit.loopexit, %73, %49, %.preheader
  %74 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 23
  %75 = load i32, i32* %74, align 8
  %76 = icmp sge i32 %75, 128
  br i1 %76, label %UnifiedReturnBlock, label %77

; <label>:77:                                     ; preds = %.loopexit
  %78 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 23
  %79 = load i32, i32* %78, align 8
  %80 = sext i32 %79 to i64
  %81 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 21
  %82 = getelementptr inbounds [128 x i8*], [128 x i8*]* %81, i64 0, i64 %80
  %83 = load i8*, i8** %82, align 8
  %84 = icmp eq i8* %83, null
  %spec.select = select i1 %84, i32 1, i32 0
  br label %UnifiedReturnBlock

UnifiedReturnBlock:                               ; preds = %77, %.loopexit, %15
  %UnifiedRetVal = phi i32 [ %spec.select, %77 ], [ 1, %.loopexit ], [ 1, %15 ]
  ret i32 %UnifiedRetVal
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @next_dict_clone.30(i32) #0 {
  %2 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 22
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %2, align 8
  %4 = icmp ne %struct._IO_FILE* %3, null
  br i1 %4, label %5, label %15

; <label>:5:                                      ; preds = %1
  %6 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 28
  %7 = load i32, i32* %6, align 8
  %8 = icmp ne i32 %7, 0
  br i1 %8, label %13, label %9

; <label>:9:                                      ; preds = %5
  %10 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 22
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** %10, align 8
  %12 = call i32 @fclose(%struct._IO_FILE* %11)
  br label %13

; <label>:13:                                     ; preds = %9, %5
  %14 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 22
  store %struct._IO_FILE* null, %struct._IO_FILE** %14, align 8
  br label %15

; <label>:15:                                     ; preds = %13, %1
  %16 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 23
  store i32 %0, i32* %16, align 8
  %17 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 23
  %18 = load i32, i32* %17, align 8
  %19 = sext i32 %18 to i64
  %20 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 21
  %21 = getelementptr inbounds [128 x i8*], [128 x i8*]* %20, i64 0, i64 %19
  %22 = load i8*, i8** %21, align 8
  %23 = icmp eq i8* %22, null
  br i1 %23, label %UnifiedReturnBlock, label %.preheader

.preheader:                                       ; preds = %15
  call void @unroll_loop(i32 108)
  %24 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 23
  %25 = load i32, i32* %24, align 8
  %26 = icmp slt i32 %25, 128
  br i1 %26, label %.lr.ph.preheader, label %.loopexit

.lr.ph.preheader:                                 ; preds = %.preheader
  br label %.lr.ph

.lr.ph:                                           ; preds = %.backedge, %.lr.ph.preheader
  %27 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %28
  %30 = load i8*, i8** %29, align 8
  %31 = icmp ne i8* %30, null
  br i1 %31, label %32, label %.loopexit.loopexit

; <label>:32:                                     ; preds = %.lr.ph
  %33 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %34
  %36 = load i8*, i8** %35, align 8
  %37 = call i32 @strcmp(i8* %36, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i64 0, i64 0)) #10
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %51

; <label>:39:                                     ; preds = %32
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 28), align 8
  %40 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
  %41 = call i32 @fileno(%struct._IO_FILE* %40) #9
  %42 = call %struct._IO_FILE* @fdopen(i32 %41, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.66, i64 0, i64 0)) #9, !track !201
  store %struct._IO_FILE* %42, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %43 = icmp eq %struct._IO_FILE* %42, null
  br i1 %43, label %44, label %49

; <label>:44:                                     ; preds = %39
  call void @perror(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.67, i64 0, i64 0))
  %45 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %46 = add nsw i32 %45, 1
  store i32 %46, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge

.backedge:                                        ; preds = %68, %58, %44
  call void @unroll_loop(i32 108)
  %47 = load i32, i32* %24, align 8
  %48 = icmp slt i32 %47, 128
  br i1 %48, label %.lr.ph, label %.loopexit.loopexit

; <label>:49:                                     ; preds = %39
  %50 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 24
  store i32 1, i32* %50, align 4
  br label %.loopexit

; <label>:51:                                     ; preds = %32
  store i32 0, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 28), align 8
  %52 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %53 = sext i32 %52 to i64
  %54 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %53
  %55 = load i8*, i8** %54, align 8
  %56 = call %struct._IO_FILE* @fopen64(i8* %55, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.66, i64 0, i64 0)), !track !202
  store %struct._IO_FILE* %56, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %57 = icmp eq %struct._IO_FILE* %56, null
  br i1 %57, label %58, label %61

; <label>:58:                                     ; preds = %51
  call void @perror(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.67, i64 0, i64 0))
  %59 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %60 = add nsw i32 %59, 1
  store i32 %60, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge

; <label>:61:                                     ; preds = %51
  %62 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %63 = call i32 @fseek(%struct._IO_FILE* %62, i64 0, i32 2)
  %64 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %65 = call i64 @ftell(%struct._IO_FILE* %64)
  %66 = icmp sle i64 %65, 0
  %67 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  br i1 %66, label %68, label %73

; <label>:68:                                     ; preds = %61
  %69 = call i32 @fclose(%struct._IO_FILE* %67)
  store %struct._IO_FILE* null, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %70 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.68, i64 0, i64 0))
  %71 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %72 = add nsw i32 %71, 1
  store i32 %72, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge

; <label>:73:                                     ; preds = %61
  %.lcssa = phi %struct._IO_FILE* [ %67, %61 ]
  call void @rewind(%struct._IO_FILE* %.lcssa)
  br label %.loopexit

.loopexit.loopexit:                               ; preds = %.backedge, %.lr.ph
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit.loopexit, %73, %49, %.preheader
  %74 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 23
  %75 = load i32, i32* %74, align 8
  %76 = icmp sge i32 %75, 128
  br i1 %76, label %UnifiedReturnBlock, label %77

; <label>:77:                                     ; preds = %.loopexit
  %78 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 23
  %79 = load i32, i32* %78, align 8
  %80 = sext i32 %79 to i64
  %81 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 21
  %82 = getelementptr inbounds [128 x i8*], [128 x i8*]* %81, i64 0, i64 %80
  %83 = load i8*, i8** %82, align 8
  %84 = icmp eq i8* %83, null
  %spec.select = select i1 %84, i32 1, i32 0
  br label %UnifiedReturnBlock

UnifiedReturnBlock:                               ; preds = %77, %.loopexit, %15
  %UnifiedRetVal = phi i32 [ %spec.select, %77 ], [ 1, %.loopexit ], [ 1, %15 ]
  ret i32 %UnifiedRetVal
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @next_dict_clone.32(i32) #0 {
  %2 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 22
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %2, align 8
  %4 = icmp ne %struct._IO_FILE* %3, null
  br i1 %4, label %5, label %15

; <label>:5:                                      ; preds = %1
  %6 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 28
  %7 = load i32, i32* %6, align 8
  %8 = icmp ne i32 %7, 0
  br i1 %8, label %13, label %9

; <label>:9:                                      ; preds = %5
  %10 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 22
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** %10, align 8
  %12 = call i32 @fclose(%struct._IO_FILE* %11)
  br label %13

; <label>:13:                                     ; preds = %9, %5
  %14 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 22
  store %struct._IO_FILE* null, %struct._IO_FILE** %14, align 8
  br label %15

; <label>:15:                                     ; preds = %13, %1
  %16 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 23
  store i32 %0, i32* %16, align 8
  %17 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 23
  %18 = load i32, i32* %17, align 8
  %19 = sext i32 %18 to i64
  %20 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 21
  %21 = getelementptr inbounds [128 x i8*], [128 x i8*]* %20, i64 0, i64 %19
  %22 = load i8*, i8** %21, align 8
  %23 = icmp eq i8* %22, null
  br i1 %23, label %UnifiedReturnBlock, label %.preheader

.preheader:                                       ; preds = %15
  call void @unroll_loop(i32 108)
  %24 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 23
  %25 = load i32, i32* %24, align 8
  %26 = icmp slt i32 %25, 128
  br i1 %26, label %.lr.ph.preheader, label %.loopexit

.lr.ph.preheader:                                 ; preds = %.preheader
  br label %.lr.ph

.lr.ph:                                           ; preds = %.backedge, %.lr.ph.preheader
  %27 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %28
  %30 = load i8*, i8** %29, align 8
  %31 = icmp ne i8* %30, null
  br i1 %31, label %32, label %.loopexit.loopexit

; <label>:32:                                     ; preds = %.lr.ph
  %33 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %34
  %36 = load i8*, i8** %35, align 8
  %37 = call i32 @strcmp(i8* %36, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i64 0, i64 0)) #10
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %51

; <label>:39:                                     ; preds = %32
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 28), align 8
  %40 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
  %41 = call i32 @fileno(%struct._IO_FILE* %40) #9
  %42 = call %struct._IO_FILE* @fdopen(i32 %41, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.66, i64 0, i64 0)) #9, !track !201
  store %struct._IO_FILE* %42, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %43 = icmp eq %struct._IO_FILE* %42, null
  br i1 %43, label %44, label %49

; <label>:44:                                     ; preds = %39
  call void @perror(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.67, i64 0, i64 0))
  %45 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %46 = add nsw i32 %45, 1
  store i32 %46, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge

.backedge:                                        ; preds = %68, %58, %44
  call void @unroll_loop(i32 108)
  %47 = load i32, i32* %24, align 8
  %48 = icmp slt i32 %47, 128
  br i1 %48, label %.lr.ph, label %.loopexit.loopexit

; <label>:49:                                     ; preds = %39
  %50 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 24
  store i32 1, i32* %50, align 4
  br label %.loopexit

; <label>:51:                                     ; preds = %32
  store i32 0, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 28), align 8
  %52 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %53 = sext i32 %52 to i64
  %54 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %53
  %55 = load i8*, i8** %54, align 8
  %56 = call %struct._IO_FILE* @fopen64(i8* %55, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.66, i64 0, i64 0)), !track !202
  store %struct._IO_FILE* %56, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %57 = icmp eq %struct._IO_FILE* %56, null
  br i1 %57, label %58, label %61

; <label>:58:                                     ; preds = %51
  call void @perror(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.67, i64 0, i64 0))
  %59 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %60 = add nsw i32 %59, 1
  store i32 %60, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge

; <label>:61:                                     ; preds = %51
  %62 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %63 = call i32 @fseek(%struct._IO_FILE* %62, i64 0, i32 2)
  %64 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %65 = call i64 @ftell(%struct._IO_FILE* %64)
  %66 = icmp sle i64 %65, 0
  %67 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  br i1 %66, label %68, label %73

; <label>:68:                                     ; preds = %61
  %69 = call i32 @fclose(%struct._IO_FILE* %67)
  store %struct._IO_FILE* null, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %70 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.68, i64 0, i64 0))
  %71 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %72 = add nsw i32 %71, 1
  store i32 %72, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge

; <label>:73:                                     ; preds = %61
  %.lcssa = phi %struct._IO_FILE* [ %67, %61 ]
  call void @rewind(%struct._IO_FILE* %.lcssa)
  br label %.loopexit

.loopexit.loopexit:                               ; preds = %.backedge, %.lr.ph
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit.loopexit, %73, %49, %.preheader
  %74 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 23
  %75 = load i32, i32* %74, align 8
  %76 = icmp sge i32 %75, 128
  br i1 %76, label %UnifiedReturnBlock, label %77

; <label>:77:                                     ; preds = %.loopexit
  %78 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 23
  %79 = load i32, i32* %78, align 8
  %80 = sext i32 %79 to i64
  %81 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 21
  %82 = getelementptr inbounds [128 x i8*], [128 x i8*]* %81, i64 0, i64 %80
  %83 = load i8*, i8** %82, align 8
  %84 = icmp eq i8* %83, null
  %spec.select = select i1 %84, i32 1, i32 0
  br label %UnifiedReturnBlock

UnifiedReturnBlock:                               ; preds = %77, %.loopexit, %15
  %UnifiedRetVal = phi i32 [ %spec.select, %77 ], [ 1, %.loopexit ], [ 1, %15 ]
  ret i32 %UnifiedRetVal
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @next_dict_clone.34(i32) #0 {
  %2 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 22
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %2, align 8
  %4 = icmp ne %struct._IO_FILE* %3, null
  br i1 %4, label %5, label %15

; <label>:5:                                      ; preds = %1
  %6 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 28
  %7 = load i32, i32* %6, align 8
  %8 = icmp ne i32 %7, 0
  br i1 %8, label %13, label %9

; <label>:9:                                      ; preds = %5
  %10 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 22
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** %10, align 8
  %12 = call i32 @fclose(%struct._IO_FILE* %11)
  br label %13

; <label>:13:                                     ; preds = %9, %5
  %14 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 22
  store %struct._IO_FILE* null, %struct._IO_FILE** %14, align 8
  br label %15

; <label>:15:                                     ; preds = %13, %1
  %16 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 23
  store i32 %0, i32* %16, align 8
  %17 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 23
  %18 = load i32, i32* %17, align 8
  %19 = sext i32 %18 to i64
  %20 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 21
  %21 = getelementptr inbounds [128 x i8*], [128 x i8*]* %20, i64 0, i64 %19
  %22 = load i8*, i8** %21, align 8
  %23 = icmp eq i8* %22, null
  br i1 %23, label %UnifiedReturnBlock, label %.preheader

.preheader:                                       ; preds = %15
  call void @unroll_loop(i32 108)
  %24 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 23
  %25 = load i32, i32* %24, align 8
  %26 = icmp slt i32 %25, 128
  br i1 %26, label %.lr.ph.preheader, label %.loopexit

.lr.ph.preheader:                                 ; preds = %.preheader
  br label %.lr.ph

.lr.ph:                                           ; preds = %.backedge, %.lr.ph.preheader
  %27 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %28
  %30 = load i8*, i8** %29, align 8
  %31 = icmp ne i8* %30, null
  br i1 %31, label %32, label %.loopexit.loopexit

; <label>:32:                                     ; preds = %.lr.ph
  %33 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %34
  %36 = load i8*, i8** %35, align 8
  %37 = call i32 @strcmp(i8* %36, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i64 0, i64 0)) #10
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %51

; <label>:39:                                     ; preds = %32
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 28), align 8
  %40 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
  %41 = call i32 @fileno(%struct._IO_FILE* %40) #9
  %42 = call %struct._IO_FILE* @fdopen(i32 %41, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.66, i64 0, i64 0)) #9, !track !201
  store %struct._IO_FILE* %42, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %43 = icmp eq %struct._IO_FILE* %42, null
  br i1 %43, label %44, label %49

; <label>:44:                                     ; preds = %39
  call void @perror(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.67, i64 0, i64 0))
  %45 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %46 = add nsw i32 %45, 1
  store i32 %46, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge

.backedge:                                        ; preds = %68, %58, %44
  call void @unroll_loop(i32 108)
  %47 = load i32, i32* %24, align 8
  %48 = icmp slt i32 %47, 128
  br i1 %48, label %.lr.ph, label %.loopexit.loopexit

; <label>:49:                                     ; preds = %39
  %50 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 24
  store i32 1, i32* %50, align 4
  br label %.loopexit

; <label>:51:                                     ; preds = %32
  store i32 0, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 28), align 8
  %52 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %53 = sext i32 %52 to i64
  %54 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %53
  %55 = load i8*, i8** %54, align 8
  %56 = call %struct._IO_FILE* @fopen64(i8* %55, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.66, i64 0, i64 0)), !track !202
  store %struct._IO_FILE* %56, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %57 = icmp eq %struct._IO_FILE* %56, null
  br i1 %57, label %58, label %61

; <label>:58:                                     ; preds = %51
  call void @perror(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.67, i64 0, i64 0))
  %59 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %60 = add nsw i32 %59, 1
  store i32 %60, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge

; <label>:61:                                     ; preds = %51
  %62 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %63 = call i32 @fseek(%struct._IO_FILE* %62, i64 0, i32 2)
  %64 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %65 = call i64 @ftell(%struct._IO_FILE* %64)
  %66 = icmp sle i64 %65, 0
  %67 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  br i1 %66, label %68, label %73

; <label>:68:                                     ; preds = %61
  %69 = call i32 @fclose(%struct._IO_FILE* %67)
  store %struct._IO_FILE* null, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %70 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.68, i64 0, i64 0))
  %71 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %72 = add nsw i32 %71, 1
  store i32 %72, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge

; <label>:73:                                     ; preds = %61
  %.lcssa = phi %struct._IO_FILE* [ %67, %61 ]
  call void @rewind(%struct._IO_FILE* %.lcssa)
  br label %.loopexit

.loopexit.loopexit:                               ; preds = %.backedge, %.lr.ph
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit.loopexit, %73, %49, %.preheader
  %74 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 23
  %75 = load i32, i32* %74, align 8
  %76 = icmp sge i32 %75, 128
  br i1 %76, label %UnifiedReturnBlock, label %77

; <label>:77:                                     ; preds = %.loopexit
  %78 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 23
  %79 = load i32, i32* %78, align 8
  %80 = sext i32 %79 to i64
  %81 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 21
  %82 = getelementptr inbounds [128 x i8*], [128 x i8*]* %81, i64 0, i64 %80
  %83 = load i8*, i8** %82, align 8
  %84 = icmp eq i8* %83, null
  %spec.select = select i1 %84, i32 1, i32 0
  br label %UnifiedReturnBlock

UnifiedReturnBlock:                               ; preds = %77, %.loopexit, %15
  %UnifiedRetVal = phi i32 [ %spec.select, %77 ], [ 1, %.loopexit ], [ 1, %15 ]
  ret i32 %UnifiedRetVal
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @next_dict_clone.36(i32) #0 {
  %2 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 22
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %2, align 8
  %4 = icmp ne %struct._IO_FILE* %3, null
  br i1 %4, label %5, label %15

; <label>:5:                                      ; preds = %1
  %6 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 28
  %7 = load i32, i32* %6, align 8
  %8 = icmp ne i32 %7, 0
  br i1 %8, label %13, label %9

; <label>:9:                                      ; preds = %5
  %10 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 22
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** %10, align 8
  %12 = call i32 @fclose(%struct._IO_FILE* %11)
  br label %13

; <label>:13:                                     ; preds = %9, %5
  %14 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 22
  store %struct._IO_FILE* null, %struct._IO_FILE** %14, align 8
  br label %15

; <label>:15:                                     ; preds = %13, %1
  %16 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 23
  store i32 %0, i32* %16, align 8
  %17 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 23
  %18 = load i32, i32* %17, align 8
  %19 = sext i32 %18 to i64
  %20 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 21
  %21 = getelementptr inbounds [128 x i8*], [128 x i8*]* %20, i64 0, i64 %19
  %22 = load i8*, i8** %21, align 8
  %23 = icmp eq i8* %22, null
  br i1 %23, label %UnifiedReturnBlock, label %.preheader

.preheader:                                       ; preds = %15
  call void @unroll_loop(i32 108)
  %24 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 23
  %25 = load i32, i32* %24, align 8
  %26 = icmp slt i32 %25, 128
  br i1 %26, label %.lr.ph.preheader, label %.loopexit

.lr.ph.preheader:                                 ; preds = %.preheader
  br label %.lr.ph

.lr.ph:                                           ; preds = %.backedge, %.lr.ph.preheader
  %27 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %28
  %30 = load i8*, i8** %29, align 8
  %31 = icmp ne i8* %30, null
  br i1 %31, label %32, label %.loopexit.loopexit

; <label>:32:                                     ; preds = %.lr.ph
  %33 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %34
  %36 = load i8*, i8** %35, align 8
  %37 = call i32 @strcmp(i8* %36, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i64 0, i64 0)) #10
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %51

; <label>:39:                                     ; preds = %32
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 28), align 8
  %40 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
  %41 = call i32 @fileno(%struct._IO_FILE* %40) #9
  %42 = call %struct._IO_FILE* @fdopen(i32 %41, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.66, i64 0, i64 0)) #9, !track !201
  store %struct._IO_FILE* %42, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %43 = icmp eq %struct._IO_FILE* %42, null
  br i1 %43, label %44, label %49

; <label>:44:                                     ; preds = %39
  call void @perror(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.67, i64 0, i64 0))
  %45 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %46 = add nsw i32 %45, 1
  store i32 %46, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge

.backedge:                                        ; preds = %68, %58, %44
  call void @unroll_loop(i32 108)
  %47 = load i32, i32* %24, align 8
  %48 = icmp slt i32 %47, 128
  br i1 %48, label %.lr.ph, label %.loopexit.loopexit

; <label>:49:                                     ; preds = %39
  %50 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 24
  store i32 1, i32* %50, align 4
  br label %.loopexit

; <label>:51:                                     ; preds = %32
  store i32 0, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 28), align 8
  %52 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %53 = sext i32 %52 to i64
  %54 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %53
  %55 = load i8*, i8** %54, align 8
  %56 = call %struct._IO_FILE* @fopen64(i8* %55, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.66, i64 0, i64 0)), !track !202
  store %struct._IO_FILE* %56, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %57 = icmp eq %struct._IO_FILE* %56, null
  br i1 %57, label %58, label %61

; <label>:58:                                     ; preds = %51
  call void @perror(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.67, i64 0, i64 0))
  %59 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %60 = add nsw i32 %59, 1
  store i32 %60, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge

; <label>:61:                                     ; preds = %51
  %62 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %63 = call i32 @fseek(%struct._IO_FILE* %62, i64 0, i32 2)
  %64 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %65 = call i64 @ftell(%struct._IO_FILE* %64)
  %66 = icmp sle i64 %65, 0
  %67 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  br i1 %66, label %68, label %73

; <label>:68:                                     ; preds = %61
  %69 = call i32 @fclose(%struct._IO_FILE* %67)
  store %struct._IO_FILE* null, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %70 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.68, i64 0, i64 0))
  %71 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %72 = add nsw i32 %71, 1
  store i32 %72, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge

; <label>:73:                                     ; preds = %61
  %.lcssa = phi %struct._IO_FILE* [ %67, %61 ]
  call void @rewind(%struct._IO_FILE* %.lcssa)
  br label %.loopexit

.loopexit.loopexit:                               ; preds = %.backedge, %.lr.ph
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit.loopexit, %73, %49, %.preheader
  %74 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 23
  %75 = load i32, i32* %74, align 8
  %76 = icmp sge i32 %75, 128
  br i1 %76, label %UnifiedReturnBlock, label %77

; <label>:77:                                     ; preds = %.loopexit
  %78 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 23
  %79 = load i32, i32* %78, align 8
  %80 = sext i32 %79 to i64
  %81 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 21
  %82 = getelementptr inbounds [128 x i8*], [128 x i8*]* %81, i64 0, i64 %80
  %83 = load i8*, i8** %82, align 8
  %84 = icmp eq i8* %83, null
  %spec.select = select i1 %84, i32 1, i32 0
  br label %UnifiedReturnBlock

UnifiedReturnBlock:                               ; preds = %77, %.loopexit, %15
  %UnifiedRetVal = phi i32 [ %spec.select, %77 ], [ 1, %.loopexit ], [ 1, %15 ]
  ret i32 %UnifiedRetVal
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @next_dict_clone.38(i32) #0 {
  %2 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 22
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %2, align 8
  %4 = icmp ne %struct._IO_FILE* %3, null
  br i1 %4, label %5, label %15

; <label>:5:                                      ; preds = %1
  %6 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 28
  %7 = load i32, i32* %6, align 8
  %8 = icmp ne i32 %7, 0
  br i1 %8, label %13, label %9

; <label>:9:                                      ; preds = %5
  %10 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 22
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** %10, align 8
  %12 = call i32 @fclose(%struct._IO_FILE* %11)
  br label %13

; <label>:13:                                     ; preds = %9, %5
  %14 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 22
  store %struct._IO_FILE* null, %struct._IO_FILE** %14, align 8
  br label %15

; <label>:15:                                     ; preds = %13, %1
  %16 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 23
  store i32 %0, i32* %16, align 8
  %17 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 23
  %18 = load i32, i32* %17, align 8
  %19 = sext i32 %18 to i64
  %20 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 21
  %21 = getelementptr inbounds [128 x i8*], [128 x i8*]* %20, i64 0, i64 %19
  %22 = load i8*, i8** %21, align 8
  %23 = icmp eq i8* %22, null
  br i1 %23, label %UnifiedReturnBlock, label %.preheader

.preheader:                                       ; preds = %15
  call void @unroll_loop(i32 108)
  %24 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 23
  %25 = load i32, i32* %24, align 8
  %26 = icmp slt i32 %25, 128
  br i1 %26, label %.lr.ph.preheader, label %.loopexit

.lr.ph.preheader:                                 ; preds = %.preheader
  br label %.lr.ph

.lr.ph:                                           ; preds = %.backedge, %.lr.ph.preheader
  %27 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %28
  %30 = load i8*, i8** %29, align 8
  %31 = icmp ne i8* %30, null
  br i1 %31, label %32, label %.loopexit.loopexit

; <label>:32:                                     ; preds = %.lr.ph
  %33 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %34
  %36 = load i8*, i8** %35, align 8
  %37 = call i32 @strcmp(i8* %36, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i64 0, i64 0)) #10
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %51

; <label>:39:                                     ; preds = %32
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 28), align 8
  %40 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
  %41 = call i32 @fileno(%struct._IO_FILE* %40) #9
  %42 = call %struct._IO_FILE* @fdopen(i32 %41, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.66, i64 0, i64 0)) #9, !track !201
  store %struct._IO_FILE* %42, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %43 = icmp eq %struct._IO_FILE* %42, null
  br i1 %43, label %44, label %49

; <label>:44:                                     ; preds = %39
  call void @perror(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.67, i64 0, i64 0))
  %45 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %46 = add nsw i32 %45, 1
  store i32 %46, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge

.backedge:                                        ; preds = %68, %58, %44
  call void @unroll_loop(i32 108)
  %47 = load i32, i32* %24, align 8
  %48 = icmp slt i32 %47, 128
  br i1 %48, label %.lr.ph, label %.loopexit.loopexit

; <label>:49:                                     ; preds = %39
  %50 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 24
  store i32 1, i32* %50, align 4
  br label %.loopexit

; <label>:51:                                     ; preds = %32
  store i32 0, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 28), align 8
  %52 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %53 = sext i32 %52 to i64
  %54 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %53
  %55 = load i8*, i8** %54, align 8
  %56 = call %struct._IO_FILE* @fopen64(i8* %55, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.66, i64 0, i64 0)), !track !202
  store %struct._IO_FILE* %56, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %57 = icmp eq %struct._IO_FILE* %56, null
  br i1 %57, label %58, label %61

; <label>:58:                                     ; preds = %51
  call void @perror(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.67, i64 0, i64 0))
  %59 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %60 = add nsw i32 %59, 1
  store i32 %60, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge

; <label>:61:                                     ; preds = %51
  %62 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %63 = call i32 @fseek(%struct._IO_FILE* %62, i64 0, i32 2)
  %64 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %65 = call i64 @ftell(%struct._IO_FILE* %64)
  %66 = icmp sle i64 %65, 0
  %67 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  br i1 %66, label %68, label %73

; <label>:68:                                     ; preds = %61
  %69 = call i32 @fclose(%struct._IO_FILE* %67)
  store %struct._IO_FILE* null, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %70 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.68, i64 0, i64 0))
  %71 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %72 = add nsw i32 %71, 1
  store i32 %72, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge

; <label>:73:                                     ; preds = %61
  %.lcssa = phi %struct._IO_FILE* [ %67, %61 ]
  call void @rewind(%struct._IO_FILE* %.lcssa)
  br label %.loopexit

.loopexit.loopexit:                               ; preds = %.backedge, %.lr.ph
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit.loopexit, %73, %49, %.preheader
  %74 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 23
  %75 = load i32, i32* %74, align 8
  %76 = icmp sge i32 %75, 128
  br i1 %76, label %UnifiedReturnBlock, label %77

; <label>:77:                                     ; preds = %.loopexit
  %78 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 23
  %79 = load i32, i32* %78, align 8
  %80 = sext i32 %79 to i64
  %81 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 21
  %82 = getelementptr inbounds [128 x i8*], [128 x i8*]* %81, i64 0, i64 %80
  %83 = load i8*, i8** %82, align 8
  %84 = icmp eq i8* %83, null
  %spec.select = select i1 %84, i32 1, i32 0
  br label %UnifiedReturnBlock

UnifiedReturnBlock:                               ; preds = %77, %.loopexit, %15
  %UnifiedRetVal = phi i32 [ %spec.select, %77 ], [ 1, %.loopexit ], [ 1, %15 ]
  ret i32 %UnifiedRetVal
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @next_dict_clone.40(i32) #0 {
  %2 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 22
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %2, align 8
  %4 = icmp ne %struct._IO_FILE* %3, null
  br i1 %4, label %5, label %15

; <label>:5:                                      ; preds = %1
  %6 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 28
  %7 = load i32, i32* %6, align 8
  %8 = icmp ne i32 %7, 0
  br i1 %8, label %13, label %9

; <label>:9:                                      ; preds = %5
  %10 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 22
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** %10, align 8
  %12 = call i32 @fclose(%struct._IO_FILE* %11)
  br label %13

; <label>:13:                                     ; preds = %9, %5
  %14 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 22
  store %struct._IO_FILE* null, %struct._IO_FILE** %14, align 8
  br label %15

; <label>:15:                                     ; preds = %13, %1
  %16 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 23
  store i32 %0, i32* %16, align 8
  %17 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 23
  %18 = load i32, i32* %17, align 8
  %19 = sext i32 %18 to i64
  %20 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 21
  %21 = getelementptr inbounds [128 x i8*], [128 x i8*]* %20, i64 0, i64 %19
  %22 = load i8*, i8** %21, align 8
  %23 = icmp eq i8* %22, null
  br i1 %23, label %UnifiedReturnBlock, label %.preheader

.preheader:                                       ; preds = %15
  call void @unroll_loop(i32 108)
  %24 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 23
  %25 = load i32, i32* %24, align 8
  %26 = icmp slt i32 %25, 128
  br i1 %26, label %.lr.ph.preheader, label %.loopexit

.lr.ph.preheader:                                 ; preds = %.preheader
  br label %.lr.ph

.lr.ph:                                           ; preds = %.backedge, %.lr.ph.preheader
  %27 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %28
  %30 = load i8*, i8** %29, align 8
  %31 = icmp ne i8* %30, null
  br i1 %31, label %32, label %.loopexit.loopexit

; <label>:32:                                     ; preds = %.lr.ph
  %33 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %34
  %36 = load i8*, i8** %35, align 8
  %37 = call i32 @strcmp(i8* %36, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i64 0, i64 0)) #10
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %51

; <label>:39:                                     ; preds = %32
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 28), align 8
  %40 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
  %41 = call i32 @fileno(%struct._IO_FILE* %40) #9
  %42 = call %struct._IO_FILE* @fdopen(i32 %41, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.66, i64 0, i64 0)) #9, !track !201
  store %struct._IO_FILE* %42, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %43 = icmp eq %struct._IO_FILE* %42, null
  br i1 %43, label %44, label %49

; <label>:44:                                     ; preds = %39
  call void @perror(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.67, i64 0, i64 0))
  %45 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %46 = add nsw i32 %45, 1
  store i32 %46, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge

.backedge:                                        ; preds = %68, %58, %44
  call void @unroll_loop(i32 108)
  %47 = load i32, i32* %24, align 8
  %48 = icmp slt i32 %47, 128
  br i1 %48, label %.lr.ph, label %.loopexit.loopexit

; <label>:49:                                     ; preds = %39
  %50 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 24
  store i32 1, i32* %50, align 4
  br label %.loopexit

; <label>:51:                                     ; preds = %32
  store i32 0, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 28), align 8
  %52 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %53 = sext i32 %52 to i64
  %54 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %53
  %55 = load i8*, i8** %54, align 8
  %56 = call %struct._IO_FILE* @fopen64(i8* %55, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.66, i64 0, i64 0)), !track !202
  store %struct._IO_FILE* %56, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %57 = icmp eq %struct._IO_FILE* %56, null
  br i1 %57, label %58, label %61

; <label>:58:                                     ; preds = %51
  call void @perror(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.67, i64 0, i64 0))
  %59 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %60 = add nsw i32 %59, 1
  store i32 %60, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge

; <label>:61:                                     ; preds = %51
  %62 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %63 = call i32 @fseek(%struct._IO_FILE* %62, i64 0, i32 2)
  %64 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %65 = call i64 @ftell(%struct._IO_FILE* %64)
  %66 = icmp sle i64 %65, 0
  %67 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  br i1 %66, label %68, label %73

; <label>:68:                                     ; preds = %61
  %69 = call i32 @fclose(%struct._IO_FILE* %67)
  store %struct._IO_FILE* null, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %70 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.68, i64 0, i64 0))
  %71 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %72 = add nsw i32 %71, 1
  store i32 %72, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge

; <label>:73:                                     ; preds = %61
  %.lcssa = phi %struct._IO_FILE* [ %67, %61 ]
  call void @rewind(%struct._IO_FILE* %.lcssa)
  br label %.loopexit

.loopexit.loopexit:                               ; preds = %.backedge, %.lr.ph
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit.loopexit, %73, %49, %.preheader
  %74 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 23
  %75 = load i32, i32* %74, align 8
  %76 = icmp sge i32 %75, 128
  br i1 %76, label %UnifiedReturnBlock, label %77

; <label>:77:                                     ; preds = %.loopexit
  %78 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 23
  %79 = load i32, i32* %78, align 8
  %80 = sext i32 %79 to i64
  %81 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 21
  %82 = getelementptr inbounds [128 x i8*], [128 x i8*]* %81, i64 0, i64 %80
  %83 = load i8*, i8** %82, align 8
  %84 = icmp eq i8* %83, null
  %spec.select = select i1 %84, i32 1, i32 0
  br label %UnifiedReturnBlock

UnifiedReturnBlock:                               ; preds = %77, %.loopexit, %15
  %UnifiedRetVal = phi i32 [ %spec.select, %77 ], [ 1, %.loopexit ], [ 1, %15 ]
  ret i32 %UnifiedRetVal
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @next_dict_clone.42(i32) #0 {
  %2 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 22
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %2, align 8
  %4 = icmp ne %struct._IO_FILE* %3, null
  br i1 %4, label %5, label %15

; <label>:5:                                      ; preds = %1
  %6 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 28
  %7 = load i32, i32* %6, align 8
  %8 = icmp ne i32 %7, 0
  br i1 %8, label %13, label %9

; <label>:9:                                      ; preds = %5
  %10 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 22
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** %10, align 8
  %12 = call i32 @fclose(%struct._IO_FILE* %11)
  br label %13

; <label>:13:                                     ; preds = %9, %5
  %14 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 22
  store %struct._IO_FILE* null, %struct._IO_FILE** %14, align 8
  br label %15

; <label>:15:                                     ; preds = %13, %1
  %16 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 23
  store i32 %0, i32* %16, align 8
  %17 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 23
  %18 = load i32, i32* %17, align 8
  %19 = sext i32 %18 to i64
  %20 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 21
  %21 = getelementptr inbounds [128 x i8*], [128 x i8*]* %20, i64 0, i64 %19
  %22 = load i8*, i8** %21, align 8
  %23 = icmp eq i8* %22, null
  br i1 %23, label %UnifiedReturnBlock, label %.preheader

.preheader:                                       ; preds = %15
  call void @unroll_loop(i32 108)
  %24 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 23
  %25 = load i32, i32* %24, align 8
  %26 = icmp slt i32 %25, 128
  br i1 %26, label %.lr.ph.preheader, label %.loopexit

.lr.ph.preheader:                                 ; preds = %.preheader
  br label %.lr.ph

.lr.ph:                                           ; preds = %.backedge, %.lr.ph.preheader
  %27 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %28
  %30 = load i8*, i8** %29, align 8
  %31 = icmp ne i8* %30, null
  br i1 %31, label %32, label %.loopexit.loopexit

; <label>:32:                                     ; preds = %.lr.ph
  %33 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %34
  %36 = load i8*, i8** %35, align 8
  %37 = call i32 @strcmp(i8* %36, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i64 0, i64 0)) #10
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %51

; <label>:39:                                     ; preds = %32
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 28), align 8
  %40 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
  %41 = call i32 @fileno(%struct._IO_FILE* %40) #9
  %42 = call %struct._IO_FILE* @fdopen(i32 %41, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.66, i64 0, i64 0)) #9, !track !201
  store %struct._IO_FILE* %42, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %43 = icmp eq %struct._IO_FILE* %42, null
  br i1 %43, label %44, label %49

; <label>:44:                                     ; preds = %39
  call void @perror(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.67, i64 0, i64 0))
  %45 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %46 = add nsw i32 %45, 1
  store i32 %46, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge

.backedge:                                        ; preds = %68, %58, %44
  call void @unroll_loop(i32 108)
  %47 = load i32, i32* %24, align 8
  %48 = icmp slt i32 %47, 128
  br i1 %48, label %.lr.ph, label %.loopexit.loopexit

; <label>:49:                                     ; preds = %39
  %50 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 24
  store i32 1, i32* %50, align 4
  br label %.loopexit

; <label>:51:                                     ; preds = %32
  store i32 0, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 28), align 8
  %52 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %53 = sext i32 %52 to i64
  %54 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %53
  %55 = load i8*, i8** %54, align 8
  %56 = call %struct._IO_FILE* @fopen64(i8* %55, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.66, i64 0, i64 0)), !track !202
  store %struct._IO_FILE* %56, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %57 = icmp eq %struct._IO_FILE* %56, null
  br i1 %57, label %58, label %61

; <label>:58:                                     ; preds = %51
  call void @perror(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.67, i64 0, i64 0))
  %59 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %60 = add nsw i32 %59, 1
  store i32 %60, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge

; <label>:61:                                     ; preds = %51
  %62 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %63 = call i32 @fseek(%struct._IO_FILE* %62, i64 0, i32 2)
  %64 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %65 = call i64 @ftell(%struct._IO_FILE* %64)
  %66 = icmp sle i64 %65, 0
  %67 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  br i1 %66, label %68, label %73

; <label>:68:                                     ; preds = %61
  %69 = call i32 @fclose(%struct._IO_FILE* %67)
  store %struct._IO_FILE* null, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %70 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.68, i64 0, i64 0))
  %71 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %72 = add nsw i32 %71, 1
  store i32 %72, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge

; <label>:73:                                     ; preds = %61
  %.lcssa = phi %struct._IO_FILE* [ %67, %61 ]
  call void @rewind(%struct._IO_FILE* %.lcssa)
  br label %.loopexit

.loopexit.loopexit:                               ; preds = %.backedge, %.lr.ph
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit.loopexit, %73, %49, %.preheader
  %74 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 23
  %75 = load i32, i32* %74, align 8
  %76 = icmp sge i32 %75, 128
  br i1 %76, label %UnifiedReturnBlock, label %77

; <label>:77:                                     ; preds = %.loopexit
  %78 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 23
  %79 = load i32, i32* %78, align 8
  %80 = sext i32 %79 to i64
  %81 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 21
  %82 = getelementptr inbounds [128 x i8*], [128 x i8*]* %81, i64 0, i64 %80
  %83 = load i8*, i8** %82, align 8
  %84 = icmp eq i8* %83, null
  %spec.select = select i1 %84, i32 1, i32 0
  br label %UnifiedReturnBlock

UnifiedReturnBlock:                               ; preds = %77, %.loopexit, %15
  %UnifiedRetVal = phi i32 [ %spec.select, %77 ], [ 1, %.loopexit ], [ 1, %15 ]
  ret i32 %UnifiedRetVal
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @next_dict_clone.44(i32) #0 {
  %2 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 22
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %2, align 8
  %4 = icmp ne %struct._IO_FILE* %3, null
  br i1 %4, label %5, label %15

; <label>:5:                                      ; preds = %1
  %6 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 28
  %7 = load i32, i32* %6, align 8
  %8 = icmp ne i32 %7, 0
  br i1 %8, label %13, label %9

; <label>:9:                                      ; preds = %5
  %10 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 22
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** %10, align 8
  %12 = call i32 @fclose(%struct._IO_FILE* %11)
  br label %13

; <label>:13:                                     ; preds = %9, %5
  %14 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 22
  store %struct._IO_FILE* null, %struct._IO_FILE** %14, align 8
  br label %15

; <label>:15:                                     ; preds = %13, %1
  %16 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 23
  store i32 %0, i32* %16, align 8
  %17 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 23
  %18 = load i32, i32* %17, align 8
  %19 = sext i32 %18 to i64
  %20 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 21
  %21 = getelementptr inbounds [128 x i8*], [128 x i8*]* %20, i64 0, i64 %19
  %22 = load i8*, i8** %21, align 8
  %23 = icmp eq i8* %22, null
  br i1 %23, label %UnifiedReturnBlock, label %.preheader

.preheader:                                       ; preds = %15
  call void @unroll_loop(i32 108)
  %24 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 23
  %25 = load i32, i32* %24, align 8
  %26 = icmp slt i32 %25, 128
  br i1 %26, label %.lr.ph.preheader, label %.loopexit

.lr.ph.preheader:                                 ; preds = %.preheader
  br label %.lr.ph

.lr.ph:                                           ; preds = %.backedge, %.lr.ph.preheader
  %27 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %28
  %30 = load i8*, i8** %29, align 8
  %31 = icmp ne i8* %30, null
  br i1 %31, label %32, label %.loopexit.loopexit

; <label>:32:                                     ; preds = %.lr.ph
  %33 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %34
  %36 = load i8*, i8** %35, align 8
  %37 = call i32 @strcmp(i8* %36, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i64 0, i64 0)) #10
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %51

; <label>:39:                                     ; preds = %32
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 28), align 8
  %40 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
  %41 = call i32 @fileno(%struct._IO_FILE* %40) #9
  %42 = call %struct._IO_FILE* @fdopen(i32 %41, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.66, i64 0, i64 0)) #9, !track !201
  store %struct._IO_FILE* %42, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %43 = icmp eq %struct._IO_FILE* %42, null
  br i1 %43, label %44, label %49

; <label>:44:                                     ; preds = %39
  call void @perror(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.67, i64 0, i64 0))
  %45 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %46 = add nsw i32 %45, 1
  store i32 %46, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge

.backedge:                                        ; preds = %68, %58, %44
  call void @unroll_loop(i32 108)
  %47 = load i32, i32* %24, align 8
  %48 = icmp slt i32 %47, 128
  br i1 %48, label %.lr.ph, label %.loopexit.loopexit

; <label>:49:                                     ; preds = %39
  %50 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 24
  store i32 1, i32* %50, align 4
  br label %.loopexit

; <label>:51:                                     ; preds = %32
  store i32 0, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 28), align 8
  %52 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %53 = sext i32 %52 to i64
  %54 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %53
  %55 = load i8*, i8** %54, align 8
  %56 = call %struct._IO_FILE* @fopen64(i8* %55, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.66, i64 0, i64 0)), !track !202
  store %struct._IO_FILE* %56, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %57 = icmp eq %struct._IO_FILE* %56, null
  br i1 %57, label %58, label %61

; <label>:58:                                     ; preds = %51
  call void @perror(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.67, i64 0, i64 0))
  %59 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %60 = add nsw i32 %59, 1
  store i32 %60, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge

; <label>:61:                                     ; preds = %51
  %62 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %63 = call i32 @fseek(%struct._IO_FILE* %62, i64 0, i32 2)
  %64 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %65 = call i64 @ftell(%struct._IO_FILE* %64)
  %66 = icmp sle i64 %65, 0
  %67 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  br i1 %66, label %68, label %73

; <label>:68:                                     ; preds = %61
  %69 = call i32 @fclose(%struct._IO_FILE* %67)
  store %struct._IO_FILE* null, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %70 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.68, i64 0, i64 0))
  %71 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %72 = add nsw i32 %71, 1
  store i32 %72, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge

; <label>:73:                                     ; preds = %61
  %.lcssa = phi %struct._IO_FILE* [ %67, %61 ]
  call void @rewind(%struct._IO_FILE* %.lcssa)
  br label %.loopexit

.loopexit.loopexit:                               ; preds = %.backedge, %.lr.ph
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit.loopexit, %73, %49, %.preheader
  %74 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 23
  %75 = load i32, i32* %74, align 8
  %76 = icmp sge i32 %75, 128
  br i1 %76, label %UnifiedReturnBlock, label %77

; <label>:77:                                     ; preds = %.loopexit
  %78 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 23
  %79 = load i32, i32* %78, align 8
  %80 = sext i32 %79 to i64
  %81 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 21
  %82 = getelementptr inbounds [128 x i8*], [128 x i8*]* %81, i64 0, i64 %80
  %83 = load i8*, i8** %82, align 8
  %84 = icmp eq i8* %83, null
  %spec.select = select i1 %84, i32 1, i32 0
  br label %UnifiedReturnBlock

UnifiedReturnBlock:                               ; preds = %77, %.loopexit, %15
  %UnifiedRetVal = phi i32 [ %spec.select, %77 ], [ 1, %.loopexit ], [ 1, %15 ]
  ret i32 %UnifiedRetVal
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @next_dict_clone.46(i32) #0 {
  %2 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 22
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %2, align 8
  %4 = icmp ne %struct._IO_FILE* %3, null
  br i1 %4, label %5, label %15

; <label>:5:                                      ; preds = %1
  %6 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 28
  %7 = load i32, i32* %6, align 8
  %8 = icmp ne i32 %7, 0
  br i1 %8, label %13, label %9

; <label>:9:                                      ; preds = %5
  %10 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 22
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** %10, align 8
  %12 = call i32 @fclose(%struct._IO_FILE* %11)
  br label %13

; <label>:13:                                     ; preds = %9, %5
  %14 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 22
  store %struct._IO_FILE* null, %struct._IO_FILE** %14, align 8
  br label %15

; <label>:15:                                     ; preds = %13, %1
  %16 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 23
  store i32 %0, i32* %16, align 8
  %17 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 23
  %18 = load i32, i32* %17, align 8
  %19 = sext i32 %18 to i64
  %20 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 21
  %21 = getelementptr inbounds [128 x i8*], [128 x i8*]* %20, i64 0, i64 %19
  %22 = load i8*, i8** %21, align 8
  %23 = icmp eq i8* %22, null
  br i1 %23, label %UnifiedReturnBlock, label %.preheader

.preheader:                                       ; preds = %15
  call void @unroll_loop(i32 108)
  %24 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 23
  %25 = load i32, i32* %24, align 8
  %26 = icmp slt i32 %25, 128
  br i1 %26, label %.lr.ph.preheader, label %.loopexit

.lr.ph.preheader:                                 ; preds = %.preheader
  br label %.lr.ph

.lr.ph:                                           ; preds = %.backedge, %.lr.ph.preheader
  %27 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %28
  %30 = load i8*, i8** %29, align 8
  %31 = icmp ne i8* %30, null
  br i1 %31, label %32, label %.loopexit.loopexit

; <label>:32:                                     ; preds = %.lr.ph
  %33 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %34
  %36 = load i8*, i8** %35, align 8
  %37 = call i32 @strcmp(i8* %36, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i64 0, i64 0)) #10
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %51

; <label>:39:                                     ; preds = %32
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 28), align 8
  %40 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
  %41 = call i32 @fileno(%struct._IO_FILE* %40) #9
  %42 = call %struct._IO_FILE* @fdopen(i32 %41, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.66, i64 0, i64 0)) #9, !track !201
  store %struct._IO_FILE* %42, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %43 = icmp eq %struct._IO_FILE* %42, null
  br i1 %43, label %44, label %49

; <label>:44:                                     ; preds = %39
  call void @perror(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.67, i64 0, i64 0))
  %45 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %46 = add nsw i32 %45, 1
  store i32 %46, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge

.backedge:                                        ; preds = %68, %58, %44
  call void @unroll_loop(i32 108)
  %47 = load i32, i32* %24, align 8
  %48 = icmp slt i32 %47, 128
  br i1 %48, label %.lr.ph, label %.loopexit.loopexit

; <label>:49:                                     ; preds = %39
  %50 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 24
  store i32 1, i32* %50, align 4
  br label %.loopexit

; <label>:51:                                     ; preds = %32
  store i32 0, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 28), align 8
  %52 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %53 = sext i32 %52 to i64
  %54 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %53
  %55 = load i8*, i8** %54, align 8
  %56 = call %struct._IO_FILE* @fopen64(i8* %55, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.66, i64 0, i64 0)), !track !202
  store %struct._IO_FILE* %56, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %57 = icmp eq %struct._IO_FILE* %56, null
  br i1 %57, label %58, label %61

; <label>:58:                                     ; preds = %51
  call void @perror(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.67, i64 0, i64 0))
  %59 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %60 = add nsw i32 %59, 1
  store i32 %60, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge

; <label>:61:                                     ; preds = %51
  %62 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %63 = call i32 @fseek(%struct._IO_FILE* %62, i64 0, i32 2)
  %64 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %65 = call i64 @ftell(%struct._IO_FILE* %64)
  %66 = icmp sle i64 %65, 0
  %67 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  br i1 %66, label %68, label %73

; <label>:68:                                     ; preds = %61
  %69 = call i32 @fclose(%struct._IO_FILE* %67)
  store %struct._IO_FILE* null, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %70 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.68, i64 0, i64 0))
  %71 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %72 = add nsw i32 %71, 1
  store i32 %72, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge

; <label>:73:                                     ; preds = %61
  %.lcssa = phi %struct._IO_FILE* [ %67, %61 ]
  call void @rewind(%struct._IO_FILE* %.lcssa)
  br label %.loopexit

.loopexit.loopexit:                               ; preds = %.backedge, %.lr.ph
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit.loopexit, %73, %49, %.preheader
  %74 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 23
  %75 = load i32, i32* %74, align 8
  %76 = icmp sge i32 %75, 128
  br i1 %76, label %UnifiedReturnBlock, label %77

; <label>:77:                                     ; preds = %.loopexit
  %78 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 23
  %79 = load i32, i32* %78, align 8
  %80 = sext i32 %79 to i64
  %81 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 21
  %82 = getelementptr inbounds [128 x i8*], [128 x i8*]* %81, i64 0, i64 %80
  %83 = load i8*, i8** %82, align 8
  %84 = icmp eq i8* %83, null
  %spec.select = select i1 %84, i32 1, i32 0
  br label %UnifiedReturnBlock

UnifiedReturnBlock:                               ; preds = %77, %.loopexit, %15
  %UnifiedRetVal = phi i32 [ %spec.select, %77 ], [ 1, %.loopexit ], [ 1, %15 ]
  ret i32 %UnifiedRetVal
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @next_dict_clone.48(i32) #0 {
  %2 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 22
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %2, align 8
  %4 = icmp ne %struct._IO_FILE* %3, null
  br i1 %4, label %5, label %15

; <label>:5:                                      ; preds = %1
  %6 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 28
  %7 = load i32, i32* %6, align 8
  %8 = icmp ne i32 %7, 0
  br i1 %8, label %13, label %9

; <label>:9:                                      ; preds = %5
  %10 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 22
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** %10, align 8
  %12 = call i32 @fclose(%struct._IO_FILE* %11)
  br label %13

; <label>:13:                                     ; preds = %9, %5
  %14 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 22
  store %struct._IO_FILE* null, %struct._IO_FILE** %14, align 8
  br label %15

; <label>:15:                                     ; preds = %13, %1
  %16 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 23
  store i32 %0, i32* %16, align 8
  %17 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 23
  %18 = load i32, i32* %17, align 8
  %19 = sext i32 %18 to i64
  %20 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 21
  %21 = getelementptr inbounds [128 x i8*], [128 x i8*]* %20, i64 0, i64 %19
  %22 = load i8*, i8** %21, align 8
  %23 = icmp eq i8* %22, null
  br i1 %23, label %UnifiedReturnBlock, label %.preheader

.preheader:                                       ; preds = %15
  call void @unroll_loop(i32 108)
  %24 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 23
  %25 = load i32, i32* %24, align 8
  %26 = icmp slt i32 %25, 128
  br i1 %26, label %.lr.ph.preheader, label %.loopexit

.lr.ph.preheader:                                 ; preds = %.preheader
  br label %.lr.ph

.lr.ph:                                           ; preds = %.backedge, %.lr.ph.preheader
  %27 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %28
  %30 = load i8*, i8** %29, align 8
  %31 = icmp ne i8* %30, null
  br i1 %31, label %32, label %.loopexit.loopexit

; <label>:32:                                     ; preds = %.lr.ph
  %33 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %34
  %36 = load i8*, i8** %35, align 8
  %37 = call i32 @strcmp(i8* %36, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i64 0, i64 0)) #10
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %51

; <label>:39:                                     ; preds = %32
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 28), align 8
  %40 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
  %41 = call i32 @fileno(%struct._IO_FILE* %40) #9
  %42 = call %struct._IO_FILE* @fdopen(i32 %41, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.66, i64 0, i64 0)) #9, !track !201
  store %struct._IO_FILE* %42, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %43 = icmp eq %struct._IO_FILE* %42, null
  br i1 %43, label %44, label %49

; <label>:44:                                     ; preds = %39
  call void @perror(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.67, i64 0, i64 0))
  %45 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %46 = add nsw i32 %45, 1
  store i32 %46, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge

.backedge:                                        ; preds = %68, %58, %44
  call void @unroll_loop(i32 108)
  %47 = load i32, i32* %24, align 8
  %48 = icmp slt i32 %47, 128
  br i1 %48, label %.lr.ph, label %.loopexit.loopexit

; <label>:49:                                     ; preds = %39
  %50 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 24
  store i32 1, i32* %50, align 4
  br label %.loopexit

; <label>:51:                                     ; preds = %32
  store i32 0, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 28), align 8
  %52 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %53 = sext i32 %52 to i64
  %54 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %53
  %55 = load i8*, i8** %54, align 8
  %56 = call %struct._IO_FILE* @fopen64(i8* %55, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.66, i64 0, i64 0)), !track !202
  store %struct._IO_FILE* %56, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %57 = icmp eq %struct._IO_FILE* %56, null
  br i1 %57, label %58, label %61

; <label>:58:                                     ; preds = %51
  call void @perror(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.67, i64 0, i64 0))
  %59 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %60 = add nsw i32 %59, 1
  store i32 %60, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge

; <label>:61:                                     ; preds = %51
  %62 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %63 = call i32 @fseek(%struct._IO_FILE* %62, i64 0, i32 2)
  %64 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %65 = call i64 @ftell(%struct._IO_FILE* %64)
  %66 = icmp sle i64 %65, 0
  %67 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  br i1 %66, label %68, label %73

; <label>:68:                                     ; preds = %61
  %69 = call i32 @fclose(%struct._IO_FILE* %67)
  store %struct._IO_FILE* null, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %70 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.68, i64 0, i64 0))
  %71 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %72 = add nsw i32 %71, 1
  store i32 %72, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge

; <label>:73:                                     ; preds = %61
  %.lcssa = phi %struct._IO_FILE* [ %67, %61 ]
  call void @rewind(%struct._IO_FILE* %.lcssa)
  br label %.loopexit

.loopexit.loopexit:                               ; preds = %.backedge, %.lr.ph
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit.loopexit, %73, %49, %.preheader
  %74 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 23
  %75 = load i32, i32* %74, align 8
  %76 = icmp sge i32 %75, 128
  br i1 %76, label %UnifiedReturnBlock, label %77

; <label>:77:                                     ; preds = %.loopexit
  %78 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 23
  %79 = load i32, i32* %78, align 8
  %80 = sext i32 %79 to i64
  %81 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 21
  %82 = getelementptr inbounds [128 x i8*], [128 x i8*]* %81, i64 0, i64 %80
  %83 = load i8*, i8** %82, align 8
  %84 = icmp eq i8* %83, null
  %spec.select = select i1 %84, i32 1, i32 0
  br label %UnifiedReturnBlock

UnifiedReturnBlock:                               ; preds = %77, %.loopexit, %15
  %UnifiedRetVal = phi i32 [ %spec.select, %77 ], [ 1, %.loopexit ], [ 1, %15 ]
  ret i32 %UnifiedRetVal
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @next_dict_clone.50(i32) #0 {
  %2 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 22
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %2, align 8
  %4 = icmp ne %struct._IO_FILE* %3, null
  br i1 %4, label %5, label %15

; <label>:5:                                      ; preds = %1
  %6 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 28
  %7 = load i32, i32* %6, align 8
  %8 = icmp ne i32 %7, 0
  br i1 %8, label %13, label %9

; <label>:9:                                      ; preds = %5
  %10 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 22
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** %10, align 8
  %12 = call i32 @fclose(%struct._IO_FILE* %11)
  br label %13

; <label>:13:                                     ; preds = %9, %5
  %14 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 22
  store %struct._IO_FILE* null, %struct._IO_FILE** %14, align 8
  br label %15

; <label>:15:                                     ; preds = %13, %1
  %16 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 23
  store i32 0, i32* %16, align 8
  %17 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 23
  %18 = load i32, i32* %17, align 8
  %19 = sext i32 0 to i64
  %20 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 21
  %21 = getelementptr inbounds [128 x i8*], [128 x i8*]* %20, i64 0, i64 0
  %22 = load i8*, i8** %21, align 8
  %23 = icmp eq i8* %22, null
  br i1 %23, label %UnifiedReturnBlock, label %.preheader

.preheader:                                       ; preds = %15
  call void @unroll_loop(i32 108)
  %24 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 23
  %25 = load i32, i32* %24, align 8
  %26 = icmp slt i32 0, 128
  br i1 true, label %.lr.ph.preheader, label %.loopexit

.lr.ph.preheader:                                 ; preds = %.preheader
  br label %.lr.ph

.lr.ph:                                           ; preds = %.backedge, %.lr.ph.preheader
  %27 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %28
  %30 = load i8*, i8** %29, align 8
  %31 = icmp ne i8* %30, null
  br i1 %31, label %32, label %.loopexit.loopexit

; <label>:32:                                     ; preds = %.lr.ph
  %33 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %34
  %36 = load i8*, i8** %35, align 8
  %37 = call i32 @strcmp(i8* %36, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i64 0, i64 0)) #10
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %51

; <label>:39:                                     ; preds = %32
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 28), align 8
  %40 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
  %41 = call i32 @fileno(%struct._IO_FILE* %40) #9
  %42 = call %struct._IO_FILE* @fdopen(i32 %41, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.66, i64 0, i64 0)) #9, !track !201
  store %struct._IO_FILE* %42, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %43 = icmp eq %struct._IO_FILE* %42, null
  br i1 %43, label %44, label %49

; <label>:44:                                     ; preds = %39
  call void @perror(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.67, i64 0, i64 0))
  %45 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %46 = add nsw i32 %45, 1
  store i32 %46, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge

.backedge:                                        ; preds = %68, %58, %44
  call void @unroll_loop(i32 108)
  %47 = load i32, i32* %24, align 8
  %48 = icmp slt i32 %47, 128
  br i1 %48, label %.lr.ph, label %.loopexit.loopexit

; <label>:49:                                     ; preds = %39
  %50 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 24
  store i32 1, i32* %50, align 4
  br label %.loopexit

; <label>:51:                                     ; preds = %32
  store i32 0, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 28), align 8
  %52 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %53 = sext i32 %52 to i64
  %54 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 %53
  %55 = load i8*, i8** %54, align 8
  %56 = call %struct._IO_FILE* @fopen64(i8* %55, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.66, i64 0, i64 0)), !track !202
  store %struct._IO_FILE* %56, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %57 = icmp eq %struct._IO_FILE* %56, null
  br i1 %57, label %58, label %61

; <label>:58:                                     ; preds = %51
  call void @perror(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.67, i64 0, i64 0))
  %59 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %60 = add nsw i32 %59, 1
  store i32 %60, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge

; <label>:61:                                     ; preds = %51
  %62 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %63 = call i32 @fseek(%struct._IO_FILE* %62, i64 0, i32 2)
  %64 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %65 = call i64 @ftell(%struct._IO_FILE* %64)
  %66 = icmp sle i64 %65, 0
  %67 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  br i1 %66, label %68, label %73

; <label>:68:                                     ; preds = %61
  %69 = call i32 @fclose(%struct._IO_FILE* %67)
  store %struct._IO_FILE* null, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %70 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.68, i64 0, i64 0))
  %71 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %72 = add nsw i32 %71, 1
  store i32 %72, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge

; <label>:73:                                     ; preds = %61
  %.lcssa = phi %struct._IO_FILE* [ %67, %61 ]
  call void @rewind(%struct._IO_FILE* %.lcssa)
  br label %.loopexit

.loopexit.loopexit:                               ; preds = %.backedge, %.lr.ph
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit.loopexit, %73, %49, %.preheader
  %74 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 23
  %75 = load i32, i32* %74, align 8
  %76 = icmp sge i32 %75, 128
  br i1 %76, label %UnifiedReturnBlock, label %77

; <label>:77:                                     ; preds = %.loopexit
  %78 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 23
  %79 = load i32, i32* %78, align 8
  %80 = sext i32 %79 to i64
  %81 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 21
  %82 = getelementptr inbounds [128 x i8*], [128 x i8*]* %81, i64 0, i64 %80
  %83 = load i8*, i8** %82, align 8
  %84 = icmp eq i8* %83, null
  %spec.select = select i1 %84, i32 1, i32 0
  br label %UnifiedReturnBlock

UnifiedReturnBlock:                               ; preds = %77, %.loopexit, %15
  %UnifiedRetVal = phi i32 [ %spec.select, %77 ], [ 1, %.loopexit ], [ 1, %15 ]
  ret i32 %UnifiedRetVal
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @next_dict_clone.50_clone(i32) #0 {
  %2 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 22
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %2, align 8
  %4 = icmp ne %struct._IO_FILE* %3, null
  br i1 %4, label %5, label %15

; <label>:5:                                      ; preds = %1
  %6 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 28
  %7 = load i32, i32* %6, align 8
  %8 = icmp ne i32 %7, 0
  br i1 %8, label %13, label %9

; <label>:9:                                      ; preds = %5
  %10 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 22
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** %10, align 8
  %12 = call i32 @fclose(%struct._IO_FILE* %11)
  br label %13

; <label>:13:                                     ; preds = %9, %5
  %14 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 22
  store %struct._IO_FILE* null, %struct._IO_FILE** %14, align 8
  br label %15

; <label>:15:                                     ; preds = %13, %1
  %16 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 23
  store i32 0, i32* %16, align 8
  %17 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 23
  %18 = load i32, i32* %17, align 8
  %19 = sext i32 0 to i64
  %20 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 21
  %21 = getelementptr inbounds [128 x i8*], [128 x i8*]* %20, i64 0, i64 0
  %22 = load i8*, i8** %21, align 8
  %23 = icmp eq i8* %22, null
  br i1 %23, label %UnifiedReturnBlock, label %.preheader

.preheader:                                       ; preds = %15
  call void @unroll_loop(i32 108)
  %24 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 23
  %25 = load i32, i32* %24, align 8
  %26 = icmp slt i32 0, 128
  br i1 true, label %.lr.ph.preheader, label %.loopexit

.lr.ph.preheader:                                 ; preds = %.preheader
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader
  %27 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %28 = sext i32 0 to i64
  %29 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 0
  %30 = load i8*, i8** %29, align 8
  %31 = icmp ne i8* %30, null
  br i1 %31, label %32, label %.loopexit.loopexit

; <label>:32:                                     ; preds = %.lr.ph
  %33 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %34 = sext i32 0 to i64
  %35 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 0
  %36 = load i8*, i8** %35, align 8
  %37 = getelementptr [2 x i8], [2 x i8]* @9, i64 0, i64 0
  %38 = call i32 @strcmp(i8* %36, i8* %37) #10
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %52

; <label>:40:                                     ; preds = %32
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 28), align 8
  %41 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
  %42 = call i32 @fileno(%struct._IO_FILE* %41) #9
  %43 = call %struct._IO_FILE* @fdopen(i32 %42, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.66, i64 0, i64 0)) #9, !track !201
  store %struct._IO_FILE* %43, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %44 = icmp eq %struct._IO_FILE* %43, null
  br i1 %44, label %45, label %50

; <label>:45:                                     ; preds = %40
  call void @perror(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.67, i64 0, i64 0))
  %46 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %47 = add nsw i32 0, 1
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge

.backedge:                                        ; preds = %69, %59, %45
  call void @__loop_iteration_test___5()
  call void @unroll_loop(i32 108)
  %48 = load i32, i32* %24, align 8
  %49 = icmp slt i32 1, 128
  br i1 true, label %.lr.ph.1, label %.loopexit.loopexit

; <label>:50:                                     ; preds = %931, %886, %841, %796, %751, %706, %661, %616, %571, %526, %481, %436, %391, %346, %301, %256, %211, %166, %121, %40
  call void @__loop_termination_test___5()
  %51 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 24
  store i32 1, i32* %51, align 4
  br label %.loopexit

; <label>:52:                                     ; preds = %32
  store i32 0, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 28), align 8
  %53 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %54 = sext i32 0 to i64
  %55 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 0
  %56 = load i8*, i8** %55, align 8
  %57 = call %struct._IO_FILE* @fopen64(i8* %56, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.66, i64 0, i64 0)), !track !202
  store %struct._IO_FILE* %57, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %58 = icmp eq %struct._IO_FILE* %57, null
  br i1 %58, label %59, label %62

; <label>:59:                                     ; preds = %52
  call void @perror(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.67, i64 0, i64 0))
  %60 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %61 = add nsw i32 0, 1
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge

; <label>:62:                                     ; preds = %52
  %63 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %64 = call i32 @fseek(%struct._IO_FILE* %63, i64 0, i32 2)
  %65 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %66 = call i64 @ftell(%struct._IO_FILE* %65)
  %67 = icmp sle i64 %66, 0
  %68 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  br i1 %67, label %69, label %74

; <label>:69:                                     ; preds = %62
  %70 = call i32 @fclose(%struct._IO_FILE* %68)
  store %struct._IO_FILE* null, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %71 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.68, i64 0, i64 0))
  %72 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %73 = add nsw i32 0, 1
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge

; <label>:74:                                     ; preds = %916, %871, %826, %781, %736, %691, %646, %601, %556, %511, %466, %421, %376, %331, %286, %241, %196, %151, %106, %62
  %.lcssa = phi %struct._IO_FILE* [ %68, %62 ], [ %112, %106 ], [ %157, %151 ], [ %202, %196 ], [ %247, %241 ], [ %292, %286 ], [ %337, %331 ], [ %382, %376 ], [ %427, %421 ], [ %472, %466 ], [ %517, %511 ], [ %562, %556 ], [ %607, %601 ], [ %652, %646 ], [ %697, %691 ], [ %742, %736 ], [ %787, %781 ], [ %832, %826 ], [ %877, %871 ], [ %922, %916 ]
  call void @__loop_termination_test___5()
  call void @rewind(%struct._IO_FILE* %.lcssa)
  br label %.loopexit

.loopexit.loopexit:                               ; preds = %.backedge.19, %.lr.ph.19, %.backedge.18, %.lr.ph.18, %.backedge.17, %.lr.ph.17, %.backedge.16, %.lr.ph.16, %.backedge.15, %.lr.ph.15, %.backedge.14, %.lr.ph.14, %.backedge.13, %.lr.ph.13, %.backedge.12, %.lr.ph.12, %.backedge.11, %.lr.ph.11, %.backedge.10, %.lr.ph.10, %.backedge.9, %.lr.ph.9, %.backedge.8, %.lr.ph.8, %.backedge.7, %.lr.ph.7, %.backedge.6, %.lr.ph.6, %.backedge.5, %.lr.ph.5, %.backedge.4, %.lr.ph.4, %.backedge.3, %.lr.ph.3, %.backedge.2, %.lr.ph.2, %.backedge.1, %.lr.ph.1, %.backedge, %.lr.ph
  call void @__loop_termination_test___5()
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit.loopexit, %74, %50, %.preheader
  %75 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 23
  %76 = load i32, i32* %75, align 8
  %77 = icmp sge i32 %76, 128
  br i1 %77, label %UnifiedReturnBlock, label %78

; <label>:78:                                     ; preds = %.loopexit
  %79 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 23
  %80 = load i32, i32* %79, align 8
  %81 = sext i32 %80 to i64
  %82 = getelementptr %struct.options, %struct.options* @opt, i32 0, i32 21
  %83 = getelementptr inbounds [128 x i8*], [128 x i8*]* %82, i64 0, i64 %81
  %84 = load i8*, i8** %83, align 8
  %85 = icmp eq i8* %84, null
  %spec.select = select i1 %85, i32 1, i32 0
  br label %UnifiedReturnBlock

UnifiedReturnBlock:                               ; preds = %78, %.loopexit, %15
  %UnifiedRetVal = phi i32 [ %spec.select, %78 ], [ 1, %.loopexit ], [ 1, %15 ]
  ret i32 %UnifiedRetVal

.lr.ph.1:                                         ; preds = %.backedge
  %86 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %87 = sext i32 1 to i64
  %88 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 1
  %89 = load i8*, i8** %88, align 8
  %90 = icmp ne i8* %89, null
  br i1 %90, label %91, label %.loopexit.loopexit

; <label>:91:                                     ; preds = %.lr.ph.1
  %92 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %93 = sext i32 1 to i64
  %94 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 1
  %95 = load i8*, i8** %94, align 8
  %96 = getelementptr [2 x i8], [2 x i8]* @10, i64 0, i64 0
  %97 = call i32 @strcmp(i8* %95, i8* %96) #10
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %121, label %99

; <label>:99:                                     ; preds = %91
  store i32 0, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 28), align 8
  %100 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %101 = sext i32 1 to i64
  %102 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 1
  %103 = load i8*, i8** %102, align 8
  %104 = call %struct._IO_FILE* @fopen64(i8* %103, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.66, i64 0, i64 0)), !track !202
  store %struct._IO_FILE* %104, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %105 = icmp eq %struct._IO_FILE* %104, null
  br i1 %105, label %118, label %106

; <label>:106:                                    ; preds = %99
  %107 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %108 = call i32 @fseek(%struct._IO_FILE* %107, i64 0, i32 2)
  %109 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %110 = call i64 @ftell(%struct._IO_FILE* %109)
  %111 = icmp sle i64 %110, 0
  %112 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  br i1 %111, label %113, label %74

; <label>:113:                                    ; preds = %106
  %114 = call i32 @fclose(%struct._IO_FILE* %112)
  store %struct._IO_FILE* null, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %115 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.68, i64 0, i64 0))
  %116 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %117 = add nsw i32 1, 1
  store i32 2, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge.1

; <label>:118:                                    ; preds = %99
  call void @perror(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.67, i64 0, i64 0))
  %119 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %120 = add nsw i32 1, 1
  store i32 2, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge.1

; <label>:121:                                    ; preds = %91
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 28), align 8
  %122 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
  %123 = call i32 @fileno(%struct._IO_FILE* %122) #9
  %124 = call %struct._IO_FILE* @fdopen(i32 %123, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.66, i64 0, i64 0)) #9, !track !201
  store %struct._IO_FILE* %124, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %125 = icmp eq %struct._IO_FILE* %124, null
  br i1 %125, label %126, label %50

; <label>:126:                                    ; preds = %121
  call void @perror(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.67, i64 0, i64 0))
  %127 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %128 = add nsw i32 1, 1
  store i32 2, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge.1

.backedge.1:                                      ; preds = %126, %118, %113
  call void @__loop_iteration_test___5()
  call void @unroll_loop(i32 108)
  %129 = load i32, i32* %24, align 8
  %130 = icmp slt i32 2, 128
  br i1 true, label %.lr.ph.2, label %.loopexit.loopexit

.lr.ph.2:                                         ; preds = %.backedge.1
  %131 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %132 = sext i32 2 to i64
  %133 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 2
  %134 = load i8*, i8** %133, align 8
  %135 = icmp ne i8* %134, null
  br i1 %135, label %136, label %.loopexit.loopexit

; <label>:136:                                    ; preds = %.lr.ph.2
  %137 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %138 = sext i32 2 to i64
  %139 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 2
  %140 = load i8*, i8** %139, align 8
  %141 = getelementptr [2 x i8], [2 x i8]* @11, i64 0, i64 0
  %142 = call i32 @strcmp(i8* %140, i8* %141) #10
  %143 = icmp eq i32 %142, 0
  br i1 %143, label %166, label %144

; <label>:144:                                    ; preds = %136
  store i32 0, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 28), align 8
  %145 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %146 = sext i32 2 to i64
  %147 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 2
  %148 = load i8*, i8** %147, align 8
  %149 = call %struct._IO_FILE* @fopen64(i8* %148, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.66, i64 0, i64 0)), !track !202
  store %struct._IO_FILE* %149, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %150 = icmp eq %struct._IO_FILE* %149, null
  br i1 %150, label %163, label %151

; <label>:151:                                    ; preds = %144
  %152 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %153 = call i32 @fseek(%struct._IO_FILE* %152, i64 0, i32 2)
  %154 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %155 = call i64 @ftell(%struct._IO_FILE* %154)
  %156 = icmp sle i64 %155, 0
  %157 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  br i1 %156, label %158, label %74

; <label>:158:                                    ; preds = %151
  %159 = call i32 @fclose(%struct._IO_FILE* %157)
  store %struct._IO_FILE* null, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %160 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.68, i64 0, i64 0))
  %161 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %162 = add nsw i32 2, 1
  store i32 3, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge.2

; <label>:163:                                    ; preds = %144
  call void @perror(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.67, i64 0, i64 0))
  %164 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %165 = add nsw i32 2, 1
  store i32 3, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge.2

; <label>:166:                                    ; preds = %136
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 28), align 8
  %167 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
  %168 = call i32 @fileno(%struct._IO_FILE* %167) #9
  %169 = call %struct._IO_FILE* @fdopen(i32 %168, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.66, i64 0, i64 0)) #9, !track !201
  store %struct._IO_FILE* %169, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %170 = icmp eq %struct._IO_FILE* %169, null
  br i1 %170, label %171, label %50

; <label>:171:                                    ; preds = %166
  call void @perror(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.67, i64 0, i64 0))
  %172 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %173 = add nsw i32 2, 1
  store i32 3, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge.2

.backedge.2:                                      ; preds = %171, %163, %158
  call void @__loop_iteration_test___5()
  call void @unroll_loop(i32 108)
  %174 = load i32, i32* %24, align 8
  %175 = icmp slt i32 3, 128
  br i1 true, label %.lr.ph.3, label %.loopexit.loopexit

.lr.ph.3:                                         ; preds = %.backedge.2
  %176 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %177 = sext i32 3 to i64
  %178 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 3
  %179 = load i8*, i8** %178, align 8
  %180 = icmp ne i8* %179, null
  br i1 %180, label %181, label %.loopexit.loopexit

; <label>:181:                                    ; preds = %.lr.ph.3
  %182 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %183 = sext i32 3 to i64
  %184 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 3
  %185 = load i8*, i8** %184, align 8
  %186 = getelementptr [2 x i8], [2 x i8]* @12, i64 0, i64 0
  %187 = call i32 @strcmp(i8* %185, i8* %186) #10
  %188 = icmp eq i32 %187, 0
  br i1 %188, label %211, label %189

; <label>:189:                                    ; preds = %181
  store i32 0, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 28), align 8
  %190 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %191 = sext i32 3 to i64
  %192 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 3
  %193 = load i8*, i8** %192, align 8
  %194 = call %struct._IO_FILE* @fopen64(i8* %193, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.66, i64 0, i64 0)), !track !202
  store %struct._IO_FILE* %194, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %195 = icmp eq %struct._IO_FILE* %194, null
  br i1 %195, label %208, label %196

; <label>:196:                                    ; preds = %189
  %197 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %198 = call i32 @fseek(%struct._IO_FILE* %197, i64 0, i32 2)
  %199 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %200 = call i64 @ftell(%struct._IO_FILE* %199)
  %201 = icmp sle i64 %200, 0
  %202 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  br i1 %201, label %203, label %74

; <label>:203:                                    ; preds = %196
  %204 = call i32 @fclose(%struct._IO_FILE* %202)
  store %struct._IO_FILE* null, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %205 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.68, i64 0, i64 0))
  %206 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %207 = add nsw i32 3, 1
  store i32 4, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge.3

; <label>:208:                                    ; preds = %189
  call void @perror(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.67, i64 0, i64 0))
  %209 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %210 = add nsw i32 3, 1
  store i32 4, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge.3

; <label>:211:                                    ; preds = %181
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 28), align 8
  %212 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
  %213 = call i32 @fileno(%struct._IO_FILE* %212) #9
  %214 = call %struct._IO_FILE* @fdopen(i32 %213, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.66, i64 0, i64 0)) #9, !track !201
  store %struct._IO_FILE* %214, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %215 = icmp eq %struct._IO_FILE* %214, null
  br i1 %215, label %216, label %50

; <label>:216:                                    ; preds = %211
  call void @perror(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.67, i64 0, i64 0))
  %217 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %218 = add nsw i32 3, 1
  store i32 4, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge.3

.backedge.3:                                      ; preds = %216, %208, %203
  call void @__loop_iteration_test___5()
  call void @unroll_loop(i32 108)
  %219 = load i32, i32* %24, align 8
  %220 = icmp slt i32 4, 128
  br i1 true, label %.lr.ph.4, label %.loopexit.loopexit

.lr.ph.4:                                         ; preds = %.backedge.3
  %221 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %222 = sext i32 4 to i64
  %223 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 4
  %224 = load i8*, i8** %223, align 8
  %225 = icmp ne i8* %224, null
  br i1 %225, label %226, label %.loopexit.loopexit

; <label>:226:                                    ; preds = %.lr.ph.4
  %227 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %228 = sext i32 4 to i64
  %229 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 4
  %230 = load i8*, i8** %229, align 8
  %231 = getelementptr [2 x i8], [2 x i8]* @13, i64 0, i64 0
  %232 = call i32 @strcmp(i8* %230, i8* %231) #10
  %233 = icmp eq i32 %232, 0
  br i1 %233, label %256, label %234

; <label>:234:                                    ; preds = %226
  store i32 0, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 28), align 8
  %235 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %236 = sext i32 4 to i64
  %237 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 4
  %238 = load i8*, i8** %237, align 8
  %239 = call %struct._IO_FILE* @fopen64(i8* %238, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.66, i64 0, i64 0)), !track !202
  store %struct._IO_FILE* %239, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %240 = icmp eq %struct._IO_FILE* %239, null
  br i1 %240, label %253, label %241

; <label>:241:                                    ; preds = %234
  %242 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %243 = call i32 @fseek(%struct._IO_FILE* %242, i64 0, i32 2)
  %244 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %245 = call i64 @ftell(%struct._IO_FILE* %244)
  %246 = icmp sle i64 %245, 0
  %247 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  br i1 %246, label %248, label %74

; <label>:248:                                    ; preds = %241
  %249 = call i32 @fclose(%struct._IO_FILE* %247)
  store %struct._IO_FILE* null, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %250 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.68, i64 0, i64 0))
  %251 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %252 = add nsw i32 4, 1
  store i32 5, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge.4

; <label>:253:                                    ; preds = %234
  call void @perror(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.67, i64 0, i64 0))
  %254 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %255 = add nsw i32 4, 1
  store i32 5, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge.4

; <label>:256:                                    ; preds = %226
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 28), align 8
  %257 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
  %258 = call i32 @fileno(%struct._IO_FILE* %257) #9
  %259 = call %struct._IO_FILE* @fdopen(i32 %258, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.66, i64 0, i64 0)) #9, !track !201
  store %struct._IO_FILE* %259, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %260 = icmp eq %struct._IO_FILE* %259, null
  br i1 %260, label %261, label %50

; <label>:261:                                    ; preds = %256
  call void @perror(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.67, i64 0, i64 0))
  %262 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %263 = add nsw i32 4, 1
  store i32 5, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge.4

.backedge.4:                                      ; preds = %261, %253, %248
  call void @__loop_iteration_test___5()
  call void @unroll_loop(i32 108)
  %264 = load i32, i32* %24, align 8
  %265 = icmp slt i32 5, 128
  br i1 true, label %.lr.ph.5, label %.loopexit.loopexit

.lr.ph.5:                                         ; preds = %.backedge.4
  %266 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %267 = sext i32 5 to i64
  %268 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 5
  %269 = load i8*, i8** %268, align 8
  %270 = icmp ne i8* %269, null
  br i1 %270, label %271, label %.loopexit.loopexit

; <label>:271:                                    ; preds = %.lr.ph.5
  %272 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %273 = sext i32 5 to i64
  %274 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 5
  %275 = load i8*, i8** %274, align 8
  %276 = getelementptr [2 x i8], [2 x i8]* @14, i64 0, i64 0
  %277 = call i32 @strcmp(i8* %275, i8* %276) #10
  %278 = icmp eq i32 %277, 0
  br i1 %278, label %301, label %279

; <label>:279:                                    ; preds = %271
  store i32 0, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 28), align 8
  %280 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %281 = sext i32 5 to i64
  %282 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 5
  %283 = load i8*, i8** %282, align 8
  %284 = call %struct._IO_FILE* @fopen64(i8* %283, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.66, i64 0, i64 0)), !track !202
  store %struct._IO_FILE* %284, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %285 = icmp eq %struct._IO_FILE* %284, null
  br i1 %285, label %298, label %286

; <label>:286:                                    ; preds = %279
  %287 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %288 = call i32 @fseek(%struct._IO_FILE* %287, i64 0, i32 2)
  %289 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %290 = call i64 @ftell(%struct._IO_FILE* %289)
  %291 = icmp sle i64 %290, 0
  %292 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  br i1 %291, label %293, label %74

; <label>:293:                                    ; preds = %286
  %294 = call i32 @fclose(%struct._IO_FILE* %292)
  store %struct._IO_FILE* null, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %295 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.68, i64 0, i64 0))
  %296 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %297 = add nsw i32 5, 1
  store i32 6, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge.5

; <label>:298:                                    ; preds = %279
  call void @perror(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.67, i64 0, i64 0))
  %299 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %300 = add nsw i32 5, 1
  store i32 6, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge.5

; <label>:301:                                    ; preds = %271
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 28), align 8
  %302 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
  %303 = call i32 @fileno(%struct._IO_FILE* %302) #9
  %304 = call %struct._IO_FILE* @fdopen(i32 %303, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.66, i64 0, i64 0)) #9, !track !201
  store %struct._IO_FILE* %304, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %305 = icmp eq %struct._IO_FILE* %304, null
  br i1 %305, label %306, label %50

; <label>:306:                                    ; preds = %301
  call void @perror(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.67, i64 0, i64 0))
  %307 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %308 = add nsw i32 5, 1
  store i32 6, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge.5

.backedge.5:                                      ; preds = %306, %298, %293
  call void @__loop_iteration_test___5()
  call void @unroll_loop(i32 108)
  %309 = load i32, i32* %24, align 8
  %310 = icmp slt i32 6, 128
  br i1 true, label %.lr.ph.6, label %.loopexit.loopexit

.lr.ph.6:                                         ; preds = %.backedge.5
  %311 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %312 = sext i32 6 to i64
  %313 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 6
  %314 = load i8*, i8** %313, align 8
  %315 = icmp ne i8* %314, null
  br i1 %315, label %316, label %.loopexit.loopexit

; <label>:316:                                    ; preds = %.lr.ph.6
  %317 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %318 = sext i32 6 to i64
  %319 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 6
  %320 = load i8*, i8** %319, align 8
  %321 = getelementptr [2 x i8], [2 x i8]* @15, i64 0, i64 0
  %322 = call i32 @strcmp(i8* %320, i8* %321) #10
  %323 = icmp eq i32 %322, 0
  br i1 %323, label %346, label %324

; <label>:324:                                    ; preds = %316
  store i32 0, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 28), align 8
  %325 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %326 = sext i32 6 to i64
  %327 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 6
  %328 = load i8*, i8** %327, align 8
  %329 = call %struct._IO_FILE* @fopen64(i8* %328, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.66, i64 0, i64 0)), !track !202
  store %struct._IO_FILE* %329, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %330 = icmp eq %struct._IO_FILE* %329, null
  br i1 %330, label %343, label %331

; <label>:331:                                    ; preds = %324
  %332 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %333 = call i32 @fseek(%struct._IO_FILE* %332, i64 0, i32 2)
  %334 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %335 = call i64 @ftell(%struct._IO_FILE* %334)
  %336 = icmp sle i64 %335, 0
  %337 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  br i1 %336, label %338, label %74

; <label>:338:                                    ; preds = %331
  %339 = call i32 @fclose(%struct._IO_FILE* %337)
  store %struct._IO_FILE* null, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %340 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.68, i64 0, i64 0))
  %341 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %342 = add nsw i32 6, 1
  store i32 7, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge.6

; <label>:343:                                    ; preds = %324
  call void @perror(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.67, i64 0, i64 0))
  %344 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %345 = add nsw i32 6, 1
  store i32 7, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge.6

; <label>:346:                                    ; preds = %316
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 28), align 8
  %347 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
  %348 = call i32 @fileno(%struct._IO_FILE* %347) #9
  %349 = call %struct._IO_FILE* @fdopen(i32 %348, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.66, i64 0, i64 0)) #9, !track !201
  store %struct._IO_FILE* %349, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %350 = icmp eq %struct._IO_FILE* %349, null
  br i1 %350, label %351, label %50

; <label>:351:                                    ; preds = %346
  call void @perror(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.67, i64 0, i64 0))
  %352 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %353 = add nsw i32 6, 1
  store i32 7, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge.6

.backedge.6:                                      ; preds = %351, %343, %338
  call void @__loop_iteration_test___5()
  call void @unroll_loop(i32 108)
  %354 = load i32, i32* %24, align 8
  %355 = icmp slt i32 7, 128
  br i1 true, label %.lr.ph.7, label %.loopexit.loopexit

.lr.ph.7:                                         ; preds = %.backedge.6
  %356 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %357 = sext i32 7 to i64
  %358 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 7
  %359 = load i8*, i8** %358, align 8
  %360 = icmp ne i8* %359, null
  br i1 %360, label %361, label %.loopexit.loopexit

; <label>:361:                                    ; preds = %.lr.ph.7
  %362 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %363 = sext i32 7 to i64
  %364 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 7
  %365 = load i8*, i8** %364, align 8
  %366 = getelementptr [2 x i8], [2 x i8]* @16, i64 0, i64 0
  %367 = call i32 @strcmp(i8* %365, i8* %366) #10
  %368 = icmp eq i32 %367, 0
  br i1 %368, label %391, label %369

; <label>:369:                                    ; preds = %361
  store i32 0, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 28), align 8
  %370 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %371 = sext i32 7 to i64
  %372 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 7
  %373 = load i8*, i8** %372, align 8
  %374 = call %struct._IO_FILE* @fopen64(i8* %373, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.66, i64 0, i64 0)), !track !202
  store %struct._IO_FILE* %374, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %375 = icmp eq %struct._IO_FILE* %374, null
  br i1 %375, label %388, label %376

; <label>:376:                                    ; preds = %369
  %377 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %378 = call i32 @fseek(%struct._IO_FILE* %377, i64 0, i32 2)
  %379 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %380 = call i64 @ftell(%struct._IO_FILE* %379)
  %381 = icmp sle i64 %380, 0
  %382 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  br i1 %381, label %383, label %74

; <label>:383:                                    ; preds = %376
  %384 = call i32 @fclose(%struct._IO_FILE* %382)
  store %struct._IO_FILE* null, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %385 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.68, i64 0, i64 0))
  %386 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %387 = add nsw i32 7, 1
  store i32 8, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge.7

; <label>:388:                                    ; preds = %369
  call void @perror(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.67, i64 0, i64 0))
  %389 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %390 = add nsw i32 7, 1
  store i32 8, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge.7

; <label>:391:                                    ; preds = %361
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 28), align 8
  %392 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
  %393 = call i32 @fileno(%struct._IO_FILE* %392) #9
  %394 = call %struct._IO_FILE* @fdopen(i32 %393, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.66, i64 0, i64 0)) #9, !track !201
  store %struct._IO_FILE* %394, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %395 = icmp eq %struct._IO_FILE* %394, null
  br i1 %395, label %396, label %50

; <label>:396:                                    ; preds = %391
  call void @perror(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.67, i64 0, i64 0))
  %397 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %398 = add nsw i32 7, 1
  store i32 8, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge.7

.backedge.7:                                      ; preds = %396, %388, %383
  call void @__loop_iteration_test___5()
  call void @unroll_loop(i32 108)
  %399 = load i32, i32* %24, align 8
  %400 = icmp slt i32 8, 128
  br i1 true, label %.lr.ph.8, label %.loopexit.loopexit

.lr.ph.8:                                         ; preds = %.backedge.7
  %401 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %402 = sext i32 8 to i64
  %403 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 8
  %404 = load i8*, i8** %403, align 8
  %405 = icmp ne i8* %404, null
  br i1 %405, label %406, label %.loopexit.loopexit

; <label>:406:                                    ; preds = %.lr.ph.8
  %407 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %408 = sext i32 8 to i64
  %409 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 8
  %410 = load i8*, i8** %409, align 8
  %411 = getelementptr [2 x i8], [2 x i8]* @17, i64 0, i64 0
  %412 = call i32 @strcmp(i8* %410, i8* %411) #10
  %413 = icmp eq i32 %412, 0
  br i1 %413, label %436, label %414

; <label>:414:                                    ; preds = %406
  store i32 0, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 28), align 8
  %415 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %416 = sext i32 8 to i64
  %417 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 8
  %418 = load i8*, i8** %417, align 8
  %419 = call %struct._IO_FILE* @fopen64(i8* %418, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.66, i64 0, i64 0)), !track !202
  store %struct._IO_FILE* %419, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %420 = icmp eq %struct._IO_FILE* %419, null
  br i1 %420, label %433, label %421

; <label>:421:                                    ; preds = %414
  %422 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %423 = call i32 @fseek(%struct._IO_FILE* %422, i64 0, i32 2)
  %424 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %425 = call i64 @ftell(%struct._IO_FILE* %424)
  %426 = icmp sle i64 %425, 0
  %427 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  br i1 %426, label %428, label %74

; <label>:428:                                    ; preds = %421
  %429 = call i32 @fclose(%struct._IO_FILE* %427)
  store %struct._IO_FILE* null, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %430 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.68, i64 0, i64 0))
  %431 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %432 = add nsw i32 8, 1
  store i32 9, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge.8

; <label>:433:                                    ; preds = %414
  call void @perror(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.67, i64 0, i64 0))
  %434 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %435 = add nsw i32 8, 1
  store i32 9, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge.8

; <label>:436:                                    ; preds = %406
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 28), align 8
  %437 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
  %438 = call i32 @fileno(%struct._IO_FILE* %437) #9
  %439 = call %struct._IO_FILE* @fdopen(i32 %438, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.66, i64 0, i64 0)) #9, !track !201
  store %struct._IO_FILE* %439, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %440 = icmp eq %struct._IO_FILE* %439, null
  br i1 %440, label %441, label %50

; <label>:441:                                    ; preds = %436
  call void @perror(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.67, i64 0, i64 0))
  %442 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %443 = add nsw i32 8, 1
  store i32 9, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge.8

.backedge.8:                                      ; preds = %441, %433, %428
  call void @__loop_iteration_test___5()
  call void @unroll_loop(i32 108)
  %444 = load i32, i32* %24, align 8
  %445 = icmp slt i32 9, 128
  br i1 true, label %.lr.ph.9, label %.loopexit.loopexit

.lr.ph.9:                                         ; preds = %.backedge.8
  %446 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %447 = sext i32 9 to i64
  %448 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 9
  %449 = load i8*, i8** %448, align 8
  %450 = icmp ne i8* %449, null
  br i1 %450, label %451, label %.loopexit.loopexit

; <label>:451:                                    ; preds = %.lr.ph.9
  %452 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %453 = sext i32 9 to i64
  %454 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 9
  %455 = load i8*, i8** %454, align 8
  %456 = getelementptr [2 x i8], [2 x i8]* @18, i64 0, i64 0
  %457 = call i32 @strcmp(i8* %455, i8* %456) #10
  %458 = icmp eq i32 %457, 0
  br i1 %458, label %481, label %459

; <label>:459:                                    ; preds = %451
  store i32 0, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 28), align 8
  %460 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %461 = sext i32 9 to i64
  %462 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 9
  %463 = load i8*, i8** %462, align 8
  %464 = call %struct._IO_FILE* @fopen64(i8* %463, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.66, i64 0, i64 0)), !track !202
  store %struct._IO_FILE* %464, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %465 = icmp eq %struct._IO_FILE* %464, null
  br i1 %465, label %478, label %466

; <label>:466:                                    ; preds = %459
  %467 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %468 = call i32 @fseek(%struct._IO_FILE* %467, i64 0, i32 2)
  %469 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %470 = call i64 @ftell(%struct._IO_FILE* %469)
  %471 = icmp sle i64 %470, 0
  %472 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  br i1 %471, label %473, label %74

; <label>:473:                                    ; preds = %466
  %474 = call i32 @fclose(%struct._IO_FILE* %472)
  store %struct._IO_FILE* null, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %475 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.68, i64 0, i64 0))
  %476 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %477 = add nsw i32 9, 1
  store i32 10, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge.9

; <label>:478:                                    ; preds = %459
  call void @perror(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.67, i64 0, i64 0))
  %479 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %480 = add nsw i32 9, 1
  store i32 10, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge.9

; <label>:481:                                    ; preds = %451
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 28), align 8
  %482 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
  %483 = call i32 @fileno(%struct._IO_FILE* %482) #9
  %484 = call %struct._IO_FILE* @fdopen(i32 %483, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.66, i64 0, i64 0)) #9, !track !201
  store %struct._IO_FILE* %484, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %485 = icmp eq %struct._IO_FILE* %484, null
  br i1 %485, label %486, label %50

; <label>:486:                                    ; preds = %481
  call void @perror(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.67, i64 0, i64 0))
  %487 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %488 = add nsw i32 9, 1
  store i32 10, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge.9

.backedge.9:                                      ; preds = %486, %478, %473
  call void @__loop_iteration_test___5()
  call void @unroll_loop(i32 108)
  %489 = load i32, i32* %24, align 8
  %490 = icmp slt i32 10, 128
  br i1 true, label %.lr.ph.10, label %.loopexit.loopexit

.lr.ph.10:                                        ; preds = %.backedge.9
  %491 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %492 = sext i32 10 to i64
  %493 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 10
  %494 = load i8*, i8** %493, align 8
  %495 = icmp ne i8* %494, null
  br i1 %495, label %496, label %.loopexit.loopexit

; <label>:496:                                    ; preds = %.lr.ph.10
  %497 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %498 = sext i32 10 to i64
  %499 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 10
  %500 = load i8*, i8** %499, align 8
  %501 = getelementptr [2 x i8], [2 x i8]* @19, i64 0, i64 0
  %502 = call i32 @strcmp(i8* %500, i8* %501) #10
  %503 = icmp eq i32 %502, 0
  br i1 %503, label %526, label %504

; <label>:504:                                    ; preds = %496
  store i32 0, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 28), align 8
  %505 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %506 = sext i32 10 to i64
  %507 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 10
  %508 = load i8*, i8** %507, align 8
  %509 = call %struct._IO_FILE* @fopen64(i8* %508, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.66, i64 0, i64 0)), !track !202
  store %struct._IO_FILE* %509, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %510 = icmp eq %struct._IO_FILE* %509, null
  br i1 %510, label %523, label %511

; <label>:511:                                    ; preds = %504
  %512 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %513 = call i32 @fseek(%struct._IO_FILE* %512, i64 0, i32 2)
  %514 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %515 = call i64 @ftell(%struct._IO_FILE* %514)
  %516 = icmp sle i64 %515, 0
  %517 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  br i1 %516, label %518, label %74

; <label>:518:                                    ; preds = %511
  %519 = call i32 @fclose(%struct._IO_FILE* %517)
  store %struct._IO_FILE* null, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %520 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.68, i64 0, i64 0))
  %521 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %522 = add nsw i32 10, 1
  store i32 11, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge.10

; <label>:523:                                    ; preds = %504
  call void @perror(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.67, i64 0, i64 0))
  %524 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %525 = add nsw i32 10, 1
  store i32 11, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge.10

; <label>:526:                                    ; preds = %496
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 28), align 8
  %527 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
  %528 = call i32 @fileno(%struct._IO_FILE* %527) #9
  %529 = call %struct._IO_FILE* @fdopen(i32 %528, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.66, i64 0, i64 0)) #9, !track !201
  store %struct._IO_FILE* %529, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %530 = icmp eq %struct._IO_FILE* %529, null
  br i1 %530, label %531, label %50

; <label>:531:                                    ; preds = %526
  call void @perror(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.67, i64 0, i64 0))
  %532 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %533 = add nsw i32 10, 1
  store i32 11, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge.10

.backedge.10:                                     ; preds = %531, %523, %518
  call void @__loop_iteration_test___5()
  call void @unroll_loop(i32 108)
  %534 = load i32, i32* %24, align 8
  %535 = icmp slt i32 11, 128
  br i1 true, label %.lr.ph.11, label %.loopexit.loopexit

.lr.ph.11:                                        ; preds = %.backedge.10
  %536 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %537 = sext i32 11 to i64
  %538 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 11
  %539 = load i8*, i8** %538, align 8
  %540 = icmp ne i8* %539, null
  br i1 %540, label %541, label %.loopexit.loopexit

; <label>:541:                                    ; preds = %.lr.ph.11
  %542 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %543 = sext i32 11 to i64
  %544 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 11
  %545 = load i8*, i8** %544, align 8
  %546 = getelementptr [2 x i8], [2 x i8]* @20, i64 0, i64 0
  %547 = call i32 @strcmp(i8* %545, i8* %546) #10
  %548 = icmp eq i32 %547, 0
  br i1 %548, label %571, label %549

; <label>:549:                                    ; preds = %541
  store i32 0, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 28), align 8
  %550 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %551 = sext i32 11 to i64
  %552 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 11
  %553 = load i8*, i8** %552, align 8
  %554 = call %struct._IO_FILE* @fopen64(i8* %553, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.66, i64 0, i64 0)), !track !202
  store %struct._IO_FILE* %554, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %555 = icmp eq %struct._IO_FILE* %554, null
  br i1 %555, label %568, label %556

; <label>:556:                                    ; preds = %549
  %557 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %558 = call i32 @fseek(%struct._IO_FILE* %557, i64 0, i32 2)
  %559 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %560 = call i64 @ftell(%struct._IO_FILE* %559)
  %561 = icmp sle i64 %560, 0
  %562 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  br i1 %561, label %563, label %74

; <label>:563:                                    ; preds = %556
  %564 = call i32 @fclose(%struct._IO_FILE* %562)
  store %struct._IO_FILE* null, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %565 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.68, i64 0, i64 0))
  %566 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %567 = add nsw i32 11, 1
  store i32 12, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge.11

; <label>:568:                                    ; preds = %549
  call void @perror(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.67, i64 0, i64 0))
  %569 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %570 = add nsw i32 11, 1
  store i32 12, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge.11

; <label>:571:                                    ; preds = %541
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 28), align 8
  %572 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
  %573 = call i32 @fileno(%struct._IO_FILE* %572) #9
  %574 = call %struct._IO_FILE* @fdopen(i32 %573, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.66, i64 0, i64 0)) #9, !track !201
  store %struct._IO_FILE* %574, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %575 = icmp eq %struct._IO_FILE* %574, null
  br i1 %575, label %576, label %50

; <label>:576:                                    ; preds = %571
  call void @perror(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.67, i64 0, i64 0))
  %577 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %578 = add nsw i32 11, 1
  store i32 12, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge.11

.backedge.11:                                     ; preds = %576, %568, %563
  call void @__loop_iteration_test___5()
  call void @unroll_loop(i32 108)
  %579 = load i32, i32* %24, align 8
  %580 = icmp slt i32 12, 128
  br i1 true, label %.lr.ph.12, label %.loopexit.loopexit

.lr.ph.12:                                        ; preds = %.backedge.11
  %581 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %582 = sext i32 12 to i64
  %583 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 12
  %584 = load i8*, i8** %583, align 8
  %585 = icmp ne i8* %584, null
  br i1 %585, label %586, label %.loopexit.loopexit

; <label>:586:                                    ; preds = %.lr.ph.12
  %587 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %588 = sext i32 12 to i64
  %589 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 12
  %590 = load i8*, i8** %589, align 8
  %591 = getelementptr [2 x i8], [2 x i8]* @21, i64 0, i64 0
  %592 = call i32 @strcmp(i8* %590, i8* %591) #10
  %593 = icmp eq i32 %592, 0
  br i1 %593, label %616, label %594

; <label>:594:                                    ; preds = %586
  store i32 0, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 28), align 8
  %595 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %596 = sext i32 12 to i64
  %597 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 12
  %598 = load i8*, i8** %597, align 8
  %599 = call %struct._IO_FILE* @fopen64(i8* %598, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.66, i64 0, i64 0)), !track !202
  store %struct._IO_FILE* %599, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %600 = icmp eq %struct._IO_FILE* %599, null
  br i1 %600, label %613, label %601

; <label>:601:                                    ; preds = %594
  %602 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %603 = call i32 @fseek(%struct._IO_FILE* %602, i64 0, i32 2)
  %604 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %605 = call i64 @ftell(%struct._IO_FILE* %604)
  %606 = icmp sle i64 %605, 0
  %607 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  br i1 %606, label %608, label %74

; <label>:608:                                    ; preds = %601
  %609 = call i32 @fclose(%struct._IO_FILE* %607)
  store %struct._IO_FILE* null, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %610 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.68, i64 0, i64 0))
  %611 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %612 = add nsw i32 12, 1
  store i32 13, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge.12

; <label>:613:                                    ; preds = %594
  call void @perror(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.67, i64 0, i64 0))
  %614 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %615 = add nsw i32 12, 1
  store i32 13, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge.12

; <label>:616:                                    ; preds = %586
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 28), align 8
  %617 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
  %618 = call i32 @fileno(%struct._IO_FILE* %617) #9
  %619 = call %struct._IO_FILE* @fdopen(i32 %618, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.66, i64 0, i64 0)) #9, !track !201
  store %struct._IO_FILE* %619, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %620 = icmp eq %struct._IO_FILE* %619, null
  br i1 %620, label %621, label %50

; <label>:621:                                    ; preds = %616
  call void @perror(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.67, i64 0, i64 0))
  %622 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %623 = add nsw i32 12, 1
  store i32 13, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge.12

.backedge.12:                                     ; preds = %621, %613, %608
  call void @__loop_iteration_test___5()
  call void @unroll_loop(i32 108)
  %624 = load i32, i32* %24, align 8
  %625 = icmp slt i32 13, 128
  br i1 true, label %.lr.ph.13, label %.loopexit.loopexit

.lr.ph.13:                                        ; preds = %.backedge.12
  %626 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %627 = sext i32 13 to i64
  %628 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 13
  %629 = load i8*, i8** %628, align 8
  %630 = icmp ne i8* %629, null
  br i1 %630, label %631, label %.loopexit.loopexit

; <label>:631:                                    ; preds = %.lr.ph.13
  %632 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %633 = sext i32 13 to i64
  %634 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 13
  %635 = load i8*, i8** %634, align 8
  %636 = getelementptr [2 x i8], [2 x i8]* @22, i64 0, i64 0
  %637 = call i32 @strcmp(i8* %635, i8* %636) #10
  %638 = icmp eq i32 %637, 0
  br i1 %638, label %661, label %639

; <label>:639:                                    ; preds = %631
  store i32 0, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 28), align 8
  %640 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %641 = sext i32 13 to i64
  %642 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 13
  %643 = load i8*, i8** %642, align 8
  %644 = call %struct._IO_FILE* @fopen64(i8* %643, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.66, i64 0, i64 0)), !track !202
  store %struct._IO_FILE* %644, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %645 = icmp eq %struct._IO_FILE* %644, null
  br i1 %645, label %658, label %646

; <label>:646:                                    ; preds = %639
  %647 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %648 = call i32 @fseek(%struct._IO_FILE* %647, i64 0, i32 2)
  %649 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %650 = call i64 @ftell(%struct._IO_FILE* %649)
  %651 = icmp sle i64 %650, 0
  %652 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  br i1 %651, label %653, label %74

; <label>:653:                                    ; preds = %646
  %654 = call i32 @fclose(%struct._IO_FILE* %652)
  store %struct._IO_FILE* null, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %655 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.68, i64 0, i64 0))
  %656 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %657 = add nsw i32 13, 1
  store i32 14, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge.13

; <label>:658:                                    ; preds = %639
  call void @perror(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.67, i64 0, i64 0))
  %659 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %660 = add nsw i32 13, 1
  store i32 14, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge.13

; <label>:661:                                    ; preds = %631
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 28), align 8
  %662 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
  %663 = call i32 @fileno(%struct._IO_FILE* %662) #9
  %664 = call %struct._IO_FILE* @fdopen(i32 %663, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.66, i64 0, i64 0)) #9, !track !201
  store %struct._IO_FILE* %664, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %665 = icmp eq %struct._IO_FILE* %664, null
  br i1 %665, label %666, label %50

; <label>:666:                                    ; preds = %661
  call void @perror(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.67, i64 0, i64 0))
  %667 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %668 = add nsw i32 13, 1
  store i32 14, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge.13

.backedge.13:                                     ; preds = %666, %658, %653
  call void @__loop_iteration_test___5()
  call void @unroll_loop(i32 108)
  %669 = load i32, i32* %24, align 8
  %670 = icmp slt i32 14, 128
  br i1 true, label %.lr.ph.14, label %.loopexit.loopexit

.lr.ph.14:                                        ; preds = %.backedge.13
  %671 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %672 = sext i32 14 to i64
  %673 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 14
  %674 = load i8*, i8** %673, align 8
  %675 = icmp ne i8* %674, null
  br i1 %675, label %676, label %.loopexit.loopexit

; <label>:676:                                    ; preds = %.lr.ph.14
  %677 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %678 = sext i32 14 to i64
  %679 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 14
  %680 = load i8*, i8** %679, align 8
  %681 = getelementptr [2 x i8], [2 x i8]* @23, i64 0, i64 0
  %682 = call i32 @strcmp(i8* %680, i8* %681) #10
  %683 = icmp eq i32 %682, 0
  br i1 %683, label %706, label %684

; <label>:684:                                    ; preds = %676
  store i32 0, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 28), align 8
  %685 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %686 = sext i32 14 to i64
  %687 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 14
  %688 = load i8*, i8** %687, align 8
  %689 = call %struct._IO_FILE* @fopen64(i8* %688, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.66, i64 0, i64 0)), !track !202
  store %struct._IO_FILE* %689, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %690 = icmp eq %struct._IO_FILE* %689, null
  br i1 %690, label %703, label %691

; <label>:691:                                    ; preds = %684
  %692 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %693 = call i32 @fseek(%struct._IO_FILE* %692, i64 0, i32 2)
  %694 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %695 = call i64 @ftell(%struct._IO_FILE* %694)
  %696 = icmp sle i64 %695, 0
  %697 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  br i1 %696, label %698, label %74

; <label>:698:                                    ; preds = %691
  %699 = call i32 @fclose(%struct._IO_FILE* %697)
  store %struct._IO_FILE* null, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %700 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.68, i64 0, i64 0))
  %701 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %702 = add nsw i32 14, 1
  store i32 15, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge.14

; <label>:703:                                    ; preds = %684
  call void @perror(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.67, i64 0, i64 0))
  %704 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %705 = add nsw i32 14, 1
  store i32 15, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge.14

; <label>:706:                                    ; preds = %676
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 28), align 8
  %707 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
  %708 = call i32 @fileno(%struct._IO_FILE* %707) #9
  %709 = call %struct._IO_FILE* @fdopen(i32 %708, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.66, i64 0, i64 0)) #9, !track !201
  store %struct._IO_FILE* %709, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %710 = icmp eq %struct._IO_FILE* %709, null
  br i1 %710, label %711, label %50

; <label>:711:                                    ; preds = %706
  call void @perror(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.67, i64 0, i64 0))
  %712 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %713 = add nsw i32 14, 1
  store i32 15, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge.14

.backedge.14:                                     ; preds = %711, %703, %698
  call void @__loop_iteration_test___5()
  call void @unroll_loop(i32 108)
  %714 = load i32, i32* %24, align 8
  %715 = icmp slt i32 15, 128
  br i1 true, label %.lr.ph.15, label %.loopexit.loopexit

.lr.ph.15:                                        ; preds = %.backedge.14
  %716 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %717 = sext i32 15 to i64
  %718 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 15
  %719 = load i8*, i8** %718, align 8
  %720 = icmp ne i8* %719, null
  br i1 %720, label %721, label %.loopexit.loopexit

; <label>:721:                                    ; preds = %.lr.ph.15
  %722 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %723 = sext i32 15 to i64
  %724 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 15
  %725 = load i8*, i8** %724, align 8
  %726 = getelementptr [2 x i8], [2 x i8]* @24, i64 0, i64 0
  %727 = call i32 @strcmp(i8* %725, i8* %726) #10
  %728 = icmp eq i32 %727, 0
  br i1 %728, label %751, label %729

; <label>:729:                                    ; preds = %721
  store i32 0, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 28), align 8
  %730 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %731 = sext i32 15 to i64
  %732 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 15
  %733 = load i8*, i8** %732, align 8
  %734 = call %struct._IO_FILE* @fopen64(i8* %733, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.66, i64 0, i64 0)), !track !202
  store %struct._IO_FILE* %734, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %735 = icmp eq %struct._IO_FILE* %734, null
  br i1 %735, label %748, label %736

; <label>:736:                                    ; preds = %729
  %737 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %738 = call i32 @fseek(%struct._IO_FILE* %737, i64 0, i32 2)
  %739 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %740 = call i64 @ftell(%struct._IO_FILE* %739)
  %741 = icmp sle i64 %740, 0
  %742 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  br i1 %741, label %743, label %74

; <label>:743:                                    ; preds = %736
  %744 = call i32 @fclose(%struct._IO_FILE* %742)
  store %struct._IO_FILE* null, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %745 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.68, i64 0, i64 0))
  %746 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %747 = add nsw i32 15, 1
  store i32 16, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge.15

; <label>:748:                                    ; preds = %729
  call void @perror(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.67, i64 0, i64 0))
  %749 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %750 = add nsw i32 15, 1
  store i32 16, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge.15

; <label>:751:                                    ; preds = %721
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 28), align 8
  %752 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
  %753 = call i32 @fileno(%struct._IO_FILE* %752) #9
  %754 = call %struct._IO_FILE* @fdopen(i32 %753, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.66, i64 0, i64 0)) #9, !track !201
  store %struct._IO_FILE* %754, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %755 = icmp eq %struct._IO_FILE* %754, null
  br i1 %755, label %756, label %50

; <label>:756:                                    ; preds = %751
  call void @perror(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.67, i64 0, i64 0))
  %757 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %758 = add nsw i32 15, 1
  store i32 16, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge.15

.backedge.15:                                     ; preds = %756, %748, %743
  call void @__loop_iteration_test___5()
  call void @unroll_loop(i32 108)
  %759 = load i32, i32* %24, align 8
  %760 = icmp slt i32 16, 128
  br i1 true, label %.lr.ph.16, label %.loopexit.loopexit

.lr.ph.16:                                        ; preds = %.backedge.15
  %761 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %762 = sext i32 16 to i64
  %763 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 16
  %764 = load i8*, i8** %763, align 8
  %765 = icmp ne i8* %764, null
  br i1 %765, label %766, label %.loopexit.loopexit

; <label>:766:                                    ; preds = %.lr.ph.16
  %767 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %768 = sext i32 16 to i64
  %769 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 16
  %770 = load i8*, i8** %769, align 8
  %771 = getelementptr [2 x i8], [2 x i8]* @25, i64 0, i64 0
  %772 = call i32 @strcmp(i8* %770, i8* %771) #10
  %773 = icmp eq i32 %772, 0
  br i1 %773, label %796, label %774

; <label>:774:                                    ; preds = %766
  store i32 0, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 28), align 8
  %775 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %776 = sext i32 16 to i64
  %777 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 16
  %778 = load i8*, i8** %777, align 8
  %779 = call %struct._IO_FILE* @fopen64(i8* %778, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.66, i64 0, i64 0)), !track !202
  store %struct._IO_FILE* %779, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %780 = icmp eq %struct._IO_FILE* %779, null
  br i1 %780, label %793, label %781

; <label>:781:                                    ; preds = %774
  %782 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %783 = call i32 @fseek(%struct._IO_FILE* %782, i64 0, i32 2)
  %784 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %785 = call i64 @ftell(%struct._IO_FILE* %784)
  %786 = icmp sle i64 %785, 0
  %787 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  br i1 %786, label %788, label %74

; <label>:788:                                    ; preds = %781
  %789 = call i32 @fclose(%struct._IO_FILE* %787)
  store %struct._IO_FILE* null, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %790 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.68, i64 0, i64 0))
  %791 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %792 = add nsw i32 16, 1
  store i32 17, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge.16

; <label>:793:                                    ; preds = %774
  call void @perror(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.67, i64 0, i64 0))
  %794 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %795 = add nsw i32 16, 1
  store i32 17, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge.16

; <label>:796:                                    ; preds = %766
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 28), align 8
  %797 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
  %798 = call i32 @fileno(%struct._IO_FILE* %797) #9
  %799 = call %struct._IO_FILE* @fdopen(i32 %798, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.66, i64 0, i64 0)) #9, !track !201
  store %struct._IO_FILE* %799, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %800 = icmp eq %struct._IO_FILE* %799, null
  br i1 %800, label %801, label %50

; <label>:801:                                    ; preds = %796
  call void @perror(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.67, i64 0, i64 0))
  %802 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %803 = add nsw i32 16, 1
  store i32 17, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge.16

.backedge.16:                                     ; preds = %801, %793, %788
  call void @__loop_iteration_test___5()
  call void @unroll_loop(i32 108)
  %804 = load i32, i32* %24, align 8
  %805 = icmp slt i32 17, 128
  br i1 true, label %.lr.ph.17, label %.loopexit.loopexit

.lr.ph.17:                                        ; preds = %.backedge.16
  %806 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %807 = sext i32 17 to i64
  %808 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 17
  %809 = load i8*, i8** %808, align 8
  %810 = icmp ne i8* %809, null
  br i1 %810, label %811, label %.loopexit.loopexit

; <label>:811:                                    ; preds = %.lr.ph.17
  %812 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %813 = sext i32 17 to i64
  %814 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 17
  %815 = load i8*, i8** %814, align 8
  %816 = getelementptr [2 x i8], [2 x i8]* @26, i64 0, i64 0
  %817 = call i32 @strcmp(i8* %815, i8* %816) #10
  %818 = icmp eq i32 %817, 0
  br i1 %818, label %841, label %819

; <label>:819:                                    ; preds = %811
  store i32 0, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 28), align 8
  %820 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %821 = sext i32 17 to i64
  %822 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 17
  %823 = load i8*, i8** %822, align 8
  %824 = call %struct._IO_FILE* @fopen64(i8* %823, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.66, i64 0, i64 0)), !track !202
  store %struct._IO_FILE* %824, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %825 = icmp eq %struct._IO_FILE* %824, null
  br i1 %825, label %838, label %826

; <label>:826:                                    ; preds = %819
  %827 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %828 = call i32 @fseek(%struct._IO_FILE* %827, i64 0, i32 2)
  %829 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %830 = call i64 @ftell(%struct._IO_FILE* %829)
  %831 = icmp sle i64 %830, 0
  %832 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  br i1 %831, label %833, label %74

; <label>:833:                                    ; preds = %826
  %834 = call i32 @fclose(%struct._IO_FILE* %832)
  store %struct._IO_FILE* null, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %835 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.68, i64 0, i64 0))
  %836 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %837 = add nsw i32 17, 1
  store i32 18, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge.17

; <label>:838:                                    ; preds = %819
  call void @perror(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.67, i64 0, i64 0))
  %839 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %840 = add nsw i32 17, 1
  store i32 18, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge.17

; <label>:841:                                    ; preds = %811
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 28), align 8
  %842 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
  %843 = call i32 @fileno(%struct._IO_FILE* %842) #9
  %844 = call %struct._IO_FILE* @fdopen(i32 %843, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.66, i64 0, i64 0)) #9, !track !201
  store %struct._IO_FILE* %844, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %845 = icmp eq %struct._IO_FILE* %844, null
  br i1 %845, label %846, label %50

; <label>:846:                                    ; preds = %841
  call void @perror(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.67, i64 0, i64 0))
  %847 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %848 = add nsw i32 17, 1
  store i32 18, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge.17

.backedge.17:                                     ; preds = %846, %838, %833
  call void @__loop_iteration_test___5()
  call void @unroll_loop(i32 108)
  %849 = load i32, i32* %24, align 8
  %850 = icmp slt i32 18, 128
  br i1 true, label %.lr.ph.18, label %.loopexit.loopexit

.lr.ph.18:                                        ; preds = %.backedge.17
  %851 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %852 = sext i32 18 to i64
  %853 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 18
  %854 = load i8*, i8** %853, align 8
  %855 = icmp ne i8* %854, null
  br i1 %855, label %856, label %.loopexit.loopexit

; <label>:856:                                    ; preds = %.lr.ph.18
  %857 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %858 = sext i32 18 to i64
  %859 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 18
  %860 = load i8*, i8** %859, align 8
  %861 = getelementptr [2 x i8], [2 x i8]* @27, i64 0, i64 0
  %862 = call i32 @strcmp(i8* %860, i8* %861) #10
  %863 = icmp eq i32 %862, 0
  br i1 %863, label %886, label %864

; <label>:864:                                    ; preds = %856
  store i32 0, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 28), align 8
  %865 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %866 = sext i32 18 to i64
  %867 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 18
  %868 = load i8*, i8** %867, align 8
  %869 = call %struct._IO_FILE* @fopen64(i8* %868, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.66, i64 0, i64 0)), !track !202
  store %struct._IO_FILE* %869, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %870 = icmp eq %struct._IO_FILE* %869, null
  br i1 %870, label %883, label %871

; <label>:871:                                    ; preds = %864
  %872 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %873 = call i32 @fseek(%struct._IO_FILE* %872, i64 0, i32 2)
  %874 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %875 = call i64 @ftell(%struct._IO_FILE* %874)
  %876 = icmp sle i64 %875, 0
  %877 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  br i1 %876, label %878, label %74

; <label>:878:                                    ; preds = %871
  %879 = call i32 @fclose(%struct._IO_FILE* %877)
  store %struct._IO_FILE* null, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %880 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.68, i64 0, i64 0))
  %881 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %882 = add nsw i32 18, 1
  store i32 19, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge.18

; <label>:883:                                    ; preds = %864
  call void @perror(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.67, i64 0, i64 0))
  %884 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %885 = add nsw i32 18, 1
  store i32 19, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge.18

; <label>:886:                                    ; preds = %856
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 28), align 8
  %887 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
  %888 = call i32 @fileno(%struct._IO_FILE* %887) #9
  %889 = call %struct._IO_FILE* @fdopen(i32 %888, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.66, i64 0, i64 0)) #9, !track !201
  store %struct._IO_FILE* %889, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %890 = icmp eq %struct._IO_FILE* %889, null
  br i1 %890, label %891, label %50

; <label>:891:                                    ; preds = %886
  call void @perror(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.67, i64 0, i64 0))
  %892 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %893 = add nsw i32 18, 1
  store i32 19, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge.18

.backedge.18:                                     ; preds = %891, %883, %878
  call void @__loop_iteration_test___5()
  call void @unroll_loop(i32 108)
  %894 = load i32, i32* %24, align 8
  %895 = icmp slt i32 19, 128
  br i1 true, label %.lr.ph.19, label %.loopexit.loopexit

.lr.ph.19:                                        ; preds = %.backedge.18
  %896 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %897 = sext i32 19 to i64
  %898 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 19
  %899 = load i8*, i8** %898, align 8
  %900 = icmp ne i8* %899, null
  br i1 %900, label %901, label %.loopexit.loopexit

; <label>:901:                                    ; preds = %.lr.ph.19
  %902 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %903 = sext i32 19 to i64
  %904 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 19
  %905 = load i8*, i8** %904, align 8
  %906 = getelementptr [2 x i8], [2 x i8]* @28, i64 0, i64 0
  %907 = call i32 @strcmp(i8* %905, i8* %906) #10
  %908 = icmp eq i32 %907, 0
  br i1 %908, label %931, label %909

; <label>:909:                                    ; preds = %901
  store i32 0, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 28), align 8
  %910 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %911 = sext i32 19 to i64
  %912 = getelementptr inbounds [128 x i8*], [128 x i8*]* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 21), i64 0, i64 19
  %913 = load i8*, i8** %912, align 8
  %914 = call %struct._IO_FILE* @fopen64(i8* %913, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.66, i64 0, i64 0)), !track !202
  store %struct._IO_FILE* %914, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %915 = icmp eq %struct._IO_FILE* %914, null
  br i1 %915, label %928, label %916

; <label>:916:                                    ; preds = %909
  %917 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %918 = call i32 @fseek(%struct._IO_FILE* %917, i64 0, i32 2)
  %919 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %920 = call i64 @ftell(%struct._IO_FILE* %919)
  %921 = icmp sle i64 %920, 0
  %922 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  br i1 %921, label %923, label %74

; <label>:923:                                    ; preds = %916
  %924 = call i32 @fclose(%struct._IO_FILE* %922)
  store %struct._IO_FILE* null, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %925 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.68, i64 0, i64 0))
  %926 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %927 = add nsw i32 19, 1
  store i32 20, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge.19

; <label>:928:                                    ; preds = %909
  call void @perror(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.67, i64 0, i64 0))
  %929 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %930 = add nsw i32 19, 1
  store i32 20, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge.19

; <label>:931:                                    ; preds = %901
  store i32 1, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 28), align 8
  %932 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
  %933 = call i32 @fileno(%struct._IO_FILE* %932) #9
  %934 = call %struct._IO_FILE* @fdopen(i32 %933, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.66, i64 0, i64 0)) #9, !track !201
  store %struct._IO_FILE* %934, %struct._IO_FILE** getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 22), align 8
  %935 = icmp eq %struct._IO_FILE* %934, null
  br i1 %935, label %936, label %50

; <label>:936:                                    ; preds = %931
  call void @perror(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.67, i64 0, i64 0))
  %937 = load i32, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  %938 = add nsw i32 19, 1
  store i32 20, i32* getelementptr inbounds (%struct.options, %struct.options* @opt, i64 0, i32 23), align 8
  br label %.backedge.19

.backedge.19:                                     ; preds = %936, %928, %923
  call void @__loop_iteration_test___5()
  call void @unroll_loop(i32 108)
  %939 = load i32, i32* %24, align 8
  br label %.loopexit.loopexit
}

declare void @__loop_termination_test___5()

declare void @__loop_iteration_test___5()

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "track_func"="true" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { nounwind readonly }
attributes #11 = { noreturn nounwind }
attributes #12 = { noreturn }
attributes #13 = { nounwind readnone }

!llvm.ident = !{!13, !13, !13, !13, !13}
!llvm.module.flags = !{!14}

!0 = !{i64 54}
!1 = !{i64 129}
!2 = !{i64 1}
!3 = !{i64 41}
!4 = !{i64 2}
!5 = !{i64 11}
!6 = !{i64 40}
!7 = !{i64 46}
!8 = !{i64 128}
!9 = !{i64 12}
!10 = !{i64 127}
!11 = !{i64 35}
!12 = !{i64 0}
!13 = !{!"clang version 7.0.0 (tags/RELEASE_700/final)"}
!14 = !{i32 1, !"wchar_size", i32 4}
!15 = !{i64 125}
!16 = !{i64 124}
!17 = !{i64 123}
!18 = !{i64 122}
!19 = !{i64 121}
!20 = !{i64 4}
!21 = !{i64 33}
!22 = !{i64 120}
!23 = !{i64 31}
!24 = !{i64 119}
!25 = !{i64 8}
!26 = !{i64 118}
!27 = !{i64 117}
!28 = !{i64 116}
!29 = !{i64 130}
!30 = !{i64 114}
!31 = !{i64 113}
!32 = !{i64 112}
!33 = !{i64 111}
!34 = !{i64 110}
!35 = !{i64 109}
!36 = !{i64 108}
!37 = !{i64 107}
!38 = !{i64 106}
!39 = !{i64 105}
!40 = !{i64 104}
!41 = !{i64 149}
!42 = !{i64 148}
!43 = !{i64 145}
!44 = !{i64 159}
!45 = !{i64 103}
!46 = !{i64 102}
!47 = !{i64 144}
!48 = !{i64 158}
!49 = !{i64 139}
!50 = !{i64 138}
!51 = !{i64 67}
!52 = !{i64 137}
!53 = !{i64 136}
!54 = !{i64 63}
!55 = !{i64 135}
!56 = !{i64 134}
!57 = !{i64 48}
!58 = !{i64 133}
!59 = !{i64 132}
!60 = !{i64 131}
!61 = !{i64 74}
!62 = !{i64 72}
!63 = !{i64 71}
!64 = !{i64 70}
!65 = !{i64 73}
!66 = !{i64 32}
!67 = !{i64 28}
!68 = !{i64 61}
!69 = !{i64 69}
!70 = !{i64 53}
!71 = !{i64 19}
!72 = !{i64 44}
!73 = !{i64 9}
!74 = !{i64 15}
!75 = !{i64 59}
!76 = !{i64 3}
!77 = !{i64 157}
!78 = !{i64 156}
!79 = !{i64 155}
!80 = !{i64 154}
!81 = !{i64 153}
!82 = !{i64 152}
!83 = !{i64 151}
!84 = !{i64 150}
!85 = !{i64 43}
!86 = !{i64 97}
!87 = !{i64 96}
!88 = !{i64 87}
!89 = !{i64 95}
!90 = !{i64 94}
!91 = !{i64 93}
!92 = !{i64 92}
!93 = !{i64 91}
!94 = !{i64 90}
!95 = !{i64 89}
!96 = !{i64 88}
!97 = !{i64 101}
!98 = !{i64 86}
!99 = !{i64 147}
!100 = !{i64 146}
!101 = !{i64 85}
!102 = !{i64 84}
!103 = !{i64 83}
!104 = !{i64 82}
!105 = !{i64 81}
!106 = !{i64 80}
!107 = !{i64 79}
!108 = !{i64 78}
!109 = !{i64 77}
!110 = !{i64 76}
!111 = !{i64 75}
!112 = !{i64 143}
!113 = !{i64 252}
!114 = !{i64 251}
!115 = !{i64 250}
!116 = !{i64 7}
!117 = !{i64 100}
!118 = !{i64 68}
!119 = !{i64 99}
!120 = !{i64 21}
!121 = !{i64 45}
!122 = !{i64 10}
!123 = !{i64 14}
!124 = !{i64 98}
!125 = !{i64 5}
!126 = !{i64 249}
!127 = !{i64 248}
!128 = !{i64 247}
!129 = !{i64 246}
!130 = !{i64 245}
!131 = !{i64 244}
!132 = !{i64 243}
!133 = !{i64 242}
!134 = !{i64 241}
!135 = !{i64 240}
!136 = !{i64 239}
!137 = !{i64 238}
!138 = !{i64 174}
!139 = !{i64 253}
!140 = !{i64 236}
!141 = !{i64 235}
!142 = !{i64 234}
!143 = !{i64 233}
!144 = !{i64 232}
!145 = !{i64 231}
!146 = !{i64 230}
!147 = !{i64 229}
!148 = !{i64 228}
!149 = !{i64 227}
!150 = !{i64 226}
!151 = !{i64 225}
!152 = !{i64 224}
!153 = !{i64 223}
!154 = !{i64 269}
!155 = !{i64 284}
!156 = !{i64 283}
!157 = !{i64 282}
!158 = !{i64 281}
!159 = !{i64 280}
!160 = !{i64 22}
!161 = !{i64 6}
!162 = !{i64 29}
!163 = !{i64 52}
!164 = !{i64 279}
!165 = !{i64 278}
!166 = !{i64 277}
!167 = !{i64 276}
!168 = !{i64 275}
!169 = !{i64 66}
!170 = !{i64 17}
!171 = !{i64 115}
!172 = !{i64 142}
!173 = !{i64 141}
!174 = !{i64 126}
!175 = !{i64 140}
!176 = !{i64 274}
!177 = !{i64 273}
!178 = !{i64 272}
!179 = !{i64 271}
!180 = !{i64 270}
!181 = !{i64 285}
!182 = !{i64 268}
!183 = !{i64 267}
!184 = !{i64 266}
!185 = !{i64 39}
!186 = !{i64 265}
!187 = !{i64 62}
!188 = !{i64 55}
!189 = !{i64 264}
!190 = !{i64 263}
!191 = !{i64 262}
!192 = !{i64 261}
!193 = !{i64 260}
!194 = !{i64 259}
!195 = !{i64 258}
!196 = !{i64 257}
!197 = !{i64 256}
!198 = !{i64 255}
!199 = !{i64 254}
!200 = !{i64 237}
!201 = !{i64 189}
!202 = !{i64 188}
!203 = !{i64 37}
!204 = !{i64 187}
!205 = !{i64 20}
!206 = !{i64 58}
!207 = !{i64 18}
!208 = !{i64 186}
!209 = !{i64 185}
!210 = !{i64 184}
!211 = !{i64 183}
!212 = !{i64 182}
!213 = !{i64 181}
!214 = !{i64 16}
!215 = !{i64 180}
!216 = !{i64 27}
!217 = !{i64 24}
!218 = !{i64 38}
!219 = !{!"1"}
!220 = !{i64 179}
!221 = !{i64 178}
!222 = !{i64 177}
!223 = !{i64 176}
!224 = !{i64 175}
!225 = !{i64 190}
!226 = !{i64 173}
!227 = !{i64 36}
!228 = !{i64 172}
!229 = !{i64 171}
!230 = !{i64 170}
!231 = !{i64 169}
!232 = !{i64 168}
!233 = !{i64 167}
!234 = !{i64 166}
!235 = !{i64 165}
!236 = !{i64 164}
!237 = !{i64 163}
!238 = !{i64 162}
!239 = !{i64 161}
!240 = !{i64 160}
!241 = !{i64 206}
!242 = !{i64 221}
!243 = !{i64 220}
!244 = !{i64 219}
!245 = !{i64 218}
!246 = !{i64 217}
!247 = !{i64 216}
!248 = !{i64 215}
!249 = !{i64 214}
!250 = !{i64 213}
!251 = !{i64 212}
!252 = !{i64 211}
!253 = !{i64 210}
!254 = !{i64 209}
!255 = !{i64 208}
!256 = !{i64 65}
!257 = !{i64 64}
!258 = !{i64 207}
!259 = !{i64 222}
!260 = !{i64 205}
!261 = !{i64 42}
!262 = !{i64 51}
!263 = !{i64 50}
!264 = !{i64 26}
!265 = !{i64 60}
!266 = !{i64 49}
!267 = !{i64 23}
!268 = !{i64 204}
!269 = !{i64 203}
!270 = !{i64 202}
!271 = !{i64 25}
!272 = !{i64 30}
!273 = !{i64 201}
!274 = !{i64 47}
!275 = !{i64 13}
!276 = !{i64 200}
!277 = !{i64 199}
!278 = !{i64 34}
!279 = !{i64 198}
!280 = !{i64 197}
!281 = !{i64 57}
!282 = !{i64 196}
!283 = !{i64 195}
!284 = !{i64 194}
!285 = !{i64 193}
!286 = !{i64 192}
!287 = !{i64 56}
!288 = !{i64 191}
