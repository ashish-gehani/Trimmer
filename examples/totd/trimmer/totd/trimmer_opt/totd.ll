; ModuleID = 'totd.bc'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%struct.generic_list = type { %struct.generic_list*, %struct.generic_list*, i8* }
%struct.anon = type { %union.anon.79, i16, i16, i64 }
%union.anon.79 = type { %struct.sockaddr }
%struct.sockaddr = type { i16, [14 x i8] }
%struct.qset = type { %struct.gqueue*, %struct.gqueue* }
%struct.gqueue = type { %struct.gqueue*, i8* }
%struct.anon.124 = type { i32, void (i32)*, void ()* }
%struct.in6_addr = type { %union.anon.1 }
%union.anon.1 = type { [4 x i32] }
%struct.ifconf = type { i32, %union.anon }
%union.anon = type { i8* }
%struct.ToT = type { i8*, i8*, i8*, i8*, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [30 x [25 x i8]], %struct.generic_list*, %struct.generic_list*, i32, [31 x i8*], i32, [30 x %struct.in6_addr], [30 x %struct.in6_addr], [30 x i32] }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }
%struct.context = type { %struct.context*, %struct.context*, i32, i32, %struct.generic_list*, %struct.generic_list*, %struct.ev_to_data*, i32 (%struct.context*)*, i32 (%struct.context*)*, [256 x i8], i32, i16, i16, %struct.generic_list*, %struct.generic_list*, %struct.generic_list*, %union.anon.0, i32, i8*, %struct.nia*, i16, i16, %struct.sockaddr*, i32 }
%struct.ev_to_data = type { i64, i32 (%struct.ev_to_data*)*, i32, %union.anon }
%union.anon.0 = type { %struct.mesg_hdr* }
%struct.mesg_hdr = type { i16, i16, i16, i16, i16, i16 }
%struct.nia = type { %struct.sockaddr*, i32, i32 }
%struct.rr_set = type { i32, i64, %union.u_key, i64, %union.u_data }
%union.u_key = type { %struct.key_info* }
%struct.key_info = type { i16, i16, i16 }
%union.u_data = type { %struct.data_data* }
%struct.data_data = type { i16 }
%struct.rr = type { i32, i16 }
%struct.ev_to_data.14 = type { i64, {}*, i32, %union.anon }
%struct.context.19 = type { %struct.context.19*, %struct.context.19*, i32, i32, %struct.generic_list*, %struct.generic_list*, %struct.ev_to_data.14*, i32 (%struct.context.19*)*, i32 (%struct.context.19*)*, [256 x i8], i32, i16, i16, %struct.generic_list*, %struct.generic_list*, %struct.generic_list*, %union.anon.0, i32, i8*, %struct.nia*, i16, i16, %struct.sockaddr*, i32 }
%struct.rr_list = type { %struct.rr_list*, i32, i32, %struct.rr* }
%struct.RRset_Couple = type { %struct.rr_set*, %struct.rr_list* }
%struct.sockaddr_storage = type { i16, [118 x i8], i64 }
%struct.ev_tcp_common_data = type { i32, %struct.context* }
%struct.fd_set = type { [16 x i64] }
%struct.sockaddr_in = type { i16, i16, %struct.in_addr, [8 x i8] }
%struct.in_addr = type { i32 }
%struct.sockaddr_in6 = type { i16, i16, i32, %struct.in6_addr, i32 }
%struct.addrinfo = type { i32, i32, i32, i32, i32, %struct.sockaddr*, i8*, %struct.addrinfo* }
%struct.fwd = type { [257 x i8], i32, %struct.sockaddr*, i32, i64, i32 }
%struct.context.69 = type { %struct.context.69*, %struct.context.69*, i32, i32, %struct.generic_list*, %struct.generic_list*, %struct.ev_to_data*, {}*, {}*, [256 x i8], i32, i16, i16, %struct.generic_list*, %struct.generic_list*, %struct.generic_list*, %union.anon.0, i32, i8*, %struct.nia*, i16, i16, %struct.sockaddr*, i32 }
%struct.context.107 = type { %struct.context.107*, %struct.context.107*, i32, i32, %struct.generic_list*, %struct.generic_list*, %struct.ev_to_data*, {}*, {}*, [256 x i8], i32, i16, i16, %struct.generic_list*, %struct.generic_list*, %struct.generic_list*, %union.anon.0, i32, i8*, %struct.nia*, i16, i16, %struct.sockaddr*, i32 }
%struct.ev_sig_data = type { void ()* }
%struct.ev_udp_in_data = type { %struct.context*, %struct.sockaddr*, i16 }
%struct.ifreq = type { %union.anon.1.154, %union.anon.2 }
%union.anon.1.154 = type { [16 x i8] }
%union.anon.2 = type { %struct.ifmap }
%struct.ifmap = type { i64, i64, i16, i8, i8, i8 }
%struct.context.165 = type { %struct.context.165*, %struct.context.165*, i32, i32, %struct.generic_list*, %struct.generic_list*, %struct.ev_to_data*, {}*, {}*, [256 x i8], i32, i16, i16, %struct.generic_list*, %struct.generic_list*, %struct.generic_list*, %union.anon.0, i32, i8*, %struct.nia*, i16, i16, %struct.sockaddr*, i32 }
%struct.passwd = type { i8*, i8*, i32, i32, i8*, i8*, i8* }
%struct.group = type { i8*, i8*, i32, i8** }
%struct.timeval = type { i64, i64 }

@.str = private unnamed_addr constant [16 x i8] c"request_start()\00", align 1
@.str.1 = private unnamed_addr constant [10 x i8] c"%s: start\00", align 1
@.str.2 = private unnamed_addr constant [23 x i8] c"%s: malformed question\00", align 1
@.str.3 = private unnamed_addr constant [24 x i8] c"Query name: %s type: %s\00", align 1
@.str.4 = private unnamed_addr constant [31 x i8] c"%s: converted new ptr name: %s\00", align 1
@.str.5 = private unnamed_addr constant [27 x i8] c"%s: converted ptr name: %s\00", align 1
@.str.6 = private unnamed_addr constant [31 x i8] c"%s: converted scoped qname: %s\00", align 1
@.str.7 = private unnamed_addr constant [29 x i8] c"%s: no forwarders available!\00", align 1
@.str.8 = private unnamed_addr constant [23 x i8] c"Selected forwarder: %s\00", align 1
@.str.9 = private unnamed_addr constant [13 x i8] c"do_forward()\00", align 1
@.str.10 = private unnamed_addr constant [23 x i8] c"%s: constructing query\00", align 1
@do_forward.buf = internal global [65535 x i8] zeroinitializer, align 16
@.str.11 = private unnamed_addr constant [38 x i8] c"%s: failed to keep query in %zd bytes\00", align 1
@.str.12 = private unnamed_addr constant [27 x i8] c"%s: Cannot allocate memory\00", align 1
@.str.13 = private unnamed_addr constant [33 x i8] c"Forward %s query for %s over UDP\00", align 1
@.str.14 = private unnamed_addr constant [33 x i8] c"Forward %s query for %s over TCP\00", align 1
@.str.15 = private unnamed_addr constant [21 x i8] c"Exceeded retry limit\00", align 1
@.str.16 = private unnamed_addr constant [35 x i8] c"Cycled through list of nameservers\00", align 1
@.str.17 = private unnamed_addr constant [40 x i8] c"Retrying query for %s to nameserver: %s\00", align 1
@.str.18 = private unnamed_addr constant [46 x i8] c"Retry %d of %d+%d will time out in %d seconds\00", align 1
@.str.19 = private unnamed_addr constant [20 x i8] c"recursive_process()\00", align 1
@.str.20 = private unnamed_addr constant [22 x i8] c"%s: malformed message\00", align 1
@.str.21 = private unnamed_addr constant [15 x i8] c"%s: child died\00", align 1
@.str.22 = private unnamed_addr constant [19 x i8] c"%s: work state: %d\00", align 1
@.str.23 = private unnamed_addr constant [22 x i8] c"%s: Truncated Message\00", align 1
@.str.24 = private unnamed_addr constant [18 x i8] c"%s: Switch to TCP\00", align 1
@.str.25 = private unnamed_addr constant [24 x i8] c"%s: TCP message too big\00", align 1
@.str.27 = private unnamed_addr constant [5 x i8] c"AAAA\00", align 1
@.str.28 = private unnamed_addr constant [3 x i8] c"A6\00", align 1
@.str.26 = private unnamed_addr constant [34 x i8] c"%s: %s query changed into A query\00", align 1
@.str.29 = private unnamed_addr constant [30 x i8] c"%s: converted PTR response %s\00", align 1
@.str.30 = private unnamed_addr constant [35 x i8] c"%s: converted new PTR response: %s\00", align 1
@.str.31 = private unnamed_addr constant [20 x i8] c"Changed target to A\00", align 1
@.str.32 = private unnamed_addr constant [27 x i8] c"%s: current work state: %d\00", align 1
@.str.45 = private unnamed_addr constant [24 x i8] c"cname_without_crecord()\00", align 1
@.str.46 = private unnamed_addr constant [35 x i8] c"%s: Searching for CNAME in answers\00", align 1
@.str.47 = private unnamed_addr constant [44 x i8] c"%s: Problem: CNAME without canonical record\00", align 1
@.str.33 = private unnamed_addr constant [66 x i8] c"%s: exceeded max number of CNAME links: depth %d. A loop perhaps?\00", align 1
@.str.34 = private unnamed_addr constant [29 x i8] c"Changed target to CNAME name\00", align 1
@.str.35 = private unnamed_addr constant [24 x i8] c"Selected nameserver: %s\00", align 1
@.str.36 = private unnamed_addr constant [30 x i8] c"Add IPv6 addresses to answers\00", align 1
@.str.37 = private unnamed_addr constant [41 x i8] c"Add IPv6 addresses to additional section\00", align 1
@.str.38 = private unnamed_addr constant [58 x i8] c"%s: checked whether to rewrite global into scoped address\00", align 1
@.str.39 = private unnamed_addr constant [25 x i8] c"Converted query name: %s\00", align 1
@.str.40 = private unnamed_addr constant [11 x i8] c"%s: finish\00", align 1
@.str.41 = private unnamed_addr constant [17 x i8] c"request_finish()\00", align 1
@.str.42 = private unnamed_addr constant [28 x i8] c"%s: can't parse answer data\00", align 1
@.str.43 = private unnamed_addr constant [27 x i8] c"%s: process parent context\00", align 1
@.str.44 = private unnamed_addr constant [19 x i8] c"%s: return success\00", align 1
@.str.48 = private unnamed_addr constant [17 x i8] c"response_abort()\00", align 1
@.str.1.49 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.2.50 = private unnamed_addr constant [18 x i8] c"assemble_answer()\00", align 1
@.str.3.51 = private unnamed_addr constant [10 x i8] c"%s: start\00", align 1
@assemble_response.buf = internal global [65535 x i8] zeroinitializer, align 16
@.str.52 = private unnamed_addr constant [27 x i8] c"context_timeout_register()\00", align 1
@.str.1.53 = private unnamed_addr constant [10 x i8] c"%s: start\00", align 1
@.str.2.54 = private unnamed_addr constant [32 x i8] c"%s: duplicate timeout. ignoring\00", align 1
@.str.3.55 = private unnamed_addr constant [20 x i8] c"%s: scheduled in %d\00", align 1
@.str.4.58 = private unnamed_addr constant [17 x i8] c"context_create()\00", align 1
@.str.5.59 = private unnamed_addr constant [7 x i8] c"%s: %p\00", align 1
@.str.6.62 = private unnamed_addr constant [18 x i8] c"context_destroy()\00", align 1
@permutation = internal global [32768 x i16] zeroinitializer, align 16
@mesg_id.range = internal global i32 0, align 4
@mesg_id.index = internal global i32 0, align 4
@.str.65 = private unnamed_addr constant [15 x i8] c"mesg_id() = %d\00", align 1
@.str.1.68 = private unnamed_addr constant [18 x i8] c"mesg_make_query()\00", align 1
@.str.31.71 = private unnamed_addr constant [7 x i8] c"(void)\00", align 1
@.str.32.72 = private unnamed_addr constant [2 x i8] c"A\00", align 1
@.str.33.73 = private unnamed_addr constant [3 x i8] c"NS\00", align 1
@.str.34.74 = private unnamed_addr constant [3 x i8] c"MD\00", align 1
@.str.35.75 = private unnamed_addr constant [3 x i8] c"MF\00", align 1
@.str.36.76 = private unnamed_addr constant [6 x i8] c"CNAME\00", align 1
@.str.37.77 = private unnamed_addr constant [4 x i8] c"SOA\00", align 1
@.str.38.78 = private unnamed_addr constant [3 x i8] c"MB\00", align 1
@.str.39.79 = private unnamed_addr constant [3 x i8] c"MG\00", align 1
@.str.40.80 = private unnamed_addr constant [3 x i8] c"MR\00", align 1
@.str.41.81 = private unnamed_addr constant [5 x i8] c"NULL\00", align 1
@.str.42.82 = private unnamed_addr constant [4 x i8] c"WKS\00", align 1
@.str.43.83 = private unnamed_addr constant [4 x i8] c"PTR\00", align 1
@.str.44.84 = private unnamed_addr constant [6 x i8] c"HINFO\00", align 1
@.str.45.85 = private unnamed_addr constant [6 x i8] c"MINFO\00", align 1
@.str.46.86 = private unnamed_addr constant [3 x i8] c"MX\00", align 1
@.str.47.87 = private unnamed_addr constant [4 x i8] c"TXT\00", align 1
@.str.48.88 = private unnamed_addr constant [3 x i8] c"RP\00", align 1
@.str.49 = private unnamed_addr constant [5 x i8] c"AAAA\00", align 1
@.str.50 = private unnamed_addr constant [4 x i8] c"SRV\00", align 1
@.str.51 = private unnamed_addr constant [3 x i8] c"A6\00", align 1
@.str.52.89 = private unnamed_addr constant [6 x i8] c"UINFO\00", align 1
@.str.53 = private unnamed_addr constant [5 x i8] c"TSIG\00", align 1
@.str.54 = private unnamed_addr constant [5 x i8] c"IXFR\00", align 1
@.str.55 = private unnamed_addr constant [5 x i8] c"AXFR\00", align 1
@.str.28.90 = private unnamed_addr constant [4 x i8] c"ANY\00", align 1
@.str.56 = private unnamed_addr constant [26 x i8] c"Unknown resource type(%d)\00", align 1
@.str.30.91 = private unnamed_addr constant [8 x i8] c"UNKNOWN\00", align 1
@.str.2.92 = private unnamed_addr constant [31 x i8] c"%s: (qtype: %s, id: %d): start\00", align 1
@.str.3.93 = private unnamed_addr constant [23 x i8] c"%s: qname offset = %zd\00", align 1
@.str.4.94 = private unnamed_addr constant [30 x i8] c"%s: qtype/qclass offset = %zd\00", align 1
@.str.5.99 = private unnamed_addr constant [24 x i8] c"mesg_write_rrset_list()\00", align 1
@.str.6.100 = private unnamed_addr constant [11 x i8] c"%s: start.\00", align 1
@.str.7.101 = private unnamed_addr constant [19 x i8] c"%s: write a record\00", align 1
@.str.57 = private unnamed_addr constant [14 x i8] c"write_dname()\00", align 1
@.str.21.102 = private unnamed_addr constant [10 x i8] c"%s: start\00", align 1
@.str.58 = private unnamed_addr constant [30 x i8] c"%s: return (written_len = %d)\00", align 1
@.str.8.103 = private unnamed_addr constant [23 x i8] c"write ownername failed\00", align 1
@.str.9.104 = private unnamed_addr constant [19 x i8] c"write rdata failed\00", align 1
@.str.10.105 = private unnamed_addr constant [22 x i8] c"%s: now counter = %zd\00", align 1
@.str.11.106 = private unnamed_addr constant [14 x i8] c"%s: return %d\00", align 1
@.str.12.109 = private unnamed_addr constant [22 x i8] c"query message overrun\00", align 1
@.str.22.112 = private unnamed_addr constant [14 x i8] c"token_len: %d\00", align 1
@.str.23.113 = private unnamed_addr constant [4 x i8] c"\5C[x\00", align 1
@.str.24.114 = private unnamed_addr constant [5 x i8] c"%c%c\00", align 1
@.str.25.115 = private unnamed_addr constant [6 x i8] c"/%u].\00", align 1
@.str.13.116 = private unnamed_addr constant [21 x i8] c"record invalid -- %s\00", align 1
@.str.14.117 = private unnamed_addr constant [28 x i8] c"record invalid -- SOA MNAME\00", align 1
@.str.15.118 = private unnamed_addr constant [28 x i8] c"record invalid -- SOA RNAME\00", align 1
@.str.16.119 = private unnamed_addr constant [30 x i8] c"record invalid -- MX EXCHANGE\00", align 1
@.str.17.120 = private unnamed_addr constant [32 x i8] c"record invalid -- RP MBOX-DNAME\00", align 1
@.str.18.121 = private unnamed_addr constant [31 x i8] c"record invalid -- RP TXT-DNAME\00", align 1
@.str.19.122 = private unnamed_addr constant [25 x i8] c"unknown resource type %d\00", align 1
@.str.20.125 = private unnamed_addr constant [13 x i8] c"mesg_parse()\00", align 1
@.str.59 = private unnamed_addr constant [16 x i8] c"mesg_read_sec()\00", align 1
@.str.60 = private unnamed_addr constant [55 x i8] c"%s: matching record found rrs->dname = %s / rname = %s\00", align 1
@.str.61 = private unnamed_addr constant [31 x i8] c"%s: make each RRset from list.\00", align 1
@.str.62 = private unnamed_addr constant [8 x i8] c"%s: end\00", align 1
@.str.63 = private unnamed_addr constant [30 x i8] c"%s: message extraction failed\00", align 1
@.str.26.126 = private unnamed_addr constant [3 x i8] c"IN\00", align 1
@.str.27.127 = private unnamed_addr constant [5 x i8] c"NONE\00", align 1
@.str.29.128 = private unnamed_addr constant [27 x i8] c"Unknown resource class(%d)\00", align 1
@.str.131 = private unnamed_addr constant [18 x i8] c"conv_trick_list()\00", align 1
@.str.1.132 = private unnamed_addr constant [10 x i8] c"%s: start\00", align 1
@.str.26.133 = private unnamed_addr constant [14 x i8] c"search_name()\00", align 1
@.str.2.134 = private unnamed_addr constant [17 x i8] c"%s: duplicate %s\00", align 1
@.str.3.135 = private unnamed_addr constant [19 x i8] c"%s: converting: %s\00", align 1
@.str.27.136 = private unnamed_addr constant [19 x i8] c"conv_trick_rrset()\00", align 1
@.str.4.137 = private unnamed_addr constant [28 x i8] c"%s: Can't convert A to AAAA\00", align 1
@.str.6.138 = private unnamed_addr constant [4 x i8] c"add\00", align 1
@.str.7.139 = private unnamed_addr constant [11 x i8] c"replace by\00", align 1
@.str.5.140 = private unnamed_addr constant [10 x i8] c"%s: %s %s\00", align 1
@.str.8.143 = private unnamed_addr constant [17 x i8] c"conv_trick_ptr()\00", align 1
@.str.9.144 = private unnamed_addr constant [23 x i8] c"Cannot allocate memory\00", align 1
@.str.10.147 = private unnamed_addr constant [20 x i8] c"conv_trick_newptr()\00", align 1
@.str.11.148 = private unnamed_addr constant [14 x i8] c"Out of memory\00", align 1
@.str.12.149 = private unnamed_addr constant [18 x i8] c"conv_trick_conf()\00", align 1
@.str.13.150 = private unnamed_addr constant [39 x i8] c"%s: max number of %d prefixes exceeded\00", align 1
@.str.14.151 = private unnamed_addr constant [7 x i8] c"%s: %s\00", align 1
@.str.15.152 = private unnamed_addr constant [28 x i8] c"%s: invalid IPv6 prefix: %s\00", align 1
@.str.16.155 = private unnamed_addr constant [4 x i8] c"INT\00", align 1
@.str.17.156 = private unnamed_addr constant [4 x i8] c"int\00", align 1
@.str.18.157 = private unnamed_addr constant [4 x i8] c"IP6\00", align 1
@.str.19.158 = private unnamed_addr constant [4 x i8] c"ip6\00", align 1
@.str.20.159 = private unnamed_addr constant [3 x i8] c"%x\00", align 1
@.str.21.162 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.22.163 = private unnamed_addr constant [14 x i8] c"\07in-addr\04arpa\00", align 1
@.str.23.166 = private unnamed_addr constant [5 x i8] c"ARPA\00", align 1
@.str.24.167 = private unnamed_addr constant [5 x i8] c"arpa\00", align 1
@.str.25.170 = private unnamed_addr constant [15 x i8] c"\07in-addr\04arpa\00\00", align 1
@.str.171 = private unnamed_addr constant [31 x i8] c"ev_tcp_srv_accept(): sock = %d\00", align 1
@.str.1.172 = private unnamed_addr constant [11 x i8] c"accept: %m\00", align 1
@.str.2.173 = private unnamed_addr constant [25 x i8] c"ev_tcp_common_register()\00", align 1
@.str.3.174 = private unnamed_addr constant [14 x i8] c"%s: sock = %d\00", align 1
@.str.4.175 = private unnamed_addr constant [23 x i8] c"ev_tcp_common_remove()\00", align 1
@.str.5.176 = private unnamed_addr constant [30 x i8] c"ev_tcp_common_fds: FD_SET(%d)\00", align 1
@ConnL_head = internal global %struct.generic_list* null, align 8
@.str.6.177 = private unnamed_addr constant [33 x i8] c"ev_tcp_conn_in_register(): start\00", align 1
@.str.7.180 = private unnamed_addr constant [31 x i8] c"ev_tcp_conn_in_remove(): start\00", align 1
@.str.8.181 = private unnamed_addr constant [28 x i8] c"ev_tcp_conn_in_fds(): start\00", align 1
@.str.9.182 = private unnamed_addr constant [33 x i8] c"ev_tcp_conn_in_fd_check(): start\00", align 1
@ETOL_head = internal global %struct.generic_list* null, align 8
@.str.10.183 = private unnamed_addr constant [29 x i8] c"ev_tcp_out_register(): start\00", align 1
@.str.11.186 = private unnamed_addr constant [27 x i8] c"ev_tcp_out_remove(): start\00", align 1
@.str.12.187 = private unnamed_addr constant [24 x i8] c"ev_tcp_out_fds(): start\00", align 1
@.str.13.188 = private unnamed_addr constant [29 x i8] c"ev_tcp_out_fd_check(): start\00", align 1
@.str.191 = private unnamed_addr constant [8 x i8] c"[%s]:%d\00", align 1
@.str.1.192 = private unnamed_addr constant [8 x i8] c"::ffff:\00", align 1
@.str.2.193 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.3.194 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.4.195 = private unnamed_addr constant [12 x i8] c"fwd_alloc()\00", align 1
@.str.5.196 = private unnamed_addr constant [27 x i8] c"%s: Cannot allocate memory\00", align 1
@.str.6.197 = private unnamed_addr constant [33 x i8] c"Forwarder %s configured, port %d\00", align 1
@.str.7.198 = private unnamed_addr constant [38 x i8] c"Can't configure forwarder %s, port %d\00", align 1
@.str.8.199 = private unnamed_addr constant [17 x i8] c"fwd_add(): start\00", align 1
@.str.9.200 = private unnamed_addr constant [11 x i8] c"fwd_select\00", align 1
@.str.10.201 = private unnamed_addr constant [12 x i8] c"%s: start()\00", align 1
@.str.11.202 = private unnamed_addr constant [25 x i8] c"No forwarder configured!\00", align 1
@.str.12.203 = private unnamed_addr constant [25 x i8] c"Use initial forwarder %s\00", align 1
@.str.13.204 = private unnamed_addr constant [26 x i8] c"Enable forwarder %s again\00", align 1
@.str.14.205 = private unnamed_addr constant [21 x i8] c"Current forwarder %s\00", align 1
@.str.15.206 = private unnamed_addr constant [10 x i8] c"%s: end()\00", align 1
@.str.16.209 = private unnamed_addr constant [9 x i8] c"fwd_mark\00", align 1
@.str.17.210 = private unnamed_addr constant [28 x i8] c"Mark forwarder with %d: %s \00", align 1
@.str.18.211 = private unnamed_addr constant [33 x i8] c"Disabling forwarder %s (next %s)\00", align 1
@.str.19.214 = private unnamed_addr constant [15 x i8] c"fwd_socketlist\00", align 1
@.str.215 = private unnamed_addr constant [15 x i8] c"queue_create()\00", align 1
@.str.1.216 = private unnamed_addr constant [27 x i8] c"%s: Cannot allocate memory\00", align 1
@.str.2.217 = private unnamed_addr constant [10 x i8] c"enqueue()\00", align 1
@lines = global [17 x i8*] [i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.218, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.1.219, i32 0, i32 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.2.220, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.3.221, i32 0, i32 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.4.222, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.5.223, i32 0, i32 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.6.224, i32 0, i32 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.7.225, i32 0, i32 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.8.226, i32 0, i32 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.9.227, i32 0, i32 0), i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.10.228, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.11.229, i32 0, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.12.230, i32 0, i32 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.13.231, i32 0, i32 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.14.232, i32 0, i32 0), i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.15.233, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.16.234, i32 0, i32 0)], align 16
@.str.218 = private unnamed_addr constant [65 x i8] c"; $Id: totd.conf.sample,v 1.9 2003/09/17 15:56:20 dillema Exp $\0A\00", align 1
@.str.1.219 = private unnamed_addr constant [34 x i8] c"; Totd sample configuration file\0A\00", align 1
@.str.2.220 = private unnamed_addr constant [61 x i8] c"; you can have multiple forwarders, totd will always prefer\0A\00", align 1
@.str.3.221 = private unnamed_addr constant [64 x i8] c"; forwarders listed early and only use forwarders listed later\0A\00", align 1
@.str.4.222 = private unnamed_addr constant [39 x i8] c"; if the first ones are unresponsive.\0A\00", align 1
@.str.5.223 = private unnamed_addr constant [33 x i8] c"forwarder 192.168.0.1 port 5000\0A\00", align 1
@.str.6.224 = private unnamed_addr constant [46 x i8] c"forwarder 3ffe:ffff:fff:f::1234:1234 port 53\0A\00", align 1
@.str.7.225 = private unnamed_addr constant [61 x i8] c"; you can have multiple prefixes or even no prefixes at all\0A\00", align 1
@.str.8.226 = private unnamed_addr constant [41 x i8] c"; totd uses them in round-robin fashion\0A\00", align 1
@.str.9.227 = private unnamed_addr constant [30 x i8] c"prefix 3ffe:abcd:1234:9876::\0A\00", align 1
@.str.10.228 = private unnamed_addr constant [50 x i8] c"; the port totd listens on for incoming requests\0A\00", align 1
@.str.11.229 = private unnamed_addr constant [11 x i8] c"port 5005\0A\00", align 1
@.str.12.230 = private unnamed_addr constant [51 x i8] c"; the pidfile to use (default: /var/run/totd.pid)\0A\00", align 1
@.str.13.231 = private unnamed_addr constant [31 x i8] c"pidfile /var/run/totd5005.pid\0A\00", align 1
@.str.14.232 = private unnamed_addr constant [66 x i8] c"; interfaces totd listens on (UDP only for now and not on Linux)\0A\00", align 1
@.str.15.233 = private unnamed_addr constant [53 x i8] c"; If left out totd will only open wildcard sockets.\0A\00", align 1
@.str.16.234 = private unnamed_addr constant [23 x i8] c"; 6to4 reverse lookup\0A\00", align 1
@llvm.global.annotations = appending global [5 x { i8*, i8*, i8*, i32 }] [{ i8*, i8*, i8*, i32 } { i8* bitcast ([17 x i8*]* @lines to i8*), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.17.235, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.18.236, i32 0, i32 0), i32 21 }, { i8*, i8*, i8*, i32 } { i8* bitcast (i32 (i8*)* @read_config to i8*), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.17.235, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.18.236, i32 0, i32 0), i32 40 }, { i8*, i8*, i8*, i32 } { i8* bitcast (i8** @conf_file to i8*), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.10.548, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.11.549, i32 0, i32 0), i32 58 }, { i8*, i8*, i8*, i32 } { i8* bitcast (i8* (i8*)* @dupStr to i8*), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.10.548, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.11.549, i32 0, i32 0), i32 61 }, { i8*, i8*, i8*, i32 } { i8* bitcast (%struct.ToT* @T to i8*), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.10.548, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.11.549, i32 0, i32 0), i32 16 }], section "llvm.metadata"
@.str.17.235 = private unnamed_addr constant [14 x i8] c"specializeArg\00", section "llvm.metadata"
@.str.18.236 = private unnamed_addr constant [14 x i8] c"read_config.c\00", section "llvm.metadata"
@.str.19.237 = private unnamed_addr constant [34 x i8] c"starting new iteration at line : \00", align 1
@.str.20.238 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.21.239 = private unnamed_addr constant [10 x i8] c"forwarder\00", align 1
@.str.22.240 = private unnamed_addr constant [58 x i8] c"line %d: invalid format: forwarder <IPaddr> [port <port>]\00", align 1
@.str.23.241 = private unnamed_addr constant [5 x i8] c"port\00", align 1
@.str.24.242 = private unnamed_addr constant [61 x i8] c"line %d: invalid format, missing <port> after port attribute\00", align 1
@.str.25.243 = private unnamed_addr constant [60 x i8] c"line %d: invalid format, cannot parse unknown attribute: %s\00", align 1
@.str.26.244 = private unnamed_addr constant [7 x i8] c"prefix\00", align 1
@.str.27.245 = private unnamed_addr constant [45 x i8] c"line %d: invalid format: prefix <IPv6prefix>\00", align 1
@.str.28.246 = private unnamed_addr constant [6 x i8] c"allow\00", align 1
@.str.29.247 = private unnamed_addr constant [44 x i8] c"line %d: invalid format: allow <IP address>\00", align 1
@.str.30.248 = private unnamed_addr constant [34 x i8] c"NOTE: http support not enabled!!!\00", align 1
@.str.31.249 = private unnamed_addr constant [6 x i8] c"retry\00", align 1
@.str.32.250 = private unnamed_addr constant [41 x i8] c"line %d: invalid format: retry <seconds>\00", align 1
@.str.33.251 = private unnamed_addr constant [8 x i8] c"pidfile\00", align 1
@.str.34.252 = private unnamed_addr constant [44 x i8] c"line %d: invalid format: pidfile <filename>\00", align 1
@.str.35.253 = private unnamed_addr constant [11 x i8] c"interfaces\00", align 1
@.str.36.254 = private unnamed_addr constant [52 x i8] c"line %d: invalid format: interfaces <ifa> <ifb> ...\00", align 1
@.str.37.255 = private unnamed_addr constant [42 x i8] c"line %d: to many interfaces, more than %d\00", align 1
@.str.38.256 = private unnamed_addr constant [50 x i8] c"line %d: %d interfaces listed, no wildcard socket\00", align 1
@.str.39.257 = private unnamed_addr constant [2 x i8] c"*\00", align 1
@.str.40.258 = private unnamed_addr constant [40 x i8] c"line %d: invalid format: port <portnum>\00", align 1
@.str.41.259 = private unnamed_addr constant [7 x i8] c"scoped\00", align 1
@.str.42.260 = private unnamed_addr constant [51 x i8] c"line %d: invalid format: scoped <from> <to> <plen>\00", align 1
@.str.43.261 = private unnamed_addr constant [32 x i8] c"can not add scoped %d: %s %s %s\00", align 1
@.str.44.262 = private unnamed_addr constant [26 x i8] c"scoped %d added: %s %s %d\00", align 1
@.str.45.263 = private unnamed_addr constant [44 x i8] c"line %d: unknown keyword in config file: %s\00", align 1
@.str.46.264 = private unnamed_addr constant [41 x i8] c"errors found in config file. errcnt = %d\00", align 1
@.str.47.265 = private unnamed_addr constant [27 x i8] c"configuration file loaded.\00", align 1
@.str.268 = private unnamed_addr constant [20 x i8] c"tcp_request_start()\00", align 1
@.str.1.269 = private unnamed_addr constant [10 x i8] c"%s: start\00", align 1
@.str.5.270 = private unnamed_addr constant [35 x i8] c"tcp_request_wait_connect_process()\00", align 1
@.str.6.271 = private unnamed_addr constant [26 x i8] c"%s: TCP connect succeeded\00", align 1
@.str.13.272 = private unnamed_addr constant [28 x i8] c"tcp_request_writing_process\00", align 1
@.str.27.273 = private unnamed_addr constant [16 x i8] c"tcp_writemesg()\00", align 1
@.str.28.274 = private unnamed_addr constant [28 x i8] c"%s: write length failed: %m\00", align 1
@.str.29.275 = private unnamed_addr constant [21 x i8] c"%s: write failed: %m\00", align 1
@.str.14.276 = private unnamed_addr constant [29 x i8] c"%s: return, continue writing\00", align 1
@.str.16.277 = private unnamed_addr constant [30 x i8] c"tcp_request_readlen_process()\00", align 1
@.str.17.278 = private unnamed_addr constant [38 x i8] c"cannot read length on TCP connection.\00", align 1
@.str.18.279 = private unnamed_addr constant [21 x i8] c"%s: data length = %d\00", align 1
@.str.19.280 = private unnamed_addr constant [27 x i8] c"%s: Cannot allocate memory\00", align 1
@.str.24.281 = private unnamed_addr constant [30 x i8] c"tcp_request_reading_process()\00", align 1
@.str.25.282 = private unnamed_addr constant [27 x i8] c"%s: Read failed on TCP: %m\00", align 1
@.str.26.283 = private unnamed_addr constant [36 x i8] c"connection not responding... closed\00", align 1
@.str.20.284 = private unnamed_addr constant [28 x i8] c"tcp_request_readlen_retry()\00", align 1
@.str.21.285 = private unnamed_addr constant [38 x i8] c"TCP connection not respond.... closed\00", align 1
@.str.22.286 = private unnamed_addr constant [41 x i8] c"Giving up quickly on IPv6 address record\00", align 1
@.str.23.287 = private unnamed_addr constant [27 x i8] c"%s: process parent context\00", align 1
@.str.15.288 = private unnamed_addr constant [41 x i8] c"tcp connection not responding.... closed\00", align 1
@.str.7.289 = private unnamed_addr constant [36 x i8] c"%s: TCP forwarder connect timed out\00", align 1
@.str.10.290 = private unnamed_addr constant [31 x i8] c"tcp_request_wait_connect_retry\00", align 1
@.str.2.291 = private unnamed_addr constant [26 x i8] c"%s: can't open socket: %m\00", align 1
@.str.11.292 = private unnamed_addr constant [26 x i8] c"%s: can't TCP connect: %m\00", align 1
@.str.12.293 = private unnamed_addr constant [32 x i8] c"%s: force retry at zero timeout\00", align 1
@.str.4.294 = private unnamed_addr constant [39 x i8] c"%s: Query will time out in %d seconds.\00", align 1
@.str.8.295 = private unnamed_addr constant [33 x i8] c"Forwarder refused TCP connection\00", align 1
@.str.9.296 = private unnamed_addr constant [26 x i8] c"TCP forwarder unreachable\00", align 1
@.str.3.297 = private unnamed_addr constant [22 x i8] c"%s: can't connect: %m\00", align 1
@.str.300 = private unnamed_addr constant [21 x i8] c"tcp_response_start()\00", align 1
@.str.1.301 = private unnamed_addr constant [10 x i8] c"%s: start\00", align 1
@.str.2.302 = private unnamed_addr constant [31 x i8] c"tcp_response_readlen_process()\00", align 1
@.str.3.303 = private unnamed_addr constant [35 x i8] c"%s: cannot read length TCP message\00", align 1
@.str.4.304 = private unnamed_addr constant [21 x i8] c"%s: data length = %d\00", align 1
@.str.7.305 = private unnamed_addr constant [31 x i8] c"tcp_response_reading_process()\00", align 1
@.str.8.306 = private unnamed_addr constant [32 x i8] c"%s: left %zd bytes -- continue.\00", align 1
@.str.12.307 = private unnamed_addr constant [33 x i8] c"tcp_response_recursive_process()\00", align 1
@.str.13.308 = private unnamed_addr constant [21 x i8] c"%s: return, continue\00", align 1
@.str.14.309 = private unnamed_addr constant [25 x i8] c"response message too big\00", align 1
@.str.16.310 = private unnamed_addr constant [31 x i8] c"tcp_response_writing_process()\00", align 1
@.str.17.311 = private unnamed_addr constant [44 x i8] c"tcp_response_waiting_client_close_process()\00", align 1
@.str.21.312 = private unnamed_addr constant [22 x i8] c"tcp_response_finish()\00", align 1
@.str.18.313 = private unnamed_addr constant [15 x i8] c"%s: read(): %m\00", align 1
@.str.19.314 = private unnamed_addr constant [23 x i8] c"%s: incoming length %d\00", align 1
@.str.20.315 = private unnamed_addr constant [29 x i8] c"%s: return, continue reading\00", align 1
@.str.15.316 = private unnamed_addr constant [19 x i8] c"%s: return, finish\00", align 1
@.str.9.317 = private unnamed_addr constant [19 x i8] c"%s: Request failed\00", align 1
@.str.10.318 = private unnamed_addr constant [16 x i8] c"%s: Totd failed\00", align 1
@.str.11.319 = private unnamed_addr constant [19 x i8] c"%s: end (writing:)\00", align 1
@.str.5.320 = private unnamed_addr constant [29 x i8] c"tcp_response_readlen_retry()\00", align 1
@.str.6.321 = private unnamed_addr constant [42 x i8] c"%s: connection does not respond. closing.\00", align 1
@Ev_dup_table = internal global [1000 x %struct.anon] zeroinitializer, align 16
@.str.322 = private unnamed_addr constant [21 x i8] c"ev_dup(): index = %d\00", align 1
@.str.1.323 = private unnamed_addr constant [29 x i8] c"ev_dup(): duplicate detected\00", align 1
@.str.326 = private unnamed_addr constant [12 x i8] c"list_init()\00", align 1
@.str.1.327 = private unnamed_addr constant [17 x i8] c"%s: new list: %p\00", align 1
@.str.340 = private unnamed_addr constant [40 x i8] c"rr_alloc(): start ttl = %d, rd_len = %d\00", align 1
@.str.1.343 = private unnamed_addr constant [27 x i8] c"start: rr_list_alloc(void)\00", align 1
@.str.2.346 = private unnamed_addr constant [15 x i8] c"rr_list_free()\00", align 1
@.str.3.347 = private unnamed_addr constant [33 x i8] c"%s start: NULL: immediate return\00", align 1
@.str.4.348 = private unnamed_addr constant [15 x i8] c"%s start: (%p)\00", align 1
@.str.5.349 = private unnamed_addr constant [12 x i8] c"%s: free %p\00", align 1
@.str.6.352 = private unnamed_addr constant [45 x i8] c"start: rr_list_add(....,ttl=%d,rd_len=%d...)\00", align 1
@.str.7.355 = private unnamed_addr constant [28 x i8] c"rrset_alloc(): allocated %p\00", align 1
@.str.8.358 = private unnamed_addr constant [32 x i8] c"start: rrset_create(%s,%s,....)\00", align 1
@.str.10.361 = private unnamed_addr constant [37 x i8] c"rrset_free(%p): link %d -> destroyed\00", align 1
@.str.11.362 = private unnamed_addr constant [30 x i8] c"rrset_free(%p): link %d -> %d\00", align 1
@.str.9.363 = private unnamed_addr constant [30 x i8] c"rrset_create: final length %d\00", align 1
@.str.12.368 = private unnamed_addr constant [30 x i8] c"rrset_copy(%p): link %d -> %d\00", align 1
@.str.375 = private unnamed_addr constant [20 x i8] c"udp_request_start()\00", align 1
@.str.1.376 = private unnamed_addr constant [10 x i8] c"%s: start\00", align 1
@.str.7.377 = private unnamed_addr constant [22 x i8] c"udp_request_process()\00", align 1
@.str.8.378 = private unnamed_addr constant [20 x i8] c"udp_request_retry()\00", align 1
@.str.9.379 = private unnamed_addr constant [41 x i8] c"Giving up quickly on IPv6 address record\00", align 1
@.str.10.380 = private unnamed_addr constant [27 x i8] c"%s: process parent context\00", align 1
@.str.11.381 = private unnamed_addr constant [19 x i8] c"%s: return success\00", align 1
@.str.12.382 = private unnamed_addr constant [33 x i8] c"retry failed(default socket): %m\00", align 1
@.str.13.383 = private unnamed_addr constant [26 x i8] c"can't send whole datagram\00", align 1
@.str.6.384 = private unnamed_addr constant [8 x i8] c"%s: end\00", align 1
@.str.2.385 = private unnamed_addr constant [31 x i8] c"Query to big for UDP datagram.\00", align 1
@.str.3.386 = private unnamed_addr constant [16 x i8] c"send failed: %m\00", align 1
@.str.4.387 = private unnamed_addr constant [32 x i8] c"%s: force retry at zero timeout\00", align 1
@.str.5.388 = private unnamed_addr constant [30 x i8] c"Query times out in %d seconds\00", align 1
@ev_to_queue = internal global %struct.qset* null, align 8
@.str.391 = private unnamed_addr constant [17 x i8] c"ev_to_register()\00", align 1
@.str.1.392 = private unnamed_addr constant [27 x i8] c"%s: Cannot allocate memory\00", align 1
@.str.2.393 = private unnamed_addr constant [22 x i8] c"%s: add event to head\00", align 1
@.str.3.394 = private unnamed_addr constant [16 x i8] c"%s: add to tail\00", align 1
@.str.4.395 = private unnamed_addr constant [18 x i8] c"%s: add to middle\00", align 1
@.str.5.396 = private unnamed_addr constant [21 x i8] c"ev_timeout_process()\00", align 1
@.str.6.397 = private unnamed_addr constant [25 x i8] c"%s: call timeout handler\00", align 1
@.str.7.398 = private unnamed_addr constant [25 x i8] c"%s: cancel timeout event\00", align 1
@.str.8.399 = private unnamed_addr constant [18 x i8] c"ev_to_data_free()\00", align 1
@.str.9.400 = private unnamed_addr constant [35 x i8] c"%s: unknown type for timeout event\00", align 1
@.str.10.401 = private unnamed_addr constant [25 x i8] c"ev_to_register_ifcheck()\00", align 1
@.str.11.402 = private unnamed_addr constant [10 x i8] c"%s: start\00", align 1
@.str.12.403 = private unnamed_addr constant [29 x i8] c"%s: can't allocate new event\00", align 1
@.str.13.404 = private unnamed_addr constant [24 x i8] c"ev_to_handler_ifcheck()\00", align 1
@.str.14.405 = private unnamed_addr constant [31 x i8] c"%s: Socket List still the same\00", align 1
@.str.15.406 = private unnamed_addr constant [24 x i8] c"%s: Socket List updated\00", align 1
@.str.16.407 = private unnamed_addr constant [31 x i8] c"%s: Can't get new socket list!\00", align 1
@.str.408 = private unnamed_addr constant [21 x i8] c"udp_response_start()\00", align 1
@.str.1.409 = private unnamed_addr constant [10 x i8] c"%s: start\00", align 1
@.str.2.410 = private unnamed_addr constant [22 x i8] c"%s: OPCODE = OP_QUERY\00", align 1
@.str.5.411 = private unnamed_addr constant [22 x i8] c"udp_response_finish()\00", align 1
@.str.6.412 = private unnamed_addr constant [40 x i8] c"Overweight, dropping additional section\00", align 1
@.str.7.413 = private unnamed_addr constant [39 x i8] c"Overweight, dropping authority section\00", align 1
@.str.8.414 = private unnamed_addr constant [31 x i8] c"Obese, answers too big for UDP\00", align 1
@.str.9.415 = private unnamed_addr constant [34 x i8] c"Even error msg is too big for UDP\00", align 1
@.str.10.416 = private unnamed_addr constant [24 x i8] c"failed to send message.\00", align 1
@.str.4.417 = private unnamed_addr constant [51 x i8] c"udp_response_recursive_retry should not be called.\00", align 1
@.str.3.418 = private unnamed_addr constant [23 x i8] c"%s: OPCODE unknown(%d)\00", align 1
@Ev_matrix = constant [6 x %struct.anon.124] [%struct.anon.124 { i32 2, void (i32)* @ev_signal_initiator_generic, void ()* @ev_handler_cleanup }, %struct.anon.124 { i32 1, void (i32)* inttoptr (i64 1 to void (i32)*), void ()* null }, %struct.anon.124 { i32 15, void (i32)* @ev_signal_initiator_generic, void ()* @ev_handler_cleanup }, %struct.anon.124 { i32 10, void (i32)* @ev_signal_initiator_generic, void ()* @ev_handler_sigusr1 }, %struct.anon.124 { i32 12, void (i32)* @ev_signal_initiator_generic, void ()* @ev_handler_sigusr2 }, %struct.anon.124 { i32 -1, void (i32)* null, void ()* null }], align 16
@.str.1.419 = private unnamed_addr constant [38 x i8] c"ev_signal_initiator_generic(): start.\00", align 1
@Ev_signal_queue = internal global %struct.qset* null, align 8
@.str.2.420 = private unnamed_addr constant [52 x i8] c"ev_signal_initiator_generic(): no queue to process.\00", align 1
@.str.3.421 = private unnamed_addr constant [48 x i8] c"ev_signal_initiator_generic(): memory exhausted\00", align 1
@.str.4.422 = private unnamed_addr constant [50 x i8] c"ev_signal_initiator_generic(): signal queue full?\00", align 1
@.str.5.423 = private unnamed_addr constant [41 x i8] c"ev_handler_sigusr1(): processing SIGUSR1\00", align 1
@.str.6.424 = private unnamed_addr constant [41 x i8] c"ev_handler_sigusr2(): processing SIGUSR2\00", align 1
@.str.425 = private unnamed_addr constant [42 x i8] c"ev_signal_process(): no queue to process.\00", align 1
@UDPL_head = internal global %struct.generic_list* null, align 8
@UDPL_tail = internal global %struct.generic_list* null, align 8
@.str.428 = private unnamed_addr constant [21 x i8] c"ev_udp_in_register()\00", align 1
@.str.1.429 = private unnamed_addr constant [10 x i8] c"%s: id=%d\00", align 1
@.str.2.430 = private unnamed_addr constant [7 x i8] c"%s: %p\00", align 1
@.str.3.433 = private unnamed_addr constant [17 x i8] c"ev_udp_in_read()\00", align 1
@.str.4.434 = private unnamed_addr constant [13 x i8] c"recvfrom: %m\00", align 1
@.str.5.435 = private unnamed_addr constant [33 x i8] c"%s: read from sockid %d, len %d.\00", align 1
@.str.6.436 = private unnamed_addr constant [27 x i8] c"ignoring too short message\00", align 1
@.str.7.437 = private unnamed_addr constant [30 x i8] c"%s: duplicate request ignored\00", align 1
@.str.8.438 = private unnamed_addr constant [33 x i8] c"%s: unknown UDP response ignored\00", align 1
@.str.9.439 = private unnamed_addr constant [27 x i8] c"%s: Create new transaction\00", align 1
@.str.10.440 = private unnamed_addr constant [24 x i8] c"no socket for interface\00", align 1
@.str.11.441 = private unnamed_addr constant [23 x i8] c"%s: resume transaction\00", align 1
@.str.444 = private unnamed_addr constant [11 x i8] c"nia_free()\00", align 1
@.str.1.445 = private unnamed_addr constant [26 x i8] c"%s: socket close(fd = %d)\00", align 1
@NI_head = internal global %struct.generic_list* null, align 8
@.str.2.450 = private unnamed_addr constant [14 x i8] c"nia_fds_set()\00", align 1
@.str.3.451 = private unnamed_addr constant [15 x i8] c"%s: FD_SET(%d)\00", align 1
@.str.4.452 = private unnamed_addr constant [16 x i8] c"nia_fds_isset()\00", align 1
@.str.5.453 = private unnamed_addr constant [16 x i8] c"%s: %d FD_ISSET\00", align 1
@NI_wildcard = internal global %struct.generic_list* null, align 8
@in6addr_any = external constant %struct.in6_addr, align 4
@NI_wildcard6 = internal global %struct.generic_list* null, align 8
@.str.19.454 = private unnamed_addr constant [18 x i8] c"net_get_ifaddrs()\00", align 1
@.str.20.455 = private unnamed_addr constant [25 x i8] c"%s: get iflist error: %m\00", align 1
@net_get_ifaddrs.ifc_old = internal global %struct.ifconf zeroinitializer, align 8
@.str.24.456 = private unnamed_addr constant [30 x i8] c"net_ifc_cmp(): lengths differ\00", align 1
@.str.25.457 = private unnamed_addr constant [66 x i8] c"net_ifc_cmp(): if1 %s, if2 %s, af1 %d, af2 %d, addr1 %s, addr2 %s\00", align 1
@.str.21.458 = private unnamed_addr constant [30 x i8] c"%s: checked interface data %d\00", align 1
@.str.26.459 = private unnamed_addr constant [4 x i8] c"any\00", align 1
@.str.27.460 = private unnamed_addr constant [4 x i8] c"all\00", align 1
@.str.22.461 = private unnamed_addr constant [26 x i8] c"Found address %s on if %s\00", align 1
@.str.23.462 = private unnamed_addr constant [29 x i8] c"Ignoring address %s on if %s\00", align 1
@.str.8.465 = private unnamed_addr constant [18 x i8] c"net_mesg_socket()\00", align 1
@.str.9.466 = private unnamed_addr constant [27 x i8] c"%s: socket open failed: %m\00", align 1
@.str.10.467 = private unnamed_addr constant [25 x i8] c"%s: socket open(fd = %d)\00", align 1
@.str.11.468 = private unnamed_addr constant [15 x i8] c"setsockopt: %m\00", align 1
@.str.12.469 = private unnamed_addr constant [33 x i8] c"Can not bind datagram socket: %m\00", align 1
@.str.13.470 = private unnamed_addr constant [24 x i8] c"Listening on %s for UDP\00", align 1
@.str.14.471 = private unnamed_addr constant [20 x i8] c"net_stream_socket()\00", align 1
@.str.15.472 = private unnamed_addr constant [26 x i8] c"Can't bind TCP socket: %m\00", align 1
@.str.16.473 = private unnamed_addr constant [34 x i8] c"Can't ioctl on service socket: %m\00", align 1
@.str.17.474 = private unnamed_addr constant [18 x i8] c"Listen failed: %m\00", align 1
@.str.18.475 = private unnamed_addr constant [24 x i8] c"Listening on %s for TCP\00", align 1
@.str.6.480 = private unnamed_addr constant [16 x i8] c"net_mesg_send()\00", align 1
@.str.7.481 = private unnamed_addr constant [35 x i8] c"%s: no socket to send message over\00", align 1
@.str.484 = private unnamed_addr constant [27 x i8] c"conv_scoped_query(): start\00", align 1
@conv_scoped_query.warned = internal global i32 0, align 4
@.str.1.485 = private unnamed_addr constant [54 x i8] c"Scoped rewriting not implemented for wildcard sockets\00", align 1
@.str.2.486 = private unnamed_addr constant [53 x i8] c"Need hack around your sin6_scope_id for SIOCGIFCONF!\00", align 1
@.str.3.489 = private unnamed_addr constant [19 x i8] c"conv_scoped_list()\00", align 1
@.str.4.490 = private unnamed_addr constant [10 x i8] c"%s: start\00", align 1
@.str.21.491 = private unnamed_addr constant [25 x i8] c"conv_scoped_rrset: start\00", align 1
@.str.22.492 = private unnamed_addr constant [26 x i8] c"conv_scoped_rrset: return\00", align 1
@.str.5.493 = private unnamed_addr constant [25 x i8] c"Can't add scoped address\00", align 1
@.str.6.494 = private unnamed_addr constant [11 x i8] c"%s: return\00", align 1
@.str.7.497 = private unnamed_addr constant [19 x i8] c"conv_scoped_conf()\00", align 1
@.str.8.498 = private unnamed_addr constant [39 x i8] c"%s: max number of %d prefixes exceeded\00", align 1
@.str.9.499 = private unnamed_addr constant [35 x i8] c"%s: plen needs to be multiple of 8\00", align 1
@.str.10.500 = private unnamed_addr constant [24 x i8] c"invalid format: from %s\00", align 1
@.str.11.501 = private unnamed_addr constant [22 x i8] c"invalid format: to %s\00", align 1
@.str.12.502 = private unnamed_addr constant [10 x i8] c"%s: %s %s\00", align 1
@.str.13.505 = private unnamed_addr constant [24 x i8] c"conv_scoped_ptr: start.\00", align 1
@.str.14.506 = private unnamed_addr constant [29 x i8] c"No scoped prefix configured!\00", align 1
@.str.16.509 = private unnamed_addr constant [4 x i8] c"INT\00", align 1
@.str.17.510 = private unnamed_addr constant [4 x i8] c"int\00", align 1
@.str.18.511 = private unnamed_addr constant [4 x i8] c"IP6\00", align 1
@.str.19.512 = private unnamed_addr constant [4 x i8] c"ip6\00", align 1
@.str.20.513 = private unnamed_addr constant [3 x i8] c"%x\00", align 1
@.str.15.514 = private unnamed_addr constant [24 x i8] c"conv_scoped_ptr: return\00", align 1
@.str.517 = private unnamed_addr constant [23 x i8] c"conv_stf_owner_rrset()\00", align 1
@.str.1.518 = private unnamed_addr constant [10 x i8] c"%s: start\00", align 1
@.str.2.519 = private unnamed_addr constant [14 x i8] c"\07IN-ADDR\04ARPA\00", align 1
@.str.3.520 = private unnamed_addr constant [14 x i8] c"\07in-addr\04arpa\00", align 1
@.str.4.521 = private unnamed_addr constant [25 x i8] c"%s: not a v4 PTR name %s\00", align 1
@.str.5.522 = private unnamed_addr constant [3 x i8] c"%u\00", align 1
@.str.6.523 = private unnamed_addr constant [5 x i8] c"%02x\00", align 1
@.str.7.524 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.8.525 = private unnamed_addr constant [17 x i8] c"\012\010\010\012\03ip6\03int\00", align 1
@.str.9.526 = private unnamed_addr constant [21 x i8] c"%s: converted PTR %s\00", align 1
@.str.10.527 = private unnamed_addr constant [15 x i8] c"%s: rrs_new %p\00", align 1
@.str.11.528 = private unnamed_addr constant [19 x i8] c"conv_stf_ns_list()\00", align 1
@.str.12.529 = private unnamed_addr constant [12 x i8] c"%s: type %s\00", align 1
@.str.13.530 = private unnamed_addr constant [15 x i8] c"conv_stf_ptr()\00", align 1
@.str.14.531 = private unnamed_addr constant [22 x i8] c"%s: converted name %s\00", align 1
@.str.15.532 = private unnamed_addr constant [4 x i8] c"INT\00", align 1
@.str.16.533 = private unnamed_addr constant [4 x i8] c"int\00", align 1
@.str.17.534 = private unnamed_addr constant [4 x i8] c"IP6\00", align 1
@.str.18.535 = private unnamed_addr constant [4 x i8] c"ip6\00", align 1
@version = global i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.540, i32 0, i32 0), align 8
@.str.540 = private unnamed_addr constant [43 x i8] c"Trick or Treat Daemon (totd) version 1.5.2\00", align 1
@T = common global %struct.ToT zeroinitializer, align 8
@hex = global i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.7.545, i32 0, i32 0), align 8
@.str.7.545 = private unnamed_addr constant [17 x i8] c"0123456789abcdef\00", align 1
@conf_file = global i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.9.546, i32 0, i32 0), align 8
@.str.9.546 = private unnamed_addr constant [26 x i8] c"/usr/local/etc/totd.conf\00\00", align 1
@.str.10.548 = private unnamed_addr constant [14 x i8] c"specializeArg\00", section "llvm.metadata"
@.str.11.549 = private unnamed_addr constant [7 x i8] c"totd.c\00", section "llvm.metadata"
@.str.3.550 = private unnamed_addr constant [8 x i8] c"enabled\00", align 1
@.str.4.551 = private unnamed_addr constant [9 x i8] c"disabled\00", align 1
@.str.1.552 = private unnamed_addr constant [875 x i8] c"%s\0AUsage: totd [-6|-no6|-4|-no4|-64|-dn|-v|-q|-p <prefix>|-c <filename>]\0A\0A-[no]6      : enable[disable] IPv6 service functionality\0A-[no]4      : enable[disable] IPv4 service functionality\0A-64         : alias to -6 -4\0A-dn         : debug mode (no fork / loglevel = n)\0A-v          : verbose\0A-q          : quiet\0A-u <user>   : username or uid totd should run at, after startup\0A-g <group>  : groupname or gid totd should run at, after startup\0A-t <dir>    : put totd in <dir> chroot() cage\0A-p <prefix> : a prefix to use for totd tricks; more than one allowed\0A-http-port <port> : port we listen on for http requests (default = 6464)\0A-c <file>   : specify alternative totd configfile, default=%s\0A\0Adefault   : IPv6 is %s and IPv4 is %s\0A\0Atotd %s use IPv6 because it was compiled %s USE_INET6 option in config.h\0Atotd %s use IPv4 because it was compiled %s USE_INET4 option in config.h\0A\00", align 1
@.str.2.553 = private unnamed_addr constant [25 x i8] c"/usr/local/etc/totd.conf\00", align 1
@.str.5.554 = private unnamed_addr constant [4 x i8] c"can\00", align 1
@.str.6.555 = private unnamed_addr constant [5 x i8] c"with\00", align 1
@.str.96 = private unnamed_addr constant [22 x i8] c"terminated with error\00", align 1
@stderr = external global %struct._IO_FILE*, align 8
@.str.97 = private unnamed_addr constant [86 x i8] c"totd terminated with error, check system logs for details or run totd in debug mode.\0A\00", align 1
@.str.8.560 = private unnamed_addr constant [30 x i8] c"unrolling loop with count %d\0A\00", align 1
@.str.12.561 = private unnamed_addr constant [27 x i8] c"setting debug level to %d\0A\00", align 1
@.str.13.564 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.14.565 = private unnamed_addr constant [18 x i8] c"/var/run/totd.pid\00", align 1
@.str.15.566 = private unnamed_addr constant [16 x i8] c"MAXPREFIXES %d\0A\00", align 1
@.str.16.567 = private unnamed_addr constant [3 x i8] c"-d\00", align 1
@.str.17.568 = private unnamed_addr constant [23 x i8] c"debug level %d enabled\00", align 1
@.str.18.569 = private unnamed_addr constant [3 x i8] c"-6\00", align 1
@.str.19.570 = private unnamed_addr constant [3 x i8] c"-4\00", align 1
@.str.20.571 = private unnamed_addr constant [4 x i8] c"-46\00", align 1
@.str.21.572 = private unnamed_addr constant [4 x i8] c"-64\00", align 1
@.str.22.573 = private unnamed_addr constant [5 x i8] c"-no4\00", align 1
@.str.23.574 = private unnamed_addr constant [5 x i8] c"-no6\00", align 1
@.str.24.575 = private unnamed_addr constant [3 x i8] c"-c\00", align 1
@.str.25.576 = private unnamed_addr constant [3 x i8] c"-p\00", align 1
@.str.26.577 = private unnamed_addr constant [35 x i8] c"invalid prefix on command line: %s\00", align 1
@.str.27.578 = private unnamed_addr constant [11 x i8] c"-http-port\00", align 1
@.str.28.579 = private unnamed_addr constant [22 x i8] c"invalid portnumer: %s\00", align 1
@.str.29.580 = private unnamed_addr constant [3 x i8] c"-u\00", align 1
@.str.30.581 = private unnamed_addr constant [3 x i8] c"-g\00", align 1
@.str.31.582 = private unnamed_addr constant [3 x i8] c"-t\00", align 1
@.str.32.583 = private unnamed_addr constant [3 x i8] c"-h\00", align 1
@.str.33.584 = private unnamed_addr constant [3 x i8] c"-v\00", align 1
@.str.34.585 = private unnamed_addr constant [3 x i8] c"-q\00", align 1
@.str.35.586 = private unnamed_addr constant [18 x i8] c"unknown option %s\00", align 1
@.str.36.587 = private unnamed_addr constant [5 x i8] c"totd\00", align 1
@.str.37.588 = private unnamed_addr constant [41 x i8] c"Found user record of %s; uid: %d gid: %d\00", align 1
@.str.38.589 = private unnamed_addr constant [43 x i8] c"Need root privileges to change user to: %s\00", align 1
@.str.39.590 = private unnamed_addr constant [29 x i8] c"can't find user record of %s\00", align 1
@.str.40.591 = private unnamed_addr constant [19 x i8] c"group `%s' unknown\00", align 1
@.str.41.592 = private unnamed_addr constant [21 x i8] c"chroot %s failed: %m\00", align 1
@.str.42.593 = private unnamed_addr constant [15 x i8] c"chrooted to %s\00", align 1
@.str.43.594 = private unnamed_addr constant [2 x i8] c"/\00", align 1
@.str.44.595 = private unnamed_addr constant [22 x i8] c"chdir(\22/\22) failed: %m\00", align 1
@.str.45.596 = private unnamed_addr constant [22 x i8] c"%s is the configfile\0A\00", align 1
@.str.46.597 = private unnamed_addr constant [22 x i8] c"Configuration failure\00", align 1
@.str.47.598 = private unnamed_addr constant [46 x i8] c"Check log, or try -d option for debug mode...\00", align 1
@.str.48.599 = private unnamed_addr constant [43 x i8] c"Disabling rescanning of network interfaces\00", align 1
@.str.49.600 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@.str.50.601 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.51.602 = private unnamed_addr constant [24 x i8] c"Removing bogus lockfile\00", align 1
@.str.52.603 = private unnamed_addr constant [23 x i8] c"Removed stale lockfile\00", align 1
@.str.53.604 = private unnamed_addr constant [27 x i8] c"PID file %s already exists\00", align 1
@.str.54.605 = private unnamed_addr constant [124 x i8] c"There can be another totd running. Please make sure there's no totd already running. Then delete the file %s and try again.\00", align 1
@.str.55.606 = private unnamed_addr constant [81 x i8] c"Cannot disable IPv4 when IPv6 is enabled onthis OS, due to IPv4 mapped addresses\00", align 1
@.str.56.607 = private unnamed_addr constant [101 x i8] c"Will always accept IPv4 *and* IPv6 requests.Bailing out, so that you can explicitly tell me to do so\00", align 1
@.str.57.608 = private unnamed_addr constant [66 x i8] c"On this OS we only support wildcard binding when IPv6 is enabled.\00", align 1
@.str.58.609 = private unnamed_addr constant [62 x i8] c"Please remove `interfaces' specification in your config file.\00", align 1
@.str.59.610 = private unnamed_addr constant [78 x i8] c"IPv6 wildcard socket with IPv4 mapped, will not bind to wildcard IPv4 socket.\00", align 1
@.str.60.611 = private unnamed_addr constant [15 x i8] c"IPv4 activated\00", align 1
@.str.61.612 = private unnamed_addr constant [15 x i8] c"IPv6 activated\00", align 1
@.str.62.613 = private unnamed_addr constant [73 x i8] c"all supported protocols are deactivated; what do you want me to do then?\00", align 1
@.str.63.614 = private unnamed_addr constant [162 x i8] c"Scoped address rewriting currently not implemented when wildcard sockets are used. Please use `interfaces' keyword in your config file or remove `scoped' keyword\00", align 1
@.str.64 = private unnamed_addr constant [48 x i8] c"no forwarder available, what should we do then?\00", align 1
@.str.65.615 = private unnamed_addr constant [41 x i8] c"Signal event handling  initialize failed\00", align 1
@.str.66 = private unnamed_addr constant [41 x i8] c"Timeout event handling initialize failed\00", align 1
@.str.67 = private unnamed_addr constant [33 x i8] c"TCP connection initialize failed\00", align 1
@.str.68 = private unnamed_addr constant [28 x i8] c"Init list of sockets failed\00", align 1
@.str.69 = private unnamed_addr constant [27 x i8] c"Could not open any sockets\00", align 1
@.str.70 = private unnamed_addr constant [26 x i8] c"Maybe later??? Continuing\00", align 1
@.str.71 = private unnamed_addr constant [22 x i8] c"UDP initialize failed\00", align 1
@.str.72 = private unnamed_addr constant [37 x i8] c"TCP output routine initialize failed\00", align 1
@.str.73 = private unnamed_addr constant [20 x i8] c"setgid to %d failed\00", align 1
@.str.74 = private unnamed_addr constant [20 x i8] c"setuid to %d failed\00", align 1
@.str.75 = private unnamed_addr constant [41 x i8] c"Registering Interface Check Event failed\00", align 1
@.str.76 = private unnamed_addr constant [29 x i8] c"totd successfully daemonized\00", align 1
@.str.77 = private unnamed_addr constant [2 x i8] c"w\00", align 1
@.str.78 = private unnamed_addr constant [25 x i8] c"can't open pid file \22%s\22\00", align 1
@.str.79 = private unnamed_addr constant [24 x i8] c"wrote pid %d to file %s\00", align 1
@.str.80 = private unnamed_addr constant [13 x i8] c"totd started\00", align 1
@.str.81 = private unnamed_addr constant [17 x i8] c"totd_eventloop()\00", align 1
@.str.82 = private unnamed_addr constant [17 x i8] c"main loop: start\00", align 1
@.str.83 = private unnamed_addr constant [23 x i8] c"no timeouts at present\00", align 1
@.str.84 = private unnamed_addr constant [26 x i8] c"next timeout after %ld s.\00", align 1
@.str.85 = private unnamed_addr constant [21 x i8] c"check for UDP fds...\00", align 1
@.str.86 = private unnamed_addr constant [24 x i8] c"check for TCP-in fds...\00", align 1
@.str.87 = private unnamed_addr constant [25 x i8] c"check for TCP-out fds...\00", align 1
@.str.88 = private unnamed_addr constant [16 x i8] c"%s: max_fd = %d\00", align 1
@.str.89 = private unnamed_addr constant [18 x i8] c"main loop: select\00", align 1
@.str.90 = private unnamed_addr constant [25 x i8] c"%s: select() interrupted\00", align 1
@.str.91 = private unnamed_addr constant [17 x i8] c"%s: select(): %m\00", align 1
@.str.92 = private unnamed_addr constant [18 x i8] c"udp service error\00", align 1
@.str.93 = private unnamed_addr constant [18 x i8] c"tcp service error\00", align 1
@.str.94 = private unnamed_addr constant [18 x i8] c"tcp output failed\00", align 1
@.str.95 = private unnamed_addr constant [17 x i8] c"tcp input failed\00", align 1

; Function Attrs: nounwind uwtable
define i32 @request_start(%struct.context* %cont, i32 %tcp) #0 !dbg !76 {
  %1 = alloca i32, align 4
  %2 = alloca %struct.context*, align 8
  %3 = alloca i32, align 4
  %fn = alloca i8*, align 8
  %qclass = alloca i16, align 2
  %qtype = alloca i16, align 2
  %cp = alloca i8*, align 8
  %qname = alloca [256 x i8], align 16
  %str = alloca [256 x i8], align 16
  %a6 = alloca %struct.in6_addr, align 4
  %len = alloca i32, align 4
  store %struct.context* %cont, %struct.context** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.context** %2, metadata !2278, metadata !2279), !dbg !2280
  store i32 %tcp, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !2281, metadata !2279), !dbg !2282
  call void @llvm.dbg.declare(metadata i8** %fn, metadata !2283, metadata !2279), !dbg !2284
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str, i32 0, i32 0), i8** %fn, align 8, !dbg !2284
  call void @llvm.dbg.declare(metadata i16* %qclass, metadata !2285, metadata !2279), !dbg !2286
  call void @llvm.dbg.declare(metadata i16* %qtype, metadata !2287, metadata !2279), !dbg !2288
  call void @llvm.dbg.declare(metadata i8** %cp, metadata !2289, metadata !2279), !dbg !2290
  call void @llvm.dbg.declare(metadata [256 x i8]* %qname, metadata !2291, metadata !2279), !dbg !2292
  call void @llvm.dbg.declare(metadata [256 x i8]* %str, metadata !2293, metadata !2279), !dbg !2294
  call void @llvm.dbg.declare(metadata %struct.in6_addr* %a6, metadata !2295, metadata !2279), !dbg !2304
  call void @llvm.dbg.declare(metadata i32* %len, metadata !2305, metadata !2279), !dbg !2306
  %4 = load i8*, i8** %fn, align 8, !dbg !2307
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i32 0, i32 0), i8* %4), !dbg !2308
  %5 = load %struct.context*, %struct.context** %2, align 8, !dbg !2309
  %6 = getelementptr inbounds %struct.context, %struct.context* %5, i32 0, i32 16, !dbg !2309
  %7 = bitcast %union.anon.0* %6 to i8**, !dbg !2309
  %8 = load i8*, i8** %7, align 8, !dbg !2309
  %9 = getelementptr inbounds i8, i8* %8, i64 12, !dbg !2309
  %10 = load %struct.context*, %struct.context** %2, align 8, !dbg !2310
  %11 = getelementptr inbounds %struct.context, %struct.context* %10, i32 0, i32 16, !dbg !2311
  %12 = bitcast %union.anon.0* %11 to i8**, !dbg !2312
  %13 = load i8*, i8** %12, align 8, !dbg !2312
  %14 = load %struct.context*, %struct.context** %2, align 8, !dbg !2313
  %15 = getelementptr inbounds %struct.context, %struct.context* %14, i32 0, i32 17, !dbg !2314
  %16 = load i32, i32* %15, align 8, !dbg !2314
  %17 = sext i32 %16 to i64, !dbg !2315
  %18 = getelementptr inbounds i8, i8* %13, i64 %17, !dbg !2315
  %19 = call i8* @mesg_skip_dname(i8* %9, i8* %18), !dbg !2316
  store i8* %19, i8** %cp, align 8, !dbg !2317
  %20 = load i8*, i8** %cp, align 8, !dbg !2318
  %21 = icmp ne i8* %20, null, !dbg !2318
  br i1 %21, label %24, label %22, !dbg !2320

; <label>:22                                      ; preds = %0
  %23 = load i8*, i8** %fn, align 8, !dbg !2321
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i32 0, i32 0), i8* %23), !dbg !2323
  store i32 1, i32* %1, align 4, !dbg !2324
  br label %224, !dbg !2324

; <label>:24                                      ; preds = %0
  %25 = load i8*, i8** %cp, align 8, !dbg !2325
  %26 = load %struct.context*, %struct.context** %2, align 8, !dbg !2326
  %27 = getelementptr inbounds %struct.context, %struct.context* %26, i32 0, i32 16, !dbg !2326
  %28 = bitcast %union.anon.0* %27 to i8**, !dbg !2326
  %29 = load i8*, i8** %28, align 8, !dbg !2326
  %30 = getelementptr inbounds i8, i8* %29, i64 12, !dbg !2326
  %31 = ptrtoint i8* %25 to i64, !dbg !2327
  %32 = ptrtoint i8* %30 to i64, !dbg !2327
  %33 = sub i64 %31, %32, !dbg !2327
  %34 = trunc i64 %33 to i32, !dbg !2325
  store i32 %34, i32* %len, align 4, !dbg !2328
  %35 = load i32, i32* %len, align 4, !dbg !2329
  %36 = icmp sge i32 %35, 256, !dbg !2331
  br i1 %36, label %37, label %39, !dbg !2332

; <label>:37                                      ; preds = %24
  %38 = load i8*, i8** %fn, align 8, !dbg !2333
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i32 0, i32 0), i8* %38), !dbg !2335
  store i32 1, i32* %1, align 4, !dbg !2336
  br label %224, !dbg !2336

; <label>:39                                      ; preds = %24
  %40 = load i8*, i8** %cp, align 8, !dbg !2337
  %41 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !2337
  store i8* %41, i8** %cp, align 8, !dbg !2337
  %42 = load i8, i8* %40, align 1, !dbg !2337
  %43 = zext i8 %42 to i32, !dbg !2337
  %44 = shl i32 %43, 8, !dbg !2337
  %45 = trunc i32 %44 to i16, !dbg !2337
  store i16 %45, i16* %qtype, align 2, !dbg !2337
  %46 = load i8*, i8** %cp, align 8, !dbg !2337
  %47 = getelementptr inbounds i8, i8* %46, i32 1, !dbg !2337
  store i8* %47, i8** %cp, align 8, !dbg !2337
  %48 = load i8, i8* %46, align 1, !dbg !2337
  %49 = zext i8 %48 to i32, !dbg !2337
  %50 = load i16, i16* %qtype, align 2, !dbg !2337
  %51 = zext i16 %50 to i32, !dbg !2337
  %52 = or i32 %51, %49, !dbg !2337
  %53 = trunc i32 %52 to i16, !dbg !2337
  store i16 %53, i16* %qtype, align 2, !dbg !2337
  %54 = load i16, i16* %qtype, align 2, !dbg !2339
  %55 = load %struct.context*, %struct.context** %2, align 8, !dbg !2340
  %56 = getelementptr inbounds %struct.context, %struct.context* %55, i32 0, i32 12, !dbg !2341
  store i16 %54, i16* %56, align 2, !dbg !2342
  %57 = load i8*, i8** %cp, align 8, !dbg !2343
  %58 = getelementptr inbounds i8, i8* %57, i32 1, !dbg !2343
  store i8* %58, i8** %cp, align 8, !dbg !2343
  %59 = load i8, i8* %57, align 1, !dbg !2343
  %60 = zext i8 %59 to i32, !dbg !2343
  %61 = shl i32 %60, 8, !dbg !2343
  %62 = trunc i32 %61 to i16, !dbg !2343
  store i16 %62, i16* %qclass, align 2, !dbg !2343
  %63 = load i8*, i8** %cp, align 8, !dbg !2343
  %64 = getelementptr inbounds i8, i8* %63, i32 1, !dbg !2343
  store i8* %64, i8** %cp, align 8, !dbg !2343
  %65 = load i8, i8* %63, align 1, !dbg !2343
  %66 = zext i8 %65 to i32, !dbg !2343
  %67 = load i16, i16* %qclass, align 2, !dbg !2343
  %68 = zext i16 %67 to i32, !dbg !2343
  %69 = or i32 %68, %66, !dbg !2343
  %70 = trunc i32 %69 to i16, !dbg !2343
  store i16 %70, i16* %qclass, align 2, !dbg !2343
  %71 = load i16, i16* %qclass, align 2, !dbg !2345
  %72 = load %struct.context*, %struct.context** %2, align 8, !dbg !2346
  %73 = getelementptr inbounds %struct.context, %struct.context* %72, i32 0, i32 11, !dbg !2347
  store i16 %71, i16* %73, align 4, !dbg !2348
  %74 = load %struct.context*, %struct.context** %2, align 8, !dbg !2349
  %75 = getelementptr inbounds %struct.context, %struct.context* %74, i32 0, i32 9, !dbg !2350
  %76 = getelementptr inbounds [256 x i8], [256 x i8]* %75, i32 0, i32 0, !dbg !2351
  %77 = load %struct.context*, %struct.context** %2, align 8, !dbg !2352
  %78 = getelementptr inbounds %struct.context, %struct.context* %77, i32 0, i32 16, !dbg !2352
  %79 = bitcast %union.anon.0* %78 to i8**, !dbg !2352
  %80 = load i8*, i8** %79, align 8, !dbg !2352
  %81 = getelementptr inbounds i8, i8* %80, i64 12, !dbg !2352
  %82 = load i32, i32* %len, align 4, !dbg !2353
  %83 = sext i32 %82 to i64, !dbg !2353
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %76, i8* %81, i64 %83, i32 1, i1 false), !dbg !2351
  %84 = getelementptr inbounds [256 x i8], [256 x i8]* %qname, i32 0, i32 0, !dbg !2354
  %85 = load %struct.context*, %struct.context** %2, align 8, !dbg !2355
  %86 = getelementptr inbounds %struct.context, %struct.context* %85, i32 0, i32 16, !dbg !2355
  %87 = bitcast %union.anon.0* %86 to i8**, !dbg !2355
  %88 = load i8*, i8** %87, align 8, !dbg !2355
  %89 = getelementptr inbounds i8, i8* %88, i64 12, !dbg !2355
  %90 = load i32, i32* %len, align 4, !dbg !2356
  %91 = sext i32 %90 to i64, !dbg !2356
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %84, i8* %89, i64 %91, i32 1, i1 false), !dbg !2354
  %92 = load i32, i32* %len, align 4, !dbg !2357
  %93 = sext i32 %92 to i64, !dbg !2358
  %94 = getelementptr inbounds [256 x i8], [256 x i8]* %qname, i64 0, i64 %93, !dbg !2358
  store i8 0, i8* %94, align 1, !dbg !2359
  %95 = getelementptr inbounds [256 x i8], [256 x i8]* %str, i32 0, i32 0, !dbg !2360
  %96 = getelementptr inbounds [256 x i8], [256 x i8]* %qname, i32 0, i32 0, !dbg !2361
  %97 = call i8* @dname_decompress(i8* %95, i32 256, i8* %96, i8* null, i8* null, i32* null), !dbg !2362
  %98 = getelementptr inbounds [256 x i8], [256 x i8]* %str, i32 0, i32 0, !dbg !2363
  %99 = load i16, i16* %qtype, align 2, !dbg !2364
  %100 = call i8* @string_rtype(i16 zeroext %99), !dbg !2365
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3, i32 0, i32 0), i8* %98, i8* %100), !dbg !2366
  %101 = getelementptr inbounds [256 x i8], [256 x i8]* %qname, i32 0, i32 0, !dbg !2368
  %102 = load i8, i8* %101, align 16, !dbg !2368
  %103 = zext i8 %102 to i32, !dbg !2368
  %104 = icmp eq i32 %103, 65, !dbg !2370
  br i1 %104, label %105, label %107, !dbg !2371

; <label>:105                                     ; preds = %39
  %106 = getelementptr inbounds [256 x i8], [256 x i8]* %qname, i64 0, i64 0, !dbg !2372
  store i8 0, i8* %106, align 16, !dbg !2374
  br label %117, !dbg !2375

; <label>:107                                     ; preds = %39
  %108 = load i32, i32* %len, align 4, !dbg !2376
  %109 = sext i32 %108 to i64, !dbg !2376
  %110 = getelementptr inbounds [256 x i8], [256 x i8]* %qname, i32 0, i32 0, !dbg !2379
  %111 = call i64 @strlen(i8* %110) #9, !dbg !2380
  %112 = add i64 %111, 1, !dbg !2381
  %113 = icmp ne i64 %109, %112, !dbg !2382
  br i1 %113, label %114, label %116, !dbg !2376

; <label>:114                                     ; preds = %107
  %115 = getelementptr inbounds [256 x i8], [256 x i8]* %qname, i64 0, i64 0, !dbg !2383
  store i8 0, i8* %115, align 16, !dbg !2385
  br label %116, !dbg !2386

; <label>:116                                     ; preds = %114, %107
  br label %117

; <label>:117                                     ; preds = %116, %105
  %118 = load %struct.context*, %struct.context** %2, align 8, !dbg !2387
  %119 = getelementptr inbounds %struct.context, %struct.context* %118, i32 0, i32 2, !dbg !2388
  store i32 1, i32* %119, align 8, !dbg !2389
  %120 = load i16, i16* %qtype, align 2, !dbg !2390
  %121 = zext i16 %120 to i32, !dbg !2390
  %122 = icmp eq i32 %121, 12, !dbg !2392
  br i1 %122, label %123, label %144, !dbg !2393

; <label>:123                                     ; preds = %117
  %124 = load %struct.context*, %struct.context** %2, align 8, !dbg !2394
  %125 = getelementptr inbounds %struct.context, %struct.context* %124, i32 0, i32 16, !dbg !2394
  %126 = bitcast %union.anon.0* %125 to i8**, !dbg !2394
  %127 = load i8*, i8** %126, align 8, !dbg !2394
  %128 = getelementptr inbounds i8, i8* %127, i64 12, !dbg !2394
  %129 = call i32 @conv_trick_is_tot_newptr(i8* %128, %struct.in6_addr* %a6), !dbg !2396
  %130 = icmp ne i32 %129, 0, !dbg !2396
  br i1 %130, label %131, label %144, !dbg !2397

; <label>:131                                     ; preds = %123
  %132 = load %struct.context*, %struct.context** %2, align 8, !dbg !2398
  %133 = getelementptr inbounds %struct.context, %struct.context* %132, i32 0, i32 2, !dbg !2400
  store i32 4, i32* %133, align 8, !dbg !2401
  %134 = getelementptr inbounds [256 x i8], [256 x i8]* %qname, i32 0, i32 0, !dbg !2402
  call void @conv_trick_newptr_rq(i8* %134, %struct.in6_addr* %a6), !dbg !2403
  %135 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 8), align 4, !dbg !2404
  %136 = icmp ne i32 %135, 0, !dbg !2406
  br i1 %136, label %137, label %143, !dbg !2407

; <label>:137                                     ; preds = %131
  %138 = getelementptr inbounds [256 x i8], [256 x i8]* %str, i32 0, i32 0, !dbg !2408
  %139 = getelementptr inbounds [256 x i8], [256 x i8]* %qname, i32 0, i32 0, !dbg !2410
  %140 = call i8* @dname_decompress(i8* %138, i32 256, i8* %139, i8* null, i8* null, i32* null), !dbg !2411
  %141 = load i8*, i8** %fn, align 8, !dbg !2412
  %142 = getelementptr inbounds [256 x i8], [256 x i8]* %str, i32 0, i32 0, !dbg !2413
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.4, i32 0, i32 0), i8* %141, i8* %142), !dbg !2414
  br label %143, !dbg !2415

; <label>:143                                     ; preds = %137, %131
  br label %144, !dbg !2416

; <label>:144                                     ; preds = %143, %123, %117
  %145 = load i16, i16* %qtype, align 2, !dbg !2417
  %146 = zext i16 %145 to i32, !dbg !2417
  %147 = icmp eq i32 %146, 12, !dbg !2419
  br i1 %147, label %148, label %165, !dbg !2420

; <label>:148                                     ; preds = %144
  %149 = getelementptr inbounds [256 x i8], [256 x i8]* %qname, i32 0, i32 0, !dbg !2421
  %150 = call i32 @conv_trick_is_tot_ptr(i8* %149), !dbg !2423
  %151 = icmp ne i32 %150, 0, !dbg !2423
  br i1 %151, label %152, label %165, !dbg !2424

; <label>:152                                     ; preds = %148
  %153 = load %struct.context*, %struct.context** %2, align 8, !dbg !2425
  %154 = getelementptr inbounds %struct.context, %struct.context* %153, i32 0, i32 2, !dbg !2427
  store i32 3, i32* %154, align 8, !dbg !2428
  %155 = getelementptr inbounds [256 x i8], [256 x i8]* %qname, i32 0, i32 0, !dbg !2429
  call void @conv_trick_ptr_rq(i8* %155), !dbg !2430
  %156 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 8), align 4, !dbg !2431
  %157 = icmp ne i32 %156, 0, !dbg !2433
  br i1 %157, label %158, label %164, !dbg !2434

; <label>:158                                     ; preds = %152
  %159 = getelementptr inbounds [256 x i8], [256 x i8]* %str, i32 0, i32 0, !dbg !2435
  %160 = getelementptr inbounds [256 x i8], [256 x i8]* %qname, i32 0, i32 0, !dbg !2437
  %161 = call i8* @dname_decompress(i8* %159, i32 256, i8* %160, i8* null, i8* null, i32* null), !dbg !2438
  %162 = load i8*, i8** %fn, align 8, !dbg !2439
  %163 = getelementptr inbounds [256 x i8], [256 x i8]* %str, i32 0, i32 0, !dbg !2440
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.5, i32 0, i32 0), i8* %162, i8* %163), !dbg !2441
  br label %164, !dbg !2442

; <label>:164                                     ; preds = %158, %152
  br label %165, !dbg !2443

; <label>:165                                     ; preds = %164, %148, %144
  %166 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 25), align 8, !dbg !2444
  %167 = icmp ne i32 %166, 0, !dbg !2446
  br i1 %167, label %168, label %185, !dbg !2447

; <label>:168                                     ; preds = %165
  %169 = getelementptr inbounds [256 x i8], [256 x i8]* %qname, i32 0, i32 0, !dbg !2448
  %170 = call i32 @conv_is_scoped_ptr(i8* %169, i32 1), !dbg !2450
  %171 = icmp ne i32 %170, -1, !dbg !2451
  br i1 %171, label %172, label %185, !dbg !2452

; <label>:172                                     ; preds = %168
  %173 = load %struct.context*, %struct.context** %2, align 8, !dbg !2453
  %174 = getelementptr inbounds %struct.context, %struct.context* %173, i32 0, i32 2, !dbg !2455
  store i32 5, i32* %174, align 8, !dbg !2456
  %175 = getelementptr inbounds [256 x i8], [256 x i8]* %qname, i32 0, i32 0, !dbg !2457
  call void @conv_scoped_ptr_rq(i8* %175), !dbg !2458
  %176 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 8), align 4, !dbg !2459
  %177 = icmp ne i32 %176, 0, !dbg !2461
  br i1 %177, label %178, label %184, !dbg !2462

; <label>:178                                     ; preds = %172
  %179 = getelementptr inbounds [256 x i8], [256 x i8]* %str, i32 0, i32 0, !dbg !2463
  %180 = getelementptr inbounds [256 x i8], [256 x i8]* %qname, i32 0, i32 0, !dbg !2465
  %181 = call i8* @dname_decompress(i8* %179, i32 256, i8* %180, i8* null, i8* null, i32* null), !dbg !2466
  %182 = load i8*, i8** %fn, align 8, !dbg !2467
  %183 = getelementptr inbounds [256 x i8], [256 x i8]* %str, i32 0, i32 0, !dbg !2468
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.6, i32 0, i32 0), i8* %182, i8* %183), !dbg !2469
  br label %184, !dbg !2470

; <label>:184                                     ; preds = %178, %172
  br label %185, !dbg !2471

; <label>:185                                     ; preds = %184, %168, %165
  %186 = call %struct.generic_list* @fwd_socketlist(), !dbg !2472
  %187 = load %struct.context*, %struct.context** %2, align 8, !dbg !2473
  %188 = getelementptr inbounds %struct.context, %struct.context* %187, i32 0, i32 4, !dbg !2474
  store %struct.generic_list* %186, %struct.generic_list** %188, align 8, !dbg !2475
  %189 = load %struct.context*, %struct.context** %2, align 8, !dbg !2476
  %190 = getelementptr inbounds %struct.context, %struct.context* %189, i32 0, i32 4, !dbg !2477
  %191 = load %struct.generic_list*, %struct.generic_list** %190, align 8, !dbg !2477
  %192 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %191, i32 0, i32 0, !dbg !2478
  %193 = load %struct.generic_list*, %struct.generic_list** %192, align 8, !dbg !2478
  %194 = load %struct.context*, %struct.context** %2, align 8, !dbg !2479
  %195 = getelementptr inbounds %struct.context, %struct.context* %194, i32 0, i32 5, !dbg !2480
  store %struct.generic_list* %193, %struct.generic_list** %195, align 8, !dbg !2481
  %196 = load %struct.context*, %struct.context** %2, align 8, !dbg !2482
  %197 = getelementptr inbounds %struct.context, %struct.context* %196, i32 0, i32 5, !dbg !2484
  %198 = load %struct.generic_list*, %struct.generic_list** %197, align 8, !dbg !2484
  %199 = icmp ne %struct.generic_list* %198, null, !dbg !2482
  br i1 %199, label %200, label %207, !dbg !2485

; <label>:200                                     ; preds = %185
  %201 = load %struct.context*, %struct.context** %2, align 8, !dbg !2486
  %202 = getelementptr inbounds %struct.context, %struct.context* %201, i32 0, i32 5, !dbg !2488
  %203 = load %struct.generic_list*, %struct.generic_list** %202, align 8, !dbg !2488
  %204 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %203, i32 0, i32 2, !dbg !2489
  %205 = load i8*, i8** %204, align 8, !dbg !2489
  %206 = icmp ne i8* %205, null, !dbg !2486
  br i1 %206, label %209, label %207, !dbg !2490

; <label>:207                                     ; preds = %200, %185
  %208 = load i8*, i8** %fn, align 8, !dbg !2491
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.7, i32 0, i32 0), i8* %208), !dbg !2493
  store i32 -1, i32* %1, align 4, !dbg !2494
  br label %224, !dbg !2494

; <label>:209                                     ; preds = %200
  %210 = load %struct.context*, %struct.context** %2, align 8, !dbg !2495
  %211 = getelementptr inbounds %struct.context, %struct.context* %210, i32 0, i32 5, !dbg !2496
  %212 = load %struct.generic_list*, %struct.generic_list** %211, align 8, !dbg !2496
  %213 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %212, i32 0, i32 2, !dbg !2497
  %214 = load i8*, i8** %213, align 8, !dbg !2497
  %215 = bitcast i8* %214 to %struct.sockaddr*, !dbg !2498
  %216 = getelementptr inbounds [256 x i8], [256 x i8]* %str, i32 0, i32 0, !dbg !2499
  %217 = call i8* @sprint_inet(%struct.sockaddr* %215, i8* %216), !dbg !2500
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8, i32 0, i32 0), i8* %217), !dbg !2501
  %218 = load %struct.context*, %struct.context** %2, align 8, !dbg !2502
  %219 = getelementptr inbounds [256 x i8], [256 x i8]* %qname, i32 0, i32 0, !dbg !2503
  %220 = load i16, i16* %qclass, align 2, !dbg !2504
  %221 = load i16, i16* %qtype, align 2, !dbg !2505
  %222 = load i32, i32* %3, align 4, !dbg !2506
  %223 = call i32 @do_forward(%struct.context* %218, i8* %219, i16 zeroext %220, i16 zeroext %221, i32 %222), !dbg !2507
  store i32 %223, i32* %1, align 4, !dbg !2508
  br label %224, !dbg !2508

; <label>:224                                     ; preds = %209, %207, %37, %22
  %225 = load i32, i32* %1, align 4, !dbg !2509
  ret i32 %225, !dbg !2509
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare void @syslog(i32, i8*, ...) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #3

; Function Attrs: nounwind readonly
declare i64 @strlen(i8*) #4

; Function Attrs: nounwind uwtable
define i32 @do_forward(%struct.context* %parent, i8* %qname, i16 zeroext %qclass, i16 zeroext %qtype, i32 %tcp) #0 !dbg !168 {
  %1 = alloca i32, align 4
  %2 = alloca %struct.context*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i16, align 2
  %5 = alloca i16, align 2
  %6 = alloca i32, align 4
  %fn = alloca i8*, align 8
  %str = alloca [256 x i8], align 16
  %cont = alloca %struct.context*, align 8
  store %struct.context* %parent, %struct.context** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.context** %2, metadata !2510, metadata !2279), !dbg !2511
  store i8* %qname, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !2512, metadata !2279), !dbg !2513
  store i16 %qclass, i16* %4, align 2
  call void @llvm.dbg.declare(metadata i16* %4, metadata !2514, metadata !2279), !dbg !2515
  store i16 %qtype, i16* %5, align 2
  call void @llvm.dbg.declare(metadata i16* %5, metadata !2516, metadata !2279), !dbg !2517
  store i32 %tcp, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !2518, metadata !2279), !dbg !2519
  call void @llvm.dbg.declare(metadata i8** %fn, metadata !2520, metadata !2279), !dbg !2521
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.9, i32 0, i32 0), i8** %fn, align 8, !dbg !2521
  call void @llvm.dbg.declare(metadata [256 x i8]* %str, metadata !2522, metadata !2279), !dbg !2523
  call void @llvm.dbg.declare(metadata %struct.context** %cont, metadata !2524, metadata !2279), !dbg !2525
  %7 = load i8*, i8** %fn, align 8, !dbg !2526
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i32 0, i32 0), i8* %7), !dbg !2527
  %8 = call %struct.context* bitcast (%struct.context.19* ()* @context_create to %struct.context* ()*)(), !dbg !2528
  store %struct.context* %8, %struct.context** %cont, align 8, !dbg !2529
  %9 = load %struct.context*, %struct.context** %cont, align 8, !dbg !2530
  %10 = icmp ne %struct.context* %9, null, !dbg !2530
  br i1 %10, label %14, label %11, !dbg !2532

; <label>:11                                      ; preds = %0
  %12 = load %struct.context*, %struct.context** %cont, align 8, !dbg !2533
  %13 = call i32 @request_abort(%struct.context* %12, i32 -1), !dbg !2534
  store i32 %13, i32* %1, align 4, !dbg !2535
  br label %142, !dbg !2535

; <label>:14                                      ; preds = %0
  %15 = load %struct.context*, %struct.context** %2, align 8, !dbg !2536
  %16 = load %struct.context*, %struct.context** %cont, align 8, !dbg !2537
  %17 = getelementptr inbounds %struct.context, %struct.context* %16, i32 0, i32 0, !dbg !2538
  store %struct.context* %15, %struct.context** %17, align 8, !dbg !2539
  %18 = load %struct.context*, %struct.context** %cont, align 8, !dbg !2540
  %19 = load %struct.context*, %struct.context** %cont, align 8, !dbg !2541
  %20 = getelementptr inbounds %struct.context, %struct.context* %19, i32 0, i32 0, !dbg !2542
  %21 = load %struct.context*, %struct.context** %20, align 8, !dbg !2542
  %22 = getelementptr inbounds %struct.context, %struct.context* %21, i32 0, i32 1, !dbg !2543
  store %struct.context* %18, %struct.context** %22, align 8, !dbg !2544
  %23 = load %struct.context*, %struct.context** %cont, align 8, !dbg !2545
  %24 = getelementptr inbounds %struct.context, %struct.context* %23, i32 0, i32 21, !dbg !2546
  store i16 2, i16* %24, align 2, !dbg !2547
  %25 = load %struct.context*, %struct.context** %cont, align 8, !dbg !2548
  %26 = getelementptr inbounds %struct.context, %struct.context* %25, i32 0, i32 0, !dbg !2549
  %27 = load %struct.context*, %struct.context** %26, align 8, !dbg !2549
  %28 = getelementptr inbounds %struct.context, %struct.context* %27, i32 0, i32 5, !dbg !2550
  %29 = load %struct.generic_list*, %struct.generic_list** %28, align 8, !dbg !2550
  %30 = load %struct.context*, %struct.context** %cont, align 8, !dbg !2551
  %31 = getelementptr inbounds %struct.context, %struct.context* %30, i32 0, i32 5, !dbg !2552
  store %struct.generic_list* %29, %struct.generic_list** %31, align 8, !dbg !2553
  %32 = load %struct.context*, %struct.context** %cont, align 8, !dbg !2554
  %33 = getelementptr inbounds %struct.context, %struct.context* %32, i32 0, i32 9, !dbg !2555
  %34 = getelementptr inbounds [256 x i8], [256 x i8]* %33, i32 0, i32 0, !dbg !2554
  %35 = load i8*, i8** %3, align 8, !dbg !2556
  %36 = call i64 @strlcpy(i8* %34, i8* %35, i64 256), !dbg !2557
  %37 = load i16, i16* %4, align 2, !dbg !2558
  %38 = load %struct.context*, %struct.context** %cont, align 8, !dbg !2559
  %39 = getelementptr inbounds %struct.context, %struct.context* %38, i32 0, i32 11, !dbg !2560
  store i16 %37, i16* %39, align 4, !dbg !2561
  %40 = load i16, i16* %5, align 2, !dbg !2562
  %41 = load %struct.context*, %struct.context** %cont, align 8, !dbg !2563
  %42 = getelementptr inbounds %struct.context, %struct.context* %41, i32 0, i32 12, !dbg !2564
  store i16 %40, i16* %42, align 2, !dbg !2565
  %43 = call zeroext i16 @mesg_id(), !dbg !2566
  %44 = zext i16 %43 to i32, !dbg !2566
  %45 = load %struct.context*, %struct.context** %cont, align 8, !dbg !2567
  %46 = getelementptr inbounds %struct.context, %struct.context* %45, i32 0, i32 10, !dbg !2568
  store i32 %44, i32* %46, align 8, !dbg !2569
  %47 = load i8*, i8** %fn, align 8, !dbg !2570
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.10, i32 0, i32 0), i8* %47), !dbg !2571
  %48 = load i8*, i8** %3, align 8, !dbg !2572
  %49 = load i8, i8* %48, align 1, !dbg !2574
  %50 = zext i8 %49 to i32, !dbg !2574
  %51 = icmp eq i32 %50, 0, !dbg !2575
  br i1 %51, label %52, label %58, !dbg !2576

; <label>:52                                      ; preds = %14
  %53 = load %struct.context*, %struct.context** %2, align 8, !dbg !2577
  %54 = getelementptr inbounds %struct.context, %struct.context* %53, i32 0, i32 16, !dbg !2578
  %55 = bitcast %union.anon.0* %54 to i8**, !dbg !2579
  %56 = load i8*, i8** %55, align 8, !dbg !2579
  %57 = getelementptr inbounds i8, i8* %56, i64 12, !dbg !2580
  store i8* %57, i8** %3, align 8, !dbg !2581
  br label %58, !dbg !2582

; <label>:58                                      ; preds = %52, %14
  %59 = load i8*, i8** %3, align 8, !dbg !2583
  %60 = load i16, i16* %5, align 2, !dbg !2584
  %61 = load i16, i16* %4, align 2, !dbg !2585
  %62 = load %struct.context*, %struct.context** %cont, align 8, !dbg !2586
  %63 = getelementptr inbounds %struct.context, %struct.context* %62, i32 0, i32 10, !dbg !2587
  %64 = load i32, i32* %63, align 8, !dbg !2587
  %65 = call i32 @mesg_make_query(i8* %59, i16 zeroext %60, i16 zeroext %61, i32 %64, i32 1, i8* getelementptr inbounds ([65535 x i8], [65535 x i8]* @do_forward.buf, i32 0, i32 0), i32 65535), !dbg !2588
  %66 = load %struct.context*, %struct.context** %cont, align 8, !dbg !2589
  %67 = getelementptr inbounds %struct.context, %struct.context* %66, i32 0, i32 17, !dbg !2590
  store i32 %65, i32* %67, align 8, !dbg !2591
  %68 = load %struct.context*, %struct.context** %cont, align 8, !dbg !2592
  %69 = getelementptr inbounds %struct.context, %struct.context* %68, i32 0, i32 17, !dbg !2594
  %70 = load i32, i32* %69, align 8, !dbg !2594
  %71 = icmp slt i32 %70, 0, !dbg !2595
  br i1 %71, label %72, label %76, !dbg !2596

; <label>:72                                      ; preds = %58
  %73 = load i8*, i8** %fn, align 8, !dbg !2597
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.11, i32 0, i32 0), i8* %73, i64 65535), !dbg !2599
  %74 = load %struct.context*, %struct.context** %cont, align 8, !dbg !2600
  %75 = call i32 @request_abort(%struct.context* %74, i32 -1), !dbg !2601
  store i32 %75, i32* %1, align 4, !dbg !2602
  br label %142, !dbg !2602

; <label>:76                                      ; preds = %58
  %77 = load %struct.context*, %struct.context** %cont, align 8, !dbg !2603
  %78 = getelementptr inbounds %struct.context, %struct.context* %77, i32 0, i32 17, !dbg !2604
  %79 = load i32, i32* %78, align 8, !dbg !2604
  %80 = sext i32 %79 to i64, !dbg !2603
  %81 = call noalias i8* @malloc(i64 %80) #10, !dbg !2605
  %82 = load %struct.context*, %struct.context** %cont, align 8, !dbg !2606
  %83 = getelementptr inbounds %struct.context, %struct.context* %82, i32 0, i32 16, !dbg !2607
  %84 = bitcast %union.anon.0* %83 to i8**, !dbg !2608
  store i8* %81, i8** %84, align 8, !dbg !2609
  %85 = load %struct.context*, %struct.context** %cont, align 8, !dbg !2610
  %86 = getelementptr inbounds %struct.context, %struct.context* %85, i32 0, i32 16, !dbg !2612
  %87 = bitcast %union.anon.0* %86 to i8**, !dbg !2613
  %88 = load i8*, i8** %87, align 8, !dbg !2613
  %89 = icmp ne i8* %88, null, !dbg !2610
  br i1 %89, label %94, label %90, !dbg !2614

; <label>:90                                      ; preds = %76
  %91 = load i8*, i8** %fn, align 8, !dbg !2615
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.12, i32 0, i32 0), i8* %91), !dbg !2617
  %92 = load %struct.context*, %struct.context** %cont, align 8, !dbg !2618
  %93 = call i32 @request_abort(%struct.context* %92, i32 -1), !dbg !2619
  store i32 %93, i32* %1, align 4, !dbg !2620
  br label %142, !dbg !2620

; <label>:94                                      ; preds = %76
  %95 = load %struct.context*, %struct.context** %cont, align 8, !dbg !2621
  %96 = getelementptr inbounds %struct.context, %struct.context* %95, i32 0, i32 16, !dbg !2622
  %97 = bitcast %union.anon.0* %96 to i8**, !dbg !2623
  %98 = load i8*, i8** %97, align 8, !dbg !2623
  %99 = load %struct.context*, %struct.context** %cont, align 8, !dbg !2624
  %100 = getelementptr inbounds %struct.context, %struct.context* %99, i32 0, i32 17, !dbg !2625
  %101 = load i32, i32* %100, align 8, !dbg !2625
  %102 = sext i32 %101 to i64, !dbg !2624
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %98, i8* getelementptr inbounds ([65535 x i8], [65535 x i8]* @do_forward.buf, i32 0, i32 0), i64 %102, i32 1, i1 false), !dbg !2626
  %103 = load %struct.context*, %struct.context** %cont, align 8, !dbg !2627
  %104 = getelementptr inbounds %struct.context, %struct.context* %103, i32 0, i32 16, !dbg !2628
  %105 = bitcast %union.anon.0* %104 to i8**, !dbg !2629
  %106 = load i8*, i8** %105, align 8, !dbg !2629
  %107 = load %struct.context*, %struct.context** %cont, align 8, !dbg !2630
  %108 = getelementptr inbounds %struct.context, %struct.context* %107, i32 0, i32 18, !dbg !2631
  store i8* %106, i8** %108, align 8, !dbg !2632
  %109 = load i32, i32* %6, align 4, !dbg !2633
  %110 = icmp eq i32 %109, 0, !dbg !2635
  br i1 %110, label %111, label %124, !dbg !2636

; <label>:111                                     ; preds = %94
  %112 = getelementptr inbounds [256 x i8], [256 x i8]* %str, i32 0, i32 0, !dbg !2637
  %113 = load %struct.context*, %struct.context** %cont, align 8, !dbg !2639
  %114 = getelementptr inbounds %struct.context, %struct.context* %113, i32 0, i32 9, !dbg !2640
  %115 = getelementptr inbounds [256 x i8], [256 x i8]* %114, i32 0, i32 0, !dbg !2639
  %116 = call i8* @dname_decompress(i8* %112, i32 256, i8* %115, i8* null, i8* null, i32* null), !dbg !2641
  %117 = load %struct.context*, %struct.context** %cont, align 8, !dbg !2642
  %118 = getelementptr inbounds %struct.context, %struct.context* %117, i32 0, i32 12, !dbg !2643
  %119 = load i16, i16* %118, align 2, !dbg !2643
  %120 = call i8* @string_rtype(i16 zeroext %119), !dbg !2644
  %121 = getelementptr inbounds [256 x i8], [256 x i8]* %str, i32 0, i32 0, !dbg !2645
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.13, i32 0, i32 0), i8* %120, i8* %121), !dbg !2646
  %122 = load %struct.context*, %struct.context** %cont, align 8, !dbg !2647
  %123 = call i32 bitcast (i32 (%struct.context.107*)* @udp_request_start to i32 (%struct.context*)*)(%struct.context* %122), !dbg !2648
  store i32 %123, i32* %6, align 4, !dbg !2649
  br label %124, !dbg !2650

; <label>:124                                     ; preds = %111, %94
  %125 = load i32, i32* %6, align 4, !dbg !2651
  %126 = icmp eq i32 %125, 1, !dbg !2653
  br i1 %126, label %127, label %140, !dbg !2654

; <label>:127                                     ; preds = %124
  %128 = getelementptr inbounds [256 x i8], [256 x i8]* %str, i32 0, i32 0, !dbg !2655
  %129 = load %struct.context*, %struct.context** %cont, align 8, !dbg !2657
  %130 = getelementptr inbounds %struct.context, %struct.context* %129, i32 0, i32 9, !dbg !2658
  %131 = getelementptr inbounds [256 x i8], [256 x i8]* %130, i32 0, i32 0, !dbg !2657
  %132 = call i8* @dname_decompress(i8* %128, i32 256, i8* %131, i8* null, i8* null, i32* null), !dbg !2659
  %133 = load %struct.context*, %struct.context** %cont, align 8, !dbg !2660
  %134 = getelementptr inbounds %struct.context, %struct.context* %133, i32 0, i32 12, !dbg !2661
  %135 = load i16, i16* %134, align 2, !dbg !2661
  %136 = call i8* @string_rtype(i16 zeroext %135), !dbg !2662
  %137 = getelementptr inbounds [256 x i8], [256 x i8]* %str, i32 0, i32 0, !dbg !2663
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.14, i32 0, i32 0), i8* %136, i8* %137), !dbg !2664
  %138 = load %struct.context*, %struct.context** %cont, align 8, !dbg !2665
  %139 = call i32 bitcast (i32 (%struct.context.69*)* @tcp_request_start to i32 (%struct.context*)*)(%struct.context* %138), !dbg !2666
  store i32 %139, i32* %6, align 4, !dbg !2667
  br label %140, !dbg !2668

; <label>:140                                     ; preds = %127, %124
  %141 = load i32, i32* %6, align 4, !dbg !2669
  store i32 %141, i32* %1, align 4, !dbg !2670
  br label %142, !dbg !2670

; <label>:142                                     ; preds = %140, %90, %72, %11
  %143 = load i32, i32* %1, align 4, !dbg !2671
  ret i32 %143, !dbg !2671
}

; Function Attrs: nounwind uwtable
define i32 @request_abort(%struct.context* %cont, i32 %status) #0 !dbg !175 {
  %1 = alloca %struct.context*, align 8
  %2 = alloca i32, align 4
  store %struct.context* %cont, %struct.context** %1, align 8
  call void @llvm.dbg.declare(metadata %struct.context** %1, metadata !2672, metadata !2279), !dbg !2673
  store i32 %status, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !2674, metadata !2279), !dbg !2675
  %3 = load %struct.context*, %struct.context** %1, align 8, !dbg !2676
  %4 = icmp ne %struct.context* %3, null, !dbg !2676
  br i1 %4, label %5, label %19, !dbg !2678

; <label>:5                                       ; preds = %0
  %6 = load i32, i32* %2, align 4, !dbg !2679
  %7 = icmp eq i32 %6, -2, !dbg !2681
  br i1 %7, label %8, label %19, !dbg !2682

; <label>:8                                       ; preds = %5
  %9 = load %struct.context*, %struct.context** %1, align 8, !dbg !2683
  %10 = getelementptr inbounds %struct.context, %struct.context* %9, i32 0, i32 0, !dbg !2685
  %11 = load %struct.context*, %struct.context** %10, align 8, !dbg !2685
  %12 = getelementptr inbounds %struct.context, %struct.context* %11, i32 0, i32 1, !dbg !2686
  store %struct.context* null, %struct.context** %12, align 8, !dbg !2687
  %13 = load %struct.context*, %struct.context** %1, align 8, !dbg !2688
  %14 = getelementptr inbounds %struct.context, %struct.context* %13, i32 0, i32 0, !dbg !2689
  %15 = load %struct.context*, %struct.context** %14, align 8, !dbg !2689
  %16 = call i32 @response_abort(%struct.context* %15, i32 -2), !dbg !2690
  %17 = load %struct.context*, %struct.context** %1, align 8, !dbg !2691
  %18 = getelementptr inbounds %struct.context, %struct.context* %17, i32 0, i32 0, !dbg !2692
  store %struct.context* null, %struct.context** %18, align 8, !dbg !2693
  br label %19, !dbg !2694

; <label>:19                                      ; preds = %8, %5, %0
  %20 = load %struct.context*, %struct.context** %1, align 8, !dbg !2695
  %21 = icmp ne %struct.context* %20, null, !dbg !2695
  br i1 %21, label %22, label %43, !dbg !2697

; <label>:22                                      ; preds = %19
  %23 = load %struct.context*, %struct.context** %1, align 8, !dbg !2698
  %24 = getelementptr inbounds %struct.context, %struct.context* %23, i32 0, i32 0, !dbg !2700
  %25 = load %struct.context*, %struct.context** %24, align 8, !dbg !2700
  %26 = icmp ne %struct.context* %25, null, !dbg !2698
  br i1 %26, label %27, label %43, !dbg !2701

; <label>:27                                      ; preds = %22
  %28 = load %struct.context*, %struct.context** %1, align 8, !dbg !2702
  %29 = getelementptr inbounds %struct.context, %struct.context* %28, i32 0, i32 0, !dbg !2704
  %30 = load %struct.context*, %struct.context** %29, align 8, !dbg !2704
  %31 = getelementptr inbounds %struct.context, %struct.context* %30, i32 0, i32 1, !dbg !2705
  store %struct.context* null, %struct.context** %31, align 8, !dbg !2706
  %32 = load %struct.context*, %struct.context** %1, align 8, !dbg !2707
  %33 = getelementptr inbounds %struct.context, %struct.context* %32, i32 0, i32 0, !dbg !2708
  %34 = load %struct.context*, %struct.context** %33, align 8, !dbg !2708
  %35 = getelementptr inbounds %struct.context, %struct.context* %34, i32 0, i32 7, !dbg !2709
  %36 = load i32 (%struct.context*)*, i32 (%struct.context*)** %35, align 8, !dbg !2709
  %37 = load %struct.context*, %struct.context** %1, align 8, !dbg !2710
  %38 = getelementptr inbounds %struct.context, %struct.context* %37, i32 0, i32 0, !dbg !2711
  %39 = load %struct.context*, %struct.context** %38, align 8, !dbg !2711
  %40 = call i32 %36(%struct.context* %39), !dbg !2707
  %41 = load %struct.context*, %struct.context** %1, align 8, !dbg !2712
  %42 = getelementptr inbounds %struct.context, %struct.context* %41, i32 0, i32 0, !dbg !2713
  store %struct.context* null, %struct.context** %42, align 8, !dbg !2714
  br label %43, !dbg !2715

; <label>:43                                      ; preds = %27, %22, %19
  %44 = load %struct.context*, %struct.context** %1, align 8, !dbg !2716
  %45 = call i8* bitcast (i8* (%struct.context.19*)* @context_destroy to i8* (%struct.context*)*)(%struct.context* %44), !dbg !2717
  %46 = load i32, i32* %2, align 4, !dbg !2718
  ret i32 %46, !dbg !2719
}

; Function Attrs: nounwind
declare noalias i8* @malloc(i64) #5

; Function Attrs: nounwind uwtable
define i32 @request_retry(%struct.context* %cont) #0 !dbg !171 {
  %1 = alloca i32, align 4
  %2 = alloca %struct.context*, align 8
  %astr = alloca [256 x i8], align 16
  %bstr = alloca [256 x i8], align 16
  store %struct.context* %cont, %struct.context** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.context** %2, metadata !2720, metadata !2279), !dbg !2721
  call void @llvm.dbg.declare(metadata [256 x i8]* %astr, metadata !2722, metadata !2279), !dbg !2724
  call void @llvm.dbg.declare(metadata [256 x i8]* %bstr, metadata !2725, metadata !2279), !dbg !2726
  %3 = load %struct.context*, %struct.context** %2, align 8, !dbg !2727
  %4 = getelementptr inbounds %struct.context, %struct.context* %3, i32 0, i32 20, !dbg !2728
  %5 = load i16, i16* %4, align 8, !dbg !2729
  %6 = add i16 %5, 1, !dbg !2729
  store i16 %6, i16* %4, align 8, !dbg !2729
  %7 = load %struct.context*, %struct.context** %2, align 8, !dbg !2730
  %8 = getelementptr inbounds %struct.context, %struct.context* %7, i32 0, i32 21, !dbg !2731
  %9 = load i16, i16* %8, align 2, !dbg !2731
  %10 = zext i16 %9 to i32, !dbg !2730
  %11 = mul nsw i32 %10, 2, !dbg !2732
  %12 = trunc i32 %11 to i16, !dbg !2730
  %13 = load %struct.context*, %struct.context** %2, align 8, !dbg !2733
  %14 = getelementptr inbounds %struct.context, %struct.context* %13, i32 0, i32 21, !dbg !2734
  store i16 %12, i16* %14, align 2, !dbg !2735
  %15 = load %struct.context*, %struct.context** %2, align 8, !dbg !2736
  %16 = getelementptr inbounds %struct.context, %struct.context* %15, i32 0, i32 5, !dbg !2737
  %17 = load %struct.generic_list*, %struct.generic_list** %16, align 8, !dbg !2737
  %18 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %17, i32 0, i32 2, !dbg !2738
  %19 = load i8*, i8** %18, align 8, !dbg !2738
  %20 = bitcast i8* %19 to %struct.sockaddr*, !dbg !2736
  call void @fwd_mark(%struct.sockaddr* %20, i32 1), !dbg !2739
  %21 = load %struct.context*, %struct.context** %2, align 8, !dbg !2740
  %22 = getelementptr inbounds %struct.context, %struct.context* %21, i32 0, i32 20, !dbg !2742
  %23 = load i16, i16* %22, align 8, !dbg !2742
  %24 = zext i16 %23 to i32, !dbg !2740
  %25 = icmp sgt i32 %24, 1, !dbg !2743
  br i1 %25, label %26, label %27, !dbg !2744

; <label>:26                                      ; preds = %0
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.15, i32 0, i32 0)), !dbg !2745
  store i32 -2, i32* %1, align 4, !dbg !2747
  br label %75, !dbg !2747

; <label>:27                                      ; preds = %0
  %28 = load %struct.context*, %struct.context** %2, align 8, !dbg !2748
  %29 = getelementptr inbounds %struct.context, %struct.context* %28, i32 0, i32 5, !dbg !2750
  %30 = load %struct.generic_list*, %struct.generic_list** %29, align 8, !dbg !2750
  %31 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %30, i32 0, i32 0, !dbg !2751
  %32 = load %struct.generic_list*, %struct.generic_list** %31, align 8, !dbg !2751
  %33 = icmp ne %struct.generic_list* %32, null, !dbg !2748
  br i1 %33, label %34, label %43, !dbg !2752

; <label>:34                                      ; preds = %27
  %35 = load %struct.context*, %struct.context** %2, align 8, !dbg !2753
  %36 = getelementptr inbounds %struct.context, %struct.context* %35, i32 0, i32 5, !dbg !2755
  %37 = load %struct.generic_list*, %struct.generic_list** %36, align 8, !dbg !2755
  %38 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %37, i32 0, i32 0, !dbg !2756
  %39 = load %struct.generic_list*, %struct.generic_list** %38, align 8, !dbg !2756
  %40 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %39, i32 0, i32 2, !dbg !2757
  %41 = load i8*, i8** %40, align 8, !dbg !2757
  %42 = icmp ne i8* %41, null, !dbg !2753
  br i1 %42, label %44, label %43, !dbg !2758

; <label>:43                                      ; preds = %34, %27
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.16, i32 0, i32 0)), !dbg !2759
  br label %52, !dbg !2759

; <label>:44                                      ; preds = %34
  %45 = load %struct.context*, %struct.context** %2, align 8, !dbg !2760
  %46 = getelementptr inbounds %struct.context, %struct.context* %45, i32 0, i32 5, !dbg !2761
  %47 = load %struct.generic_list*, %struct.generic_list** %46, align 8, !dbg !2761
  %48 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %47, i32 0, i32 0, !dbg !2762
  %49 = load %struct.generic_list*, %struct.generic_list** %48, align 8, !dbg !2762
  %50 = load %struct.context*, %struct.context** %2, align 8, !dbg !2763
  %51 = getelementptr inbounds %struct.context, %struct.context* %50, i32 0, i32 5, !dbg !2764
  store %struct.generic_list* %49, %struct.generic_list** %51, align 8, !dbg !2765
  br label %52

; <label>:52                                      ; preds = %44, %43
  %53 = getelementptr inbounds [256 x i8], [256 x i8]* %astr, i32 0, i32 0, !dbg !2766
  %54 = load %struct.context*, %struct.context** %2, align 8, !dbg !2767
  %55 = getelementptr inbounds %struct.context, %struct.context* %54, i32 0, i32 9, !dbg !2768
  %56 = getelementptr inbounds [256 x i8], [256 x i8]* %55, i32 0, i32 0, !dbg !2767
  %57 = call i8* @dname_decompress(i8* %53, i32 256, i8* %56, i8* null, i8* null, i32* null), !dbg !2769
  %58 = getelementptr inbounds [256 x i8], [256 x i8]* %astr, i32 0, i32 0, !dbg !2770
  %59 = load %struct.context*, %struct.context** %2, align 8, !dbg !2771
  %60 = getelementptr inbounds %struct.context, %struct.context* %59, i32 0, i32 5, !dbg !2772
  %61 = load %struct.generic_list*, %struct.generic_list** %60, align 8, !dbg !2772
  %62 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %61, i32 0, i32 2, !dbg !2773
  %63 = load i8*, i8** %62, align 8, !dbg !2773
  %64 = bitcast i8* %63 to %struct.sockaddr*, !dbg !2774
  %65 = getelementptr inbounds [256 x i8], [256 x i8]* %bstr, i32 0, i32 0, !dbg !2775
  %66 = call i8* @sprint_inet(%struct.sockaddr* %64, i8* %65), !dbg !2776
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.17, i32 0, i32 0), i8* %58, i8* %66), !dbg !2777
  %67 = load %struct.context*, %struct.context** %2, align 8, !dbg !2778
  %68 = getelementptr inbounds %struct.context, %struct.context* %67, i32 0, i32 20, !dbg !2779
  %69 = load i16, i16* %68, align 8, !dbg !2779
  %70 = zext i16 %69 to i32, !dbg !2778
  %71 = load %struct.context*, %struct.context** %2, align 8, !dbg !2780
  %72 = getelementptr inbounds %struct.context, %struct.context* %71, i32 0, i32 21, !dbg !2781
  %73 = load i16, i16* %72, align 2, !dbg !2781
  %74 = zext i16 %73 to i32, !dbg !2780
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.18, i32 0, i32 0), i32 %70, i32 1, i32 1, i32 %74), !dbg !2782
  store i32 0, i32* %1, align 4, !dbg !2783
  br label %75, !dbg !2783

; <label>:75                                      ; preds = %52, %26
  %76 = load i32, i32* %1, align 4, !dbg !2784
  ret i32 %76, !dbg !2784
}

; Function Attrs: nounwind uwtable
define i32 @recursive_process(%struct.context* %cont) #0 !dbg !174 {
  %1 = alloca i32, align 4
  %2 = alloca %struct.context*, align 8
  %fn = alloca i8*, align 8
  %qname = alloca [256 x i8], align 16
  %astr = alloca [256 x i8], align 16
  %qclass = alloca i16, align 2
  %qtype = alloca i16, align 2
  %switch_to_tcp = alloca i32, align 4
  %rtype = alloca i16, align 2
  %cp = alloca i8*, align 8
  %astr1 = alloca [256 x i8], align 16
  store %struct.context* %cont, %struct.context** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.context** %2, metadata !2785, metadata !2279), !dbg !2786
  call void @llvm.dbg.declare(metadata i8** %fn, metadata !2787, metadata !2279), !dbg !2788
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.19, i32 0, i32 0), i8** %fn, align 8, !dbg !2788
  call void @llvm.dbg.declare(metadata [256 x i8]* %qname, metadata !2789, metadata !2279), !dbg !2790
  call void @llvm.dbg.declare(metadata [256 x i8]* %astr, metadata !2791, metadata !2279), !dbg !2792
  call void @llvm.dbg.declare(metadata i16* %qclass, metadata !2793, metadata !2279), !dbg !2794
  call void @llvm.dbg.declare(metadata i16* %qtype, metadata !2795, metadata !2279), !dbg !2796
  call void @llvm.dbg.declare(metadata i32* %switch_to_tcp, metadata !2797, metadata !2279), !dbg !2798
  call void @llvm.dbg.declare(metadata i16* %rtype, metadata !2799, metadata !2279), !dbg !2800
  %3 = load i8*, i8** %fn, align 8, !dbg !2801
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i32 0, i32 0), i8* %3), !dbg !2802
  %4 = load %struct.context*, %struct.context** %2, align 8, !dbg !2803
  %5 = getelementptr inbounds %struct.context, %struct.context* %4, i32 0, i32 1, !dbg !2805
  %6 = load %struct.context*, %struct.context** %5, align 8, !dbg !2805
  %7 = icmp ne %struct.context* %6, null, !dbg !2803
  br i1 %7, label %8, label %116, !dbg !2806

; <label>:8                                       ; preds = %0
  call void @llvm.dbg.declare(metadata i8** %cp, metadata !2807, metadata !2279), !dbg !2809
  %9 = load %struct.context*, %struct.context** %2, align 8, !dbg !2810
  %10 = getelementptr inbounds %struct.context, %struct.context* %9, i32 0, i32 1, !dbg !2812
  %11 = load %struct.context*, %struct.context** %10, align 8, !dbg !2812
  %12 = getelementptr inbounds %struct.context, %struct.context* %11, i32 0, i32 16, !dbg !2813
  %13 = bitcast %union.anon.0* %12 to %struct.mesg_hdr**, !dbg !2814
  %14 = load %struct.mesg_hdr*, %struct.mesg_hdr** %13, align 8, !dbg !2814
  %15 = getelementptr inbounds %struct.mesg_hdr, %struct.mesg_hdr* %14, i32 0, i32 1, !dbg !2815
  %16 = load i16, i16* %15, align 2, !dbg !2815
  %17 = lshr i16 %16, 8, !dbg !2815
  %18 = and i16 %17, 15, !dbg !2815
  %19 = trunc i16 %18 to i8, !dbg !2815
  %20 = zext i8 %19 to i32, !dbg !2810
  %21 = icmp ne i32 %20, 0, !dbg !2816
  br i1 %21, label %22, label %74, !dbg !2817

; <label>:22                                      ; preds = %8
  %23 = load %struct.context*, %struct.context** %2, align 8, !dbg !2818
  %24 = getelementptr inbounds %struct.context, %struct.context* %23, i32 0, i32 1, !dbg !2819
  %25 = load %struct.context*, %struct.context** %24, align 8, !dbg !2819
  %26 = getelementptr inbounds %struct.context, %struct.context* %25, i32 0, i32 16, !dbg !2820
  %27 = bitcast %union.anon.0* %26 to %struct.mesg_hdr**, !dbg !2821
  %28 = load %struct.mesg_hdr*, %struct.mesg_hdr** %27, align 8, !dbg !2821
  %29 = getelementptr inbounds %struct.mesg_hdr, %struct.mesg_hdr* %28, i32 0, i32 1, !dbg !2822
  %30 = load i16, i16* %29, align 2, !dbg !2822
  %31 = lshr i16 %30, 8, !dbg !2822
  %32 = and i16 %31, 15, !dbg !2822
  %33 = trunc i16 %32 to i8, !dbg !2822
  %34 = zext i8 %33 to i32, !dbg !2818
  %35 = icmp ne i32 %34, 3, !dbg !2823
  br i1 %35, label %36, label %74, !dbg !2824

; <label>:36                                      ; preds = %22
  %37 = load %struct.context*, %struct.context** %2, align 8, !dbg !2825
  %38 = getelementptr inbounds %struct.context, %struct.context* %37, i32 0, i32 1, !dbg !2826
  %39 = load %struct.context*, %struct.context** %38, align 8, !dbg !2826
  %40 = getelementptr inbounds %struct.context, %struct.context* %39, i32 0, i32 16, !dbg !2827
  %41 = bitcast %union.anon.0* %40 to %struct.mesg_hdr**, !dbg !2828
  %42 = load %struct.mesg_hdr*, %struct.mesg_hdr** %41, align 8, !dbg !2828
  %43 = getelementptr inbounds %struct.mesg_hdr, %struct.mesg_hdr* %42, i32 0, i32 1, !dbg !2829
  %44 = load i16, i16* %43, align 2, !dbg !2829
  %45 = lshr i16 %44, 8, !dbg !2829
  %46 = and i16 %45, 15, !dbg !2829
  %47 = trunc i16 %46 to i8, !dbg !2829
  %48 = zext i8 %47 to i32, !dbg !2825
  %49 = icmp ne i32 %48, 2, !dbg !2830
  br i1 %49, label %50, label %74, !dbg !2831

; <label>:50                                      ; preds = %36
  %51 = load %struct.context*, %struct.context** %2, align 8, !dbg !2833
  %52 = getelementptr inbounds %struct.context, %struct.context* %51, i32 0, i32 1, !dbg !2835
  %53 = load %struct.context*, %struct.context** %52, align 8, !dbg !2835
  %54 = getelementptr inbounds %struct.context, %struct.context* %53, i32 0, i32 16, !dbg !2836
  %55 = bitcast %union.anon.0* %54 to %struct.mesg_hdr**, !dbg !2837
  %56 = load %struct.mesg_hdr*, %struct.mesg_hdr** %55, align 8, !dbg !2837
  %57 = getelementptr inbounds %struct.mesg_hdr, %struct.mesg_hdr* %56, i32 0, i32 1, !dbg !2838
  %58 = load i16, i16* %57, align 2, !dbg !2838
  %59 = lshr i16 %58, 8, !dbg !2838
  %60 = and i16 %59, 15, !dbg !2838
  %61 = trunc i16 %60 to i8, !dbg !2838
  %62 = load %struct.context*, %struct.context** %2, align 8, !dbg !2839
  %63 = getelementptr inbounds %struct.context, %struct.context* %62, i32 0, i32 16, !dbg !2840
  %64 = bitcast %union.anon.0* %63 to %struct.mesg_hdr**, !dbg !2841
  %65 = load %struct.mesg_hdr*, %struct.mesg_hdr** %64, align 8, !dbg !2841
  %66 = getelementptr inbounds %struct.mesg_hdr, %struct.mesg_hdr* %65, i32 0, i32 1, !dbg !2842
  %67 = zext i8 %61 to i16, !dbg !2843
  %68 = load i16, i16* %66, align 2, !dbg !2843
  %69 = and i16 %67, 15, !dbg !2843
  %70 = shl i16 %69, 8, !dbg !2843
  %71 = and i16 %68, -3841, !dbg !2843
  %72 = or i16 %71, %70, !dbg !2843
  store i16 %72, i16* %66, align 2, !dbg !2843
  %73 = trunc i16 %69 to i8, !dbg !2843
  store i32 1, i32* %1, align 4, !dbg !2844
  br label %618, !dbg !2844

; <label>:74                                      ; preds = %36, %22, %8
  %75 = load %struct.context*, %struct.context** %2, align 8, !dbg !2845
  %76 = getelementptr inbounds %struct.context, %struct.context* %75, i32 0, i32 1, !dbg !2846
  %77 = load %struct.context*, %struct.context** %76, align 8, !dbg !2846
  %78 = getelementptr inbounds %struct.context, %struct.context* %77, i32 0, i32 16, !dbg !2847
  %79 = bitcast %union.anon.0* %78 to i8**, !dbg !2848
  %80 = load i8*, i8** %79, align 8, !dbg !2848
  %81 = getelementptr inbounds i8, i8* %80, i64 12, !dbg !2849
  %82 = load %struct.context*, %struct.context** %2, align 8, !dbg !2850
  %83 = getelementptr inbounds %struct.context, %struct.context* %82, i32 0, i32 1, !dbg !2851
  %84 = load %struct.context*, %struct.context** %83, align 8, !dbg !2851
  %85 = getelementptr inbounds %struct.context, %struct.context* %84, i32 0, i32 16, !dbg !2852
  %86 = bitcast %union.anon.0* %85 to i8**, !dbg !2853
  %87 = load i8*, i8** %86, align 8, !dbg !2853
  %88 = load %struct.context*, %struct.context** %2, align 8, !dbg !2854
  %89 = getelementptr inbounds %struct.context, %struct.context* %88, i32 0, i32 1, !dbg !2855
  %90 = load %struct.context*, %struct.context** %89, align 8, !dbg !2855
  %91 = getelementptr inbounds %struct.context, %struct.context* %90, i32 0, i32 17, !dbg !2856
  %92 = load i32, i32* %91, align 8, !dbg !2856
  %93 = sext i32 %92 to i64, !dbg !2857
  %94 = getelementptr inbounds i8, i8* %87, i64 %93, !dbg !2857
  %95 = call i8* @mesg_skip_dname(i8* %81, i8* %94), !dbg !2858
  store i8* %95, i8** %cp, align 8, !dbg !2859
  %96 = load i8*, i8** %cp, align 8, !dbg !2860
  %97 = icmp ne i8* %96, null, !dbg !2860
  br i1 %97, label %98, label %113, !dbg !2862

; <label>:98                                      ; preds = %74
  %99 = load i8*, i8** %cp, align 8, !dbg !2863
  %100 = getelementptr inbounds i8, i8* %99, i32 1, !dbg !2863
  store i8* %100, i8** %cp, align 8, !dbg !2863
  %101 = load i8, i8* %99, align 1, !dbg !2863
  %102 = zext i8 %101 to i32, !dbg !2863
  %103 = shl i32 %102, 8, !dbg !2863
  %104 = trunc i32 %103 to i16, !dbg !2863
  store i16 %104, i16* %rtype, align 2, !dbg !2863
  %105 = load i8*, i8** %cp, align 8, !dbg !2863
  %106 = getelementptr inbounds i8, i8* %105, i32 1, !dbg !2863
  store i8* %106, i8** %cp, align 8, !dbg !2863
  %107 = load i8, i8* %105, align 1, !dbg !2863
  %108 = zext i8 %107 to i32, !dbg !2863
  %109 = load i16, i16* %rtype, align 2, !dbg !2863
  %110 = zext i16 %109 to i32, !dbg !2863
  %111 = or i32 %110, %108, !dbg !2863
  %112 = trunc i32 %111 to i16, !dbg !2863
  store i16 %112, i16* %rtype, align 2, !dbg !2863
  br label %115, !dbg !2866

; <label>:113                                     ; preds = %74
  %114 = load i8*, i8** %fn, align 8, !dbg !2867
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.20, i32 0, i32 0), i8* %114), !dbg !2869
  store i32 -1, i32* %1, align 4, !dbg !2870
  br label %618, !dbg !2870

; <label>:115                                     ; preds = %98
  br label %118, !dbg !2871

; <label>:116                                     ; preds = %0
  %117 = load i8*, i8** %fn, align 8, !dbg !2872
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.21, i32 0, i32 0), i8* %117), !dbg !2874
  store i32 -1, i32* %1, align 4, !dbg !2875
  br label %618, !dbg !2875

; <label>:118                                     ; preds = %115
  %119 = load %struct.context*, %struct.context** %2, align 8, !dbg !2876
  %120 = getelementptr inbounds %struct.context, %struct.context* %119, i32 0, i32 11, !dbg !2877
  %121 = load i16, i16* %120, align 4, !dbg !2877
  store i16 %121, i16* %qclass, align 2, !dbg !2878
  %122 = load %struct.context*, %struct.context** %2, align 8, !dbg !2879
  %123 = getelementptr inbounds %struct.context, %struct.context* %122, i32 0, i32 12, !dbg !2880
  %124 = load i16, i16* %123, align 2, !dbg !2880
  store i16 %124, i16* %qtype, align 2, !dbg !2881
  %125 = getelementptr inbounds [256 x i8], [256 x i8]* %qname, i32 0, i32 0, !dbg !2882
  %126 = load %struct.context*, %struct.context** %2, align 8, !dbg !2883
  %127 = getelementptr inbounds %struct.context, %struct.context* %126, i32 0, i32 9, !dbg !2884
  %128 = getelementptr inbounds [256 x i8], [256 x i8]* %127, i32 0, i32 0, !dbg !2883
  %129 = call i64 @strlcpy(i8* %125, i8* %128, i64 256), !dbg !2885
  %130 = load i8*, i8** %fn, align 8, !dbg !2886
  %131 = load %struct.context*, %struct.context** %2, align 8, !dbg !2887
  %132 = getelementptr inbounds %struct.context, %struct.context* %131, i32 0, i32 2, !dbg !2888
  %133 = load i32, i32* %132, align 8, !dbg !2888
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.22, i32 0, i32 0), i8* %130, i32 %133), !dbg !2889
  store i32 0, i32* %switch_to_tcp, align 4, !dbg !2890
  %134 = load %struct.context*, %struct.context** %2, align 8, !dbg !2891
  %135 = getelementptr inbounds %struct.context, %struct.context* %134, i32 0, i32 1, !dbg !2893
  %136 = load %struct.context*, %struct.context** %135, align 8, !dbg !2893
  %137 = getelementptr inbounds %struct.context, %struct.context* %136, i32 0, i32 16, !dbg !2894
  %138 = bitcast %union.anon.0* %137 to %struct.mesg_hdr**, !dbg !2895
  %139 = load %struct.mesg_hdr*, %struct.mesg_hdr** %138, align 8, !dbg !2895
  %140 = getelementptr inbounds %struct.mesg_hdr, %struct.mesg_hdr* %139, i32 0, i32 1, !dbg !2896
  %141 = load i16, i16* %140, align 2, !dbg !2896
  %142 = lshr i16 %141, 1, !dbg !2896
  %143 = and i16 %142, 1, !dbg !2896
  %144 = trunc i16 %143 to i8, !dbg !2896
  %145 = zext i8 %144 to i32, !dbg !2891
  %146 = icmp eq i32 %145, 1, !dbg !2897
  br i1 %146, label %147, label %159, !dbg !2898

; <label>:147                                     ; preds = %118
  %148 = load i8*, i8** %fn, align 8, !dbg !2899
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.23, i32 0, i32 0), i8* %148), !dbg !2901
  %149 = load %struct.context*, %struct.context** %2, align 8, !dbg !2902
  %150 = getelementptr inbounds %struct.context, %struct.context* %149, i32 0, i32 1, !dbg !2904
  %151 = load %struct.context*, %struct.context** %150, align 8, !dbg !2904
  %152 = getelementptr inbounds %struct.context, %struct.context* %151, i32 0, i32 23, !dbg !2905
  %153 = load i32, i32* %152, align 8, !dbg !2905
  %154 = icmp slt i32 %153, 0, !dbg !2906
  br i1 %154, label %155, label %157, !dbg !2907

; <label>:155                                     ; preds = %147
  store i32 1, i32* %switch_to_tcp, align 4, !dbg !2908
  %156 = load i8*, i8** %fn, align 8, !dbg !2910
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.24, i32 0, i32 0), i8* %156), !dbg !2911
  br label %441, !dbg !2912

; <label>:157                                     ; preds = %147
  %158 = load i8*, i8** %fn, align 8, !dbg !2913
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.25, i32 0, i32 0), i8* %158), !dbg !2915
  store i32 -1, i32* %1, align 4, !dbg !2916
  br label %618, !dbg !2916

; <label>:159                                     ; preds = %118
  %160 = load %struct.context*, %struct.context** %2, align 8, !dbg !2917
  %161 = getelementptr inbounds %struct.context, %struct.context* %160, i32 0, i32 1, !dbg !2919
  %162 = load %struct.context*, %struct.context** %161, align 8, !dbg !2919
  %163 = getelementptr inbounds %struct.context, %struct.context* %162, i32 0, i32 16, !dbg !2920
  %164 = bitcast %union.anon.0* %163 to %struct.mesg_hdr**, !dbg !2921
  %165 = load %struct.mesg_hdr*, %struct.mesg_hdr** %164, align 8, !dbg !2921
  %166 = getelementptr inbounds %struct.mesg_hdr, %struct.mesg_hdr* %165, i32 0, i32 1, !dbg !2922
  %167 = load i16, i16* %166, align 2, !dbg !2922
  %168 = lshr i16 %167, 8, !dbg !2922
  %169 = and i16 %168, 15, !dbg !2922
  %170 = trunc i16 %169 to i8, !dbg !2922
  %171 = zext i8 %170 to i32, !dbg !2917
  %172 = icmp eq i32 %171, 2, !dbg !2923
  br i1 %172, label %173, label %222, !dbg !2924

; <label>:173                                     ; preds = %159
  %174 = load %struct.context*, %struct.context** %2, align 8, !dbg !2925
  %175 = getelementptr inbounds %struct.context, %struct.context* %174, i32 0, i32 2, !dbg !2928
  %176 = load i32, i32* %175, align 8, !dbg !2928
  %177 = icmp eq i32 %176, 1, !dbg !2929
  br i1 %177, label %178, label %197, !dbg !2930

; <label>:178                                     ; preds = %173
  %179 = load i16, i16* %qtype, align 2, !dbg !2931
  %180 = zext i16 %179 to i32, !dbg !2931
  %181 = icmp eq i32 %180, 28, !dbg !2932
  br i1 %181, label %186, label %182, !dbg !2933

; <label>:182                                     ; preds = %178
  %183 = load i16, i16* %qtype, align 2, !dbg !2934
  %184 = zext i16 %183 to i32, !dbg !2934
  %185 = icmp eq i32 %184, 38, !dbg !2936
  br i1 %185, label %186, label %197, !dbg !2937

; <label>:186                                     ; preds = %182, %178
  %187 = load %struct.context*, %struct.context** %2, align 8, !dbg !2939
  %188 = getelementptr inbounds %struct.context, %struct.context* %187, i32 0, i32 1, !dbg !2941
  %189 = load %struct.context*, %struct.context** %188, align 8, !dbg !2941
  %190 = getelementptr inbounds %struct.context, %struct.context* %189, i32 0, i32 16, !dbg !2942
  %191 = bitcast %union.anon.0* %190 to %struct.mesg_hdr**, !dbg !2943
  %192 = load %struct.mesg_hdr*, %struct.mesg_hdr** %191, align 8, !dbg !2943
  %193 = getelementptr inbounds %struct.mesg_hdr, %struct.mesg_hdr* %192, i32 0, i32 1, !dbg !2944
  %194 = load i16, i16* %193, align 2, !dbg !2945
  %195 = and i16 %194, -3841, !dbg !2945
  %196 = or i16 %195, 768, !dbg !2945
  store i16 %196, i16* %193, align 2, !dbg !2945
  br label %221, !dbg !2946

; <label>:197                                     ; preds = %182, %173
  %198 = load %struct.context*, %struct.context** %2, align 8, !dbg !2947
  %199 = getelementptr inbounds %struct.context, %struct.context* %198, i32 0, i32 1, !dbg !2949
  %200 = load %struct.context*, %struct.context** %199, align 8, !dbg !2949
  %201 = getelementptr inbounds %struct.context, %struct.context* %200, i32 0, i32 16, !dbg !2950
  %202 = bitcast %union.anon.0* %201 to %struct.mesg_hdr**, !dbg !2951
  %203 = load %struct.mesg_hdr*, %struct.mesg_hdr** %202, align 8, !dbg !2951
  %204 = getelementptr inbounds %struct.mesg_hdr, %struct.mesg_hdr* %203, i32 0, i32 1, !dbg !2952
  %205 = load i16, i16* %204, align 2, !dbg !2952
  %206 = lshr i16 %205, 8, !dbg !2952
  %207 = and i16 %206, 15, !dbg !2952
  %208 = trunc i16 %207 to i8, !dbg !2952
  %209 = load %struct.context*, %struct.context** %2, align 8, !dbg !2953
  %210 = getelementptr inbounds %struct.context, %struct.context* %209, i32 0, i32 16, !dbg !2954
  %211 = bitcast %union.anon.0* %210 to %struct.mesg_hdr**, !dbg !2955
  %212 = load %struct.mesg_hdr*, %struct.mesg_hdr** %211, align 8, !dbg !2955
  %213 = getelementptr inbounds %struct.mesg_hdr, %struct.mesg_hdr* %212, i32 0, i32 1, !dbg !2956
  %214 = zext i8 %208 to i16, !dbg !2957
  %215 = load i16, i16* %213, align 2, !dbg !2957
  %216 = and i16 %214, 15, !dbg !2957
  %217 = shl i16 %216, 8, !dbg !2957
  %218 = and i16 %215, -3841, !dbg !2957
  %219 = or i16 %218, %217, !dbg !2957
  store i16 %219, i16* %213, align 2, !dbg !2957
  %220 = trunc i16 %216 to i8, !dbg !2957
  store i32 1, i32* %1, align 4, !dbg !2958
  br label %618, !dbg !2958

; <label>:221                                     ; preds = %186
  br label %222, !dbg !2959

; <label>:222                                     ; preds = %221, %159
  %223 = load %struct.context*, %struct.context** %2, align 8, !dbg !2960
  %224 = getelementptr inbounds %struct.context, %struct.context* %223, i32 0, i32 2, !dbg !2962
  %225 = load i32, i32* %224, align 8, !dbg !2962
  %226 = icmp eq i32 %225, 2, !dbg !2963
  br i1 %226, label %227, label %269, !dbg !2964

; <label>:227                                     ; preds = %222
  %228 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 19), align 8, !dbg !2965
  %229 = icmp ne i32 %228, 0, !dbg !2968
  br i1 %229, label %230, label %266, !dbg !2969

; <label>:230                                     ; preds = %227
  %231 = load i16, i16* %rtype, align 2, !dbg !2970
  %232 = zext i16 %231 to i32, !dbg !2970
  %233 = icmp eq i32 %232, 1, !dbg !2972
  br i1 %233, label %234, label %266, !dbg !2973

; <label>:234                                     ; preds = %230
  %235 = load i16, i16* %qtype, align 2, !dbg !2974
  %236 = zext i16 %235 to i32, !dbg !2974
  %237 = icmp eq i32 %236, 28, !dbg !2975
  br i1 %237, label %242, label %238, !dbg !2976

; <label>:238                                     ; preds = %234
  %239 = load i16, i16* %qtype, align 2, !dbg !2977
  %240 = zext i16 %239 to i32, !dbg !2977
  %241 = icmp eq i32 %240, 38, !dbg !2978
  br i1 %241, label %242, label %266, !dbg !2979

; <label>:242                                     ; preds = %238, %234
  %243 = load %struct.context*, %struct.context** %2, align 8, !dbg !2981
  %244 = getelementptr inbounds %struct.context, %struct.context* %243, i32 0, i32 1, !dbg !2983
  %245 = load %struct.context*, %struct.context** %244, align 8, !dbg !2983
  %246 = getelementptr inbounds %struct.context, %struct.context* %245, i32 0, i32 13, !dbg !2984
  %247 = load %struct.generic_list*, %struct.generic_list** %246, align 8, !dbg !2984
  %248 = load i16, i16* %qtype, align 2, !dbg !2985
  %249 = zext i16 %248 to i32, !dbg !2985
  call void @conv_trick_list(%struct.generic_list* %247, i32 %249, i32 0), !dbg !2986
  %250 = load %struct.context*, %struct.context** %2, align 8, !dbg !2987
  %251 = getelementptr inbounds %struct.context, %struct.context* %250, i32 0, i32 1, !dbg !2988
  %252 = load %struct.context*, %struct.context** %251, align 8, !dbg !2988
  %253 = getelementptr inbounds %struct.context, %struct.context* %252, i32 0, i32 14, !dbg !2989
  %254 = load %struct.generic_list*, %struct.generic_list** %253, align 8, !dbg !2989
  %255 = load i16, i16* %qtype, align 2, !dbg !2990
  %256 = zext i16 %255 to i32, !dbg !2990
  call void @conv_trick_list(%struct.generic_list* %254, i32 %256, i32 0), !dbg !2991
  %257 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 23), align 8, !dbg !2992
  %258 = add nsw i32 %257, 1, !dbg !2993
  %259 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 19), align 8, !dbg !2994
  %260 = srem i32 %258, %259, !dbg !2995
  store i32 %260, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 23), align 8, !dbg !2996
  %261 = load i8*, i8** %fn, align 8, !dbg !2997
  %262 = load i16, i16* %qtype, align 2, !dbg !2998
  %263 = zext i16 %262 to i32, !dbg !2998
  %264 = icmp eq i32 %263, 28, !dbg !2999
  %265 = select i1 %264, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.27, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.28, i32 0, i32 0), !dbg !2998
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.26, i32 0, i32 0), i8* %261, i8* %265), !dbg !3000
  br label %266, !dbg !3001

; <label>:266                                     ; preds = %242, %238, %230, %227
  %267 = load %struct.context*, %struct.context** %2, align 8, !dbg !3002
  %268 = getelementptr inbounds %struct.context, %struct.context* %267, i32 0, i32 2, !dbg !3003
  store i32 0, i32* %268, align 8, !dbg !3004
  br label %269, !dbg !3005

; <label>:269                                     ; preds = %266, %222
  %270 = load %struct.context*, %struct.context** %2, align 8, !dbg !3006
  %271 = getelementptr inbounds %struct.context, %struct.context* %270, i32 0, i32 2, !dbg !3008
  %272 = load i32, i32* %271, align 8, !dbg !3008
  %273 = icmp eq i32 %272, 3, !dbg !3009
  br i1 %273, label %274, label %296, !dbg !3010

; <label>:274                                     ; preds = %269
  %275 = load %struct.context*, %struct.context** %2, align 8, !dbg !3011
  %276 = getelementptr inbounds %struct.context, %struct.context* %275, i32 0, i32 1, !dbg !3013
  %277 = load %struct.context*, %struct.context** %276, align 8, !dbg !3013
  %278 = getelementptr inbounds %struct.context, %struct.context* %277, i32 0, i32 13, !dbg !3014
  %279 = load %struct.generic_list*, %struct.generic_list** %278, align 8, !dbg !3014
  %280 = load %struct.context*, %struct.context** %2, align 8, !dbg !3015
  %281 = getelementptr inbounds %struct.context, %struct.context* %280, i32 0, i32 9, !dbg !3016
  %282 = getelementptr inbounds [256 x i8], [256 x i8]* %281, i32 0, i32 0, !dbg !3015
  call void @conv_trick_ptr(%struct.generic_list* %279, i8* %282), !dbg !3017
  %283 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 8), align 4, !dbg !3018
  %284 = icmp ne i32 %283, 0, !dbg !3020
  br i1 %284, label %285, label %293, !dbg !3021

; <label>:285                                     ; preds = %274
  %286 = getelementptr inbounds [256 x i8], [256 x i8]* %astr, i32 0, i32 0, !dbg !3022
  %287 = load %struct.context*, %struct.context** %2, align 8, !dbg !3024
  %288 = getelementptr inbounds %struct.context, %struct.context* %287, i32 0, i32 9, !dbg !3025
  %289 = getelementptr inbounds [256 x i8], [256 x i8]* %288, i32 0, i32 0, !dbg !3024
  %290 = call i8* @dname_decompress(i8* %286, i32 256, i8* %289, i8* null, i8* null, i32* null), !dbg !3026
  %291 = load i8*, i8** %fn, align 8, !dbg !3027
  %292 = getelementptr inbounds [256 x i8], [256 x i8]* %astr, i32 0, i32 0, !dbg !3028
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.29, i32 0, i32 0), i8* %291, i8* %292), !dbg !3029
  br label %293, !dbg !3030

; <label>:293                                     ; preds = %285, %274
  %294 = load %struct.context*, %struct.context** %2, align 8, !dbg !3031
  %295 = getelementptr inbounds %struct.context, %struct.context* %294, i32 0, i32 2, !dbg !3032
  store i32 0, i32* %295, align 8, !dbg !3033
  br label %296, !dbg !3034

; <label>:296                                     ; preds = %293, %269
  %297 = load %struct.context*, %struct.context** %2, align 8, !dbg !3035
  %298 = getelementptr inbounds %struct.context, %struct.context* %297, i32 0, i32 2, !dbg !3037
  %299 = load i32, i32* %298, align 8, !dbg !3037
  %300 = icmp eq i32 %299, 4, !dbg !3038
  br i1 %300, label %301, label %323, !dbg !3039

; <label>:301                                     ; preds = %296
  %302 = load %struct.context*, %struct.context** %2, align 8, !dbg !3040
  %303 = getelementptr inbounds %struct.context, %struct.context* %302, i32 0, i32 1, !dbg !3042
  %304 = load %struct.context*, %struct.context** %303, align 8, !dbg !3042
  %305 = getelementptr inbounds %struct.context, %struct.context* %304, i32 0, i32 13, !dbg !3043
  %306 = load %struct.generic_list*, %struct.generic_list** %305, align 8, !dbg !3043
  %307 = load %struct.context*, %struct.context** %2, align 8, !dbg !3044
  %308 = getelementptr inbounds %struct.context, %struct.context* %307, i32 0, i32 9, !dbg !3045
  %309 = getelementptr inbounds [256 x i8], [256 x i8]* %308, i32 0, i32 0, !dbg !3044
  call void @conv_trick_newptr(%struct.generic_list* %306, i8* %309), !dbg !3046
  %310 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 8), align 4, !dbg !3047
  %311 = icmp ne i32 %310, 0, !dbg !3049
  br i1 %311, label %312, label %320, !dbg !3050

; <label>:312                                     ; preds = %301
  %313 = getelementptr inbounds [256 x i8], [256 x i8]* %astr, i32 0, i32 0, !dbg !3051
  %314 = load %struct.context*, %struct.context** %2, align 8, !dbg !3053
  %315 = getelementptr inbounds %struct.context, %struct.context* %314, i32 0, i32 9, !dbg !3054
  %316 = getelementptr inbounds [256 x i8], [256 x i8]* %315, i32 0, i32 0, !dbg !3053
  %317 = call i8* @dname_decompress(i8* %313, i32 256, i8* %316, i8* null, i8* null, i32* null), !dbg !3055
  %318 = load i8*, i8** %fn, align 8, !dbg !3056
  %319 = getelementptr inbounds [256 x i8], [256 x i8]* %astr, i32 0, i32 0, !dbg !3057
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.30, i32 0, i32 0), i8* %318, i8* %319), !dbg !3058
  br label %320, !dbg !3059

; <label>:320                                     ; preds = %312, %301
  %321 = load %struct.context*, %struct.context** %2, align 8, !dbg !3060
  %322 = getelementptr inbounds %struct.context, %struct.context* %321, i32 0, i32 2, !dbg !3061
  store i32 0, i32* %322, align 8, !dbg !3062
  br label %323, !dbg !3063

; <label>:323                                     ; preds = %320, %296
  %324 = load %struct.context*, %struct.context** %2, align 8, !dbg !3064
  %325 = getelementptr inbounds %struct.context, %struct.context* %324, i32 0, i32 2, !dbg !3066
  %326 = load i32, i32* %325, align 8, !dbg !3066
  %327 = icmp eq i32 %326, 1, !dbg !3067
  br i1 %327, label %328, label %398, !dbg !3068

; <label>:328                                     ; preds = %323
  %329 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 19), align 8, !dbg !3069
  %330 = icmp ne i32 %329, 0, !dbg !3072
  br i1 %330, label %331, label %397, !dbg !3073

; <label>:331                                     ; preds = %328
  %332 = load %struct.context*, %struct.context** %2, align 8, !dbg !3074
  %333 = getelementptr inbounds %struct.context, %struct.context* %332, i32 0, i32 1, !dbg !3076
  %334 = load %struct.context*, %struct.context** %333, align 8, !dbg !3076
  %335 = getelementptr inbounds %struct.context, %struct.context* %334, i32 0, i32 16, !dbg !3077
  %336 = bitcast %union.anon.0* %335 to %struct.mesg_hdr**, !dbg !3078
  %337 = load %struct.mesg_hdr*, %struct.mesg_hdr** %336, align 8, !dbg !3078
  %338 = getelementptr inbounds %struct.mesg_hdr, %struct.mesg_hdr* %337, i32 0, i32 1, !dbg !3079
  %339 = load i16, i16* %338, align 2, !dbg !3079
  %340 = lshr i16 %339, 8, !dbg !3079
  %341 = and i16 %340, 15, !dbg !3079
  %342 = trunc i16 %341 to i8, !dbg !3079
  %343 = zext i8 %342 to i32, !dbg !3074
  %344 = icmp eq i32 %343, 3, !dbg !3080
  br i1 %344, label %380, label %345, !dbg !3081

; <label>:345                                     ; preds = %331
  %346 = load %struct.context*, %struct.context** %2, align 8, !dbg !3082
  %347 = getelementptr inbounds %struct.context, %struct.context* %346, i32 0, i32 1, !dbg !3083
  %348 = load %struct.context*, %struct.context** %347, align 8, !dbg !3083
  %349 = getelementptr inbounds %struct.context, %struct.context* %348, i32 0, i32 16, !dbg !3084
  %350 = bitcast %union.anon.0* %349 to %struct.mesg_hdr**, !dbg !3085
  %351 = load %struct.mesg_hdr*, %struct.mesg_hdr** %350, align 8, !dbg !3085
  %352 = getelementptr inbounds %struct.mesg_hdr, %struct.mesg_hdr* %351, i32 0, i32 1, !dbg !3086
  %353 = load i16, i16* %352, align 2, !dbg !3086
  %354 = lshr i16 %353, 8, !dbg !3086
  %355 = and i16 %354, 15, !dbg !3086
  %356 = trunc i16 %355 to i8, !dbg !3086
  %357 = zext i8 %356 to i32, !dbg !3082
  %358 = icmp eq i32 %357, 0, !dbg !3087
  br i1 %358, label %359, label %397, !dbg !3088

; <label>:359                                     ; preds = %345
  %360 = load %struct.context*, %struct.context** %2, align 8, !dbg !3089
  %361 = getelementptr inbounds %struct.context, %struct.context* %360, i32 0, i32 1, !dbg !3090
  %362 = load %struct.context*, %struct.context** %361, align 8, !dbg !3090
  %363 = getelementptr inbounds %struct.context, %struct.context* %362, i32 0, i32 16, !dbg !3091
  %364 = bitcast %union.anon.0* %363 to %struct.mesg_hdr**, !dbg !3092
  %365 = load %struct.mesg_hdr*, %struct.mesg_hdr** %364, align 8, !dbg !3092
  %366 = icmp ne %struct.mesg_hdr* %365, null, !dbg !3089
  br i1 %366, label %367, label %380, !dbg !3093

; <label>:367                                     ; preds = %359
  %368 = load %struct.context*, %struct.context** %2, align 8, !dbg !3094
  %369 = getelementptr inbounds %struct.context, %struct.context* %368, i32 0, i32 1, !dbg !3095
  %370 = load %struct.context*, %struct.context** %369, align 8, !dbg !3095
  %371 = getelementptr inbounds %struct.context, %struct.context* %370, i32 0, i32 16, !dbg !3096
  %372 = bitcast %union.anon.0* %371 to %struct.mesg_hdr**, !dbg !3097
  %373 = load %struct.mesg_hdr*, %struct.mesg_hdr** %372, align 8, !dbg !3097
  %374 = getelementptr inbounds %struct.mesg_hdr, %struct.mesg_hdr* %373, i32 0, i32 3, !dbg !3098
  %375 = load i16, i16* %374, align 2, !dbg !3098
  %376 = zext i16 %375 to i32, !dbg !3094
  %377 = call zeroext i16 @htons(i16 zeroext 0) #1, !dbg !3099
  %378 = zext i16 %377 to i32, !dbg !3099
  %379 = icmp eq i32 %376, %378, !dbg !3100
  br i1 %379, label %380, label %397, !dbg !3101

; <label>:380                                     ; preds = %367, %359, %331
  %381 = load i16, i16* %rtype, align 2, !dbg !3103
  %382 = zext i16 %381 to i32, !dbg !3103
  %383 = icmp eq i32 %382, 28, !dbg !3106
  br i1 %383, label %388, label %384, !dbg !3107

; <label>:384                                     ; preds = %380
  %385 = load i16, i16* %rtype, align 2, !dbg !3108
  %386 = zext i16 %385 to i32, !dbg !3108
  %387 = icmp eq i32 %386, 38, !dbg !3110
  br i1 %387, label %388, label %396, !dbg !3111

; <label>:388                                     ; preds = %384, %380
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.31, i32 0, i32 0)), !dbg !3112
  %389 = getelementptr inbounds [256 x i8], [256 x i8]* %qname, i32 0, i32 0, !dbg !3114
  %390 = load %struct.context*, %struct.context** %2, align 8, !dbg !3115
  %391 = getelementptr inbounds %struct.context, %struct.context* %390, i32 0, i32 9, !dbg !3116
  %392 = getelementptr inbounds [256 x i8], [256 x i8]* %391, i32 0, i32 0, !dbg !3115
  %393 = call i64 @strlcpy(i8* %389, i8* %392, i64 256), !dbg !3117
  store i16 1, i16* %qtype, align 2, !dbg !3118
  %394 = load %struct.context*, %struct.context** %2, align 8, !dbg !3119
  %395 = getelementptr inbounds %struct.context, %struct.context* %394, i32 0, i32 2, !dbg !3120
  store i32 2, i32* %395, align 8, !dbg !3121
  br label %396, !dbg !3122

; <label>:396                                     ; preds = %388, %384
  br label %397, !dbg !3123

; <label>:397                                     ; preds = %396, %367, %345, %328
  br label %398, !dbg !3124

; <label>:398                                     ; preds = %397, %323
  %399 = load %struct.context*, %struct.context** %2, align 8, !dbg !3125
  %400 = getelementptr inbounds %struct.context, %struct.context* %399, i32 0, i32 2, !dbg !3127
  %401 = load i32, i32* %400, align 8, !dbg !3127
  %402 = icmp eq i32 %401, 1, !dbg !3128
  br i1 %402, label %403, label %406, !dbg !3129

; <label>:403                                     ; preds = %398
  %404 = load %struct.context*, %struct.context** %2, align 8, !dbg !3130
  %405 = getelementptr inbounds %struct.context, %struct.context* %404, i32 0, i32 2, !dbg !3131
  store i32 0, i32* %405, align 8, !dbg !3132
  br label %406, !dbg !3130

; <label>:406                                     ; preds = %403, %398
  %407 = load i8*, i8** %fn, align 8, !dbg !3133
  %408 = load %struct.context*, %struct.context** %2, align 8, !dbg !3134
  %409 = getelementptr inbounds %struct.context, %struct.context* %408, i32 0, i32 2, !dbg !3135
  %410 = load i32, i32* %409, align 8, !dbg !3135
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.32, i32 0, i32 0), i8* %407, i32 %410), !dbg !3136
  %411 = load %struct.context*, %struct.context** %2, align 8, !dbg !3137
  %412 = getelementptr inbounds %struct.context, %struct.context* %411, i32 0, i32 2, !dbg !3139
  %413 = load i32, i32* %412, align 8, !dbg !3139
  %414 = icmp eq i32 %413, 0, !dbg !3140
  br i1 %414, label %415, label %440, !dbg !3141

; <label>:415                                     ; preds = %406
  %416 = load %struct.context*, %struct.context** %2, align 8, !dbg !3142
  %417 = getelementptr inbounds %struct.context, %struct.context* %416, i32 0, i32 1, !dbg !3144
  %418 = load %struct.context*, %struct.context** %417, align 8, !dbg !3144
  %419 = getelementptr inbounds %struct.context, %struct.context* %418, i32 0, i32 13, !dbg !3145
  %420 = load %struct.generic_list*, %struct.generic_list** %419, align 8, !dbg !3145
  %421 = getelementptr inbounds [256 x i8], [256 x i8]* %qname, i32 0, i32 0, !dbg !3146
  call void @cname_without_crecord(%struct.generic_list* %420, i8* %421), !dbg !3147
  %422 = getelementptr inbounds [256 x i8], [256 x i8]* %qname, i32 0, i32 0, !dbg !3148
  %423 = load i8, i8* %422, align 16, !dbg !3148
  %424 = icmp ne i8 %423, 0, !dbg !3148
  br i1 %424, label %425, label %439, !dbg !3150

; <label>:425                                     ; preds = %415
  %426 = load %struct.context*, %struct.context** %2, align 8, !dbg !3151
  %427 = getelementptr inbounds %struct.context, %struct.context* %426, i32 0, i32 3, !dbg !3154
  %428 = load i32, i32* %427, align 4, !dbg !3155
  %429 = add nsw i32 %428, 1, !dbg !3155
  store i32 %429, i32* %427, align 4, !dbg !3155
  %430 = icmp sgt i32 %428, 6, !dbg !3156
  br i1 %430, label %431, label %436, !dbg !3157

; <label>:431                                     ; preds = %425
  %432 = load i8*, i8** %fn, align 8, !dbg !3158
  %433 = load %struct.context*, %struct.context** %2, align 8, !dbg !3160
  %434 = getelementptr inbounds %struct.context, %struct.context* %433, i32 0, i32 3, !dbg !3161
  %435 = load i32, i32* %434, align 4, !dbg !3161
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.33, i32 0, i32 0), i8* %432, i32 %435), !dbg !3162
  store i32 -1, i32* %1, align 4, !dbg !3163
  br label %618, !dbg !3163

; <label>:436                                     ; preds = %425
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.34, i32 0, i32 0)), !dbg !3164
  %437 = load %struct.context*, %struct.context** %2, align 8, !dbg !3165
  %438 = getelementptr inbounds %struct.context, %struct.context* %437, i32 0, i32 2, !dbg !3166
  store i32 1, i32* %438, align 8, !dbg !3167
  br label %439, !dbg !3168

; <label>:439                                     ; preds = %436, %415
  br label %440, !dbg !3169

; <label>:440                                     ; preds = %439, %406
  br label %441, !dbg !3170

; <label>:441                                     ; preds = %440, %155
  %442 = load %struct.context*, %struct.context** %2, align 8, !dbg !3172
  %443 = getelementptr inbounds %struct.context, %struct.context* %442, i32 0, i32 2, !dbg !3174
  %444 = load i32, i32* %443, align 8, !dbg !3174
  %445 = icmp ne i32 %444, 0, !dbg !3175
  br i1 %445, label %446, label %488, !dbg !3176

; <label>:446                                     ; preds = %441
  call void @llvm.dbg.declare(metadata [256 x i8]* %astr1, metadata !3177, metadata !2279), !dbg !3179
  %447 = load %struct.context*, %struct.context** %2, align 8, !dbg !3180
  %448 = getelementptr inbounds %struct.context, %struct.context* %447, i32 0, i32 1, !dbg !3181
  %449 = load %struct.context*, %struct.context** %448, align 8, !dbg !3181
  %450 = getelementptr inbounds %struct.context, %struct.context* %449, i32 0, i32 0, !dbg !3182
  store %struct.context* null, %struct.context** %450, align 8, !dbg !3183
  %451 = load %struct.context*, %struct.context** %2, align 8, !dbg !3184
  %452 = getelementptr inbounds %struct.context, %struct.context* %451, i32 0, i32 1, !dbg !3185
  store %struct.context* null, %struct.context** %452, align 8, !dbg !3186
  %453 = load %struct.context*, %struct.context** %2, align 8, !dbg !3187
  %454 = getelementptr inbounds %struct.context, %struct.context* %453, i32 0, i32 5, !dbg !3189
  %455 = load %struct.generic_list*, %struct.generic_list** %454, align 8, !dbg !3189
  %456 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %455, i32 0, i32 2, !dbg !3190
  %457 = load i8*, i8** %456, align 8, !dbg !3190
  %458 = icmp ne i8* %457, null, !dbg !3187
  br i1 %458, label %459, label %468, !dbg !3191

; <label>:459                                     ; preds = %446
  %460 = load %struct.context*, %struct.context** %2, align 8, !dbg !3192
  %461 = getelementptr inbounds %struct.context, %struct.context* %460, i32 0, i32 5, !dbg !3193
  %462 = load %struct.generic_list*, %struct.generic_list** %461, align 8, !dbg !3193
  %463 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %462, i32 0, i32 2, !dbg !3194
  %464 = load i8*, i8** %463, align 8, !dbg !3194
  %465 = bitcast i8* %464 to %struct.sockaddr*, !dbg !3195
  %466 = getelementptr inbounds [256 x i8], [256 x i8]* %astr1, i32 0, i32 0, !dbg !3196
  %467 = call i8* @sprint_inet(%struct.sockaddr* %465, i8* %466), !dbg !3197
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.35, i32 0, i32 0), i8* %467), !dbg !3198
  br label %468, !dbg !3198

; <label>:468                                     ; preds = %459, %446
  %469 = load %struct.context*, %struct.context** %2, align 8, !dbg !3199
  %470 = getelementptr inbounds %struct.context, %struct.context* %469, i32 0, i32 23, !dbg !3201
  %471 = load i32, i32* %470, align 8, !dbg !3201
  %472 = icmp slt i32 %471, 0, !dbg !3202
  br i1 %472, label %473, label %482, !dbg !3203

; <label>:473                                     ; preds = %468
  %474 = load i32, i32* %switch_to_tcp, align 4, !dbg !3204
  %475 = icmp ne i32 %474, 0, !dbg !3204
  br i1 %475, label %482, label %476, !dbg !3206

; <label>:476                                     ; preds = %473
  %477 = load %struct.context*, %struct.context** %2, align 8, !dbg !3207
  %478 = getelementptr inbounds [256 x i8], [256 x i8]* %qname, i32 0, i32 0, !dbg !3208
  %479 = load i16, i16* %qclass, align 2, !dbg !3209
  %480 = load i16, i16* %qtype, align 2, !dbg !3210
  %481 = call i32 @do_forward(%struct.context* %477, i8* %478, i16 zeroext %479, i16 zeroext %480, i32 0), !dbg !3211
  store i32 %481, i32* %1, align 4, !dbg !3212
  br label %618, !dbg !3212

; <label>:482                                     ; preds = %473, %468
  %483 = load %struct.context*, %struct.context** %2, align 8, !dbg !3213
  %484 = getelementptr inbounds [256 x i8], [256 x i8]* %qname, i32 0, i32 0, !dbg !3214
  %485 = load i16, i16* %qclass, align 2, !dbg !3215
  %486 = load i16, i16* %qtype, align 2, !dbg !3216
  %487 = call i32 @do_forward(%struct.context* %483, i8* %484, i16 zeroext %485, i16 zeroext %486, i32 1), !dbg !3217
  store i32 %487, i32* %1, align 4, !dbg !3218
  br label %618, !dbg !3218

; <label>:488                                     ; preds = %441
  %489 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 19), align 8, !dbg !3219
  %490 = icmp ne i32 %489, 0, !dbg !3221
  br i1 %490, label %491, label %513, !dbg !3222

; <label>:491                                     ; preds = %488
  %492 = load %struct.context*, %struct.context** %2, align 8, !dbg !3223
  %493 = getelementptr inbounds %struct.context, %struct.context* %492, i32 0, i32 12, !dbg !3226
  %494 = load i16, i16* %493, align 2, !dbg !3226
  %495 = zext i16 %494 to i32, !dbg !3223
  %496 = icmp eq i32 %495, 255, !dbg !3227
  br i1 %496, label %497, label %503, !dbg !3228

; <label>:497                                     ; preds = %491
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.36, i32 0, i32 0)), !dbg !3229
  %498 = load %struct.context*, %struct.context** %2, align 8, !dbg !3231
  %499 = getelementptr inbounds %struct.context, %struct.context* %498, i32 0, i32 1, !dbg !3232
  %500 = load %struct.context*, %struct.context** %499, align 8, !dbg !3232
  %501 = getelementptr inbounds %struct.context, %struct.context* %500, i32 0, i32 13, !dbg !3233
  %502 = load %struct.generic_list*, %struct.generic_list** %501, align 8, !dbg !3233
  call void @conv_trick_list(%struct.generic_list* %502, i32 28, i32 1), !dbg !3234
  br label %503, !dbg !3235

; <label>:503                                     ; preds = %497, %491
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.37, i32 0, i32 0)), !dbg !3236
  %504 = load %struct.context*, %struct.context** %2, align 8, !dbg !3237
  %505 = getelementptr inbounds %struct.context, %struct.context* %504, i32 0, i32 1, !dbg !3238
  %506 = load %struct.context*, %struct.context** %505, align 8, !dbg !3238
  %507 = getelementptr inbounds %struct.context, %struct.context* %506, i32 0, i32 15, !dbg !3239
  %508 = load %struct.generic_list*, %struct.generic_list** %507, align 8, !dbg !3239
  call void @conv_trick_list(%struct.generic_list* %508, i32 28, i32 1), !dbg !3240
  %509 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 23), align 8, !dbg !3241
  %510 = add nsw i32 %509, 1, !dbg !3242
  %511 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 19), align 8, !dbg !3243
  %512 = srem i32 %510, %511, !dbg !3244
  store i32 %512, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 23), align 8, !dbg !3245
  br label %513, !dbg !3246

; <label>:513                                     ; preds = %503, %488
  %514 = load i16, i16* %qtype, align 2, !dbg !3247
  %515 = zext i16 %514 to i32, !dbg !3247
  %516 = icmp eq i32 %515, 28, !dbg !3249
  br i1 %516, label %517, label %541, !dbg !3250

; <label>:517                                     ; preds = %513
  %518 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 25), align 8, !dbg !3251
  %519 = icmp ne i32 %518, 0, !dbg !3253
  br i1 %519, label %520, label %541, !dbg !3254

; <label>:520                                     ; preds = %517
  %521 = load %struct.context*, %struct.context** %2, align 8, !dbg !3255
  %522 = call i32 bitcast (i32 (%struct.context.165*)* @conv_scoped_query to i32 (%struct.context*)*)(%struct.context* %521), !dbg !3257
  %523 = icmp ne i32 %522, 0, !dbg !3257
  br i1 %523, label %524, label %541, !dbg !3258

; <label>:524                                     ; preds = %520
  %525 = load %struct.context*, %struct.context** %2, align 8, !dbg !3259
  %526 = getelementptr inbounds %struct.context, %struct.context* %525, i32 0, i32 1, !dbg !3261
  %527 = load %struct.context*, %struct.context** %526, align 8, !dbg !3261
  %528 = getelementptr inbounds %struct.context, %struct.context* %527, i32 0, i32 13, !dbg !3262
  %529 = load %struct.generic_list*, %struct.generic_list** %528, align 8, !dbg !3262
  call void @conv_scoped_list(%struct.generic_list* %529), !dbg !3263
  %530 = load %struct.context*, %struct.context** %2, align 8, !dbg !3264
  %531 = getelementptr inbounds %struct.context, %struct.context* %530, i32 0, i32 1, !dbg !3265
  %532 = load %struct.context*, %struct.context** %531, align 8, !dbg !3265
  %533 = getelementptr inbounds %struct.context, %struct.context* %532, i32 0, i32 14, !dbg !3266
  %534 = load %struct.generic_list*, %struct.generic_list** %533, align 8, !dbg !3266
  call void @conv_scoped_list(%struct.generic_list* %534), !dbg !3267
  %535 = load %struct.context*, %struct.context** %2, align 8, !dbg !3268
  %536 = getelementptr inbounds %struct.context, %struct.context* %535, i32 0, i32 1, !dbg !3269
  %537 = load %struct.context*, %struct.context** %536, align 8, !dbg !3269
  %538 = getelementptr inbounds %struct.context, %struct.context* %537, i32 0, i32 15, !dbg !3270
  %539 = load %struct.generic_list*, %struct.generic_list** %538, align 8, !dbg !3270
  call void @conv_scoped_list(%struct.generic_list* %539), !dbg !3271
  %540 = load i8*, i8** %fn, align 8, !dbg !3272
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.38, i32 0, i32 0), i8* %540), !dbg !3273
  br label %541, !dbg !3274

; <label>:541                                     ; preds = %524, %520, %517, %513
  %542 = load %struct.context*, %struct.context** %2, align 8, !dbg !3275
  %543 = getelementptr inbounds %struct.context, %struct.context* %542, i32 0, i32 2, !dbg !3277
  %544 = load i32, i32* %543, align 8, !dbg !3277
  %545 = icmp eq i32 %544, 5, !dbg !3278
  br i1 %545, label %546, label %574, !dbg !3279

; <label>:546                                     ; preds = %541
  %547 = load %struct.context*, %struct.context** %2, align 8, !dbg !3280
  %548 = call i32 bitcast (i32 (%struct.context.165*)* @conv_scoped_query to i32 (%struct.context*)*)(%struct.context* %547), !dbg !3283
  %549 = icmp ne i32 %548, 0, !dbg !3283
  br i1 %549, label %550, label %573, !dbg !3284

; <label>:550                                     ; preds = %546
  %551 = load %struct.context*, %struct.context** %2, align 8, !dbg !3285
  %552 = getelementptr inbounds %struct.context, %struct.context* %551, i32 0, i32 1, !dbg !3287
  %553 = load %struct.context*, %struct.context** %552, align 8, !dbg !3287
  %554 = getelementptr inbounds %struct.context, %struct.context* %553, i32 0, i32 13, !dbg !3288
  %555 = load %struct.generic_list*, %struct.generic_list** %554, align 8, !dbg !3288
  %556 = load %struct.context*, %struct.context** %2, align 8, !dbg !3289
  %557 = getelementptr inbounds %struct.context, %struct.context* %556, i32 0, i32 1, !dbg !3290
  %558 = load %struct.context*, %struct.context** %557, align 8, !dbg !3290
  %559 = getelementptr inbounds %struct.context, %struct.context* %558, i32 0, i32 9, !dbg !3291
  %560 = getelementptr inbounds [256 x i8], [256 x i8]* %559, i32 0, i32 0, !dbg !3289
  call void @conv_scoped_ptr(%struct.generic_list* %555, i8* %560), !dbg !3292
  %561 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 8), align 4, !dbg !3293
  %562 = icmp ne i32 %561, 0, !dbg !3295
  br i1 %562, label %563, label %572, !dbg !3296

; <label>:563                                     ; preds = %550
  %564 = getelementptr inbounds [256 x i8], [256 x i8]* %astr, i32 0, i32 0, !dbg !3297
  %565 = load %struct.context*, %struct.context** %2, align 8, !dbg !3299
  %566 = getelementptr inbounds %struct.context, %struct.context* %565, i32 0, i32 1, !dbg !3300
  %567 = load %struct.context*, %struct.context** %566, align 8, !dbg !3300
  %568 = getelementptr inbounds %struct.context, %struct.context* %567, i32 0, i32 9, !dbg !3301
  %569 = getelementptr inbounds [256 x i8], [256 x i8]* %568, i32 0, i32 0, !dbg !3299
  %570 = call i8* @dname_decompress(i8* %564, i32 256, i8* %569, i8* null, i8* null, i32* null), !dbg !3302
  %571 = getelementptr inbounds [256 x i8], [256 x i8]* %astr, i32 0, i32 0, !dbg !3303
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.39, i32 0, i32 0), i8* %571), !dbg !3304
  br label %572, !dbg !3305

; <label>:572                                     ; preds = %563, %550
  br label %573, !dbg !3306

; <label>:573                                     ; preds = %572, %546
  br label %574, !dbg !3307

; <label>:574                                     ; preds = %573, %541
  %575 = load %struct.context*, %struct.context** %2, align 8, !dbg !3308
  %576 = getelementptr inbounds %struct.context, %struct.context* %575, i32 0, i32 13, !dbg !3309
  %577 = load %struct.generic_list*, %struct.generic_list** %576, align 8, !dbg !3309
  call void @list_destroy(%struct.generic_list* %577, void (i8*)* @rrset_freev), !dbg !3310
  %578 = load %struct.context*, %struct.context** %2, align 8, !dbg !3311
  %579 = getelementptr inbounds %struct.context, %struct.context* %578, i32 0, i32 1, !dbg !3312
  %580 = load %struct.context*, %struct.context** %579, align 8, !dbg !3312
  %581 = getelementptr inbounds %struct.context, %struct.context* %580, i32 0, i32 13, !dbg !3313
  %582 = load %struct.generic_list*, %struct.generic_list** %581, align 8, !dbg !3313
  %583 = load %struct.context*, %struct.context** %2, align 8, !dbg !3314
  %584 = getelementptr inbounds %struct.context, %struct.context* %583, i32 0, i32 13, !dbg !3315
  store %struct.generic_list* %582, %struct.generic_list** %584, align 8, !dbg !3316
  %585 = load %struct.context*, %struct.context** %2, align 8, !dbg !3317
  %586 = getelementptr inbounds %struct.context, %struct.context* %585, i32 0, i32 1, !dbg !3318
  %587 = load %struct.context*, %struct.context** %586, align 8, !dbg !3318
  %588 = getelementptr inbounds %struct.context, %struct.context* %587, i32 0, i32 13, !dbg !3319
  store %struct.generic_list* null, %struct.generic_list** %588, align 8, !dbg !3320
  %589 = load %struct.context*, %struct.context** %2, align 8, !dbg !3321
  %590 = getelementptr inbounds %struct.context, %struct.context* %589, i32 0, i32 14, !dbg !3322
  %591 = load %struct.generic_list*, %struct.generic_list** %590, align 8, !dbg !3322
  call void @list_destroy(%struct.generic_list* %591, void (i8*)* @rrset_freev), !dbg !3323
  %592 = load %struct.context*, %struct.context** %2, align 8, !dbg !3324
  %593 = getelementptr inbounds %struct.context, %struct.context* %592, i32 0, i32 1, !dbg !3325
  %594 = load %struct.context*, %struct.context** %593, align 8, !dbg !3325
  %595 = getelementptr inbounds %struct.context, %struct.context* %594, i32 0, i32 14, !dbg !3326
  %596 = load %struct.generic_list*, %struct.generic_list** %595, align 8, !dbg !3326
  %597 = load %struct.context*, %struct.context** %2, align 8, !dbg !3327
  %598 = getelementptr inbounds %struct.context, %struct.context* %597, i32 0, i32 14, !dbg !3328
  store %struct.generic_list* %596, %struct.generic_list** %598, align 8, !dbg !3329
  %599 = load %struct.context*, %struct.context** %2, align 8, !dbg !3330
  %600 = getelementptr inbounds %struct.context, %struct.context* %599, i32 0, i32 1, !dbg !3331
  %601 = load %struct.context*, %struct.context** %600, align 8, !dbg !3331
  %602 = getelementptr inbounds %struct.context, %struct.context* %601, i32 0, i32 14, !dbg !3332
  store %struct.generic_list* null, %struct.generic_list** %602, align 8, !dbg !3333
  %603 = load %struct.context*, %struct.context** %2, align 8, !dbg !3334
  %604 = getelementptr inbounds %struct.context, %struct.context* %603, i32 0, i32 15, !dbg !3335
  %605 = load %struct.generic_list*, %struct.generic_list** %604, align 8, !dbg !3335
  call void @list_destroy(%struct.generic_list* %605, void (i8*)* @rrset_freev), !dbg !3336
  %606 = load %struct.context*, %struct.context** %2, align 8, !dbg !3337
  %607 = getelementptr inbounds %struct.context, %struct.context* %606, i32 0, i32 1, !dbg !3338
  %608 = load %struct.context*, %struct.context** %607, align 8, !dbg !3338
  %609 = getelementptr inbounds %struct.context, %struct.context* %608, i32 0, i32 15, !dbg !3339
  %610 = load %struct.generic_list*, %struct.generic_list** %609, align 8, !dbg !3339
  %611 = load %struct.context*, %struct.context** %2, align 8, !dbg !3340
  %612 = getelementptr inbounds %struct.context, %struct.context* %611, i32 0, i32 15, !dbg !3341
  store %struct.generic_list* %610, %struct.generic_list** %612, align 8, !dbg !3342
  %613 = load %struct.context*, %struct.context** %2, align 8, !dbg !3343
  %614 = getelementptr inbounds %struct.context, %struct.context* %613, i32 0, i32 1, !dbg !3344
  %615 = load %struct.context*, %struct.context** %614, align 8, !dbg !3344
  %616 = getelementptr inbounds %struct.context, %struct.context* %615, i32 0, i32 15, !dbg !3345
  store %struct.generic_list* null, %struct.generic_list** %616, align 8, !dbg !3346
  %617 = load i8*, i8** %fn, align 8, !dbg !3347
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.40, i32 0, i32 0), i8* %617), !dbg !3348
  store i32 1, i32* %1, align 4, !dbg !3349
  br label %618, !dbg !3349

; <label>:618                                     ; preds = %574, %482, %476, %431, %197, %157, %116, %113, %50
  %619 = load i32, i32* %1, align 4, !dbg !3350
  ret i32 %619, !dbg !3350
}

; Function Attrs: nounwind readnone
declare zeroext i16 @htons(i16 zeroext) #6

; Function Attrs: nounwind uwtable
define internal void @cname_without_crecord(%struct.generic_list* %an_list, i8* %cname) #0 !dbg !177 {
  %1 = alloca %struct.generic_list*, align 8
  %2 = alloca i8*, align 8
  %fn = alloca i8*, align 8
  %canonical_domain = alloca i8*, align 8
  %domain = alloca i8*, align 8
  %canonical_domain_len = alloca i32, align 4
  %rrs_tmp = alloca %struct.rr_set*, align 8
  %rr_tmp = alloca %struct.rr*, align 8
  %gl = alloca %struct.generic_list*, align 8
  store %struct.generic_list* %an_list, %struct.generic_list** %1, align 8
  call void @llvm.dbg.declare(metadata %struct.generic_list** %1, metadata !3351, metadata !2279), !dbg !3352
  store i8* %cname, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !3353, metadata !2279), !dbg !3354
  call void @llvm.dbg.declare(metadata i8** %fn, metadata !3355, metadata !2279), !dbg !3356
  store i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.45, i32 0, i32 0), i8** %fn, align 8, !dbg !3356
  call void @llvm.dbg.declare(metadata i8** %canonical_domain, metadata !3357, metadata !2279), !dbg !3358
  call void @llvm.dbg.declare(metadata i8** %domain, metadata !3359, metadata !2279), !dbg !3360
  call void @llvm.dbg.declare(metadata i32* %canonical_domain_len, metadata !3361, metadata !2279), !dbg !3362
  call void @llvm.dbg.declare(metadata %struct.rr_set** %rrs_tmp, metadata !3363, metadata !2279), !dbg !3364
  call void @llvm.dbg.declare(metadata %struct.rr** %rr_tmp, metadata !3365, metadata !2279), !dbg !3366
  call void @llvm.dbg.declare(metadata %struct.generic_list** %gl, metadata !3367, metadata !2279), !dbg !3368
  %3 = load i8*, i8** %fn, align 8, !dbg !3369
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.46, i32 0, i32 0), i8* %3), !dbg !3370
  %4 = load i8*, i8** %2, align 8, !dbg !3371
  store i8 0, i8* %4, align 1, !dbg !3372
  store i8* null, i8** %canonical_domain, align 8, !dbg !3373
  store i32 0, i32* %canonical_domain_len, align 4, !dbg !3374
  %5 = load %struct.generic_list*, %struct.generic_list** %1, align 8, !dbg !3375
  %6 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %5, i32 0, i32 2, !dbg !3376
  store i8* null, i8** %6, align 8, !dbg !3377
  %7 = load %struct.generic_list*, %struct.generic_list** %1, align 8, !dbg !3378
  %8 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %7, i32 0, i32 0, !dbg !3380
  %9 = load %struct.generic_list*, %struct.generic_list** %8, align 8, !dbg !3380
  store %struct.generic_list* %9, %struct.generic_list** %gl, align 8, !dbg !3381
  br label %10, !dbg !3382

; <label>:10                                      ; preds = %52, %0
  %11 = load %struct.generic_list*, %struct.generic_list** %gl, align 8, !dbg !3383
  %12 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %11, i32 0, i32 2, !dbg !3386
  %13 = load i8*, i8** %12, align 8, !dbg !3386
  %14 = icmp ne i8* %13, null, !dbg !3387
  br i1 %14, label %15, label %56, !dbg !3387

; <label>:15                                      ; preds = %10
  %16 = load %struct.generic_list*, %struct.generic_list** %gl, align 8, !dbg !3388
  %17 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %16, i32 0, i32 2, !dbg !3390
  %18 = load i8*, i8** %17, align 8, !dbg !3390
  %19 = bitcast i8* %18 to %struct.rr_set*, !dbg !3391
  store %struct.rr_set* %19, %struct.rr_set** %rrs_tmp, align 8, !dbg !3392
  %20 = load %struct.rr_set*, %struct.rr_set** %rrs_tmp, align 8, !dbg !3393
  %21 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %20, i32 0, i32 2, !dbg !3395
  %22 = bitcast %union.u_key* %21 to %struct.key_info**, !dbg !3396
  %23 = load %struct.key_info*, %struct.key_info** %22, align 8, !dbg !3396
  %24 = getelementptr inbounds %struct.key_info, %struct.key_info* %23, i32 0, i32 0, !dbg !3397
  %25 = load i16, i16* %24, align 2, !dbg !3397
  %26 = zext i16 %25 to i32, !dbg !3393
  %27 = icmp eq i32 %26, 5, !dbg !3398
  br i1 %27, label %28, label %51, !dbg !3399

; <label>:28                                      ; preds = %15
  %29 = load %struct.rr_set*, %struct.rr_set** %rrs_tmp, align 8, !dbg !3400
  %30 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %29, i32 0, i32 4, !dbg !3402
  %31 = bitcast %union.u_data* %30 to i8**, !dbg !3403
  %32 = load i8*, i8** %31, align 8, !dbg !3403
  %33 = load %struct.rr_set*, %struct.rr_set** %rrs_tmp, align 8, !dbg !3404
  %34 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %33, i32 0, i32 4, !dbg !3404
  %35 = bitcast %union.u_data* %34 to i8**, !dbg !3404
  %36 = load i8*, i8** %35, align 8, !dbg !3404
  %37 = getelementptr inbounds i8, i8* %36, i64 2, !dbg !3404
  %38 = bitcast i8* %37 to i16*, !dbg !3404
  %39 = load i16, i16* %38, align 2, !dbg !3404
  %40 = zext i16 %39 to i32, !dbg !3404
  %41 = sext i32 %40 to i64, !dbg !3405
  %42 = getelementptr inbounds i8, i8* %32, i64 %41, !dbg !3405
  %43 = bitcast i8* %42 to %struct.rr*, !dbg !3406
  store %struct.rr* %43, %struct.rr** %rr_tmp, align 8, !dbg !3407
  %44 = load %struct.rr*, %struct.rr** %rr_tmp, align 8, !dbg !3408
  %45 = bitcast %struct.rr* %44 to i8*, !dbg !3408
  %46 = getelementptr inbounds i8, i8* %45, i64 6, !dbg !3408
  store i8* %46, i8** %canonical_domain, align 8, !dbg !3409
  %47 = load %struct.rr*, %struct.rr** %rr_tmp, align 8, !dbg !3410
  %48 = getelementptr inbounds %struct.rr, %struct.rr* %47, i32 0, i32 1, !dbg !3411
  %49 = load i16, i16* %48, align 4, !dbg !3411
  %50 = zext i16 %49 to i32, !dbg !3410
  store i32 %50, i32* %canonical_domain_len, align 4, !dbg !3412
  br label %51, !dbg !3413

; <label>:51                                      ; preds = %28, %15
  br label %52, !dbg !3414

; <label>:52                                      ; preds = %51
  %53 = load %struct.generic_list*, %struct.generic_list** %gl, align 8, !dbg !3415
  %54 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %53, i32 0, i32 0, !dbg !3417
  %55 = load %struct.generic_list*, %struct.generic_list** %54, align 8, !dbg !3417
  store %struct.generic_list* %55, %struct.generic_list** %gl, align 8, !dbg !3418
  br label %10, !dbg !3419

; <label>:56                                      ; preds = %10
  %57 = load i8*, i8** %canonical_domain, align 8, !dbg !3420
  %58 = icmp ne i8* %57, null, !dbg !3420
  br i1 %58, label %60, label %59, !dbg !3422

; <label>:59                                      ; preds = %56
  br label %117, !dbg !3423

; <label>:60                                      ; preds = %56
  %61 = load %struct.generic_list*, %struct.generic_list** %1, align 8, !dbg !3424
  %62 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %61, i32 0, i32 2, !dbg !3425
  store i8* null, i8** %62, align 8, !dbg !3426
  %63 = load %struct.generic_list*, %struct.generic_list** %1, align 8, !dbg !3427
  %64 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %63, i32 0, i32 0, !dbg !3429
  %65 = load %struct.generic_list*, %struct.generic_list** %64, align 8, !dbg !3429
  store %struct.generic_list* %65, %struct.generic_list** %gl, align 8, !dbg !3430
  br label %66, !dbg !3431

; <label>:66                                      ; preds = %98, %60
  %67 = load %struct.generic_list*, %struct.generic_list** %gl, align 8, !dbg !3432
  %68 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %67, i32 0, i32 2, !dbg !3435
  %69 = load i8*, i8** %68, align 8, !dbg !3435
  %70 = icmp ne i8* %69, null, !dbg !3436
  br i1 %70, label %71, label %102, !dbg !3436

; <label>:71                                      ; preds = %66
  %72 = load %struct.generic_list*, %struct.generic_list** %gl, align 8, !dbg !3437
  %73 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %72, i32 0, i32 2, !dbg !3439
  %74 = load i8*, i8** %73, align 8, !dbg !3439
  %75 = bitcast i8* %74 to %struct.rr_set*, !dbg !3440
  store %struct.rr_set* %75, %struct.rr_set** %rrs_tmp, align 8, !dbg !3441
  %76 = load %struct.rr_set*, %struct.rr_set** %rrs_tmp, align 8, !dbg !3442
  %77 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %76, i32 0, i32 2, !dbg !3442
  %78 = bitcast %union.u_key* %77 to %struct.key_info**, !dbg !3442
  %79 = load %struct.key_info*, %struct.key_info** %78, align 8, !dbg !3442
  %80 = bitcast %struct.key_info* %79 to i8*, !dbg !3442
  %81 = getelementptr inbounds i8, i8* %80, i64 6, !dbg !3442
  store i8* %81, i8** %domain, align 8, !dbg !3443
  %82 = load %struct.rr_set*, %struct.rr_set** %rrs_tmp, align 8, !dbg !3444
  %83 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %82, i32 0, i32 2, !dbg !3446
  %84 = bitcast %union.u_key* %83 to %struct.key_info**, !dbg !3447
  %85 = load %struct.key_info*, %struct.key_info** %84, align 8, !dbg !3447
  %86 = getelementptr inbounds %struct.key_info, %struct.key_info* %85, i32 0, i32 2, !dbg !3448
  %87 = load i16, i16* %86, align 2, !dbg !3448
  %88 = zext i16 %87 to i32, !dbg !3444
  %89 = load i32, i32* %canonical_domain_len, align 4, !dbg !3449
  %90 = icmp eq i32 %88, %89, !dbg !3450
  br i1 %90, label %91, label %97, !dbg !3451

; <label>:91                                      ; preds = %71
  %92 = load i8*, i8** %domain, align 8, !dbg !3452
  %93 = load i8*, i8** %canonical_domain, align 8, !dbg !3454
  %94 = call i32 @mesg_dname_cmp(i8* null, i8* %92, i8* %93), !dbg !3455
  %95 = icmp ne i32 %94, 0, !dbg !3455
  br i1 %95, label %97, label %96, !dbg !3456

; <label>:96                                      ; preds = %91
  br label %117, !dbg !3458

; <label>:97                                      ; preds = %91, %71
  br label %98, !dbg !3459

; <label>:98                                      ; preds = %97
  %99 = load %struct.generic_list*, %struct.generic_list** %gl, align 8, !dbg !3460
  %100 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %99, i32 0, i32 0, !dbg !3462
  %101 = load %struct.generic_list*, %struct.generic_list** %100, align 8, !dbg !3462
  store %struct.generic_list* %101, %struct.generic_list** %gl, align 8, !dbg !3463
  br label %66, !dbg !3464

; <label>:102                                     ; preds = %66
  %103 = load i8*, i8** %fn, align 8, !dbg !3465
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.47, i32 0, i32 0), i8* %103), !dbg !3466
  %104 = load i32, i32* %canonical_domain_len, align 4, !dbg !3467
  %105 = icmp sge i32 %104, 256, !dbg !3469
  br i1 %105, label %106, label %108, !dbg !3470

; <label>:106                                     ; preds = %102
  %107 = load i8*, i8** %fn, align 8, !dbg !3471
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.20, i32 0, i32 0), i8* %107), !dbg !3473
  br label %117, !dbg !3474

; <label>:108                                     ; preds = %102
  %109 = load i8*, i8** %2, align 8, !dbg !3475
  %110 = load i8*, i8** %canonical_domain, align 8, !dbg !3476
  %111 = load i32, i32* %canonical_domain_len, align 4, !dbg !3477
  %112 = sext i32 %111 to i64, !dbg !3477
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %109, i8* %110, i64 %112, i32 1, i1 false), !dbg !3478
  %113 = load i32, i32* %canonical_domain_len, align 4, !dbg !3479
  %114 = sext i32 %113 to i64, !dbg !3480
  %115 = load i8*, i8** %2, align 8, !dbg !3480
  %116 = getelementptr inbounds i8, i8* %115, i64 %114, !dbg !3480
  store i8 0, i8* %116, align 1, !dbg !3481
  br label %117, !dbg !3482

; <label>:117                                     ; preds = %108, %106, %96, %59
  ret void, !dbg !3483
}

; Function Attrs: nounwind uwtable
define i32 @request_finish(%struct.context* %cont) #0 !dbg !176 {
  %1 = alloca i32, align 4
  %2 = alloca %struct.context*, align 8
  %fn = alloca i8*, align 8
  store %struct.context* %cont, %struct.context** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.context** %2, metadata !3484, metadata !2279), !dbg !3485
  call void @llvm.dbg.declare(metadata i8** %fn, metadata !3486, metadata !2279), !dbg !3487
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.41, i32 0, i32 0), i8** %fn, align 8, !dbg !3487
  %3 = load i8*, i8** %fn, align 8, !dbg !3488
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i32 0, i32 0), i8* %3), !dbg !3489
  %4 = load %struct.context*, %struct.context** %2, align 8, !dbg !3490
  %5 = getelementptr inbounds %struct.context, %struct.context* %4, i32 0, i32 13, !dbg !3491
  %6 = load %struct.generic_list*, %struct.generic_list** %5, align 8, !dbg !3491
  call void @list_destroy(%struct.generic_list* %6, void (i8*)* @rrset_freev), !dbg !3492
  %7 = load %struct.context*, %struct.context** %2, align 8, !dbg !3493
  %8 = getelementptr inbounds %struct.context, %struct.context* %7, i32 0, i32 14, !dbg !3494
  %9 = load %struct.generic_list*, %struct.generic_list** %8, align 8, !dbg !3494
  call void @list_destroy(%struct.generic_list* %9, void (i8*)* @rrset_freev), !dbg !3495
  %10 = load %struct.context*, %struct.context** %2, align 8, !dbg !3496
  %11 = getelementptr inbounds %struct.context, %struct.context* %10, i32 0, i32 15, !dbg !3497
  %12 = load %struct.generic_list*, %struct.generic_list** %11, align 8, !dbg !3497
  call void @list_destroy(%struct.generic_list* %12, void (i8*)* @rrset_freev), !dbg !3498
  %13 = call %struct.generic_list* @list_init(), !dbg !3499
  %14 = load %struct.context*, %struct.context** %2, align 8, !dbg !3500
  %15 = getelementptr inbounds %struct.context, %struct.context* %14, i32 0, i32 13, !dbg !3501
  store %struct.generic_list* %13, %struct.generic_list** %15, align 8, !dbg !3502
  %16 = call %struct.generic_list* @list_init(), !dbg !3503
  %17 = load %struct.context*, %struct.context** %2, align 8, !dbg !3504
  %18 = getelementptr inbounds %struct.context, %struct.context* %17, i32 0, i32 14, !dbg !3505
  store %struct.generic_list* %16, %struct.generic_list** %18, align 8, !dbg !3506
  %19 = call %struct.generic_list* @list_init(), !dbg !3507
  %20 = load %struct.context*, %struct.context** %2, align 8, !dbg !3508
  %21 = getelementptr inbounds %struct.context, %struct.context* %20, i32 0, i32 15, !dbg !3509
  store %struct.generic_list* %19, %struct.generic_list** %21, align 8, !dbg !3510
  %22 = load %struct.context*, %struct.context** %2, align 8, !dbg !3511
  %23 = getelementptr inbounds %struct.context, %struct.context* %22, i32 0, i32 13, !dbg !3513
  %24 = load %struct.generic_list*, %struct.generic_list** %23, align 8, !dbg !3513
  %25 = icmp ne %struct.generic_list* %24, null, !dbg !3511
  br i1 %25, label %26, label %36, !dbg !3514

; <label>:26                                      ; preds = %0
  %27 = load %struct.context*, %struct.context** %2, align 8, !dbg !3515
  %28 = getelementptr inbounds %struct.context, %struct.context* %27, i32 0, i32 14, !dbg !3517
  %29 = load %struct.generic_list*, %struct.generic_list** %28, align 8, !dbg !3517
  %30 = icmp ne %struct.generic_list* %29, null, !dbg !3515
  br i1 %30, label %31, label %36, !dbg !3518

; <label>:31                                      ; preds = %26
  %32 = load %struct.context*, %struct.context** %2, align 8, !dbg !3519
  %33 = getelementptr inbounds %struct.context, %struct.context* %32, i32 0, i32 15, !dbg !3521
  %34 = load %struct.generic_list*, %struct.generic_list** %33, align 8, !dbg !3521
  %35 = icmp ne %struct.generic_list* %34, null, !dbg !3519
  br i1 %35, label %39, label %36, !dbg !3522

; <label>:36                                      ; preds = %31, %26, %0
  %37 = load %struct.context*, %struct.context** %2, align 8, !dbg !3523
  %38 = call i32 @request_abort(%struct.context* %37, i32 -1), !dbg !3524
  store i32 %38, i32* %1, align 4, !dbg !3525
  br label %101, !dbg !3525

; <label>:39                                      ; preds = %31
  %40 = load %struct.context*, %struct.context** %2, align 8, !dbg !3526
  %41 = getelementptr inbounds %struct.context, %struct.context* %40, i32 0, i32 16, !dbg !3528
  %42 = bitcast %union.anon.0* %41 to %struct.mesg_hdr**, !dbg !3529
  %43 = load %struct.mesg_hdr*, %struct.mesg_hdr** %42, align 8, !dbg !3529
  %44 = getelementptr inbounds %struct.mesg_hdr, %struct.mesg_hdr* %43, i32 0, i32 1, !dbg !3530
  %45 = load i16, i16* %44, align 2, !dbg !3530
  %46 = lshr i16 %45, 1, !dbg !3530
  %47 = and i16 %46, 1, !dbg !3530
  %48 = trunc i16 %47 to i8, !dbg !3530
  %49 = zext i8 %48 to i32, !dbg !3526
  %50 = icmp eq i32 %49, 0, !dbg !3531
  br i1 %50, label %51, label %75, !dbg !3532

; <label>:51                                      ; preds = %39
  %52 = load %struct.context*, %struct.context** %2, align 8, !dbg !3533
  %53 = getelementptr inbounds %struct.context, %struct.context* %52, i32 0, i32 16, !dbg !3536
  %54 = bitcast %union.anon.0* %53 to i8**, !dbg !3537
  %55 = load i8*, i8** %54, align 8, !dbg !3537
  %56 = load %struct.context*, %struct.context** %2, align 8, !dbg !3538
  %57 = getelementptr inbounds %struct.context, %struct.context* %56, i32 0, i32 17, !dbg !3539
  %58 = load i32, i32* %57, align 8, !dbg !3539
  %59 = load %struct.context*, %struct.context** %2, align 8, !dbg !3540
  %60 = getelementptr inbounds %struct.context, %struct.context* %59, i32 0, i32 13, !dbg !3541
  %61 = load %struct.generic_list*, %struct.generic_list** %60, align 8, !dbg !3541
  %62 = load %struct.context*, %struct.context** %2, align 8, !dbg !3542
  %63 = getelementptr inbounds %struct.context, %struct.context* %62, i32 0, i32 14, !dbg !3543
  %64 = load %struct.generic_list*, %struct.generic_list** %63, align 8, !dbg !3543
  %65 = load %struct.context*, %struct.context** %2, align 8, !dbg !3544
  %66 = getelementptr inbounds %struct.context, %struct.context* %65, i32 0, i32 15, !dbg !3545
  %67 = load %struct.generic_list*, %struct.generic_list** %66, align 8, !dbg !3545
  %68 = call i32 @mesg_parse(i8* %55, i32 %58, %struct.generic_list* %61, %struct.generic_list* %64, %struct.generic_list* %67), !dbg !3546
  %69 = icmp ne i32 %68, 0, !dbg !3546
  br i1 %69, label %70, label %74, !dbg !3547

; <label>:70                                      ; preds = %51
  %71 = load i8*, i8** %fn, align 8, !dbg !3548
  call void (i32, i8*, ...) @syslog(i32 4, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.42, i32 0, i32 0), i8* %71), !dbg !3550
  %72 = load %struct.context*, %struct.context** %2, align 8, !dbg !3551
  %73 = call i32 @request_abort(%struct.context* %72, i32 -1), !dbg !3552
  store i32 %73, i32* %1, align 4, !dbg !3553
  br label %101, !dbg !3553

; <label>:74                                      ; preds = %51
  br label %75, !dbg !3554

; <label>:75                                      ; preds = %74, %39
  %76 = load %struct.context*, %struct.context** %2, align 8, !dbg !3555
  %77 = getelementptr inbounds %struct.context, %struct.context* %76, i32 0, i32 5, !dbg !3556
  %78 = load %struct.generic_list*, %struct.generic_list** %77, align 8, !dbg !3556
  %79 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %78, i32 0, i32 2, !dbg !3557
  %80 = load i8*, i8** %79, align 8, !dbg !3557
  %81 = bitcast i8* %80 to %struct.sockaddr*, !dbg !3555
  call void @fwd_mark(%struct.sockaddr* %81, i32 -1), !dbg !3558
  %82 = load %struct.context*, %struct.context** %2, align 8, !dbg !3559
  %83 = getelementptr inbounds %struct.context, %struct.context* %82, i32 0, i32 0, !dbg !3561
  %84 = load %struct.context*, %struct.context** %83, align 8, !dbg !3561
  %85 = icmp ne %struct.context* %84, null, !dbg !3559
  br i1 %85, label %86, label %97, !dbg !3562

; <label>:86                                      ; preds = %75
  %87 = load i8*, i8** %fn, align 8, !dbg !3563
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.43, i32 0, i32 0), i8* %87), !dbg !3565
  %88 = load %struct.context*, %struct.context** %2, align 8, !dbg !3566
  %89 = getelementptr inbounds %struct.context, %struct.context* %88, i32 0, i32 0, !dbg !3567
  %90 = load %struct.context*, %struct.context** %89, align 8, !dbg !3567
  %91 = getelementptr inbounds %struct.context, %struct.context* %90, i32 0, i32 7, !dbg !3568
  %92 = load i32 (%struct.context*)*, i32 (%struct.context*)** %91, align 8, !dbg !3568
  %93 = load %struct.context*, %struct.context** %2, align 8, !dbg !3569
  %94 = getelementptr inbounds %struct.context, %struct.context* %93, i32 0, i32 0, !dbg !3570
  %95 = load %struct.context*, %struct.context** %94, align 8, !dbg !3570
  %96 = call i32 %92(%struct.context* %95), !dbg !3566
  br label %97, !dbg !3571

; <label>:97                                      ; preds = %86, %75
  %98 = load %struct.context*, %struct.context** %2, align 8, !dbg !3572
  %99 = call i8* bitcast (i8* (%struct.context.19*)* @context_destroy to i8* (%struct.context*)*)(%struct.context* %98), !dbg !3573
  %100 = load i8*, i8** %fn, align 8, !dbg !3574
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.44, i32 0, i32 0), i8* %100), !dbg !3575
  store i32 0, i32* %1, align 4, !dbg !3576
  br label %101, !dbg !3576

; <label>:101                                     ; preds = %97, %70, %36
  %102 = load i32, i32* %1, align 4, !dbg !3577
  ret i32 %102, !dbg !3577
}

; Function Attrs: nounwind uwtable
define i32 @response_abort(%struct.context* %cont, i32 %status) #0 !dbg !188 {
  %1 = alloca %struct.context*, align 8
  %2 = alloca i32, align 4
  %fn = alloca i8*, align 8
  store %struct.context* %cont, %struct.context** %1, align 8
  call void @llvm.dbg.declare(metadata %struct.context** %1, metadata !3578, metadata !2279), !dbg !3579
  store i32 %status, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !3580, metadata !2279), !dbg !3581
  call void @llvm.dbg.declare(metadata i8** %fn, metadata !3582, metadata !2279), !dbg !3583
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.48, i32 0, i32 0), i8** %fn, align 8, !dbg !3583
  %3 = load i8*, i8** %fn, align 8, !dbg !3584
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1.49, i32 0, i32 0), i8* %3), !dbg !3585
  %4 = load %struct.context*, %struct.context** %1, align 8, !dbg !3586
  %5 = call i8* bitcast (i8* (%struct.context.19*)* @context_destroy to i8* (%struct.context*)*)(%struct.context* %4), !dbg !3587
  %6 = load i32, i32* %2, align 4, !dbg !3588
  ret i32 %6, !dbg !3589
}

; Function Attrs: nounwind uwtable
define i32 @assemble_response(%struct.context* %cont) #0 !dbg !278 {
  %1 = alloca i32, align 4
  %2 = alloca %struct.context*, align 8
  %fn = alloca i8*, align 8
  %len = alloca i32, align 4
  store %struct.context* %cont, %struct.context** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.context** %2, metadata !3590, metadata !2279), !dbg !3591
  call void @llvm.dbg.declare(metadata i8** %fn, metadata !3592, metadata !2279), !dbg !3593
  store i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2.50, i32 0, i32 0), i8** %fn, align 8, !dbg !3593
  call void @llvm.dbg.declare(metadata i32* %len, metadata !3594, metadata !2279), !dbg !3595
  %3 = load i8*, i8** %fn, align 8, !dbg !3596
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3.51, i32 0, i32 0), i8* %3), !dbg !3597
  %4 = load %struct.context*, %struct.context** %2, align 8, !dbg !3598
  %5 = getelementptr inbounds %struct.context, %struct.context* %4, i32 0, i32 16, !dbg !3600
  %6 = bitcast %union.anon.0* %5 to %struct.mesg_hdr**, !dbg !3601
  %7 = load %struct.mesg_hdr*, %struct.mesg_hdr** %6, align 8, !dbg !3601
  %8 = getelementptr inbounds %struct.mesg_hdr, %struct.mesg_hdr* %7, i32 0, i32 1, !dbg !3602
  %9 = load i16, i16* %8, align 2, !dbg !3602
  %10 = lshr i16 %9, 8, !dbg !3602
  %11 = and i16 %10, 15, !dbg !3602
  %12 = trunc i16 %11 to i8, !dbg !3602
  %13 = zext i8 %12 to i32, !dbg !3598
  %14 = icmp eq i32 %13, 0, !dbg !3603
  br i1 %14, label %15, label %144, !dbg !3604

; <label>:15                                      ; preds = %0
  %16 = load %struct.context*, %struct.context** %2, align 8, !dbg !3605
  %17 = getelementptr inbounds %struct.context, %struct.context* %16, i32 0, i32 13, !dbg !3607
  %18 = load %struct.generic_list*, %struct.generic_list** %17, align 8, !dbg !3607
  %19 = load %struct.context*, %struct.context** %2, align 8, !dbg !3608
  %20 = getelementptr inbounds %struct.context, %struct.context* %19, i32 0, i32 14, !dbg !3609
  %21 = load %struct.generic_list*, %struct.generic_list** %20, align 8, !dbg !3609
  %22 = load %struct.context*, %struct.context** %2, align 8, !dbg !3610
  %23 = getelementptr inbounds %struct.context, %struct.context* %22, i32 0, i32 15, !dbg !3611
  %24 = load %struct.generic_list*, %struct.generic_list** %23, align 8, !dbg !3611
  %25 = load %struct.context*, %struct.context** %2, align 8, !dbg !3612
  %26 = getelementptr inbounds %struct.context, %struct.context* %25, i32 0, i32 16, !dbg !3613
  %27 = bitcast %union.anon.0* %26 to i8**, !dbg !3614
  %28 = load i8*, i8** %27, align 8, !dbg !3614
  %29 = load %struct.context*, %struct.context** %2, align 8, !dbg !3615
  %30 = getelementptr inbounds %struct.context, %struct.context* %29, i32 0, i32 17, !dbg !3616
  %31 = load i32, i32* %30, align 8, !dbg !3616
  %32 = call i32 @mesg_assemble(%struct.generic_list* %18, %struct.generic_list* %21, %struct.generic_list* %24, i8* getelementptr inbounds ([65535 x i8], [65535 x i8]* @assemble_response.buf, i32 0, i32 0), i16 zeroext -1, i8* %28, i32 %31), !dbg !3617
  store i32 %32, i32* %len, align 4, !dbg !3618
  %33 = load i32, i32* %len, align 4, !dbg !3619
  %34 = icmp slt i32 %33, 0, !dbg !3621
  br i1 %34, label %35, label %36, !dbg !3622

; <label>:35                                      ; preds = %15
  store i32 -1, i32* %1, align 4, !dbg !3623
  br label %180, !dbg !3623

; <label>:36                                      ; preds = %15
  %37 = load %struct.context*, %struct.context** %2, align 8, !dbg !3624
  %38 = getelementptr inbounds %struct.context, %struct.context* %37, i32 0, i32 16, !dbg !3626
  %39 = bitcast %union.anon.0* %38 to i8**, !dbg !3627
  %40 = load i8*, i8** %39, align 8, !dbg !3627
  %41 = icmp ne i8* %40, null, !dbg !3624
  br i1 %41, label %42, label %47, !dbg !3628

; <label>:42                                      ; preds = %36
  %43 = load %struct.context*, %struct.context** %2, align 8, !dbg !3629
  %44 = getelementptr inbounds %struct.context, %struct.context* %43, i32 0, i32 16, !dbg !3630
  %45 = bitcast %union.anon.0* %44 to i8**, !dbg !3631
  %46 = load i8*, i8** %45, align 8, !dbg !3631
  call void @free(i8* %46) #10, !dbg !3632
  br label %47, !dbg !3632

; <label>:47                                      ; preds = %42, %36
  %48 = load i32, i32* %len, align 4, !dbg !3633
  %49 = sext i32 %48 to i64, !dbg !3633
  %50 = call noalias i8* @malloc(i64 %49) #10, !dbg !3634
  %51 = load %struct.context*, %struct.context** %2, align 8, !dbg !3635
  %52 = getelementptr inbounds %struct.context, %struct.context* %51, i32 0, i32 16, !dbg !3636
  %53 = bitcast %union.anon.0* %52 to i8**, !dbg !3637
  store i8* %50, i8** %53, align 8, !dbg !3638
  %54 = load %struct.context*, %struct.context** %2, align 8, !dbg !3639
  %55 = getelementptr inbounds %struct.context, %struct.context* %54, i32 0, i32 16, !dbg !3641
  %56 = bitcast %union.anon.0* %55 to i8**, !dbg !3642
  %57 = load i8*, i8** %56, align 8, !dbg !3642
  %58 = icmp ne i8* %57, null, !dbg !3639
  br i1 %58, label %60, label %59, !dbg !3643

; <label>:59                                      ; preds = %47
  store i32 -1, i32* %1, align 4, !dbg !3644
  br label %180, !dbg !3644

; <label>:60                                      ; preds = %47
  %61 = load %struct.context*, %struct.context** %2, align 8, !dbg !3645
  %62 = getelementptr inbounds %struct.context, %struct.context* %61, i32 0, i32 16, !dbg !3646
  %63 = bitcast %union.anon.0* %62 to i8**, !dbg !3647
  %64 = load i8*, i8** %63, align 8, !dbg !3647
  %65 = load i32, i32* %len, align 4, !dbg !3648
  %66 = sext i32 %65 to i64, !dbg !3648
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %64, i8* getelementptr inbounds ([65535 x i8], [65535 x i8]* @assemble_response.buf, i32 0, i32 0), i64 %66, i32 1, i1 false), !dbg !3649
  %67 = load i32, i32* %len, align 4, !dbg !3650
  %68 = load %struct.context*, %struct.context** %2, align 8, !dbg !3651
  %69 = getelementptr inbounds %struct.context, %struct.context* %68, i32 0, i32 17, !dbg !3652
  store i32 %67, i32* %69, align 8, !dbg !3653
  %70 = load %struct.context*, %struct.context** %2, align 8, !dbg !3654
  %71 = getelementptr inbounds %struct.context, %struct.context* %70, i32 0, i32 1, !dbg !3656
  %72 = load %struct.context*, %struct.context** %71, align 8, !dbg !3656
  %73 = icmp ne %struct.context* %72, null, !dbg !3654
  br i1 %73, label %74, label %143, !dbg !3657

; <label>:74                                      ; preds = %60
  %75 = load %struct.context*, %struct.context** %2, align 8, !dbg !3658
  %76 = getelementptr inbounds %struct.context, %struct.context* %75, i32 0, i32 1, !dbg !3660
  %77 = load %struct.context*, %struct.context** %76, align 8, !dbg !3660
  %78 = getelementptr inbounds %struct.context, %struct.context* %77, i32 0, i32 16, !dbg !3661
  %79 = bitcast %union.anon.0* %78 to %struct.mesg_hdr**, !dbg !3662
  %80 = load %struct.mesg_hdr*, %struct.mesg_hdr** %79, align 8, !dbg !3662
  %81 = getelementptr inbounds %struct.mesg_hdr, %struct.mesg_hdr* %80, i32 0, i32 1, !dbg !3663
  %82 = load i16, i16* %81, align 2, !dbg !3663
  %83 = lshr i16 %82, 8, !dbg !3663
  %84 = and i16 %83, 15, !dbg !3663
  %85 = trunc i16 %84 to i8, !dbg !3663
  %86 = load %struct.context*, %struct.context** %2, align 8, !dbg !3664
  %87 = getelementptr inbounds %struct.context, %struct.context* %86, i32 0, i32 16, !dbg !3665
  %88 = bitcast %union.anon.0* %87 to %struct.mesg_hdr**, !dbg !3666
  %89 = load %struct.mesg_hdr*, %struct.mesg_hdr** %88, align 8, !dbg !3666
  %90 = getelementptr inbounds %struct.mesg_hdr, %struct.mesg_hdr* %89, i32 0, i32 1, !dbg !3667
  %91 = zext i8 %85 to i16, !dbg !3668
  %92 = load i16, i16* %90, align 2, !dbg !3668
  %93 = and i16 %91, 15, !dbg !3668
  %94 = shl i16 %93, 8, !dbg !3668
  %95 = and i16 %92, -3841, !dbg !3668
  %96 = or i16 %95, %94, !dbg !3668
  store i16 %96, i16* %90, align 2, !dbg !3668
  %97 = trunc i16 %93 to i8, !dbg !3668
  %98 = load %struct.context*, %struct.context** %2, align 8, !dbg !3669
  %99 = getelementptr inbounds %struct.context, %struct.context* %98, i32 0, i32 1, !dbg !3670
  %100 = load %struct.context*, %struct.context** %99, align 8, !dbg !3670
  %101 = getelementptr inbounds %struct.context, %struct.context* %100, i32 0, i32 16, !dbg !3671
  %102 = bitcast %union.anon.0* %101 to %struct.mesg_hdr**, !dbg !3672
  %103 = load %struct.mesg_hdr*, %struct.mesg_hdr** %102, align 8, !dbg !3672
  %104 = getelementptr inbounds %struct.mesg_hdr, %struct.mesg_hdr* %103, i32 0, i32 1, !dbg !3673
  %105 = load i16, i16* %104, align 2, !dbg !3673
  %106 = lshr i16 %105, 2, !dbg !3673
  %107 = and i16 %106, 1, !dbg !3673
  %108 = trunc i16 %107 to i8, !dbg !3673
  %109 = load %struct.context*, %struct.context** %2, align 8, !dbg !3674
  %110 = getelementptr inbounds %struct.context, %struct.context* %109, i32 0, i32 16, !dbg !3675
  %111 = bitcast %union.anon.0* %110 to %struct.mesg_hdr**, !dbg !3676
  %112 = load %struct.mesg_hdr*, %struct.mesg_hdr** %111, align 8, !dbg !3676
  %113 = getelementptr inbounds %struct.mesg_hdr, %struct.mesg_hdr* %112, i32 0, i32 1, !dbg !3677
  %114 = zext i8 %108 to i16, !dbg !3678
  %115 = load i16, i16* %113, align 2, !dbg !3678
  %116 = and i16 %114, 1, !dbg !3678
  %117 = shl i16 %116, 2, !dbg !3678
  %118 = and i16 %115, -5, !dbg !3678
  %119 = or i16 %118, %117, !dbg !3678
  store i16 %119, i16* %113, align 2, !dbg !3678
  %120 = trunc i16 %116 to i8, !dbg !3678
  %121 = load %struct.context*, %struct.context** %2, align 8, !dbg !3679
  %122 = getelementptr inbounds %struct.context, %struct.context* %121, i32 0, i32 1, !dbg !3680
  %123 = load %struct.context*, %struct.context** %122, align 8, !dbg !3680
  %124 = getelementptr inbounds %struct.context, %struct.context* %123, i32 0, i32 16, !dbg !3681
  %125 = bitcast %union.anon.0* %124 to %struct.mesg_hdr**, !dbg !3682
  %126 = load %struct.mesg_hdr*, %struct.mesg_hdr** %125, align 8, !dbg !3682
  %127 = getelementptr inbounds %struct.mesg_hdr, %struct.mesg_hdr* %126, i32 0, i32 1, !dbg !3683
  %128 = load i16, i16* %127, align 2, !dbg !3683
  %129 = lshr i16 %128, 15, !dbg !3683
  %130 = trunc i16 %129 to i8, !dbg !3683
  %131 = load %struct.context*, %struct.context** %2, align 8, !dbg !3684
  %132 = getelementptr inbounds %struct.context, %struct.context* %131, i32 0, i32 16, !dbg !3685
  %133 = bitcast %union.anon.0* %132 to %struct.mesg_hdr**, !dbg !3686
  %134 = load %struct.mesg_hdr*, %struct.mesg_hdr** %133, align 8, !dbg !3686
  %135 = getelementptr inbounds %struct.mesg_hdr, %struct.mesg_hdr* %134, i32 0, i32 1, !dbg !3687
  %136 = zext i8 %130 to i16, !dbg !3688
  %137 = load i16, i16* %135, align 2, !dbg !3688
  %138 = and i16 %136, 1, !dbg !3688
  %139 = shl i16 %138, 15, !dbg !3688
  %140 = and i16 %137, 32767, !dbg !3688
  %141 = or i16 %140, %139, !dbg !3688
  store i16 %141, i16* %135, align 2, !dbg !3688
  %142 = trunc i16 %138 to i8, !dbg !3688
  br label %143, !dbg !3689

; <label>:143                                     ; preds = %74, %60
  br label %176, !dbg !3690

; <label>:144                                     ; preds = %0
  %145 = load %struct.context*, %struct.context** %2, align 8, !dbg !3691
  %146 = getelementptr inbounds %struct.context, %struct.context* %145, i32 0, i32 16, !dbg !3693
  %147 = bitcast %union.anon.0* %146 to %struct.mesg_hdr**, !dbg !3694
  %148 = load %struct.mesg_hdr*, %struct.mesg_hdr** %147, align 8, !dbg !3694
  %149 = getelementptr inbounds %struct.mesg_hdr, %struct.mesg_hdr* %148, i32 0, i32 1, !dbg !3695
  %150 = load i16, i16* %149, align 2, !dbg !3696
  %151 = and i16 %150, 32767, !dbg !3696
  %152 = or i16 %151, -32768, !dbg !3696
  store i16 %152, i16* %149, align 2, !dbg !3696
  %153 = load %struct.context*, %struct.context** %2, align 8, !dbg !3697
  %154 = getelementptr inbounds %struct.context, %struct.context* %153, i32 0, i32 16, !dbg !3698
  %155 = bitcast %union.anon.0* %154 to %struct.mesg_hdr**, !dbg !3699
  %156 = load %struct.mesg_hdr*, %struct.mesg_hdr** %155, align 8, !dbg !3699
  %157 = getelementptr inbounds %struct.mesg_hdr, %struct.mesg_hdr* %156, i32 0, i32 1, !dbg !3700
  %158 = load i16, i16* %157, align 2, !dbg !3701
  %159 = and i16 %158, -129, !dbg !3701
  %160 = or i16 %159, 128, !dbg !3701
  store i16 %160, i16* %157, align 2, !dbg !3701
  %161 = load %struct.context*, %struct.context** %2, align 8, !dbg !3702
  %162 = getelementptr inbounds %struct.context, %struct.context* %161, i32 0, i32 16, !dbg !3703
  %163 = bitcast %union.anon.0* %162 to %struct.mesg_hdr**, !dbg !3704
  %164 = load %struct.mesg_hdr*, %struct.mesg_hdr** %163, align 8, !dbg !3704
  %165 = getelementptr inbounds %struct.mesg_hdr, %struct.mesg_hdr* %164, i32 0, i32 3, !dbg !3705
  store i16 0, i16* %165, align 2, !dbg !3706
  %166 = load %struct.context*, %struct.context** %2, align 8, !dbg !3707
  %167 = getelementptr inbounds %struct.context, %struct.context* %166, i32 0, i32 16, !dbg !3708
  %168 = bitcast %union.anon.0* %167 to %struct.mesg_hdr**, !dbg !3709
  %169 = load %struct.mesg_hdr*, %struct.mesg_hdr** %168, align 8, !dbg !3709
  %170 = getelementptr inbounds %struct.mesg_hdr, %struct.mesg_hdr* %169, i32 0, i32 4, !dbg !3710
  store i16 0, i16* %170, align 2, !dbg !3711
  %171 = load %struct.context*, %struct.context** %2, align 8, !dbg !3712
  %172 = getelementptr inbounds %struct.context, %struct.context* %171, i32 0, i32 16, !dbg !3713
  %173 = bitcast %union.anon.0* %172 to %struct.mesg_hdr**, !dbg !3714
  %174 = load %struct.mesg_hdr*, %struct.mesg_hdr** %173, align 8, !dbg !3714
  %175 = getelementptr inbounds %struct.mesg_hdr, %struct.mesg_hdr* %174, i32 0, i32 5, !dbg !3715
  store i16 0, i16* %175, align 2, !dbg !3716
  br label %176

; <label>:176                                     ; preds = %144, %143
  %177 = load %struct.context*, %struct.context** %2, align 8, !dbg !3717
  %178 = getelementptr inbounds %struct.context, %struct.context* %177, i32 0, i32 17, !dbg !3718
  %179 = load i32, i32* %178, align 8, !dbg !3718
  store i32 %179, i32* %1, align 4, !dbg !3719
  br label %180, !dbg !3719

; <label>:180                                     ; preds = %176, %59, %35
  %181 = load i32, i32* %1, align 4, !dbg !3720
  ret i32 %181, !dbg !3720
}

; Function Attrs: nounwind
declare void @free(i8*) #5

; Function Attrs: nounwind uwtable
define i32 @context_timeout_handler(%struct.ev_to_data.14* %td) #0 !dbg !294 {
  %1 = alloca i32, align 4
  %2 = alloca %struct.ev_to_data.14*, align 8
  store %struct.ev_to_data.14* %td, %struct.ev_to_data.14** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.ev_to_data.14** %2, metadata !3721, metadata !2279), !dbg !3722
  %3 = load %struct.ev_to_data.14*, %struct.ev_to_data.14** %2, align 8, !dbg !3723
  %4 = getelementptr inbounds %struct.ev_to_data.14, %struct.ev_to_data.14* %3, i32 0, i32 2, !dbg !3725
  %5 = load i32, i32* %4, align 8, !dbg !3725
  %6 = icmp ne i32 %5, 1, !dbg !3726
  br i1 %6, label %7, label %8, !dbg !3727

; <label>:7                                       ; preds = %0
  store i32 -1, i32* %1, align 4, !dbg !3728
  br label %25, !dbg !3728

; <label>:8                                       ; preds = %0
  %9 = load %struct.ev_to_data.14*, %struct.ev_to_data.14** %2, align 8, !dbg !3729
  %10 = getelementptr inbounds %struct.ev_to_data.14, %struct.ev_to_data.14* %9, i32 0, i32 3, !dbg !3730
  %11 = bitcast %union.anon* %10 to %struct.context.19**, !dbg !3731
  %12 = load %struct.context.19*, %struct.context.19** %11, align 8, !dbg !3731
  %13 = getelementptr inbounds %struct.context.19, %struct.context.19* %12, i32 0, i32 6, !dbg !3732
  store %struct.ev_to_data.14* null, %struct.ev_to_data.14** %13, align 8, !dbg !3733
  %14 = load %struct.ev_to_data.14*, %struct.ev_to_data.14** %2, align 8, !dbg !3734
  %15 = getelementptr inbounds %struct.ev_to_data.14, %struct.ev_to_data.14* %14, i32 0, i32 3, !dbg !3735
  %16 = bitcast %union.anon* %15 to %struct.context.19**, !dbg !3736
  %17 = load %struct.context.19*, %struct.context.19** %16, align 8, !dbg !3736
  %18 = getelementptr inbounds %struct.context.19, %struct.context.19* %17, i32 0, i32 8, !dbg !3737
  %19 = load i32 (%struct.context.19*)*, i32 (%struct.context.19*)** %18, align 8, !dbg !3737
  %20 = load %struct.ev_to_data.14*, %struct.ev_to_data.14** %2, align 8, !dbg !3738
  %21 = getelementptr inbounds %struct.ev_to_data.14, %struct.ev_to_data.14* %20, i32 0, i32 3, !dbg !3739
  %22 = bitcast %union.anon* %21 to %struct.context.19**, !dbg !3740
  %23 = load %struct.context.19*, %struct.context.19** %22, align 8, !dbg !3740
  %24 = call i32 %19(%struct.context.19* %23), !dbg !3734
  store i32 %24, i32* %1, align 4, !dbg !3741
  br label %25, !dbg !3741

; <label>:25                                      ; preds = %8, %7
  %26 = load i32, i32* %1, align 4, !dbg !3742
  ret i32 %26, !dbg !3742
}

; Function Attrs: nounwind uwtable
define i32 @context_timeout_register(%struct.context.19* %cont, i32 %timeout) #0 !dbg !384 {
  %1 = alloca i32, align 4
  %2 = alloca %struct.context.19*, align 8
  %3 = alloca i32, align 4
  %fn = alloca i8*, align 8
  %edtp = alloca %struct.ev_to_data.14*, align 8
  store %struct.context.19* %cont, %struct.context.19** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.context.19** %2, metadata !3743, metadata !2279), !dbg !3744
  store i32 %timeout, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !3745, metadata !2279), !dbg !3746
  call void @llvm.dbg.declare(metadata i8** %fn, metadata !3747, metadata !2279), !dbg !3748
  store i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.52, i32 0, i32 0), i8** %fn, align 8, !dbg !3748
  call void @llvm.dbg.declare(metadata %struct.ev_to_data.14** %edtp, metadata !3749, metadata !2279), !dbg !3750
  %4 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 8), align 4, !dbg !3751
  %5 = icmp sgt i32 %4, 2, !dbg !3753
  br i1 %5, label %6, label %8, !dbg !3754

; <label>:6                                       ; preds = %0
  %7 = load i8*, i8** %fn, align 8, !dbg !3755
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1.53, i32 0, i32 0), i8* %7), !dbg !3756
  br label %8, !dbg !3756

; <label>:8                                       ; preds = %6, %0
  %9 = load %struct.context.19*, %struct.context.19** %2, align 8, !dbg !3757
  %10 = getelementptr inbounds %struct.context.19, %struct.context.19* %9, i32 0, i32 6, !dbg !3759
  %11 = load %struct.ev_to_data.14*, %struct.ev_to_data.14** %10, align 8, !dbg !3759
  %12 = icmp ne %struct.ev_to_data.14* %11, null, !dbg !3757
  br i1 %12, label %13, label %23, !dbg !3760

; <label>:13                                      ; preds = %8
  %14 = load %struct.context.19*, %struct.context.19** %2, align 8, !dbg !3761
  %15 = getelementptr inbounds %struct.context.19, %struct.context.19* %14, i32 0, i32 6, !dbg !3763
  %16 = load %struct.ev_to_data.14*, %struct.ev_to_data.14** %15, align 8, !dbg !3763
  %17 = getelementptr inbounds %struct.ev_to_data.14, %struct.ev_to_data.14* %16, i32 0, i32 1, !dbg !3764
  %18 = bitcast {}** %17 to i32 (%struct.ev_to_data.14*)**, !dbg !3764
  %19 = load i32 (%struct.ev_to_data.14*)*, i32 (%struct.ev_to_data.14*)** %18, align 8, !dbg !3764
  %20 = icmp ne i32 (%struct.ev_to_data.14*)* %19, null, !dbg !3761
  br i1 %20, label %21, label %23, !dbg !3765

; <label>:21                                      ; preds = %13
  %22 = load i8*, i8** %fn, align 8, !dbg !3766
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.2.54, i32 0, i32 0), i8* %22), !dbg !3768
  store i32 -1, i32* %1, align 4, !dbg !3769
  br label %64, !dbg !3769

; <label>:23                                      ; preds = %13, %8
  %24 = call noalias i8* @malloc(i64 32) #10, !dbg !3770
  %25 = bitcast i8* %24 to %struct.ev_to_data.14*, !dbg !3770
  store %struct.ev_to_data.14* %25, %struct.ev_to_data.14** %edtp, align 8, !dbg !3771
  %26 = load %struct.ev_to_data.14*, %struct.ev_to_data.14** %edtp, align 8, !dbg !3772
  %27 = icmp ne %struct.ev_to_data.14* %26, null, !dbg !3772
  br i1 %27, label %29, label %28, !dbg !3774

; <label>:28                                      ; preds = %23
  store i32 -1, i32* %1, align 4, !dbg !3775
  br label %64, !dbg !3775

; <label>:29                                      ; preds = %23
  %30 = call i64 @time(i64* null) #10, !dbg !3776
  %31 = load i32, i32* %3, align 4, !dbg !3777
  %32 = sext i32 %31 to i64, !dbg !3777
  %33 = add nsw i64 %30, %32, !dbg !3778
  %34 = load %struct.ev_to_data.14*, %struct.ev_to_data.14** %edtp, align 8, !dbg !3779
  %35 = getelementptr inbounds %struct.ev_to_data.14, %struct.ev_to_data.14* %34, i32 0, i32 0, !dbg !3780
  store i64 %33, i64* %35, align 8, !dbg !3781
  %36 = load %struct.ev_to_data.14*, %struct.ev_to_data.14** %edtp, align 8, !dbg !3782
  %37 = getelementptr inbounds %struct.ev_to_data.14, %struct.ev_to_data.14* %36, i32 0, i32 1, !dbg !3783
  %38 = bitcast {}** %37 to i32 (%struct.ev_to_data.14*)**, !dbg !3783
  store i32 (%struct.ev_to_data.14*)* @context_timeout_handler, i32 (%struct.ev_to_data.14*)** %38, align 8, !dbg !3784
  %39 = load %struct.ev_to_data.14*, %struct.ev_to_data.14** %edtp, align 8, !dbg !3785
  %40 = getelementptr inbounds %struct.ev_to_data.14, %struct.ev_to_data.14* %39, i32 0, i32 2, !dbg !3786
  store i32 1, i32* %40, align 8, !dbg !3787
  %41 = load %struct.context.19*, %struct.context.19** %2, align 8, !dbg !3788
  %42 = load %struct.ev_to_data.14*, %struct.ev_to_data.14** %edtp, align 8, !dbg !3789
  %43 = getelementptr inbounds %struct.ev_to_data.14, %struct.ev_to_data.14* %42, i32 0, i32 3, !dbg !3790
  %44 = bitcast %union.anon* %43 to %struct.context.19**, !dbg !3791
  store %struct.context.19* %41, %struct.context.19** %44, align 8, !dbg !3792
  %45 = load %struct.ev_to_data.14*, %struct.ev_to_data.14** %edtp, align 8, !dbg !3793
  %46 = call i32 @ev_to_register(%struct.ev_to_data.14* %45), !dbg !3795
  %47 = icmp slt i32 %46, 0, !dbg !3796
  br i1 %47, label %48, label %51, !dbg !3797

; <label>:48                                      ; preds = %29
  %49 = load %struct.ev_to_data.14*, %struct.ev_to_data.14** %edtp, align 8, !dbg !3798
  %50 = bitcast %struct.ev_to_data.14* %49 to i8*, !dbg !3798
  call void @free(i8* %50) #10, !dbg !3800
  store i32 -1, i32* %1, align 4, !dbg !3801
  br label %64, !dbg !3801

; <label>:51                                      ; preds = %29
  %52 = load %struct.ev_to_data.14*, %struct.ev_to_data.14** %edtp, align 8, !dbg !3802
  %53 = load %struct.context.19*, %struct.context.19** %2, align 8, !dbg !3803
  %54 = getelementptr inbounds %struct.context.19, %struct.context.19* %53, i32 0, i32 6, !dbg !3804
  store %struct.ev_to_data.14* %52, %struct.ev_to_data.14** %54, align 8, !dbg !3805
  %55 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 8), align 4, !dbg !3806
  %56 = icmp sgt i32 %55, 2, !dbg !3808
  br i1 %56, label %57, label %63, !dbg !3809

; <label>:57                                      ; preds = %51
  %58 = load i8*, i8** %fn, align 8, !dbg !3810
  %59 = load %struct.ev_to_data.14*, %struct.ev_to_data.14** %edtp, align 8, !dbg !3811
  %60 = getelementptr inbounds %struct.ev_to_data.14, %struct.ev_to_data.14* %59, i32 0, i32 0, !dbg !3812
  %61 = load i64, i64* %60, align 8, !dbg !3812
  %62 = trunc i64 %61 to i32, !dbg !3813
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.3.55, i32 0, i32 0), i8* %58, i32 %62), !dbg !3814
  br label %63, !dbg !3814

; <label>:63                                      ; preds = %57, %51
  store i32 0, i32* %1, align 4, !dbg !3815
  br label %64, !dbg !3815

; <label>:64                                      ; preds = %63, %48, %28, %21
  %65 = load i32, i32* %1, align 4, !dbg !3816
  ret i32 %65, !dbg !3816
}

; Function Attrs: nounwind
declare i64 @time(i64*) #5

; Function Attrs: nounwind uwtable
define %struct.context.19* @context_create() #0 !dbg !389 {
  %1 = alloca %struct.context.19*, align 8
  %fn = alloca i8*, align 8
  %cont = alloca %struct.context.19*, align 8
  call void @llvm.dbg.declare(metadata i8** %fn, metadata !3817, metadata !2279), !dbg !3818
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4.58, i32 0, i32 0), i8** %fn, align 8, !dbg !3818
  call void @llvm.dbg.declare(metadata %struct.context.19** %cont, metadata !3819, metadata !2279), !dbg !3820
  %2 = call noalias i8* @malloc(i64 408) #10, !dbg !3821
  %3 = bitcast i8* %2 to %struct.context.19*, !dbg !3821
  store %struct.context.19* %3, %struct.context.19** %cont, align 8, !dbg !3822
  %4 = load %struct.context.19*, %struct.context.19** %cont, align 8, !dbg !3823
  %5 = icmp ne %struct.context.19* %4, null, !dbg !3823
  br i1 %5, label %7, label %6, !dbg !3825

; <label>:6                                       ; preds = %0
  store %struct.context.19* null, %struct.context.19** %1, align 8, !dbg !3826
  br label %63, !dbg !3826

; <label>:7                                       ; preds = %0
  %8 = load i8*, i8** %fn, align 8, !dbg !3827
  %9 = load %struct.context.19*, %struct.context.19** %cont, align 8, !dbg !3828
  %10 = bitcast %struct.context.19* %9 to i8*, !dbg !3829
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.5.59, i32 0, i32 0), i8* %8, i8* %10), !dbg !3830
  %11 = load %struct.context.19*, %struct.context.19** %cont, align 8, !dbg !3831
  %12 = bitcast %struct.context.19* %11 to i8*, !dbg !3832
  call void @llvm.memset.p0i8.i64(i8* %12, i8 0, i64 408, i32 8, i1 false), !dbg !3832
  %13 = load %struct.context.19*, %struct.context.19** %cont, align 8, !dbg !3833
  %14 = getelementptr inbounds %struct.context.19, %struct.context.19* %13, i32 0, i32 5, !dbg !3834
  store %struct.generic_list* null, %struct.generic_list** %14, align 8, !dbg !3835
  %15 = load %struct.context.19*, %struct.context.19** %cont, align 8, !dbg !3836
  %16 = getelementptr inbounds %struct.context.19, %struct.context.19* %15, i32 0, i32 23, !dbg !3837
  store i32 -1, i32* %16, align 8, !dbg !3838
  %17 = call %struct.generic_list* @list_init(), !dbg !3839
  %18 = load %struct.context.19*, %struct.context.19** %cont, align 8, !dbg !3840
  %19 = getelementptr inbounds %struct.context.19, %struct.context.19* %18, i32 0, i32 13, !dbg !3841
  store %struct.generic_list* %17, %struct.generic_list** %19, align 8, !dbg !3842
  %20 = call %struct.generic_list* @list_init(), !dbg !3843
  %21 = load %struct.context.19*, %struct.context.19** %cont, align 8, !dbg !3844
  %22 = getelementptr inbounds %struct.context.19, %struct.context.19* %21, i32 0, i32 14, !dbg !3845
  store %struct.generic_list* %20, %struct.generic_list** %22, align 8, !dbg !3846
  %23 = call %struct.generic_list* @list_init(), !dbg !3847
  %24 = load %struct.context.19*, %struct.context.19** %cont, align 8, !dbg !3848
  %25 = getelementptr inbounds %struct.context.19, %struct.context.19* %24, i32 0, i32 15, !dbg !3849
  store %struct.generic_list* %23, %struct.generic_list** %25, align 8, !dbg !3850
  %26 = load %struct.context.19*, %struct.context.19** %cont, align 8, !dbg !3851
  %27 = getelementptr inbounds %struct.context.19, %struct.context.19* %26, i32 0, i32 13, !dbg !3853
  %28 = load %struct.generic_list*, %struct.generic_list** %27, align 8, !dbg !3853
  %29 = icmp ne %struct.generic_list* %28, null, !dbg !3851
  br i1 %29, label %30, label %40, !dbg !3854

; <label>:30                                      ; preds = %7
  %31 = load %struct.context.19*, %struct.context.19** %cont, align 8, !dbg !3855
  %32 = getelementptr inbounds %struct.context.19, %struct.context.19* %31, i32 0, i32 14, !dbg !3857
  %33 = load %struct.generic_list*, %struct.generic_list** %32, align 8, !dbg !3857
  %34 = icmp ne %struct.generic_list* %33, null, !dbg !3855
  br i1 %34, label %35, label %40, !dbg !3858

; <label>:35                                      ; preds = %30
  %36 = load %struct.context.19*, %struct.context.19** %cont, align 8, !dbg !3859
  %37 = getelementptr inbounds %struct.context.19, %struct.context.19* %36, i32 0, i32 15, !dbg !3861
  %38 = load %struct.generic_list*, %struct.generic_list** %37, align 8, !dbg !3861
  %39 = icmp ne %struct.generic_list* %38, null, !dbg !3859
  br i1 %39, label %44, label %40, !dbg !3862

; <label>:40                                      ; preds = %35, %30, %7
  %41 = load %struct.context.19*, %struct.context.19** %cont, align 8, !dbg !3863
  %42 = call i8* @context_destroy(%struct.context.19* %41), !dbg !3864
  %43 = bitcast i8* %42 to %struct.context.19*, !dbg !3864
  store %struct.context.19* %43, %struct.context.19** %1, align 8, !dbg !3865
  br label %63, !dbg !3865

; <label>:44                                      ; preds = %35
  %45 = call noalias i8* @malloc(i64 128) #10, !dbg !3866
  %46 = bitcast i8* %45 to %struct.sockaddr*, !dbg !3866
  %47 = load %struct.context.19*, %struct.context.19** %cont, align 8, !dbg !3867
  %48 = getelementptr inbounds %struct.context.19, %struct.context.19* %47, i32 0, i32 22, !dbg !3868
  store %struct.sockaddr* %46, %struct.sockaddr** %48, align 8, !dbg !3869
  %49 = load %struct.context.19*, %struct.context.19** %cont, align 8, !dbg !3870
  %50 = getelementptr inbounds %struct.context.19, %struct.context.19* %49, i32 0, i32 22, !dbg !3872
  %51 = load %struct.sockaddr*, %struct.sockaddr** %50, align 8, !dbg !3872
  %52 = icmp ne %struct.sockaddr* %51, null, !dbg !3870
  br i1 %52, label %57, label %53, !dbg !3873

; <label>:53                                      ; preds = %44
  %54 = load %struct.context.19*, %struct.context.19** %cont, align 8, !dbg !3874
  %55 = call i8* @context_destroy(%struct.context.19* %54), !dbg !3875
  %56 = bitcast i8* %55 to %struct.context.19*, !dbg !3875
  store %struct.context.19* %56, %struct.context.19** %1, align 8, !dbg !3876
  br label %63, !dbg !3876

; <label>:57                                      ; preds = %44
  %58 = load %struct.context.19*, %struct.context.19** %cont, align 8, !dbg !3877
  %59 = getelementptr inbounds %struct.context.19, %struct.context.19* %58, i32 0, i32 22, !dbg !3878
  %60 = load %struct.sockaddr*, %struct.sockaddr** %59, align 8, !dbg !3878
  %61 = bitcast %struct.sockaddr* %60 to i8*, !dbg !3879
  call void @llvm.memset.p0i8.i64(i8* %61, i8 0, i64 128, i32 2, i1 false), !dbg !3879
  %62 = load %struct.context.19*, %struct.context.19** %cont, align 8, !dbg !3880
  store %struct.context.19* %62, %struct.context.19** %1, align 8, !dbg !3881
  br label %63, !dbg !3881

; <label>:63                                      ; preds = %57, %53, %40, %6
  %64 = load %struct.context.19*, %struct.context.19** %1, align 8, !dbg !3882
  ret %struct.context.19* %64, !dbg !3882
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture, i8, i64, i32, i1) #3

; Function Attrs: nounwind uwtable
define i8* @context_destroy(%struct.context.19* %cont) #0 !dbg !392 {
  %1 = alloca i8*, align 8
  %2 = alloca %struct.context.19*, align 8
  %fn = alloca i8*, align 8
  store %struct.context.19* %cont, %struct.context.19** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.context.19** %2, metadata !3883, metadata !2279), !dbg !3884
  call void @llvm.dbg.declare(metadata i8** %fn, metadata !3885, metadata !2279), !dbg !3886
  store i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.62, i32 0, i32 0), i8** %fn, align 8, !dbg !3886
  %3 = load i8*, i8** %fn, align 8, !dbg !3887
  %4 = load %struct.context.19*, %struct.context.19** %2, align 8, !dbg !3888
  %5 = bitcast %struct.context.19* %4 to i8*, !dbg !3889
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.5.59, i32 0, i32 0), i8* %3, i8* %5), !dbg !3890
  %6 = load %struct.context.19*, %struct.context.19** %2, align 8, !dbg !3891
  %7 = icmp ne %struct.context.19* %6, null, !dbg !3891
  br i1 %7, label %9, label %8, !dbg !3893

; <label>:8                                       ; preds = %0
  store i8* null, i8** %1, align 8, !dbg !3894
  br label %157, !dbg !3894

; <label>:9                                       ; preds = %0
  %10 = load %struct.context.19*, %struct.context.19** %2, align 8, !dbg !3895
  %11 = getelementptr inbounds %struct.context.19, %struct.context.19* %10, i32 0, i32 0, !dbg !3897
  %12 = load %struct.context.19*, %struct.context.19** %11, align 8, !dbg !3897
  %13 = icmp ne %struct.context.19* %12, null, !dbg !3895
  br i1 %13, label %14, label %19, !dbg !3898

; <label>:14                                      ; preds = %9
  %15 = load %struct.context.19*, %struct.context.19** %2, align 8, !dbg !3899
  %16 = getelementptr inbounds %struct.context.19, %struct.context.19* %15, i32 0, i32 0, !dbg !3900
  %17 = load %struct.context.19*, %struct.context.19** %16, align 8, !dbg !3900
  %18 = getelementptr inbounds %struct.context.19, %struct.context.19* %17, i32 0, i32 1, !dbg !3901
  store %struct.context.19* null, %struct.context.19** %18, align 8, !dbg !3902
  br label %19, !dbg !3899

; <label>:19                                      ; preds = %14, %9
  %20 = load %struct.context.19*, %struct.context.19** %2, align 8, !dbg !3903
  %21 = getelementptr inbounds %struct.context.19, %struct.context.19* %20, i32 0, i32 1, !dbg !3905
  %22 = load %struct.context.19*, %struct.context.19** %21, align 8, !dbg !3905
  %23 = icmp ne %struct.context.19* %22, null, !dbg !3903
  br i1 %23, label %24, label %29, !dbg !3906

; <label>:24                                      ; preds = %19
  %25 = load %struct.context.19*, %struct.context.19** %2, align 8, !dbg !3907
  %26 = getelementptr inbounds %struct.context.19, %struct.context.19* %25, i32 0, i32 1, !dbg !3908
  %27 = load %struct.context.19*, %struct.context.19** %26, align 8, !dbg !3908
  %28 = getelementptr inbounds %struct.context.19, %struct.context.19* %27, i32 0, i32 0, !dbg !3909
  store %struct.context.19* null, %struct.context.19** %28, align 8, !dbg !3910
  br label %29, !dbg !3907

; <label>:29                                      ; preds = %24, %19
  %30 = load %struct.context.19*, %struct.context.19** %2, align 8, !dbg !3911
  %31 = getelementptr inbounds %struct.context.19, %struct.context.19* %30, i32 0, i32 13, !dbg !3913
  %32 = load %struct.generic_list*, %struct.generic_list** %31, align 8, !dbg !3913
  %33 = icmp ne %struct.generic_list* %32, null, !dbg !3911
  br i1 %33, label %34, label %38, !dbg !3914

; <label>:34                                      ; preds = %29
  %35 = load %struct.context.19*, %struct.context.19** %2, align 8, !dbg !3915
  %36 = getelementptr inbounds %struct.context.19, %struct.context.19* %35, i32 0, i32 13, !dbg !3916
  %37 = load %struct.generic_list*, %struct.generic_list** %36, align 8, !dbg !3916
  call void @list_destroy(%struct.generic_list* %37, void (i8*)* @rrset_freev), !dbg !3917
  br label %38, !dbg !3917

; <label>:38                                      ; preds = %34, %29
  %39 = load %struct.context.19*, %struct.context.19** %2, align 8, !dbg !3918
  %40 = getelementptr inbounds %struct.context.19, %struct.context.19* %39, i32 0, i32 14, !dbg !3920
  %41 = load %struct.generic_list*, %struct.generic_list** %40, align 8, !dbg !3920
  %42 = icmp ne %struct.generic_list* %41, null, !dbg !3918
  br i1 %42, label %43, label %47, !dbg !3921

; <label>:43                                      ; preds = %38
  %44 = load %struct.context.19*, %struct.context.19** %2, align 8, !dbg !3922
  %45 = getelementptr inbounds %struct.context.19, %struct.context.19* %44, i32 0, i32 14, !dbg !3923
  %46 = load %struct.generic_list*, %struct.generic_list** %45, align 8, !dbg !3923
  call void @list_destroy(%struct.generic_list* %46, void (i8*)* @rrset_freev), !dbg !3924
  br label %47, !dbg !3924

; <label>:47                                      ; preds = %43, %38
  %48 = load %struct.context.19*, %struct.context.19** %2, align 8, !dbg !3925
  %49 = getelementptr inbounds %struct.context.19, %struct.context.19* %48, i32 0, i32 15, !dbg !3927
  %50 = load %struct.generic_list*, %struct.generic_list** %49, align 8, !dbg !3927
  %51 = icmp ne %struct.generic_list* %50, null, !dbg !3925
  br i1 %51, label %52, label %56, !dbg !3928

; <label>:52                                      ; preds = %47
  %53 = load %struct.context.19*, %struct.context.19** %2, align 8, !dbg !3929
  %54 = getelementptr inbounds %struct.context.19, %struct.context.19* %53, i32 0, i32 15, !dbg !3930
  %55 = load %struct.generic_list*, %struct.generic_list** %54, align 8, !dbg !3930
  call void @list_destroy(%struct.generic_list* %55, void (i8*)* @rrset_freev), !dbg !3931
  br label %56, !dbg !3931

; <label>:56                                      ; preds = %52, %47
  %57 = load %struct.context.19*, %struct.context.19** %2, align 8, !dbg !3932
  %58 = getelementptr inbounds %struct.context.19, %struct.context.19* %57, i32 0, i32 4, !dbg !3934
  %59 = load %struct.generic_list*, %struct.generic_list** %58, align 8, !dbg !3934
  %60 = icmp ne %struct.generic_list* %59, null, !dbg !3932
  br i1 %60, label %61, label %65, !dbg !3935

; <label>:61                                      ; preds = %56
  %62 = load %struct.context.19*, %struct.context.19** %2, align 8, !dbg !3936
  %63 = getelementptr inbounds %struct.context.19, %struct.context.19* %62, i32 0, i32 4, !dbg !3937
  %64 = load %struct.generic_list*, %struct.generic_list** %63, align 8, !dbg !3937
  call void @list_destroy(%struct.generic_list* %64, void (i8*)* @free), !dbg !3938
  br label %65, !dbg !3938

; <label>:65                                      ; preds = %61, %56
  %66 = load %struct.context.19*, %struct.context.19** %2, align 8, !dbg !3939
  %67 = getelementptr inbounds %struct.context.19, %struct.context.19* %66, i32 0, i32 16, !dbg !3941
  %68 = bitcast %union.anon.0* %67 to i8**, !dbg !3942
  %69 = load i8*, i8** %68, align 8, !dbg !3942
  %70 = icmp ne i8* %69, null, !dbg !3939
  br i1 %70, label %71, label %76, !dbg !3943

; <label>:71                                      ; preds = %65
  %72 = load %struct.context.19*, %struct.context.19** %2, align 8, !dbg !3944
  %73 = getelementptr inbounds %struct.context.19, %struct.context.19* %72, i32 0, i32 16, !dbg !3945
  %74 = bitcast %union.anon.0* %73 to i8**, !dbg !3946
  %75 = load i8*, i8** %74, align 8, !dbg !3946
  call void @free(i8* %75) #10, !dbg !3947
  br label %76, !dbg !3947

; <label>:76                                      ; preds = %71, %65
  %77 = load %struct.context.19*, %struct.context.19** %2, align 8, !dbg !3948
  %78 = getelementptr inbounds %struct.context.19, %struct.context.19* %77, i32 0, i32 6, !dbg !3950
  %79 = load %struct.ev_to_data.14*, %struct.ev_to_data.14** %78, align 8, !dbg !3950
  %80 = icmp ne %struct.ev_to_data.14* %79, null, !dbg !3948
  br i1 %80, label %81, label %87, !dbg !3951

; <label>:81                                      ; preds = %76
  %82 = load %struct.context.19*, %struct.context.19** %2, align 8, !dbg !3952
  %83 = getelementptr inbounds %struct.context.19, %struct.context.19* %82, i32 0, i32 6, !dbg !3953
  %84 = load %struct.ev_to_data.14*, %struct.ev_to_data.14** %83, align 8, !dbg !3953
  %85 = getelementptr inbounds %struct.ev_to_data.14, %struct.ev_to_data.14* %84, i32 0, i32 1, !dbg !3954
  %86 = bitcast {}** %85 to i32 (%struct.ev_to_data.14*)**, !dbg !3954
  store i32 (%struct.ev_to_data.14*)* null, i32 (%struct.ev_to_data.14*)** %86, align 8, !dbg !3955
  br label %87, !dbg !3952

; <label>:87                                      ; preds = %81, %76
  %88 = load %struct.context.19*, %struct.context.19** %2, align 8, !dbg !3956
  %89 = getelementptr inbounds %struct.context.19, %struct.context.19* %88, i32 0, i32 23, !dbg !3958
  %90 = load i32, i32* %89, align 8, !dbg !3958
  %91 = icmp sge i32 %90, 0, !dbg !3959
  br i1 %91, label %92, label %109, !dbg !3960

; <label>:92                                      ; preds = %87
  %93 = load %struct.context.19*, %struct.context.19** %2, align 8, !dbg !3961
  %94 = getelementptr inbounds %struct.context.19, %struct.context.19* %93, i32 0, i32 23, !dbg !3963
  %95 = load i32, i32* %94, align 8, !dbg !3963
  %96 = call i32 @shutdown(i32 %95, i32 2) #10, !dbg !3964
  %97 = load %struct.context.19*, %struct.context.19** %2, align 8, !dbg !3965
  %98 = getelementptr inbounds %struct.context.19, %struct.context.19* %97, i32 0, i32 23, !dbg !3966
  %99 = load i32, i32* %98, align 8, !dbg !3966
  %100 = call i32 @close(i32 %99), !dbg !3967
  %101 = load %struct.context.19*, %struct.context.19** %2, align 8, !dbg !3968
  %102 = getelementptr inbounds %struct.context.19, %struct.context.19* %101, i32 0, i32 23, !dbg !3969
  %103 = load i32, i32* %102, align 8, !dbg !3969
  %104 = call i32 @ev_tcp_out_remove(i32 %103), !dbg !3970
  %105 = load %struct.context.19*, %struct.context.19** %2, align 8, !dbg !3971
  %106 = getelementptr inbounds %struct.context.19, %struct.context.19* %105, i32 0, i32 23, !dbg !3972
  %107 = load i32, i32* %106, align 8, !dbg !3972
  %108 = call i32 @ev_tcp_conn_in_remove(i32 %107), !dbg !3973
  br label %109, !dbg !3974

; <label>:109                                     ; preds = %92, %87
  %110 = load %struct.context.19*, %struct.context.19** %2, align 8, !dbg !3975
  %111 = getelementptr inbounds %struct.context.19, %struct.context.19* %110, i32 0, i32 23, !dbg !3977
  %112 = load i32, i32* %111, align 8, !dbg !3977
  %113 = icmp slt i32 %112, 0, !dbg !3978
  br i1 %113, label %114, label %135, !dbg !3979

; <label>:114                                     ; preds = %109
  %115 = load %struct.context.19*, %struct.context.19** %2, align 8, !dbg !3980
  %116 = getelementptr inbounds %struct.context.19, %struct.context.19* %115, i32 0, i32 22, !dbg !3982
  %117 = load %struct.sockaddr*, %struct.sockaddr** %116, align 8, !dbg !3982
  %118 = icmp ne %struct.sockaddr* %117, null, !dbg !3980
  br i1 %118, label %119, label %135, !dbg !3983

; <label>:119                                     ; preds = %114
  %120 = load %struct.context.19*, %struct.context.19** %2, align 8, !dbg !3984
  %121 = getelementptr inbounds %struct.context.19, %struct.context.19* %120, i32 0, i32 22, !dbg !3986
  %122 = load %struct.sockaddr*, %struct.sockaddr** %121, align 8, !dbg !3986
  %123 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %122, i32 0, i32 0, !dbg !3987
  %124 = load i16, i16* %123, align 2, !dbg !3987
  %125 = zext i16 %124 to i32, !dbg !3984
  %126 = icmp ne i32 %125, 0, !dbg !3984
  br i1 %126, label %127, label %135, !dbg !3988

; <label>:127                                     ; preds = %119
  %128 = load %struct.context.19*, %struct.context.19** %2, align 8, !dbg !3989
  %129 = getelementptr inbounds %struct.context.19, %struct.context.19* %128, i32 0, i32 22, !dbg !3990
  %130 = load %struct.sockaddr*, %struct.sockaddr** %129, align 8, !dbg !3990
  %131 = load %struct.context.19*, %struct.context.19** %2, align 8, !dbg !3991
  %132 = getelementptr inbounds %struct.context.19, %struct.context.19* %131, i32 0, i32 10, !dbg !3992
  %133 = load i32, i32* %132, align 8, !dbg !3992
  %134 = call i32 @ev_udp_in_remove(%struct.sockaddr* %130, i32 %133), !dbg !3993
  br label %135, !dbg !3993

; <label>:135                                     ; preds = %127, %119, %114, %109
  %136 = load %struct.context.19*, %struct.context.19** %2, align 8, !dbg !3994
  %137 = getelementptr inbounds %struct.context.19, %struct.context.19* %136, i32 0, i32 22, !dbg !3996
  %138 = load %struct.sockaddr*, %struct.sockaddr** %137, align 8, !dbg !3996
  %139 = icmp ne %struct.sockaddr* %138, null, !dbg !3994
  br i1 %139, label %140, label %145, !dbg !3997

; <label>:140                                     ; preds = %135
  %141 = load %struct.context.19*, %struct.context.19** %2, align 8, !dbg !3998
  %142 = getelementptr inbounds %struct.context.19, %struct.context.19* %141, i32 0, i32 22, !dbg !3999
  %143 = load %struct.sockaddr*, %struct.sockaddr** %142, align 8, !dbg !3999
  %144 = bitcast %struct.sockaddr* %143 to i8*, !dbg !3998
  call void @free(i8* %144) #10, !dbg !4000
  br label %145, !dbg !4000

; <label>:145                                     ; preds = %140, %135
  %146 = load %struct.context.19*, %struct.context.19** %2, align 8, !dbg !4001
  %147 = getelementptr inbounds %struct.context.19, %struct.context.19* %146, i32 0, i32 19, !dbg !4003
  %148 = load %struct.nia*, %struct.nia** %147, align 8, !dbg !4003
  %149 = icmp ne %struct.nia* %148, null, !dbg !4001
  br i1 %149, label %150, label %154, !dbg !4004

; <label>:150                                     ; preds = %145
  %151 = load %struct.context.19*, %struct.context.19** %2, align 8, !dbg !4005
  %152 = getelementptr inbounds %struct.context.19, %struct.context.19* %151, i32 0, i32 19, !dbg !4006
  %153 = load %struct.nia*, %struct.nia** %152, align 8, !dbg !4006
  call void @nia_free(%struct.nia* %153, i32 0), !dbg !4007
  br label %154, !dbg !4007

; <label>:154                                     ; preds = %150, %145
  %155 = load %struct.context.19*, %struct.context.19** %2, align 8, !dbg !4008
  %156 = bitcast %struct.context.19* %155 to i8*, !dbg !4008
  call void @free(i8* %156) #10, !dbg !4009
  store i8* null, i8** %1, align 8, !dbg !4010
  br label %157, !dbg !4010

; <label>:157                                     ; preds = %154, %8
  %158 = load i8*, i8** %1, align 8, !dbg !4011
  ret i8* %158, !dbg !4011
}

; Function Attrs: nounwind
declare i32 @shutdown(i32, i32) #5

declare i32 @close(i32) #2

; Function Attrs: nounwind uwtable
define void @make_random_permutation(i32 %start) #0 !dbg !470 {
  %1 = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i32 %start, i32* %1, align 4
  call void @llvm.dbg.declare(metadata i32* %1, metadata !4012, metadata !2279), !dbg !4013
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4014, metadata !2279), !dbg !4015
  call void @llvm.dbg.declare(metadata i32* %j, metadata !4016, metadata !2279), !dbg !4017
  %2 = load i32, i32* %1, align 4, !dbg !4018
  %3 = trunc i32 %2 to i16, !dbg !4018
  store i16 %3, i16* getelementptr inbounds ([32768 x i16], [32768 x i16]* @permutation, i64 0, i64 0), align 16, !dbg !4019
  store i32 1, i32* %i, align 4, !dbg !4020
  br label %4, !dbg !4022

; <label>:4                                       ; preds = %35, %0
  %5 = load i32, i32* %i, align 4, !dbg !4023
  %6 = icmp slt i32 %5, 32768, !dbg !4026
  br i1 %6, label %7, label %38, !dbg !4027

; <label>:7                                       ; preds = %4
  %8 = call i64 @random() #10, !dbg !4028
  %9 = sitofp i64 %8 to double, !dbg !4028
  %10 = load i32, i32* %i, align 4, !dbg !4030
  %11 = add nsw i32 %10, 1, !dbg !4031
  %12 = sitofp i32 %11 to double, !dbg !4032
  %13 = fmul double %9, %12, !dbg !4033
  %14 = fdiv double %13, 0x41DFFFFFFFC00000, !dbg !4034
  %15 = fptosi double %14 to i32, !dbg !4028
  store i32 %15, i32* %j, align 4, !dbg !4035
  %16 = load i32, i32* %j, align 4, !dbg !4036
  %17 = load i32, i32* %i, align 4, !dbg !4038
  %18 = icmp ne i32 %16, %17, !dbg !4039
  br i1 %18, label %19, label %27, !dbg !4040

; <label>:19                                      ; preds = %7
  %20 = load i32, i32* %j, align 4, !dbg !4041
  %21 = sext i32 %20 to i64, !dbg !4043
  %22 = getelementptr inbounds [32768 x i16], [32768 x i16]* @permutation, i64 0, i64 %21, !dbg !4043
  %23 = load i16, i16* %22, align 2, !dbg !4043
  %24 = load i32, i32* %i, align 4, !dbg !4044
  %25 = sext i32 %24 to i64, !dbg !4045
  %26 = getelementptr inbounds [32768 x i16], [32768 x i16]* @permutation, i64 0, i64 %25, !dbg !4045
  store i16 %23, i16* %26, align 2, !dbg !4046
  br label %27, !dbg !4047

; <label>:27                                      ; preds = %19, %7
  %28 = load i32, i32* %1, align 4, !dbg !4048
  %29 = load i32, i32* %i, align 4, !dbg !4049
  %30 = add nsw i32 %28, %29, !dbg !4050
  %31 = trunc i32 %30 to i16, !dbg !4048
  %32 = load i32, i32* %j, align 4, !dbg !4051
  %33 = sext i32 %32 to i64, !dbg !4052
  %34 = getelementptr inbounds [32768 x i16], [32768 x i16]* @permutation, i64 0, i64 %33, !dbg !4052
  store i16 %31, i16* %34, align 2, !dbg !4053
  br label %35, !dbg !4054

; <label>:35                                      ; preds = %27
  %36 = load i32, i32* %i, align 4, !dbg !4055
  %37 = add nsw i32 %36, 1, !dbg !4055
  store i32 %37, i32* %i, align 4, !dbg !4055
  br label %4, !dbg !4057

; <label>:38                                      ; preds = %4
  ret void, !dbg !4058
}

; Function Attrs: nounwind
declare i64 @random() #5

; Function Attrs: nounwind uwtable
define zeroext i16 @mesg_id() #0 !dbg !473 {
  %1 = load i32, i32* @mesg_id.range, align 4, !dbg !4059
  %2 = icmp ne i32 %1, 0, !dbg !4059
  br i1 %2, label %6, label %3, !dbg !4061

; <label>:3                                       ; preds = %0
  %4 = call i64 @time(i64* null) #10, !dbg !4062
  %5 = trunc i64 %4 to i32, !dbg !4062
  call void @srandom(i32 %5) #10, !dbg !4064
  store i32 1, i32* @mesg_id.range, align 4, !dbg !4066
  call void @make_random_permutation(i32 0), !dbg !4067
  store i32 0, i32* @mesg_id.index, align 4, !dbg !4068
  br label %6, !dbg !4069

; <label>:6                                       ; preds = %3, %0
  %7 = load i32, i32* @mesg_id.index, align 4, !dbg !4070
  %8 = icmp eq i32 %7, 16384, !dbg !4072
  br i1 %8, label %9, label %15, !dbg !4073

; <label>:9                                       ; preds = %6
  %10 = load i32, i32* @mesg_id.range, align 4, !dbg !4074
  %11 = icmp eq i32 %10, 1, !dbg !4077
  br i1 %11, label %12, label %13, !dbg !4078

; <label>:12                                      ; preds = %9
  store i32 2, i32* @mesg_id.range, align 4, !dbg !4079
  call void @make_random_permutation(i32 32768), !dbg !4081
  br label %14, !dbg !4082

; <label>:13                                      ; preds = %9
  store i32 1, i32* @mesg_id.range, align 4, !dbg !4083
  call void @make_random_permutation(i32 0), !dbg !4085
  br label %14

; <label>:14                                      ; preds = %13, %12
  store i32 0, i32* @mesg_id.index, align 4, !dbg !4086
  br label %15, !dbg !4087

; <label>:15                                      ; preds = %14, %6
  %16 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 8), align 4, !dbg !4088
  %17 = icmp sgt i32 %16, 4, !dbg !4090
  br i1 %17, label %18, label %24, !dbg !4091

; <label>:18                                      ; preds = %15
  %19 = load i32, i32* @mesg_id.index, align 4, !dbg !4092
  %20 = sext i32 %19 to i64, !dbg !4094
  %21 = getelementptr inbounds [32768 x i16], [32768 x i16]* @permutation, i64 0, i64 %20, !dbg !4094
  %22 = load i16, i16* %21, align 2, !dbg !4094
  %23 = zext i16 %22 to i32, !dbg !4094
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.65, i32 0, i32 0), i32 %23), !dbg !4095
  br label %24, !dbg !4096

; <label>:24                                      ; preds = %18, %15
  %25 = load i32, i32* @mesg_id.index, align 4, !dbg !4097
  %26 = add nsw i32 %25, 1, !dbg !4097
  store i32 %26, i32* @mesg_id.index, align 4, !dbg !4097
  %27 = sext i32 %25 to i64, !dbg !4098
  %28 = getelementptr inbounds [32768 x i16], [32768 x i16]* @permutation, i64 0, i64 %27, !dbg !4098
  %29 = load i16, i16* %28, align 2, !dbg !4098
  ret i16 %29, !dbg !4099
}

; Function Attrs: nounwind
declare void @srandom(i32) #5

; Function Attrs: nounwind uwtable
define i32 @mesg_make_query(i8* %qname, i16 zeroext %qtype, i16 zeroext %qclass, i32 %id, i32 %rd, i8* %buf, i32 %buflen) #0 !dbg !476 {
  %1 = alloca i32, align 4
  %2 = alloca i8*, align 8
  %3 = alloca i16, align 2
  %4 = alloca i16, align 2
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 8
  %8 = alloca i32, align 4
  %fn = alloca i8*, align 8
  %ucp = alloca i8*, align 8
  %i = alloca i32, align 4
  %written_len = alloca i32, align 4
  %hdr = alloca %struct.mesg_hdr*, align 8
  store i8* %qname, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !4100, metadata !2279), !dbg !4101
  store i16 %qtype, i16* %3, align 2
  call void @llvm.dbg.declare(metadata i16* %3, metadata !4102, metadata !2279), !dbg !4103
  store i16 %qclass, i16* %4, align 2
  call void @llvm.dbg.declare(metadata i16* %4, metadata !4104, metadata !2279), !dbg !4105
  store i32 %id, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !4106, metadata !2279), !dbg !4107
  store i32 %rd, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !4108, metadata !2279), !dbg !4109
  store i8* %buf, i8** %7, align 8
  call void @llvm.dbg.declare(metadata i8** %7, metadata !4110, metadata !2279), !dbg !4111
  store i32 %buflen, i32* %8, align 4
  call void @llvm.dbg.declare(metadata i32* %8, metadata !4112, metadata !2279), !dbg !4113
  call void @llvm.dbg.declare(metadata i8** %fn, metadata !4114, metadata !2279), !dbg !4115
  store i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1.68, i32 0, i32 0), i8** %fn, align 8, !dbg !4115
  call void @llvm.dbg.declare(metadata i8** %ucp, metadata !4116, metadata !2279), !dbg !4117
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4118, metadata !2279), !dbg !4119
  call void @llvm.dbg.declare(metadata i32* %written_len, metadata !4120, metadata !2279), !dbg !4121
  call void @llvm.dbg.declare(metadata %struct.mesg_hdr** %hdr, metadata !4122, metadata !2279), !dbg !4123
  %9 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 8), align 4, !dbg !4124
  %10 = icmp sgt i32 %9, 4, !dbg !4126
  br i1 %10, label %11, label %16, !dbg !4127

; <label>:11                                      ; preds = %0
  %12 = load i8*, i8** %fn, align 8, !dbg !4128
  %13 = load i16, i16* %3, align 2, !dbg !4130
  %14 = call i8* @string_rtype(i16 zeroext %13), !dbg !4131
  %15 = load i32, i32* %5, align 4, !dbg !4132
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.2.92, i32 0, i32 0), i8* %12, i8* %14, i32 %15), !dbg !4133
  br label %16, !dbg !4134

; <label>:16                                      ; preds = %11, %0
  %17 = load i8*, i8** %7, align 8, !dbg !4135
  %18 = bitcast i8* %17 to %struct.mesg_hdr*, !dbg !4136
  store %struct.mesg_hdr* %18, %struct.mesg_hdr** %hdr, align 8, !dbg !4137
  %19 = load i32, i32* %5, align 4, !dbg !4138
  %20 = trunc i32 %19 to i16, !dbg !4138
  %21 = load %struct.mesg_hdr*, %struct.mesg_hdr** %hdr, align 8, !dbg !4139
  %22 = getelementptr inbounds %struct.mesg_hdr, %struct.mesg_hdr* %21, i32 0, i32 0, !dbg !4140
  store i16 %20, i16* %22, align 2, !dbg !4141
  %23 = load %struct.mesg_hdr*, %struct.mesg_hdr** %hdr, align 8, !dbg !4142
  %24 = getelementptr inbounds %struct.mesg_hdr, %struct.mesg_hdr* %23, i32 0, i32 1, !dbg !4143
  %25 = load i16, i16* %24, align 2, !dbg !4144
  %26 = and i16 %25, -121, !dbg !4144
  store i16 %26, i16* %24, align 2, !dbg !4144
  %27 = load %struct.mesg_hdr*, %struct.mesg_hdr** %hdr, align 8, !dbg !4145
  %28 = getelementptr inbounds %struct.mesg_hdr, %struct.mesg_hdr* %27, i32 0, i32 1, !dbg !4146
  %29 = load i16, i16* %28, align 2, !dbg !4147
  %30 = and i16 %29, -3841, !dbg !4147
  store i16 %30, i16* %28, align 2, !dbg !4147
  %31 = load i32, i32* %6, align 4, !dbg !4148
  %32 = trunc i32 %31 to i8, !dbg !4148
  %33 = load %struct.mesg_hdr*, %struct.mesg_hdr** %hdr, align 8, !dbg !4149
  %34 = getelementptr inbounds %struct.mesg_hdr, %struct.mesg_hdr* %33, i32 0, i32 1, !dbg !4150
  %35 = zext i8 %32 to i16, !dbg !4151
  %36 = load i16, i16* %34, align 2, !dbg !4151
  %37 = and i16 %35, 1, !dbg !4151
  %38 = and i16 %36, -2, !dbg !4151
  %39 = or i16 %38, %37, !dbg !4151
  store i16 %39, i16* %34, align 2, !dbg !4151
  %40 = trunc i16 %37 to i8, !dbg !4151
  %41 = load %struct.mesg_hdr*, %struct.mesg_hdr** %hdr, align 8, !dbg !4152
  %42 = getelementptr inbounds %struct.mesg_hdr, %struct.mesg_hdr* %41, i32 0, i32 1, !dbg !4153
  %43 = load i16, i16* %42, align 2, !dbg !4154
  %44 = and i16 %43, -28673, !dbg !4154
  store i16 %44, i16* %42, align 2, !dbg !4154
  %45 = load %struct.mesg_hdr*, %struct.mesg_hdr** %hdr, align 8, !dbg !4155
  %46 = getelementptr inbounds %struct.mesg_hdr, %struct.mesg_hdr* %45, i32 0, i32 1, !dbg !4156
  %47 = load i16, i16* %46, align 2, !dbg !4157
  %48 = and i16 %47, 32767, !dbg !4157
  store i16 %48, i16* %46, align 2, !dbg !4157
  %49 = load %struct.mesg_hdr*, %struct.mesg_hdr** %hdr, align 8, !dbg !4158
  %50 = getelementptr inbounds %struct.mesg_hdr, %struct.mesg_hdr* %49, i32 0, i32 1, !dbg !4159
  %51 = load i16, i16* %50, align 2, !dbg !4160
  %52 = and i16 %51, -3, !dbg !4160
  store i16 %52, i16* %50, align 2, !dbg !4160
  %53 = load %struct.mesg_hdr*, %struct.mesg_hdr** %hdr, align 8, !dbg !4161
  %54 = getelementptr inbounds %struct.mesg_hdr, %struct.mesg_hdr* %53, i32 0, i32 1, !dbg !4162
  %55 = load i16, i16* %54, align 2, !dbg !4163
  %56 = and i16 %55, -5, !dbg !4163
  store i16 %56, i16* %54, align 2, !dbg !4163
  %57 = load %struct.mesg_hdr*, %struct.mesg_hdr** %hdr, align 8, !dbg !4164
  %58 = getelementptr inbounds %struct.mesg_hdr, %struct.mesg_hdr* %57, i32 0, i32 1, !dbg !4165
  %59 = load i16, i16* %58, align 2, !dbg !4166
  %60 = and i16 %59, -129, !dbg !4166
  store i16 %60, i16* %58, align 2, !dbg !4166
  %61 = call zeroext i16 @ntohs(i16 zeroext 1) #1, !dbg !4167
  %62 = load %struct.mesg_hdr*, %struct.mesg_hdr** %hdr, align 8, !dbg !4168
  %63 = getelementptr inbounds %struct.mesg_hdr, %struct.mesg_hdr* %62, i32 0, i32 2, !dbg !4169
  store i16 %61, i16* %63, align 2, !dbg !4170
  %64 = call zeroext i16 @ntohs(i16 zeroext 0) #1, !dbg !4171
  %65 = load %struct.mesg_hdr*, %struct.mesg_hdr** %hdr, align 8, !dbg !4172
  %66 = getelementptr inbounds %struct.mesg_hdr, %struct.mesg_hdr* %65, i32 0, i32 5, !dbg !4173
  store i16 %64, i16* %66, align 2, !dbg !4174
  %67 = load %struct.mesg_hdr*, %struct.mesg_hdr** %hdr, align 8, !dbg !4175
  %68 = getelementptr inbounds %struct.mesg_hdr, %struct.mesg_hdr* %67, i32 0, i32 4, !dbg !4176
  store i16 %64, i16* %68, align 2, !dbg !4177
  %69 = load %struct.mesg_hdr*, %struct.mesg_hdr** %hdr, align 8, !dbg !4178
  %70 = getelementptr inbounds %struct.mesg_hdr, %struct.mesg_hdr* %69, i32 0, i32 3, !dbg !4179
  store i16 %64, i16* %70, align 2, !dbg !4180
  store i32 12, i32* %written_len, align 4, !dbg !4181
  %71 = load %struct.mesg_hdr*, %struct.mesg_hdr** %hdr, align 8, !dbg !4182
  %72 = getelementptr inbounds %struct.mesg_hdr, %struct.mesg_hdr* %71, i64 1, !dbg !4183
  %73 = bitcast %struct.mesg_hdr* %72 to i8*, !dbg !4184
  store i8* %73, i8** %ucp, align 8, !dbg !4185
  %74 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 8), align 4, !dbg !4186
  %75 = icmp sgt i32 %74, 4, !dbg !4188
  br i1 %75, label %76, label %83, !dbg !4189

; <label>:76                                      ; preds = %16
  %77 = load i8*, i8** %fn, align 8, !dbg !4190
  %78 = load i8*, i8** %ucp, align 8, !dbg !4191
  %79 = load i8*, i8** %7, align 8, !dbg !4192
  %80 = ptrtoint i8* %78 to i64, !dbg !4193
  %81 = ptrtoint i8* %79 to i64, !dbg !4193
  %82 = sub i64 %80, %81, !dbg !4193
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3.93, i32 0, i32 0), i8* %77, i64 %82), !dbg !4194
  br label %83, !dbg !4194

; <label>:83                                      ; preds = %76, %16
  %84 = load i8*, i8** %2, align 8, !dbg !4195
  %85 = load i8*, i8** %ucp, align 8, !dbg !4196
  %86 = load i32, i32* %8, align 4, !dbg !4197
  %87 = load i32, i32* %written_len, align 4, !dbg !4198
  %88 = sub nsw i32 %86, %87, !dbg !4199
  %89 = call i32 @dname_copy(i8* %84, i8* %85, i32 %88), !dbg !4200
  store i32 %89, i32* %i, align 4, !dbg !4201
  %90 = load i32, i32* %i, align 4, !dbg !4202
  %91 = icmp slt i32 %90, 0, !dbg !4204
  br i1 %91, label %92, label %93, !dbg !4205

; <label>:92                                      ; preds = %83
  store i32 -1, i32* %1, align 4, !dbg !4206
  br label %141, !dbg !4206

; <label>:93                                      ; preds = %83
  %94 = load i32, i32* %i, align 4, !dbg !4207
  %95 = load i32, i32* %written_len, align 4, !dbg !4208
  %96 = add nsw i32 %95, %94, !dbg !4208
  store i32 %96, i32* %written_len, align 4, !dbg !4208
  %97 = load i32, i32* %i, align 4, !dbg !4209
  %98 = load i8*, i8** %ucp, align 8, !dbg !4210
  %99 = sext i32 %97 to i64, !dbg !4210
  %100 = getelementptr inbounds i8, i8* %98, i64 %99, !dbg !4210
  store i8* %100, i8** %ucp, align 8, !dbg !4210
  %101 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 8), align 4, !dbg !4211
  %102 = icmp sgt i32 %101, 4, !dbg !4213
  br i1 %102, label %103, label %110, !dbg !4214

; <label>:103                                     ; preds = %93
  %104 = load i8*, i8** %fn, align 8, !dbg !4215
  %105 = load i8*, i8** %ucp, align 8, !dbg !4216
  %106 = load i8*, i8** %7, align 8, !dbg !4217
  %107 = ptrtoint i8* %105 to i64, !dbg !4218
  %108 = ptrtoint i8* %106 to i64, !dbg !4218
  %109 = sub i64 %107, %108, !dbg !4218
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.4.94, i32 0, i32 0), i8* %104, i64 %109), !dbg !4219
  br label %110, !dbg !4219

; <label>:110                                     ; preds = %103, %93
  %111 = load i32, i32* %written_len, align 4, !dbg !4220
  %112 = sext i32 %111 to i64, !dbg !4220
  %113 = add i64 %112, 4, !dbg !4220
  %114 = trunc i64 %113 to i32, !dbg !4220
  store i32 %114, i32* %written_len, align 4, !dbg !4220
  %115 = load i32, i32* %written_len, align 4, !dbg !4221
  %116 = load i32, i32* %8, align 4, !dbg !4223
  %117 = icmp sgt i32 %115, %116, !dbg !4224
  br i1 %117, label %118, label %119, !dbg !4225

; <label>:118                                     ; preds = %110
  store i32 -1, i32* %1, align 4, !dbg !4226
  br label %141, !dbg !4226

; <label>:119                                     ; preds = %110
  %120 = load i16, i16* %3, align 2, !dbg !4227
  %121 = zext i16 %120 to i32, !dbg !4227
  %122 = ashr i32 %121, 8, !dbg !4227
  %123 = trunc i32 %122 to i8, !dbg !4227
  %124 = load i8*, i8** %ucp, align 8, !dbg !4227
  %125 = getelementptr inbounds i8, i8* %124, i32 1, !dbg !4227
  store i8* %125, i8** %ucp, align 8, !dbg !4227
  store i8 %123, i8* %124, align 1, !dbg !4227
  %126 = load i16, i16* %3, align 2, !dbg !4227
  %127 = trunc i16 %126 to i8, !dbg !4227
  %128 = load i8*, i8** %ucp, align 8, !dbg !4227
  %129 = getelementptr inbounds i8, i8* %128, i32 1, !dbg !4227
  store i8* %129, i8** %ucp, align 8, !dbg !4227
  store i8 %127, i8* %128, align 1, !dbg !4227
  %130 = load i16, i16* %4, align 2, !dbg !4229
  %131 = zext i16 %130 to i32, !dbg !4229
  %132 = ashr i32 %131, 8, !dbg !4229
  %133 = trunc i32 %132 to i8, !dbg !4229
  %134 = load i8*, i8** %ucp, align 8, !dbg !4229
  %135 = getelementptr inbounds i8, i8* %134, i32 1, !dbg !4229
  store i8* %135, i8** %ucp, align 8, !dbg !4229
  store i8 %133, i8* %134, align 1, !dbg !4229
  %136 = load i16, i16* %4, align 2, !dbg !4229
  %137 = trunc i16 %136 to i8, !dbg !4229
  %138 = load i8*, i8** %ucp, align 8, !dbg !4229
  %139 = getelementptr inbounds i8, i8* %138, i32 1, !dbg !4229
  store i8* %139, i8** %ucp, align 8, !dbg !4229
  store i8 %137, i8* %138, align 1, !dbg !4229
  %140 = load i32, i32* %written_len, align 4, !dbg !4231
  store i32 %140, i32* %1, align 4, !dbg !4232
  br label %141, !dbg !4232

; <label>:141                                     ; preds = %119, %118, %92
  %142 = load i32, i32* %1, align 4, !dbg !4233
  ret i32 %142, !dbg !4233
}

; Function Attrs: nounwind uwtable
define i8* @string_rtype(i16 zeroext %rtype) #0 !dbg !518 {
  %1 = alloca i8*, align 8
  %2 = alloca i16, align 2
  store i16 %rtype, i16* %2, align 2
  call void @llvm.dbg.declare(metadata i16* %2, metadata !4234, metadata !2279), !dbg !4235
  %3 = load i16, i16* %2, align 2, !dbg !4236
  %4 = zext i16 %3 to i32, !dbg !4236
  switch i32 %4, label %31 [
    i32 0, label %5
    i32 1, label %6
    i32 2, label %7
    i32 3, label %8
    i32 4, label %9
    i32 5, label %10
    i32 6, label %11
    i32 7, label %12
    i32 8, label %13
    i32 9, label %14
    i32 10, label %15
    i32 11, label %16
    i32 12, label %17
    i32 13, label %18
    i32 14, label %19
    i32 15, label %20
    i32 16, label %21
    i32 17, label %22
    i32 28, label %23
    i32 33, label %24
    i32 38, label %25
    i32 100, label %26
    i32 250, label %27
    i32 251, label %28
    i32 252, label %29
    i32 255, label %30
  ], !dbg !4237

; <label>:5                                       ; preds = %0
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.31.71, i32 0, i32 0), i8** %1, align 8, !dbg !4238
  br label %34, !dbg !4238

; <label>:6                                       ; preds = %0
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.32.72, i32 0, i32 0), i8** %1, align 8, !dbg !4240
  br label %34, !dbg !4240

; <label>:7                                       ; preds = %0
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.33.73, i32 0, i32 0), i8** %1, align 8, !dbg !4241
  br label %34, !dbg !4241

; <label>:8                                       ; preds = %0
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.34.74, i32 0, i32 0), i8** %1, align 8, !dbg !4242
  br label %34, !dbg !4242

; <label>:9                                       ; preds = %0
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.35.75, i32 0, i32 0), i8** %1, align 8, !dbg !4243
  br label %34, !dbg !4243

; <label>:10                                      ; preds = %0
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.36.76, i32 0, i32 0), i8** %1, align 8, !dbg !4244
  br label %34, !dbg !4244

; <label>:11                                      ; preds = %0
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.37.77, i32 0, i32 0), i8** %1, align 8, !dbg !4245
  br label %34, !dbg !4245

; <label>:12                                      ; preds = %0
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.38.78, i32 0, i32 0), i8** %1, align 8, !dbg !4246
  br label %34, !dbg !4246

; <label>:13                                      ; preds = %0
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.39.79, i32 0, i32 0), i8** %1, align 8, !dbg !4247
  br label %34, !dbg !4247

; <label>:14                                      ; preds = %0
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.40.80, i32 0, i32 0), i8** %1, align 8, !dbg !4248
  br label %34, !dbg !4248

; <label>:15                                      ; preds = %0
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.41.81, i32 0, i32 0), i8** %1, align 8, !dbg !4249
  br label %34, !dbg !4249

; <label>:16                                      ; preds = %0
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.42.82, i32 0, i32 0), i8** %1, align 8, !dbg !4250
  br label %34, !dbg !4250

; <label>:17                                      ; preds = %0
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.43.83, i32 0, i32 0), i8** %1, align 8, !dbg !4251
  br label %34, !dbg !4251

; <label>:18                                      ; preds = %0
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.44.84, i32 0, i32 0), i8** %1, align 8, !dbg !4252
  br label %34, !dbg !4252

; <label>:19                                      ; preds = %0
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.45.85, i32 0, i32 0), i8** %1, align 8, !dbg !4253
  br label %34, !dbg !4253

; <label>:20                                      ; preds = %0
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.46.86, i32 0, i32 0), i8** %1, align 8, !dbg !4254
  br label %34, !dbg !4254

; <label>:21                                      ; preds = %0
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.47.87, i32 0, i32 0), i8** %1, align 8, !dbg !4255
  br label %34, !dbg !4255

; <label>:22                                      ; preds = %0
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.48.88, i32 0, i32 0), i8** %1, align 8, !dbg !4256
  br label %34, !dbg !4256

; <label>:23                                      ; preds = %0
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.49, i32 0, i32 0), i8** %1, align 8, !dbg !4257
  br label %34, !dbg !4257

; <label>:24                                      ; preds = %0
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.50, i32 0, i32 0), i8** %1, align 8, !dbg !4258
  br label %34, !dbg !4258

; <label>:25                                      ; preds = %0
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.51, i32 0, i32 0), i8** %1, align 8, !dbg !4259
  br label %34, !dbg !4259

; <label>:26                                      ; preds = %0
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.52.89, i32 0, i32 0), i8** %1, align 8, !dbg !4260
  br label %34, !dbg !4260

; <label>:27                                      ; preds = %0
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.53, i32 0, i32 0), i8** %1, align 8, !dbg !4261
  br label %34, !dbg !4261

; <label>:28                                      ; preds = %0
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.54, i32 0, i32 0), i8** %1, align 8, !dbg !4262
  br label %34, !dbg !4262

; <label>:29                                      ; preds = %0
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.55, i32 0, i32 0), i8** %1, align 8, !dbg !4263
  br label %34, !dbg !4263

; <label>:30                                      ; preds = %0
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.28.90, i32 0, i32 0), i8** %1, align 8, !dbg !4264
  br label %34, !dbg !4264

; <label>:31                                      ; preds = %0
  %32 = load i16, i16* %2, align 2, !dbg !4265
  %33 = zext i16 %32 to i32, !dbg !4265
  call void (i32, i8*, ...) @syslog(i32 5, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.56, i32 0, i32 0), i32 %33), !dbg !4266
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.30.91, i32 0, i32 0), i8** %1, align 8, !dbg !4267
  br label %34, !dbg !4267

; <label>:34                                      ; preds = %31, %30, %29, %28, %27, %26, %25, %24, %23, %22, %21, %20, %19, %18, %17, %16, %15, %14, %13, %12, %11, %10, %9, %8, %7, %6, %5
  %35 = load i8*, i8** %1, align 8, !dbg !4268
  ret i8* %35, !dbg !4268
}

; Function Attrs: nounwind readnone
declare zeroext i16 @ntohs(i16 zeroext) #6

; Function Attrs: nounwind uwtable
define internal i32 @dname_copy(i8* %from, i8* %to, i32 %tolen) #0 !dbg !519 {
  %1 = alloca i32, align 4
  %2 = alloca i8*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %skip = alloca i32, align 4
  %llen = alloca i32, align 4
  %written_len = alloca i32, align 4
  store i8* %from, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !4269, metadata !2279), !dbg !4270
  store i8* %to, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !4271, metadata !2279), !dbg !4272
  store i32 %tolen, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !4273, metadata !2279), !dbg !4274
  call void @llvm.dbg.declare(metadata i32* %skip, metadata !4275, metadata !2279), !dbg !4276
  call void @llvm.dbg.declare(metadata i32* %llen, metadata !4277, metadata !2279), !dbg !4278
  call void @llvm.dbg.declare(metadata i32* %written_len, metadata !4279, metadata !2279), !dbg !4280
  store i32 0, i32* %written_len, align 4, !dbg !4281
  br label %5, !dbg !4282

; <label>:5                                       ; preds = %25, %0
  %6 = load i8*, i8** %2, align 8, !dbg !4283
  %7 = load i8, i8* %6, align 1, !dbg !4285
  %8 = icmp ne i8 %7, 0, !dbg !4286
  br i1 %8, label %9, label %38, !dbg !4286

; <label>:9                                       ; preds = %5
  %10 = load i8*, i8** %2, align 8, !dbg !4287
  %11 = call i32 @labellen(i8* %10), !dbg !4289
  store i32 %11, i32* %llen, align 4, !dbg !4290
  %12 = load i32, i32* %llen, align 4, !dbg !4291
  %13 = icmp eq i32 %12, -1, !dbg !4293
  br i1 %13, label %14, label %15, !dbg !4294

; <label>:14                                      ; preds = %9
  store i32 -1, i32* %1, align 4, !dbg !4295
  br label %43, !dbg !4295

; <label>:15                                      ; preds = %9
  %16 = load i32, i32* %llen, align 4, !dbg !4296
  %17 = add nsw i32 %16, 1, !dbg !4297
  store i32 %17, i32* %skip, align 4, !dbg !4298
  %18 = load i32, i32* %skip, align 4, !dbg !4299
  %19 = load i32, i32* %written_len, align 4, !dbg !4300
  %20 = add nsw i32 %19, %18, !dbg !4300
  store i32 %20, i32* %written_len, align 4, !dbg !4300
  %21 = load i32, i32* %written_len, align 4, !dbg !4301
  %22 = load i32, i32* %4, align 4, !dbg !4303
  %23 = icmp sge i32 %21, %22, !dbg !4304
  br i1 %23, label %24, label %25, !dbg !4305

; <label>:24                                      ; preds = %15
  store i32 -1, i32* %1, align 4, !dbg !4306
  br label %43, !dbg !4306

; <label>:25                                      ; preds = %15
  %26 = load i8*, i8** %3, align 8, !dbg !4307
  %27 = load i8*, i8** %2, align 8, !dbg !4308
  %28 = load i32, i32* %skip, align 4, !dbg !4309
  %29 = sext i32 %28 to i64, !dbg !4309
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %26, i8* %27, i64 %29, i32 1, i1 false), !dbg !4310
  %30 = load i32, i32* %skip, align 4, !dbg !4311
  %31 = load i8*, i8** %2, align 8, !dbg !4312
  %32 = sext i32 %30 to i64, !dbg !4312
  %33 = getelementptr inbounds i8, i8* %31, i64 %32, !dbg !4312
  store i8* %33, i8** %2, align 8, !dbg !4312
  %34 = load i32, i32* %skip, align 4, !dbg !4313
  %35 = load i8*, i8** %3, align 8, !dbg !4314
  %36 = sext i32 %34 to i64, !dbg !4314
  %37 = getelementptr inbounds i8, i8* %35, i64 %36, !dbg !4314
  store i8* %37, i8** %3, align 8, !dbg !4314
  br label %5, !dbg !4315

; <label>:38                                      ; preds = %5
  %39 = load i8*, i8** %3, align 8, !dbg !4317
  store i8 0, i8* %39, align 1, !dbg !4318
  %40 = load i32, i32* %written_len, align 4, !dbg !4319
  %41 = add nsw i32 %40, 1, !dbg !4319
  store i32 %41, i32* %written_len, align 4, !dbg !4319
  %42 = load i32, i32* %written_len, align 4, !dbg !4320
  store i32 %42, i32* %1, align 4, !dbg !4321
  br label %43, !dbg !4321

; <label>:43                                      ; preds = %38, %24, %14
  %44 = load i32, i32* %1, align 4, !dbg !4322
  ret i32 %44, !dbg !4322
}

; Function Attrs: nounwind uwtable
define i32 @labellen(i8* %cp) #0 !dbg !479 {
  %1 = alloca i32, align 4
  %2 = alloca i8*, align 8
  %i = alloca i32, align 4
  %bitlen = alloca i32, align 4
  store i8* %cp, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !4323, metadata !2279), !dbg !4324
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4325, metadata !2279), !dbg !4327
  %3 = load i8*, i8** %2, align 8, !dbg !4328
  %4 = load i8, i8* %3, align 1, !dbg !4329
  %5 = zext i8 %4 to i32, !dbg !4329
  store i32 %5, i32* %i, align 4, !dbg !4330
  %6 = load i32, i32* %i, align 4, !dbg !4331
  %7 = and i32 %6, 192, !dbg !4333
  %8 = icmp eq i32 %7, 0, !dbg !4334
  br i1 %8, label %9, label %11, !dbg !4335

; <label>:9                                       ; preds = %0
  %10 = load i32, i32* %i, align 4, !dbg !4336
  store i32 %10, i32* %1, align 4, !dbg !4337
  br label %33, !dbg !4337

; <label>:11                                      ; preds = %0
  %12 = load i32, i32* %i, align 4, !dbg !4338
  %13 = and i32 %12, 192, !dbg !4340
  %14 = icmp eq i32 %13, 64, !dbg !4341
  br i1 %14, label %15, label %32, !dbg !4342

; <label>:15                                      ; preds = %11
  call void @llvm.dbg.declare(metadata i32* %bitlen, metadata !4343, metadata !2279), !dbg !4345
  %16 = load i32, i32* %i, align 4, !dbg !4346
  %17 = icmp ne i32 %16, 65, !dbg !4348
  br i1 %17, label %18, label %19, !dbg !4349

; <label>:18                                      ; preds = %15
  store i32 -1, i32* %1, align 4, !dbg !4350
  br label %33, !dbg !4350

; <label>:19                                      ; preds = %15
  %20 = load i8*, i8** %2, align 8, !dbg !4351
  %21 = getelementptr inbounds i8, i8* %20, i64 1, !dbg !4352
  %22 = load i8, i8* %21, align 1, !dbg !4353
  %23 = zext i8 %22 to i32, !dbg !4353
  store i32 %23, i32* %bitlen, align 4, !dbg !4354
  %24 = load i32, i32* %bitlen, align 4, !dbg !4355
  %25 = icmp eq i32 %24, 0, !dbg !4357
  br i1 %25, label %26, label %27, !dbg !4358

; <label>:26                                      ; preds = %19
  store i32 256, i32* %bitlen, align 4, !dbg !4359
  br label %27, !dbg !4360

; <label>:27                                      ; preds = %26, %19
  %28 = load i32, i32* %bitlen, align 4, !dbg !4361
  %29 = add i32 %28, 7, !dbg !4362
  %30 = udiv i32 %29, 8, !dbg !4363
  %31 = add i32 %30, 1, !dbg !4364
  store i32 %31, i32* %1, align 4, !dbg !4365
  br label %33, !dbg !4365

; <label>:32                                      ; preds = %11
  store i32 -1, i32* %1, align 4, !dbg !4366
  br label %33, !dbg !4366

; <label>:33                                      ; preds = %32, %27, %18, %9
  %34 = load i32, i32* %1, align 4, !dbg !4367
  ret i32 %34, !dbg !4367
}

; Function Attrs: nounwind uwtable
define i8* @mesg_skip_dname(i8* %dname, i8* %end) #0 !dbg !484 {
  %1 = alloca i8*, align 8
  %2 = alloca i8*, align 8
  %3 = alloca i8*, align 8
  %l = alloca i32, align 4
  store i8* %dname, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !4368, metadata !2279), !dbg !4369
  store i8* %end, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !4370, metadata !2279), !dbg !4371
  call void @llvm.dbg.declare(metadata i32* %l, metadata !4372, metadata !2279), !dbg !4373
  %4 = load i8*, i8** %2, align 8, !dbg !4374
  %5 = load i8*, i8** %3, align 8, !dbg !4376
  %6 = icmp uge i8* %4, %5, !dbg !4377
  br i1 %6, label %7, label %8, !dbg !4378

; <label>:7                                       ; preds = %0
  store i8* null, i8** %1, align 8, !dbg !4379
  br label %50, !dbg !4379

; <label>:8                                       ; preds = %0
  br label %9, !dbg !4380

; <label>:9                                       ; preds = %45, %8
  %10 = load i8*, i8** %2, align 8, !dbg !4381
  %11 = load i8, i8* %10, align 1, !dbg !4383
  %12 = icmp ne i8 %11, 0, !dbg !4384
  br i1 %12, label %13, label %46, !dbg !4384

; <label>:13                                      ; preds = %9
  %14 = load i8*, i8** %2, align 8, !dbg !4385
  %15 = load i8, i8* %14, align 1, !dbg !4388
  %16 = zext i8 %15 to i32, !dbg !4388
  %17 = and i32 %16, 192, !dbg !4389
  %18 = icmp eq i32 %17, 192, !dbg !4390
  br i1 %18, label %19, label %23, !dbg !4391

; <label>:19                                      ; preds = %13
  %20 = load i8*, i8** %2, align 8, !dbg !4392
  %21 = getelementptr inbounds i8, i8* %20, i64 2, !dbg !4392
  store i8* %21, i8** %2, align 8, !dbg !4392
  %22 = load i8*, i8** %2, align 8, !dbg !4394
  store i8* %22, i8** %1, align 8, !dbg !4395
  br label %50, !dbg !4395

; <label>:23                                      ; preds = %13
  %24 = load i8*, i8** %2, align 8, !dbg !4396
  %25 = getelementptr inbounds i8, i8* %24, i64 2, !dbg !4398
  %26 = load i8*, i8** %3, align 8, !dbg !4399
  %27 = icmp ugt i8* %25, %26, !dbg !4400
  br i1 %27, label %28, label %29, !dbg !4401

; <label>:28                                      ; preds = %23
  store i8* null, i8** %1, align 8, !dbg !4402
  br label %50, !dbg !4402

; <label>:29                                      ; preds = %23
  %30 = load i8*, i8** %2, align 8, !dbg !4403
  %31 = call i32 @labellen(i8* %30), !dbg !4404
  store i32 %31, i32* %l, align 4, !dbg !4405
  %32 = load i32, i32* %l, align 4, !dbg !4406
  %33 = icmp slt i32 %32, 0, !dbg !4408
  br i1 %33, label %34, label %35, !dbg !4409

; <label>:34                                      ; preds = %29
  store i8* null, i8** %1, align 8, !dbg !4410
  br label %50, !dbg !4410

; <label>:35                                      ; preds = %29
  %36 = load i32, i32* %l, align 4, !dbg !4411
  %37 = add nsw i32 %36, 1, !dbg !4412
  %38 = load i8*, i8** %2, align 8, !dbg !4413
  %39 = sext i32 %37 to i64, !dbg !4413
  %40 = getelementptr inbounds i8, i8* %38, i64 %39, !dbg !4413
  store i8* %40, i8** %2, align 8, !dbg !4413
  %41 = load i8*, i8** %2, align 8, !dbg !4414
  %42 = load i8*, i8** %3, align 8, !dbg !4416
  %43 = icmp uge i8* %41, %42, !dbg !4417
  br i1 %43, label %44, label %45, !dbg !4418

; <label>:44                                      ; preds = %35
  store i8* null, i8** %1, align 8, !dbg !4419
  br label %50, !dbg !4419

; <label>:45                                      ; preds = %35
  br label %9, !dbg !4420

; <label>:46                                      ; preds = %9
  %47 = load i8*, i8** %2, align 8, !dbg !4422
  %48 = getelementptr inbounds i8, i8* %47, i32 1, !dbg !4422
  store i8* %48, i8** %2, align 8, !dbg !4422
  %49 = load i8*, i8** %2, align 8, !dbg !4423
  store i8* %49, i8** %1, align 8, !dbg !4424
  br label %50, !dbg !4424

; <label>:50                                      ; preds = %46, %44, %34, %28, %19, %7
  %51 = load i8*, i8** %1, align 8, !dbg !4425
  ret i8* %51, !dbg !4425
}

; Function Attrs: nounwind uwtable
define i32 @mesg_dname_cmp(i8* %msg, i8* %dname_mesg, i8* %dname) #0 !dbg !487 {
  %1 = alloca i32, align 4
  %2 = alloca i8*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %len = alloca i32, align 4
  store i8* %msg, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !4426, metadata !2279), !dbg !4427
  store i8* %dname_mesg, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !4428, metadata !2279), !dbg !4429
  store i8* %dname, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !4430, metadata !2279), !dbg !4431
  %5 = load i8*, i8** %3, align 8, !dbg !4432
  %6 = load i8*, i8** %2, align 8, !dbg !4433
  %7 = call i8* @dname_redirect(i8* %5, i8* %6), !dbg !4434
  store i8* %7, i8** %3, align 8, !dbg !4435
  br label %8, !dbg !4436

; <label>:8                                       ; preds = %58, %0
  %9 = load i8*, i8** %3, align 8, !dbg !4437
  %10 = load i8, i8* %9, align 1, !dbg !4439
  %11 = zext i8 %10 to i32, !dbg !4439
  %12 = icmp ne i32 %11, 0, !dbg !4440
  br i1 %12, label %13, label %21, !dbg !4441

; <label>:13                                      ; preds = %8
  %14 = load i8*, i8** %4, align 8, !dbg !4442
  %15 = load i8, i8* %14, align 1, !dbg !4444
  %16 = zext i8 %15 to i32, !dbg !4444
  %17 = load i8*, i8** %3, align 8, !dbg !4445
  %18 = load i8, i8* %17, align 1, !dbg !4446
  %19 = zext i8 %18 to i32, !dbg !4446
  %20 = icmp eq i32 %16, %19, !dbg !4447
  br label %21

; <label>:21                                      ; preds = %13, %8
  %22 = phi i1 [ false, %8 ], [ %20, %13 ]
  br i1 %22, label %23, label %72, !dbg !4448

; <label>:23                                      ; preds = %21
  call void @llvm.dbg.declare(metadata i32* %len, metadata !4450, metadata !2279), !dbg !4452
  %24 = load i8*, i8** %3, align 8, !dbg !4453
  %25 = call i32 @labellen(i8* %24), !dbg !4454
  store i32 %25, i32* %len, align 4, !dbg !4455
  %26 = load i32, i32* %len, align 4, !dbg !4456
  %27 = load i8*, i8** %4, align 8, !dbg !4458
  %28 = call i32 @labellen(i8* %27), !dbg !4459
  %29 = icmp ne i32 %26, %28, !dbg !4460
  br i1 %29, label %30, label %31, !dbg !4461

; <label>:30                                      ; preds = %23
  store i32 -1, i32* %1, align 4, !dbg !4462
  br label %82, !dbg !4462

; <label>:31                                      ; preds = %23
  %32 = load i8*, i8** %4, align 8, !dbg !4463
  %33 = load i8, i8* %32, align 1, !dbg !4465
  %34 = zext i8 %33 to i32, !dbg !4465
  %35 = icmp eq i32 %34, 65, !dbg !4466
  br i1 %35, label %36, label %47, !dbg !4467

; <label>:36                                      ; preds = %31
  %37 = load i8*, i8** %3, align 8, !dbg !4468
  %38 = getelementptr inbounds i8, i8* %37, i64 1, !dbg !4471
  %39 = load i8*, i8** %4, align 8, !dbg !4472
  %40 = getelementptr inbounds i8, i8* %39, i64 1, !dbg !4473
  %41 = load i32, i32* %len, align 4, !dbg !4474
  %42 = sext i32 %41 to i64, !dbg !4475
  %43 = call i32 @memcmp(i8* %38, i8* %40, i64 %42) #9, !dbg !4476
  %44 = icmp ne i32 %43, 0, !dbg !4476
  br i1 %44, label %45, label %46, !dbg !4477

; <label>:45                                      ; preds = %36
  store i32 -1, i32* %1, align 4, !dbg !4478
  br label %82, !dbg !4478

; <label>:46                                      ; preds = %36
  br label %58, !dbg !4479

; <label>:47                                      ; preds = %31
  %48 = load i8*, i8** %3, align 8, !dbg !4480
  %49 = getelementptr inbounds i8, i8* %48, i64 1, !dbg !4483
  %50 = load i8*, i8** %4, align 8, !dbg !4484
  %51 = getelementptr inbounds i8, i8* %50, i64 1, !dbg !4485
  %52 = load i32, i32* %len, align 4, !dbg !4486
  %53 = sext i32 %52 to i64, !dbg !4487
  %54 = call i32 @strncasecmp(i8* %49, i8* %51, i64 %53) #9, !dbg !4488
  %55 = icmp ne i32 %54, 0, !dbg !4488
  br i1 %55, label %56, label %57, !dbg !4488

; <label>:56                                      ; preds = %47
  store i32 -1, i32* %1, align 4, !dbg !4489
  br label %82, !dbg !4489

; <label>:57                                      ; preds = %47
  br label %58

; <label>:58                                      ; preds = %57, %46
  %59 = load i32, i32* %len, align 4, !dbg !4490
  %60 = add nsw i32 %59, 1, !dbg !4491
  %61 = load i8*, i8** %4, align 8, !dbg !4492
  %62 = sext i32 %60 to i64, !dbg !4492
  %63 = getelementptr inbounds i8, i8* %61, i64 %62, !dbg !4492
  store i8* %63, i8** %4, align 8, !dbg !4492
  %64 = load i32, i32* %len, align 4, !dbg !4493
  %65 = add nsw i32 %64, 1, !dbg !4494
  %66 = load i8*, i8** %3, align 8, !dbg !4495
  %67 = sext i32 %65 to i64, !dbg !4495
  %68 = getelementptr inbounds i8, i8* %66, i64 %67, !dbg !4495
  store i8* %68, i8** %3, align 8, !dbg !4495
  %69 = load i8*, i8** %3, align 8, !dbg !4496
  %70 = load i8*, i8** %2, align 8, !dbg !4497
  %71 = call i8* @dname_redirect(i8* %69, i8* %70), !dbg !4498
  store i8* %71, i8** %3, align 8, !dbg !4499
  br label %8, !dbg !4500

; <label>:72                                      ; preds = %21
  %73 = load i8*, i8** %4, align 8, !dbg !4502
  %74 = load i8, i8* %73, align 1, !dbg !4504
  %75 = zext i8 %74 to i32, !dbg !4504
  %76 = load i8*, i8** %3, align 8, !dbg !4505
  %77 = load i8, i8* %76, align 1, !dbg !4506
  %78 = zext i8 %77 to i32, !dbg !4506
  %79 = icmp ne i32 %75, %78, !dbg !4507
  br i1 %79, label %80, label %81, !dbg !4508

; <label>:80                                      ; preds = %72
  store i32 -1, i32* %1, align 4, !dbg !4509
  br label %82, !dbg !4509

; <label>:81                                      ; preds = %72
  store i32 0, i32* %1, align 4, !dbg !4510
  br label %82, !dbg !4510

; <label>:82                                      ; preds = %81, %80, %56, %45, %30
  %83 = load i32, i32* %1, align 4, !dbg !4511
  ret i32 %83, !dbg !4511
}

; Function Attrs: nounwind uwtable
define internal i8* @dname_redirect(i8* %label, i8* %msg) #0 !dbg !522 {
  %1 = alloca i8*, align 8
  %2 = alloca i8*, align 8
  %us = alloca i16, align 2
  store i8* %label, i8** %1, align 8
  call void @llvm.dbg.declare(metadata i8** %1, metadata !4512, metadata !2279), !dbg !4513
  store i8* %msg, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !4514, metadata !2279), !dbg !4515
  call void @llvm.dbg.declare(metadata i16* %us, metadata !4516, metadata !2279), !dbg !4517
  %3 = load i8*, i8** %2, align 8, !dbg !4518
  %4 = icmp ne i8* %3, null, !dbg !4518
  br i1 %4, label %5, label %35, !dbg !4520

; <label>:5                                       ; preds = %0
  %6 = load i8*, i8** %1, align 8, !dbg !4521
  %7 = load i8, i8* %6, align 1, !dbg !4523
  %8 = zext i8 %7 to i32, !dbg !4523
  %9 = and i32 %8, 192, !dbg !4524
  %10 = icmp eq i32 %9, 192, !dbg !4525
  br i1 %10, label %11, label %35, !dbg !4526

; <label>:11                                      ; preds = %5
  %12 = load i8*, i8** %1, align 8, !dbg !4527
  %13 = getelementptr inbounds i8, i8* %12, i32 1, !dbg !4527
  store i8* %13, i8** %1, align 8, !dbg !4527
  %14 = load i8, i8* %12, align 1, !dbg !4527
  %15 = zext i8 %14 to i32, !dbg !4527
  %16 = shl i32 %15, 8, !dbg !4527
  %17 = trunc i32 %16 to i16, !dbg !4527
  store i16 %17, i16* %us, align 2, !dbg !4527
  %18 = load i8*, i8** %1, align 8, !dbg !4527
  %19 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !4527
  store i8* %19, i8** %1, align 8, !dbg !4527
  %20 = load i8, i8* %18, align 1, !dbg !4527
  %21 = zext i8 %20 to i32, !dbg !4527
  %22 = load i16, i16* %us, align 2, !dbg !4527
  %23 = zext i16 %22 to i32, !dbg !4527
  %24 = or i32 %23, %21, !dbg !4527
  %25 = trunc i32 %24 to i16, !dbg !4527
  store i16 %25, i16* %us, align 2, !dbg !4527
  %26 = load i16, i16* %us, align 2, !dbg !4530
  %27 = zext i16 %26 to i32, !dbg !4530
  %28 = and i32 %27, -49153, !dbg !4531
  %29 = trunc i32 %28 to i16, !dbg !4530
  store i16 %29, i16* %us, align 2, !dbg !4532
  %30 = load i8*, i8** %2, align 8, !dbg !4533
  %31 = load i16, i16* %us, align 2, !dbg !4534
  %32 = zext i16 %31 to i32, !dbg !4534
  %33 = sext i32 %32 to i64, !dbg !4535
  %34 = getelementptr inbounds i8, i8* %30, i64 %33, !dbg !4535
  store i8* %34, i8** %1, align 8, !dbg !4536
  br label %35, !dbg !4537

; <label>:35                                      ; preds = %11, %5, %0
  %36 = load i8*, i8** %1, align 8, !dbg !4538
  ret i8* %36, !dbg !4539
}

; Function Attrs: nounwind readonly
declare i32 @memcmp(i8*, i8*, i64) #4

; Function Attrs: nounwind readonly
declare i32 @strncasecmp(i8*, i8*, i64) #4

; Function Attrs: nounwind uwtable
define i32 @mesg_write_rrset_list(%struct.generic_list* %rrls, i8* %msg, i8* %msg_tail, i16* %dnames, i32 %dnames_len, i8** %wp, i16* %cnt) #0 !dbg !490 {
  %1 = alloca i32, align 4
  %2 = alloca %struct.generic_list*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i16*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i8**, align 8
  %8 = alloca i16*, align 8
  %fn = alloca i8*, align 8
  %wp_start = alloca i8*, align 8
  %wp_period = alloca i8*, align 8
  %us = alloca i16, align 2
  %ul = alloca i32, align 4
  %rrsp = alloca %struct.rr_set*, align 8
  %rrp = alloca %struct.rr*, align 8
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.generic_list* %rrls, %struct.generic_list** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.generic_list** %2, metadata !4540, metadata !2279), !dbg !4541
  store i8* %msg, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !4542, metadata !2279), !dbg !4543
  store i8* %msg_tail, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !4544, metadata !2279), !dbg !4545
  store i16* %dnames, i16** %5, align 8
  call void @llvm.dbg.declare(metadata i16** %5, metadata !4546, metadata !2279), !dbg !4547
  store i32 %dnames_len, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !4548, metadata !2279), !dbg !4549
  store i8** %wp, i8*** %7, align 8
  call void @llvm.dbg.declare(metadata i8*** %7, metadata !4550, metadata !2279), !dbg !4551
  store i16* %cnt, i16** %8, align 8
  call void @llvm.dbg.declare(metadata i16** %8, metadata !4552, metadata !2279), !dbg !4553
  call void @llvm.dbg.declare(metadata i8** %fn, metadata !4554, metadata !2279), !dbg !4555
  store i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.5.99, i32 0, i32 0), i8** %fn, align 8, !dbg !4555
  call void @llvm.dbg.declare(metadata i8** %wp_start, metadata !4556, metadata !2279), !dbg !4557
  call void @llvm.dbg.declare(metadata i8** %wp_period, metadata !4558, metadata !2279), !dbg !4559
  call void @llvm.dbg.declare(metadata i16* %us, metadata !4560, metadata !2279), !dbg !4561
  call void @llvm.dbg.declare(metadata i32* %ul, metadata !4562, metadata !2279), !dbg !4563
  call void @llvm.dbg.declare(metadata %struct.rr_set** %rrsp, metadata !4564, metadata !2279), !dbg !4565
  call void @llvm.dbg.declare(metadata %struct.rr** %rrp, metadata !4566, metadata !2279), !dbg !4567
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4568, metadata !2279), !dbg !4569
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !4570, metadata !2279), !dbg !4571
  %9 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 8), align 4, !dbg !4572
  %10 = icmp sgt i32 %9, 4, !dbg !4574
  br i1 %10, label %11, label %13, !dbg !4575

; <label>:11                                      ; preds = %0
  %12 = load i8*, i8** %fn, align 8, !dbg !4576
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.6.100, i32 0, i32 0), i8* %12), !dbg !4577
  br label %13, !dbg !4577

; <label>:13                                      ; preds = %11, %0
  %14 = load %struct.generic_list*, %struct.generic_list** %2, align 8, !dbg !4578
  %15 = icmp ne %struct.generic_list* %14, null, !dbg !4578
  br i1 %15, label %17, label %16, !dbg !4580

; <label>:16                                      ; preds = %13
  store i32 0, i32* %1, align 4, !dbg !4581
  br label %272, !dbg !4581

; <label>:17                                      ; preds = %13
  %18 = load i8**, i8*** %7, align 8, !dbg !4582
  %19 = load i8*, i8** %18, align 8, !dbg !4583
  store i8* %19, i8** %wp_start, align 8, !dbg !4584
  %20 = load %struct.generic_list*, %struct.generic_list** %2, align 8, !dbg !4585
  %21 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %20, i32 0, i32 0, !dbg !4587
  %22 = load %struct.generic_list*, %struct.generic_list** %21, align 8, !dbg !4587
  store %struct.generic_list* %22, %struct.generic_list** %2, align 8, !dbg !4588
  br label %23, !dbg !4589

; <label>:23                                      ; preds = %248, %17
  %24 = load %struct.generic_list*, %struct.generic_list** %2, align 8, !dbg !4590
  %25 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %24, i32 0, i32 2, !dbg !4593
  %26 = load i8*, i8** %25, align 8, !dbg !4593
  %27 = icmp ne i8* %26, null, !dbg !4594
  br i1 %27, label %28, label %252, !dbg !4594

; <label>:28                                      ; preds = %23
  %29 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 8), align 4, !dbg !4595
  %30 = icmp sgt i32 %29, 4, !dbg !4598
  br i1 %30, label %31, label %33, !dbg !4599

; <label>:31                                      ; preds = %28
  %32 = load i8*, i8** %fn, align 8, !dbg !4600
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.7.101, i32 0, i32 0), i8* %32), !dbg !4601
  br label %33, !dbg !4601

; <label>:33                                      ; preds = %31, %28
  %34 = load %struct.generic_list*, %struct.generic_list** %2, align 8, !dbg !4602
  %35 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %34, i32 0, i32 2, !dbg !4603
  %36 = load i8*, i8** %35, align 8, !dbg !4603
  %37 = bitcast i8* %36 to %struct.rr_set*, !dbg !4604
  store %struct.rr_set* %37, %struct.rr_set** %rrsp, align 8, !dbg !4605
  store i32 0, i32* %i, align 4, !dbg !4606
  br label %38, !dbg !4608

; <label>:38                                      ; preds = %244, %33
  %39 = load i32, i32* %i, align 4, !dbg !4609
  %40 = load %struct.rr_set*, %struct.rr_set** %rrsp, align 8, !dbg !4612
  %41 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %40, i32 0, i32 4, !dbg !4613
  %42 = bitcast %union.u_data* %41 to %struct.data_data**, !dbg !4614
  %43 = load %struct.data_data*, %struct.data_data** %42, align 8, !dbg !4614
  %44 = getelementptr inbounds %struct.data_data, %struct.data_data* %43, i32 0, i32 0, !dbg !4615
  %45 = load i16, i16* %44, align 2, !dbg !4615
  %46 = zext i16 %45 to i32, !dbg !4612
  %47 = icmp slt i32 %39, %46, !dbg !4616
  br i1 %47, label %48, label %247, !dbg !4617

; <label>:48                                      ; preds = %38
  %49 = load i8**, i8*** %7, align 8, !dbg !4618
  %50 = load i8*, i8** %49, align 8, !dbg !4620
  store i8* %50, i8** %wp_period, align 8, !dbg !4621
  %51 = load i8*, i8** %3, align 8, !dbg !4622
  %52 = load i8*, i8** %4, align 8, !dbg !4623
  %53 = load i16*, i16** %5, align 8, !dbg !4624
  %54 = load i32, i32* %6, align 4, !dbg !4625
  %55 = load %struct.rr_set*, %struct.rr_set** %rrsp, align 8, !dbg !4626
  %56 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %55, i32 0, i32 2, !dbg !4626
  %57 = bitcast %union.u_key* %56 to %struct.key_info**, !dbg !4626
  %58 = load %struct.key_info*, %struct.key_info** %57, align 8, !dbg !4626
  %59 = bitcast %struct.key_info* %58 to i8*, !dbg !4626
  %60 = getelementptr inbounds i8, i8* %59, i64 6, !dbg !4626
  %61 = load i8**, i8*** %7, align 8, !dbg !4627
  %62 = load i8*, i8** %61, align 8, !dbg !4628
  %63 = call i32 @write_dname(i8* %51, i8* %52, i16* %53, i32 %54, i8* %60, i8* %62), !dbg !4629
  store i32 %63, i32* %ret, align 4, !dbg !4630
  %64 = load i32, i32* %ret, align 4, !dbg !4631
  %65 = icmp slt i32 %64, 0, !dbg !4633
  br i1 %65, label %66, label %75, !dbg !4634

; <label>:66                                      ; preds = %48
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8.103, i32 0, i32 0)), !dbg !4635
  %67 = load i8*, i8** %wp_period, align 8, !dbg !4637
  %68 = load i8**, i8*** %7, align 8, !dbg !4638
  store i8* %67, i8** %68, align 8, !dbg !4639
  %69 = load i8*, i8** %wp_period, align 8, !dbg !4640
  %70 = load i8*, i8** %wp_start, align 8, !dbg !4641
  %71 = ptrtoint i8* %69 to i64, !dbg !4642
  %72 = ptrtoint i8* %70 to i64, !dbg !4642
  %73 = sub i64 %71, %72, !dbg !4642
  %74 = trunc i64 %73 to i32, !dbg !4640
  store i32 %74, i32* %1, align 4, !dbg !4643
  br label %272, !dbg !4643

; <label>:75                                      ; preds = %48
  %76 = load i32, i32* %ret, align 4, !dbg !4644
  %77 = load i8**, i8*** %7, align 8, !dbg !4645
  %78 = load i8*, i8** %77, align 8, !dbg !4646
  %79 = sext i32 %76 to i64, !dbg !4646
  %80 = getelementptr inbounds i8, i8* %78, i64 %79, !dbg !4646
  store i8* %80, i8** %77, align 8, !dbg !4646
  %81 = load %struct.rr_set*, %struct.rr_set** %rrsp, align 8, !dbg !4647
  %82 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %81, i32 0, i32 4, !dbg !4648
  %83 = bitcast %union.u_data* %82 to i8**, !dbg !4649
  %84 = load i8*, i8** %83, align 8, !dbg !4649
  %85 = load %struct.rr_set*, %struct.rr_set** %rrsp, align 8, !dbg !4650
  %86 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %85, i32 0, i32 4, !dbg !4650
  %87 = bitcast %union.u_data* %86 to i8**, !dbg !4650
  %88 = load i8*, i8** %87, align 8, !dbg !4650
  %89 = load i32, i32* %i, align 4, !dbg !4650
  %90 = add nsw i32 %89, 1, !dbg !4650
  %91 = sext i32 %90 to i64, !dbg !4650
  %92 = mul i64 2, %91, !dbg !4650
  %93 = getelementptr inbounds i8, i8* %88, i64 %92, !dbg !4650
  %94 = bitcast i8* %93 to i16*, !dbg !4650
  %95 = load i16, i16* %94, align 2, !dbg !4650
  %96 = zext i16 %95 to i32, !dbg !4650
  %97 = sext i32 %96 to i64, !dbg !4651
  %98 = getelementptr inbounds i8, i8* %84, i64 %97, !dbg !4651
  %99 = bitcast i8* %98 to %struct.rr*, !dbg !4652
  store %struct.rr* %99, %struct.rr** %rrp, align 8, !dbg !4653
  %100 = load i8**, i8*** %7, align 8, !dbg !4654
  %101 = load i8*, i8** %100, align 8, !dbg !4656
  %102 = getelementptr inbounds i8, i8* %101, i64 6, !dbg !4657
  %103 = getelementptr inbounds i8, i8* %102, i64 4, !dbg !4658
  %104 = load %struct.rr*, %struct.rr** %rrp, align 8, !dbg !4659
  %105 = getelementptr inbounds %struct.rr, %struct.rr* %104, i32 0, i32 1, !dbg !4660
  %106 = load i16, i16* %105, align 4, !dbg !4660
  %107 = zext i16 %106 to i32, !dbg !4659
  %108 = sext i32 %107 to i64, !dbg !4661
  %109 = getelementptr inbounds i8, i8* %103, i64 %108, !dbg !4661
  %110 = load i8*, i8** %4, align 8, !dbg !4662
  %111 = icmp ugt i8* %109, %110, !dbg !4663
  br i1 %111, label %112, label %121, !dbg !4664

; <label>:112                                     ; preds = %75
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.9.104, i32 0, i32 0)), !dbg !4665
  %113 = load i8*, i8** %wp_period, align 8, !dbg !4667
  %114 = load i8**, i8*** %7, align 8, !dbg !4668
  store i8* %113, i8** %114, align 8, !dbg !4669
  %115 = load i8*, i8** %wp_period, align 8, !dbg !4670
  %116 = load i8*, i8** %wp_start, align 8, !dbg !4671
  %117 = ptrtoint i8* %115 to i64, !dbg !4672
  %118 = ptrtoint i8* %116 to i64, !dbg !4672
  %119 = sub i64 %117, %118, !dbg !4672
  %120 = trunc i64 %119 to i32, !dbg !4670
  store i32 %120, i32* %1, align 4, !dbg !4673
  br label %272, !dbg !4673

; <label>:121                                     ; preds = %75
  %122 = load %struct.rr_set*, %struct.rr_set** %rrsp, align 8, !dbg !4674
  %123 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %122, i32 0, i32 2, !dbg !4674
  %124 = bitcast %union.u_key* %123 to %struct.key_info**, !dbg !4674
  %125 = load %struct.key_info*, %struct.key_info** %124, align 8, !dbg !4674
  %126 = getelementptr inbounds %struct.key_info, %struct.key_info* %125, i32 0, i32 0, !dbg !4674
  %127 = load i16, i16* %126, align 2, !dbg !4674
  %128 = zext i16 %127 to i32, !dbg !4674
  %129 = ashr i32 %128, 8, !dbg !4674
  %130 = trunc i32 %129 to i8, !dbg !4674
  %131 = load i8**, i8*** %7, align 8, !dbg !4674
  %132 = load i8*, i8** %131, align 8, !dbg !4674
  %133 = getelementptr inbounds i8, i8* %132, i32 1, !dbg !4674
  store i8* %133, i8** %131, align 8, !dbg !4674
  store i8 %130, i8* %132, align 1, !dbg !4674
  %134 = load %struct.rr_set*, %struct.rr_set** %rrsp, align 8, !dbg !4674
  %135 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %134, i32 0, i32 2, !dbg !4674
  %136 = bitcast %union.u_key* %135 to %struct.key_info**, !dbg !4674
  %137 = load %struct.key_info*, %struct.key_info** %136, align 8, !dbg !4674
  %138 = getelementptr inbounds %struct.key_info, %struct.key_info* %137, i32 0, i32 0, !dbg !4674
  %139 = load i16, i16* %138, align 2, !dbg !4674
  %140 = trunc i16 %139 to i8, !dbg !4674
  %141 = load i8**, i8*** %7, align 8, !dbg !4674
  %142 = load i8*, i8** %141, align 8, !dbg !4674
  %143 = getelementptr inbounds i8, i8* %142, i32 1, !dbg !4674
  store i8* %143, i8** %141, align 8, !dbg !4674
  store i8 %140, i8* %142, align 1, !dbg !4674
  %144 = load %struct.rr_set*, %struct.rr_set** %rrsp, align 8, !dbg !4676
  %145 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %144, i32 0, i32 2, !dbg !4676
  %146 = bitcast %union.u_key* %145 to %struct.key_info**, !dbg !4676
  %147 = load %struct.key_info*, %struct.key_info** %146, align 8, !dbg !4676
  %148 = getelementptr inbounds %struct.key_info, %struct.key_info* %147, i32 0, i32 1, !dbg !4676
  %149 = load i16, i16* %148, align 2, !dbg !4676
  %150 = zext i16 %149 to i32, !dbg !4676
  %151 = ashr i32 %150, 8, !dbg !4676
  %152 = trunc i32 %151 to i8, !dbg !4676
  %153 = load i8**, i8*** %7, align 8, !dbg !4676
  %154 = load i8*, i8** %153, align 8, !dbg !4676
  %155 = getelementptr inbounds i8, i8* %154, i32 1, !dbg !4676
  store i8* %155, i8** %153, align 8, !dbg !4676
  store i8 %152, i8* %154, align 1, !dbg !4676
  %156 = load %struct.rr_set*, %struct.rr_set** %rrsp, align 8, !dbg !4676
  %157 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %156, i32 0, i32 2, !dbg !4676
  %158 = bitcast %union.u_key* %157 to %struct.key_info**, !dbg !4676
  %159 = load %struct.key_info*, %struct.key_info** %158, align 8, !dbg !4676
  %160 = getelementptr inbounds %struct.key_info, %struct.key_info* %159, i32 0, i32 1, !dbg !4676
  %161 = load i16, i16* %160, align 2, !dbg !4676
  %162 = trunc i16 %161 to i8, !dbg !4676
  %163 = load i8**, i8*** %7, align 8, !dbg !4676
  %164 = load i8*, i8** %163, align 8, !dbg !4676
  %165 = getelementptr inbounds i8, i8* %164, i32 1, !dbg !4676
  store i8* %165, i8** %163, align 8, !dbg !4676
  store i8 %162, i8* %164, align 1, !dbg !4676
  %166 = load %struct.rr*, %struct.rr** %rrp, align 8, !dbg !4678
  %167 = getelementptr inbounds %struct.rr, %struct.rr* %166, i32 0, i32 0, !dbg !4679
  %168 = load i32, i32* %167, align 4, !dbg !4679
  store i32 %168, i32* %ul, align 4, !dbg !4680
  %169 = load i32, i32* %ul, align 4, !dbg !4681
  %170 = trunc i32 %169 to i8, !dbg !4681
  %171 = load i8**, i8*** %7, align 8, !dbg !4681
  %172 = load i8*, i8** %171, align 8, !dbg !4681
  %173 = getelementptr inbounds i8, i8* %172, i64 3, !dbg !4681
  store i8 %170, i8* %173, align 1, !dbg !4681
  %174 = load i32, i32* %ul, align 4, !dbg !4681
  %175 = lshr i32 %174, 8, !dbg !4681
  store i32 %175, i32* %ul, align 4, !dbg !4681
  %176 = trunc i32 %175 to i8, !dbg !4681
  %177 = load i8**, i8*** %7, align 8, !dbg !4681
  %178 = load i8*, i8** %177, align 8, !dbg !4681
  %179 = getelementptr inbounds i8, i8* %178, i64 2, !dbg !4681
  store i8 %176, i8* %179, align 1, !dbg !4681
  %180 = load i32, i32* %ul, align 4, !dbg !4681
  %181 = lshr i32 %180, 8, !dbg !4681
  store i32 %181, i32* %ul, align 4, !dbg !4681
  %182 = trunc i32 %181 to i8, !dbg !4681
  %183 = load i8**, i8*** %7, align 8, !dbg !4681
  %184 = load i8*, i8** %183, align 8, !dbg !4681
  %185 = getelementptr inbounds i8, i8* %184, i64 1, !dbg !4681
  store i8 %182, i8* %185, align 1, !dbg !4681
  %186 = load i32, i32* %ul, align 4, !dbg !4681
  %187 = lshr i32 %186, 8, !dbg !4681
  %188 = trunc i32 %187 to i8, !dbg !4681
  %189 = load i8**, i8*** %7, align 8, !dbg !4681
  %190 = load i8*, i8** %189, align 8, !dbg !4681
  %191 = getelementptr inbounds i8, i8* %190, i64 0, !dbg !4681
  store i8 %188, i8* %191, align 1, !dbg !4681
  %192 = load i8**, i8*** %7, align 8, !dbg !4681
  %193 = load i8*, i8** %192, align 8, !dbg !4681
  %194 = getelementptr inbounds i8, i8* %193, i64 4, !dbg !4681
  store i8* %194, i8** %192, align 8, !dbg !4681
  %195 = load %struct.rr*, %struct.rr** %rrp, align 8, !dbg !4683
  %196 = getelementptr inbounds %struct.rr, %struct.rr* %195, i32 0, i32 1, !dbg !4683
  %197 = load i16, i16* %196, align 4, !dbg !4683
  %198 = zext i16 %197 to i32, !dbg !4683
  %199 = ashr i32 %198, 8, !dbg !4683
  %200 = trunc i32 %199 to i8, !dbg !4683
  %201 = load i8**, i8*** %7, align 8, !dbg !4683
  %202 = load i8*, i8** %201, align 8, !dbg !4683
  %203 = getelementptr inbounds i8, i8* %202, i32 1, !dbg !4683
  store i8* %203, i8** %201, align 8, !dbg !4683
  store i8 %200, i8* %202, align 1, !dbg !4683
  %204 = load %struct.rr*, %struct.rr** %rrp, align 8, !dbg !4683
  %205 = getelementptr inbounds %struct.rr, %struct.rr* %204, i32 0, i32 1, !dbg !4683
  %206 = load i16, i16* %205, align 4, !dbg !4683
  %207 = trunc i16 %206 to i8, !dbg !4683
  %208 = load i8**, i8*** %7, align 8, !dbg !4683
  %209 = load i8*, i8** %208, align 8, !dbg !4683
  %210 = getelementptr inbounds i8, i8* %209, i32 1, !dbg !4683
  store i8* %210, i8** %208, align 8, !dbg !4683
  store i8 %207, i8* %209, align 1, !dbg !4683
  %211 = load i8**, i8*** %7, align 8, !dbg !4685
  %212 = load i8*, i8** %211, align 8, !dbg !4686
  %213 = load %struct.rr*, %struct.rr** %rrp, align 8, !dbg !4687
  %214 = bitcast %struct.rr* %213 to i8*, !dbg !4687
  %215 = getelementptr inbounds i8, i8* %214, i64 6, !dbg !4687
  %216 = load %struct.rr*, %struct.rr** %rrp, align 8, !dbg !4688
  %217 = getelementptr inbounds %struct.rr, %struct.rr* %216, i32 0, i32 1, !dbg !4689
  %218 = load i16, i16* %217, align 4, !dbg !4689
  %219 = zext i16 %218 to i64, !dbg !4688
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %212, i8* %215, i64 %219, i32 1, i1 false), !dbg !4690
  %220 = load %struct.rr*, %struct.rr** %rrp, align 8, !dbg !4691
  %221 = getelementptr inbounds %struct.rr, %struct.rr* %220, i32 0, i32 1, !dbg !4692
  %222 = load i16, i16* %221, align 4, !dbg !4692
  %223 = zext i16 %222 to i32, !dbg !4691
  %224 = load i8**, i8*** %7, align 8, !dbg !4693
  %225 = load i8*, i8** %224, align 8, !dbg !4694
  %226 = sext i32 %223 to i64, !dbg !4694
  %227 = getelementptr inbounds i8, i8* %225, i64 %226, !dbg !4694
  store i8* %227, i8** %224, align 8, !dbg !4694
  %228 = load i16*, i16** %8, align 8, !dbg !4695
  %229 = load i16, i16* %228, align 2, !dbg !4696
  %230 = call zeroext i16 @ntohs(i16 zeroext %229) #1, !dbg !4697
  %231 = zext i16 %230 to i32, !dbg !4697
  %232 = add nsw i32 %231, 1, !dbg !4698
  %233 = trunc i32 %232 to i16, !dbg !4697
  store i16 %233, i16* %us, align 2, !dbg !4699
  %234 = load i16, i16* %us, align 2, !dbg !4700
  %235 = call zeroext i16 @htons(i16 zeroext %234) #1, !dbg !4701
  %236 = load i16*, i16** %8, align 8, !dbg !4702
  store i16 %235, i16* %236, align 2, !dbg !4703
  %237 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 8), align 4, !dbg !4704
  %238 = icmp sgt i32 %237, 4, !dbg !4706
  br i1 %238, label %239, label %243, !dbg !4707

; <label>:239                                     ; preds = %121
  %240 = load i8*, i8** %fn, align 8, !dbg !4708
  %241 = load i16, i16* %us, align 2, !dbg !4709
  %242 = zext i16 %241 to i64, !dbg !4710
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.10.105, i32 0, i32 0), i8* %240, i64 %242), !dbg !4711
  br label %243, !dbg !4711

; <label>:243                                     ; preds = %239, %121
  br label %244, !dbg !4712

; <label>:244                                     ; preds = %243
  %245 = load i32, i32* %i, align 4, !dbg !4713
  %246 = add nsw i32 %245, 1, !dbg !4713
  store i32 %246, i32* %i, align 4, !dbg !4713
  br label %38, !dbg !4715

; <label>:247                                     ; preds = %38
  br label %248, !dbg !4716

; <label>:248                                     ; preds = %247
  %249 = load %struct.generic_list*, %struct.generic_list** %2, align 8, !dbg !4717
  %250 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %249, i32 0, i32 0, !dbg !4719
  %251 = load %struct.generic_list*, %struct.generic_list** %250, align 8, !dbg !4719
  store %struct.generic_list* %251, %struct.generic_list** %2, align 8, !dbg !4720
  br label %23, !dbg !4721

; <label>:252                                     ; preds = %23
  %253 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 8), align 4, !dbg !4722
  %254 = icmp sgt i32 %253, 4, !dbg !4724
  br i1 %254, label %255, label %264, !dbg !4725

; <label>:255                                     ; preds = %252
  %256 = load i8*, i8** %fn, align 8, !dbg !4726
  %257 = load i8**, i8*** %7, align 8, !dbg !4727
  %258 = load i8*, i8** %257, align 8, !dbg !4728
  %259 = load i8*, i8** %wp_start, align 8, !dbg !4729
  %260 = ptrtoint i8* %258 to i64, !dbg !4730
  %261 = ptrtoint i8* %259 to i64, !dbg !4730
  %262 = sub i64 %260, %261, !dbg !4730
  %263 = trunc i64 %262 to i32, !dbg !4731
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.11.106, i32 0, i32 0), i8* %256, i32 %263), !dbg !4732
  br label %264, !dbg !4732

; <label>:264                                     ; preds = %255, %252
  %265 = load i8**, i8*** %7, align 8, !dbg !4733
  %266 = load i8*, i8** %265, align 8, !dbg !4734
  %267 = load i8*, i8** %wp_start, align 8, !dbg !4735
  %268 = ptrtoint i8* %266 to i64, !dbg !4736
  %269 = ptrtoint i8* %267 to i64, !dbg !4736
  %270 = sub i64 %268, %269, !dbg !4736
  %271 = trunc i64 %270 to i32, !dbg !4737
  store i32 %271, i32* %1, align 4, !dbg !4738
  br label %272, !dbg !4738

; <label>:272                                     ; preds = %264, %112, %66, %16
  %273 = load i32, i32* %1, align 4, !dbg !4739
  ret i32 %273, !dbg !4739
}

; Function Attrs: nounwind uwtable
define internal i32 @write_dname(i8* %msg, i8* %msg_tail, i16* %dnames, i32 %dnames_len, i8* %dname, i8* %wp) #0 !dbg !523 {
  %1 = alloca i32, align 4
  %2 = alloca i8*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i16*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %fn = alloca i8*, align 8
  %bestmatch_rpd = alloca i8*, align 8
  %bestmatch_rpm = alloca i8*, align 8
  %bestmatch_len = alloca i32, align 4
  %rpd = alloca i8*, align 8
  %rpm = alloca i8*, align 8
  %written_len = alloca i32, align 4
  %i = alloca i32, align 4
  %cpd = alloca i8*, align 8
  %cpm = alloca i8*, align 8
  %match_len = alloca i32, align 4
  %mlen = alloca i32, align 4
  %i1 = alloca i32, align 4
  %i2 = alloca i32, align 4
  %us = alloca i16, align 2
  store i8* %msg, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !4740, metadata !2279), !dbg !4741
  store i8* %msg_tail, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !4742, metadata !2279), !dbg !4743
  store i16* %dnames, i16** %4, align 8
  call void @llvm.dbg.declare(metadata i16** %4, metadata !4744, metadata !2279), !dbg !4745
  store i32 %dnames_len, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !4746, metadata !2279), !dbg !4747
  store i8* %dname, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !4748, metadata !2279), !dbg !4749
  store i8* %wp, i8** %7, align 8
  call void @llvm.dbg.declare(metadata i8** %7, metadata !4750, metadata !2279), !dbg !4751
  call void @llvm.dbg.declare(metadata i8** %fn, metadata !4752, metadata !2279), !dbg !4753
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.57, i32 0, i32 0), i8** %fn, align 8, !dbg !4753
  call void @llvm.dbg.declare(metadata i8** %bestmatch_rpd, metadata !4754, metadata !2279), !dbg !4755
  store i8* null, i8** %bestmatch_rpd, align 8, !dbg !4755
  call void @llvm.dbg.declare(metadata i8** %bestmatch_rpm, metadata !4756, metadata !2279), !dbg !4757
  store i8* null, i8** %bestmatch_rpm, align 8, !dbg !4757
  call void @llvm.dbg.declare(metadata i32* %bestmatch_len, metadata !4758, metadata !2279), !dbg !4759
  call void @llvm.dbg.declare(metadata i8** %rpd, metadata !4760, metadata !2279), !dbg !4761
  call void @llvm.dbg.declare(metadata i8** %rpm, metadata !4762, metadata !2279), !dbg !4763
  call void @llvm.dbg.declare(metadata i32* %written_len, metadata !4764, metadata !2279), !dbg !4765
  %8 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 8), align 4, !dbg !4766
  %9 = icmp sgt i32 %8, 4, !dbg !4768
  br i1 %9, label %10, label %12, !dbg !4769

; <label>:10                                      ; preds = %0
  %11 = load i8*, i8** %fn, align 8, !dbg !4770
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.21.102, i32 0, i32 0), i8* %11), !dbg !4771
  br label %12, !dbg !4771

; <label>:12                                      ; preds = %10, %0
  store i32 0, i32* %bestmatch_len, align 4, !dbg !4772
  %13 = load i8*, i8** %6, align 8, !dbg !4773
  store i8* %13, i8** %rpd, align 8, !dbg !4775
  br label %14, !dbg !4776

; <label>:14                                      ; preds = %180, %12
  %15 = load i8*, i8** %rpd, align 8, !dbg !4777
  %16 = load i8, i8* %15, align 1, !dbg !4780
  %17 = zext i8 %16 to i32, !dbg !4780
  %18 = icmp ne i32 %17, 0, !dbg !4780
  br i1 %18, label %19, label %23, !dbg !4781

; <label>:19                                      ; preds = %14
  %20 = load i32, i32* %bestmatch_len, align 4, !dbg !4782
  %21 = icmp ne i32 %20, 0, !dbg !4784
  %22 = xor i1 %21, true, !dbg !4784
  br label %23

; <label>:23                                      ; preds = %19, %14
  %24 = phi i1 [ false, %14 ], [ %22, %19 ]
  br i1 %24, label %25, label %187, !dbg !4785

; <label>:25                                      ; preds = %23
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4787, metadata !2279), !dbg !4789
  store i32 0, i32* %i, align 4, !dbg !4790
  br label %26, !dbg !4792

; <label>:26                                      ; preds = %176, %25
  %27 = load i32, i32* %i, align 4, !dbg !4793
  %28 = sext i32 %27 to i64, !dbg !4796
  %29 = load i16*, i16** %4, align 8, !dbg !4796
  %30 = getelementptr inbounds i16, i16* %29, i64 %28, !dbg !4796
  %31 = load i16, i16* %30, align 2, !dbg !4796
  %32 = zext i16 %31 to i32, !dbg !4796
  %33 = icmp ne i32 %32, 0, !dbg !4797
  br i1 %33, label %34, label %38, !dbg !4798

; <label>:34                                      ; preds = %26
  %35 = load i32, i32* %i, align 4, !dbg !4799
  %36 = load i32, i32* %5, align 4, !dbg !4801
  %37 = icmp slt i32 %35, %36, !dbg !4802
  br label %38

; <label>:38                                      ; preds = %34, %26
  %39 = phi i1 [ false, %26 ], [ %37, %34 ]
  br i1 %39, label %40, label %179, !dbg !4803

; <label>:40                                      ; preds = %38
  %41 = load i8*, i8** %2, align 8, !dbg !4805
  %42 = load i32, i32* %i, align 4, !dbg !4808
  %43 = sext i32 %42 to i64, !dbg !4809
  %44 = load i16*, i16** %4, align 8, !dbg !4809
  %45 = getelementptr inbounds i16, i16* %44, i64 %43, !dbg !4809
  %46 = load i16, i16* %45, align 2, !dbg !4809
  %47 = zext i16 %46 to i32, !dbg !4809
  %48 = sext i32 %47 to i64, !dbg !4810
  %49 = getelementptr inbounds i8, i8* %41, i64 %48, !dbg !4810
  %50 = load i8*, i8** %2, align 8, !dbg !4811
  %51 = call i8* @dname_redirect(i8* %49, i8* %50), !dbg !4812
  store i8* %51, i8** %rpm, align 8, !dbg !4813
  br label %52, !dbg !4814

; <label>:52                                      ; preds = %166, %40
  %53 = load i8*, i8** %rpm, align 8, !dbg !4815
  %54 = load i8, i8* %53, align 1, !dbg !4818
  %55 = icmp ne i8 %54, 0, !dbg !4819
  br i1 %55, label %56, label %175, !dbg !4819

; <label>:56                                      ; preds = %52
  call void @llvm.dbg.declare(metadata i8** %cpd, metadata !4820, metadata !2279), !dbg !4822
  call void @llvm.dbg.declare(metadata i8** %cpm, metadata !4823, metadata !2279), !dbg !4824
  call void @llvm.dbg.declare(metadata i32* %match_len, metadata !4825, metadata !2279), !dbg !4826
  %57 = load i8*, i8** %rpm, align 8, !dbg !4827
  %58 = load i8*, i8** %2, align 8, !dbg !4829
  %59 = icmp ult i8* %57, %58, !dbg !4830
  br i1 %59, label %64, label %60, !dbg !4831

; <label>:60                                      ; preds = %56
  %61 = load i8*, i8** %3, align 8, !dbg !4832
  %62 = load i8*, i8** %rpm, align 8, !dbg !4834
  %63 = icmp ult i8* %61, %62, !dbg !4835
  br i1 %63, label %64, label %65, !dbg !4836

; <label>:64                                      ; preds = %60, %56
  store i32 -1, i32* %1, align 4, !dbg !4837
  br label %322, !dbg !4837

; <label>:65                                      ; preds = %60
  %66 = load i8*, i8** %rpd, align 8, !dbg !4838
  store i8* %66, i8** %cpd, align 8, !dbg !4839
  %67 = load i8*, i8** %rpm, align 8, !dbg !4840
  store i8* %67, i8** %cpm, align 8, !dbg !4841
  store i32 0, i32* %match_len, align 4, !dbg !4842
  br label %68, !dbg !4843

; <label>:68                                      ; preds = %144, %65
  %69 = load i8*, i8** %cpm, align 8, !dbg !4844
  %70 = load i8, i8* %69, align 1, !dbg !4846
  %71 = zext i8 %70 to i32, !dbg !4846
  %72 = icmp ne i32 %71, 0, !dbg !4846
  br i1 %72, label %73, label %81, !dbg !4847

; <label>:73                                      ; preds = %68
  %74 = load i8*, i8** %cpm, align 8, !dbg !4848
  %75 = load i8, i8* %74, align 1, !dbg !4850
  %76 = zext i8 %75 to i32, !dbg !4850
  %77 = load i8*, i8** %cpd, align 8, !dbg !4851
  %78 = load i8, i8* %77, align 1, !dbg !4852
  %79 = zext i8 %78 to i32, !dbg !4852
  %80 = icmp eq i32 %76, %79, !dbg !4853
  br label %81

; <label>:81                                      ; preds = %73, %68
  %82 = phi i1 [ false, %68 ], [ %80, %73 ]
  br i1 %82, label %83, label %147, !dbg !4854

; <label>:83                                      ; preds = %81
  call void @llvm.dbg.declare(metadata i32* %mlen, metadata !4856, metadata !2279), !dbg !4858
  %84 = load i8*, i8** %cpm, align 8, !dbg !4859
  %85 = call i32 @labellen(i8* %84), !dbg !4860
  store i32 %85, i32* %mlen, align 4, !dbg !4861
  %86 = load i32, i32* %mlen, align 4, !dbg !4862
  %87 = load i8*, i8** %cpd, align 8, !dbg !4864
  %88 = call i32 @labellen(i8* %87), !dbg !4865
  %89 = icmp ne i32 %86, %88, !dbg !4866
  br i1 %89, label %90, label %91, !dbg !4867

; <label>:90                                      ; preds = %83
  br label %147, !dbg !4868

; <label>:91                                      ; preds = %83
  %92 = load i8*, i8** %cpm, align 8, !dbg !4869
  %93 = load i8, i8* %92, align 1, !dbg !4871
  %94 = zext i8 %93 to i32, !dbg !4871
  %95 = icmp eq i32 %94, 65, !dbg !4872
  br i1 %95, label %96, label %106, !dbg !4873

; <label>:96                                      ; preds = %91
  %97 = load i8*, i8** %cpm, align 8, !dbg !4874
  %98 = getelementptr inbounds i8, i8* %97, i64 1, !dbg !4875
  %99 = load i8*, i8** %cpd, align 8, !dbg !4876
  %100 = getelementptr inbounds i8, i8* %99, i64 1, !dbg !4877
  %101 = load i32, i32* %mlen, align 4, !dbg !4878
  %102 = sext i32 %101 to i64, !dbg !4878
  %103 = call i32 @memcmp(i8* %98, i8* %100, i64 %102) #9, !dbg !4879
  %104 = icmp ne i32 %103, 0, !dbg !4879
  br i1 %104, label %105, label %106, !dbg !4880

; <label>:105                                     ; preds = %96
  br label %147, !dbg !4882

; <label>:106                                     ; preds = %96, %91
  %107 = load i8*, i8** %cpm, align 8, !dbg !4883
  %108 = load i8, i8* %107, align 1, !dbg !4885
  %109 = zext i8 %108 to i32, !dbg !4885
  %110 = icmp ne i32 %109, 65, !dbg !4886
  br i1 %110, label %111, label %122, !dbg !4887

; <label>:111                                     ; preds = %106
  %112 = load i8*, i8** %cpm, align 8, !dbg !4888
  %113 = getelementptr inbounds i8, i8* %112, i64 1, !dbg !4889
  %114 = load i8*, i8** %cpd, align 8, !dbg !4890
  %115 = getelementptr inbounds i8, i8* %114, i64 1, !dbg !4891
  %116 = load i8*, i8** %cpm, align 8, !dbg !4892
  %117 = load i8, i8* %116, align 1, !dbg !4893
  %118 = zext i8 %117 to i64, !dbg !4893
  %119 = call i32 @strncasecmp(i8* %113, i8* %115, i64 %118) #9, !dbg !4894
  %120 = icmp ne i32 %119, 0, !dbg !4894
  br i1 %120, label %121, label %122, !dbg !4895

; <label>:121                                     ; preds = %111
  br label %147, !dbg !4896

; <label>:122                                     ; preds = %111, %106
  %123 = load i32, i32* %mlen, align 4, !dbg !4897
  %124 = add nsw i32 %123, 1, !dbg !4898
  %125 = load i8*, i8** %cpm, align 8, !dbg !4899
  %126 = sext i32 %124 to i64, !dbg !4899
  %127 = getelementptr inbounds i8, i8* %125, i64 %126, !dbg !4899
  store i8* %127, i8** %cpm, align 8, !dbg !4899
  %128 = load i32, i32* %mlen, align 4, !dbg !4900
  %129 = add nsw i32 %128, 1, !dbg !4901
  %130 = load i8*, i8** %cpd, align 8, !dbg !4902
  %131 = sext i32 %129 to i64, !dbg !4902
  %132 = getelementptr inbounds i8, i8* %130, i64 %131, !dbg !4902
  store i8* %132, i8** %cpd, align 8, !dbg !4902
  %133 = load i8*, i8** %cpm, align 8, !dbg !4903
  %134 = load i8*, i8** %2, align 8, !dbg !4904
  %135 = call i8* @dname_redirect(i8* %133, i8* %134), !dbg !4905
  store i8* %135, i8** %cpm, align 8, !dbg !4906
  %136 = load i8*, i8** %cpm, align 8, !dbg !4907
  %137 = load i8*, i8** %2, align 8, !dbg !4909
  %138 = icmp ult i8* %136, %137, !dbg !4910
  br i1 %138, label %143, label %139, !dbg !4911

; <label>:139                                     ; preds = %122
  %140 = load i8*, i8** %3, align 8, !dbg !4912
  %141 = load i8*, i8** %cpm, align 8, !dbg !4914
  %142 = icmp ult i8* %140, %141, !dbg !4915
  br i1 %142, label %143, label %144, !dbg !4916

; <label>:143                                     ; preds = %139, %122
  store i32 -1, i32* %1, align 4, !dbg !4917
  br label %322, !dbg !4917

; <label>:144                                     ; preds = %139
  %145 = load i32, i32* %match_len, align 4, !dbg !4918
  %146 = add nsw i32 %145, 1, !dbg !4918
  store i32 %146, i32* %match_len, align 4, !dbg !4918
  br label %68, !dbg !4919

; <label>:147                                     ; preds = %121, %105, %90, %81
  %148 = load i8*, i8** %cpm, align 8, !dbg !4921
  %149 = load i8, i8* %148, align 1, !dbg !4923
  %150 = zext i8 %149 to i32, !dbg !4923
  %151 = icmp eq i32 %150, 0, !dbg !4924
  br i1 %151, label %152, label %165, !dbg !4925

; <label>:152                                     ; preds = %147
  %153 = load i8*, i8** %cpd, align 8, !dbg !4926
  %154 = load i8, i8* %153, align 1, !dbg !4928
  %155 = zext i8 %154 to i32, !dbg !4928
  %156 = icmp eq i32 %155, 0, !dbg !4929
  br i1 %156, label %157, label %165, !dbg !4930

; <label>:157                                     ; preds = %152
  %158 = load i32, i32* %match_len, align 4, !dbg !4931
  %159 = load i32, i32* %bestmatch_len, align 4, !dbg !4932
  %160 = icmp sgt i32 %158, %159, !dbg !4933
  br i1 %160, label %161, label %165, !dbg !4934

; <label>:161                                     ; preds = %157
  %162 = load i8*, i8** %rpd, align 8, !dbg !4935
  store i8* %162, i8** %bestmatch_rpd, align 8, !dbg !4937
  %163 = load i8*, i8** %rpm, align 8, !dbg !4938
  store i8* %163, i8** %bestmatch_rpm, align 8, !dbg !4939
  %164 = load i32, i32* %match_len, align 4, !dbg !4940
  store i32 %164, i32* %bestmatch_len, align 4, !dbg !4941
  br label %165, !dbg !4942

; <label>:165                                     ; preds = %161, %157, %152, %147
  br label %166, !dbg !4943

; <label>:166                                     ; preds = %165
  %167 = load i8*, i8** %rpm, align 8, !dbg !4944
  %168 = call i32 @labellen(i8* %167), !dbg !4945
  %169 = load i8*, i8** %rpm, align 8, !dbg !4946
  %170 = sext i32 %168 to i64, !dbg !4947
  %171 = getelementptr inbounds i8, i8* %169, i64 %170, !dbg !4947
  %172 = getelementptr inbounds i8, i8* %171, i64 1, !dbg !4948
  %173 = load i8*, i8** %2, align 8, !dbg !4949
  %174 = call i8* @dname_redirect(i8* %172, i8* %173), !dbg !4950
  store i8* %174, i8** %rpm, align 8, !dbg !4951
  br label %52, !dbg !4952

; <label>:175                                     ; preds = %52
  br label %176, !dbg !4954

; <label>:176                                     ; preds = %175
  %177 = load i32, i32* %i, align 4, !dbg !4955
  %178 = add nsw i32 %177, 1, !dbg !4955
  store i32 %178, i32* %i, align 4, !dbg !4955
  br label %26, !dbg !4957

; <label>:179                                     ; preds = %38
  br label %180, !dbg !4958

; <label>:180                                     ; preds = %179
  %181 = load i8*, i8** %rpd, align 8, !dbg !4959
  %182 = call i32 @labellen(i8* %181), !dbg !4961
  %183 = add nsw i32 %182, 1, !dbg !4962
  %184 = load i8*, i8** %rpd, align 8, !dbg !4963
  %185 = sext i32 %183 to i64, !dbg !4963
  %186 = getelementptr inbounds i8, i8* %184, i64 %185, !dbg !4963
  store i8* %186, i8** %rpd, align 8, !dbg !4963
  br label %14, !dbg !4964

; <label>:187                                     ; preds = %23
  %188 = load i8*, i8** %bestmatch_rpd, align 8, !dbg !4965
  %189 = load i8*, i8** %6, align 8, !dbg !4967
  %190 = icmp ne i8* %188, %189, !dbg !4968
  br i1 %190, label %191, label %236, !dbg !4969

; <label>:191                                     ; preds = %187
  call void @llvm.dbg.declare(metadata i32* %i1, metadata !4970, metadata !2279), !dbg !4972
  store i32 0, i32* %i1, align 4, !dbg !4973
  br label %192, !dbg !4975

; <label>:192                                     ; preds = %201, %191
  %193 = load i32, i32* %i1, align 4, !dbg !4976
  %194 = sext i32 %193 to i64, !dbg !4979
  %195 = load i16*, i16** %4, align 8, !dbg !4979
  %196 = getelementptr inbounds i16, i16* %195, i64 %194, !dbg !4979
  %197 = load i16, i16* %196, align 2, !dbg !4979
  %198 = zext i16 %197 to i32, !dbg !4979
  %199 = icmp ne i32 %198, 0, !dbg !4980
  br i1 %199, label %200, label %204, !dbg !4981

; <label>:200                                     ; preds = %192
  br label %201, !dbg !4982

; <label>:201                                     ; preds = %200
  %202 = load i32, i32* %i1, align 4, !dbg !4984
  %203 = add nsw i32 %202, 1, !dbg !4984
  store i32 %203, i32* %i1, align 4, !dbg !4984
  br label %192, !dbg !4986

; <label>:204                                     ; preds = %192
  %205 = load i32, i32* %i1, align 4, !dbg !4987
  %206 = add nsw i32 %205, 1, !dbg !4989
  %207 = load i32, i32* %5, align 4, !dbg !4990
  %208 = icmp slt i32 %206, %207, !dbg !4991
  br i1 %208, label %209, label %235, !dbg !4992

; <label>:209                                     ; preds = %204
  %210 = load i8*, i8** %bestmatch_rpm, align 8, !dbg !4993
  %211 = load i8*, i8** %2, align 8, !dbg !4996
  %212 = ptrtoint i8* %210 to i64, !dbg !4997
  %213 = ptrtoint i8* %211 to i64, !dbg !4997
  %214 = sub i64 %212, %213, !dbg !4997
  %215 = trunc i64 %214 to i16, !dbg !4998
  %216 = zext i16 %215 to i32, !dbg !4998
  %217 = icmp slt i32 %216, 12287, !dbg !4999
  br i1 %217, label %218, label %234, !dbg !5000

; <label>:218                                     ; preds = %209
  %219 = load i8*, i8** %7, align 8, !dbg !5001
  %220 = load i8*, i8** %2, align 8, !dbg !5003
  %221 = ptrtoint i8* %219 to i64, !dbg !5004
  %222 = ptrtoint i8* %220 to i64, !dbg !5004
  %223 = sub i64 %221, %222, !dbg !5004
  %224 = trunc i64 %223 to i16, !dbg !5005
  %225 = load i32, i32* %i1, align 4, !dbg !5006
  %226 = sext i32 %225 to i64, !dbg !5007
  %227 = load i16*, i16** %4, align 8, !dbg !5007
  %228 = getelementptr inbounds i16, i16* %227, i64 %226, !dbg !5007
  store i16 %224, i16* %228, align 2, !dbg !5008
  %229 = load i32, i32* %i1, align 4, !dbg !5009
  %230 = add nsw i32 %229, 1, !dbg !5010
  %231 = sext i32 %230 to i64, !dbg !5011
  %232 = load i16*, i16** %4, align 8, !dbg !5011
  %233 = getelementptr inbounds i16, i16* %232, i64 %231, !dbg !5011
  store i16 0, i16* %233, align 2, !dbg !5012
  br label %234, !dbg !5013

; <label>:234                                     ; preds = %218, %209
  br label %235, !dbg !5014

; <label>:235                                     ; preds = %234, %204
  br label %236, !dbg !5015

; <label>:236                                     ; preds = %235, %187
  store i32 0, i32* %written_len, align 4, !dbg !5016
  %237 = load i8*, i8** %6, align 8, !dbg !5017
  store i8* %237, i8** %rpd, align 8, !dbg !5018
  br label %238, !dbg !5019

; <label>:238                                     ; preds = %260, %236
  %239 = load i8*, i8** %rpd, align 8, !dbg !5020
  %240 = load i8, i8* %239, align 1, !dbg !5022
  %241 = zext i8 %240 to i32, !dbg !5022
  %242 = icmp ne i32 %241, 0, !dbg !5022
  br i1 %242, label %243, label %247, !dbg !5023

; <label>:243                                     ; preds = %238
  %244 = load i8*, i8** %rpd, align 8, !dbg !5024
  %245 = load i8*, i8** %bestmatch_rpd, align 8, !dbg !5026
  %246 = icmp ne i8* %244, %245, !dbg !5027
  br label %247

; <label>:247                                     ; preds = %243, %238
  %248 = phi i1 [ false, %238 ], [ %246, %243 ]
  br i1 %248, label %249, label %276, !dbg !5028

; <label>:249                                     ; preds = %247
  call void @llvm.dbg.declare(metadata i32* %i2, metadata !5030, metadata !2279), !dbg !5032
  %250 = load i8*, i8** %rpd, align 8, !dbg !5033
  %251 = call i32 @labellen(i8* %250), !dbg !5034
  %252 = add nsw i32 %251, 1, !dbg !5035
  store i32 %252, i32* %i2, align 4, !dbg !5036
  %253 = load i8*, i8** %7, align 8, !dbg !5037
  %254 = load i32, i32* %i2, align 4, !dbg !5039
  %255 = sext i32 %254 to i64, !dbg !5040
  %256 = getelementptr inbounds i8, i8* %253, i64 %255, !dbg !5040
  %257 = load i8*, i8** %3, align 8, !dbg !5041
  %258 = icmp ugt i8* %256, %257, !dbg !5042
  br i1 %258, label %259, label %260, !dbg !5043

; <label>:259                                     ; preds = %249
  store i32 -1, i32* %1, align 4, !dbg !5044
  br label %322, !dbg !5044

; <label>:260                                     ; preds = %249
  %261 = load i8*, i8** %7, align 8, !dbg !5045
  %262 = load i8*, i8** %rpd, align 8, !dbg !5046
  %263 = load i32, i32* %i2, align 4, !dbg !5047
  %264 = sext i32 %263 to i64, !dbg !5047
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %261, i8* %262, i64 %264, i32 1, i1 false), !dbg !5048
  %265 = load i32, i32* %i2, align 4, !dbg !5049
  %266 = load i32, i32* %written_len, align 4, !dbg !5050
  %267 = add nsw i32 %266, %265, !dbg !5050
  store i32 %267, i32* %written_len, align 4, !dbg !5050
  %268 = load i32, i32* %i2, align 4, !dbg !5051
  %269 = load i8*, i8** %rpd, align 8, !dbg !5052
  %270 = sext i32 %268 to i64, !dbg !5052
  %271 = getelementptr inbounds i8, i8* %269, i64 %270, !dbg !5052
  store i8* %271, i8** %rpd, align 8, !dbg !5052
  %272 = load i32, i32* %i2, align 4, !dbg !5053
  %273 = load i8*, i8** %7, align 8, !dbg !5054
  %274 = sext i32 %272 to i64, !dbg !5054
  %275 = getelementptr inbounds i8, i8* %273, i64 %274, !dbg !5054
  store i8* %275, i8** %7, align 8, !dbg !5054
  br label %238, !dbg !5055

; <label>:276                                     ; preds = %247
  %277 = load i8*, i8** %rpd, align 8, !dbg !5057
  %278 = load i8*, i8** %bestmatch_rpd, align 8, !dbg !5059
  %279 = icmp eq i8* %277, %278, !dbg !5060
  br i1 %279, label %280, label %310, !dbg !5061

; <label>:280                                     ; preds = %276
  call void @llvm.dbg.declare(metadata i16* %us, metadata !5062, metadata !2279), !dbg !5064
  %281 = load i8*, i8** %7, align 8, !dbg !5065
  %282 = getelementptr inbounds i8, i8* %281, i64 2, !dbg !5067
  %283 = load i8*, i8** %3, align 8, !dbg !5068
  %284 = icmp ugt i8* %282, %283, !dbg !5069
  br i1 %284, label %285, label %286, !dbg !5070

; <label>:285                                     ; preds = %280
  store i32 -1, i32* %1, align 4, !dbg !5071
  br label %322, !dbg !5071

; <label>:286                                     ; preds = %280
  %287 = load i8*, i8** %bestmatch_rpm, align 8, !dbg !5072
  %288 = load i8*, i8** %2, align 8, !dbg !5073
  %289 = ptrtoint i8* %287 to i64, !dbg !5074
  %290 = ptrtoint i8* %288 to i64, !dbg !5074
  %291 = sub i64 %289, %290, !dbg !5074
  %292 = trunc i64 %291 to i16, !dbg !5075
  %293 = zext i16 %292 to i32, !dbg !5075
  %294 = or i32 %293, 49152, !dbg !5076
  %295 = trunc i32 %294 to i16, !dbg !5075
  store i16 %295, i16* %us, align 2, !dbg !5077
  %296 = load i16, i16* %us, align 2, !dbg !5078
  %297 = zext i16 %296 to i32, !dbg !5078
  %298 = ashr i32 %297, 8, !dbg !5078
  %299 = trunc i32 %298 to i8, !dbg !5078
  %300 = load i8*, i8** %7, align 8, !dbg !5078
  %301 = getelementptr inbounds i8, i8* %300, i32 1, !dbg !5078
  store i8* %301, i8** %7, align 8, !dbg !5078
  store i8 %299, i8* %300, align 1, !dbg !5078
  %302 = load i16, i16* %us, align 2, !dbg !5078
  %303 = trunc i16 %302 to i8, !dbg !5078
  %304 = load i8*, i8** %7, align 8, !dbg !5078
  %305 = getelementptr inbounds i8, i8* %304, i32 1, !dbg !5078
  store i8* %305, i8** %7, align 8, !dbg !5078
  store i8 %303, i8* %304, align 1, !dbg !5078
  %306 = load i32, i32* %written_len, align 4, !dbg !5080
  %307 = sext i32 %306 to i64, !dbg !5080
  %308 = add i64 %307, 2, !dbg !5080
  %309 = trunc i64 %308 to i32, !dbg !5080
  store i32 %309, i32* %written_len, align 4, !dbg !5080
  br label %314, !dbg !5081

; <label>:310                                     ; preds = %276
  %311 = load i8*, i8** %7, align 8, !dbg !5082
  store i8 0, i8* %311, align 1, !dbg !5084
  %312 = load i32, i32* %written_len, align 4, !dbg !5085
  %313 = add nsw i32 %312, 1, !dbg !5085
  store i32 %313, i32* %written_len, align 4, !dbg !5085
  br label %314

; <label>:314                                     ; preds = %310, %286
  %315 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 8), align 4, !dbg !5086
  %316 = icmp sgt i32 %315, 4, !dbg !5088
  br i1 %316, label %317, label %320, !dbg !5089

; <label>:317                                     ; preds = %314
  %318 = load i8*, i8** %fn, align 8, !dbg !5090
  %319 = load i32, i32* %written_len, align 4, !dbg !5091
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.58, i32 0, i32 0), i8* %318, i32 %319), !dbg !5092
  br label %320, !dbg !5092

; <label>:320                                     ; preds = %317, %314
  %321 = load i32, i32* %written_len, align 4, !dbg !5093
  store i32 %321, i32* %1, align 4, !dbg !5094
  br label %322, !dbg !5094

; <label>:322                                     ; preds = %320, %285, %259, %143, %64
  %323 = load i32, i32* %1, align 4, !dbg !5095
  ret i32 %323, !dbg !5095
}

; Function Attrs: nounwind uwtable
define i32 @mesg_assemble(%struct.generic_list* %an_list, %struct.generic_list* %ns_list, %struct.generic_list* %ar_list, i8* %buf, i16 zeroext %buflen, i8* %mesg, i32 %mesg_len) #0 !dbg !502 {
  %1 = alloca i32, align 4
  %2 = alloca %struct.generic_list*, align 8
  %3 = alloca %struct.generic_list*, align 8
  %4 = alloca %struct.generic_list*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i16, align 2
  %7 = alloca i8*, align 8
  %8 = alloca i32, align 4
  %dnames = alloca [64 x i16], align 16
  %ucp = alloca i8*, align 8
  %ucp_tmp = alloca i8*, align 8
  %written_len = alloca i32, align 4
  %ret = alloca i32, align 4
  %hdr = alloca %struct.mesg_hdr*, align 8
  %qdcnt = alloca i32, align 4
  store %struct.generic_list* %an_list, %struct.generic_list** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.generic_list** %2, metadata !5096, metadata !2279), !dbg !5097
  store %struct.generic_list* %ns_list, %struct.generic_list** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.generic_list** %3, metadata !5098, metadata !2279), !dbg !5099
  store %struct.generic_list* %ar_list, %struct.generic_list** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.generic_list** %4, metadata !5100, metadata !2279), !dbg !5101
  store i8* %buf, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !5102, metadata !2279), !dbg !5103
  store i16 %buflen, i16* %6, align 2
  call void @llvm.dbg.declare(metadata i16* %6, metadata !5104, metadata !2279), !dbg !5105
  store i8* %mesg, i8** %7, align 8
  call void @llvm.dbg.declare(metadata i8** %7, metadata !5106, metadata !2279), !dbg !5107
  store i32 %mesg_len, i32* %8, align 4
  call void @llvm.dbg.declare(metadata i32* %8, metadata !5108, metadata !2279), !dbg !5109
  call void @llvm.dbg.declare(metadata [64 x i16]* %dnames, metadata !5110, metadata !2279), !dbg !5114
  call void @llvm.dbg.declare(metadata i8** %ucp, metadata !5115, metadata !2279), !dbg !5116
  call void @llvm.dbg.declare(metadata i8** %ucp_tmp, metadata !5117, metadata !2279), !dbg !5118
  call void @llvm.dbg.declare(metadata i32* %written_len, metadata !5119, metadata !2279), !dbg !5120
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !5121, metadata !2279), !dbg !5122
  call void @llvm.dbg.declare(metadata %struct.mesg_hdr** %hdr, metadata !5123, metadata !2279), !dbg !5124
  %9 = load i8*, i8** %7, align 8, !dbg !5125
  %10 = icmp ne i8* %9, null, !dbg !5125
  br i1 %10, label %11, label %16, !dbg !5127

; <label>:11                                      ; preds = %0
  %12 = load i8*, i8** %5, align 8, !dbg !5128
  %13 = load i8*, i8** %7, align 8, !dbg !5129
  %14 = load i32, i32* %8, align 4, !dbg !5130
  %15 = sext i32 %14 to i64, !dbg !5130
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %12, i8* %13, i64 %15, i32 1, i1 false), !dbg !5131
  br label %20, !dbg !5131

; <label>:16                                      ; preds = %0
  %17 = load i8*, i8** %5, align 8, !dbg !5132
  %18 = load i16, i16* %6, align 2, !dbg !5133
  %19 = zext i16 %18 to i64, !dbg !5133
  call void @llvm.memset.p0i8.i64(i8* %17, i8 0, i64 %19, i32 1, i1 false), !dbg !5134
  br label %20

; <label>:20                                      ; preds = %16, %11
  %21 = load i8*, i8** %5, align 8, !dbg !5135
  %22 = bitcast i8* %21 to %struct.mesg_hdr*, !dbg !5136
  store %struct.mesg_hdr* %22, %struct.mesg_hdr** %hdr, align 8, !dbg !5137
  store i32 0, i32* %written_len, align 4, !dbg !5138
  %23 = load %struct.mesg_hdr*, %struct.mesg_hdr** %hdr, align 8, !dbg !5139
  %24 = getelementptr inbounds %struct.mesg_hdr, %struct.mesg_hdr* %23, i32 0, i32 1, !dbg !5140
  %25 = load i16, i16* %24, align 2, !dbg !5141
  %26 = and i16 %25, -129, !dbg !5141
  %27 = or i16 %26, 128, !dbg !5141
  store i16 %27, i16* %24, align 2, !dbg !5141
  %28 = load %struct.mesg_hdr*, %struct.mesg_hdr** %hdr, align 8, !dbg !5142
  %29 = getelementptr inbounds %struct.mesg_hdr, %struct.mesg_hdr* %28, i32 0, i32 3, !dbg !5143
  store i16 0, i16* %29, align 2, !dbg !5144
  %30 = load %struct.mesg_hdr*, %struct.mesg_hdr** %hdr, align 8, !dbg !5145
  %31 = getelementptr inbounds %struct.mesg_hdr, %struct.mesg_hdr* %30, i32 0, i32 4, !dbg !5146
  store i16 0, i16* %31, align 2, !dbg !5147
  %32 = load %struct.mesg_hdr*, %struct.mesg_hdr** %hdr, align 8, !dbg !5148
  %33 = getelementptr inbounds %struct.mesg_hdr, %struct.mesg_hdr* %32, i32 0, i32 5, !dbg !5149
  store i16 0, i16* %33, align 2, !dbg !5150
  %34 = load %struct.mesg_hdr*, %struct.mesg_hdr** %hdr, align 8, !dbg !5151
  %35 = getelementptr inbounds %struct.mesg_hdr, %struct.mesg_hdr* %34, i32 0, i32 2, !dbg !5153
  %36 = load i16, i16* %35, align 2, !dbg !5153
  %37 = icmp ne i16 %36, 0, !dbg !5151
  br i1 %37, label %38, label %79, !dbg !5154

; <label>:38                                      ; preds = %20
  call void @llvm.dbg.declare(metadata i32* %qdcnt, metadata !5155, metadata !2279), !dbg !5157
  %39 = load %struct.mesg_hdr*, %struct.mesg_hdr** %hdr, align 8, !dbg !5158
  %40 = getelementptr inbounds %struct.mesg_hdr, %struct.mesg_hdr* %39, i32 0, i32 2, !dbg !5159
  %41 = load i16, i16* %40, align 2, !dbg !5159
  %42 = call zeroext i16 @ntohs(i16 zeroext %41) #1, !dbg !5160
  %43 = zext i16 %42 to i32, !dbg !5160
  store i32 %43, i32* %qdcnt, align 4, !dbg !5157
  %44 = getelementptr inbounds [64 x i16], [64 x i16]* %dnames, i64 0, i64 0, !dbg !5161
  store i16 12, i16* %44, align 16, !dbg !5162
  %45 = getelementptr inbounds [64 x i16], [64 x i16]* %dnames, i64 0, i64 1, !dbg !5163
  store i16 0, i16* %45, align 2, !dbg !5164
  %46 = load i8*, i8** %5, align 8, !dbg !5165
  %47 = getelementptr inbounds i8, i8* %46, i64 12, !dbg !5166
  store i8* %47, i8** %ucp, align 8, !dbg !5167
  br label %48, !dbg !5168

; <label>:48                                      ; preds = %69, %38
  %49 = load i32, i32* %qdcnt, align 4, !dbg !5169
  %50 = add nsw i32 %49, -1, !dbg !5169
  store i32 %50, i32* %qdcnt, align 4, !dbg !5169
  %51 = icmp ne i32 %49, 0, !dbg !5171
  br i1 %51, label %52, label %72, !dbg !5171

; <label>:52                                      ; preds = %48
  %53 = load i8*, i8** %ucp, align 8, !dbg !5172
  %54 = load i8*, i8** %5, align 8, !dbg !5175
  %55 = load i32, i32* %8, align 4, !dbg !5176
  %56 = sext i32 %55 to i64, !dbg !5177
  %57 = getelementptr inbounds i8, i8* %54, i64 %56, !dbg !5177
  %58 = call i8* @mesg_skip_dname(i8* %53, i8* %57), !dbg !5178
  store i8* %58, i8** %ucp, align 8, !dbg !5179
  %59 = icmp ne i8* %58, null, !dbg !5179
  br i1 %59, label %60, label %68, !dbg !5180

; <label>:60                                      ; preds = %52
  %61 = load i8*, i8** %ucp, align 8, !dbg !5181
  %62 = getelementptr inbounds i8, i8* %61, i64 4, !dbg !5182
  %63 = load i8*, i8** %5, align 8, !dbg !5183
  %64 = load i32, i32* %8, align 4, !dbg !5184
  %65 = sext i32 %64 to i64, !dbg !5185
  %66 = getelementptr inbounds i8, i8* %63, i64 %65, !dbg !5185
  %67 = icmp ugt i8* %62, %66, !dbg !5186
  br i1 %67, label %68, label %69, !dbg !5187

; <label>:68                                      ; preds = %60, %52
  call void (i32, i8*, ...) @syslog(i32 5, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.12.109, i32 0, i32 0)), !dbg !5189
  store i32 -1, i32* %1, align 4, !dbg !5191
  br label %171, !dbg !5191

; <label>:69                                      ; preds = %60
  %70 = load i8*, i8** %ucp, align 8, !dbg !5192
  %71 = getelementptr inbounds i8, i8* %70, i64 4, !dbg !5192
  store i8* %71, i8** %ucp, align 8, !dbg !5192
  br label %48, !dbg !5193

; <label>:72                                      ; preds = %48
  %73 = load i8*, i8** %ucp, align 8, !dbg !5195
  %74 = load i8*, i8** %5, align 8, !dbg !5196
  %75 = ptrtoint i8* %73 to i64, !dbg !5197
  %76 = ptrtoint i8* %74 to i64, !dbg !5197
  %77 = sub i64 %75, %76, !dbg !5197
  %78 = trunc i64 %77 to i32, !dbg !5195
  store i32 %78, i32* %written_len, align 4, !dbg !5198
  br label %85, !dbg !5199

; <label>:79                                      ; preds = %20
  store i32 12, i32* %written_len, align 4, !dbg !5200
  %80 = load i8*, i8** %5, align 8, !dbg !5202
  %81 = load i32, i32* %written_len, align 4, !dbg !5203
  %82 = sext i32 %81 to i64, !dbg !5204
  %83 = getelementptr inbounds i8, i8* %80, i64 %82, !dbg !5204
  store i8* %83, i8** %ucp, align 8, !dbg !5205
  %84 = getelementptr inbounds [64 x i16], [64 x i16]* %dnames, i64 0, i64 0, !dbg !5206
  store i16 0, i16* %84, align 16, !dbg !5207
  br label %85

; <label>:85                                      ; preds = %79, %72
  %86 = load i8*, i8** %ucp, align 8, !dbg !5208
  store i8* %86, i8** %ucp_tmp, align 8, !dbg !5209
  %87 = load %struct.generic_list*, %struct.generic_list** %2, align 8, !dbg !5210
  %88 = load i8*, i8** %5, align 8, !dbg !5211
  %89 = load i8*, i8** %5, align 8, !dbg !5212
  %90 = load i16, i16* %6, align 2, !dbg !5213
  %91 = zext i16 %90 to i32, !dbg !5213
  %92 = sext i32 %91 to i64, !dbg !5214
  %93 = getelementptr inbounds i8, i8* %89, i64 %92, !dbg !5214
  %94 = getelementptr inbounds [64 x i16], [64 x i16]* %dnames, i32 0, i32 0, !dbg !5215
  %95 = load %struct.mesg_hdr*, %struct.mesg_hdr** %hdr, align 8, !dbg !5216
  %96 = getelementptr inbounds %struct.mesg_hdr, %struct.mesg_hdr* %95, i32 0, i32 3, !dbg !5217
  %97 = call i32 @mesg_write_rrset_list(%struct.generic_list* %87, i8* %88, i8* %93, i16* %94, i32 64, i8** %ucp, i16* %96), !dbg !5218
  store i32 %97, i32* %ret, align 4, !dbg !5219
  %98 = load i32, i32* %ret, align 4, !dbg !5220
  %99 = icmp slt i32 %98, 0, !dbg !5222
  br i1 %99, label %100, label %112, !dbg !5223

; <label>:100                                     ; preds = %85
  %101 = load %struct.mesg_hdr*, %struct.mesg_hdr** %hdr, align 8, !dbg !5224
  %102 = getelementptr inbounds %struct.mesg_hdr, %struct.mesg_hdr* %101, i32 0, i32 1, !dbg !5226
  %103 = load i16, i16* %102, align 2, !dbg !5227
  %104 = and i16 %103, -3, !dbg !5227
  %105 = or i16 %104, 2, !dbg !5227
  store i16 %105, i16* %102, align 2, !dbg !5227
  %106 = load i8*, i8** %ucp_tmp, align 8, !dbg !5228
  %107 = load i8*, i8** %5, align 8, !dbg !5229
  %108 = ptrtoint i8* %106 to i64, !dbg !5230
  %109 = ptrtoint i8* %107 to i64, !dbg !5230
  %110 = sub i64 %108, %109, !dbg !5230
  %111 = trunc i64 %110 to i32, !dbg !5228
  store i32 %111, i32* %1, align 4, !dbg !5231
  br label %171, !dbg !5231

; <label>:112                                     ; preds = %85
  %113 = load i32, i32* %ret, align 4, !dbg !5232
  %114 = load i32, i32* %written_len, align 4, !dbg !5233
  %115 = add nsw i32 %114, %113, !dbg !5233
  store i32 %115, i32* %written_len, align 4, !dbg !5233
  %116 = load i8*, i8** %ucp, align 8, !dbg !5234
  store i8* %116, i8** %ucp_tmp, align 8, !dbg !5235
  %117 = load %struct.generic_list*, %struct.generic_list** %3, align 8, !dbg !5236
  %118 = load i8*, i8** %5, align 8, !dbg !5237
  %119 = load i8*, i8** %5, align 8, !dbg !5238
  %120 = load i16, i16* %6, align 2, !dbg !5239
  %121 = zext i16 %120 to i32, !dbg !5239
  %122 = sext i32 %121 to i64, !dbg !5240
  %123 = getelementptr inbounds i8, i8* %119, i64 %122, !dbg !5240
  %124 = getelementptr inbounds [64 x i16], [64 x i16]* %dnames, i32 0, i32 0, !dbg !5241
  %125 = load %struct.mesg_hdr*, %struct.mesg_hdr** %hdr, align 8, !dbg !5242
  %126 = getelementptr inbounds %struct.mesg_hdr, %struct.mesg_hdr* %125, i32 0, i32 4, !dbg !5243
  %127 = call i32 @mesg_write_rrset_list(%struct.generic_list* %117, i8* %118, i8* %123, i16* %124, i32 64, i8** %ucp, i16* %126), !dbg !5244
  store i32 %127, i32* %ret, align 4, !dbg !5245
  %128 = load i32, i32* %ret, align 4, !dbg !5246
  %129 = icmp slt i32 %128, 0, !dbg !5248
  br i1 %129, label %130, label %142, !dbg !5249

; <label>:130                                     ; preds = %112
  %131 = load %struct.mesg_hdr*, %struct.mesg_hdr** %hdr, align 8, !dbg !5250
  %132 = getelementptr inbounds %struct.mesg_hdr, %struct.mesg_hdr* %131, i32 0, i32 1, !dbg !5252
  %133 = load i16, i16* %132, align 2, !dbg !5253
  %134 = and i16 %133, -3, !dbg !5253
  %135 = or i16 %134, 2, !dbg !5253
  store i16 %135, i16* %132, align 2, !dbg !5253
  %136 = load i8*, i8** %ucp_tmp, align 8, !dbg !5254
  %137 = load i8*, i8** %5, align 8, !dbg !5255
  %138 = ptrtoint i8* %136 to i64, !dbg !5256
  %139 = ptrtoint i8* %137 to i64, !dbg !5256
  %140 = sub i64 %138, %139, !dbg !5256
  %141 = trunc i64 %140 to i32, !dbg !5254
  store i32 %141, i32* %1, align 4, !dbg !5257
  br label %171, !dbg !5257

; <label>:142                                     ; preds = %112
  %143 = load i32, i32* %ret, align 4, !dbg !5258
  %144 = load i32, i32* %written_len, align 4, !dbg !5259
  %145 = add nsw i32 %144, %143, !dbg !5259
  store i32 %145, i32* %written_len, align 4, !dbg !5259
  %146 = load i8*, i8** %ucp, align 8, !dbg !5260
  store i8* %146, i8** %ucp_tmp, align 8, !dbg !5261
  %147 = load %struct.generic_list*, %struct.generic_list** %4, align 8, !dbg !5262
  %148 = load i8*, i8** %5, align 8, !dbg !5263
  %149 = load i8*, i8** %5, align 8, !dbg !5264
  %150 = load i16, i16* %6, align 2, !dbg !5265
  %151 = zext i16 %150 to i32, !dbg !5265
  %152 = sext i32 %151 to i64, !dbg !5266
  %153 = getelementptr inbounds i8, i8* %149, i64 %152, !dbg !5266
  %154 = getelementptr inbounds [64 x i16], [64 x i16]* %dnames, i32 0, i32 0, !dbg !5267
  %155 = load %struct.mesg_hdr*, %struct.mesg_hdr** %hdr, align 8, !dbg !5268
  %156 = getelementptr inbounds %struct.mesg_hdr, %struct.mesg_hdr* %155, i32 0, i32 5, !dbg !5269
  %157 = call i32 @mesg_write_rrset_list(%struct.generic_list* %147, i8* %148, i8* %153, i16* %154, i32 64, i8** %ucp, i16* %156), !dbg !5270
  store i32 %157, i32* %ret, align 4, !dbg !5271
  %158 = load i32, i32* %ret, align 4, !dbg !5272
  %159 = icmp slt i32 %158, 0, !dbg !5274
  br i1 %159, label %160, label %167, !dbg !5275

; <label>:160                                     ; preds = %142
  %161 = load i8*, i8** %ucp_tmp, align 8, !dbg !5276
  %162 = load i8*, i8** %5, align 8, !dbg !5277
  %163 = ptrtoint i8* %161 to i64, !dbg !5278
  %164 = ptrtoint i8* %162 to i64, !dbg !5278
  %165 = sub i64 %163, %164, !dbg !5278
  %166 = trunc i64 %165 to i32, !dbg !5276
  store i32 %166, i32* %1, align 4, !dbg !5279
  br label %171, !dbg !5279

; <label>:167                                     ; preds = %142
  %168 = load i32, i32* %written_len, align 4, !dbg !5280
  %169 = load i32, i32* %ret, align 4, !dbg !5281
  %170 = add nsw i32 %168, %169, !dbg !5282
  store i32 %170, i32* %1, align 4, !dbg !5283
  br label %171, !dbg !5283

; <label>:171                                     ; preds = %167, %160, %130, %100, %68
  %172 = load i32, i32* %1, align 4, !dbg !5284
  ret i32 %172, !dbg !5284
}

; Function Attrs: nounwind uwtable
define i32 @mesg_extract_rr(i8* %mesg, i8* %msg_end, i16 zeroext %r_type, i16 zeroext %r_class, i8* %rrp, i8* %buf, i32 %buflen) #0 !dbg !505 {
  %1 = alloca i32, align 4
  %2 = alloca i8*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i16, align 2
  %5 = alloca i16, align 2
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i32, align 4
  %i = alloca i32, align 4
  %written_len = alloca i32, align 4
  %rp = alloca i8*, align 8
  %wp = alloca i8*, align 8
  store i8* %mesg, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !5285, metadata !2279), !dbg !5286
  store i8* %msg_end, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !5287, metadata !2279), !dbg !5288
  store i16 %r_type, i16* %4, align 2
  call void @llvm.dbg.declare(metadata i16* %4, metadata !5289, metadata !2279), !dbg !5290
  store i16 %r_class, i16* %5, align 2
  call void @llvm.dbg.declare(metadata i16* %5, metadata !5291, metadata !2279), !dbg !5292
  store i8* %rrp, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !5293, metadata !2279), !dbg !5294
  store i8* %buf, i8** %7, align 8
  call void @llvm.dbg.declare(metadata i8** %7, metadata !5295, metadata !2279), !dbg !5296
  store i32 %buflen, i32* %8, align 4
  call void @llvm.dbg.declare(metadata i32* %8, metadata !5297, metadata !2279), !dbg !5298
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5299, metadata !2279), !dbg !5300
  call void @llvm.dbg.declare(metadata i32* %written_len, metadata !5301, metadata !2279), !dbg !5302
  call void @llvm.dbg.declare(metadata i8** %rp, metadata !5303, metadata !2279), !dbg !5304
  call void @llvm.dbg.declare(metadata i8** %wp, metadata !5305, metadata !2279), !dbg !5306
  store i32 0, i32* %written_len, align 4, !dbg !5307
  %9 = load i16, i16* %4, align 2, !dbg !5308
  %10 = zext i16 %9 to i32, !dbg !5308
  switch i32 %10, label %160 [
    i32 2, label %11
    i32 5, label %11
    i32 12, label %11
    i32 6, label %23
    i32 15, label %74
    i32 17, label %114
    i32 1, label %159
    i32 13, label %159
    i32 28, label %159
    i32 38, label %159
    i32 33, label %159
    i32 16, label %159
  ], !dbg !5309

; <label>:11                                      ; preds = %0, %0, %0
  %12 = load i8*, i8** %7, align 8, !dbg !5310
  %13 = load i32, i32* %8, align 4, !dbg !5313
  %14 = load i8*, i8** %6, align 8, !dbg !5314
  %15 = load i8*, i8** %2, align 8, !dbg !5315
  %16 = load i8*, i8** %3, align 8, !dbg !5316
  %17 = call i8* @dname_decompress(i8* %12, i32 %13, i8* %14, i8* %15, i8* %16, i32* %written_len), !dbg !5317
  %18 = icmp ne i8* %17, null, !dbg !5317
  br i1 %18, label %22, label %19, !dbg !5318

; <label>:19                                      ; preds = %11
  %20 = load i16, i16* %4, align 2, !dbg !5319
  %21 = call i8* @string_rtype(i16 zeroext %20), !dbg !5321
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.13.116, i32 0, i32 0), i8* %21), !dbg !5322
  store i32 -1, i32* %1, align 4, !dbg !5323
  br label %165, !dbg !5323

; <label>:22                                      ; preds = %11
  br label %163, !dbg !5324

; <label>:23                                      ; preds = %0
  %24 = load i8*, i8** %6, align 8, !dbg !5325
  store i8* %24, i8** %rp, align 8, !dbg !5326
  %25 = load i8*, i8** %7, align 8, !dbg !5327
  store i8* %25, i8** %wp, align 8, !dbg !5328
  %26 = load i8*, i8** %wp, align 8, !dbg !5329
  %27 = load i32, i32* %8, align 4, !dbg !5330
  %28 = load i8*, i8** %rp, align 8, !dbg !5331
  %29 = load i8*, i8** %2, align 8, !dbg !5332
  %30 = load i8*, i8** %3, align 8, !dbg !5333
  %31 = call i8* @dname_decompress(i8* %26, i32 %27, i8* %28, i8* %29, i8* %30, i32* %i), !dbg !5334
  store i8* %31, i8** %rp, align 8, !dbg !5335
  %32 = load i8*, i8** %rp, align 8, !dbg !5336
  %33 = icmp ne i8* %32, null, !dbg !5336
  br i1 %33, label %35, label %34, !dbg !5338

; <label>:34                                      ; preds = %23
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.14.117, i32 0, i32 0)), !dbg !5339
  store i32 -1, i32* %1, align 4, !dbg !5341
  br label %165, !dbg !5341

; <label>:35                                      ; preds = %23
  %36 = load i32, i32* %i, align 4, !dbg !5342
  %37 = load i8*, i8** %wp, align 8, !dbg !5343
  %38 = sext i32 %36 to i64, !dbg !5343
  %39 = getelementptr inbounds i8, i8* %37, i64 %38, !dbg !5343
  store i8* %39, i8** %wp, align 8, !dbg !5343
  %40 = load i8*, i8** %wp, align 8, !dbg !5344
  %41 = load i32, i32* %8, align 4, !dbg !5345
  %42 = sext i32 %41 to i64, !dbg !5345
  %43 = load i8*, i8** %wp, align 8, !dbg !5346
  %44 = load i8*, i8** %7, align 8, !dbg !5347
  %45 = ptrtoint i8* %43 to i64, !dbg !5348
  %46 = ptrtoint i8* %44 to i64, !dbg !5348
  %47 = sub i64 %45, %46, !dbg !5348
  %48 = sub nsw i64 %42, %47, !dbg !5349
  %49 = trunc i64 %48 to i32, !dbg !5345
  %50 = load i8*, i8** %rp, align 8, !dbg !5350
  %51 = load i8*, i8** %2, align 8, !dbg !5351
  %52 = load i8*, i8** %3, align 8, !dbg !5352
  %53 = call i8* @dname_decompress(i8* %40, i32 %49, i8* %50, i8* %51, i8* %52, i32* %i), !dbg !5353
  store i8* %53, i8** %rp, align 8, !dbg !5354
  %54 = load i8*, i8** %rp, align 8, !dbg !5355
  %55 = icmp ne i8* %54, null, !dbg !5355
  br i1 %55, label %57, label %56, !dbg !5357

; <label>:56                                      ; preds = %35
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.15.118, i32 0, i32 0)), !dbg !5358
  store i32 -1, i32* %1, align 4, !dbg !5360
  br label %165, !dbg !5360

; <label>:57                                      ; preds = %35
  %58 = load i32, i32* %i, align 4, !dbg !5361
  %59 = load i8*, i8** %wp, align 8, !dbg !5362
  %60 = sext i32 %58 to i64, !dbg !5362
  %61 = getelementptr inbounds i8, i8* %59, i64 %60, !dbg !5362
  store i8* %61, i8** %wp, align 8, !dbg !5362
  %62 = load i8*, i8** %wp, align 8, !dbg !5363
  %63 = load i8*, i8** %rp, align 8, !dbg !5364
  store i32 20, i32* %i, align 4, !dbg !5365
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %62, i8* %63, i64 20, i32 1, i1 false), !dbg !5366
  %64 = load i32, i32* %i, align 4, !dbg !5367
  %65 = load i8*, i8** %wp, align 8, !dbg !5368
  %66 = sext i32 %64 to i64, !dbg !5368
  %67 = getelementptr inbounds i8, i8* %65, i64 %66, !dbg !5368
  store i8* %67, i8** %wp, align 8, !dbg !5368
  %68 = load i8*, i8** %wp, align 8, !dbg !5369
  %69 = load i8*, i8** %7, align 8, !dbg !5370
  %70 = ptrtoint i8* %68 to i64, !dbg !5371
  %71 = ptrtoint i8* %69 to i64, !dbg !5371
  %72 = sub i64 %70, %71, !dbg !5371
  %73 = trunc i64 %72 to i32, !dbg !5369
  store i32 %73, i32* %written_len, align 4, !dbg !5372
  br label %163, !dbg !5373

; <label>:74                                      ; preds = %0
  %75 = load i8*, i8** %6, align 8, !dbg !5374
  store i8* %75, i8** %rp, align 8, !dbg !5375
  %76 = load i8*, i8** %7, align 8, !dbg !5376
  store i8* %76, i8** %wp, align 8, !dbg !5377
  %77 = load i8*, i8** %wp, align 8, !dbg !5378
  %78 = load i8*, i8** %rp, align 8, !dbg !5379
  store i32 2, i32* %i, align 4, !dbg !5380
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %77, i8* %78, i64 2, i32 1, i1 false), !dbg !5381
  %79 = load i32, i32* %i, align 4, !dbg !5382
  %80 = load i8*, i8** %wp, align 8, !dbg !5383
  %81 = sext i32 %79 to i64, !dbg !5383
  %82 = getelementptr inbounds i8, i8* %80, i64 %81, !dbg !5383
  store i8* %82, i8** %wp, align 8, !dbg !5383
  %83 = load i32, i32* %i, align 4, !dbg !5384
  %84 = load i8*, i8** %rp, align 8, !dbg !5385
  %85 = sext i32 %83 to i64, !dbg !5385
  %86 = getelementptr inbounds i8, i8* %84, i64 %85, !dbg !5385
  store i8* %86, i8** %rp, align 8, !dbg !5385
  %87 = load i8*, i8** %wp, align 8, !dbg !5386
  %88 = load i32, i32* %8, align 4, !dbg !5388
  %89 = sext i32 %88 to i64, !dbg !5388
  %90 = load i8*, i8** %wp, align 8, !dbg !5389
  %91 = load i8*, i8** %7, align 8, !dbg !5390
  %92 = ptrtoint i8* %90 to i64, !dbg !5391
  %93 = ptrtoint i8* %91 to i64, !dbg !5391
  %94 = sub i64 %92, %93, !dbg !5391
  %95 = sub nsw i64 %89, %94, !dbg !5392
  %96 = trunc i64 %95 to i32, !dbg !5388
  %97 = load i8*, i8** %rp, align 8, !dbg !5393
  %98 = load i8*, i8** %2, align 8, !dbg !5394
  %99 = load i8*, i8** %3, align 8, !dbg !5395
  %100 = call i8* @dname_decompress(i8* %87, i32 %96, i8* %97, i8* %98, i8* %99, i32* %i), !dbg !5396
  %101 = icmp ne i8* %100, null, !dbg !5396
  br i1 %101, label %103, label %102, !dbg !5397

; <label>:102                                     ; preds = %74
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.16.119, i32 0, i32 0)), !dbg !5398
  store i32 -1, i32* %1, align 4, !dbg !5400
  br label %165, !dbg !5400

; <label>:103                                     ; preds = %74
  %104 = load i32, i32* %i, align 4, !dbg !5401
  %105 = load i8*, i8** %wp, align 8, !dbg !5402
  %106 = sext i32 %104 to i64, !dbg !5402
  %107 = getelementptr inbounds i8, i8* %105, i64 %106, !dbg !5402
  store i8* %107, i8** %wp, align 8, !dbg !5402
  %108 = load i8*, i8** %wp, align 8, !dbg !5403
  %109 = load i8*, i8** %7, align 8, !dbg !5404
  %110 = ptrtoint i8* %108 to i64, !dbg !5405
  %111 = ptrtoint i8* %109 to i64, !dbg !5405
  %112 = sub i64 %110, %111, !dbg !5405
  %113 = trunc i64 %112 to i32, !dbg !5403
  store i32 %113, i32* %written_len, align 4, !dbg !5406
  br label %163, !dbg !5407

; <label>:114                                     ; preds = %0
  %115 = load i8*, i8** %6, align 8, !dbg !5408
  store i8* %115, i8** %rp, align 8, !dbg !5409
  %116 = load i8*, i8** %7, align 8, !dbg !5410
  store i8* %116, i8** %wp, align 8, !dbg !5411
  %117 = load i8*, i8** %wp, align 8, !dbg !5412
  %118 = load i32, i32* %8, align 4, !dbg !5413
  %119 = load i8*, i8** %rp, align 8, !dbg !5414
  %120 = load i8*, i8** %2, align 8, !dbg !5415
  %121 = load i8*, i8** %3, align 8, !dbg !5416
  %122 = call i8* @dname_decompress(i8* %117, i32 %118, i8* %119, i8* %120, i8* %121, i32* %i), !dbg !5417
  store i8* %122, i8** %rp, align 8, !dbg !5418
  %123 = load i8*, i8** %rp, align 8, !dbg !5419
  %124 = icmp ne i8* %123, null, !dbg !5419
  br i1 %124, label %126, label %125, !dbg !5421

; <label>:125                                     ; preds = %114
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.17.120, i32 0, i32 0)), !dbg !5422
  store i32 -1, i32* %1, align 4, !dbg !5424
  br label %165, !dbg !5424

; <label>:126                                     ; preds = %114
  %127 = load i32, i32* %i, align 4, !dbg !5425
  %128 = load i8*, i8** %wp, align 8, !dbg !5426
  %129 = sext i32 %127 to i64, !dbg !5426
  %130 = getelementptr inbounds i8, i8* %128, i64 %129, !dbg !5426
  store i8* %130, i8** %wp, align 8, !dbg !5426
  %131 = load i8*, i8** %wp, align 8, !dbg !5427
  %132 = load i32, i32* %8, align 4, !dbg !5428
  %133 = sext i32 %132 to i64, !dbg !5428
  %134 = load i8*, i8** %wp, align 8, !dbg !5429
  %135 = load i8*, i8** %7, align 8, !dbg !5430
  %136 = ptrtoint i8* %134 to i64, !dbg !5431
  %137 = ptrtoint i8* %135 to i64, !dbg !5431
  %138 = sub i64 %136, %137, !dbg !5431
  %139 = sub nsw i64 %133, %138, !dbg !5432
  %140 = trunc i64 %139 to i32, !dbg !5428
  %141 = load i8*, i8** %rp, align 8, !dbg !5433
  %142 = load i8*, i8** %2, align 8, !dbg !5434
  %143 = load i8*, i8** %3, align 8, !dbg !5435
  %144 = call i8* @dname_decompress(i8* %131, i32 %140, i8* %141, i8* %142, i8* %143, i32* %i), !dbg !5436
  store i8* %144, i8** %rp, align 8, !dbg !5437
  %145 = load i8*, i8** %rp, align 8, !dbg !5438
  %146 = icmp ne i8* %145, null, !dbg !5438
  br i1 %146, label %148, label %147, !dbg !5440

; <label>:147                                     ; preds = %126
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.18.121, i32 0, i32 0)), !dbg !5441
  store i32 -1, i32* %1, align 4, !dbg !5443
  br label %165, !dbg !5443

; <label>:148                                     ; preds = %126
  %149 = load i32, i32* %i, align 4, !dbg !5444
  %150 = load i8*, i8** %wp, align 8, !dbg !5445
  %151 = sext i32 %149 to i64, !dbg !5445
  %152 = getelementptr inbounds i8, i8* %150, i64 %151, !dbg !5445
  store i8* %152, i8** %wp, align 8, !dbg !5445
  %153 = load i8*, i8** %wp, align 8, !dbg !5446
  %154 = load i8*, i8** %7, align 8, !dbg !5447
  %155 = ptrtoint i8* %153 to i64, !dbg !5448
  %156 = ptrtoint i8* %154 to i64, !dbg !5448
  %157 = sub i64 %155, %156, !dbg !5448
  %158 = trunc i64 %157 to i32, !dbg !5446
  store i32 %158, i32* %written_len, align 4, !dbg !5449
  br label %163, !dbg !5450

; <label>:159                                     ; preds = %0, %0, %0, %0, %0, %0
  store i32 0, i32* %1, align 4, !dbg !5451
  br label %165, !dbg !5451

; <label>:160                                     ; preds = %0
  %161 = load i16, i16* %4, align 2, !dbg !5452
  %162 = zext i16 %161 to i32, !dbg !5452
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.19.122, i32 0, i32 0), i32 %162), !dbg !5453
  store i32 0, i32* %1, align 4, !dbg !5454
  br label %165, !dbg !5454

; <label>:163                                     ; preds = %148, %103, %57, %22
  %164 = load i32, i32* %written_len, align 4, !dbg !5455
  store i32 %164, i32* %1, align 4, !dbg !5456
  br label %165, !dbg !5456

; <label>:165                                     ; preds = %163, %160, %159, %147, %125, %102, %56, %34, %19
  %166 = load i32, i32* %1, align 4, !dbg !5457
  ret i32 %166, !dbg !5457
}

; Function Attrs: nounwind uwtable
define i8* @dname_decompress(i8* %buf, i32 %buflen, i8* %dname, i8* %m_head, i8* %m_tail, i32* %written) #0 !dbg !511 {
  %1 = alloca i8*, align 8
  %2 = alloca i8*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i32*, align 8
  %token_len = alloca i32, align 4
  %written_len = alloca i32, align 4
  %iter = alloca i32, align 4
  %cp = alloca i8*, align 8
  %next = alloca i8*, align 8
  %pktsiz = alloca i32, align 4
  %ui = alloca i16, align 2
  %bitlength = alloca i32, align 4
  %i = alloca i32, align 4
  %wp = alloca i8*, align 8
  %d1 = alloca i8, align 1
  %d2 = alloca i8, align 1
  %b = alloca i32, align 4
  store i8* %buf, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !5458, metadata !2279), !dbg !5459
  store i32 %buflen, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !5460, metadata !2279), !dbg !5461
  store i8* %dname, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !5462, metadata !2279), !dbg !5463
  store i8* %m_head, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !5464, metadata !2279), !dbg !5465
  store i8* %m_tail, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !5466, metadata !2279), !dbg !5467
  store i32* %written, i32** %7, align 8
  call void @llvm.dbg.declare(metadata i32** %7, metadata !5468, metadata !2279), !dbg !5469
  call void @llvm.dbg.declare(metadata i32* %token_len, metadata !5470, metadata !2279), !dbg !5471
  call void @llvm.dbg.declare(metadata i32* %written_len, metadata !5472, metadata !2279), !dbg !5473
  call void @llvm.dbg.declare(metadata i32* %iter, metadata !5474, metadata !2279), !dbg !5475
  call void @llvm.dbg.declare(metadata i8** %cp, metadata !5476, metadata !2279), !dbg !5477
  call void @llvm.dbg.declare(metadata i8** %next, metadata !5478, metadata !2279), !dbg !5479
  call void @llvm.dbg.declare(metadata i32* %pktsiz, metadata !5480, metadata !2279), !dbg !5481
  %8 = load i8*, i8** %6, align 8, !dbg !5482
  %9 = load i8*, i8** %5, align 8, !dbg !5483
  %10 = ptrtoint i8* %8 to i64, !dbg !5484
  %11 = ptrtoint i8* %9 to i64, !dbg !5484
  %12 = sub i64 %10, %11, !dbg !5484
  %13 = trunc i64 %12 to i32, !dbg !5482
  store i32 %13, i32* %pktsiz, align 4, !dbg !5481
  store i8* null, i8** %next, align 8, !dbg !5485
  store i32 0, i32* %token_len, align 4, !dbg !5486
  store i32 0, i32* %written_len, align 4, !dbg !5487
  %14 = load i8*, i8** %4, align 8, !dbg !5488
  store i8* %14, i8** %cp, align 8, !dbg !5490
  br label %15, !dbg !5491

; <label>:15                                      ; preds = %241, %0
  %16 = load i8*, i8** %cp, align 8, !dbg !5492
  %17 = load i8, i8* %16, align 1, !dbg !5495
  %18 = icmp ne i8 %17, 0, !dbg !5496
  br i1 %18, label %19, label %246, !dbg !5496

; <label>:19                                      ; preds = %15
  store i32 0, i32* %iter, align 4, !dbg !5497
  br label %20, !dbg !5499

; <label>:20                                      ; preds = %73, %19
  %21 = load i8*, i8** %cp, align 8, !dbg !5500
  %22 = load i8, i8* %21, align 1, !dbg !5502
  %23 = zext i8 %22 to i32, !dbg !5502
  %24 = and i32 %23, 192, !dbg !5503
  %25 = icmp eq i32 %24, 192, !dbg !5504
  br i1 %25, label %26, label %74, !dbg !5505

; <label>:26                                      ; preds = %20
  call void @llvm.dbg.declare(metadata i16* %ui, metadata !5506, metadata !2279), !dbg !5508
  %27 = load i32, i32* %iter, align 4, !dbg !5509
  %28 = add nsw i32 %27, 1, !dbg !5509
  store i32 %28, i32* %iter, align 4, !dbg !5509
  %29 = load i32, i32* %pktsiz, align 4, !dbg !5511
  %30 = icmp sge i32 %27, %29, !dbg !5512
  br i1 %30, label %31, label %32, !dbg !5513

; <label>:31                                      ; preds = %26
  store i8* null, i8** %1, align 8, !dbg !5514
  br label %262, !dbg !5514

; <label>:32                                      ; preds = %26
  %33 = load i8*, i8** %5, align 8, !dbg !5515
  %34 = icmp ne i8* %33, null, !dbg !5515
  br i1 %34, label %35, label %38, !dbg !5517

; <label>:35                                      ; preds = %32
  %36 = load i8*, i8** %6, align 8, !dbg !5518
  %37 = icmp ne i8* %36, null, !dbg !5518
  br i1 %37, label %39, label %38, !dbg !5520

; <label>:38                                      ; preds = %35, %32
  store i8* null, i8** %1, align 8, !dbg !5521
  br label %262, !dbg !5521

; <label>:39                                      ; preds = %35
  %40 = load i8*, i8** %cp, align 8, !dbg !5522
  %41 = getelementptr inbounds i8, i8* %40, i64 2, !dbg !5523
  store i8* %41, i8** %next, align 8, !dbg !5524
  %42 = load i8*, i8** %cp, align 8, !dbg !5525
  %43 = getelementptr inbounds i8, i8* %42, i32 1, !dbg !5525
  store i8* %43, i8** %cp, align 8, !dbg !5525
  %44 = load i8, i8* %42, align 1, !dbg !5525
  %45 = zext i8 %44 to i32, !dbg !5525
  %46 = shl i32 %45, 8, !dbg !5525
  %47 = trunc i32 %46 to i16, !dbg !5525
  store i16 %47, i16* %ui, align 2, !dbg !5525
  %48 = load i8*, i8** %cp, align 8, !dbg !5525
  %49 = getelementptr inbounds i8, i8* %48, i32 1, !dbg !5525
  store i8* %49, i8** %cp, align 8, !dbg !5525
  %50 = load i8, i8* %48, align 1, !dbg !5525
  %51 = zext i8 %50 to i32, !dbg !5525
  %52 = load i16, i16* %ui, align 2, !dbg !5525
  %53 = zext i16 %52 to i32, !dbg !5525
  %54 = or i32 %53, %51, !dbg !5525
  %55 = trunc i32 %54 to i16, !dbg !5525
  store i16 %55, i16* %ui, align 2, !dbg !5525
  %56 = load i16, i16* %ui, align 2, !dbg !5527
  %57 = zext i16 %56 to i32, !dbg !5527
  %58 = and i32 %57, -49153, !dbg !5528
  %59 = trunc i32 %58 to i16, !dbg !5527
  store i16 %59, i16* %ui, align 2, !dbg !5529
  %60 = load i8*, i8** %5, align 8, !dbg !5530
  %61 = load i16, i16* %ui, align 2, !dbg !5531
  %62 = zext i16 %61 to i32, !dbg !5531
  %63 = sext i32 %62 to i64, !dbg !5532
  %64 = getelementptr inbounds i8, i8* %60, i64 %63, !dbg !5532
  store i8* %64, i8** %cp, align 8, !dbg !5533
  %65 = load i8*, i8** %cp, align 8, !dbg !5534
  %66 = load i8*, i8** %5, align 8, !dbg !5536
  %67 = icmp ult i8* %65, %66, !dbg !5537
  br i1 %67, label %72, label %68, !dbg !5538

; <label>:68                                      ; preds = %39
  %69 = load i8*, i8** %6, align 8, !dbg !5539
  %70 = load i8*, i8** %cp, align 8, !dbg !5541
  %71 = icmp ult i8* %69, %70, !dbg !5542
  br i1 %71, label %72, label %73, !dbg !5543

; <label>:72                                      ; preds = %68, %39
  store i8* null, i8** %1, align 8, !dbg !5544
  br label %262, !dbg !5544

; <label>:73                                      ; preds = %68
  br label %20, !dbg !5545

; <label>:74                                      ; preds = %20
  %75 = load i8*, i8** %cp, align 8, !dbg !5546
  %76 = call i32 @labellen(i8* %75), !dbg !5547
  store i32 %76, i32* %token_len, align 4, !dbg !5548
  %77 = load i32, i32* %token_len, align 4, !dbg !5549
  %78 = icmp slt i32 %77, 0, !dbg !5551
  br i1 %78, label %79, label %80, !dbg !5552

; <label>:79                                      ; preds = %74
  store i8* null, i8** %1, align 8, !dbg !5553
  br label %262, !dbg !5553

; <label>:80                                      ; preds = %74
  %81 = load i32, i32* %token_len, align 4, !dbg !5554
  %82 = add nsw i32 %81, 1, !dbg !5554
  store i32 %82, i32* %token_len, align 4, !dbg !5554
  br label %83

; <label>:83                                      ; preds = %80
  %84 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 8), align 4, !dbg !5555
  %85 = icmp sgt i32 %84, 4, !dbg !5557
  br i1 %85, label %86, label %88, !dbg !5558

; <label>:86                                      ; preds = %83
  %87 = load i32, i32* %token_len, align 4, !dbg !5559
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.22.112, i32 0, i32 0), i32 %87), !dbg !5560
  br label %88, !dbg !5560

; <label>:88                                      ; preds = %86, %83
  %89 = load i32, i32* %written_len, align 4, !dbg !5561
  %90 = load i32, i32* %token_len, align 4, !dbg !5563
  %91 = add nsw i32 %89, %90, !dbg !5564
  %92 = load i32, i32* %3, align 4, !dbg !5565
  %93 = icmp sge i32 %91, %92, !dbg !5566
  br i1 %93, label %94, label %95, !dbg !5567

; <label>:94                                      ; preds = %88
  store i8* null, i8** %1, align 8, !dbg !5568
  br label %262, !dbg !5568

; <label>:95                                      ; preds = %88
  %96 = load i8*, i8** %6, align 8, !dbg !5569
  %97 = icmp ne i8* %96, null, !dbg !5569
  br i1 %97, label %98, label %106, !dbg !5571

; <label>:98                                      ; preds = %95
  %99 = load i8*, i8** %cp, align 8, !dbg !5572
  %100 = load i32, i32* %token_len, align 4, !dbg !5574
  %101 = sext i32 %100 to i64, !dbg !5575
  %102 = getelementptr inbounds i8, i8* %99, i64 %101, !dbg !5575
  %103 = load i8*, i8** %6, align 8, !dbg !5576
  %104 = icmp ugt i8* %102, %103, !dbg !5577
  br i1 %104, label %105, label %106, !dbg !5578

; <label>:105                                     ; preds = %98
  store i8* null, i8** %1, align 8, !dbg !5579
  br label %262, !dbg !5579

; <label>:106                                     ; preds = %98, %95
  %107 = load i32*, i32** %7, align 8, !dbg !5580
  %108 = icmp ne i32* %107, null, !dbg !5580
  br i1 %108, label %109, label %121, !dbg !5582

; <label>:109                                     ; preds = %106
  %110 = load i8*, i8** %2, align 8, !dbg !5583
  %111 = load i8*, i8** %cp, align 8, !dbg !5585
  %112 = load i32, i32* %token_len, align 4, !dbg !5586
  %113 = sext i32 %112 to i64, !dbg !5586
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %110, i8* %111, i64 %113, i32 1, i1 false), !dbg !5587
  %114 = load i32, i32* %token_len, align 4, !dbg !5588
  %115 = load i32, i32* %written_len, align 4, !dbg !5589
  %116 = add nsw i32 %115, %114, !dbg !5589
  store i32 %116, i32* %written_len, align 4, !dbg !5589
  %117 = load i32, i32* %token_len, align 4, !dbg !5590
  %118 = load i8*, i8** %2, align 8, !dbg !5591
  %119 = sext i32 %117 to i64, !dbg !5591
  %120 = getelementptr inbounds i8, i8* %118, i64 %119, !dbg !5591
  store i8* %120, i8** %2, align 8, !dbg !5591
  br label %240, !dbg !5592

; <label>:121                                     ; preds = %106
  %122 = load i8*, i8** %cp, align 8, !dbg !5593
  %123 = load i8, i8* %122, align 1, !dbg !5596
  %124 = zext i8 %123 to i32, !dbg !5596
  %125 = and i32 %124, 192, !dbg !5597
  %126 = icmp ne i32 %125, 64, !dbg !5598
  br i1 %126, label %127, label %146, !dbg !5599

; <label>:127                                     ; preds = %121
  %128 = load i8*, i8** %2, align 8, !dbg !5600
  %129 = load i8*, i8** %cp, align 8, !dbg !5602
  %130 = getelementptr inbounds i8, i8* %129, i64 1, !dbg !5603
  %131 = load i32, i32* %token_len, align 4, !dbg !5604
  %132 = sub nsw i32 %131, 1, !dbg !5605
  %133 = sext i32 %132 to i64, !dbg !5604
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %128, i8* %130, i64 %133, i32 1, i1 false), !dbg !5606
  %134 = load i8*, i8** %2, align 8, !dbg !5607
  %135 = load i32, i32* %token_len, align 4, !dbg !5608
  %136 = sub nsw i32 %135, 1, !dbg !5609
  %137 = sext i32 %136 to i64, !dbg !5610
  %138 = getelementptr inbounds i8, i8* %134, i64 %137, !dbg !5610
  store i8 46, i8* %138, align 1, !dbg !5611
  %139 = load i32, i32* %token_len, align 4, !dbg !5612
  %140 = load i32, i32* %written_len, align 4, !dbg !5613
  %141 = add nsw i32 %140, %139, !dbg !5613
  store i32 %141, i32* %written_len, align 4, !dbg !5613
  %142 = load i32, i32* %token_len, align 4, !dbg !5614
  %143 = load i8*, i8** %2, align 8, !dbg !5615
  %144 = sext i32 %142 to i64, !dbg !5615
  %145 = getelementptr inbounds i8, i8* %143, i64 %144, !dbg !5615
  store i8* %145, i8** %2, align 8, !dbg !5615
  br label %239, !dbg !5616

; <label>:146                                     ; preds = %121
  %147 = load i8*, i8** %cp, align 8, !dbg !5617
  %148 = load i8, i8* %147, align 1, !dbg !5620
  %149 = zext i8 %148 to i32, !dbg !5620
  %150 = icmp eq i32 %149, 65, !dbg !5621
  br i1 %150, label %151, label %238, !dbg !5620

; <label>:151                                     ; preds = %146
  call void @llvm.dbg.declare(metadata i32* %bitlength, metadata !5622, metadata !2279), !dbg !5624
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5625, metadata !2279), !dbg !5626
  call void @llvm.dbg.declare(metadata i8** %wp, metadata !5627, metadata !2279), !dbg !5628
  %152 = load i32, i32* %written_len, align 4, !dbg !5629
  %153 = load i32, i32* %token_len, align 4, !dbg !5631
  %154 = mul nsw i32 %153, 2, !dbg !5632
  %155 = add nsw i32 %152, %154, !dbg !5633
  %156 = add nsw i32 %155, 7, !dbg !5634
  %157 = load i32, i32* %3, align 4, !dbg !5635
  %158 = icmp sge i32 %156, %157, !dbg !5636
  br i1 %158, label %159, label %160, !dbg !5637

; <label>:159                                     ; preds = %151
  store i8* null, i8** %1, align 8, !dbg !5638
  br label %262, !dbg !5638

; <label>:160                                     ; preds = %151
  %161 = load i8*, i8** %2, align 8, !dbg !5639
  store i8* %161, i8** %wp, align 8, !dbg !5640
  %162 = load i8*, i8** %wp, align 8, !dbg !5641
  %163 = call i32 (i8*, i8*, ...) @sprintf(i8* %162, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.23.113, i32 0, i32 0)) #10, !dbg !5642
  %164 = load i8*, i8** %wp, align 8, !dbg !5643
  %165 = sext i32 %163 to i64, !dbg !5643
  %166 = getelementptr inbounds i8, i8* %164, i64 %165, !dbg !5643
  store i8* %166, i8** %wp, align 8, !dbg !5643
  store i32 1, i32* %i, align 4, !dbg !5644
  br label %167, !dbg !5646

; <label>:167                                     ; preds = %202, %160
  %168 = load i32, i32* %i, align 4, !dbg !5647
  %169 = load i32, i32* %token_len, align 4, !dbg !5650
  %170 = sub nsw i32 %169, 1, !dbg !5651
  %171 = icmp slt i32 %168, %170, !dbg !5652
  br i1 %171, label %172, label %205, !dbg !5653

; <label>:172                                     ; preds = %167
  call void @llvm.dbg.declare(metadata i8* %d1, metadata !5654, metadata !2279), !dbg !5656
  call void @llvm.dbg.declare(metadata i8* %d2, metadata !5657, metadata !2279), !dbg !5658
  call void @llvm.dbg.declare(metadata i32* %b, metadata !5659, metadata !2279), !dbg !5660
  %173 = load i8*, i8** %cp, align 8, !dbg !5661
  %174 = getelementptr inbounds i8, i8* %173, i64 1, !dbg !5662
  %175 = load i32, i32* %i, align 4, !dbg !5663
  %176 = sext i32 %175 to i64, !dbg !5664
  %177 = getelementptr inbounds i8, i8* %174, i64 %176, !dbg !5664
  %178 = load i8, i8* %177, align 1, !dbg !5665
  %179 = zext i8 %178 to i32, !dbg !5666
  store i32 %179, i32* %b, align 4, !dbg !5667
  %180 = load i32, i32* %b, align 4, !dbg !5668
  %181 = lshr i32 %180, 4, !dbg !5669
  %182 = and i32 %181, 15, !dbg !5670
  %183 = zext i32 %182 to i64, !dbg !5671
  %184 = load i8*, i8** @hex, align 8, !dbg !5671
  %185 = getelementptr inbounds i8, i8* %184, i64 %183, !dbg !5671
  %186 = load i8, i8* %185, align 1, !dbg !5671
  store i8 %186, i8* %d1, align 1, !dbg !5672
  %187 = load i32, i32* %b, align 4, !dbg !5673
  %188 = and i32 %187, 15, !dbg !5674
  %189 = zext i32 %188 to i64, !dbg !5675
  %190 = load i8*, i8** @hex, align 8, !dbg !5675
  %191 = getelementptr inbounds i8, i8* %190, i64 %189, !dbg !5675
  %192 = load i8, i8* %191, align 1, !dbg !5675
  store i8 %192, i8* %d2, align 1, !dbg !5676
  %193 = load i8*, i8** %wp, align 8, !dbg !5677
  %194 = load i8, i8* %d1, align 1, !dbg !5678
  %195 = zext i8 %194 to i32, !dbg !5678
  %196 = load i8, i8* %d2, align 1, !dbg !5679
  %197 = zext i8 %196 to i32, !dbg !5679
  %198 = call i32 (i8*, i8*, ...) @sprintf(i8* %193, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.24.114, i32 0, i32 0), i32 %195, i32 %197) #10, !dbg !5680
  %199 = load i8*, i8** %wp, align 8, !dbg !5681
  %200 = sext i32 %198 to i64, !dbg !5681
  %201 = getelementptr inbounds i8, i8* %199, i64 %200, !dbg !5681
  store i8* %201, i8** %wp, align 8, !dbg !5681
  br label %202, !dbg !5682

; <label>:202                                     ; preds = %172
  %203 = load i32, i32* %i, align 4, !dbg !5683
  %204 = add nsw i32 %203, 1, !dbg !5683
  store i32 %204, i32* %i, align 4, !dbg !5683
  br label %167, !dbg !5685

; <label>:205                                     ; preds = %167
  %206 = load i8*, i8** %cp, align 8, !dbg !5686
  %207 = getelementptr inbounds i8, i8* %206, i64 1, !dbg !5687
  %208 = load i8, i8* %207, align 1, !dbg !5688
  %209 = zext i8 %208 to i32, !dbg !5688
  %210 = icmp ne i32 %209, 0, !dbg !5688
  br i1 %210, label %211, label %216, !dbg !5688

; <label>:211                                     ; preds = %205
  %212 = load i8*, i8** %cp, align 8, !dbg !5689
  %213 = getelementptr inbounds i8, i8* %212, i64 1, !dbg !5691
  %214 = load i8, i8* %213, align 1, !dbg !5692
  %215 = zext i8 %214 to i32, !dbg !5692
  br label %217, !dbg !5693

; <label>:216                                     ; preds = %205
  br label %217, !dbg !5694

; <label>:217                                     ; preds = %216, %211
  %218 = phi i32 [ %215, %211 ], [ 256, %216 ], !dbg !5696
  store i32 %218, i32* %bitlength, align 4, !dbg !5698
  %219 = load i8*, i8** %wp, align 8, !dbg !5699
  %220 = load i32, i32* %bitlength, align 4, !dbg !5700
  %221 = call i32 (i8*, i8*, ...) @sprintf(i8* %219, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.25.115, i32 0, i32 0), i32 %220) #10, !dbg !5701
  %222 = load i8*, i8** %wp, align 8, !dbg !5702
  %223 = sext i32 %221 to i64, !dbg !5702
  %224 = getelementptr inbounds i8, i8* %222, i64 %223, !dbg !5702
  store i8* %224, i8** %wp, align 8, !dbg !5702
  %225 = load i8*, i8** %wp, align 8, !dbg !5703
  %226 = load i8*, i8** %2, align 8, !dbg !5704
  %227 = ptrtoint i8* %225 to i64, !dbg !5705
  %228 = ptrtoint i8* %226 to i64, !dbg !5705
  %229 = sub i64 %227, %228, !dbg !5705
  %230 = load i32, i32* %written_len, align 4, !dbg !5706
  %231 = sext i32 %230 to i64, !dbg !5706
  %232 = add nsw i64 %231, %229, !dbg !5706
  %233 = trunc i64 %232 to i32, !dbg !5706
  store i32 %233, i32* %written_len, align 4, !dbg !5706
  %234 = load i32, i32* %written_len, align 4, !dbg !5707
  %235 = load i8*, i8** %2, align 8, !dbg !5708
  %236 = sext i32 %234 to i64, !dbg !5708
  %237 = getelementptr inbounds i8, i8* %235, i64 %236, !dbg !5708
  store i8* %237, i8** %2, align 8, !dbg !5708
  br label %238, !dbg !5709

; <label>:238                                     ; preds = %217, %146
  br label %239

; <label>:239                                     ; preds = %238, %127
  br label %240

; <label>:240                                     ; preds = %239, %109
  br label %241, !dbg !5710

; <label>:241                                     ; preds = %240
  %242 = load i32, i32* %token_len, align 4, !dbg !5711
  %243 = load i8*, i8** %cp, align 8, !dbg !5713
  %244 = sext i32 %242 to i64, !dbg !5713
  %245 = getelementptr inbounds i8, i8* %243, i64 %244, !dbg !5713
  store i8* %245, i8** %cp, align 8, !dbg !5713
  br label %15, !dbg !5714

; <label>:246                                     ; preds = %15
  %247 = load i8*, i8** %2, align 8, !dbg !5715
  store i8 0, i8* %247, align 1, !dbg !5716
  %248 = load i32*, i32** %7, align 8, !dbg !5717
  %249 = icmp ne i32* %248, null, !dbg !5717
  br i1 %249, label %250, label %254, !dbg !5719

; <label>:250                                     ; preds = %246
  %251 = load i32, i32* %written_len, align 4, !dbg !5720
  %252 = add nsw i32 %251, 1, !dbg !5721
  %253 = load i32*, i32** %7, align 8, !dbg !5722
  store i32 %252, i32* %253, align 4, !dbg !5723
  br label %254, !dbg !5724

; <label>:254                                     ; preds = %250, %246
  %255 = load i8*, i8** %next, align 8, !dbg !5725
  %256 = icmp ne i8* %255, null, !dbg !5725
  br i1 %256, label %260, label %257, !dbg !5727

; <label>:257                                     ; preds = %254
  %258 = load i8*, i8** %cp, align 8, !dbg !5728
  %259 = getelementptr inbounds i8, i8* %258, i64 1, !dbg !5729
  store i8* %259, i8** %next, align 8, !dbg !5730
  br label %260, !dbg !5731

; <label>:260                                     ; preds = %257, %254
  %261 = load i8*, i8** %next, align 8, !dbg !5732
  store i8* %261, i8** %1, align 8, !dbg !5733
  br label %262, !dbg !5733

; <label>:262                                     ; preds = %260, %159, %105, %94, %79, %72, %38, %31
  %263 = load i8*, i8** %1, align 8, !dbg !5734
  ret i8* %263, !dbg !5734
}

; Function Attrs: nounwind
declare i32 @sprintf(i8*, i8*, ...) #5

; Function Attrs: nounwind uwtable
define i32 @mesg_parse(i8* %msg, i32 %msg_len, %struct.generic_list* %an_list, %struct.generic_list* %ns_list, %struct.generic_list* %ar_list) #0 !dbg !508 {
  %1 = alloca i32, align 4
  %2 = alloca i8*, align 8
  %3 = alloca i32, align 4
  %4 = alloca %struct.generic_list*, align 8
  %5 = alloca %struct.generic_list*, align 8
  %6 = alloca %struct.generic_list*, align 8
  %fn = alloca i8*, align 8
  %hdr = alloca %struct.mesg_hdr*, align 8
  %rp = alloca i8*, align 8
  store i8* %msg, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !5735, metadata !2279), !dbg !5736
  store i32 %msg_len, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !5737, metadata !2279), !dbg !5738
  store %struct.generic_list* %an_list, %struct.generic_list** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.generic_list** %4, metadata !5739, metadata !2279), !dbg !5740
  store %struct.generic_list* %ns_list, %struct.generic_list** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.generic_list** %5, metadata !5741, metadata !2279), !dbg !5742
  store %struct.generic_list* %ar_list, %struct.generic_list** %6, align 8
  call void @llvm.dbg.declare(metadata %struct.generic_list** %6, metadata !5743, metadata !2279), !dbg !5744
  call void @llvm.dbg.declare(metadata i8** %fn, metadata !5745, metadata !2279), !dbg !5746
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.20.125, i32 0, i32 0), i8** %fn, align 8, !dbg !5746
  call void @llvm.dbg.declare(metadata %struct.mesg_hdr** %hdr, metadata !5747, metadata !2279), !dbg !5748
  call void @llvm.dbg.declare(metadata i8** %rp, metadata !5749, metadata !2279), !dbg !5750
  %7 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 8), align 4, !dbg !5751
  %8 = icmp sgt i32 %7, 4, !dbg !5753
  br i1 %8, label %9, label %11, !dbg !5754

; <label>:9                                       ; preds = %0
  %10 = load i8*, i8** %fn, align 8, !dbg !5755
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.21.102, i32 0, i32 0), i8* %10), !dbg !5756
  br label %11, !dbg !5756

; <label>:11                                      ; preds = %9, %0
  %12 = load i32, i32* %3, align 4, !dbg !5757
  %13 = sext i32 %12 to i64, !dbg !5757
  %14 = icmp ult i64 %13, 12, !dbg !5759
  br i1 %14, label %15, label %16, !dbg !5760

; <label>:15                                      ; preds = %11
  store i32 -1, i32* %1, align 4, !dbg !5761
  br label %86, !dbg !5761

; <label>:16                                      ; preds = %11
  %17 = load i8*, i8** %2, align 8, !dbg !5762
  %18 = bitcast i8* %17 to %struct.mesg_hdr*, !dbg !5763
  store %struct.mesg_hdr* %18, %struct.mesg_hdr** %hdr, align 8, !dbg !5764
  %19 = load %struct.mesg_hdr*, %struct.mesg_hdr** %hdr, align 8, !dbg !5765
  %20 = getelementptr inbounds %struct.mesg_hdr, %struct.mesg_hdr* %19, i64 1, !dbg !5766
  %21 = bitcast %struct.mesg_hdr* %20 to i8*, !dbg !5767
  store i8* %21, i8** %rp, align 8, !dbg !5768
  %22 = load %struct.mesg_hdr*, %struct.mesg_hdr** %hdr, align 8, !dbg !5769
  %23 = getelementptr inbounds %struct.mesg_hdr, %struct.mesg_hdr* %22, i32 0, i32 2, !dbg !5771
  %24 = load i16, i16* %23, align 2, !dbg !5771
  %25 = icmp ne i16 %24, 0, !dbg !5769
  br i1 %25, label %26, label %43, !dbg !5772

; <label>:26                                      ; preds = %16
  %27 = load i8*, i8** %rp, align 8, !dbg !5773
  %28 = load i8*, i8** %2, align 8, !dbg !5775
  %29 = load i32, i32* %3, align 4, !dbg !5776
  %30 = sext i32 %29 to i64, !dbg !5777
  %31 = getelementptr inbounds i8, i8* %28, i64 %30, !dbg !5777
  %32 = call i8* @mesg_skip_dname(i8* %27, i8* %31), !dbg !5778
  store i8* %32, i8** %rp, align 8, !dbg !5779
  %33 = load i8*, i8** %rp, align 8, !dbg !5780
  %34 = getelementptr inbounds i8, i8* %33, i64 4, !dbg !5780
  store i8* %34, i8** %rp, align 8, !dbg !5780
  %35 = load i8*, i8** %rp, align 8, !dbg !5781
  %36 = load i8*, i8** %2, align 8, !dbg !5783
  %37 = load i32, i32* %3, align 4, !dbg !5784
  %38 = sext i32 %37 to i64, !dbg !5785
  %39 = getelementptr inbounds i8, i8* %36, i64 %38, !dbg !5785
  %40 = icmp ugt i8* %35, %39, !dbg !5786
  br i1 %40, label %41, label %42, !dbg !5787

; <label>:41                                      ; preds = %26
  store i32 -1, i32* %1, align 4, !dbg !5788
  br label %86, !dbg !5788

; <label>:42                                      ; preds = %26
  br label %43, !dbg !5789

; <label>:43                                      ; preds = %42, %16
  %44 = load %struct.generic_list*, %struct.generic_list** %4, align 8, !dbg !5790
  %45 = load i8*, i8** %rp, align 8, !dbg !5791
  %46 = load %struct.mesg_hdr*, %struct.mesg_hdr** %hdr, align 8, !dbg !5792
  %47 = getelementptr inbounds %struct.mesg_hdr, %struct.mesg_hdr* %46, i32 0, i32 3, !dbg !5793
  %48 = load i16, i16* %47, align 2, !dbg !5793
  %49 = call zeroext i16 @ntohs(i16 zeroext %48) #1, !dbg !5794
  %50 = zext i16 %49 to i32, !dbg !5794
  %51 = load i8*, i8** %2, align 8, !dbg !5795
  %52 = load i32, i32* %3, align 4, !dbg !5796
  %53 = call i8* @mesg_read_sec(%struct.generic_list* %44, i8* %45, i32 %50, i8* %51, i32 %52), !dbg !5797
  store i8* %53, i8** %rp, align 8, !dbg !5799
  %54 = load i8*, i8** %rp, align 8, !dbg !5800
  %55 = icmp ne i8* %54, null, !dbg !5800
  br i1 %55, label %57, label %56, !dbg !5802

; <label>:56                                      ; preds = %43
  store i32 -1, i32* %1, align 4, !dbg !5803
  br label %86, !dbg !5803

; <label>:57                                      ; preds = %43
  %58 = load %struct.generic_list*, %struct.generic_list** %5, align 8, !dbg !5804
  %59 = load i8*, i8** %rp, align 8, !dbg !5805
  %60 = load %struct.mesg_hdr*, %struct.mesg_hdr** %hdr, align 8, !dbg !5806
  %61 = getelementptr inbounds %struct.mesg_hdr, %struct.mesg_hdr* %60, i32 0, i32 4, !dbg !5807
  %62 = load i16, i16* %61, align 2, !dbg !5807
  %63 = call zeroext i16 @ntohs(i16 zeroext %62) #1, !dbg !5808
  %64 = zext i16 %63 to i32, !dbg !5808
  %65 = load i8*, i8** %2, align 8, !dbg !5809
  %66 = load i32, i32* %3, align 4, !dbg !5810
  %67 = call i8* @mesg_read_sec(%struct.generic_list* %58, i8* %59, i32 %64, i8* %65, i32 %66), !dbg !5811
  store i8* %67, i8** %rp, align 8, !dbg !5812
  %68 = load i8*, i8** %rp, align 8, !dbg !5813
  %69 = icmp ne i8* %68, null, !dbg !5813
  br i1 %69, label %71, label %70, !dbg !5815

; <label>:70                                      ; preds = %57
  store i32 -1, i32* %1, align 4, !dbg !5816
  br label %86, !dbg !5816

; <label>:71                                      ; preds = %57
  %72 = load %struct.generic_list*, %struct.generic_list** %6, align 8, !dbg !5817
  %73 = load i8*, i8** %rp, align 8, !dbg !5818
  %74 = load %struct.mesg_hdr*, %struct.mesg_hdr** %hdr, align 8, !dbg !5819
  %75 = getelementptr inbounds %struct.mesg_hdr, %struct.mesg_hdr* %74, i32 0, i32 5, !dbg !5820
  %76 = load i16, i16* %75, align 2, !dbg !5820
  %77 = call zeroext i16 @ntohs(i16 zeroext %76) #1, !dbg !5821
  %78 = zext i16 %77 to i32, !dbg !5821
  %79 = load i8*, i8** %2, align 8, !dbg !5822
  %80 = load i32, i32* %3, align 4, !dbg !5823
  %81 = call i8* @mesg_read_sec(%struct.generic_list* %72, i8* %73, i32 %78, i8* %79, i32 %80), !dbg !5824
  store i8* %81, i8** %rp, align 8, !dbg !5825
  %82 = load i8*, i8** %rp, align 8, !dbg !5826
  %83 = icmp ne i8* %82, null, !dbg !5826
  br i1 %83, label %85, label %84, !dbg !5828

; <label>:84                                      ; preds = %71
  store i32 -1, i32* %1, align 4, !dbg !5829
  br label %86, !dbg !5829

; <label>:85                                      ; preds = %71
  store i32 0, i32* %1, align 4, !dbg !5830
  br label %86, !dbg !5830

; <label>:86                                      ; preds = %85, %84, %70, %56, %41, %15
  %87 = load i32, i32* %1, align 4, !dbg !5831
  ret i32 %87, !dbg !5831
}

; Function Attrs: nounwind uwtable
define internal i8* @mesg_read_sec(%struct.generic_list* %target_list, i8* %section, i32 %count, i8* %mesg, i32 %mesg_len) #0 !dbg !526 {
  %1 = alloca i8*, align 8
  %2 = alloca %struct.generic_list*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  %fn = alloca i8*, align 8
  %rc_list = alloca %struct.generic_list*, align 8
  %gl = alloca %struct.generic_list*, align 8
  %buf = alloca [512 x i8], align 16
  %msg_end = alloca i8*, align 8
  %rp = alloca i8*, align 8
  %i = alloca i32, align 4
  %rname = alloca i8*, align 8
  %rp_ex = alloca i8*, align 8
  %rdp = alloca i8*, align 8
  %r_type = alloca i16, align 2
  %r_class = alloca i16, align 2
  %rdlen = alloca i16, align 2
  %rdlen_ex = alloca i16, align 2
  %r_ttl = alloca i32, align 4
  %rrl = alloca %struct.rr_list*, align 8
  %rc = alloca %struct.RRset_Couple*, align 8
  %rc1 = alloca %struct.RRset_Couple*, align 8
  %dname_len = alloca i32, align 4
  %ret = alloca i32, align 4
  %rc2 = alloca %struct.RRset_Couple*, align 8
  %rrs = alloca %struct.rr_set*, align 8
  store %struct.generic_list* %target_list, %struct.generic_list** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.generic_list** %2, metadata !5832, metadata !2279), !dbg !5833
  store i8* %section, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !5834, metadata !2279), !dbg !5835
  store i32 %count, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !5836, metadata !2279), !dbg !5837
  store i8* %mesg, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !5838, metadata !2279), !dbg !5839
  store i32 %mesg_len, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !5840, metadata !2279), !dbg !5841
  call void @llvm.dbg.declare(metadata i8** %fn, metadata !5842, metadata !2279), !dbg !5843
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.59, i32 0, i32 0), i8** %fn, align 8, !dbg !5843
  call void @llvm.dbg.declare(metadata %struct.generic_list** %rc_list, metadata !5844, metadata !2279), !dbg !5845
  call void @llvm.dbg.declare(metadata %struct.generic_list** %gl, metadata !5846, metadata !2279), !dbg !5847
  call void @llvm.dbg.declare(metadata [512 x i8]* %buf, metadata !5848, metadata !2279), !dbg !5852
  call void @llvm.dbg.declare(metadata i8** %msg_end, metadata !5853, metadata !2279), !dbg !5854
  call void @llvm.dbg.declare(metadata i8** %rp, metadata !5855, metadata !2279), !dbg !5856
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5857, metadata !2279), !dbg !5858
  %7 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 8), align 4, !dbg !5859
  %8 = icmp sgt i32 %7, 4, !dbg !5861
  br i1 %8, label %9, label %11, !dbg !5862

; <label>:9                                       ; preds = %0
  %10 = load i8*, i8** %fn, align 8, !dbg !5863
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.21.102, i32 0, i32 0), i8* %10), !dbg !5864
  br label %11, !dbg !5864

; <label>:11                                      ; preds = %9, %0
  %12 = call %struct.generic_list* @list_init(), !dbg !5865
  store %struct.generic_list* %12, %struct.generic_list** %rc_list, align 8, !dbg !5866
  %13 = load %struct.generic_list*, %struct.generic_list** %rc_list, align 8, !dbg !5867
  %14 = icmp ne %struct.generic_list* %13, null, !dbg !5867
  br i1 %14, label %16, label %15, !dbg !5869

; <label>:15                                      ; preds = %11
  store i8* null, i8** %1, align 8, !dbg !5870
  br label %386, !dbg !5870

; <label>:16                                      ; preds = %11
  %17 = load i8*, i8** %3, align 8, !dbg !5871
  store i8* %17, i8** %rp, align 8, !dbg !5872
  %18 = load i8*, i8** %5, align 8, !dbg !5873
  %19 = load i32, i32* %6, align 4, !dbg !5874
  %20 = sext i32 %19 to i64, !dbg !5875
  %21 = getelementptr inbounds i8, i8* %18, i64 %20, !dbg !5875
  store i8* %21, i8** %msg_end, align 8, !dbg !5876
  store i32 0, i32* %i, align 4, !dbg !5877
  br label %22, !dbg !5879

; <label>:22                                      ; preds = %293, %16
  %23 = load i32, i32* %i, align 4, !dbg !5880
  %24 = load i32, i32* %4, align 4, !dbg !5883
  %25 = icmp slt i32 %23, %24, !dbg !5884
  br i1 %25, label %26, label %296, !dbg !5885

; <label>:26                                      ; preds = %22
  call void @llvm.dbg.declare(metadata i8** %rname, metadata !5886, metadata !2279), !dbg !5888
  call void @llvm.dbg.declare(metadata i8** %rp_ex, metadata !5889, metadata !2279), !dbg !5890
  call void @llvm.dbg.declare(metadata i8** %rdp, metadata !5891, metadata !2279), !dbg !5892
  call void @llvm.dbg.declare(metadata i16* %r_type, metadata !5893, metadata !2279), !dbg !5894
  call void @llvm.dbg.declare(metadata i16* %r_class, metadata !5895, metadata !2279), !dbg !5896
  call void @llvm.dbg.declare(metadata i16* %rdlen, metadata !5897, metadata !2279), !dbg !5898
  call void @llvm.dbg.declare(metadata i16* %rdlen_ex, metadata !5899, metadata !2279), !dbg !5900
  call void @llvm.dbg.declare(metadata i32* %r_ttl, metadata !5901, metadata !2279), !dbg !5902
  call void @llvm.dbg.declare(metadata %struct.rr_list** %rrl, metadata !5903, metadata !2279), !dbg !5904
  %27 = load i8*, i8** %rp, align 8, !dbg !5905
  store i8* %27, i8** %rname, align 8, !dbg !5906
  %28 = load i8*, i8** %rp, align 8, !dbg !5907
  %29 = load i8*, i8** %msg_end, align 8, !dbg !5908
  %30 = call i8* @mesg_skip_dname(i8* %28, i8* %29), !dbg !5909
  store i8* %30, i8** %rp, align 8, !dbg !5910
  %31 = load i8*, i8** %rp, align 8, !dbg !5911
  %32 = icmp ne i8* %31, null, !dbg !5911
  br i1 %32, label %34, label %33, !dbg !5913

; <label>:33                                      ; preds = %26
  br label %383, !dbg !5914

; <label>:34                                      ; preds = %26
  %35 = load i8*, i8** %rp, align 8, !dbg !5915
  %36 = getelementptr inbounds i8, i8* %35, i64 6, !dbg !5917
  %37 = getelementptr inbounds i8, i8* %36, i64 4, !dbg !5918
  %38 = load i8*, i8** %msg_end, align 8, !dbg !5919
  %39 = icmp ugt i8* %37, %38, !dbg !5920
  br i1 %39, label %40, label %41, !dbg !5921

; <label>:40                                      ; preds = %34
  br label %383, !dbg !5922

; <label>:41                                      ; preds = %34
  %42 = load i8*, i8** %rp, align 8, !dbg !5923
  %43 = getelementptr inbounds i8, i8* %42, i32 1, !dbg !5923
  store i8* %43, i8** %rp, align 8, !dbg !5923
  %44 = load i8, i8* %42, align 1, !dbg !5923
  %45 = zext i8 %44 to i32, !dbg !5923
  %46 = shl i32 %45, 8, !dbg !5923
  %47 = trunc i32 %46 to i16, !dbg !5923
  store i16 %47, i16* %r_type, align 2, !dbg !5923
  %48 = load i8*, i8** %rp, align 8, !dbg !5923
  %49 = getelementptr inbounds i8, i8* %48, i32 1, !dbg !5923
  store i8* %49, i8** %rp, align 8, !dbg !5923
  %50 = load i8, i8* %48, align 1, !dbg !5923
  %51 = zext i8 %50 to i32, !dbg !5923
  %52 = load i16, i16* %r_type, align 2, !dbg !5923
  %53 = zext i16 %52 to i32, !dbg !5923
  %54 = or i32 %53, %51, !dbg !5923
  %55 = trunc i32 %54 to i16, !dbg !5923
  store i16 %55, i16* %r_type, align 2, !dbg !5923
  %56 = load i8*, i8** %rp, align 8, !dbg !5925
  %57 = getelementptr inbounds i8, i8* %56, i32 1, !dbg !5925
  store i8* %57, i8** %rp, align 8, !dbg !5925
  %58 = load i8, i8* %56, align 1, !dbg !5925
  %59 = zext i8 %58 to i32, !dbg !5925
  %60 = shl i32 %59, 8, !dbg !5925
  %61 = trunc i32 %60 to i16, !dbg !5925
  store i16 %61, i16* %r_class, align 2, !dbg !5925
  %62 = load i8*, i8** %rp, align 8, !dbg !5925
  %63 = getelementptr inbounds i8, i8* %62, i32 1, !dbg !5925
  store i8* %63, i8** %rp, align 8, !dbg !5925
  %64 = load i8, i8* %62, align 1, !dbg !5925
  %65 = zext i8 %64 to i32, !dbg !5925
  %66 = load i16, i16* %r_class, align 2, !dbg !5925
  %67 = zext i16 %66 to i32, !dbg !5925
  %68 = or i32 %67, %65, !dbg !5925
  %69 = trunc i32 %68 to i16, !dbg !5925
  store i16 %69, i16* %r_class, align 2, !dbg !5925
  %70 = load i8*, i8** %rp, align 8, !dbg !5927
  %71 = getelementptr inbounds i8, i8* %70, i32 1, !dbg !5927
  store i8* %71, i8** %rp, align 8, !dbg !5927
  %72 = load i8, i8* %70, align 1, !dbg !5927
  %73 = zext i8 %72 to i32, !dbg !5927
  %74 = shl i32 %73, 8, !dbg !5927
  store i32 %74, i32* %r_ttl, align 4, !dbg !5927
  %75 = load i8*, i8** %rp, align 8, !dbg !5927
  %76 = getelementptr inbounds i8, i8* %75, i32 1, !dbg !5927
  store i8* %76, i8** %rp, align 8, !dbg !5927
  %77 = load i8, i8* %75, align 1, !dbg !5927
  %78 = zext i8 %77 to i32, !dbg !5927
  %79 = load i32, i32* %r_ttl, align 4, !dbg !5927
  %80 = or i32 %79, %78, !dbg !5927
  store i32 %80, i32* %r_ttl, align 4, !dbg !5927
  %81 = load i32, i32* %r_ttl, align 4, !dbg !5927
  %82 = shl i32 %81, 8, !dbg !5927
  store i32 %82, i32* %r_ttl, align 4, !dbg !5927
  %83 = load i8*, i8** %rp, align 8, !dbg !5927
  %84 = getelementptr inbounds i8, i8* %83, i32 1, !dbg !5927
  store i8* %84, i8** %rp, align 8, !dbg !5927
  %85 = load i8, i8* %83, align 1, !dbg !5927
  %86 = zext i8 %85 to i32, !dbg !5927
  %87 = load i32, i32* %r_ttl, align 4, !dbg !5927
  %88 = or i32 %87, %86, !dbg !5927
  store i32 %88, i32* %r_ttl, align 4, !dbg !5927
  %89 = load i32, i32* %r_ttl, align 4, !dbg !5927
  %90 = shl i32 %89, 8, !dbg !5927
  store i32 %90, i32* %r_ttl, align 4, !dbg !5927
  %91 = load i8*, i8** %rp, align 8, !dbg !5927
  %92 = getelementptr inbounds i8, i8* %91, i32 1, !dbg !5927
  store i8* %92, i8** %rp, align 8, !dbg !5927
  %93 = load i8, i8* %91, align 1, !dbg !5927
  %94 = zext i8 %93 to i32, !dbg !5927
  %95 = load i32, i32* %r_ttl, align 4, !dbg !5927
  %96 = or i32 %95, %94, !dbg !5927
  store i32 %96, i32* %r_ttl, align 4, !dbg !5927
  %97 = load i8*, i8** %rp, align 8, !dbg !5929
  %98 = getelementptr inbounds i8, i8* %97, i32 1, !dbg !5929
  store i8* %98, i8** %rp, align 8, !dbg !5929
  %99 = load i8, i8* %97, align 1, !dbg !5929
  %100 = zext i8 %99 to i32, !dbg !5929
  %101 = shl i32 %100, 8, !dbg !5929
  %102 = trunc i32 %101 to i16, !dbg !5929
  store i16 %102, i16* %rdlen, align 2, !dbg !5929
  %103 = load i8*, i8** %rp, align 8, !dbg !5929
  %104 = getelementptr inbounds i8, i8* %103, i32 1, !dbg !5929
  store i8* %104, i8** %rp, align 8, !dbg !5929
  %105 = load i8, i8* %103, align 1, !dbg !5929
  %106 = zext i8 %105 to i32, !dbg !5929
  %107 = load i16, i16* %rdlen, align 2, !dbg !5929
  %108 = zext i16 %107 to i32, !dbg !5929
  %109 = or i32 %108, %106, !dbg !5929
  %110 = trunc i32 %109 to i16, !dbg !5929
  store i16 %110, i16* %rdlen, align 2, !dbg !5929
  %111 = load i8*, i8** %rp, align 8, !dbg !5931
  store i8* %111, i8** %rdp, align 8, !dbg !5932
  %112 = load i16, i16* %rdlen, align 2, !dbg !5933
  %113 = zext i16 %112 to i32, !dbg !5933
  %114 = load i8*, i8** %rp, align 8, !dbg !5934
  %115 = sext i32 %113 to i64, !dbg !5934
  %116 = getelementptr inbounds i8, i8* %114, i64 %115, !dbg !5934
  store i8* %116, i8** %rp, align 8, !dbg !5934
  %117 = load i8*, i8** %rp, align 8, !dbg !5935
  %118 = load i8*, i8** %msg_end, align 8, !dbg !5937
  %119 = icmp ugt i8* %117, %118, !dbg !5938
  br i1 %119, label %120, label %121, !dbg !5939

; <label>:120                                     ; preds = %41
  br label %383, !dbg !5940

; <label>:121                                     ; preds = %41
  %122 = load %struct.generic_list*, %struct.generic_list** %rc_list, align 8, !dbg !5941
  %123 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %122, i32 0, i32 0, !dbg !5943
  %124 = load %struct.generic_list*, %struct.generic_list** %123, align 8, !dbg !5943
  store %struct.generic_list* %124, %struct.generic_list** %gl, align 8, !dbg !5944
  br label %125, !dbg !5945

; <label>:125                                     ; preds = %189, %121
  %126 = load %struct.generic_list*, %struct.generic_list** %gl, align 8, !dbg !5946
  %127 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %126, i32 0, i32 2, !dbg !5949
  %128 = load i8*, i8** %127, align 8, !dbg !5949
  %129 = icmp ne i8* %128, null, !dbg !5950
  br i1 %129, label %130, label %193, !dbg !5950

; <label>:130                                     ; preds = %125
  call void @llvm.dbg.declare(metadata %struct.RRset_Couple** %rc, metadata !5951, metadata !2279), !dbg !5953
  %131 = load %struct.generic_list*, %struct.generic_list** %gl, align 8, !dbg !5954
  %132 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %131, i32 0, i32 2, !dbg !5955
  %133 = load i8*, i8** %132, align 8, !dbg !5955
  %134 = bitcast i8* %133 to %struct.RRset_Couple*, !dbg !5956
  store %struct.RRset_Couple* %134, %struct.RRset_Couple** %rc, align 8, !dbg !5957
  %135 = load %struct.RRset_Couple*, %struct.RRset_Couple** %rc, align 8, !dbg !5958
  %136 = getelementptr inbounds %struct.RRset_Couple, %struct.RRset_Couple* %135, i32 0, i32 0, !dbg !5960
  %137 = load %struct.rr_set*, %struct.rr_set** %136, align 8, !dbg !5960
  %138 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %137, i32 0, i32 2, !dbg !5961
  %139 = bitcast %union.u_key* %138 to %struct.key_info**, !dbg !5962
  %140 = load %struct.key_info*, %struct.key_info** %139, align 8, !dbg !5962
  %141 = getelementptr inbounds %struct.key_info, %struct.key_info* %140, i32 0, i32 0, !dbg !5963
  %142 = load i16, i16* %141, align 2, !dbg !5963
  %143 = zext i16 %142 to i32, !dbg !5958
  %144 = load i16, i16* %r_type, align 2, !dbg !5964
  %145 = zext i16 %144 to i32, !dbg !5964
  %146 = icmp eq i32 %143, %145, !dbg !5965
  br i1 %146, label %147, label %188, !dbg !5966

; <label>:147                                     ; preds = %130
  %148 = load %struct.RRset_Couple*, %struct.RRset_Couple** %rc, align 8, !dbg !5967
  %149 = getelementptr inbounds %struct.RRset_Couple, %struct.RRset_Couple* %148, i32 0, i32 0, !dbg !5968
  %150 = load %struct.rr_set*, %struct.rr_set** %149, align 8, !dbg !5968
  %151 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %150, i32 0, i32 2, !dbg !5969
  %152 = bitcast %union.u_key* %151 to %struct.key_info**, !dbg !5970
  %153 = load %struct.key_info*, %struct.key_info** %152, align 8, !dbg !5970
  %154 = getelementptr inbounds %struct.key_info, %struct.key_info* %153, i32 0, i32 1, !dbg !5971
  %155 = load i16, i16* %154, align 2, !dbg !5971
  %156 = zext i16 %155 to i32, !dbg !5967
  %157 = load i16, i16* %r_class, align 2, !dbg !5972
  %158 = zext i16 %157 to i32, !dbg !5972
  %159 = icmp eq i32 %156, %158, !dbg !5973
  br i1 %159, label %160, label %188, !dbg !5974

; <label>:160                                     ; preds = %147
  %161 = load i8*, i8** %5, align 8, !dbg !5975
  %162 = load i8*, i8** %rname, align 8, !dbg !5976
  %163 = load %struct.RRset_Couple*, %struct.RRset_Couple** %rc, align 8, !dbg !5977
  %164 = getelementptr inbounds %struct.RRset_Couple, %struct.RRset_Couple* %163, i32 0, i32 0, !dbg !5977
  %165 = load %struct.rr_set*, %struct.rr_set** %164, align 8, !dbg !5977
  %166 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %165, i32 0, i32 2, !dbg !5977
  %167 = bitcast %union.u_key* %166 to %struct.key_info**, !dbg !5977
  %168 = load %struct.key_info*, %struct.key_info** %167, align 8, !dbg !5977
  %169 = bitcast %struct.key_info* %168 to i8*, !dbg !5977
  %170 = getelementptr inbounds i8, i8* %169, i64 6, !dbg !5977
  %171 = call i32 @mesg_dname_cmp(i8* %161, i8* %162, i8* %170), !dbg !5978
  %172 = icmp ne i32 %171, 0, !dbg !5978
  br i1 %172, label %188, label %173, !dbg !5979

; <label>:173                                     ; preds = %160
  %174 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 8), align 4, !dbg !5981
  %175 = icmp sgt i32 %174, 4, !dbg !5984
  br i1 %175, label %176, label %187, !dbg !5985

; <label>:176                                     ; preds = %173
  %177 = load i8*, i8** %fn, align 8, !dbg !5986
  %178 = load %struct.RRset_Couple*, %struct.RRset_Couple** %rc, align 8, !dbg !5987
  %179 = getelementptr inbounds %struct.RRset_Couple, %struct.RRset_Couple* %178, i32 0, i32 0, !dbg !5987
  %180 = load %struct.rr_set*, %struct.rr_set** %179, align 8, !dbg !5987
  %181 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %180, i32 0, i32 2, !dbg !5987
  %182 = bitcast %union.u_key* %181 to %struct.key_info**, !dbg !5987
  %183 = load %struct.key_info*, %struct.key_info** %182, align 8, !dbg !5987
  %184 = bitcast %struct.key_info* %183 to i8*, !dbg !5987
  %185 = getelementptr inbounds i8, i8* %184, i64 6, !dbg !5987
  %186 = load i8*, i8** %rname, align 8, !dbg !5988
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.60, i32 0, i32 0), i8* %177, i8* %185, i8* %186), !dbg !5989
  br label %187, !dbg !5989

; <label>:187                                     ; preds = %176, %173
  br label %193, !dbg !5990

; <label>:188                                     ; preds = %160, %147, %130
  br label %189, !dbg !5991

; <label>:189                                     ; preds = %188
  %190 = load %struct.generic_list*, %struct.generic_list** %gl, align 8, !dbg !5992
  %191 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %190, i32 0, i32 0, !dbg !5994
  %192 = load %struct.generic_list*, %struct.generic_list** %191, align 8, !dbg !5994
  store %struct.generic_list* %192, %struct.generic_list** %gl, align 8, !dbg !5995
  br label %125, !dbg !5996

; <label>:193                                     ; preds = %187, %125
  %194 = load %struct.generic_list*, %struct.generic_list** %gl, align 8, !dbg !5997
  %195 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %194, i32 0, i32 2, !dbg !5999
  %196 = load i8*, i8** %195, align 8, !dbg !5999
  %197 = icmp ne i8* %196, null, !dbg !5997
  br i1 %197, label %245, label %198, !dbg !6000

; <label>:198                                     ; preds = %193
  call void @llvm.dbg.declare(metadata %struct.RRset_Couple** %rc1, metadata !6001, metadata !2279), !dbg !6003
  call void @llvm.dbg.declare(metadata i32* %dname_len, metadata !6004, metadata !2279), !dbg !6005
  %199 = getelementptr inbounds [512 x i8], [512 x i8]* %buf, i32 0, i32 0, !dbg !6006
  %200 = load i8*, i8** %rname, align 8, !dbg !6008
  %201 = load i8*, i8** %5, align 8, !dbg !6009
  %202 = load i8*, i8** %msg_end, align 8, !dbg !6010
  %203 = call i8* @dname_decompress(i8* %199, i32 512, i8* %200, i8* %201, i8* %202, i32* %dname_len), !dbg !6011
  %204 = icmp ne i8* %203, null, !dbg !6011
  br i1 %204, label %206, label %205, !dbg !6012

; <label>:205                                     ; preds = %198
  br label %383, !dbg !6013

; <label>:206                                     ; preds = %198
  %207 = call noalias i8* @malloc(i64 16) #10, !dbg !6014
  %208 = bitcast i8* %207 to %struct.RRset_Couple*, !dbg !6014
  store %struct.RRset_Couple* %208, %struct.RRset_Couple** %rc1, align 8, !dbg !6015
  %209 = load %struct.RRset_Couple*, %struct.RRset_Couple** %rc1, align 8, !dbg !6016
  %210 = icmp ne %struct.RRset_Couple* %209, null, !dbg !6016
  br i1 %210, label %212, label %211, !dbg !6018

; <label>:211                                     ; preds = %206
  br label %383, !dbg !6019

; <label>:212                                     ; preds = %206
  %213 = call %struct.rr_list* @rr_list_alloc(), !dbg !6020
  %214 = load %struct.RRset_Couple*, %struct.RRset_Couple** %rc1, align 8, !dbg !6021
  %215 = getelementptr inbounds %struct.RRset_Couple, %struct.RRset_Couple* %214, i32 0, i32 1, !dbg !6022
  store %struct.rr_list* %213, %struct.rr_list** %215, align 8, !dbg !6023
  %216 = load i16, i16* %r_type, align 2, !dbg !6024
  %217 = load i16, i16* %r_class, align 2, !dbg !6025
  %218 = load i32, i32* %dname_len, align 4, !dbg !6026
  %219 = trunc i32 %218 to i16, !dbg !6026
  %220 = getelementptr inbounds [512 x i8], [512 x i8]* %buf, i32 0, i32 0, !dbg !6027
  %221 = call %struct.rr_set* @rrset_create(i16 zeroext %216, i16 zeroext %217, i16 zeroext %219, i8* %220, %struct.rr_list* null), !dbg !6028
  %222 = load %struct.RRset_Couple*, %struct.RRset_Couple** %rc1, align 8, !dbg !6029
  %223 = getelementptr inbounds %struct.RRset_Couple, %struct.RRset_Couple* %222, i32 0, i32 0, !dbg !6030
  store %struct.rr_set* %221, %struct.rr_set** %223, align 8, !dbg !6031
  %224 = load %struct.RRset_Couple*, %struct.RRset_Couple** %rc1, align 8, !dbg !6032
  %225 = getelementptr inbounds %struct.RRset_Couple, %struct.RRset_Couple* %224, i32 0, i32 1, !dbg !6034
  %226 = load %struct.rr_list*, %struct.rr_list** %225, align 8, !dbg !6034
  %227 = icmp ne %struct.rr_list* %226, null, !dbg !6032
  br i1 %227, label %228, label %239, !dbg !6035

; <label>:228                                     ; preds = %212
  %229 = load %struct.RRset_Couple*, %struct.RRset_Couple** %rc1, align 8, !dbg !6036
  %230 = getelementptr inbounds %struct.RRset_Couple, %struct.RRset_Couple* %229, i32 0, i32 0, !dbg !6038
  %231 = load %struct.rr_set*, %struct.rr_set** %230, align 8, !dbg !6038
  %232 = icmp ne %struct.rr_set* %231, null, !dbg !6036
  br i1 %232, label %233, label %239, !dbg !6039

; <label>:233                                     ; preds = %228
  %234 = load %struct.generic_list*, %struct.generic_list** %rc_list, align 8, !dbg !6040
  %235 = load %struct.RRset_Couple*, %struct.RRset_Couple** %rc1, align 8, !dbg !6042
  %236 = bitcast %struct.RRset_Couple* %235 to i8*, !dbg !6042
  %237 = call i32 @list_add(%struct.generic_list* %234, i8* %236), !dbg !6043
  %238 = icmp ne i32 %237, 0, !dbg !6043
  br i1 %238, label %239, label %241, !dbg !6044

; <label>:239                                     ; preds = %233, %228, %212
  %240 = load %struct.RRset_Couple*, %struct.RRset_Couple** %rc1, align 8, !dbg !6045
  call void @rrset_couple_free(%struct.RRset_Couple* %240), !dbg !6047
  br label %383, !dbg !6048

; <label>:241                                     ; preds = %233
  %242 = load %struct.generic_list*, %struct.generic_list** %rc_list, align 8, !dbg !6049
  %243 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %242, i32 0, i32 0, !dbg !6050
  %244 = load %struct.generic_list*, %struct.generic_list** %243, align 8, !dbg !6050
  store %struct.generic_list* %244, %struct.generic_list** %gl, align 8, !dbg !6051
  br label %245, !dbg !6052

; <label>:245                                     ; preds = %241, %193
  %246 = load i16, i16* %rdlen, align 2, !dbg !6053
  %247 = icmp ne i16 %246, 0, !dbg !6053
  br i1 %247, label %248, label %270, !dbg !6055

; <label>:248                                     ; preds = %245
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6056, metadata !2279), !dbg !6058
  %249 = load i8*, i8** %5, align 8, !dbg !6059
  %250 = load i8*, i8** %msg_end, align 8, !dbg !6060
  %251 = load i16, i16* %r_type, align 2, !dbg !6061
  %252 = load i16, i16* %r_class, align 2, !dbg !6062
  %253 = load i8*, i8** %rdp, align 8, !dbg !6063
  %254 = getelementptr inbounds [512 x i8], [512 x i8]* %buf, i32 0, i32 0, !dbg !6064
  %255 = call i32 @mesg_extract_rr(i8* %249, i8* %250, i16 zeroext %251, i16 zeroext %252, i8* %253, i8* %254, i32 512), !dbg !6065
  store i32 %255, i32* %ret, align 4, !dbg !6066
  %256 = load i32, i32* %ret, align 4, !dbg !6067
  %257 = icmp slt i32 %256, 0, !dbg !6069
  br i1 %257, label %258, label %259, !dbg !6070

; <label>:258                                     ; preds = %248
  br label %383, !dbg !6071

; <label>:259                                     ; preds = %248
  %260 = load i32, i32* %ret, align 4, !dbg !6072
  %261 = icmp ne i32 %260, 0, !dbg !6072
  br i1 %261, label %265, label %262, !dbg !6074

; <label>:262                                     ; preds = %259
  %263 = load i8*, i8** %rdp, align 8, !dbg !6075
  store i8* %263, i8** %rp_ex, align 8, !dbg !6077
  %264 = load i16, i16* %rdlen, align 2, !dbg !6078
  store i16 %264, i16* %rdlen_ex, align 2, !dbg !6079
  br label %269, !dbg !6080

; <label>:265                                     ; preds = %259
  %266 = getelementptr inbounds [512 x i8], [512 x i8]* %buf, i32 0, i32 0, !dbg !6081
  store i8* %266, i8** %rp_ex, align 8, !dbg !6083
  %267 = load i32, i32* %ret, align 4, !dbg !6084
  %268 = trunc i32 %267 to i16, !dbg !6084
  store i16 %268, i16* %rdlen_ex, align 2, !dbg !6085
  br label %269

; <label>:269                                     ; preds = %265, %262
  br label %271, !dbg !6086

; <label>:270                                     ; preds = %245
  store i8* null, i8** %rp_ex, align 8, !dbg !6087
  store i16 0, i16* %rdlen_ex, align 2, !dbg !6089
  br label %271

; <label>:271                                     ; preds = %270, %269
  %272 = load %struct.generic_list*, %struct.generic_list** %gl, align 8, !dbg !6090
  %273 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %272, i32 0, i32 2, !dbg !6091
  %274 = load i8*, i8** %273, align 8, !dbg !6091
  %275 = bitcast i8* %274 to %struct.RRset_Couple*, !dbg !6092
  %276 = getelementptr inbounds %struct.RRset_Couple, %struct.RRset_Couple* %275, i32 0, i32 1, !dbg !6093
  %277 = load %struct.rr_list*, %struct.rr_list** %276, align 8, !dbg !6093
  %278 = load i32, i32* %r_ttl, align 4, !dbg !6094
  %279 = load i16, i16* %rdlen_ex, align 2, !dbg !6095
  %280 = zext i16 %279 to i32, !dbg !6095
  %281 = load i8*, i8** %rp_ex, align 8, !dbg !6096
  %282 = call %struct.rr_list* @rr_list_add(%struct.rr_list* %277, i32 %278, i32 %280, i8* %281), !dbg !6097
  store %struct.rr_list* %282, %struct.rr_list** %rrl, align 8, !dbg !6098
  %283 = load %struct.rr_list*, %struct.rr_list** %rrl, align 8, !dbg !6099
  %284 = icmp ne %struct.rr_list* %283, null, !dbg !6099
  br i1 %284, label %286, label %285, !dbg !6101

; <label>:285                                     ; preds = %271
  br label %383, !dbg !6102

; <label>:286                                     ; preds = %271
  %287 = load %struct.rr_list*, %struct.rr_list** %rrl, align 8, !dbg !6103
  %288 = load %struct.generic_list*, %struct.generic_list** %gl, align 8, !dbg !6104
  %289 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %288, i32 0, i32 2, !dbg !6105
  %290 = load i8*, i8** %289, align 8, !dbg !6105
  %291 = bitcast i8* %290 to %struct.RRset_Couple*, !dbg !6106
  %292 = getelementptr inbounds %struct.RRset_Couple, %struct.RRset_Couple* %291, i32 0, i32 1, !dbg !6107
  store %struct.rr_list* %287, %struct.rr_list** %292, align 8, !dbg !6108
  br label %293, !dbg !6109

; <label>:293                                     ; preds = %286
  %294 = load i32, i32* %i, align 4, !dbg !6110
  %295 = add nsw i32 %294, 1, !dbg !6110
  store i32 %295, i32* %i, align 4, !dbg !6110
  br label %22, !dbg !6112

; <label>:296                                     ; preds = %22
  %297 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 8), align 4, !dbg !6113
  %298 = icmp sgt i32 %297, 4, !dbg !6115
  br i1 %298, label %299, label %301, !dbg !6116

; <label>:299                                     ; preds = %296
  %300 = load i8*, i8** %fn, align 8, !dbg !6117
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.61, i32 0, i32 0), i8* %300), !dbg !6118
  br label %301, !dbg !6118

; <label>:301                                     ; preds = %299, %296
  %302 = load %struct.generic_list*, %struct.generic_list** %rc_list, align 8, !dbg !6119
  %303 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %302, i32 0, i32 2, !dbg !6120
  store i8* null, i8** %303, align 8, !dbg !6121
  %304 = load %struct.generic_list*, %struct.generic_list** %rc_list, align 8, !dbg !6122
  %305 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %304, i32 0, i32 0, !dbg !6124
  %306 = load %struct.generic_list*, %struct.generic_list** %305, align 8, !dbg !6124
  store %struct.generic_list* %306, %struct.generic_list** %gl, align 8, !dbg !6125
  br label %307, !dbg !6126

; <label>:307                                     ; preds = %371, %301
  %308 = load %struct.generic_list*, %struct.generic_list** %gl, align 8, !dbg !6127
  %309 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %308, i32 0, i32 2, !dbg !6130
  %310 = load i8*, i8** %309, align 8, !dbg !6130
  %311 = icmp ne i8* %310, null, !dbg !6131
  br i1 %311, label %312, label %375, !dbg !6131

; <label>:312                                     ; preds = %307
  call void @llvm.dbg.declare(metadata %struct.RRset_Couple** %rc2, metadata !6132, metadata !2279), !dbg !6134
  call void @llvm.dbg.declare(metadata %struct.rr_set** %rrs, metadata !6135, metadata !2279), !dbg !6136
  %313 = load %struct.generic_list*, %struct.generic_list** %gl, align 8, !dbg !6137
  %314 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %313, i32 0, i32 2, !dbg !6138
  %315 = load i8*, i8** %314, align 8, !dbg !6138
  %316 = bitcast i8* %315 to %struct.RRset_Couple*, !dbg !6139
  store %struct.RRset_Couple* %316, %struct.RRset_Couple** %rc2, align 8, !dbg !6140
  %317 = load %struct.RRset_Couple*, %struct.RRset_Couple** %rc2, align 8, !dbg !6141
  %318 = getelementptr inbounds %struct.RRset_Couple, %struct.RRset_Couple* %317, i32 0, i32 0, !dbg !6142
  %319 = load %struct.rr_set*, %struct.rr_set** %318, align 8, !dbg !6142
  %320 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %319, i32 0, i32 2, !dbg !6143
  %321 = bitcast %union.u_key* %320 to %struct.key_info**, !dbg !6144
  %322 = load %struct.key_info*, %struct.key_info** %321, align 8, !dbg !6144
  %323 = getelementptr inbounds %struct.key_info, %struct.key_info* %322, i32 0, i32 0, !dbg !6145
  %324 = load i16, i16* %323, align 2, !dbg !6145
  %325 = load %struct.RRset_Couple*, %struct.RRset_Couple** %rc2, align 8, !dbg !6146
  %326 = getelementptr inbounds %struct.RRset_Couple, %struct.RRset_Couple* %325, i32 0, i32 0, !dbg !6147
  %327 = load %struct.rr_set*, %struct.rr_set** %326, align 8, !dbg !6147
  %328 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %327, i32 0, i32 2, !dbg !6148
  %329 = bitcast %union.u_key* %328 to %struct.key_info**, !dbg !6149
  %330 = load %struct.key_info*, %struct.key_info** %329, align 8, !dbg !6149
  %331 = getelementptr inbounds %struct.key_info, %struct.key_info* %330, i32 0, i32 1, !dbg !6150
  %332 = load i16, i16* %331, align 2, !dbg !6150
  %333 = load %struct.RRset_Couple*, %struct.RRset_Couple** %rc2, align 8, !dbg !6151
  %334 = getelementptr inbounds %struct.RRset_Couple, %struct.RRset_Couple* %333, i32 0, i32 0, !dbg !6152
  %335 = load %struct.rr_set*, %struct.rr_set** %334, align 8, !dbg !6152
  %336 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %335, i32 0, i32 2, !dbg !6153
  %337 = bitcast %union.u_key* %336 to %struct.key_info**, !dbg !6154
  %338 = load %struct.key_info*, %struct.key_info** %337, align 8, !dbg !6154
  %339 = getelementptr inbounds %struct.key_info, %struct.key_info* %338, i32 0, i32 2, !dbg !6155
  %340 = load i16, i16* %339, align 2, !dbg !6155
  %341 = load %struct.RRset_Couple*, %struct.RRset_Couple** %rc2, align 8, !dbg !6156
  %342 = getelementptr inbounds %struct.RRset_Couple, %struct.RRset_Couple* %341, i32 0, i32 0, !dbg !6156
  %343 = load %struct.rr_set*, %struct.rr_set** %342, align 8, !dbg !6156
  %344 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %343, i32 0, i32 2, !dbg !6156
  %345 = bitcast %union.u_key* %344 to %struct.key_info**, !dbg !6156
  %346 = load %struct.key_info*, %struct.key_info** %345, align 8, !dbg !6156
  %347 = bitcast %struct.key_info* %346 to i8*, !dbg !6156
  %348 = getelementptr inbounds i8, i8* %347, i64 6, !dbg !6156
  %349 = load %struct.RRset_Couple*, %struct.RRset_Couple** %rc2, align 8, !dbg !6157
  %350 = getelementptr inbounds %struct.RRset_Couple, %struct.RRset_Couple* %349, i32 0, i32 1, !dbg !6158
  %351 = load %struct.rr_list*, %struct.rr_list** %350, align 8, !dbg !6158
  %352 = call %struct.rr_set* @rrset_create(i16 zeroext %324, i16 zeroext %332, i16 zeroext %340, i8* %348, %struct.rr_list* %351), !dbg !6159
  store %struct.rr_set* %352, %struct.rr_set** %rrs, align 8, !dbg !6160
  %353 = load %struct.rr_set*, %struct.rr_set** %rrs, align 8, !dbg !6161
  %354 = icmp ne %struct.rr_set* %353, null, !dbg !6161
  br i1 %354, label %356, label %355, !dbg !6163

; <label>:355                                     ; preds = %312
  br label %383, !dbg !6164

; <label>:356                                     ; preds = %312
  %357 = load %struct.generic_list*, %struct.generic_list** %2, align 8, !dbg !6165
  %358 = icmp ne %struct.generic_list* %357, null, !dbg !6165
  br i1 %358, label %359, label %369, !dbg !6167

; <label>:359                                     ; preds = %356
  %360 = load %struct.generic_list*, %struct.generic_list** %2, align 8, !dbg !6168
  %361 = load %struct.rr_set*, %struct.rr_set** %rrs, align 8, !dbg !6171
  %362 = call %struct.rr_set* @rrset_copy(%struct.rr_set* %361), !dbg !6172
  %363 = bitcast %struct.rr_set* %362 to i8*, !dbg !6172
  %364 = call i32 @list_add(%struct.generic_list* %360, i8* %363), !dbg !6173
  %365 = icmp slt i32 %364, 0, !dbg !6175
  br i1 %365, label %366, label %368, !dbg !6176

; <label>:366                                     ; preds = %359
  %367 = load %struct.rr_set*, %struct.rr_set** %rrs, align 8, !dbg !6177
  call void @rrset_free(%struct.rr_set* %367), !dbg !6179
  br label %383, !dbg !6180

; <label>:368                                     ; preds = %359
  br label %369, !dbg !6181

; <label>:369                                     ; preds = %368, %356
  %370 = load %struct.rr_set*, %struct.rr_set** %rrs, align 8, !dbg !6182
  call void @rrset_free(%struct.rr_set* %370), !dbg !6183
  br label %371, !dbg !6184

; <label>:371                                     ; preds = %369
  %372 = load %struct.generic_list*, %struct.generic_list** %gl, align 8, !dbg !6185
  %373 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %372, i32 0, i32 0, !dbg !6187
  %374 = load %struct.generic_list*, %struct.generic_list** %373, align 8, !dbg !6187
  store %struct.generic_list* %374, %struct.generic_list** %gl, align 8, !dbg !6188
  br label %307, !dbg !6189

; <label>:375                                     ; preds = %307
  %376 = load %struct.generic_list*, %struct.generic_list** %rc_list, align 8, !dbg !6190
  call void @list_destroy(%struct.generic_list* %376, void (i8*)* @rrset_couple_freev), !dbg !6191
  %377 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 8), align 4, !dbg !6192
  %378 = icmp sgt i32 %377, 4, !dbg !6194
  br i1 %378, label %379, label %381, !dbg !6195

; <label>:379                                     ; preds = %375
  %380 = load i8*, i8** %fn, align 8, !dbg !6196
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.62, i32 0, i32 0), i8* %380), !dbg !6197
  br label %381, !dbg !6197

; <label>:381                                     ; preds = %379, %375
  %382 = load i8*, i8** %rp, align 8, !dbg !6198
  store i8* %382, i8** %1, align 8, !dbg !6199
  br label %386, !dbg !6199

; <label>:383                                     ; preds = %366, %355, %285, %258, %239, %211, %205, %120, %40, %33
  %384 = load i8*, i8** %fn, align 8, !dbg !6200
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.63, i32 0, i32 0), i8* %384), !dbg !6201
  %385 = load %struct.generic_list*, %struct.generic_list** %rc_list, align 8, !dbg !6202
  call void @list_destroy(%struct.generic_list* %385, void (i8*)* @rrset_couple_freev), !dbg !6203
  store i8* null, i8** %1, align 8, !dbg !6204
  br label %386, !dbg !6204

; <label>:386                                     ; preds = %383, %381, %15
  %387 = load i8*, i8** %1, align 8, !dbg !6205
  ret i8* %387, !dbg !6205
}

; Function Attrs: nounwind uwtable
define i8* @string_rclass(i16 zeroext %rclass) #0 !dbg !515 {
  %1 = alloca i8*, align 8
  %2 = alloca i16, align 2
  store i16 %rclass, i16* %2, align 2
  call void @llvm.dbg.declare(metadata i16* %2, metadata !6206, metadata !2279), !dbg !6207
  %3 = load i16, i16* %2, align 2, !dbg !6208
  %4 = zext i16 %3 to i32, !dbg !6208
  switch i32 %4, label %8 [
    i32 1, label %5
    i32 254, label %6
    i32 255, label %7
  ], !dbg !6209

; <label>:5                                       ; preds = %0
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.26.126, i32 0, i32 0), i8** %1, align 8, !dbg !6210
  br label %11, !dbg !6210

; <label>:6                                       ; preds = %0
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.27.127, i32 0, i32 0), i8** %1, align 8, !dbg !6212
  br label %11, !dbg !6212

; <label>:7                                       ; preds = %0
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.28.90, i32 0, i32 0), i8** %1, align 8, !dbg !6213
  br label %11, !dbg !6213

; <label>:8                                       ; preds = %0
  %9 = load i16, i16* %2, align 2, !dbg !6214
  %10 = zext i16 %9 to i32, !dbg !6214
  call void (i32, i8*, ...) @syslog(i32 5, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.29.128, i32 0, i32 0), i32 %10), !dbg !6215
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.30.91, i32 0, i32 0), i8** %1, align 8, !dbg !6216
  br label %11, !dbg !6216

; <label>:11                                      ; preds = %8, %7, %6, %5
  %12 = load i8*, i8** %1, align 8, !dbg !6217
  ret i8* %12, !dbg !6217
}

; Function Attrs: nounwind uwtable
define void @conv_trick_list(%struct.generic_list* %rrsl, i32 %target_rtype, i32 %add) #0 !dbg !588 {
  %1 = alloca %struct.generic_list*, align 8
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %fn = alloca i8*, align 8
  %rrsp = alloca %struct.rr_set*, align 8
  %rrsp_aaaa = alloca %struct.rr_set*, align 8
  %str = alloca [256 x i8], align 16
  %gl = alloca %struct.generic_list*, align 8
  %dup = alloca %struct.rr_set*, align 8
  %name = alloca i8*, align 8
  %len = alloca i32, align 4
  store %struct.generic_list* %rrsl, %struct.generic_list** %1, align 8
  call void @llvm.dbg.declare(metadata %struct.generic_list** %1, metadata !6218, metadata !2279), !dbg !6219
  store i32 %target_rtype, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !6220, metadata !2279), !dbg !6221
  store i32 %add, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !6222, metadata !2279), !dbg !6223
  call void @llvm.dbg.declare(metadata i8** %fn, metadata !6224, metadata !2279), !dbg !6225
  store i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.131, i32 0, i32 0), i8** %fn, align 8, !dbg !6225
  call void @llvm.dbg.declare(metadata %struct.rr_set** %rrsp, metadata !6226, metadata !2279), !dbg !6227
  call void @llvm.dbg.declare(metadata %struct.rr_set** %rrsp_aaaa, metadata !6228, metadata !2279), !dbg !6229
  call void @llvm.dbg.declare(metadata [256 x i8]* %str, metadata !6230, metadata !2279), !dbg !6231
  call void @llvm.dbg.declare(metadata %struct.generic_list** %gl, metadata !6232, metadata !2279), !dbg !6233
  %4 = load i8*, i8** %fn, align 8, !dbg !6234
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1.132, i32 0, i32 0), i8* %4), !dbg !6235
  %5 = load %struct.generic_list*, %struct.generic_list** %1, align 8, !dbg !6236
  %6 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %5, i32 0, i32 2, !dbg !6237
  store i8* null, i8** %6, align 8, !dbg !6238
  %7 = load %struct.generic_list*, %struct.generic_list** %1, align 8, !dbg !6239
  %8 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %7, i32 0, i32 0, !dbg !6241
  %9 = load %struct.generic_list*, %struct.generic_list** %8, align 8, !dbg !6241
  store %struct.generic_list* %9, %struct.generic_list** %gl, align 8, !dbg !6242
  br label %10, !dbg !6243

; <label>:10                                      ; preds = %107, %0
  %11 = load %struct.generic_list*, %struct.generic_list** %gl, align 8, !dbg !6244
  %12 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %11, i32 0, i32 2, !dbg !6247
  %13 = load i8*, i8** %12, align 8, !dbg !6247
  %14 = icmp ne i8* %13, null, !dbg !6248
  br i1 %14, label %15, label %111, !dbg !6248

; <label>:15                                      ; preds = %10
  call void @llvm.dbg.declare(metadata %struct.rr_set** %dup, metadata !6249, metadata !2279), !dbg !6251
  call void @llvm.dbg.declare(metadata i8** %name, metadata !6252, metadata !2279), !dbg !6253
  call void @llvm.dbg.declare(metadata i32* %len, metadata !6254, metadata !2279), !dbg !6255
  %16 = load %struct.generic_list*, %struct.generic_list** %gl, align 8, !dbg !6256
  %17 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %16, i32 0, i32 2, !dbg !6257
  %18 = load i8*, i8** %17, align 8, !dbg !6257
  %19 = bitcast i8* %18 to %struct.rr_set*, !dbg !6258
  store %struct.rr_set* %19, %struct.rr_set** %rrsp, align 8, !dbg !6259
  %20 = load %struct.rr_set*, %struct.rr_set** %rrsp, align 8, !dbg !6260
  %21 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %20, i32 0, i32 2, !dbg !6262
  %22 = bitcast %union.u_key* %21 to %struct.key_info**, !dbg !6263
  %23 = load %struct.key_info*, %struct.key_info** %22, align 8, !dbg !6263
  %24 = getelementptr inbounds %struct.key_info, %struct.key_info* %23, i32 0, i32 0, !dbg !6264
  %25 = load i16, i16* %24, align 2, !dbg !6264
  %26 = zext i16 %25 to i32, !dbg !6260
  %27 = icmp ne i32 %26, 1, !dbg !6265
  br i1 %27, label %28, label %29, !dbg !6266

; <label>:28                                      ; preds = %15
  br label %107, !dbg !6267

; <label>:29                                      ; preds = %15
  %30 = load %struct.rr_set*, %struct.rr_set** %rrsp, align 8, !dbg !6268
  %31 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %30, i32 0, i32 2, !dbg !6268
  %32 = bitcast %union.u_key* %31 to %struct.key_info**, !dbg !6268
  %33 = load %struct.key_info*, %struct.key_info** %32, align 8, !dbg !6268
  %34 = bitcast %struct.key_info* %33 to i8*, !dbg !6268
  %35 = getelementptr inbounds i8, i8* %34, i64 6, !dbg !6268
  store i8* %35, i8** %name, align 8, !dbg !6269
  %36 = load %struct.rr_set*, %struct.rr_set** %rrsp, align 8, !dbg !6270
  %37 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %36, i32 0, i32 2, !dbg !6271
  %38 = bitcast %union.u_key* %37 to %struct.key_info**, !dbg !6272
  %39 = load %struct.key_info*, %struct.key_info** %38, align 8, !dbg !6272
  %40 = getelementptr inbounds %struct.key_info, %struct.key_info* %39, i32 0, i32 2, !dbg !6273
  %41 = load i16, i16* %40, align 2, !dbg !6273
  %42 = zext i16 %41 to i32, !dbg !6270
  store i32 %42, i32* %len, align 4, !dbg !6274
  %43 = load %struct.generic_list*, %struct.generic_list** %1, align 8, !dbg !6275
  %44 = load i8*, i8** %name, align 8, !dbg !6276
  %45 = load i32, i32* %len, align 4, !dbg !6277
  %46 = load i32, i32* %2, align 4, !dbg !6278
  %47 = call %struct.rr_set* @search_name(%struct.generic_list* %43, i8* %44, i32 %45, i32 %46), !dbg !6279
  store %struct.rr_set* %47, %struct.rr_set** %dup, align 8, !dbg !6280
  %48 = load %struct.rr_set*, %struct.rr_set** %dup, align 8, !dbg !6281
  %49 = icmp ne %struct.rr_set* %48, null, !dbg !6281
  br i1 %49, label %50, label %61, !dbg !6283

; <label>:50                                      ; preds = %29
  %51 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 8), align 4, !dbg !6284
  %52 = icmp sgt i32 %51, 3, !dbg !6287
  br i1 %52, label %53, label %59, !dbg !6288

; <label>:53                                      ; preds = %50
  %54 = getelementptr inbounds [256 x i8], [256 x i8]* %str, i32 0, i32 0, !dbg !6289
  %55 = load i8*, i8** %name, align 8, !dbg !6291
  %56 = call i8* @dname_decompress(i8* %54, i32 256, i8* %55, i8* null, i8* null, i32* null), !dbg !6292
  %57 = load i8*, i8** %fn, align 8, !dbg !6293
  %58 = getelementptr inbounds [256 x i8], [256 x i8]* %str, i32 0, i32 0, !dbg !6294
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2.134, i32 0, i32 0), i8* %57, i8* %58), !dbg !6295
  br label %59, !dbg !6296

; <label>:59                                      ; preds = %53, %50
  %60 = load %struct.rr_set*, %struct.rr_set** %dup, align 8, !dbg !6297
  call void @rrset_free(%struct.rr_set* %60), !dbg !6298
  br label %107, !dbg !6299

; <label>:61                                      ; preds = %29
  %62 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 8), align 4, !dbg !6300
  %63 = icmp sgt i32 %62, 3, !dbg !6302
  br i1 %63, label %64, label %70, !dbg !6303

; <label>:64                                      ; preds = %61
  %65 = getelementptr inbounds [256 x i8], [256 x i8]* %str, i32 0, i32 0, !dbg !6304
  %66 = load i8*, i8** %name, align 8, !dbg !6306
  %67 = call i8* @dname_decompress(i8* %65, i32 256, i8* %66, i8* null, i8* null, i32* null), !dbg !6307
  %68 = load i8*, i8** %fn, align 8, !dbg !6308
  %69 = getelementptr inbounds [256 x i8], [256 x i8]* %str, i32 0, i32 0, !dbg !6309
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3.135, i32 0, i32 0), i8* %68, i8* %69), !dbg !6310
  br label %70, !dbg !6311

; <label>:70                                      ; preds = %64, %61
  %71 = load %struct.rr_set*, %struct.rr_set** %rrsp, align 8, !dbg !6312
  %72 = load i32, i32* %2, align 4, !dbg !6313
  %73 = trunc i32 %72 to i16, !dbg !6313
  %74 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 23), align 8, !dbg !6314
  %75 = call %struct.rr_set* @conv_trick_rrset(%struct.rr_set* %71, i16 zeroext %73, i32 %74), !dbg !6315
  store %struct.rr_set* %75, %struct.rr_set** %rrsp_aaaa, align 8, !dbg !6316
  %76 = load %struct.rr_set*, %struct.rr_set** %rrsp_aaaa, align 8, !dbg !6317
  %77 = icmp ne %struct.rr_set* %76, null, !dbg !6317
  br i1 %77, label %80, label %78, !dbg !6319

; <label>:78                                      ; preds = %70
  %79 = load i8*, i8** %fn, align 8, !dbg !6320
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.4.137, i32 0, i32 0), i8* %79), !dbg !6322
  br label %107, !dbg !6323

; <label>:80                                      ; preds = %70
  %81 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 8), align 4, !dbg !6324
  %82 = icmp ne i32 %81, 0, !dbg !6326
  br i1 %82, label %83, label %92, !dbg !6327

; <label>:83                                      ; preds = %80
  %84 = getelementptr inbounds [256 x i8], [256 x i8]* %str, i32 0, i32 0, !dbg !6328
  %85 = load i8*, i8** %name, align 8, !dbg !6330
  %86 = call i8* @dname_decompress(i8* %84, i32 256, i8* %85, i8* null, i8* null, i32* null), !dbg !6331
  %87 = load i8*, i8** %fn, align 8, !dbg !6332
  %88 = load i32, i32* %3, align 4, !dbg !6333
  %89 = icmp ne i32 %88, 0, !dbg !6333
  %90 = select i1 %89, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.6.138, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7.139, i32 0, i32 0), !dbg !6333
  %91 = getelementptr inbounds [256 x i8], [256 x i8]* %str, i32 0, i32 0, !dbg !6334
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.5.140, i32 0, i32 0), i8* %87, i8* %90, i8* %91), !dbg !6335
  br label %92, !dbg !6336

; <label>:92                                      ; preds = %83, %80
  %93 = load i32, i32* %3, align 4, !dbg !6337
  %94 = icmp ne i32 %93, 0, !dbg !6337
  br i1 %94, label %95, label %100, !dbg !6339

; <label>:95                                      ; preds = %92
  %96 = load %struct.generic_list*, %struct.generic_list** %1, align 8, !dbg !6340
  %97 = load %struct.rr_set*, %struct.rr_set** %rrsp_aaaa, align 8, !dbg !6342
  %98 = bitcast %struct.rr_set* %97 to i8*, !dbg !6342
  %99 = call i32 @list_add(%struct.generic_list* %96, i8* %98), !dbg !6343
  br label %106, !dbg !6344

; <label>:100                                     ; preds = %92
  %101 = load %struct.rr_set*, %struct.rr_set** %rrsp, align 8, !dbg !6345
  call void @rrset_free(%struct.rr_set* %101), !dbg !6347
  %102 = load %struct.rr_set*, %struct.rr_set** %rrsp_aaaa, align 8, !dbg !6348
  %103 = bitcast %struct.rr_set* %102 to i8*, !dbg !6348
  %104 = load %struct.generic_list*, %struct.generic_list** %gl, align 8, !dbg !6349
  %105 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %104, i32 0, i32 2, !dbg !6350
  store i8* %103, i8** %105, align 8, !dbg !6351
  br label %106

; <label>:106                                     ; preds = %100, %95
  br label %107, !dbg !6352

; <label>:107                                     ; preds = %106, %78, %59, %28
  %108 = load %struct.generic_list*, %struct.generic_list** %gl, align 8, !dbg !6353
  %109 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %108, i32 0, i32 0, !dbg !6355
  %110 = load %struct.generic_list*, %struct.generic_list** %109, align 8, !dbg !6355
  store %struct.generic_list* %110, %struct.generic_list** %gl, align 8, !dbg !6356
  br label %10, !dbg !6357

; <label>:111                                     ; preds = %10
  ret void, !dbg !6358
}

; Function Attrs: nounwind uwtable
define %struct.rr_set* @search_name(%struct.generic_list* %rr_list, i8* %name, i32 %len, i32 %r_type_search) #0 !dbg !636 {
  %1 = alloca %struct.rr_set*, align 8
  %2 = alloca %struct.generic_list*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %fn = alloca i8*, align 8
  %tmp_domain = alloca i8*, align 8
  %gl = alloca %struct.generic_list*, align 8
  %rrs = alloca %struct.rr_set*, align 8
  store %struct.generic_list* %rr_list, %struct.generic_list** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.generic_list** %2, metadata !6359, metadata !2279), !dbg !6360
  store i8* %name, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !6361, metadata !2279), !dbg !6362
  store i32 %len, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !6363, metadata !2279), !dbg !6364
  store i32 %r_type_search, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !6365, metadata !2279), !dbg !6366
  call void @llvm.dbg.declare(metadata i8** %fn, metadata !6367, metadata !2279), !dbg !6368
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.26.133, i32 0, i32 0), i8** %fn, align 8, !dbg !6368
  call void @llvm.dbg.declare(metadata i8** %tmp_domain, metadata !6369, metadata !2279), !dbg !6370
  call void @llvm.dbg.declare(metadata %struct.generic_list** %gl, metadata !6371, metadata !2279), !dbg !6372
  call void @llvm.dbg.declare(metadata %struct.rr_set** %rrs, metadata !6373, metadata !2279), !dbg !6374
  %6 = load i8*, i8** %fn, align 8, !dbg !6375
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1.132, i32 0, i32 0), i8* %6), !dbg !6376
  %7 = load %struct.generic_list*, %struct.generic_list** %2, align 8, !dbg !6377
  %8 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %7, i32 0, i32 2, !dbg !6378
  store i8* null, i8** %8, align 8, !dbg !6379
  %9 = load %struct.generic_list*, %struct.generic_list** %2, align 8, !dbg !6380
  %10 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %9, i32 0, i32 0, !dbg !6382
  %11 = load %struct.generic_list*, %struct.generic_list** %10, align 8, !dbg !6382
  store %struct.generic_list* %11, %struct.generic_list** %gl, align 8, !dbg !6383
  br label %12, !dbg !6384

; <label>:12                                      ; preds = %56, %0
  %13 = load %struct.generic_list*, %struct.generic_list** %gl, align 8, !dbg !6385
  %14 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %13, i32 0, i32 2, !dbg !6388
  %15 = load i8*, i8** %14, align 8, !dbg !6388
  %16 = icmp ne i8* %15, null, !dbg !6389
  br i1 %16, label %17, label %60, !dbg !6389

; <label>:17                                      ; preds = %12
  %18 = load %struct.generic_list*, %struct.generic_list** %gl, align 8, !dbg !6390
  %19 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %18, i32 0, i32 2, !dbg !6392
  %20 = load i8*, i8** %19, align 8, !dbg !6392
  %21 = bitcast i8* %20 to %struct.rr_set*, !dbg !6393
  store %struct.rr_set* %21, %struct.rr_set** %rrs, align 8, !dbg !6394
  %22 = load %struct.rr_set*, %struct.rr_set** %rrs, align 8, !dbg !6395
  %23 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %22, i32 0, i32 2, !dbg !6395
  %24 = bitcast %union.u_key* %23 to %struct.key_info**, !dbg !6395
  %25 = load %struct.key_info*, %struct.key_info** %24, align 8, !dbg !6395
  %26 = bitcast %struct.key_info* %25 to i8*, !dbg !6395
  %27 = getelementptr inbounds i8, i8* %26, i64 6, !dbg !6395
  store i8* %27, i8** %tmp_domain, align 8, !dbg !6396
  %28 = load %struct.rr_set*, %struct.rr_set** %rrs, align 8, !dbg !6397
  %29 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %28, i32 0, i32 2, !dbg !6399
  %30 = bitcast %union.u_key* %29 to %struct.key_info**, !dbg !6400
  %31 = load %struct.key_info*, %struct.key_info** %30, align 8, !dbg !6400
  %32 = getelementptr inbounds %struct.key_info, %struct.key_info* %31, i32 0, i32 0, !dbg !6401
  %33 = load i16, i16* %32, align 2, !dbg !6401
  %34 = zext i16 %33 to i32, !dbg !6397
  %35 = load i32, i32* %5, align 4, !dbg !6402
  %36 = icmp eq i32 %34, %35, !dbg !6403
  br i1 %36, label %37, label %55, !dbg !6404

; <label>:37                                      ; preds = %17
  %38 = load %struct.rr_set*, %struct.rr_set** %rrs, align 8, !dbg !6405
  %39 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %38, i32 0, i32 2, !dbg !6406
  %40 = bitcast %union.u_key* %39 to %struct.key_info**, !dbg !6407
  %41 = load %struct.key_info*, %struct.key_info** %40, align 8, !dbg !6407
  %42 = getelementptr inbounds %struct.key_info, %struct.key_info* %41, i32 0, i32 2, !dbg !6408
  %43 = load i16, i16* %42, align 2, !dbg !6408
  %44 = zext i16 %43 to i32, !dbg !6405
  %45 = load i32, i32* %4, align 4, !dbg !6409
  %46 = icmp eq i32 %44, %45, !dbg !6410
  br i1 %46, label %47, label %55, !dbg !6411

; <label>:47                                      ; preds = %37
  %48 = load i8*, i8** %tmp_domain, align 8, !dbg !6412
  %49 = load i8*, i8** %3, align 8, !dbg !6413
  %50 = call i32 @mesg_dname_cmp(i8* null, i8* %48, i8* %49), !dbg !6414
  %51 = icmp ne i32 %50, 0, !dbg !6414
  br i1 %51, label %55, label %52, !dbg !6415

; <label>:52                                      ; preds = %47
  %53 = load %struct.rr_set*, %struct.rr_set** %rrs, align 8, !dbg !6417
  %54 = call %struct.rr_set* @rrset_copy(%struct.rr_set* %53), !dbg !6418
  store %struct.rr_set* %54, %struct.rr_set** %1, align 8, !dbg !6419
  br label %61, !dbg !6419

; <label>:55                                      ; preds = %47, %37, %17
  br label %56, !dbg !6420

; <label>:56                                      ; preds = %55
  %57 = load %struct.generic_list*, %struct.generic_list** %gl, align 8, !dbg !6421
  %58 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %57, i32 0, i32 0, !dbg !6423
  %59 = load %struct.generic_list*, %struct.generic_list** %58, align 8, !dbg !6423
  store %struct.generic_list* %59, %struct.generic_list** %gl, align 8, !dbg !6424
  br label %12, !dbg !6425

; <label>:60                                      ; preds = %12
  store %struct.rr_set* null, %struct.rr_set** %1, align 8, !dbg !6426
  br label %61, !dbg !6426

; <label>:61                                      ; preds = %60, %52
  %62 = load %struct.rr_set*, %struct.rr_set** %1, align 8, !dbg !6427
  ret %struct.rr_set* %62, !dbg !6427
}

; Function Attrs: nounwind uwtable
define internal %struct.rr_set* @conv_trick_rrset(%struct.rr_set* %rrs_a, i16 zeroext %qtype, i32 %pref) #0 !dbg !639 {
  %1 = alloca %struct.rr_set*, align 8
  %2 = alloca %struct.rr_set*, align 8
  %3 = alloca i16, align 2
  %4 = alloca i32, align 4
  %fn = alloca i8*, align 8
  %rrl = alloca %struct.rr_list*, align 8
  %rrl_tmp = alloca %struct.rr_list*, align 8
  %rrs_new = alloca %struct.rr_set*, align 8
  %rr_a = alloca %struct.rr*, align 8
  %rr_new = alloca %struct.rr*, align 8
  %rd = alloca i8*, align 8
  %rd_new = alloca i8*, align 8
  %rdlen = alloca i32, align 4
  %rd_addr = alloca i8*, align 8
  store %struct.rr_set* %rrs_a, %struct.rr_set** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.rr_set** %2, metadata !6428, metadata !2279), !dbg !6429
  store i16 %qtype, i16* %3, align 2
  call void @llvm.dbg.declare(metadata i16* %3, metadata !6430, metadata !2279), !dbg !6431
  store i32 %pref, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !6432, metadata !2279), !dbg !6433
  call void @llvm.dbg.declare(metadata i8** %fn, metadata !6434, metadata !2279), !dbg !6435
  store i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.27.136, i32 0, i32 0), i8** %fn, align 8, !dbg !6435
  call void @llvm.dbg.declare(metadata %struct.rr_list** %rrl, metadata !6436, metadata !2279), !dbg !6452
  store %struct.rr_list* null, %struct.rr_list** %rrl, align 8, !dbg !6452
  call void @llvm.dbg.declare(metadata %struct.rr_list** %rrl_tmp, metadata !6453, metadata !2279), !dbg !6454
  call void @llvm.dbg.declare(metadata %struct.rr_set** %rrs_new, metadata !6455, metadata !2279), !dbg !6456
  store %struct.rr_set* null, %struct.rr_set** %rrs_new, align 8, !dbg !6456
  call void @llvm.dbg.declare(metadata %struct.rr** %rr_a, metadata !6457, metadata !2279), !dbg !6458
  store %struct.rr* null, %struct.rr** %rr_a, align 8, !dbg !6458
  call void @llvm.dbg.declare(metadata %struct.rr** %rr_new, metadata !6459, metadata !2279), !dbg !6460
  store %struct.rr* null, %struct.rr** %rr_new, align 8, !dbg !6460
  call void @llvm.dbg.declare(metadata i8** %rd, metadata !6461, metadata !2279), !dbg !6462
  call void @llvm.dbg.declare(metadata i8** %rd_new, metadata !6463, metadata !2279), !dbg !6464
  store i8* null, i8** %rd_new, align 8, !dbg !6464
  %5 = load i8*, i8** %fn, align 8, !dbg !6465
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1.132, i32 0, i32 0), i8* %5), !dbg !6466
  %6 = load %struct.rr_set*, %struct.rr_set** %2, align 8, !dbg !6467
  %7 = call %struct.rr_list* @rr_list_of_rrset(%struct.rr_set* %6), !dbg !6468
  store %struct.rr_list* %7, %struct.rr_list** %rrl, align 8, !dbg !6469
  %8 = load %struct.rr_list*, %struct.rr_list** %rrl, align 8, !dbg !6470
  %9 = icmp ne %struct.rr_list* %8, null, !dbg !6470
  br i1 %9, label %11, label %10, !dbg !6472

; <label>:10                                      ; preds = %0
  store %struct.rr_set* null, %struct.rr_set** %1, align 8, !dbg !6473
  br label %130, !dbg !6473

; <label>:11                                      ; preds = %0
  %12 = load %struct.rr_list*, %struct.rr_list** %rrl, align 8, !dbg !6474
  store %struct.rr_list* %12, %struct.rr_list** %rrl_tmp, align 8, !dbg !6476
  br label %13, !dbg !6477

; <label>:13                                      ; preds = %81, %11
  %14 = load %struct.rr_list*, %struct.rr_list** %rrl_tmp, align 8, !dbg !6478
  %15 = getelementptr inbounds %struct.rr_list, %struct.rr_list* %14, i32 0, i32 0, !dbg !6481
  %16 = load %struct.rr_list*, %struct.rr_list** %15, align 8, !dbg !6481
  %17 = icmp ne %struct.rr_list* %16, null, !dbg !6482
  br i1 %17, label %18, label %85, !dbg !6482

; <label>:18                                      ; preds = %13
  call void @llvm.dbg.declare(metadata i32* %rdlen, metadata !6483, metadata !2279), !dbg !6485
  call void @llvm.dbg.declare(metadata i8** %rd_addr, metadata !6486, metadata !2279), !dbg !6487
  %19 = load %struct.rr_list*, %struct.rr_list** %rrl_tmp, align 8, !dbg !6488
  %20 = getelementptr inbounds %struct.rr_list, %struct.rr_list* %19, i32 0, i32 3, !dbg !6489
  %21 = load %struct.rr*, %struct.rr** %20, align 8, !dbg !6489
  store %struct.rr* %21, %struct.rr** %rr_a, align 8, !dbg !6490
  %22 = load %struct.rr_list*, %struct.rr_list** %rrl_tmp, align 8, !dbg !6491
  %23 = getelementptr inbounds %struct.rr_list, %struct.rr_list* %22, i32 0, i32 3, !dbg !6492
  store %struct.rr* null, %struct.rr** %23, align 8, !dbg !6493
  %24 = load %struct.rr*, %struct.rr** %rr_a, align 8, !dbg !6494
  %25 = bitcast %struct.rr* %24 to i8*, !dbg !6494
  %26 = getelementptr inbounds i8, i8* %25, i64 6, !dbg !6494
  store i8* %26, i8** %rd, align 8, !dbg !6495
  store i32 16, i32* %rdlen, align 4, !dbg !6496
  %27 = load i16, i16* %3, align 2, !dbg !6497
  %28 = zext i16 %27 to i32, !dbg !6497
  %29 = icmp eq i32 %28, 38, !dbg !6499
  br i1 %29, label %30, label %33, !dbg !6500

; <label>:30                                      ; preds = %18
  %31 = load i32, i32* %rdlen, align 4, !dbg !6501
  %32 = add nsw i32 %31, 1, !dbg !6501
  store i32 %32, i32* %rdlen, align 4, !dbg !6501
  br label %33, !dbg !6502

; <label>:33                                      ; preds = %30, %18
  %34 = load i32, i32* %rdlen, align 4, !dbg !6503
  %35 = sext i32 %34 to i64, !dbg !6503
  %36 = call noalias i8* @malloc(i64 %35) #10, !dbg !6504
  store i8* %36, i8** %rd_new, align 8, !dbg !6505
  %37 = load i8*, i8** %rd_new, align 8, !dbg !6506
  %38 = icmp ne i8* %37, null, !dbg !6506
  br i1 %38, label %40, label %39, !dbg !6508

; <label>:39                                      ; preds = %33
  br label %85, !dbg !6509

; <label>:40                                      ; preds = %33
  %41 = load i16, i16* %3, align 2, !dbg !6510
  %42 = zext i16 %41 to i32, !dbg !6510
  %43 = icmp eq i32 %42, 28, !dbg !6511
  br i1 %43, label %44, label %46, !dbg !6512

; <label>:44                                      ; preds = %40
  %45 = load i8*, i8** %rd_new, align 8, !dbg !6513
  br label %49, !dbg !6515

; <label>:46                                      ; preds = %40
  %47 = load i8*, i8** %rd_new, align 8, !dbg !6516
  %48 = getelementptr inbounds i8, i8* %47, i64 1, !dbg !6518
  br label %49, !dbg !6519

; <label>:49                                      ; preds = %46, %44
  %50 = phi i8* [ %45, %44 ], [ %48, %46 ], !dbg !6520
  store i8* %50, i8** %rd_addr, align 8, !dbg !6522
  %51 = load i8*, i8** %rd_addr, align 8, !dbg !6523
  %52 = load i32, i32* %4, align 4, !dbg !6524
  %53 = sext i32 %52 to i64, !dbg !6525
  %54 = getelementptr inbounds [30 x [25 x i8]], [30 x [25 x i8]]* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 20), i64 0, i64 %53, !dbg !6525
  %55 = getelementptr inbounds [25 x i8], [25 x i8]* %54, i32 0, i32 0, !dbg !6526
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %51, i8* %55, i64 12, i32 1, i1 false), !dbg !6526
  %56 = load i8*, i8** %rd_addr, align 8, !dbg !6527
  %57 = getelementptr inbounds i8, i8* %56, i64 12, !dbg !6528
  %58 = load i8*, i8** %rd, align 8, !dbg !6529
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %57, i8* %58, i64 4, i32 1, i1 false), !dbg !6530
  %59 = load i16, i16* %3, align 2, !dbg !6531
  %60 = zext i16 %59 to i32, !dbg !6531
  %61 = icmp eq i32 %60, 38, !dbg !6533
  br i1 %61, label %62, label %64, !dbg !6534

; <label>:62                                      ; preds = %49
  %63 = load i8*, i8** %rd_new, align 8, !dbg !6535
  store i8 0, i8* %63, align 1, !dbg !6536
  br label %64, !dbg !6537

; <label>:64                                      ; preds = %62, %49
  %65 = load %struct.rr*, %struct.rr** %rr_a, align 8, !dbg !6538
  %66 = getelementptr inbounds %struct.rr, %struct.rr* %65, i32 0, i32 0, !dbg !6539
  %67 = load i32, i32* %66, align 4, !dbg !6539
  %68 = load i32, i32* %rdlen, align 4, !dbg !6540
  %69 = load i8*, i8** %rd_new, align 8, !dbg !6541
  %70 = call %struct.rr* @rr_alloc(i32 %67, i32 %68, i8* %69), !dbg !6542
  store %struct.rr* %70, %struct.rr** %rr_new, align 8, !dbg !6543
  %71 = load %struct.rr*, %struct.rr** %rr_new, align 8, !dbg !6544
  %72 = icmp ne %struct.rr* %71, null, !dbg !6544
  br i1 %72, label %74, label %73, !dbg !6546

; <label>:73                                      ; preds = %64
  br label %85, !dbg !6547

; <label>:74                                      ; preds = %64
  %75 = load i8*, i8** %rd_new, align 8, !dbg !6548
  call void @free(i8* %75) #10, !dbg !6549
  store i8* null, i8** %rd_new, align 8, !dbg !6550
  %76 = load %struct.rr*, %struct.rr** %rr_new, align 8, !dbg !6551
  %77 = load %struct.rr_list*, %struct.rr_list** %rrl_tmp, align 8, !dbg !6552
  %78 = getelementptr inbounds %struct.rr_list, %struct.rr_list* %77, i32 0, i32 3, !dbg !6553
  store %struct.rr* %76, %struct.rr** %78, align 8, !dbg !6554
  store %struct.rr* null, %struct.rr** %rr_new, align 8, !dbg !6555
  %79 = load %struct.rr*, %struct.rr** %rr_a, align 8, !dbg !6556
  %80 = bitcast %struct.rr* %79 to i8*, !dbg !6556
  call void @free(i8* %80) #10, !dbg !6557
  store %struct.rr* null, %struct.rr** %rr_a, align 8, !dbg !6558
  br label %81, !dbg !6559

; <label>:81                                      ; preds = %74
  %82 = load %struct.rr_list*, %struct.rr_list** %rrl_tmp, align 8, !dbg !6560
  %83 = getelementptr inbounds %struct.rr_list, %struct.rr_list* %82, i32 0, i32 0, !dbg !6562
  %84 = load %struct.rr_list*, %struct.rr_list** %83, align 8, !dbg !6562
  store %struct.rr_list* %84, %struct.rr_list** %rrl_tmp, align 8, !dbg !6563
  br label %13, !dbg !6564

; <label>:85                                      ; preds = %73, %39, %13
  %86 = load i16, i16* %3, align 2, !dbg !6565
  %87 = load %struct.rr_set*, %struct.rr_set** %2, align 8, !dbg !6566
  %88 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %87, i32 0, i32 2, !dbg !6567
  %89 = bitcast %union.u_key* %88 to %struct.key_info**, !dbg !6568
  %90 = load %struct.key_info*, %struct.key_info** %89, align 8, !dbg !6568
  %91 = getelementptr inbounds %struct.key_info, %struct.key_info* %90, i32 0, i32 1, !dbg !6569
  %92 = load i16, i16* %91, align 2, !dbg !6569
  %93 = load %struct.rr_set*, %struct.rr_set** %2, align 8, !dbg !6570
  %94 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %93, i32 0, i32 2, !dbg !6571
  %95 = bitcast %union.u_key* %94 to %struct.key_info**, !dbg !6572
  %96 = load %struct.key_info*, %struct.key_info** %95, align 8, !dbg !6572
  %97 = getelementptr inbounds %struct.key_info, %struct.key_info* %96, i32 0, i32 2, !dbg !6573
  %98 = load i16, i16* %97, align 2, !dbg !6573
  %99 = load %struct.rr_set*, %struct.rr_set** %2, align 8, !dbg !6574
  %100 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %99, i32 0, i32 2, !dbg !6574
  %101 = bitcast %union.u_key* %100 to %struct.key_info**, !dbg !6574
  %102 = load %struct.key_info*, %struct.key_info** %101, align 8, !dbg !6574
  %103 = bitcast %struct.key_info* %102 to i8*, !dbg !6574
  %104 = getelementptr inbounds i8, i8* %103, i64 6, !dbg !6574
  %105 = load %struct.rr_list*, %struct.rr_list** %rrl, align 8, !dbg !6575
  %106 = call %struct.rr_set* @rrset_create(i16 zeroext %86, i16 zeroext %92, i16 zeroext %98, i8* %104, %struct.rr_list* %105), !dbg !6576
  store %struct.rr_set* %106, %struct.rr_set** %rrs_new, align 8, !dbg !6577
  %107 = load %struct.rr*, %struct.rr** %rr_a, align 8, !dbg !6578
  %108 = icmp ne %struct.rr* %107, null, !dbg !6578
  br i1 %108, label %109, label %112, !dbg !6580

; <label>:109                                     ; preds = %85
  %110 = load %struct.rr*, %struct.rr** %rr_a, align 8, !dbg !6581
  %111 = bitcast %struct.rr* %110 to i8*, !dbg !6581
  call void @free(i8* %111) #10, !dbg !6582
  br label %112, !dbg !6582

; <label>:112                                     ; preds = %109, %85
  %113 = load %struct.rr*, %struct.rr** %rr_new, align 8, !dbg !6583
  %114 = icmp ne %struct.rr* %113, null, !dbg !6583
  br i1 %114, label %115, label %118, !dbg !6585

; <label>:115                                     ; preds = %112
  %116 = load %struct.rr*, %struct.rr** %rr_new, align 8, !dbg !6586
  %117 = bitcast %struct.rr* %116 to i8*, !dbg !6586
  call void @free(i8* %117) #10, !dbg !6587
  br label %118, !dbg !6587

; <label>:118                                     ; preds = %115, %112
  %119 = load %struct.rr_list*, %struct.rr_list** %rrl, align 8, !dbg !6588
  %120 = icmp ne %struct.rr_list* %119, null, !dbg !6588
  br i1 %120, label %121, label %123, !dbg !6590

; <label>:121                                     ; preds = %118
  %122 = load %struct.rr_list*, %struct.rr_list** %rrl, align 8, !dbg !6591
  call void @rr_list_free(%struct.rr_list* %122), !dbg !6592
  br label %123, !dbg !6592

; <label>:123                                     ; preds = %121, %118
  %124 = load i8*, i8** %rd_new, align 8, !dbg !6593
  %125 = icmp ne i8* %124, null, !dbg !6593
  br i1 %125, label %126, label %128, !dbg !6595

; <label>:126                                     ; preds = %123
  %127 = load i8*, i8** %rd_new, align 8, !dbg !6596
  call void @free(i8* %127) #10, !dbg !6597
  br label %128, !dbg !6597

; <label>:128                                     ; preds = %126, %123
  %129 = load %struct.rr_set*, %struct.rr_set** %rrs_new, align 8, !dbg !6598
  store %struct.rr_set* %129, %struct.rr_set** %1, align 8, !dbg !6599
  br label %130, !dbg !6599

; <label>:130                                     ; preds = %128, %10
  %131 = load %struct.rr_set*, %struct.rr_set** %1, align 8, !dbg !6600
  ret %struct.rr_set* %131, !dbg !6600
}

; Function Attrs: nounwind uwtable
define void @conv_trick_ptr(%struct.generic_list* %rrsl, i8* %qname) #0 !dbg !599 {
  %1 = alloca %struct.generic_list*, align 8
  %2 = alloca i8*, align 8
  %fn = alloca i8*, align 8
  %rk = alloca %union.u_key, align 8
  %rk_new = alloca %union.u_key, align 8
  %gl = alloca %struct.generic_list*, align 8
  store %struct.generic_list* %rrsl, %struct.generic_list** %1, align 8
  call void @llvm.dbg.declare(metadata %struct.generic_list** %1, metadata !6601, metadata !2279), !dbg !6602
  store i8* %qname, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !6603, metadata !2279), !dbg !6604
  call void @llvm.dbg.declare(metadata i8** %fn, metadata !6605, metadata !2279), !dbg !6606
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.8.143, i32 0, i32 0), i8** %fn, align 8, !dbg !6606
  call void @llvm.dbg.declare(metadata %union.u_key* %rk, metadata !6607, metadata !2279), !dbg !6608
  call void @llvm.dbg.declare(metadata %union.u_key* %rk_new, metadata !6609, metadata !2279), !dbg !6610
  call void @llvm.dbg.declare(metadata %struct.generic_list** %gl, metadata !6611, metadata !2279), !dbg !6612
  %3 = load i8*, i8** %fn, align 8, !dbg !6613
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1.132, i32 0, i32 0), i8* %3), !dbg !6614
  %4 = load i8*, i8** %2, align 8, !dbg !6615
  %5 = load i8, i8* %4, align 1, !dbg !6617
  %6 = zext i8 %5 to i32, !dbg !6617
  %7 = icmp eq i32 %6, 0, !dbg !6618
  br i1 %7, label %8, label %9, !dbg !6619

; <label>:8                                       ; preds = %0
  br label %73, !dbg !6620

; <label>:9                                       ; preds = %0
  %10 = load %struct.generic_list*, %struct.generic_list** %1, align 8, !dbg !6621
  %11 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %10, i32 0, i32 2, !dbg !6622
  store i8* null, i8** %11, align 8, !dbg !6623
  %12 = load %struct.generic_list*, %struct.generic_list** %1, align 8, !dbg !6624
  %13 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %12, i32 0, i32 0, !dbg !6626
  %14 = load %struct.generic_list*, %struct.generic_list** %13, align 8, !dbg !6626
  store %struct.generic_list* %14, %struct.generic_list** %gl, align 8, !dbg !6627
  br label %15, !dbg !6628

; <label>:15                                      ; preds = %68, %9
  %16 = load %struct.generic_list*, %struct.generic_list** %gl, align 8, !dbg !6629
  %17 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %16, i32 0, i32 2, !dbg !6632
  %18 = load i8*, i8** %17, align 8, !dbg !6632
  %19 = icmp ne i8* %18, null, !dbg !6633
  br i1 %19, label %20, label %72, !dbg !6633

; <label>:20                                      ; preds = %15
  %21 = load %struct.generic_list*, %struct.generic_list** %gl, align 8, !dbg !6634
  %22 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %21, i32 0, i32 2, !dbg !6636
  %23 = load i8*, i8** %22, align 8, !dbg !6636
  %24 = bitcast i8* %23 to %struct.rr_set*, !dbg !6637
  %25 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %24, i32 0, i32 2, !dbg !6638
  %26 = bitcast %union.u_key* %rk to i8*, !dbg !6638
  %27 = bitcast %union.u_key* %25 to i8*, !dbg !6638
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %26, i8* %27, i64 8, i32 8, i1 false), !dbg !6638
  %28 = bitcast %union.u_key* %rk to %struct.key_info**, !dbg !6639
  %29 = load %struct.key_info*, %struct.key_info** %28, align 8, !dbg !6639
  %30 = getelementptr inbounds %struct.key_info, %struct.key_info* %29, i32 0, i32 0, !dbg !6641
  %31 = load i16, i16* %30, align 2, !dbg !6641
  %32 = zext i16 %31 to i32, !dbg !6642
  %33 = icmp eq i32 %32, 12, !dbg !6643
  br i1 %33, label %34, label %67, !dbg !6644

; <label>:34                                      ; preds = %20
  %35 = load i8*, i8** %2, align 8, !dbg !6645
  %36 = call i64 @strlen(i8* %35) #9, !dbg !6647
  %37 = add i64 6, %36, !dbg !6648
  %38 = add i64 %37, 1, !dbg !6649
  %39 = call noalias i8* @malloc(i64 %38) #10, !dbg !6650
  %40 = bitcast %union.u_key* %rk_new to i8**, !dbg !6651
  store i8* %39, i8** %40, align 8, !dbg !6652
  %41 = bitcast %union.u_key* %rk_new to i8**, !dbg !6653
  %42 = load i8*, i8** %41, align 8, !dbg !6653
  %43 = icmp ne i8* %42, null, !dbg !6655
  br i1 %43, label %44, label %65, !dbg !6656

; <label>:44                                      ; preds = %34
  %45 = bitcast %union.u_key* %rk_new to %struct.key_info**, !dbg !6657
  %46 = load %struct.key_info*, %struct.key_info** %45, align 8, !dbg !6657
  %47 = getelementptr inbounds %struct.key_info, %struct.key_info* %46, i32 0, i32 0, !dbg !6659
  store i16 12, i16* %47, align 2, !dbg !6660
  %48 = bitcast %union.u_key* %rk_new to %struct.key_info**, !dbg !6661
  %49 = load %struct.key_info*, %struct.key_info** %48, align 8, !dbg !6661
  %50 = getelementptr inbounds %struct.key_info, %struct.key_info* %49, i32 0, i32 1, !dbg !6662
  store i16 1, i16* %50, align 2, !dbg !6663
  %51 = bitcast %union.u_key* %rk_new to i8**, !dbg !6664
  %52 = load i8*, i8** %51, align 8, !dbg !6664
  %53 = getelementptr inbounds i8, i8* %52, i64 6, !dbg !6665
  %54 = load i8*, i8** %2, align 8, !dbg !6666
  %55 = call i8* @strcpy(i8* %53, i8* %54) #10, !dbg !6667
  %56 = bitcast %union.u_key* %rk to i8**, !dbg !6668
  %57 = load i8*, i8** %56, align 8, !dbg !6668
  call void @free(i8* %57) #10, !dbg !6669
  %58 = load %struct.generic_list*, %struct.generic_list** %gl, align 8, !dbg !6670
  %59 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %58, i32 0, i32 2, !dbg !6671
  %60 = load i8*, i8** %59, align 8, !dbg !6671
  %61 = bitcast i8* %60 to %struct.rr_set*, !dbg !6672
  %62 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %61, i32 0, i32 2, !dbg !6673
  %63 = bitcast %union.u_key* %62 to i8*, !dbg !6674
  %64 = bitcast %union.u_key* %rk_new to i8*, !dbg !6674
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %63, i8* %64, i64 8, i32 8, i1 false), !dbg !6674
  br label %66, !dbg !6675

; <label>:65                                      ; preds = %34
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9.144, i32 0, i32 0)), !dbg !6676
  br label %66

; <label>:66                                      ; preds = %65, %44
  br label %67, !dbg !6677

; <label>:67                                      ; preds = %66, %20
  br label %68, !dbg !6678

; <label>:68                                      ; preds = %67
  %69 = load %struct.generic_list*, %struct.generic_list** %gl, align 8, !dbg !6679
  %70 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %69, i32 0, i32 0, !dbg !6681
  %71 = load %struct.generic_list*, %struct.generic_list** %70, align 8, !dbg !6681
  store %struct.generic_list* %71, %struct.generic_list** %gl, align 8, !dbg !6682
  br label %15, !dbg !6683

; <label>:72                                      ; preds = %15
  br label %73, !dbg !6684

; <label>:73                                      ; preds = %72, %8
  ret void, !dbg !6685
}

; Function Attrs: nounwind
declare i8* @strcpy(i8*, i8*) #5

; Function Attrs: nounwind uwtable
define void @conv_trick_newptr(%struct.generic_list* %rrsl, i8* %qname) #0 !dbg !602 {
  %1 = alloca %struct.generic_list*, align 8
  %2 = alloca i8*, align 8
  %fn = alloca i8*, align 8
  %gl = alloca %struct.generic_list*, align 8
  %rk = alloca %union.u_key, align 8
  %rk_new = alloca %union.u_key, align 8
  %qlen = alloca i64, align 8
  store %struct.generic_list* %rrsl, %struct.generic_list** %1, align 8
  call void @llvm.dbg.declare(metadata %struct.generic_list** %1, metadata !6686, metadata !2279), !dbg !6687
  store i8* %qname, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !6688, metadata !2279), !dbg !6689
  call void @llvm.dbg.declare(metadata i8** %fn, metadata !6690, metadata !2279), !dbg !6691
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.10.147, i32 0, i32 0), i8** %fn, align 8, !dbg !6691
  call void @llvm.dbg.declare(metadata %struct.generic_list** %gl, metadata !6692, metadata !2279), !dbg !6693
  call void @llvm.dbg.declare(metadata %union.u_key* %rk, metadata !6694, metadata !2279), !dbg !6695
  call void @llvm.dbg.declare(metadata %union.u_key* %rk_new, metadata !6696, metadata !2279), !dbg !6697
  call void @llvm.dbg.declare(metadata i64* %qlen, metadata !6698, metadata !2279), !dbg !6699
  %3 = load i8*, i8** %fn, align 8, !dbg !6700
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1.132, i32 0, i32 0), i8* %3), !dbg !6701
  %4 = load i8*, i8** %2, align 8, !dbg !6702
  %5 = load i8, i8* %4, align 1, !dbg !6704
  %6 = zext i8 %5 to i32, !dbg !6704
  %7 = icmp eq i32 %6, 0, !dbg !6705
  br i1 %7, label %8, label %9, !dbg !6706

; <label>:8                                       ; preds = %0
  br label %74, !dbg !6707

; <label>:9                                       ; preds = %0
  %10 = load %struct.generic_list*, %struct.generic_list** %1, align 8, !dbg !6708
  %11 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %10, i32 0, i32 2, !dbg !6709
  store i8* null, i8** %11, align 8, !dbg !6710
  %12 = load %struct.generic_list*, %struct.generic_list** %1, align 8, !dbg !6711
  %13 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %12, i32 0, i32 0, !dbg !6713
  %14 = load %struct.generic_list*, %struct.generic_list** %13, align 8, !dbg !6713
  store %struct.generic_list* %14, %struct.generic_list** %gl, align 8, !dbg !6714
  br label %15, !dbg !6715

; <label>:15                                      ; preds = %69, %9
  %16 = load %struct.generic_list*, %struct.generic_list** %gl, align 8, !dbg !6716
  %17 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %16, i32 0, i32 2, !dbg !6719
  %18 = load i8*, i8** %17, align 8, !dbg !6719
  %19 = icmp ne i8* %18, null, !dbg !6720
  br i1 %19, label %20, label %73, !dbg !6720

; <label>:20                                      ; preds = %15
  %21 = load %struct.generic_list*, %struct.generic_list** %gl, align 8, !dbg !6721
  %22 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %21, i32 0, i32 2, !dbg !6723
  %23 = load i8*, i8** %22, align 8, !dbg !6723
  %24 = bitcast i8* %23 to %struct.rr_set*, !dbg !6724
  %25 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %24, i32 0, i32 2, !dbg !6725
  %26 = bitcast %union.u_key* %rk to i8*, !dbg !6725
  %27 = bitcast %union.u_key* %25 to i8*, !dbg !6725
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %26, i8* %27, i64 8, i32 8, i1 false), !dbg !6725
  %28 = bitcast %union.u_key* %rk to %struct.key_info**, !dbg !6726
  %29 = load %struct.key_info*, %struct.key_info** %28, align 8, !dbg !6726
  %30 = getelementptr inbounds %struct.key_info, %struct.key_info* %29, i32 0, i32 0, !dbg !6728
  %31 = load i16, i16* %30, align 2, !dbg !6728
  %32 = zext i16 %31 to i32, !dbg !6729
  %33 = icmp eq i32 %32, 12, !dbg !6730
  br i1 %33, label %34, label %68, !dbg !6731

; <label>:34                                      ; preds = %20
  %35 = load i8*, i8** %2, align 8, !dbg !6732
  %36 = call i64 @strlen(i8* %35) #9, !dbg !6734
  %37 = add i64 %36, 1, !dbg !6735
  store i64 %37, i64* %qlen, align 8, !dbg !6736
  %38 = load i64, i64* %qlen, align 8, !dbg !6737
  %39 = add i64 6, %38, !dbg !6738
  %40 = call noalias i8* @malloc(i64 %39) #10, !dbg !6739
  %41 = bitcast %union.u_key* %rk_new to i8**, !dbg !6740
  store i8* %40, i8** %41, align 8, !dbg !6741
  %42 = bitcast %union.u_key* %rk_new to i8**, !dbg !6742
  %43 = load i8*, i8** %42, align 8, !dbg !6742
  %44 = icmp ne i8* %43, null, !dbg !6744
  br i1 %44, label %45, label %66, !dbg !6745

; <label>:45                                      ; preds = %34
  %46 = bitcast %union.u_key* %rk_new to %struct.key_info**, !dbg !6746
  %47 = load %struct.key_info*, %struct.key_info** %46, align 8, !dbg !6746
  %48 = getelementptr inbounds %struct.key_info, %struct.key_info* %47, i32 0, i32 0, !dbg !6748
  store i16 12, i16* %48, align 2, !dbg !6749
  %49 = bitcast %union.u_key* %rk_new to %struct.key_info**, !dbg !6750
  %50 = load %struct.key_info*, %struct.key_info** %49, align 8, !dbg !6750
  %51 = getelementptr inbounds %struct.key_info, %struct.key_info* %50, i32 0, i32 1, !dbg !6751
  store i16 1, i16* %51, align 2, !dbg !6752
  %52 = bitcast %union.u_key* %rk_new to i8**, !dbg !6753
  %53 = load i8*, i8** %52, align 8, !dbg !6753
  %54 = getelementptr inbounds i8, i8* %53, i64 6, !dbg !6754
  %55 = load i8*, i8** %2, align 8, !dbg !6755
  %56 = load i64, i64* %qlen, align 8, !dbg !6756
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %54, i8* %55, i64 %56, i32 1, i1 false), !dbg !6757
  %57 = bitcast %union.u_key* %rk to i8**, !dbg !6758
  %58 = load i8*, i8** %57, align 8, !dbg !6758
  call void @free(i8* %58) #10, !dbg !6759
  %59 = load %struct.generic_list*, %struct.generic_list** %gl, align 8, !dbg !6760
  %60 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %59, i32 0, i32 2, !dbg !6761
  %61 = load i8*, i8** %60, align 8, !dbg !6761
  %62 = bitcast i8* %61 to %struct.rr_set*, !dbg !6762
  %63 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %62, i32 0, i32 2, !dbg !6763
  %64 = bitcast %union.u_key* %63 to i8*, !dbg !6764
  %65 = bitcast %union.u_key* %rk_new to i8*, !dbg !6764
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %64, i8* %65, i64 8, i32 8, i1 false), !dbg !6764
  br label %67, !dbg !6765

; <label>:66                                      ; preds = %34
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.11.148, i32 0, i32 0)), !dbg !6766
  br label %67

; <label>:67                                      ; preds = %66, %45
  br label %68, !dbg !6767

; <label>:68                                      ; preds = %67, %20
  br label %69, !dbg !6768

; <label>:69                                      ; preds = %68
  %70 = load %struct.generic_list*, %struct.generic_list** %gl, align 8, !dbg !6769
  %71 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %70, i32 0, i32 0, !dbg !6770
  %72 = load %struct.generic_list*, %struct.generic_list** %71, align 8, !dbg !6770
  store %struct.generic_list* %72, %struct.generic_list** %gl, align 8, !dbg !6771
  br label %15, !dbg !6772

; <label>:73                                      ; preds = %15
  br label %74, !dbg !6774

; <label>:74                                      ; preds = %73, %8
  ret void, !dbg !6775
}

; Function Attrs: nounwind uwtable
define i32 @conv_trick_conf(i8* %v6addr) #0 !dbg !603 {
  %1 = alloca i32, align 4
  %2 = alloca i8*, align 8
  %fn = alloca i8*, align 8
  store i8* %v6addr, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !6776, metadata !2279), !dbg !6777
  call void @llvm.dbg.declare(metadata i8** %fn, metadata !6778, metadata !2279), !dbg !6779
  store i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.12.149, i32 0, i32 0), i8** %fn, align 8, !dbg !6779
  %3 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 19), align 8, !dbg !6780
  %4 = icmp sge i32 %3, 30, !dbg !6782
  br i1 %4, label %5, label %7, !dbg !6783

; <label>:5                                       ; preds = %0
  %6 = load i8*, i8** %fn, align 8, !dbg !6784
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.13.150, i32 0, i32 0), i8* %6, i32 30), !dbg !6785
  br label %7, !dbg !6785

; <label>:7                                       ; preds = %5, %0
  %8 = load i8*, i8** %2, align 8, !dbg !6786
  %9 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 19), align 8, !dbg !6788
  %10 = sext i32 %9 to i64, !dbg !6789
  %11 = getelementptr inbounds [30 x [25 x i8]], [30 x [25 x i8]]* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 20), i64 0, i64 %10, !dbg !6789
  %12 = getelementptr inbounds [25 x i8], [25 x i8]* %11, i32 0, i32 0, !dbg !6789
  %13 = call i32 @inet_pton(i32 10, i8* %8, i8* %12) #10, !dbg !6790
  %14 = icmp eq i32 %13, 1, !dbg !6791
  br i1 %14, label %15, label %20, !dbg !6792

; <label>:15                                      ; preds = %7
  %16 = load i8*, i8** %fn, align 8, !dbg !6793
  %17 = load i8*, i8** %2, align 8, !dbg !6795
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.14.151, i32 0, i32 0), i8* %16, i8* %17), !dbg !6796
  %18 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 19), align 8, !dbg !6797
  %19 = add nsw i32 %18, 1, !dbg !6797
  store i32 %19, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 19), align 8, !dbg !6797
  store i32 0, i32* %1, align 4, !dbg !6798
  br label %24, !dbg !6798

; <label>:20                                      ; preds = %7
  %21 = load i8*, i8** %fn, align 8, !dbg !6799
  %22 = load i8*, i8** %2, align 8, !dbg !6800
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.15.152, i32 0, i32 0), i8* %21, i8* %22), !dbg !6801
  br label %23

; <label>:23                                      ; preds = %20
  store i32 -1, i32* %1, align 4, !dbg !6802
  br label %24, !dbg !6802

; <label>:24                                      ; preds = %23, %15
  %25 = load i32, i32* %1, align 4, !dbg !6803
  ret i32 %25, !dbg !6803
}

; Function Attrs: nounwind
declare i32 @inet_pton(i32, i8*, i8*) #5

; Function Attrs: nounwind uwtable
define i32 @conv_trick_is_tot_ptr(i8* %qname) #0 !dbg !606 {
  %1 = alloca i32, align 4
  %2 = alloca i8*, align 8
  %a6 = alloca %struct.in6_addr, align 4
  %qname6 = alloca i8*, align 8
  %q6 = alloca i8*, align 8
  %p = alloca i8*, align 8
  %buf = alloca [3 x i8], align 1
  %val = alloca i32, align 4
  %i = alloca i32, align 4
  %cmpsiz = alloca i32, align 4
  store i8* %qname, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !6804, metadata !2279), !dbg !6805
  call void @llvm.dbg.declare(metadata %struct.in6_addr* %a6, metadata !6806, metadata !2279), !dbg !6807
  call void @llvm.dbg.declare(metadata i8** %qname6, metadata !6808, metadata !2279), !dbg !6809
  call void @llvm.dbg.declare(metadata i8** %q6, metadata !6810, metadata !2279), !dbg !6811
  call void @llvm.dbg.declare(metadata i8** %p, metadata !6812, metadata !2279), !dbg !6813
  call void @llvm.dbg.declare(metadata [3 x i8]* %buf, metadata !6814, metadata !2279), !dbg !6818
  call void @llvm.dbg.declare(metadata i32* %val, metadata !6819, metadata !2279), !dbg !6820
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6821, metadata !2279), !dbg !6822
  call void @llvm.dbg.declare(metadata i32* %cmpsiz, metadata !6823, metadata !2279), !dbg !6825
  store i32 12, i32* %cmpsiz, align 4, !dbg !6825
  %3 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 19), align 8, !dbg !6826
  %4 = icmp ne i32 %3, 0, !dbg !6828
  br i1 %4, label %5, label %10, !dbg !6829

; <label>:5                                       ; preds = %0
  %6 = load i8*, i8** %2, align 8, !dbg !6830
  %7 = load i8, i8* %6, align 1, !dbg !6832
  %8 = zext i8 %7 to i32, !dbg !6832
  %9 = icmp eq i32 %8, 0, !dbg !6833
  br i1 %9, label %10, label %11, !dbg !6834

; <label>:10                                      ; preds = %5, %0
  store i32 0, i32* %1, align 4, !dbg !6835
  br label %105, !dbg !6835

; <label>:11                                      ; preds = %5
  %12 = load i8*, i8** %2, align 8, !dbg !6836
  %13 = call i8* @strstr(i8* %12, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.16.155, i32 0, i32 0)) #9, !dbg !6838
  %14 = icmp ne i8* %13, null, !dbg !6838
  br i1 %14, label %20, label %15, !dbg !6839

; <label>:15                                      ; preds = %11
  %16 = load i8*, i8** %2, align 8, !dbg !6840
  %17 = call i8* @strstr(i8* %16, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.17.156, i32 0, i32 0)) #9, !dbg !6842
  %18 = icmp ne i8* %17, null, !dbg !6842
  br i1 %18, label %20, label %19, !dbg !6843

; <label>:19                                      ; preds = %15
  store i32 0, i32* %1, align 4, !dbg !6844
  br label %105, !dbg !6844

; <label>:20                                      ; preds = %15, %11
  %21 = load i8*, i8** %2, align 8, !dbg !6845
  %22 = call i8* @strstr(i8* %21, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.18.157, i32 0, i32 0)) #9, !dbg !6846
  store i8* %22, i8** %qname6, align 8, !dbg !6847
  %23 = load i8*, i8** %qname6, align 8, !dbg !6848
  %24 = icmp ne i8* %23, null, !dbg !6848
  br i1 %24, label %28, label %25, !dbg !6850

; <label>:25                                      ; preds = %20
  %26 = load i8*, i8** %2, align 8, !dbg !6851
  %27 = call i8* @strstr(i8* %26, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.19.158, i32 0, i32 0)) #9, !dbg !6852
  store i8* %27, i8** %qname6, align 8, !dbg !6853
  br label %28, !dbg !6854

; <label>:28                                      ; preds = %25, %20
  %29 = load i8*, i8** %qname6, align 8, !dbg !6855
  %30 = icmp ne i8* %29, null, !dbg !6855
  br i1 %30, label %32, label %31, !dbg !6857

; <label>:31                                      ; preds = %28
  store i32 0, i32* %1, align 4, !dbg !6858
  br label %105, !dbg !6858

; <label>:32                                      ; preds = %28
  %33 = bitcast %struct.in6_addr* %a6 to i8*, !dbg !6859
  call void @llvm.memset.p0i8.i64(i8* %33, i8 0, i64 16, i32 4, i1 false), !dbg !6859
  %34 = load i8*, i8** %qname6, align 8, !dbg !6860
  %35 = getelementptr inbounds i8, i8* %34, i32 -1, !dbg !6860
  store i8* %35, i8** %qname6, align 8, !dbg !6860
  %36 = load i8*, i8** %qname6, align 8, !dbg !6861
  %37 = load i8*, i8** %2, align 8, !dbg !6863
  %38 = ptrtoint i8* %36 to i64, !dbg !6864
  %39 = ptrtoint i8* %37 to i64, !dbg !6864
  %40 = sub i64 %38, %39, !dbg !6864
  %41 = icmp ne i64 %40, 64, !dbg !6865
  br i1 %41, label %42, label %43, !dbg !6866

; <label>:42                                      ; preds = %32
  store i32 0, i32* %1, align 4, !dbg !6867
  br label %105, !dbg !6867

; <label>:43                                      ; preds = %32
  %44 = load i8*, i8** %qname6, align 8, !dbg !6868
  %45 = getelementptr inbounds i8, i8* %44, i32 -1, !dbg !6868
  store i8* %45, i8** %qname6, align 8, !dbg !6868
  %46 = load i8*, i8** %qname6, align 8, !dbg !6869
  store i8* %46, i8** %q6, align 8, !dbg !6870
  %47 = getelementptr inbounds %struct.in6_addr, %struct.in6_addr* %a6, i32 0, i32 0, !dbg !6871
  %48 = bitcast %union.anon.1* %47 to [16 x i8]*, !dbg !6871
  %49 = getelementptr inbounds [16 x i8], [16 x i8]* %48, i64 0, i64 0, !dbg !6872
  store i8* %49, i8** %p, align 8, !dbg !6873
  br label %50, !dbg !6874

; <label>:50                                      ; preds = %77, %43
  %51 = load i8*, i8** %q6, align 8, !dbg !6875
  %52 = getelementptr inbounds i8, i8* %51, i64 -4, !dbg !6877
  %53 = load i8*, i8** %2, align 8, !dbg !6878
  %54 = icmp uge i8* %52, %53, !dbg !6879
  br i1 %54, label %55, label %86, !dbg !6880

; <label>:55                                      ; preds = %50
  %56 = load i8*, i8** %q6, align 8, !dbg !6881
  %57 = getelementptr inbounds i8, i8* %56, i32 -1, !dbg !6881
  store i8* %57, i8** %q6, align 8, !dbg !6881
  %58 = load i8, i8* %56, align 1, !dbg !6883
  %59 = getelementptr inbounds [3 x i8], [3 x i8]* %buf, i64 0, i64 0, !dbg !6884
  store i8 %58, i8* %59, align 1, !dbg !6885
  %60 = load i8*, i8** %q6, align 8, !dbg !6886
  %61 = getelementptr inbounds i8, i8* %60, i32 -1, !dbg !6886
  store i8* %61, i8** %q6, align 8, !dbg !6886
  %62 = load i8, i8* %60, align 1, !dbg !6888
  %63 = zext i8 %62 to i32, !dbg !6888
  %64 = icmp ne i32 %63, 1, !dbg !6889
  br i1 %64, label %65, label %66, !dbg !6890

; <label>:65                                      ; preds = %55
  store i32 0, i32* %1, align 4, !dbg !6891
  br label %105, !dbg !6891

; <label>:66                                      ; preds = %55
  %67 = load i8*, i8** %q6, align 8, !dbg !6892
  %68 = getelementptr inbounds i8, i8* %67, i32 -1, !dbg !6892
  store i8* %68, i8** %q6, align 8, !dbg !6892
  %69 = load i8, i8* %67, align 1, !dbg !6893
  %70 = getelementptr inbounds [3 x i8], [3 x i8]* %buf, i64 0, i64 1, !dbg !6894
  store i8 %69, i8* %70, align 1, !dbg !6895
  %71 = load i8*, i8** %q6, align 8, !dbg !6896
  %72 = getelementptr inbounds i8, i8* %71, i32 -1, !dbg !6896
  store i8* %72, i8** %q6, align 8, !dbg !6896
  %73 = load i8, i8* %71, align 1, !dbg !6898
  %74 = zext i8 %73 to i32, !dbg !6898
  %75 = icmp ne i32 %74, 1, !dbg !6899
  br i1 %75, label %76, label %77, !dbg !6900

; <label>:76                                      ; preds = %66
  store i32 0, i32* %1, align 4, !dbg !6901
  br label %105, !dbg !6901

; <label>:77                                      ; preds = %66
  %78 = getelementptr inbounds [3 x i8], [3 x i8]* %buf, i64 0, i64 2, !dbg !6902
  store i8 0, i8* %78, align 1, !dbg !6903
  %79 = getelementptr inbounds [3 x i8], [3 x i8]* %buf, i32 0, i32 0, !dbg !6904
  %80 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %79, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.20.159, i32 0, i32 0), i32* %val) #10, !dbg !6905
  %81 = load i32, i32* %val, align 4, !dbg !6906
  %82 = and i32 %81, 255, !dbg !6907
  %83 = trunc i32 %82 to i8, !dbg !6906
  %84 = load i8*, i8** %p, align 8, !dbg !6908
  %85 = getelementptr inbounds i8, i8* %84, i32 1, !dbg !6908
  store i8* %85, i8** %p, align 8, !dbg !6908
  store i8 %83, i8* %84, align 1, !dbg !6909
  br label %50, !dbg !6910

; <label>:86                                      ; preds = %50
  store i32 0, i32* %i, align 4, !dbg !6912
  br label %87, !dbg !6914

; <label>:87                                      ; preds = %101, %86
  %88 = load i32, i32* %i, align 4, !dbg !6915
  %89 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 19), align 8, !dbg !6918
  %90 = icmp slt i32 %88, %89, !dbg !6919
  br i1 %90, label %91, label %104, !dbg !6920

; <label>:91                                      ; preds = %87
  %92 = bitcast %struct.in6_addr* %a6 to i8*, !dbg !6921
  %93 = load i32, i32* %i, align 4, !dbg !6924
  %94 = sext i32 %93 to i64, !dbg !6925
  %95 = getelementptr inbounds [30 x [25 x i8]], [30 x [25 x i8]]* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 20), i64 0, i64 %94, !dbg !6925
  %96 = bitcast [25 x i8]* %95 to i8*, !dbg !6926
  %97 = call i32 @memcmp(i8* %92, i8* %96, i64 12) #9, !dbg !6927
  %98 = icmp eq i32 %97, 0, !dbg !6928
  br i1 %98, label %99, label %100, !dbg !6929

; <label>:99                                      ; preds = %91
  store i32 1, i32* %1, align 4, !dbg !6930
  br label %105, !dbg !6930

; <label>:100                                     ; preds = %91
  br label %101, !dbg !6931

; <label>:101                                     ; preds = %100
  %102 = load i32, i32* %i, align 4, !dbg !6932
  %103 = add nsw i32 %102, 1, !dbg !6932
  store i32 %103, i32* %i, align 4, !dbg !6932
  br label %87, !dbg !6934

; <label>:104                                     ; preds = %87
  store i32 0, i32* %1, align 4, !dbg !6935
  br label %105, !dbg !6935

; <label>:105                                     ; preds = %104, %99, %76, %65, %42, %31, %19, %10
  %106 = load i32, i32* %1, align 4, !dbg !6936
  ret i32 %106, !dbg !6936
}

; Function Attrs: nounwind readonly
declare i8* @strstr(i8*, i8*) #4

; Function Attrs: nounwind
declare i32 @__isoc99_sscanf(i8*, i8*, ...) #5

; Function Attrs: nounwind uwtable
define void @conv_trick_ptr_rq(i8* %qname) #0 !dbg !607 {
  %1 = alloca i8*, align 8
  %qname6 = alloca i8*, align 8
  %tmpaddr = alloca [8 x i8], align 1
  %len = alloca i32, align 4
  %i = alloca i32, align 4
  %tmp = alloca i32, align 4
  store i8* %qname, i8** %1, align 8
  call void @llvm.dbg.declare(metadata i8** %1, metadata !6937, metadata !2279), !dbg !6938
  call void @llvm.dbg.declare(metadata i8** %qname6, metadata !6939, metadata !2279), !dbg !6940
  call void @llvm.dbg.declare(metadata [8 x i8]* %tmpaddr, metadata !6941, metadata !2279), !dbg !6943
  call void @llvm.dbg.declare(metadata i32* %len, metadata !6944, metadata !2279), !dbg !6945
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6946, metadata !2279), !dbg !6947
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !6948, metadata !2279), !dbg !6949
  %2 = load i8*, i8** %1, align 8, !dbg !6950
  %3 = load i8, i8* %2, align 1, !dbg !6952
  %4 = zext i8 %3 to i32, !dbg !6952
  %5 = icmp eq i32 %4, 0, !dbg !6953
  br i1 %5, label %6, label %7, !dbg !6954

; <label>:6                                       ; preds = %0
  br label %141, !dbg !6955

; <label>:7                                       ; preds = %0
  store i32 0, i32* %len, align 4, !dbg !6956
  %8 = load i8*, i8** %1, align 8, !dbg !6957
  store i8* %8, i8** %qname6, align 8, !dbg !6958
  br label %9, !dbg !6959

; <label>:9                                       ; preds = %12, %7
  %10 = load i32, i32* %len, align 4, !dbg !6960
  %11 = icmp slt i32 %10, 8, !dbg !6962
  br i1 %11, label %12, label %36, !dbg !6963

; <label>:12                                      ; preds = %9
  %13 = getelementptr inbounds [8 x i8], [8 x i8]* %tmpaddr, i32 0, i32 0, !dbg !6964
  %14 = load i32, i32* %len, align 4, !dbg !6966
  %15 = sext i32 %14 to i64, !dbg !6967
  %16 = getelementptr inbounds i8, i8* %13, i64 %15, !dbg !6967
  %17 = load i8*, i8** %qname6, align 8, !dbg !6968
  %18 = getelementptr inbounds i8, i8* %17, i64 1, !dbg !6969
  %19 = load i8*, i8** %qname6, align 8, !dbg !6970
  %20 = load i8, i8* %19, align 1, !dbg !6971
  %21 = zext i8 %20 to i32, !dbg !6972
  %22 = sext i32 %21 to i64, !dbg !6972
  %23 = call i8* @strncpy(i8* %16, i8* %18, i64 %22) #10, !dbg !6973
  %24 = load i8*, i8** %qname6, align 8, !dbg !6974
  %25 = load i8, i8* %24, align 1, !dbg !6975
  %26 = zext i8 %25 to i32, !dbg !6976
  %27 = load i32, i32* %len, align 4, !dbg !6977
  %28 = add nsw i32 %27, %26, !dbg !6977
  store i32 %28, i32* %len, align 4, !dbg !6977
  %29 = load i8*, i8** %qname6, align 8, !dbg !6978
  %30 = load i8, i8* %29, align 1, !dbg !6979
  %31 = zext i8 %30 to i32, !dbg !6980
  %32 = add nsw i32 %31, 1, !dbg !6981
  %33 = load i8*, i8** %qname6, align 8, !dbg !6982
  %34 = sext i32 %32 to i64, !dbg !6982
  %35 = getelementptr inbounds i8, i8* %33, i64 %34, !dbg !6982
  store i8* %35, i8** %qname6, align 8, !dbg !6982
  br label %9, !dbg !6983

; <label>:36                                      ; preds = %9
  store i32 0, i32* %i, align 4, !dbg !6985
  br label %37, !dbg !6987

; <label>:37                                      ; preds = %100, %36
  %38 = load i32, i32* %i, align 4, !dbg !6988
  %39 = icmp slt i32 %38, 8, !dbg !6991
  br i1 %39, label %40, label %103, !dbg !6992

; <label>:40                                      ; preds = %37
  %41 = load i32, i32* %i, align 4, !dbg !6993
  %42 = sext i32 %41 to i64, !dbg !6993
  %43 = getelementptr inbounds [8 x i8], [8 x i8]* %tmpaddr, i64 0, i64 %42, !dbg !6993
  %44 = load i8, i8* %43, align 1, !dbg !6993
  %45 = zext i8 %44 to i32, !dbg !6993
  %46 = sext i32 %45 to i64, !dbg !6993
  %47 = call i16** @__ctype_b_loc() #1, !dbg !6993
  %48 = load i16*, i16** %47, align 8, !dbg !6993
  %49 = getelementptr inbounds i16, i16* %48, i64 %46, !dbg !6993
  %50 = load i16, i16* %49, align 2, !dbg !6993
  %51 = zext i16 %50 to i32, !dbg !6993
  %52 = and i32 %51, 2048, !dbg !6993
  %53 = icmp ne i32 %52, 0, !dbg !6993
  br i1 %53, label %54, label %62, !dbg !6996

; <label>:54                                      ; preds = %40
  %55 = load i32, i32* %i, align 4, !dbg !6997
  %56 = sext i32 %55 to i64, !dbg !6998
  %57 = getelementptr inbounds [8 x i8], [8 x i8]* %tmpaddr, i64 0, i64 %56, !dbg !6998
  %58 = load i8, i8* %57, align 1, !dbg !6999
  %59 = zext i8 %58 to i32, !dbg !6999
  %60 = sub nsw i32 %59, 48, !dbg !6999
  %61 = trunc i32 %60 to i8, !dbg !6999
  store i8 %61, i8* %57, align 1, !dbg !6999
  br label %99, !dbg !6998

; <label>:62                                      ; preds = %40
  %63 = load i32, i32* %i, align 4, !dbg !7000
  %64 = sext i32 %63 to i64, !dbg !7000
  %65 = getelementptr inbounds [8 x i8], [8 x i8]* %tmpaddr, i64 0, i64 %64, !dbg !7000
  %66 = load i8, i8* %65, align 1, !dbg !7000
  %67 = zext i8 %66 to i32, !dbg !7000
  %68 = sext i32 %67 to i64, !dbg !7000
  %69 = call i16** @__ctype_b_loc() #1, !dbg !7000
  %70 = load i16*, i16** %69, align 8, !dbg !7000
  %71 = getelementptr inbounds i16, i16* %70, i64 %68, !dbg !7000
  %72 = load i16, i16* %71, align 2, !dbg !7000
  %73 = zext i16 %72 to i32, !dbg !7000
  %74 = and i32 %73, 1024, !dbg !7000
  %75 = icmp ne i32 %74, 0, !dbg !7000
  br i1 %75, label %76, label %98, !dbg !7002

; <label>:76                                      ; preds = %62
  %77 = load i32, i32* %i, align 4, !dbg !7003
  %78 = sext i32 %77 to i64, !dbg !7003
  %79 = getelementptr inbounds [8 x i8], [8 x i8]* %tmpaddr, i64 0, i64 %78, !dbg !7003
  %80 = load i8, i8* %79, align 1, !dbg !7003
  %81 = zext i8 %80 to i32, !dbg !7003
  %82 = sext i32 %81 to i64, !dbg !7003
  %83 = call i16** @__ctype_b_loc() #1, !dbg !7003
  %84 = load i16*, i16** %83, align 8, !dbg !7003
  %85 = getelementptr inbounds i16, i16* %84, i64 %82, !dbg !7003
  %86 = load i16, i16* %85, align 2, !dbg !7003
  %87 = zext i16 %86 to i32, !dbg !7003
  %88 = and i32 %87, 256, !dbg !7003
  %89 = icmp ne i32 %88, 0, !dbg !7003
  %90 = select i1 %89, i32 55, i32 87, !dbg !7003
  %91 = load i32, i32* %i, align 4, !dbg !7004
  %92 = sext i32 %91 to i64, !dbg !7005
  %93 = getelementptr inbounds [8 x i8], [8 x i8]* %tmpaddr, i64 0, i64 %92, !dbg !7005
  %94 = load i8, i8* %93, align 1, !dbg !7006
  %95 = zext i8 %94 to i32, !dbg !7006
  %96 = sub nsw i32 %95, %90, !dbg !7006
  %97 = trunc i32 %96 to i8, !dbg !7006
  store i8 %97, i8* %93, align 1, !dbg !7006
  br label %98, !dbg !7005

; <label>:98                                      ; preds = %76, %62
  br label %99

; <label>:99                                      ; preds = %98, %54
  br label %100, !dbg !7007

; <label>:100                                     ; preds = %99
  %101 = load i32, i32* %i, align 4, !dbg !7008
  %102 = add nsw i32 %101, 1, !dbg !7008
  store i32 %102, i32* %i, align 4, !dbg !7008
  br label %37, !dbg !7010

; <label>:103                                     ; preds = %37
  %104 = load i8*, i8** %1, align 8, !dbg !7011
  store i8* %104, i8** %qname6, align 8, !dbg !7013
  store i32 0, i32* %i, align 4, !dbg !7014
  br label %105, !dbg !7015

; <label>:105                                     ; preds = %134, %103
  %106 = load i32, i32* %i, align 4, !dbg !7016
  %107 = icmp slt i32 %106, 8, !dbg !7019
  br i1 %107, label %108, label %137, !dbg !7020

; <label>:108                                     ; preds = %105
  %109 = load i32, i32* %i, align 4, !dbg !7021
  %110 = sext i32 %109 to i64, !dbg !7023
  %111 = getelementptr inbounds [8 x i8], [8 x i8]* %tmpaddr, i64 0, i64 %110, !dbg !7023
  %112 = load i8, i8* %111, align 1, !dbg !7023
  %113 = zext i8 %112 to i32, !dbg !7023
  %114 = load i32, i32* %i, align 4, !dbg !7024
  %115 = add nsw i32 %114, 1, !dbg !7025
  %116 = sext i32 %115 to i64, !dbg !7026
  %117 = getelementptr inbounds [8 x i8], [8 x i8]* %tmpaddr, i64 0, i64 %116, !dbg !7026
  %118 = load i8, i8* %117, align 1, !dbg !7026
  %119 = zext i8 %118 to i32, !dbg !7026
  %120 = mul nsw i32 16, %119, !dbg !7027
  %121 = add nsw i32 %113, %120, !dbg !7028
  store i32 %121, i32* %tmp, align 4, !dbg !7029
  %122 = load i8*, i8** %qname6, align 8, !dbg !7030
  %123 = getelementptr inbounds i8, i8* %122, i64 1, !dbg !7031
  %124 = load i32, i32* %tmp, align 4, !dbg !7032
  %125 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %123, i64 4, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.21.162, i32 0, i32 0), i32 %124) #10, !dbg !7033
  store i32 %125, i32* %len, align 4, !dbg !7034
  %126 = load i32, i32* %len, align 4, !dbg !7035
  %127 = trunc i32 %126 to i8, !dbg !7035
  %128 = load i8*, i8** %qname6, align 8, !dbg !7036
  store i8 %127, i8* %128, align 1, !dbg !7037
  %129 = load i32, i32* %len, align 4, !dbg !7038
  %130 = add nsw i32 %129, 1, !dbg !7039
  %131 = load i8*, i8** %qname6, align 8, !dbg !7040
  %132 = sext i32 %130 to i64, !dbg !7040
  %133 = getelementptr inbounds i8, i8* %131, i64 %132, !dbg !7040
  store i8* %133, i8** %qname6, align 8, !dbg !7040
  br label %134, !dbg !7041

; <label>:134                                     ; preds = %108
  %135 = load i32, i32* %i, align 4, !dbg !7042
  %136 = add nsw i32 %135, 2, !dbg !7042
  store i32 %136, i32* %i, align 4, !dbg !7042
  br label %105, !dbg !7044

; <label>:137                                     ; preds = %105
  %138 = load i8*, i8** %qname6, align 8, !dbg !7045
  store i8 0, i8* %138, align 1, !dbg !7046
  %139 = load i8*, i8** %1, align 8, !dbg !7047
  %140 = call i64 @strlcat(i8* %139, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.22.163, i32 0, i32 0), i64 256), !dbg !7048
  br label %141, !dbg !7049

; <label>:141                                     ; preds = %137, %6
  ret void, !dbg !7050
}

; Function Attrs: nounwind
declare i8* @strncpy(i8*, i8*, i64) #5

; Function Attrs: nounwind readnone
declare i16** @__ctype_b_loc() #6

; Function Attrs: nounwind
declare i32 @snprintf(i8*, i64, i8*, ...) #5

; Function Attrs: nounwind uwtable
define i32 @conv_trick_is_tot_newptr(i8* %qname, %struct.in6_addr* %a6p) #0 !dbg !610 {
  %1 = alloca i32, align 4
  %2 = alloca i8*, align 8
  %3 = alloca %struct.in6_addr*, align 8
  %cmpsiz = alloca i32, align 4
  %ip6len = alloca i32, align 4
  %arpalen = alloca i32, align 4
  %i = alloca i32, align 4
  store i8* %qname, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !7051, metadata !2279), !dbg !7052
  store %struct.in6_addr* %a6p, %struct.in6_addr** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.in6_addr** %3, metadata !7053, metadata !2279), !dbg !7054
  call void @llvm.dbg.declare(metadata i32* %cmpsiz, metadata !7055, metadata !2279), !dbg !7056
  store i32 12, i32* %cmpsiz, align 4, !dbg !7056
  call void @llvm.dbg.declare(metadata i32* %ip6len, metadata !7057, metadata !2279), !dbg !7058
  call void @llvm.dbg.declare(metadata i32* %arpalen, metadata !7059, metadata !2279), !dbg !7060
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7061, metadata !2279), !dbg !7062
  %4 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 19), align 8, !dbg !7063
  %5 = icmp ne i32 %4, 0, !dbg !7065
  br i1 %5, label %6, label %11, !dbg !7066

; <label>:6                                       ; preds = %0
  %7 = load i8*, i8** %2, align 8, !dbg !7067
  %8 = load i8, i8* %7, align 1, !dbg !7069
  %9 = zext i8 %8 to i32, !dbg !7069
  %10 = icmp eq i32 %9, 0, !dbg !7070
  br i1 %10, label %11, label %12, !dbg !7071

; <label>:11                                      ; preds = %6, %0
  store i32 0, i32* %1, align 4, !dbg !7072
  br label %109, !dbg !7072

; <label>:12                                      ; preds = %6
  store i32 3, i32* %ip6len, align 4, !dbg !7073
  store i32 4, i32* %arpalen, align 4, !dbg !7074
  %13 = load i8*, i8** %2, align 8, !dbg !7075
  %14 = load i8, i8* %13, align 1, !dbg !7077
  %15 = zext i8 %14 to i32, !dbg !7077
  %16 = icmp ne i32 %15, 65, !dbg !7078
  br i1 %16, label %23, label %17, !dbg !7079

; <label>:17                                      ; preds = %12
  %18 = load i8*, i8** %2, align 8, !dbg !7080
  %19 = getelementptr inbounds i8, i8* %18, i64 1, !dbg !7082
  %20 = load i8, i8* %19, align 1, !dbg !7083
  %21 = zext i8 %20 to i32, !dbg !7083
  %22 = icmp ne i32 %21, 128, !dbg !7084
  br i1 %22, label %23, label %24, !dbg !7085

; <label>:23                                      ; preds = %17, %12
  store i32 0, i32* %1, align 4, !dbg !7086
  br label %109, !dbg !7086

; <label>:24                                      ; preds = %17
  %25 = load %struct.in6_addr*, %struct.in6_addr** %3, align 8, !dbg !7087
  %26 = bitcast %struct.in6_addr* %25 to i8*, !dbg !7088
  %27 = load i8*, i8** %2, align 8, !dbg !7089
  %28 = getelementptr inbounds i8, i8* %27, i64 2, !dbg !7090
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %26, i8* %28, i64 16, i32 1, i1 false), !dbg !7088
  %29 = load i8*, i8** %2, align 8, !dbg !7091
  %30 = getelementptr inbounds i8, i8* %29, i64 18, !dbg !7091
  store i8* %30, i8** %2, align 8, !dbg !7091
  %31 = load i8*, i8** %2, align 8, !dbg !7092
  %32 = load i8, i8* %31, align 1, !dbg !7094
  %33 = zext i8 %32 to i32, !dbg !7094
  %34 = load i32, i32* %ip6len, align 4, !dbg !7095
  %35 = icmp ne i32 %33, %34, !dbg !7096
  br i1 %35, label %50, label %36, !dbg !7097

; <label>:36                                      ; preds = %24
  %37 = load i8*, i8** %2, align 8, !dbg !7098
  %38 = getelementptr inbounds i8, i8* %37, i64 1, !dbg !7100
  %39 = load i32, i32* %ip6len, align 4, !dbg !7101
  %40 = sext i32 %39 to i64, !dbg !7101
  %41 = call i32 @strncasecmp(i8* %38, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.18.157, i32 0, i32 0), i64 %40) #9, !dbg !7102
  %42 = icmp ne i32 %41, 0, !dbg !7102
  br i1 %42, label %43, label %51, !dbg !7103

; <label>:43                                      ; preds = %36
  %44 = load i8*, i8** %2, align 8, !dbg !7104
  %45 = getelementptr inbounds i8, i8* %44, i64 1, !dbg !7105
  %46 = load i32, i32* %ip6len, align 4, !dbg !7106
  %47 = sext i32 %46 to i64, !dbg !7106
  %48 = call i32 @strncasecmp(i8* %45, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.19.158, i32 0, i32 0), i64 %47) #9, !dbg !7107
  %49 = icmp ne i32 %48, 0, !dbg !7107
  br i1 %49, label %50, label %51, !dbg !7108

; <label>:50                                      ; preds = %43, %24
  store i32 0, i32* %1, align 4, !dbg !7110
  br label %109, !dbg !7110

; <label>:51                                      ; preds = %43, %36
  %52 = load i32, i32* %ip6len, align 4, !dbg !7111
  %53 = add nsw i32 %52, 1, !dbg !7112
  %54 = load i8*, i8** %2, align 8, !dbg !7113
  %55 = sext i32 %53 to i64, !dbg !7113
  %56 = getelementptr inbounds i8, i8* %54, i64 %55, !dbg !7113
  store i8* %56, i8** %2, align 8, !dbg !7113
  br label %57

; <label>:57                                      ; preds = %51
  %58 = load i8*, i8** %2, align 8, !dbg !7114
  %59 = load i8, i8* %58, align 1, !dbg !7116
  %60 = zext i8 %59 to i32, !dbg !7116
  %61 = load i32, i32* %arpalen, align 4, !dbg !7117
  %62 = icmp ne i32 %60, %61, !dbg !7118
  br i1 %62, label %77, label %63, !dbg !7119

; <label>:63                                      ; preds = %57
  %64 = load i8*, i8** %2, align 8, !dbg !7120
  %65 = getelementptr inbounds i8, i8* %64, i64 1, !dbg !7121
  %66 = load i32, i32* %arpalen, align 4, !dbg !7122
  %67 = sext i32 %66 to i64, !dbg !7122
  %68 = call i32 @strncasecmp(i8* %65, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.23.166, i32 0, i32 0), i64 %67) #9, !dbg !7123
  %69 = icmp ne i32 %68, 0, !dbg !7123
  br i1 %69, label %70, label %78, !dbg !7124

; <label>:70                                      ; preds = %63
  %71 = load i8*, i8** %2, align 8, !dbg !7125
  %72 = getelementptr inbounds i8, i8* %71, i64 1, !dbg !7126
  %73 = load i32, i32* %arpalen, align 4, !dbg !7127
  %74 = sext i32 %73 to i64, !dbg !7127
  %75 = call i32 @strncasecmp(i8* %72, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.24.167, i32 0, i32 0), i64 %74) #9, !dbg !7128
  %76 = icmp ne i32 %75, 0, !dbg !7128
  br i1 %76, label %77, label %78, !dbg !7129

; <label>:77                                      ; preds = %70, %57
  store i32 0, i32* %1, align 4, !dbg !7131
  br label %109, !dbg !7131

; <label>:78                                      ; preds = %70, %63
  %79 = load i32, i32* %arpalen, align 4, !dbg !7132
  %80 = add nsw i32 %79, 1, !dbg !7133
  %81 = load i8*, i8** %2, align 8, !dbg !7134
  %82 = sext i32 %80 to i64, !dbg !7134
  %83 = getelementptr inbounds i8, i8* %81, i64 %82, !dbg !7134
  store i8* %83, i8** %2, align 8, !dbg !7134
  %84 = load i8*, i8** %2, align 8, !dbg !7135
  %85 = load i8, i8* %84, align 1, !dbg !7137
  %86 = zext i8 %85 to i32, !dbg !7137
  %87 = icmp ne i32 %86, 0, !dbg !7138
  br i1 %87, label %88, label %89, !dbg !7139

; <label>:88                                      ; preds = %78
  store i32 0, i32* %1, align 4, !dbg !7140
  br label %109, !dbg !7140

; <label>:89                                      ; preds = %78
  store i32 0, i32* %i, align 4, !dbg !7141
  br label %90, !dbg !7143

; <label>:90                                      ; preds = %105, %89
  %91 = load i32, i32* %i, align 4, !dbg !7144
  %92 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 19), align 8, !dbg !7147
  %93 = icmp slt i32 %91, %92, !dbg !7148
  br i1 %93, label %94, label %108, !dbg !7149

; <label>:94                                      ; preds = %90
  %95 = load %struct.in6_addr*, %struct.in6_addr** %3, align 8, !dbg !7150
  %96 = bitcast %struct.in6_addr* %95 to i8*, !dbg !7150
  %97 = load i32, i32* %i, align 4, !dbg !7153
  %98 = sext i32 %97 to i64, !dbg !7154
  %99 = getelementptr inbounds [30 x [25 x i8]], [30 x [25 x i8]]* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 20), i64 0, i64 %98, !dbg !7154
  %100 = bitcast [25 x i8]* %99 to i8*, !dbg !7155
  %101 = call i32 @memcmp(i8* %96, i8* %100, i64 12) #9, !dbg !7156
  %102 = icmp ne i32 %101, 0, !dbg !7156
  br i1 %102, label %104, label %103, !dbg !7157

; <label>:103                                     ; preds = %94
  store i32 1, i32* %1, align 4, !dbg !7158
  br label %109, !dbg !7158

; <label>:104                                     ; preds = %94
  br label %105, !dbg !7159

; <label>:105                                     ; preds = %104
  %106 = load i32, i32* %i, align 4, !dbg !7160
  %107 = add nsw i32 %106, 1, !dbg !7160
  store i32 %107, i32* %i, align 4, !dbg !7160
  br label %90, !dbg !7162

; <label>:108                                     ; preds = %90
  store i32 0, i32* %1, align 4, !dbg !7163
  br label %109, !dbg !7163

; <label>:109                                     ; preds = %108, %103, %88, %77, %50, %23, %11
  %110 = load i32, i32* %1, align 4, !dbg !7164
  ret i32 %110, !dbg !7164
}

; Function Attrs: nounwind uwtable
define void @conv_trick_newptr_rq(i8* %qname, %struct.in6_addr* %a6) #0 !dbg !633 {
  %1 = alloca i8*, align 8
  %2 = alloca %struct.in6_addr*, align 8
  %len = alloca i32, align 4
  %i = alloca i32, align 4
  store i8* %qname, i8** %1, align 8
  call void @llvm.dbg.declare(metadata i8** %1, metadata !7165, metadata !2279), !dbg !7166
  store %struct.in6_addr* %a6, %struct.in6_addr** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.in6_addr** %2, metadata !7167, metadata !2279), !dbg !7168
  call void @llvm.dbg.declare(metadata i32* %len, metadata !7169, metadata !2279), !dbg !7170
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7171, metadata !2279), !dbg !7172
  %3 = load i8*, i8** %1, align 8, !dbg !7173
  %4 = load i8, i8* %3, align 1, !dbg !7175
  %5 = zext i8 %4 to i32, !dbg !7175
  %6 = icmp eq i32 %5, 0, !dbg !7176
  br i1 %6, label %7, label %8, !dbg !7177

; <label>:7                                       ; preds = %0
  br label %39, !dbg !7178

; <label>:8                                       ; preds = %0
  store i32 0, i32* %i, align 4, !dbg !7179
  br label %9, !dbg !7181

; <label>:9                                       ; preds = %33, %8
  %10 = load i32, i32* %i, align 4, !dbg !7182
  %11 = icmp slt i32 %10, 4, !dbg !7185
  br i1 %11, label %12, label %36, !dbg !7186

; <label>:12                                      ; preds = %9
  %13 = load i8*, i8** %1, align 8, !dbg !7187
  %14 = getelementptr inbounds i8, i8* %13, i64 1, !dbg !7189
  %15 = load i32, i32* %i, align 4, !dbg !7190
  %16 = sub nsw i32 15, %15, !dbg !7191
  %17 = sext i32 %16 to i64, !dbg !7192
  %18 = load %struct.in6_addr*, %struct.in6_addr** %2, align 8, !dbg !7192
  %19 = getelementptr inbounds %struct.in6_addr, %struct.in6_addr* %18, i32 0, i32 0, !dbg !7193
  %20 = bitcast %union.anon.1* %19 to [16 x i8]*, !dbg !7193
  %21 = getelementptr inbounds [16 x i8], [16 x i8]* %20, i64 0, i64 %17, !dbg !7192
  %22 = load i8, i8* %21, align 1, !dbg !7192
  %23 = zext i8 %22 to i32, !dbg !7192
  %24 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %14, i64 4, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.21.162, i32 0, i32 0), i32 %23) #10, !dbg !7194
  store i32 %24, i32* %len, align 4, !dbg !7195
  %25 = load i32, i32* %len, align 4, !dbg !7196
  %26 = trunc i32 %25 to i8, !dbg !7196
  %27 = load i8*, i8** %1, align 8, !dbg !7197
  store i8 %26, i8* %27, align 1, !dbg !7198
  %28 = load i32, i32* %len, align 4, !dbg !7199
  %29 = add nsw i32 %28, 1, !dbg !7200
  %30 = load i8*, i8** %1, align 8, !dbg !7201
  %31 = sext i32 %29 to i64, !dbg !7201
  %32 = getelementptr inbounds i8, i8* %30, i64 %31, !dbg !7201
  store i8* %32, i8** %1, align 8, !dbg !7201
  br label %33, !dbg !7202

; <label>:33                                      ; preds = %12
  %34 = load i32, i32* %i, align 4, !dbg !7203
  %35 = add nsw i32 %34, 1, !dbg !7203
  store i32 %35, i32* %i, align 4, !dbg !7203
  br label %9, !dbg !7205

; <label>:36                                      ; preds = %9
  %37 = load i8*, i8** %1, align 8, !dbg !7206
  %38 = call i8* @strcpy(i8* %37, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.25.170, i32 0, i32 0)) #10, !dbg !7207
  br label %39, !dbg !7208

; <label>:39                                      ; preds = %36, %7
  ret void, !dbg !7209
}

; Function Attrs: nounwind uwtable
define i32 @ev_tcp_srv_accept(i32 %srv_sock) #0 !dbg !741 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %peer = alloca %struct.sockaddr_storage, align 8
  %peer_len = alloca i32, align 4
  %conn_sock = alloca i32, align 4
  store i32 %srv_sock, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !7210, metadata !2279), !dbg !7211
  call void @llvm.dbg.declare(metadata %struct.sockaddr_storage* %peer, metadata !7212, metadata !2279), !dbg !7221
  call void @llvm.dbg.declare(metadata i32* %peer_len, metadata !7222, metadata !2279), !dbg !7223
  call void @llvm.dbg.declare(metadata i32* %conn_sock, metadata !7224, metadata !2279), !dbg !7225
  %3 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 8), align 4, !dbg !7226
  %4 = icmp sgt i32 %3, 2, !dbg !7228
  br i1 %4, label %5, label %7, !dbg !7229

; <label>:5                                       ; preds = %0
  %6 = load i32, i32* %2, align 4, !dbg !7230
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.171, i32 0, i32 0), i32 %6), !dbg !7231
  br label %7, !dbg !7231

; <label>:7                                       ; preds = %5, %0
  store i32 128, i32* %peer_len, align 4, !dbg !7232
  %8 = load i32, i32* %2, align 4, !dbg !7233
  %9 = bitcast %struct.sockaddr_storage* %peer to %struct.sockaddr*, !dbg !7234
  %10 = call i32 @accept(i32 %8, %struct.sockaddr* %9, i32* %peer_len), !dbg !7235
  store i32 %10, i32* %conn_sock, align 4, !dbg !7236
  %11 = load i32, i32* %conn_sock, align 4, !dbg !7237
  %12 = icmp slt i32 %11, 0, !dbg !7239
  br i1 %12, label %13, label %14, !dbg !7240

; <label>:13                                      ; preds = %7
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1.172, i32 0, i32 0)), !dbg !7241
  store i32 -1, i32* %1, align 4, !dbg !7243
  br label %18, !dbg !7243

; <label>:14                                      ; preds = %7
  %15 = load i32, i32* %conn_sock, align 4, !dbg !7244
  %16 = bitcast %struct.sockaddr_storage* %peer to %struct.sockaddr*, !dbg !7245
  %17 = call i32 @tcp_response_start(i32 %15, %struct.sockaddr* %16), !dbg !7246
  store i32 %17, i32* %1, align 4, !dbg !7247
  br label %18, !dbg !7247

; <label>:18                                      ; preds = %14, %13
  %19 = load i32, i32* %1, align 4, !dbg !7248
  ret i32 %19, !dbg !7248
}

declare i32 @accept(i32, %struct.sockaddr*, i32*) #2

; Function Attrs: nounwind uwtable
define i32 @ev_tcp_common_eq(i8* %arg1, i8* %arg2) #0 !dbg !744 {
  %1 = alloca i32, align 4
  %2 = alloca i8*, align 8
  %3 = alloca i8*, align 8
  %etcd_arg1 = alloca %struct.ev_tcp_common_data*, align 8
  %etcd_arg2 = alloca %struct.ev_tcp_common_data*, align 8
  store i8* %arg1, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !7249, metadata !2279), !dbg !7250
  store i8* %arg2, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !7251, metadata !2279), !dbg !7252
  call void @llvm.dbg.declare(metadata %struct.ev_tcp_common_data** %etcd_arg1, metadata !7253, metadata !2279), !dbg !7254
  call void @llvm.dbg.declare(metadata %struct.ev_tcp_common_data** %etcd_arg2, metadata !7255, metadata !2279), !dbg !7256
  %4 = load i8*, i8** %2, align 8, !dbg !7257
  %5 = bitcast i8* %4 to %struct.ev_tcp_common_data*, !dbg !7257
  store %struct.ev_tcp_common_data* %5, %struct.ev_tcp_common_data** %etcd_arg1, align 8, !dbg !7258
  %6 = load i8*, i8** %3, align 8, !dbg !7259
  %7 = bitcast i8* %6 to %struct.ev_tcp_common_data*, !dbg !7259
  store %struct.ev_tcp_common_data* %7, %struct.ev_tcp_common_data** %etcd_arg2, align 8, !dbg !7260
  %8 = load %struct.ev_tcp_common_data*, %struct.ev_tcp_common_data** %etcd_arg1, align 8, !dbg !7261
  %9 = getelementptr inbounds %struct.ev_tcp_common_data, %struct.ev_tcp_common_data* %8, i32 0, i32 0, !dbg !7263
  %10 = load i32, i32* %9, align 8, !dbg !7263
  %11 = load %struct.ev_tcp_common_data*, %struct.ev_tcp_common_data** %etcd_arg2, align 8, !dbg !7264
  %12 = getelementptr inbounds %struct.ev_tcp_common_data, %struct.ev_tcp_common_data* %11, i32 0, i32 0, !dbg !7265
  %13 = load i32, i32* %12, align 8, !dbg !7265
  %14 = icmp eq i32 %10, %13, !dbg !7266
  br i1 %14, label %15, label %16, !dbg !7267

; <label>:15                                      ; preds = %0
  store i32 0, i32* %1, align 4, !dbg !7268
  br label %17, !dbg !7268

; <label>:16                                      ; preds = %0
  store i32 1, i32* %1, align 4, !dbg !7269
  br label %17, !dbg !7269

; <label>:17                                      ; preds = %16, %15
  %18 = load i32, i32* %1, align 4, !dbg !7270
  ret i32 %18, !dbg !7270
}

; Function Attrs: nounwind uwtable
define %struct.generic_list* @ev_tcp_common_init() #0 !dbg !747 {
  %1 = alloca %struct.generic_list*, align 8
  %gl = alloca %struct.generic_list*, align 8
  call void @llvm.dbg.declare(metadata %struct.generic_list** %gl, metadata !7271, metadata !2279), !dbg !7272
  %2 = call %struct.generic_list* @list_init(), !dbg !7273
  store %struct.generic_list* %2, %struct.generic_list** %gl, align 8, !dbg !7274
  %3 = load %struct.generic_list*, %struct.generic_list** %gl, align 8, !dbg !7275
  %4 = icmp ne %struct.generic_list* %3, null, !dbg !7275
  br i1 %4, label %6, label %5, !dbg !7277

; <label>:5                                       ; preds = %0
  store %struct.generic_list* null, %struct.generic_list** %1, align 8, !dbg !7278
  br label %10, !dbg !7278

; <label>:6                                       ; preds = %0
  %7 = load %struct.generic_list*, %struct.generic_list** %gl, align 8, !dbg !7279
  %8 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %7, i32 0, i32 2, !dbg !7280
  store i8* null, i8** %8, align 8, !dbg !7281
  %9 = load %struct.generic_list*, %struct.generic_list** %gl, align 8, !dbg !7282
  store %struct.generic_list* %9, %struct.generic_list** %1, align 8, !dbg !7283
  br label %10, !dbg !7283

; <label>:10                                      ; preds = %6, %5
  %11 = load %struct.generic_list*, %struct.generic_list** %1, align 8, !dbg !7284
  ret %struct.generic_list* %11, !dbg !7284
}

; Function Attrs: nounwind uwtable
define i32 @ev_tcp_common_register(%struct.generic_list* %gl, i32 %sock, %struct.context* %cptr) #0 !dbg !750 {
  %1 = alloca i32, align 4
  %2 = alloca %struct.generic_list*, align 8
  %3 = alloca i32, align 4
  %4 = alloca %struct.context*, align 8
  %fn = alloca i8*, align 8
  %etcd_new = alloca %struct.ev_tcp_common_data*, align 8
  store %struct.generic_list* %gl, %struct.generic_list** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.generic_list** %2, metadata !7285, metadata !2279), !dbg !7286
  store i32 %sock, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !7287, metadata !2279), !dbg !7288
  store %struct.context* %cptr, %struct.context** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.context** %4, metadata !7289, metadata !2279), !dbg !7290
  call void @llvm.dbg.declare(metadata i8** %fn, metadata !7291, metadata !2279), !dbg !7292
  store i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.2.173, i32 0, i32 0), i8** %fn, align 8, !dbg !7292
  call void @llvm.dbg.declare(metadata %struct.ev_tcp_common_data** %etcd_new, metadata !7293, metadata !2279), !dbg !7294
  %5 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 8), align 4, !dbg !7295
  %6 = icmp sgt i32 %5, 2, !dbg !7297
  br i1 %6, label %7, label %10, !dbg !7298

; <label>:7                                       ; preds = %0
  %8 = load i8*, i8** %fn, align 8, !dbg !7299
  %9 = load i32, i32* %3, align 4, !dbg !7300
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.174, i32 0, i32 0), i8* %8, i32 %9), !dbg !7301
  br label %10, !dbg !7301

; <label>:10                                      ; preds = %7, %0
  %11 = call noalias i8* @malloc(i64 16) #10, !dbg !7302
  %12 = bitcast i8* %11 to %struct.ev_tcp_common_data*, !dbg !7302
  store %struct.ev_tcp_common_data* %12, %struct.ev_tcp_common_data** %etcd_new, align 8, !dbg !7303
  %13 = load %struct.ev_tcp_common_data*, %struct.ev_tcp_common_data** %etcd_new, align 8, !dbg !7304
  %14 = icmp ne %struct.ev_tcp_common_data* %13, null, !dbg !7304
  br i1 %14, label %16, label %15, !dbg !7306

; <label>:15                                      ; preds = %10
  store i32 -1, i32* %1, align 4, !dbg !7307
  br label %30, !dbg !7307

; <label>:16                                      ; preds = %10
  %17 = load i32, i32* %3, align 4, !dbg !7308
  %18 = load %struct.ev_tcp_common_data*, %struct.ev_tcp_common_data** %etcd_new, align 8, !dbg !7309
  %19 = getelementptr inbounds %struct.ev_tcp_common_data, %struct.ev_tcp_common_data* %18, i32 0, i32 0, !dbg !7310
  store i32 %17, i32* %19, align 8, !dbg !7311
  %20 = load %struct.context*, %struct.context** %4, align 8, !dbg !7312
  %21 = load %struct.ev_tcp_common_data*, %struct.ev_tcp_common_data** %etcd_new, align 8, !dbg !7313
  %22 = getelementptr inbounds %struct.ev_tcp_common_data, %struct.ev_tcp_common_data* %21, i32 0, i32 1, !dbg !7314
  store %struct.context* %20, %struct.context** %22, align 8, !dbg !7315
  %23 = load %struct.generic_list*, %struct.generic_list** %2, align 8, !dbg !7316
  %24 = load %struct.ev_tcp_common_data*, %struct.ev_tcp_common_data** %etcd_new, align 8, !dbg !7318
  %25 = bitcast %struct.ev_tcp_common_data* %24 to i8*, !dbg !7318
  %26 = call i32 @list_add(%struct.generic_list* %23, i8* %25), !dbg !7319
  %27 = icmp slt i32 %26, 0, !dbg !7320
  br i1 %27, label %28, label %29, !dbg !7321

; <label>:28                                      ; preds = %16
  store i32 -1, i32* %1, align 4, !dbg !7322
  br label %30, !dbg !7322

; <label>:29                                      ; preds = %16
  store i32 0, i32* %1, align 4, !dbg !7323
  br label %30, !dbg !7323

; <label>:30                                      ; preds = %29, %28, %15
  %31 = load i32, i32* %1, align 4, !dbg !7324
  ret i32 %31, !dbg !7324
}

; Function Attrs: nounwind uwtable
define i32 @ev_tcp_common_remove(%struct.generic_list* %gl, i32 %sock) #0 !dbg !753 {
  %1 = alloca i32, align 4
  %2 = alloca %struct.generic_list*, align 8
  %3 = alloca i32, align 4
  %fn = alloca i8*, align 8
  %etcd_tmp = alloca %struct.ev_tcp_common_data, align 8
  %etcd_p = alloca %struct.ev_tcp_common_data*, align 8
  %gl_tmp = alloca %struct.generic_list*, align 8
  store %struct.generic_list* %gl, %struct.generic_list** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.generic_list** %2, metadata !7325, metadata !2279), !dbg !7326
  store i32 %sock, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !7327, metadata !2279), !dbg !7328
  call void @llvm.dbg.declare(metadata i8** %fn, metadata !7329, metadata !2279), !dbg !7330
  store i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.175, i32 0, i32 0), i8** %fn, align 8, !dbg !7330
  call void @llvm.dbg.declare(metadata %struct.ev_tcp_common_data* %etcd_tmp, metadata !7331, metadata !2279), !dbg !7332
  call void @llvm.dbg.declare(metadata %struct.ev_tcp_common_data** %etcd_p, metadata !7333, metadata !2279), !dbg !7334
  call void @llvm.dbg.declare(metadata %struct.generic_list** %gl_tmp, metadata !7335, metadata !2279), !dbg !7336
  %4 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 8), align 4, !dbg !7337
  %5 = icmp sgt i32 %4, 2, !dbg !7339
  br i1 %5, label %6, label %9, !dbg !7340

; <label>:6                                       ; preds = %0
  %7 = load i8*, i8** %fn, align 8, !dbg !7341
  %8 = load i32, i32* %3, align 4, !dbg !7342
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.174, i32 0, i32 0), i8* %7, i32 %8), !dbg !7343
  br label %9, !dbg !7343

; <label>:9                                       ; preds = %6, %0
  %10 = load i32, i32* %3, align 4, !dbg !7344
  %11 = getelementptr inbounds %struct.ev_tcp_common_data, %struct.ev_tcp_common_data* %etcd_tmp, i32 0, i32 0, !dbg !7345
  store i32 %10, i32* %11, align 8, !dbg !7346
  %12 = getelementptr inbounds %struct.ev_tcp_common_data, %struct.ev_tcp_common_data* %etcd_tmp, i32 0, i32 1, !dbg !7347
  store %struct.context* null, %struct.context** %12, align 8, !dbg !7348
  %13 = load %struct.generic_list*, %struct.generic_list** %2, align 8, !dbg !7349
  %14 = bitcast %struct.ev_tcp_common_data* %etcd_tmp to i8*, !dbg !7350
  %15 = call %struct.generic_list* @list_search(%struct.generic_list* %13, i8* %14, i32 (i8*, i8*)* @ev_tcp_common_eq), !dbg !7351
  store %struct.generic_list* %15, %struct.generic_list** %gl_tmp, align 8, !dbg !7352
  %16 = load %struct.generic_list*, %struct.generic_list** %gl_tmp, align 8, !dbg !7353
  %17 = icmp ne %struct.generic_list* %16, null, !dbg !7353
  br i1 %17, label %19, label %18, !dbg !7355

; <label>:18                                      ; preds = %9
  store i32 -1, i32* %1, align 4, !dbg !7356
  br label %25, !dbg !7356

; <label>:19                                      ; preds = %9
  %20 = load %struct.generic_list*, %struct.generic_list** %gl_tmp, align 8, !dbg !7357
  %21 = call i8* @list_delete(%struct.generic_list* %20), !dbg !7358
  %22 = bitcast i8* %21 to %struct.ev_tcp_common_data*, !dbg !7359
  store %struct.ev_tcp_common_data* %22, %struct.ev_tcp_common_data** %etcd_p, align 8, !dbg !7360
  %23 = load %struct.ev_tcp_common_data*, %struct.ev_tcp_common_data** %etcd_p, align 8, !dbg !7361
  %24 = bitcast %struct.ev_tcp_common_data* %23 to i8*, !dbg !7361
  call void @free(i8* %24) #10, !dbg !7362
  store i32 0, i32* %1, align 4, !dbg !7363
  br label %25, !dbg !7363

; <label>:25                                      ; preds = %19, %18
  %26 = load i32, i32* %1, align 4, !dbg !7364
  ret i32 %26, !dbg !7364
}

; Function Attrs: nounwind uwtable
define i32 @ev_tcp_common_fds(%struct.generic_list* %gl, %struct.fd_set* %fds) #0 !dbg !756 {
  %1 = alloca %struct.generic_list*, align 8
  %2 = alloca %struct.fd_set*, align 8
  %etcd_p = alloca %struct.ev_tcp_common_data*, align 8
  %gl_tmp = alloca %struct.generic_list*, align 8
  %maxid = alloca i32, align 4
  store %struct.generic_list* %gl, %struct.generic_list** %1, align 8
  call void @llvm.dbg.declare(metadata %struct.generic_list** %1, metadata !7365, metadata !2279), !dbg !7366
  store %struct.fd_set* %fds, %struct.fd_set** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.fd_set** %2, metadata !7367, metadata !2279), !dbg !7368
  call void @llvm.dbg.declare(metadata %struct.ev_tcp_common_data** %etcd_p, metadata !7369, metadata !2279), !dbg !7370
  call void @llvm.dbg.declare(metadata %struct.generic_list** %gl_tmp, metadata !7371, metadata !2279), !dbg !7372
  call void @llvm.dbg.declare(metadata i32* %maxid, metadata !7373, metadata !2279), !dbg !7374
  store i32 0, i32* %maxid, align 4, !dbg !7374
  %3 = load %struct.generic_list*, %struct.generic_list** %1, align 8, !dbg !7375
  %4 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %3, i32 0, i32 2, !dbg !7376
  store i8* null, i8** %4, align 8, !dbg !7377
  %5 = load %struct.generic_list*, %struct.generic_list** %1, align 8, !dbg !7378
  %6 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %5, i32 0, i32 0, !dbg !7380
  %7 = load %struct.generic_list*, %struct.generic_list** %6, align 8, !dbg !7380
  store %struct.generic_list* %7, %struct.generic_list** %gl_tmp, align 8, !dbg !7381
  br label %8, !dbg !7382

; <label>:8                                       ; preds = %54, %0
  %9 = load %struct.generic_list*, %struct.generic_list** %gl_tmp, align 8, !dbg !7383
  %10 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %9, i32 0, i32 2, !dbg !7386
  %11 = load i8*, i8** %10, align 8, !dbg !7386
  %12 = icmp ne i8* %11, null, !dbg !7387
  br i1 %12, label %13, label %58, !dbg !7387

; <label>:13                                      ; preds = %8
  %14 = load %struct.generic_list*, %struct.generic_list** %gl_tmp, align 8, !dbg !7388
  %15 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %14, i32 0, i32 2, !dbg !7390
  %16 = load i8*, i8** %15, align 8, !dbg !7390
  %17 = bitcast i8* %16 to %struct.ev_tcp_common_data*, !dbg !7391
  store %struct.ev_tcp_common_data* %17, %struct.ev_tcp_common_data** %etcd_p, align 8, !dbg !7392
  %18 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 8), align 4, !dbg !7393
  %19 = icmp sgt i32 %18, 2, !dbg !7395
  br i1 %19, label %20, label %24, !dbg !7396

; <label>:20                                      ; preds = %13
  %21 = load %struct.ev_tcp_common_data*, %struct.ev_tcp_common_data** %etcd_p, align 8, !dbg !7397
  %22 = getelementptr inbounds %struct.ev_tcp_common_data, %struct.ev_tcp_common_data* %21, i32 0, i32 0, !dbg !7398
  %23 = load i32, i32* %22, align 8, !dbg !7398
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.5.176, i32 0, i32 0), i32 %23), !dbg !7399
  br label %24, !dbg !7399

; <label>:24                                      ; preds = %20, %13
  %25 = load %struct.ev_tcp_common_data*, %struct.ev_tcp_common_data** %etcd_p, align 8, !dbg !7400
  %26 = getelementptr inbounds %struct.ev_tcp_common_data, %struct.ev_tcp_common_data* %25, i32 0, i32 0, !dbg !7400
  %27 = load i32, i32* %26, align 8, !dbg !7400
  %28 = srem i32 %27, 64, !dbg !7400
  %29 = zext i32 %28 to i64, !dbg !7400
  %30 = shl i64 1, %29, !dbg !7400
  %31 = load %struct.ev_tcp_common_data*, %struct.ev_tcp_common_data** %etcd_p, align 8, !dbg !7400
  %32 = getelementptr inbounds %struct.ev_tcp_common_data, %struct.ev_tcp_common_data* %31, i32 0, i32 0, !dbg !7400
  %33 = load i32, i32* %32, align 8, !dbg !7400
  %34 = sdiv i32 %33, 64, !dbg !7400
  %35 = sext i32 %34 to i64, !dbg !7400
  %36 = load %struct.fd_set*, %struct.fd_set** %2, align 8, !dbg !7400
  %37 = getelementptr inbounds %struct.fd_set, %struct.fd_set* %36, i32 0, i32 0, !dbg !7400
  %38 = getelementptr inbounds [16 x i64], [16 x i64]* %37, i64 0, i64 %35, !dbg !7400
  %39 = load i64, i64* %38, align 8, !dbg !7400
  %40 = or i64 %39, %30, !dbg !7400
  store i64 %40, i64* %38, align 8, !dbg !7400
  %41 = load %struct.ev_tcp_common_data*, %struct.ev_tcp_common_data** %etcd_p, align 8, !dbg !7401
  %42 = getelementptr inbounds %struct.ev_tcp_common_data, %struct.ev_tcp_common_data* %41, i32 0, i32 0, !dbg !7401
  %43 = load i32, i32* %42, align 8, !dbg !7401
  %44 = load i32, i32* %maxid, align 4, !dbg !7401
  %45 = icmp sgt i32 %43, %44, !dbg !7401
  br i1 %45, label %46, label %50, !dbg !7401

; <label>:46                                      ; preds = %24
  %47 = load %struct.ev_tcp_common_data*, %struct.ev_tcp_common_data** %etcd_p, align 8, !dbg !7402
  %48 = getelementptr inbounds %struct.ev_tcp_common_data, %struct.ev_tcp_common_data* %47, i32 0, i32 0, !dbg !7402
  %49 = load i32, i32* %48, align 8, !dbg !7402
  br label %52, !dbg !7402

; <label>:50                                      ; preds = %24
  %51 = load i32, i32* %maxid, align 4, !dbg !7404
  br label %52, !dbg !7404

; <label>:52                                      ; preds = %50, %46
  %53 = phi i32 [ %49, %46 ], [ %51, %50 ], !dbg !7406
  store i32 %53, i32* %maxid, align 4, !dbg !7408
  br label %54, !dbg !7409

; <label>:54                                      ; preds = %52
  %55 = load %struct.generic_list*, %struct.generic_list** %gl_tmp, align 8, !dbg !7410
  %56 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %55, i32 0, i32 0, !dbg !7412
  %57 = load %struct.generic_list*, %struct.generic_list** %56, align 8, !dbg !7412
  store %struct.generic_list* %57, %struct.generic_list** %gl_tmp, align 8, !dbg !7413
  br label %8, !dbg !7414

; <label>:58                                      ; preds = %8
  %59 = load i32, i32* %maxid, align 4, !dbg !7415
  ret i32 %59, !dbg !7416
}

; Function Attrs: nounwind uwtable
define i32 @ev_tcp_common_fd_check(%struct.generic_list* %gl, %struct.fd_set* %fds) #0 !dbg !765 {
  %1 = alloca i32, align 4
  %2 = alloca %struct.generic_list*, align 8
  %3 = alloca %struct.fd_set*, align 8
  %gl_tmp = alloca %struct.generic_list*, align 8
  %cont = alloca %struct.context*, align 8
  %etcd_p = alloca %struct.ev_tcp_common_data*, align 8
  %s_tmp = alloca i32, align 4
  store %struct.generic_list* %gl, %struct.generic_list** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.generic_list** %2, metadata !7417, metadata !2279), !dbg !7418
  store %struct.fd_set* %fds, %struct.fd_set** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.fd_set** %3, metadata !7419, metadata !2279), !dbg !7420
  call void @llvm.dbg.declare(metadata %struct.generic_list** %gl_tmp, metadata !7421, metadata !2279), !dbg !7422
  call void @llvm.dbg.declare(metadata %struct.context** %cont, metadata !7423, metadata !2279), !dbg !7424
  call void @llvm.dbg.declare(metadata %struct.ev_tcp_common_data** %etcd_p, metadata !7425, metadata !2279), !dbg !7426
  call void @llvm.dbg.declare(metadata i32* %s_tmp, metadata !7427, metadata !2279), !dbg !7428
  %4 = load %struct.generic_list*, %struct.generic_list** %2, align 8, !dbg !7429
  %5 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %4, i32 0, i32 0, !dbg !7431
  %6 = load %struct.generic_list*, %struct.generic_list** %5, align 8, !dbg !7431
  store %struct.generic_list* %6, %struct.generic_list** %gl_tmp, align 8, !dbg !7432
  br label %7, !dbg !7433

; <label>:7                                       ; preds = %56, %0
  %8 = load %struct.generic_list*, %struct.generic_list** %gl_tmp, align 8, !dbg !7434
  %9 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %8, i32 0, i32 2, !dbg !7437
  %10 = load i8*, i8** %9, align 8, !dbg !7437
  %11 = icmp ne i8* %10, null, !dbg !7438
  br i1 %11, label %12, label %60, !dbg !7438

; <label>:12                                      ; preds = %7
  %13 = load %struct.generic_list*, %struct.generic_list** %gl_tmp, align 8, !dbg !7439
  %14 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %13, i32 0, i32 2, !dbg !7441
  %15 = load i8*, i8** %14, align 8, !dbg !7441
  %16 = bitcast i8* %15 to %struct.ev_tcp_common_data*, !dbg !7442
  store %struct.ev_tcp_common_data* %16, %struct.ev_tcp_common_data** %etcd_p, align 8, !dbg !7443
  %17 = load %struct.ev_tcp_common_data*, %struct.ev_tcp_common_data** %etcd_p, align 8, !dbg !7444
  %18 = getelementptr inbounds %struct.ev_tcp_common_data, %struct.ev_tcp_common_data* %17, i32 0, i32 0, !dbg !7445
  %19 = load i32, i32* %18, align 8, !dbg !7445
  store i32 %19, i32* %s_tmp, align 4, !dbg !7446
  %20 = load i32, i32* %s_tmp, align 4, !dbg !7447
  %21 = sdiv i32 %20, 64, !dbg !7447
  %22 = sext i32 %21 to i64, !dbg !7447
  %23 = load %struct.fd_set*, %struct.fd_set** %3, align 8, !dbg !7447
  %24 = getelementptr inbounds %struct.fd_set, %struct.fd_set* %23, i32 0, i32 0, !dbg !7447
  %25 = getelementptr inbounds [16 x i64], [16 x i64]* %24, i64 0, i64 %22, !dbg !7447
  %26 = load i64, i64* %25, align 8, !dbg !7447
  %27 = load i32, i32* %s_tmp, align 4, !dbg !7447
  %28 = srem i32 %27, 64, !dbg !7447
  %29 = zext i32 %28 to i64, !dbg !7447
  %30 = shl i64 1, %29, !dbg !7447
  %31 = and i64 %26, %30, !dbg !7447
  %32 = icmp ne i64 %31, 0, !dbg !7447
  br i1 %32, label %33, label %55, !dbg !7449

; <label>:33                                      ; preds = %12
  %34 = load i32, i32* %s_tmp, align 4, !dbg !7450
  %35 = srem i32 %34, 64, !dbg !7450
  %36 = zext i32 %35 to i64, !dbg !7450
  %37 = shl i64 1, %36, !dbg !7450
  %38 = xor i64 %37, -1, !dbg !7450
  %39 = load i32, i32* %s_tmp, align 4, !dbg !7450
  %40 = sdiv i32 %39, 64, !dbg !7450
  %41 = sext i32 %40 to i64, !dbg !7450
  %42 = load %struct.fd_set*, %struct.fd_set** %3, align 8, !dbg !7450
  %43 = getelementptr inbounds %struct.fd_set, %struct.fd_set* %42, i32 0, i32 0, !dbg !7450
  %44 = getelementptr inbounds [16 x i64], [16 x i64]* %43, i64 0, i64 %41, !dbg !7450
  %45 = load i64, i64* %44, align 8, !dbg !7450
  %46 = and i64 %45, %38, !dbg !7450
  store i64 %46, i64* %44, align 8, !dbg !7450
  %47 = load %struct.ev_tcp_common_data*, %struct.ev_tcp_common_data** %etcd_p, align 8, !dbg !7452
  %48 = getelementptr inbounds %struct.ev_tcp_common_data, %struct.ev_tcp_common_data* %47, i32 0, i32 1, !dbg !7453
  %49 = load %struct.context*, %struct.context** %48, align 8, !dbg !7453
  store %struct.context* %49, %struct.context** %cont, align 8, !dbg !7454
  %50 = load %struct.context*, %struct.context** %cont, align 8, !dbg !7455
  %51 = getelementptr inbounds %struct.context, %struct.context* %50, i32 0, i32 7, !dbg !7456
  %52 = load i32 (%struct.context*)*, i32 (%struct.context*)** %51, align 8, !dbg !7456
  %53 = load %struct.context*, %struct.context** %cont, align 8, !dbg !7457
  %54 = call i32 %52(%struct.context* %53), !dbg !7455
  store i32 %54, i32* %1, align 4, !dbg !7458
  br label %61, !dbg !7458

; <label>:55                                      ; preds = %12
  br label %56, !dbg !7459

; <label>:56                                      ; preds = %55
  %57 = load %struct.generic_list*, %struct.generic_list** %gl_tmp, align 8, !dbg !7460
  %58 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %57, i32 0, i32 0, !dbg !7462
  %59 = load %struct.generic_list*, %struct.generic_list** %58, align 8, !dbg !7462
  store %struct.generic_list* %59, %struct.generic_list** %gl_tmp, align 8, !dbg !7463
  br label %7, !dbg !7464

; <label>:60                                      ; preds = %7
  store i32 0, i32* %1, align 4, !dbg !7465
  br label %61, !dbg !7465

; <label>:61                                      ; preds = %60, %33
  %62 = load i32, i32* %1, align 4, !dbg !7466
  ret i32 %62, !dbg !7466
}

; Function Attrs: nounwind uwtable
define i32 @ev_tcp_conn_in_init() #0 !dbg !766 {
  %1 = alloca i32, align 4
  %2 = load %struct.generic_list*, %struct.generic_list** @ConnL_head, align 8, !dbg !7467
  %3 = icmp ne %struct.generic_list* %2, null, !dbg !7467
  br i1 %3, label %4, label %5, !dbg !7469

; <label>:4                                       ; preds = %0
  store i32 -1, i32* %1, align 4, !dbg !7470
  br label %11, !dbg !7470

; <label>:5                                       ; preds = %0
  %6 = call %struct.generic_list* @ev_tcp_common_init(), !dbg !7471
  store %struct.generic_list* %6, %struct.generic_list** @ConnL_head, align 8, !dbg !7472
  %7 = load %struct.generic_list*, %struct.generic_list** @ConnL_head, align 8, !dbg !7473
  %8 = icmp ne %struct.generic_list* %7, null, !dbg !7473
  br i1 %8, label %10, label %9, !dbg !7475

; <label>:9                                       ; preds = %5
  store i32 -1, i32* %1, align 4, !dbg !7476
  br label %11, !dbg !7476

; <label>:10                                      ; preds = %5
  store i32 0, i32* %1, align 4, !dbg !7477
  br label %11, !dbg !7477

; <label>:11                                      ; preds = %10, %9, %4
  %12 = load i32, i32* %1, align 4, !dbg !7478
  ret i32 %12, !dbg !7478
}

; Function Attrs: nounwind uwtable
define void @ev_tcp_conn_in_finish() #0 !dbg !769 {
  %1 = load %struct.generic_list*, %struct.generic_list** @ConnL_head, align 8, !dbg !7479
  call void @list_destroy(%struct.generic_list* %1, void (i8*)* @free), !dbg !7480
  ret void, !dbg !7481
}

; Function Attrs: nounwind uwtable
define i32 @ev_tcp_conn_in_register(i32 %sock, %struct.context* %cptr) #0 !dbg !772 {
  %1 = alloca i32, align 4
  %2 = alloca %struct.context*, align 8
  store i32 %sock, i32* %1, align 4
  call void @llvm.dbg.declare(metadata i32* %1, metadata !7482, metadata !2279), !dbg !7483
  store %struct.context* %cptr, %struct.context** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.context** %2, metadata !7484, metadata !2279), !dbg !7485
  %3 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 8), align 4, !dbg !7486
  %4 = icmp sgt i32 %3, 3, !dbg !7488
  br i1 %4, label %5, label %6, !dbg !7489

; <label>:5                                       ; preds = %0
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.6.177, i32 0, i32 0)), !dbg !7490
  br label %6, !dbg !7490

; <label>:6                                       ; preds = %5, %0
  %7 = load %struct.generic_list*, %struct.generic_list** @ConnL_head, align 8, !dbg !7491
  %8 = load i32, i32* %1, align 4, !dbg !7492
  %9 = load %struct.context*, %struct.context** %2, align 8, !dbg !7493
  %10 = call i32 @ev_tcp_common_register(%struct.generic_list* %7, i32 %8, %struct.context* %9), !dbg !7494
  ret i32 %10, !dbg !7495
}

; Function Attrs: nounwind uwtable
define i32 @ev_tcp_conn_in_remove(i32 %sock) #0 !dbg !775 {
  %1 = alloca i32, align 4
  store i32 %sock, i32* %1, align 4
  call void @llvm.dbg.declare(metadata i32* %1, metadata !7496, metadata !2279), !dbg !7497
  %2 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 8), align 4, !dbg !7498
  %3 = icmp sgt i32 %2, 3, !dbg !7500
  br i1 %3, label %4, label %5, !dbg !7501

; <label>:4                                       ; preds = %0
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.7.180, i32 0, i32 0)), !dbg !7502
  br label %5, !dbg !7502

; <label>:5                                       ; preds = %4, %0
  %6 = load %struct.generic_list*, %struct.generic_list** @ConnL_head, align 8, !dbg !7503
  %7 = load i32, i32* %1, align 4, !dbg !7504
  %8 = call i32 @ev_tcp_common_remove(%struct.generic_list* %6, i32 %7), !dbg !7505
  ret i32 %8, !dbg !7506
}

; Function Attrs: nounwind uwtable
define i32 @ev_tcp_conn_in_fds(%struct.fd_set* %fds) #0 !dbg !776 {
  %1 = alloca %struct.fd_set*, align 8
  store %struct.fd_set* %fds, %struct.fd_set** %1, align 8
  call void @llvm.dbg.declare(metadata %struct.fd_set** %1, metadata !7507, metadata !2279), !dbg !7508
  %2 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 8), align 4, !dbg !7509
  %3 = icmp sgt i32 %2, 3, !dbg !7511
  br i1 %3, label %4, label %5, !dbg !7512

; <label>:4                                       ; preds = %0
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.8.181, i32 0, i32 0)), !dbg !7513
  br label %5, !dbg !7513

; <label>:5                                       ; preds = %4, %0
  %6 = load %struct.generic_list*, %struct.generic_list** @ConnL_head, align 8, !dbg !7514
  %7 = load %struct.fd_set*, %struct.fd_set** %1, align 8, !dbg !7515
  %8 = call i32 @ev_tcp_common_fds(%struct.generic_list* %6, %struct.fd_set* %7), !dbg !7516
  ret i32 %8, !dbg !7517
}

; Function Attrs: nounwind uwtable
define i32 @ev_tcp_conn_in_fd_check(%struct.fd_set* %fds) #0 !dbg !779 {
  %1 = alloca %struct.fd_set*, align 8
  store %struct.fd_set* %fds, %struct.fd_set** %1, align 8
  call void @llvm.dbg.declare(metadata %struct.fd_set** %1, metadata !7518, metadata !2279), !dbg !7519
  %2 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 8), align 4, !dbg !7520
  %3 = icmp sgt i32 %2, 3, !dbg !7522
  br i1 %3, label %4, label %5, !dbg !7523

; <label>:4                                       ; preds = %0
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.9.182, i32 0, i32 0)), !dbg !7524
  br label %5, !dbg !7524

; <label>:5                                       ; preds = %4, %0
  %6 = load %struct.generic_list*, %struct.generic_list** @ConnL_head, align 8, !dbg !7525
  %7 = load %struct.fd_set*, %struct.fd_set** %1, align 8, !dbg !7526
  %8 = call i32 @ev_tcp_common_fd_check(%struct.generic_list* %6, %struct.fd_set* %7), !dbg !7527
  ret i32 %8, !dbg !7528
}

; Function Attrs: nounwind uwtable
define i32 @ev_tcp_out_init() #0 !dbg !780 {
  %1 = alloca i32, align 4
  %2 = load %struct.generic_list*, %struct.generic_list** @ETOL_head, align 8, !dbg !7529
  %3 = icmp ne %struct.generic_list* %2, null, !dbg !7529
  br i1 %3, label %4, label %5, !dbg !7531

; <label>:4                                       ; preds = %0
  store i32 -1, i32* %1, align 4, !dbg !7532
  br label %11, !dbg !7532

; <label>:5                                       ; preds = %0
  %6 = call %struct.generic_list* @ev_tcp_common_init(), !dbg !7533
  store %struct.generic_list* %6, %struct.generic_list** @ETOL_head, align 8, !dbg !7534
  %7 = load %struct.generic_list*, %struct.generic_list** @ETOL_head, align 8, !dbg !7535
  %8 = icmp ne %struct.generic_list* %7, null, !dbg !7535
  br i1 %8, label %10, label %9, !dbg !7537

; <label>:9                                       ; preds = %5
  store i32 -1, i32* %1, align 4, !dbg !7538
  br label %11, !dbg !7538

; <label>:10                                      ; preds = %5
  store i32 0, i32* %1, align 4, !dbg !7539
  br label %11, !dbg !7539

; <label>:11                                      ; preds = %10, %9, %4
  %12 = load i32, i32* %1, align 4, !dbg !7540
  ret i32 %12, !dbg !7540
}

; Function Attrs: nounwind uwtable
define void @ev_tcp_out_finish() #0 !dbg !781 {
  %1 = load %struct.generic_list*, %struct.generic_list** @ETOL_head, align 8, !dbg !7541
  call void @list_destroy(%struct.generic_list* %1, void (i8*)* @free), !dbg !7542
  ret void, !dbg !7543
}

; Function Attrs: nounwind uwtable
define i32 @ev_tcp_out_register(i32 %sock, %struct.context* %cptr) #0 !dbg !782 {
  %1 = alloca i32, align 4
  %2 = alloca %struct.context*, align 8
  store i32 %sock, i32* %1, align 4
  call void @llvm.dbg.declare(metadata i32* %1, metadata !7544, metadata !2279), !dbg !7545
  store %struct.context* %cptr, %struct.context** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.context** %2, metadata !7546, metadata !2279), !dbg !7547
  %3 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 8), align 4, !dbg !7548
  %4 = icmp sgt i32 %3, 3, !dbg !7550
  br i1 %4, label %5, label %6, !dbg !7551

; <label>:5                                       ; preds = %0
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.10.183, i32 0, i32 0)), !dbg !7552
  br label %6, !dbg !7552

; <label>:6                                       ; preds = %5, %0
  %7 = load %struct.generic_list*, %struct.generic_list** @ETOL_head, align 8, !dbg !7553
  %8 = load i32, i32* %1, align 4, !dbg !7554
  %9 = load %struct.context*, %struct.context** %2, align 8, !dbg !7555
  %10 = call i32 @ev_tcp_common_register(%struct.generic_list* %7, i32 %8, %struct.context* %9), !dbg !7556
  ret i32 %10, !dbg !7557
}

; Function Attrs: nounwind uwtable
define i32 @ev_tcp_out_remove(i32 %sock) #0 !dbg !783 {
  %1 = alloca i32, align 4
  store i32 %sock, i32* %1, align 4
  call void @llvm.dbg.declare(metadata i32* %1, metadata !7558, metadata !2279), !dbg !7559
  %2 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 8), align 4, !dbg !7560
  %3 = icmp sgt i32 %2, 3, !dbg !7562
  br i1 %3, label %4, label %5, !dbg !7563

; <label>:4                                       ; preds = %0
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.11.186, i32 0, i32 0)), !dbg !7564
  br label %5, !dbg !7564

; <label>:5                                       ; preds = %4, %0
  %6 = load %struct.generic_list*, %struct.generic_list** @ETOL_head, align 8, !dbg !7565
  %7 = load i32, i32* %1, align 4, !dbg !7566
  %8 = call i32 @ev_tcp_common_remove(%struct.generic_list* %6, i32 %7), !dbg !7567
  ret i32 %8, !dbg !7568
}

; Function Attrs: nounwind uwtable
define i32 @ev_tcp_out_fds(%struct.fd_set* %fds) #0 !dbg !784 {
  %1 = alloca %struct.fd_set*, align 8
  store %struct.fd_set* %fds, %struct.fd_set** %1, align 8
  call void @llvm.dbg.declare(metadata %struct.fd_set** %1, metadata !7569, metadata !2279), !dbg !7570
  %2 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 8), align 4, !dbg !7571
  %3 = icmp sgt i32 %2, 3, !dbg !7573
  br i1 %3, label %4, label %5, !dbg !7574

; <label>:4                                       ; preds = %0
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.12.187, i32 0, i32 0)), !dbg !7575
  br label %5, !dbg !7575

; <label>:5                                       ; preds = %4, %0
  %6 = load %struct.generic_list*, %struct.generic_list** @ETOL_head, align 8, !dbg !7576
  %7 = load %struct.fd_set*, %struct.fd_set** %1, align 8, !dbg !7577
  %8 = call i32 @ev_tcp_common_fds(%struct.generic_list* %6, %struct.fd_set* %7), !dbg !7578
  ret i32 %8, !dbg !7579
}

; Function Attrs: nounwind uwtable
define i32 @ev_tcp_out_fd_check(%struct.fd_set* %fds) #0 !dbg !785 {
  %1 = alloca %struct.fd_set*, align 8
  store %struct.fd_set* %fds, %struct.fd_set** %1, align 8
  call void @llvm.dbg.declare(metadata %struct.fd_set** %1, metadata !7580, metadata !2279), !dbg !7581
  %2 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 8), align 4, !dbg !7582
  %3 = icmp sgt i32 %2, 3, !dbg !7584
  br i1 %3, label %4, label %5, !dbg !7585

; <label>:4                                       ; preds = %0
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.13.188, i32 0, i32 0)), !dbg !7586
  br label %5, !dbg !7586

; <label>:5                                       ; preds = %4, %0
  %6 = load %struct.generic_list*, %struct.generic_list** @ETOL_head, align 8, !dbg !7587
  %7 = load %struct.fd_set*, %struct.fd_set** %1, align 8, !dbg !7588
  %8 = call i32 @ev_tcp_common_fd_check(%struct.generic_list* %6, %struct.fd_set* %7), !dbg !7589
  ret i32 %8, !dbg !7590
}

; Function Attrs: nounwind uwtable
define i8* @sprint_inet(%struct.sockaddr* %sa, i8* %address_str) #0 !dbg !855 {
  %1 = alloca %struct.sockaddr*, align 8
  %2 = alloca i8*, align 8
  %tmp = alloca [256 x i8], align 16
  %sin_p = alloca %struct.sockaddr_in*, align 8
  %sin6_p = alloca %struct.sockaddr_in6*, align 8
  store %struct.sockaddr* %sa, %struct.sockaddr** %1, align 8
  call void @llvm.dbg.declare(metadata %struct.sockaddr** %1, metadata !7591, metadata !2279), !dbg !7592
  store i8* %address_str, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !7593, metadata !2279), !dbg !7594
  call void @llvm.dbg.declare(metadata [256 x i8]* %tmp, metadata !7595, metadata !2279), !dbg !7596
  %3 = load i8*, i8** %2, align 8, !dbg !7597
  %4 = getelementptr inbounds i8, i8* %3, i64 0, !dbg !7597
  store i8 0, i8* %4, align 1, !dbg !7598
  %5 = load %struct.sockaddr*, %struct.sockaddr** %1, align 8, !dbg !7599
  %6 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %5, i32 0, i32 0, !dbg !7601
  %7 = load i16, i16* %6, align 2, !dbg !7601
  %8 = zext i16 %7 to i32, !dbg !7599
  %9 = icmp eq i32 %8, 2, !dbg !7602
  br i1 %9, label %10, label %30, !dbg !7603

; <label>:10                                      ; preds = %0
  call void @llvm.dbg.declare(metadata %struct.sockaddr_in** %sin_p, metadata !7604, metadata !2279), !dbg !7606
  %11 = load %struct.sockaddr*, %struct.sockaddr** %1, align 8, !dbg !7607
  %12 = bitcast %struct.sockaddr* %11 to %struct.sockaddr_in*, !dbg !7608
  store %struct.sockaddr_in* %12, %struct.sockaddr_in** %sin_p, align 8, !dbg !7606
  %13 = load %struct.sockaddr_in*, %struct.sockaddr_in** %sin_p, align 8, !dbg !7609
  %14 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %13, i32 0, i32 0, !dbg !7610
  %15 = load i16, i16* %14, align 4, !dbg !7610
  %16 = zext i16 %15 to i32, !dbg !7609
  %17 = load %struct.sockaddr_in*, %struct.sockaddr_in** %sin_p, align 8, !dbg !7611
  %18 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %17, i32 0, i32 2, !dbg !7612
  %19 = bitcast %struct.in_addr* %18 to i8*, !dbg !7613
  %20 = getelementptr inbounds [256 x i8], [256 x i8]* %tmp, i32 0, i32 0, !dbg !7614
  %21 = call i8* @inet_ntop(i32 %16, i8* %19, i8* %20, i32 256) #10, !dbg !7615
  %22 = load i8*, i8** %2, align 8, !dbg !7616
  %23 = getelementptr inbounds [256 x i8], [256 x i8]* %tmp, i32 0, i32 0, !dbg !7617
  %24 = load %struct.sockaddr_in*, %struct.sockaddr_in** %sin_p, align 8, !dbg !7618
  %25 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %24, i32 0, i32 1, !dbg !7619
  %26 = load i16, i16* %25, align 2, !dbg !7619
  %27 = call zeroext i16 @ntohs(i16 zeroext %26) #1, !dbg !7620
  %28 = zext i16 %27 to i32, !dbg !7620
  %29 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %22, i64 256, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.191, i32 0, i32 0), i8* %23, i32 %28) #10, !dbg !7621
  br label %30, !dbg !7622

; <label>:30                                      ; preds = %10, %0
  %31 = load %struct.sockaddr*, %struct.sockaddr** %1, align 8, !dbg !7623
  %32 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %31, i32 0, i32 0, !dbg !7625
  %33 = load i16, i16* %32, align 2, !dbg !7625
  %34 = zext i16 %33 to i32, !dbg !7623
  %35 = icmp eq i32 %34, 10, !dbg !7626
  br i1 %35, label %36, label %56, !dbg !7627

; <label>:36                                      ; preds = %30
  call void @llvm.dbg.declare(metadata %struct.sockaddr_in6** %sin6_p, metadata !7628, metadata !2279), !dbg !7630
  %37 = load %struct.sockaddr*, %struct.sockaddr** %1, align 8, !dbg !7631
  %38 = bitcast %struct.sockaddr* %37 to %struct.sockaddr_in6*, !dbg !7632
  store %struct.sockaddr_in6* %38, %struct.sockaddr_in6** %sin6_p, align 8, !dbg !7630
  %39 = load %struct.sockaddr_in6*, %struct.sockaddr_in6** %sin6_p, align 8, !dbg !7633
  %40 = getelementptr inbounds %struct.sockaddr_in6, %struct.sockaddr_in6* %39, i32 0, i32 0, !dbg !7634
  %41 = load i16, i16* %40, align 4, !dbg !7634
  %42 = zext i16 %41 to i32, !dbg !7633
  %43 = load %struct.sockaddr_in6*, %struct.sockaddr_in6** %sin6_p, align 8, !dbg !7635
  %44 = getelementptr inbounds %struct.sockaddr_in6, %struct.sockaddr_in6* %43, i32 0, i32 3, !dbg !7636
  %45 = bitcast %struct.in6_addr* %44 to i8*, !dbg !7637
  %46 = getelementptr inbounds [256 x i8], [256 x i8]* %tmp, i32 0, i32 0, !dbg !7638
  %47 = call i8* @inet_ntop(i32 %42, i8* %45, i8* %46, i32 256) #10, !dbg !7639
  %48 = load i8*, i8** %2, align 8, !dbg !7640
  %49 = getelementptr inbounds [256 x i8], [256 x i8]* %tmp, i32 0, i32 0, !dbg !7641
  %50 = load %struct.sockaddr_in6*, %struct.sockaddr_in6** %sin6_p, align 8, !dbg !7642
  %51 = getelementptr inbounds %struct.sockaddr_in6, %struct.sockaddr_in6* %50, i32 0, i32 1, !dbg !7643
  %52 = load i16, i16* %51, align 2, !dbg !7643
  %53 = call zeroext i16 @ntohs(i16 zeroext %52) #1, !dbg !7644
  %54 = zext i16 %53 to i32, !dbg !7644
  %55 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %48, i64 256, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.191, i32 0, i32 0), i8* %49, i32 %54) #10, !dbg !7645
  br label %56, !dbg !7646

; <label>:56                                      ; preds = %36, %30
  %57 = load i8*, i8** %2, align 8, !dbg !7647
  ret i8* %57, !dbg !7648
}

; Function Attrs: nounwind
declare i8* @inet_ntop(i32, i8*, i8*, i32) #5

; Function Attrs: nounwind uwtable
define %struct.sockaddr* @parse_and_alloc_addr(i8* %caddr, i32 %port, i32* %sa_len_ret) #0 !dbg !858 {
  %1 = alloca %struct.sockaddr*, align 8
  %2 = alloca i8*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32*, align 8
  %address = alloca [256 x i8], align 16
  %sa_p = alloca %struct.sockaddr*, align 8
  %sa_len = alloca i32, align 4
  %af = alloca i32, align 4
  %colon = alloca i8*, align 8
  %sin_p = alloca %struct.sockaddr_in*, align 8
  %hints = alloca %struct.addrinfo, align 8
  %res = alloca %struct.addrinfo*, align 8
  %portstr = alloca [32 x i8], align 16
  %error = alloca i32, align 4
  store i8* %caddr, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !7649, metadata !2279), !dbg !7650
  store i32 %port, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !7651, metadata !2279), !dbg !7652
  store i32* %sa_len_ret, i32** %4, align 8
  call void @llvm.dbg.declare(metadata i32** %4, metadata !7653, metadata !2279), !dbg !7654
  call void @llvm.dbg.declare(metadata [256 x i8]* %address, metadata !7655, metadata !2279), !dbg !7656
  %5 = bitcast [256 x i8]* %address to i8*, !dbg !7656
  call void @llvm.memset.p0i8.i64(i8* %5, i8 0, i64 256, i32 16, i1 false), !dbg !7656
  call void @llvm.dbg.declare(metadata %struct.sockaddr** %sa_p, metadata !7657, metadata !2279), !dbg !7658
  call void @llvm.dbg.declare(metadata i32* %sa_len, metadata !7659, metadata !2279), !dbg !7660
  call void @llvm.dbg.declare(metadata i32* %af, metadata !7661, metadata !2279), !dbg !7662
  store i32 0, i32* %af, align 4, !dbg !7662
  call void @llvm.dbg.declare(metadata i8** %colon, metadata !7663, metadata !2279), !dbg !7664
  store i8* null, i8** %colon, align 8, !dbg !7664
  store i32 16, i32* %sa_len, align 4, !dbg !7665
  store i32 2, i32* %af, align 4, !dbg !7666
  %6 = load i8*, i8** %2, align 8, !dbg !7667
  %7 = call i8* @strchr(i8* %6, i32 58) #9, !dbg !7668
  store i8* %7, i8** %colon, align 8, !dbg !7669
  %8 = load i8*, i8** %colon, align 8, !dbg !7670
  %9 = icmp ne i8* %8, null, !dbg !7670
  br i1 %9, label %13, label %10, !dbg !7672

; <label>:10                                      ; preds = %0
  %11 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 14), align 4, !dbg !7673
  %12 = icmp ne i32 %11, 0, !dbg !7675
  br i1 %12, label %13, label %14, !dbg !7676

; <label>:13                                      ; preds = %10, %0
  store i32 28, i32* %sa_len, align 4, !dbg !7677
  store i32 10, i32* %af, align 4, !dbg !7679
  br label %14, !dbg !7680

; <label>:14                                      ; preds = %13, %10
  %15 = load i32, i32* %af, align 4, !dbg !7681
  %16 = icmp ne i32 %15, 0, !dbg !7681
  br i1 %16, label %18, label %17, !dbg !7683

; <label>:17                                      ; preds = %14
  store %struct.sockaddr* null, %struct.sockaddr** %1, align 8, !dbg !7684
  br label %116, !dbg !7684

; <label>:18                                      ; preds = %14
  %19 = load i32, i32* %sa_len, align 4, !dbg !7685
  %20 = sext i32 %19 to i64, !dbg !7685
  %21 = call noalias i8* @malloc(i64 %20) #10, !dbg !7686
  %22 = bitcast i8* %21 to %struct.sockaddr*, !dbg !7686
  store %struct.sockaddr* %22, %struct.sockaddr** %sa_p, align 8, !dbg !7687
  %23 = load %struct.sockaddr*, %struct.sockaddr** %sa_p, align 8, !dbg !7688
  %24 = icmp ne %struct.sockaddr* %23, null, !dbg !7688
  br i1 %24, label %26, label %25, !dbg !7690

; <label>:25                                      ; preds = %18
  store %struct.sockaddr* null, %struct.sockaddr** %1, align 8, !dbg !7691
  br label %116, !dbg !7691

; <label>:26                                      ; preds = %18
  %27 = load %struct.sockaddr*, %struct.sockaddr** %sa_p, align 8, !dbg !7692
  %28 = bitcast %struct.sockaddr* %27 to i8*, !dbg !7693
  %29 = load i32, i32* %sa_len, align 4, !dbg !7694
  %30 = sext i32 %29 to i64, !dbg !7694
  call void @llvm.memset.p0i8.i64(i8* %28, i8 0, i64 %30, i32 1, i1 false), !dbg !7693
  %31 = load i32, i32* %af, align 4, !dbg !7695
  %32 = trunc i32 %31 to i16, !dbg !7695
  %33 = load %struct.sockaddr*, %struct.sockaddr** %sa_p, align 8, !dbg !7696
  %34 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %33, i32 0, i32 0, !dbg !7697
  store i16 %32, i16* %34, align 2, !dbg !7698
  %35 = load i8*, i8** %colon, align 8, !dbg !7699
  %36 = icmp ne i8* %35, null, !dbg !7699
  br i1 %36, label %43, label %37, !dbg !7701

; <label>:37                                      ; preds = %26
  %38 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 14), align 4, !dbg !7702
  %39 = icmp ne i32 %38, 0, !dbg !7704
  br i1 %39, label %40, label %43, !dbg !7705

; <label>:40                                      ; preds = %37
  %41 = getelementptr inbounds [256 x i8], [256 x i8]* %address, i32 0, i32 0, !dbg !7706
  %42 = call i8* @strcpy(i8* %41, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.192, i32 0, i32 0)) #10, !dbg !7707
  br label %43, !dbg !7707

; <label>:43                                      ; preds = %40, %37, %26
  %44 = getelementptr inbounds [256 x i8], [256 x i8]* %address, i32 0, i32 0, !dbg !7708
  %45 = load i8*, i8** %2, align 8, !dbg !7710
  %46 = call i64 @strlcat(i8* %44, i8* %45, i64 256), !dbg !7711
  %47 = icmp uge i64 %46, 256, !dbg !7712
  br i1 %47, label %48, label %49, !dbg !7713

; <label>:48                                      ; preds = %43
  store %struct.sockaddr* null, %struct.sockaddr** %1, align 8, !dbg !7714
  br label %116, !dbg !7714

; <label>:49                                      ; preds = %43
  %50 = load i32, i32* %af, align 4, !dbg !7715
  %51 = icmp eq i32 %50, 2, !dbg !7717
  br i1 %51, label %52, label %69, !dbg !7718

; <label>:52                                      ; preds = %49
  call void @llvm.dbg.declare(metadata %struct.sockaddr_in** %sin_p, metadata !7719, metadata !2279), !dbg !7721
  %53 = load %struct.sockaddr*, %struct.sockaddr** %sa_p, align 8, !dbg !7722
  %54 = bitcast %struct.sockaddr* %53 to %struct.sockaddr_in*, !dbg !7723
  store %struct.sockaddr_in* %54, %struct.sockaddr_in** %sin_p, align 8, !dbg !7724
  %55 = load i32, i32* %3, align 4, !dbg !7725
  %56 = trunc i32 %55 to i16, !dbg !7725
  %57 = call zeroext i16 @htons(i16 zeroext %56) #1, !dbg !7726
  %58 = load %struct.sockaddr_in*, %struct.sockaddr_in** %sin_p, align 8, !dbg !7727
  %59 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %58, i32 0, i32 1, !dbg !7728
  store i16 %57, i16* %59, align 2, !dbg !7729
  %60 = getelementptr inbounds [256 x i8], [256 x i8]* %address, i32 0, i32 0, !dbg !7730
  %61 = load %struct.sockaddr_in*, %struct.sockaddr_in** %sin_p, align 8, !dbg !7732
  %62 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %61, i32 0, i32 2, !dbg !7733
  %63 = call i32 @inet_aton(i8* %60, %struct.in_addr* %62) #10, !dbg !7734
  %64 = icmp ne i32 %63, 0, !dbg !7734
  br i1 %64, label %68, label %65, !dbg !7735

; <label>:65                                      ; preds = %52
  %66 = load %struct.sockaddr*, %struct.sockaddr** %sa_p, align 8, !dbg !7736
  %67 = bitcast %struct.sockaddr* %66 to i8*, !dbg !7736
  call void @free(i8* %67) #10, !dbg !7738
  store %struct.sockaddr* null, %struct.sockaddr** %1, align 8, !dbg !7739
  br label %116, !dbg !7739

; <label>:68                                      ; preds = %52
  br label %69, !dbg !7740

; <label>:69                                      ; preds = %68, %49
  %70 = load i32, i32* %af, align 4, !dbg !7741
  %71 = icmp eq i32 %70, 10, !dbg !7743
  br i1 %71, label %72, label %108, !dbg !7744

; <label>:72                                      ; preds = %69
  call void @llvm.dbg.declare(metadata %struct.addrinfo* %hints, metadata !7745, metadata !2279), !dbg !7762
  call void @llvm.dbg.declare(metadata %struct.addrinfo** %res, metadata !7763, metadata !2279), !dbg !7764
  call void @llvm.dbg.declare(metadata [32 x i8]* %portstr, metadata !7765, metadata !2279), !dbg !7769
  call void @llvm.dbg.declare(metadata i32* %error, metadata !7770, metadata !2279), !dbg !7771
  %73 = getelementptr inbounds [32 x i8], [32 x i8]* %portstr, i32 0, i32 0, !dbg !7772
  %74 = load i32, i32* %3, align 4, !dbg !7773
  %75 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %73, i64 32, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2.193, i32 0, i32 0), i32 %74) #10, !dbg !7774
  %76 = bitcast %struct.addrinfo* %hints to i8*, !dbg !7775
  call void @llvm.memset.p0i8.i64(i8* %76, i8 0, i64 48, i32 8, i1 false), !dbg !7775
  %77 = load i32, i32* %af, align 4, !dbg !7776
  %78 = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %hints, i32 0, i32 1, !dbg !7777
  store i32 %77, i32* %78, align 4, !dbg !7778
  %79 = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %hints, i32 0, i32 2, !dbg !7779
  store i32 1, i32* %79, align 8, !dbg !7780
  %80 = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %hints, i32 0, i32 0, !dbg !7781
  store i32 4, i32* %80, align 8, !dbg !7782
  %81 = getelementptr inbounds [256 x i8], [256 x i8]* %address, i32 0, i32 0, !dbg !7783
  %82 = getelementptr inbounds [32 x i8], [32 x i8]* %portstr, i32 0, i32 0, !dbg !7784
  %83 = call i32 @getaddrinfo(i8* %81, i8* %82, %struct.addrinfo* %hints, %struct.addrinfo** %res), !dbg !7785
  store i32 %83, i32* %error, align 4, !dbg !7786
  %84 = load i32, i32* %error, align 4, !dbg !7787
  %85 = icmp ne i32 %84, 0, !dbg !7787
  br i1 %85, label %86, label %94, !dbg !7789

; <label>:86                                      ; preds = %72
  %87 = load i32, i32* %error, align 4, !dbg !7790
  %88 = call i8* @gai_strerror(i32 %87) #10, !dbg !7792
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.194, i32 0, i32 0), i8* %88), !dbg !7793
  %89 = load %struct.addrinfo*, %struct.addrinfo** %res, align 8, !dbg !7795
  %90 = icmp ne %struct.addrinfo* %89, null, !dbg !7795
  br i1 %90, label %91, label %93, !dbg !7797

; <label>:91                                      ; preds = %86
  %92 = load %struct.addrinfo*, %struct.addrinfo** %res, align 8, !dbg !7798
  call void @freeaddrinfo(%struct.addrinfo* %92) #10, !dbg !7799
  br label %93, !dbg !7799

; <label>:93                                      ; preds = %91, %86
  store %struct.sockaddr* null, %struct.sockaddr** %1, align 8, !dbg !7800
  br label %116, !dbg !7800

; <label>:94                                      ; preds = %72
  %95 = load %struct.sockaddr*, %struct.sockaddr** %sa_p, align 8, !dbg !7801
  %96 = bitcast %struct.sockaddr* %95 to i8*, !dbg !7802
  %97 = load %struct.addrinfo*, %struct.addrinfo** %res, align 8, !dbg !7803
  %98 = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %97, i32 0, i32 5, !dbg !7804
  %99 = load %struct.sockaddr*, %struct.sockaddr** %98, align 8, !dbg !7804
  %100 = bitcast %struct.sockaddr* %99 to i8*, !dbg !7802
  %101 = load i32, i32* %sa_len, align 4, !dbg !7805
  %102 = sext i32 %101 to i64, !dbg !7805
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %96, i8* %100, i64 %102, i32 2, i1 false), !dbg !7802
  %103 = load %struct.addrinfo*, %struct.addrinfo** %res, align 8, !dbg !7806
  %104 = icmp ne %struct.addrinfo* %103, null, !dbg !7806
  br i1 %104, label %105, label %107, !dbg !7808

; <label>:105                                     ; preds = %94
  %106 = load %struct.addrinfo*, %struct.addrinfo** %res, align 8, !dbg !7809
  call void @freeaddrinfo(%struct.addrinfo* %106) #10, !dbg !7810
  br label %107, !dbg !7810

; <label>:107                                     ; preds = %105, %94
  br label %108, !dbg !7811

; <label>:108                                     ; preds = %107, %69
  %109 = load i32*, i32** %4, align 8, !dbg !7812
  %110 = icmp ne i32* %109, null, !dbg !7812
  br i1 %110, label %111, label %114, !dbg !7814

; <label>:111                                     ; preds = %108
  %112 = load i32, i32* %sa_len, align 4, !dbg !7815
  %113 = load i32*, i32** %4, align 8, !dbg !7816
  store i32 %112, i32* %113, align 4, !dbg !7817
  br label %114, !dbg !7818

; <label>:114                                     ; preds = %111, %108
  %115 = load %struct.sockaddr*, %struct.sockaddr** %sa_p, align 8, !dbg !7819
  store %struct.sockaddr* %115, %struct.sockaddr** %1, align 8, !dbg !7820
  br label %116, !dbg !7820

; <label>:116                                     ; preds = %114, %93, %65, %48, %25, %17
  %117 = load %struct.sockaddr*, %struct.sockaddr** %1, align 8, !dbg !7821
  ret %struct.sockaddr* %117, !dbg !7821
}

; Function Attrs: nounwind readonly
declare i8* @strchr(i8*, i32) #4

; Function Attrs: nounwind
declare i32 @inet_aton(i8*, %struct.in_addr*) #5

declare i32 @getaddrinfo(i8*, i8*, %struct.addrinfo*, %struct.addrinfo**) #2

; Function Attrs: nounwind
declare i8* @gai_strerror(i32) #5

; Function Attrs: nounwind
declare void @freeaddrinfo(%struct.addrinfo*) #5

; Function Attrs: nounwind uwtable
define void @fwd_free(%struct.fwd* %fwd_ptr) #0 !dbg !861 {
  %1 = alloca %struct.fwd*, align 8
  store %struct.fwd* %fwd_ptr, %struct.fwd** %1, align 8
  call void @llvm.dbg.declare(metadata %struct.fwd** %1, metadata !7822, metadata !2279), !dbg !7823
  %2 = load %struct.fwd*, %struct.fwd** %1, align 8, !dbg !7824
  %3 = icmp ne %struct.fwd* %2, null, !dbg !7824
  br i1 %3, label %4, label %17, !dbg !7826

; <label>:4                                       ; preds = %0
  %5 = load %struct.fwd*, %struct.fwd** %1, align 8, !dbg !7827
  %6 = getelementptr inbounds %struct.fwd, %struct.fwd* %5, i32 0, i32 2, !dbg !7830
  %7 = load %struct.sockaddr*, %struct.sockaddr** %6, align 8, !dbg !7830
  %8 = icmp ne %struct.sockaddr* %7, null, !dbg !7827
  br i1 %8, label %9, label %14, !dbg !7831

; <label>:9                                       ; preds = %4
  %10 = load %struct.fwd*, %struct.fwd** %1, align 8, !dbg !7832
  %11 = getelementptr inbounds %struct.fwd, %struct.fwd* %10, i32 0, i32 2, !dbg !7833
  %12 = load %struct.sockaddr*, %struct.sockaddr** %11, align 8, !dbg !7833
  %13 = bitcast %struct.sockaddr* %12 to i8*, !dbg !7832
  call void @free(i8* %13) #10, !dbg !7834
  br label %14, !dbg !7834

; <label>:14                                      ; preds = %9, %4
  %15 = load %struct.fwd*, %struct.fwd** %1, align 8, !dbg !7835
  %16 = bitcast %struct.fwd* %15 to i8*, !dbg !7835
  call void @free(i8* %16) #10, !dbg !7836
  br label %17, !dbg !7837

; <label>:17                                      ; preds = %14, %0
  ret void, !dbg !7838
}

; Function Attrs: nounwind uwtable
define void @fwd_freev(i8* %fwd_p) #0 !dbg !864 {
  %1 = alloca i8*, align 8
  store i8* %fwd_p, i8** %1, align 8
  call void @llvm.dbg.declare(metadata i8** %1, metadata !7839, metadata !2279), !dbg !7840
  %2 = load i8*, i8** %1, align 8, !dbg !7841
  %3 = bitcast i8* %2 to %struct.fwd*, !dbg !7842
  call void @fwd_free(%struct.fwd* %3), !dbg !7843
  ret void, !dbg !7844
}

; Function Attrs: nounwind uwtable
define %struct.fwd* @fwd_alloc() #0 !dbg !867 {
  %1 = alloca %struct.fwd*, align 8
  %fwd_p = alloca %struct.fwd*, align 8
  %fn = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata %struct.fwd** %fwd_p, metadata !7845, metadata !2279), !dbg !7846
  store %struct.fwd* null, %struct.fwd** %fwd_p, align 8, !dbg !7846
  call void @llvm.dbg.declare(metadata i8** %fn, metadata !7847, metadata !2279), !dbg !7848
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.4.195, i32 0, i32 0), i8** %fn, align 8, !dbg !7848
  %2 = call noalias i8* @malloc(i64 296) #10, !dbg !7849
  %3 = bitcast i8* %2 to %struct.fwd*, !dbg !7849
  store %struct.fwd* %3, %struct.fwd** %fwd_p, align 8, !dbg !7850
  %4 = load %struct.fwd*, %struct.fwd** %fwd_p, align 8, !dbg !7851
  %5 = icmp ne %struct.fwd* %4, null, !dbg !7851
  br i1 %5, label %8, label %6, !dbg !7853

; <label>:6                                       ; preds = %0
  %7 = load i8*, i8** %fn, align 8, !dbg !7854
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.5.196, i32 0, i32 0), i8* %7), !dbg !7856
  br label %21, !dbg !7857

; <label>:8                                       ; preds = %0
  %9 = call noalias i8* @malloc(i64 128) #10, !dbg !7858
  %10 = bitcast i8* %9 to %struct.sockaddr*, !dbg !7858
  %11 = load %struct.fwd*, %struct.fwd** %fwd_p, align 8, !dbg !7859
  %12 = getelementptr inbounds %struct.fwd, %struct.fwd* %11, i32 0, i32 2, !dbg !7860
  store %struct.sockaddr* %10, %struct.sockaddr** %12, align 8, !dbg !7861
  %13 = load %struct.fwd*, %struct.fwd** %fwd_p, align 8, !dbg !7862
  %14 = getelementptr inbounds %struct.fwd, %struct.fwd* %13, i32 0, i32 2, !dbg !7864
  %15 = load %struct.sockaddr*, %struct.sockaddr** %14, align 8, !dbg !7864
  %16 = icmp ne %struct.sockaddr* %15, null, !dbg !7862
  br i1 %16, label %19, label %17, !dbg !7865

; <label>:17                                      ; preds = %8
  %18 = load i8*, i8** %fn, align 8, !dbg !7866
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.5.196, i32 0, i32 0), i8* %18), !dbg !7868
  br label %21, !dbg !7869

; <label>:19                                      ; preds = %8
  %20 = load %struct.fwd*, %struct.fwd** %fwd_p, align 8, !dbg !7870
  store %struct.fwd* %20, %struct.fwd** %1, align 8, !dbg !7871
  br label %23, !dbg !7871

; <label>:21                                      ; preds = %17, %6
  %22 = load %struct.fwd*, %struct.fwd** %fwd_p, align 8, !dbg !7872
  call void @fwd_free(%struct.fwd* %22), !dbg !7873
  store %struct.fwd* null, %struct.fwd** %1, align 8, !dbg !7874
  br label %23, !dbg !7874

; <label>:23                                      ; preds = %21, %19
  %24 = load %struct.fwd*, %struct.fwd** %1, align 8, !dbg !7875
  ret %struct.fwd* %24, !dbg !7875
}

; Function Attrs: nounwind uwtable
define void @fwd_init() #0 !dbg !870 {
  %gl_tmp = alloca %struct.generic_list*, align 8
  %sa_p = alloca %struct.sockaddr*, align 8
  %sa_p_len = alloca i32, align 4
  %fwd_tmp = alloca %struct.fwd*, align 8
  call void @llvm.dbg.declare(metadata %struct.generic_list** %gl_tmp, metadata !7876, metadata !2279), !dbg !7877
  %1 = load %struct.generic_list*, %struct.generic_list** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 21), align 8, !dbg !7878
  %2 = icmp ne %struct.generic_list* %1, null, !dbg !7880
  br i1 %2, label %4, label %3, !dbg !7881

; <label>:3                                       ; preds = %0
  br label %75, !dbg !7882

; <label>:4                                       ; preds = %0
  %5 = load %struct.generic_list*, %struct.generic_list** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 21), align 8, !dbg !7883
  %6 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %5, i32 0, i32 0, !dbg !7885
  %7 = load %struct.generic_list*, %struct.generic_list** %6, align 8, !dbg !7885
  store %struct.generic_list* %7, %struct.generic_list** %gl_tmp, align 8, !dbg !7886
  br label %8, !dbg !7887

; <label>:8                                       ; preds = %71, %4
  %9 = load %struct.generic_list*, %struct.generic_list** %gl_tmp, align 8, !dbg !7888
  %10 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %9, i32 0, i32 2, !dbg !7891
  %11 = load i8*, i8** %10, align 8, !dbg !7891
  %12 = icmp ne i8* %11, null, !dbg !7892
  br i1 %12, label %13, label %75, !dbg !7892

; <label>:13                                      ; preds = %8
  call void @llvm.dbg.declare(metadata %struct.sockaddr** %sa_p, metadata !7893, metadata !2279), !dbg !7895
  call void @llvm.dbg.declare(metadata i32* %sa_p_len, metadata !7896, metadata !2279), !dbg !7897
  call void @llvm.dbg.declare(metadata %struct.fwd** %fwd_tmp, metadata !7898, metadata !2279), !dbg !7899
  %14 = load %struct.generic_list*, %struct.generic_list** %gl_tmp, align 8, !dbg !7900
  %15 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %14, i32 0, i32 2, !dbg !7901
  %16 = load i8*, i8** %15, align 8, !dbg !7901
  %17 = bitcast i8* %16 to %struct.fwd*, !dbg !7902
  store %struct.fwd* %17, %struct.fwd** %fwd_tmp, align 8, !dbg !7903
  %18 = load %struct.fwd*, %struct.fwd** %fwd_tmp, align 8, !dbg !7904
  %19 = getelementptr inbounds %struct.fwd, %struct.fwd* %18, i32 0, i32 4, !dbg !7905
  store i64 0, i64* %19, align 8, !dbg !7906
  %20 = load %struct.fwd*, %struct.fwd** %fwd_tmp, align 8, !dbg !7907
  %21 = getelementptr inbounds %struct.fwd, %struct.fwd* %20, i32 0, i32 5, !dbg !7908
  store i32 0, i32* %21, align 8, !dbg !7909
  %22 = load %struct.fwd*, %struct.fwd** %fwd_tmp, align 8, !dbg !7910
  %23 = getelementptr inbounds %struct.fwd, %struct.fwd* %22, i32 0, i32 0, !dbg !7911
  %24 = getelementptr inbounds [257 x i8], [257 x i8]* %23, i32 0, i32 0, !dbg !7910
  %25 = load %struct.fwd*, %struct.fwd** %fwd_tmp, align 8, !dbg !7912
  %26 = getelementptr inbounds %struct.fwd, %struct.fwd* %25, i32 0, i32 1, !dbg !7913
  %27 = load i32, i32* %26, align 4, !dbg !7913
  %28 = call %struct.sockaddr* @parse_and_alloc_addr(i8* %24, i32 %27, i32* %sa_p_len), !dbg !7914
  store %struct.sockaddr* %28, %struct.sockaddr** %sa_p, align 8, !dbg !7915
  %29 = load %struct.sockaddr*, %struct.sockaddr** %sa_p, align 8, !dbg !7916
  %30 = icmp ne %struct.sockaddr* %29, null, !dbg !7916
  br i1 %30, label %31, label %49, !dbg !7918

; <label>:31                                      ; preds = %13
  %32 = load %struct.fwd*, %struct.fwd** %fwd_tmp, align 8, !dbg !7919
  %33 = getelementptr inbounds %struct.fwd, %struct.fwd* %32, i32 0, i32 0, !dbg !7921
  %34 = getelementptr inbounds [257 x i8], [257 x i8]* %33, i32 0, i32 0, !dbg !7919
  %35 = load %struct.fwd*, %struct.fwd** %fwd_tmp, align 8, !dbg !7922
  %36 = getelementptr inbounds %struct.fwd, %struct.fwd* %35, i32 0, i32 1, !dbg !7923
  %37 = load i32, i32* %36, align 4, !dbg !7923
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.6.197, i32 0, i32 0), i8* %34, i32 %37), !dbg !7924
  %38 = load %struct.fwd*, %struct.fwd** %fwd_tmp, align 8, !dbg !7925
  %39 = getelementptr inbounds %struct.fwd, %struct.fwd* %38, i32 0, i32 2, !dbg !7926
  %40 = load %struct.sockaddr*, %struct.sockaddr** %39, align 8, !dbg !7926
  %41 = bitcast %struct.sockaddr* %40 to i8*, !dbg !7927
  %42 = load %struct.sockaddr*, %struct.sockaddr** %sa_p, align 8, !dbg !7928
  %43 = bitcast %struct.sockaddr* %42 to i8*, !dbg !7927
  %44 = load i32, i32* %sa_p_len, align 4, !dbg !7929
  %45 = sext i32 %44 to i64, !dbg !7929
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %41, i8* %43, i64 %45, i32 2, i1 false), !dbg !7927
  %46 = load i32, i32* %sa_p_len, align 4, !dbg !7930
  %47 = load %struct.fwd*, %struct.fwd** %fwd_tmp, align 8, !dbg !7931
  %48 = getelementptr inbounds %struct.fwd, %struct.fwd* %47, i32 0, i32 3, !dbg !7932
  store i32 %46, i32* %48, align 8, !dbg !7933
  br label %70, !dbg !7934

; <label>:49                                      ; preds = %13
  %50 = load %struct.fwd*, %struct.fwd** %fwd_tmp, align 8, !dbg !7935
  %51 = getelementptr inbounds %struct.fwd, %struct.fwd* %50, i32 0, i32 0, !dbg !7937
  %52 = getelementptr inbounds [257 x i8], [257 x i8]* %51, i32 0, i32 0, !dbg !7935
  %53 = load %struct.fwd*, %struct.fwd** %fwd_tmp, align 8, !dbg !7938
  %54 = getelementptr inbounds %struct.fwd, %struct.fwd* %53, i32 0, i32 1, !dbg !7939
  %55 = load i32, i32* %54, align 4, !dbg !7939
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.198, i32 0, i32 0), i8* %52, i32 %55), !dbg !7940
  %56 = load %struct.fwd*, %struct.fwd** %fwd_tmp, align 8, !dbg !7941
  %57 = getelementptr inbounds %struct.fwd, %struct.fwd* %56, i32 0, i32 2, !dbg !7943
  %58 = load %struct.sockaddr*, %struct.sockaddr** %57, align 8, !dbg !7943
  %59 = icmp ne %struct.sockaddr* %58, null, !dbg !7941
  br i1 %59, label %60, label %65, !dbg !7944

; <label>:60                                      ; preds = %49
  %61 = load %struct.fwd*, %struct.fwd** %fwd_tmp, align 8, !dbg !7945
  %62 = getelementptr inbounds %struct.fwd, %struct.fwd* %61, i32 0, i32 2, !dbg !7946
  %63 = load %struct.sockaddr*, %struct.sockaddr** %62, align 8, !dbg !7946
  %64 = bitcast %struct.sockaddr* %63 to i8*, !dbg !7945
  call void @free(i8* %64) #10, !dbg !7947
  br label %65, !dbg !7947

; <label>:65                                      ; preds = %60, %49
  %66 = load %struct.fwd*, %struct.fwd** %fwd_tmp, align 8, !dbg !7948
  %67 = getelementptr inbounds %struct.fwd, %struct.fwd* %66, i32 0, i32 2, !dbg !7949
  store %struct.sockaddr* null, %struct.sockaddr** %67, align 8, !dbg !7950
  %68 = load %struct.fwd*, %struct.fwd** %fwd_tmp, align 8, !dbg !7951
  %69 = getelementptr inbounds %struct.fwd, %struct.fwd* %68, i32 0, i32 3, !dbg !7952
  store i32 0, i32* %69, align 8, !dbg !7953
  br label %70

; <label>:70                                      ; preds = %65, %31
  br label %71, !dbg !7954

; <label>:71                                      ; preds = %70
  %72 = load %struct.generic_list*, %struct.generic_list** %gl_tmp, align 8, !dbg !7955
  %73 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %72, i32 0, i32 0, !dbg !7957
  %74 = load %struct.generic_list*, %struct.generic_list** %73, align 8, !dbg !7957
  store %struct.generic_list* %74, %struct.generic_list** %gl_tmp, align 8, !dbg !7958
  br label %8, !dbg !7959

; <label>:75                                      ; preds = %3, %8
  ret void, !dbg !7960
}

; Function Attrs: nounwind uwtable
define i32 @fwd_add(i8* %hostname, i32 %port) #0 !dbg !871 {
  %1 = alloca i32, align 4
  %2 = alloca i8*, align 8
  %3 = alloca i32, align 4
  %fwd_p = alloca %struct.fwd*, align 8
  store i8* %hostname, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !7961, metadata !2279), !dbg !7962
  store i32 %port, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !7963, metadata !2279), !dbg !7964
  call void @llvm.dbg.declare(metadata %struct.fwd** %fwd_p, metadata !7965, metadata !2279), !dbg !7966
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.8.199, i32 0, i32 0)), !dbg !7967
  %4 = load %struct.generic_list*, %struct.generic_list** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 21), align 8, !dbg !7968
  %5 = icmp ne %struct.generic_list* %4, null, !dbg !7970
  br i1 %5, label %7, label %6, !dbg !7971

; <label>:6                                       ; preds = %0
  store i32 -1, i32* %1, align 4, !dbg !7972
  br label %29, !dbg !7972

; <label>:7                                       ; preds = %0
  %8 = call %struct.fwd* @fwd_alloc(), !dbg !7973
  store %struct.fwd* %8, %struct.fwd** %fwd_p, align 8, !dbg !7974
  %9 = load %struct.fwd*, %struct.fwd** %fwd_p, align 8, !dbg !7975
  %10 = icmp ne %struct.fwd* %9, null, !dbg !7975
  br i1 %10, label %12, label %11, !dbg !7977

; <label>:11                                      ; preds = %7
  store i32 -1, i32* %1, align 4, !dbg !7978
  br label %29, !dbg !7978

; <label>:12                                      ; preds = %7
  %13 = load %struct.fwd*, %struct.fwd** %fwd_p, align 8, !dbg !7979
  %14 = getelementptr inbounds %struct.fwd, %struct.fwd* %13, i32 0, i32 0, !dbg !7980
  %15 = getelementptr inbounds [257 x i8], [257 x i8]* %14, i32 0, i32 0, !dbg !7979
  %16 = load i8*, i8** %2, align 8, !dbg !7981
  %17 = call i64 @strlcpy(i8* %15, i8* %16, i64 256), !dbg !7982
  %18 = load i32, i32* %3, align 4, !dbg !7983
  %19 = load %struct.fwd*, %struct.fwd** %fwd_p, align 8, !dbg !7984
  %20 = getelementptr inbounds %struct.fwd, %struct.fwd* %19, i32 0, i32 1, !dbg !7985
  store i32 %18, i32* %20, align 4, !dbg !7986
  %21 = load %struct.generic_list*, %struct.generic_list** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 21), align 8, !dbg !7987
  %22 = load %struct.fwd*, %struct.fwd** %fwd_p, align 8, !dbg !7989
  %23 = bitcast %struct.fwd* %22 to i8*, !dbg !7989
  %24 = call i32 @list_add_tail(%struct.generic_list* %21, i8* %23), !dbg !7990
  %25 = icmp slt i32 %24, 0, !dbg !7991
  br i1 %25, label %26, label %28, !dbg !7992

; <label>:26                                      ; preds = %12
  %27 = load %struct.fwd*, %struct.fwd** %fwd_p, align 8, !dbg !7993
  call void @fwd_free(%struct.fwd* %27), !dbg !7995
  store i32 -1, i32* %1, align 4, !dbg !7996
  br label %29, !dbg !7996

; <label>:28                                      ; preds = %12
  store i32 0, i32* %1, align 4, !dbg !7997
  br label %29, !dbg !7997

; <label>:29                                      ; preds = %28, %26, %11, %6
  %30 = load i32, i32* %1, align 4, !dbg !7998
  ret i32 %30, !dbg !7998
}

; Function Attrs: nounwind uwtable
define void @fwd_select(%struct.ToT* noalias sret %agg.result, %struct.ToT* byval align 8 %T) #0 !dbg !874 {
  %fn = alloca i8*, align 8
  %astr = alloca [256 x i8], align 16
  %list_tmp = alloca %struct.generic_list*, align 8
  %fwd_tmp = alloca %struct.fwd*, align 8
  %waittime = alloca i64, align 8
  %downtime = alloca i64, align 8
  %current_time = alloca i64, align 8
  call void @llvm.dbg.declare(metadata %struct.ToT* %T, metadata !7999, metadata !2279), !dbg !8000
  call void @llvm.dbg.declare(metadata i8** %fn, metadata !8001, metadata !2279), !dbg !8002
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.9.200, i32 0, i32 0), i8** %fn, align 8, !dbg !8002
  call void @llvm.dbg.declare(metadata [256 x i8]* %astr, metadata !8003, metadata !2279), !dbg !8004
  call void @llvm.dbg.declare(metadata %struct.generic_list** %list_tmp, metadata !8005, metadata !2279), !dbg !8006
  call void @llvm.dbg.declare(metadata %struct.fwd** %fwd_tmp, metadata !8007, metadata !2279), !dbg !8008
  %1 = load i8*, i8** %fn, align 8, !dbg !8009
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.10.201, i32 0, i32 0), i8* %1), !dbg !8010
  %2 = getelementptr inbounds %struct.ToT, %struct.ToT* %T, i32 0, i32 22, !dbg !8011
  %3 = load %struct.generic_list*, %struct.generic_list** %2, align 8, !dbg !8011
  %4 = icmp ne %struct.generic_list* %3, null, !dbg !8013
  br i1 %4, label %63, label %5, !dbg !8014

; <label>:5                                       ; preds = %0
  %6 = getelementptr inbounds %struct.ToT, %struct.ToT* %T, i32 0, i32 21, !dbg !8015
  %7 = load %struct.generic_list*, %struct.generic_list** %6, align 8, !dbg !8015
  %8 = icmp ne %struct.generic_list* %7, null, !dbg !8018
  br i1 %8, label %12, label %9, !dbg !8019

; <label>:9                                       ; preds = %5
  %10 = bitcast %struct.ToT* %agg.result to i8*, !dbg !8020
  %11 = bitcast %struct.ToT* %T to i8*, !dbg !8020
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %10, i8* %11, i64 2216, i32 8, i1 false), !dbg !8020
  br label %144, !dbg !8021

; <label>:12                                      ; preds = %5
  %13 = getelementptr inbounds %struct.ToT, %struct.ToT* %T, i32 0, i32 21, !dbg !8022
  %14 = load %struct.generic_list*, %struct.generic_list** %13, align 8, !dbg !8022
  %15 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %14, i32 0, i32 0, !dbg !8023
  %16 = load %struct.generic_list*, %struct.generic_list** %15, align 8, !dbg !8023
  %17 = getelementptr inbounds %struct.ToT, %struct.ToT* %T, i32 0, i32 22, !dbg !8024
  store %struct.generic_list* %16, %struct.generic_list** %17, align 8, !dbg !8025
  %18 = getelementptr inbounds %struct.ToT, %struct.ToT* %T, i32 0, i32 22, !dbg !8026
  %19 = load %struct.generic_list*, %struct.generic_list** %18, align 8, !dbg !8026
  %20 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %19, i32 0, i32 2, !dbg !8027
  %21 = load i8*, i8** %20, align 8, !dbg !8027
  %22 = bitcast i8* %21 to %struct.fwd*, !dbg !8028
  store %struct.fwd* %22, %struct.fwd** %fwd_tmp, align 8, !dbg !8029
  br label %23, !dbg !8030

; <label>:23                                      ; preds = %34, %12
  %24 = load %struct.fwd*, %struct.fwd** %fwd_tmp, align 8, !dbg !8031
  %25 = icmp ne %struct.fwd* %24, null, !dbg !8031
  br i1 %25, label %26, label %32, !dbg !8033

; <label>:26                                      ; preds = %23
  %27 = load %struct.fwd*, %struct.fwd** %fwd_tmp, align 8, !dbg !8034
  %28 = getelementptr inbounds %struct.fwd, %struct.fwd* %27, i32 0, i32 2, !dbg !8036
  %29 = load %struct.sockaddr*, %struct.sockaddr** %28, align 8, !dbg !8036
  %30 = icmp ne %struct.sockaddr* %29, null, !dbg !8037
  %31 = xor i1 %30, true, !dbg !8037
  br label %32

; <label>:32                                      ; preds = %26, %23
  %33 = phi i1 [ false, %23 ], [ %31, %26 ]
  br i1 %33, label %34, label %45, !dbg !8038

; <label>:34                                      ; preds = %32
  %35 = getelementptr inbounds %struct.ToT, %struct.ToT* %T, i32 0, i32 22, !dbg !8040
  %36 = load %struct.generic_list*, %struct.generic_list** %35, align 8, !dbg !8040
  %37 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %36, i32 0, i32 0, !dbg !8042
  %38 = load %struct.generic_list*, %struct.generic_list** %37, align 8, !dbg !8042
  %39 = getelementptr inbounds %struct.ToT, %struct.ToT* %T, i32 0, i32 22, !dbg !8043
  store %struct.generic_list* %38, %struct.generic_list** %39, align 8, !dbg !8044
  %40 = getelementptr inbounds %struct.ToT, %struct.ToT* %T, i32 0, i32 22, !dbg !8045
  %41 = load %struct.generic_list*, %struct.generic_list** %40, align 8, !dbg !8045
  %42 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %41, i32 0, i32 2, !dbg !8046
  %43 = load i8*, i8** %42, align 8, !dbg !8046
  %44 = bitcast i8* %43 to %struct.fwd*, !dbg !8047
  store %struct.fwd* %44, %struct.fwd** %fwd_tmp, align 8, !dbg !8048
  br label %23, !dbg !8049

; <label>:45                                      ; preds = %32
  %46 = load %struct.fwd*, %struct.fwd** %fwd_tmp, align 8, !dbg !8051
  %47 = icmp ne %struct.fwd* %46, null, !dbg !8051
  br i1 %47, label %48, label %53, !dbg !8053

; <label>:48                                      ; preds = %45
  %49 = load %struct.fwd*, %struct.fwd** %fwd_tmp, align 8, !dbg !8054
  %50 = getelementptr inbounds %struct.fwd, %struct.fwd* %49, i32 0, i32 2, !dbg !8056
  %51 = load %struct.sockaddr*, %struct.sockaddr** %50, align 8, !dbg !8056
  %52 = icmp ne %struct.sockaddr* %51, null, !dbg !8054
  br i1 %52, label %57, label %53, !dbg !8057

; <label>:53                                      ; preds = %48, %45
  %54 = getelementptr inbounds %struct.ToT, %struct.ToT* %T, i32 0, i32 22, !dbg !8058
  store %struct.generic_list* null, %struct.generic_list** %54, align 8, !dbg !8060
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.11.202, i32 0, i32 0)), !dbg !8061
  %55 = bitcast %struct.ToT* %agg.result to i8*, !dbg !8062
  %56 = bitcast %struct.ToT* %T to i8*, !dbg !8062
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %55, i8* %56, i64 2216, i32 8, i1 false), !dbg !8062
  br label %144, !dbg !8063

; <label>:57                                      ; preds = %48
  %58 = load %struct.fwd*, %struct.fwd** %fwd_tmp, align 8, !dbg !8064
  %59 = getelementptr inbounds %struct.fwd, %struct.fwd* %58, i32 0, i32 2, !dbg !8065
  %60 = load %struct.sockaddr*, %struct.sockaddr** %59, align 8, !dbg !8065
  %61 = getelementptr inbounds [256 x i8], [256 x i8]* %astr, i32 0, i32 0, !dbg !8066
  %62 = call i8* @sprint_inet(%struct.sockaddr* %60, i8* %61), !dbg !8067
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.12.203, i32 0, i32 0), i8* %62), !dbg !8068
  br label %131, !dbg !8069

; <label>:63                                      ; preds = %0
  %64 = getelementptr inbounds %struct.ToT, %struct.ToT* %T, i32 0, i32 22, !dbg !8070
  %65 = load %struct.generic_list*, %struct.generic_list** %64, align 8, !dbg !8070
  %66 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %65, i32 0, i32 1, !dbg !8073
  %67 = load %struct.generic_list*, %struct.generic_list** %66, align 8, !dbg !8073
  %68 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %67, i32 0, i32 2, !dbg !8074
  %69 = load i8*, i8** %68, align 8, !dbg !8074
  %70 = icmp ne i8* %69, null, !dbg !8075
  br i1 %70, label %71, label %130, !dbg !8075

; <label>:71                                      ; preds = %63
  call void @llvm.dbg.declare(metadata i64* %waittime, metadata !8076, metadata !2279), !dbg !8078
  call void @llvm.dbg.declare(metadata i64* %downtime, metadata !8079, metadata !2279), !dbg !8080
  call void @llvm.dbg.declare(metadata i64* %current_time, metadata !8081, metadata !2279), !dbg !8082
  %72 = call i64 @time(i64* null) #10, !dbg !8083
  store i64 %72, i64* %current_time, align 8, !dbg !8084
  %73 = getelementptr inbounds %struct.ToT, %struct.ToT* %T, i32 0, i32 22, !dbg !8085
  %74 = load %struct.generic_list*, %struct.generic_list** %73, align 8, !dbg !8085
  %75 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %74, i32 0, i32 1, !dbg !8086
  %76 = load %struct.generic_list*, %struct.generic_list** %75, align 8, !dbg !8086
  store %struct.generic_list* %76, %struct.generic_list** %list_tmp, align 8, !dbg !8087
  %77 = load %struct.generic_list*, %struct.generic_list** %list_tmp, align 8, !dbg !8088
  %78 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %77, i32 0, i32 2, !dbg !8089
  %79 = load i8*, i8** %78, align 8, !dbg !8089
  %80 = bitcast i8* %79 to %struct.fwd*, !dbg !8090
  store %struct.fwd* %80, %struct.fwd** %fwd_tmp, align 8, !dbg !8091
  br label %81, !dbg !8092

; <label>:81                                      ; preds = %121, %71
  %82 = load %struct.fwd*, %struct.fwd** %fwd_tmp, align 8, !dbg !8093
  %83 = icmp ne %struct.fwd* %82, null, !dbg !8095
  br i1 %83, label %84, label %129, !dbg !8095

; <label>:84                                      ; preds = %81
  %85 = load i64, i64* %current_time, align 8, !dbg !8096
  %86 = load %struct.fwd*, %struct.fwd** %fwd_tmp, align 8, !dbg !8098
  %87 = getelementptr inbounds %struct.fwd, %struct.fwd* %86, i32 0, i32 4, !dbg !8099
  %88 = load i64, i64* %87, align 8, !dbg !8099
  %89 = sub nsw i64 %85, %88, !dbg !8100
  store i64 %89, i64* %waittime, align 8, !dbg !8101
  %90 = getelementptr inbounds %struct.ToT, %struct.ToT* %T, i32 0, i32 10, !dbg !8102
  %91 = load i32, i32* %90, align 4, !dbg !8102
  %92 = sext i32 %91 to i64, !dbg !8103
  store i64 %92, i64* %downtime, align 8, !dbg !8104
  %93 = load %struct.fwd*, %struct.fwd** %fwd_tmp, align 8, !dbg !8105
  %94 = getelementptr inbounds %struct.fwd, %struct.fwd* %93, i32 0, i32 2, !dbg !8107
  %95 = load %struct.sockaddr*, %struct.sockaddr** %94, align 8, !dbg !8107
  %96 = icmp ne %struct.sockaddr* %95, null, !dbg !8105
  br i1 %96, label %97, label %121, !dbg !8108

; <label>:97                                      ; preds = %84
  %98 = load i64, i64* %waittime, align 8, !dbg !8109
  %99 = load i64, i64* %downtime, align 8, !dbg !8111
  %100 = icmp sgt i64 %98, %99, !dbg !8112
  br i1 %100, label %101, label %121, !dbg !8113

; <label>:101                                     ; preds = %97
  %102 = load %struct.fwd*, %struct.fwd** %fwd_tmp, align 8, !dbg !8114
  %103 = getelementptr inbounds %struct.fwd, %struct.fwd* %102, i32 0, i32 2, !dbg !8116
  %104 = load %struct.sockaddr*, %struct.sockaddr** %103, align 8, !dbg !8116
  %105 = getelementptr inbounds [256 x i8], [256 x i8]* %astr, i32 0, i32 0, !dbg !8117
  %106 = call i8* @sprint_inet(%struct.sockaddr* %104, i8* %105), !dbg !8118
  call void (i32, i8*, ...) @syslog(i32 5, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.13.204, i32 0, i32 0), i8* %106), !dbg !8119
  %107 = load %struct.fwd*, %struct.fwd** %fwd_tmp, align 8, !dbg !8120
  %108 = getelementptr inbounds %struct.fwd, %struct.fwd* %107, i32 0, i32 4, !dbg !8121
  store i64 0, i64* %108, align 8, !dbg !8122
  %109 = load %struct.fwd*, %struct.fwd** %fwd_tmp, align 8, !dbg !8123
  %110 = getelementptr inbounds %struct.fwd, %struct.fwd* %109, i32 0, i32 5, !dbg !8125
  %111 = load i32, i32* %110, align 8, !dbg !8125
  %112 = icmp sgt i32 %111, 0, !dbg !8126
  br i1 %112, label %113, label %118, !dbg !8127

; <label>:113                                     ; preds = %101
  %114 = load %struct.fwd*, %struct.fwd** %fwd_tmp, align 8, !dbg !8128
  %115 = getelementptr inbounds %struct.fwd, %struct.fwd* %114, i32 0, i32 5, !dbg !8129
  %116 = load i32, i32* %115, align 8, !dbg !8130
  %117 = add nsw i32 %116, -1, !dbg !8130
  store i32 %117, i32* %115, align 8, !dbg !8130
  br label %118, !dbg !8128

; <label>:118                                     ; preds = %113, %101
  %119 = load %struct.generic_list*, %struct.generic_list** %list_tmp, align 8, !dbg !8131
  %120 = getelementptr inbounds %struct.ToT, %struct.ToT* %T, i32 0, i32 22, !dbg !8132
  store %struct.generic_list* %119, %struct.generic_list** %120, align 8, !dbg !8133
  br label %129, !dbg !8134

; <label>:121                                     ; preds = %97, %84
  %122 = load %struct.generic_list*, %struct.generic_list** %list_tmp, align 8, !dbg !8135
  %123 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %122, i32 0, i32 1, !dbg !8136
  %124 = load %struct.generic_list*, %struct.generic_list** %123, align 8, !dbg !8136
  store %struct.generic_list* %124, %struct.generic_list** %list_tmp, align 8, !dbg !8137
  %125 = load %struct.generic_list*, %struct.generic_list** %list_tmp, align 8, !dbg !8138
  %126 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %125, i32 0, i32 2, !dbg !8139
  %127 = load i8*, i8** %126, align 8, !dbg !8139
  %128 = bitcast i8* %127 to %struct.fwd*, !dbg !8140
  store %struct.fwd* %128, %struct.fwd** %fwd_tmp, align 8, !dbg !8141
  br label %81, !dbg !8142

; <label>:129                                     ; preds = %118, %81
  br label %130, !dbg !8144

; <label>:130                                     ; preds = %129, %63
  br label %131

; <label>:131                                     ; preds = %130, %57
  %132 = getelementptr inbounds %struct.ToT, %struct.ToT* %T, i32 0, i32 22, !dbg !8145
  %133 = load %struct.generic_list*, %struct.generic_list** %132, align 8, !dbg !8145
  %134 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %133, i32 0, i32 2, !dbg !8146
  %135 = load i8*, i8** %134, align 8, !dbg !8146
  %136 = bitcast i8* %135 to %struct.fwd*, !dbg !8147
  %137 = getelementptr inbounds %struct.fwd, %struct.fwd* %136, i32 0, i32 2, !dbg !8148
  %138 = load %struct.sockaddr*, %struct.sockaddr** %137, align 8, !dbg !8148
  %139 = getelementptr inbounds [256 x i8], [256 x i8]* %astr, i32 0, i32 0, !dbg !8149
  %140 = call i8* @sprint_inet(%struct.sockaddr* %138, i8* %139), !dbg !8150
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.205, i32 0, i32 0), i8* %140), !dbg !8151
  %141 = load i8*, i8** %fn, align 8, !dbg !8152
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.15.206, i32 0, i32 0), i8* %141), !dbg !8153
  %142 = bitcast %struct.ToT* %agg.result to i8*, !dbg !8154
  %143 = bitcast %struct.ToT* %T to i8*, !dbg !8154
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %142, i8* %143, i64 2216, i32 8, i1 false), !dbg !8154
  br label %144, !dbg !8155

; <label>:144                                     ; preds = %131, %53, %9
  ret void, !dbg !8156
}

; Function Attrs: nounwind uwtable
define void @fwd_mark(%struct.sockaddr* %sa, i32 %up) #0 !dbg !931 {
  %1 = alloca %struct.sockaddr*, align 8
  %2 = alloca i32, align 4
  %fn = alloca i8*, align 8
  %astr = alloca [256 x i8], align 16
  %bstr = alloca [256 x i8], align 16
  %gl = alloca %struct.generic_list*, align 8
  %fwd = alloca %struct.fwd*, align 8
  %sina = alloca %struct.sockaddr_in6*, align 8
  %sinb = alloca %struct.sockaddr_in6*, align 8
  %__a = alloca %struct.in6_addr*, align 8
  %__b = alloca %struct.in6_addr*, align 8
  %3 = alloca i32, align 4
  %sina1 = alloca %struct.sockaddr_in*, align 8
  %sinb2 = alloca %struct.sockaddr_in*, align 8
  %new_fwd = alloca %struct.generic_list*, align 8
  %fwd_tmp = alloca %struct.fwd*, align 8
  store %struct.sockaddr* %sa, %struct.sockaddr** %1, align 8
  call void @llvm.dbg.declare(metadata %struct.sockaddr** %1, metadata !8157, metadata !2279), !dbg !8158
  store i32 %up, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !8159, metadata !2279), !dbg !8160
  call void @llvm.dbg.declare(metadata i8** %fn, metadata !8161, metadata !2279), !dbg !8162
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.16.209, i32 0, i32 0), i8** %fn, align 8, !dbg !8162
  call void @llvm.dbg.declare(metadata [256 x i8]* %astr, metadata !8163, metadata !2279), !dbg !8164
  call void @llvm.dbg.declare(metadata [256 x i8]* %bstr, metadata !8165, metadata !2279), !dbg !8166
  call void @llvm.dbg.declare(metadata %struct.generic_list** %gl, metadata !8167, metadata !2279), !dbg !8168
  call void @llvm.dbg.declare(metadata %struct.fwd** %fwd, metadata !8169, metadata !2279), !dbg !8170
  %4 = load i8*, i8** %fn, align 8, !dbg !8171
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.10.201, i32 0, i32 0), i8* %4), !dbg !8172
  %5 = load %struct.generic_list*, %struct.generic_list** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 21), align 8, !dbg !8173
  %6 = icmp ne %struct.generic_list* %5, null, !dbg !8175
  br i1 %6, label %7, label %10, !dbg !8176

; <label>:7                                       ; preds = %0
  %8 = load %struct.generic_list*, %struct.generic_list** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 22), align 8, !dbg !8177
  %9 = icmp ne %struct.generic_list* %8, null, !dbg !8179
  br i1 %9, label %11, label %10, !dbg !8180

; <label>:10                                      ; preds = %7, %0
  br label %286, !dbg !8181

; <label>:11                                      ; preds = %7
  store %struct.fwd* null, %struct.fwd** %fwd, align 8, !dbg !8182
  %12 = load %struct.generic_list*, %struct.generic_list** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 21), align 8, !dbg !8183
  %13 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %12, i32 0, i32 0, !dbg !8185
  %14 = load %struct.generic_list*, %struct.generic_list** %13, align 8, !dbg !8185
  store %struct.generic_list* %14, %struct.generic_list** %gl, align 8, !dbg !8186
  br label %15, !dbg !8187

; <label>:15                                      ; preds = %163, %11
  %16 = load %struct.generic_list*, %struct.generic_list** %gl, align 8, !dbg !8188
  %17 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %16, i32 0, i32 2, !dbg !8191
  %18 = load i8*, i8** %17, align 8, !dbg !8191
  %19 = icmp ne i8* %18, null, !dbg !8192
  br i1 %19, label %20, label %167, !dbg !8192

; <label>:20                                      ; preds = %15
  %21 = load %struct.generic_list*, %struct.generic_list** %gl, align 8, !dbg !8193
  %22 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %21, i32 0, i32 2, !dbg !8195
  %23 = load i8*, i8** %22, align 8, !dbg !8195
  %24 = bitcast i8* %23 to %struct.fwd*, !dbg !8196
  store %struct.fwd* %24, %struct.fwd** %fwd, align 8, !dbg !8197
  %25 = load %struct.sockaddr*, %struct.sockaddr** %1, align 8, !dbg !8198
  %26 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %25, i32 0, i32 0, !dbg !8200
  %27 = load i16, i16* %26, align 2, !dbg !8200
  %28 = zext i16 %27 to i32, !dbg !8198
  %29 = load %struct.fwd*, %struct.fwd** %fwd, align 8, !dbg !8201
  %30 = getelementptr inbounds %struct.fwd, %struct.fwd* %29, i32 0, i32 2, !dbg !8202
  %31 = load %struct.sockaddr*, %struct.sockaddr** %30, align 8, !dbg !8202
  %32 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %31, i32 0, i32 0, !dbg !8203
  %33 = load i16, i16* %32, align 2, !dbg !8203
  %34 = zext i16 %33 to i32, !dbg !8201
  %35 = icmp ne i32 %28, %34, !dbg !8204
  br i1 %35, label %36, label %37, !dbg !8205

; <label>:36                                      ; preds = %20
  br label %163, !dbg !8206

; <label>:37                                      ; preds = %20
  %38 = load %struct.sockaddr*, %struct.sockaddr** %1, align 8, !dbg !8207
  %39 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %38, i32 0, i32 0, !dbg !8209
  %40 = load i16, i16* %39, align 2, !dbg !8209
  %41 = zext i16 %40 to i32, !dbg !8207
  %42 = icmp eq i32 %41, 10, !dbg !8210
  br i1 %42, label %43, label %123, !dbg !8211

; <label>:43                                      ; preds = %37
  call void @llvm.dbg.declare(metadata %struct.sockaddr_in6** %sina, metadata !8212, metadata !2279), !dbg !8214
  call void @llvm.dbg.declare(metadata %struct.sockaddr_in6** %sinb, metadata !8215, metadata !2279), !dbg !8216
  %44 = load %struct.fwd*, %struct.fwd** %fwd, align 8, !dbg !8217
  %45 = getelementptr inbounds %struct.fwd, %struct.fwd* %44, i32 0, i32 2, !dbg !8218
  %46 = load %struct.sockaddr*, %struct.sockaddr** %45, align 8, !dbg !8218
  %47 = bitcast %struct.sockaddr* %46 to %struct.sockaddr_in6*, !dbg !8219
  store %struct.sockaddr_in6* %47, %struct.sockaddr_in6** %sina, align 8, !dbg !8220
  %48 = load %struct.sockaddr*, %struct.sockaddr** %1, align 8, !dbg !8221
  %49 = bitcast %struct.sockaddr* %48 to %struct.sockaddr_in6*, !dbg !8222
  store %struct.sockaddr_in6* %49, %struct.sockaddr_in6** %sinb, align 8, !dbg !8223
  call void @llvm.dbg.declare(metadata %struct.in6_addr** %__a, metadata !8224, metadata !2279), !dbg !8227
  %50 = load %struct.sockaddr_in6*, %struct.sockaddr_in6** %sina, align 8, !dbg !8227
  %51 = getelementptr inbounds %struct.sockaddr_in6, %struct.sockaddr_in6* %50, i32 0, i32 3, !dbg !8227
  store %struct.in6_addr* %51, %struct.in6_addr** %__a, align 8, !dbg !8227
  call void @llvm.dbg.declare(metadata %struct.in6_addr** %__b, metadata !8228, metadata !2279), !dbg !8227
  %52 = load %struct.sockaddr_in6*, %struct.sockaddr_in6** %sinb, align 8, !dbg !8227
  %53 = getelementptr inbounds %struct.sockaddr_in6, %struct.sockaddr_in6* %52, i32 0, i32 3, !dbg !8227
  store %struct.in6_addr* %53, %struct.in6_addr** %__b, align 8, !dbg !8227
  %54 = load %struct.in6_addr*, %struct.in6_addr** %__a, align 8, !dbg !8227
  %55 = getelementptr inbounds %struct.in6_addr, %struct.in6_addr* %54, i32 0, i32 0, !dbg !8227
  %56 = bitcast %union.anon.1* %55 to [4 x i32]*, !dbg !8227
  %57 = getelementptr inbounds [4 x i32], [4 x i32]* %56, i64 0, i64 0, !dbg !8227
  %58 = load i32, i32* %57, align 4, !dbg !8227
  %59 = load %struct.in6_addr*, %struct.in6_addr** %__b, align 8, !dbg !8227
  %60 = getelementptr inbounds %struct.in6_addr, %struct.in6_addr* %59, i32 0, i32 0, !dbg !8227
  %61 = bitcast %union.anon.1* %60 to [4 x i32]*, !dbg !8227
  %62 = getelementptr inbounds [4 x i32], [4 x i32]* %61, i64 0, i64 0, !dbg !8227
  %63 = load i32, i32* %62, align 4, !dbg !8227
  %64 = icmp eq i32 %58, %63, !dbg !8227
  br i1 %64, label %65, label %101, !dbg !8227

; <label>:65                                      ; preds = %43
  %66 = load %struct.in6_addr*, %struct.in6_addr** %__a, align 8, !dbg !8229
  %67 = getelementptr inbounds %struct.in6_addr, %struct.in6_addr* %66, i32 0, i32 0, !dbg !8229
  %68 = bitcast %union.anon.1* %67 to [4 x i32]*, !dbg !8229
  %69 = getelementptr inbounds [4 x i32], [4 x i32]* %68, i64 0, i64 1, !dbg !8229
  %70 = load i32, i32* %69, align 4, !dbg !8229
  %71 = load %struct.in6_addr*, %struct.in6_addr** %__b, align 8, !dbg !8229
  %72 = getelementptr inbounds %struct.in6_addr, %struct.in6_addr* %71, i32 0, i32 0, !dbg !8229
  %73 = bitcast %union.anon.1* %72 to [4 x i32]*, !dbg !8229
  %74 = getelementptr inbounds [4 x i32], [4 x i32]* %73, i64 0, i64 1, !dbg !8229
  %75 = load i32, i32* %74, align 4, !dbg !8229
  %76 = icmp eq i32 %70, %75, !dbg !8229
  br i1 %76, label %77, label %101, !dbg !8229

; <label>:77                                      ; preds = %65
  %78 = load %struct.in6_addr*, %struct.in6_addr** %__a, align 8, !dbg !8231
  %79 = getelementptr inbounds %struct.in6_addr, %struct.in6_addr* %78, i32 0, i32 0, !dbg !8231
  %80 = bitcast %union.anon.1* %79 to [4 x i32]*, !dbg !8231
  %81 = getelementptr inbounds [4 x i32], [4 x i32]* %80, i64 0, i64 2, !dbg !8231
  %82 = load i32, i32* %81, align 4, !dbg !8231
  %83 = load %struct.in6_addr*, %struct.in6_addr** %__b, align 8, !dbg !8231
  %84 = getelementptr inbounds %struct.in6_addr, %struct.in6_addr* %83, i32 0, i32 0, !dbg !8231
  %85 = bitcast %union.anon.1* %84 to [4 x i32]*, !dbg !8231
  %86 = getelementptr inbounds [4 x i32], [4 x i32]* %85, i64 0, i64 2, !dbg !8231
  %87 = load i32, i32* %86, align 4, !dbg !8231
  %88 = icmp eq i32 %82, %87, !dbg !8231
  br i1 %88, label %89, label %101, !dbg !8231

; <label>:89                                      ; preds = %77
  %90 = load %struct.in6_addr*, %struct.in6_addr** %__a, align 8, !dbg !8233
  %91 = getelementptr inbounds %struct.in6_addr, %struct.in6_addr* %90, i32 0, i32 0, !dbg !8233
  %92 = bitcast %union.anon.1* %91 to [4 x i32]*, !dbg !8233
  %93 = getelementptr inbounds [4 x i32], [4 x i32]* %92, i64 0, i64 3, !dbg !8233
  %94 = load i32, i32* %93, align 4, !dbg !8233
  %95 = load %struct.in6_addr*, %struct.in6_addr** %__b, align 8, !dbg !8233
  %96 = getelementptr inbounds %struct.in6_addr, %struct.in6_addr* %95, i32 0, i32 0, !dbg !8233
  %97 = bitcast %union.anon.1* %96 to [4 x i32]*, !dbg !8233
  %98 = getelementptr inbounds [4 x i32], [4 x i32]* %97, i64 0, i64 3, !dbg !8233
  %99 = load i32, i32* %98, align 4, !dbg !8233
  %100 = icmp eq i32 %94, %99, !dbg !8233
  br label %101

; <label>:101                                     ; preds = %89, %77, %65, %43
  %102 = phi i1 [ false, %77 ], [ false, %65 ], [ false, %43 ], [ %100, %89 ]
  %103 = zext i1 %102 to i32, !dbg !8235
  store i32 %103, i32* %3, align 4, !dbg !8235
  %104 = load i32, i32* %3, align 4, !dbg !8235
  %105 = icmp ne i32 %104, 0, !dbg !8235
  br i1 %105, label %106, label %122, !dbg !8237

; <label>:106                                     ; preds = %101
  %107 = load %struct.sockaddr_in6*, %struct.sockaddr_in6** %sina, align 8, !dbg !8238
  %108 = getelementptr inbounds %struct.sockaddr_in6, %struct.sockaddr_in6* %107, i32 0, i32 1, !dbg !8240
  %109 = load i16, i16* %108, align 2, !dbg !8240
  %110 = zext i16 %109 to i32, !dbg !8238
  %111 = load %struct.sockaddr_in6*, %struct.sockaddr_in6** %sinb, align 8, !dbg !8241
  %112 = getelementptr inbounds %struct.sockaddr_in6, %struct.sockaddr_in6* %111, i32 0, i32 1, !dbg !8242
  %113 = load i16, i16* %112, align 2, !dbg !8242
  %114 = zext i16 %113 to i32, !dbg !8241
  %115 = icmp eq i32 %110, %114, !dbg !8243
  br i1 %115, label %116, label %122, !dbg !8244

; <label>:116                                     ; preds = %106
  %117 = load i32, i32* %2, align 4, !dbg !8246
  %118 = load %struct.fwd*, %struct.fwd** %fwd, align 8, !dbg !8248
  %119 = getelementptr inbounds %struct.fwd, %struct.fwd* %118, i32 0, i32 5, !dbg !8249
  %120 = load i32, i32* %119, align 8, !dbg !8250
  %121 = add nsw i32 %120, %117, !dbg !8250
  store i32 %121, i32* %119, align 8, !dbg !8250
  br label %167, !dbg !8251

; <label>:122                                     ; preds = %106, %101
  br label %123, !dbg !8252

; <label>:123                                     ; preds = %122, %37
  %124 = load %struct.sockaddr*, %struct.sockaddr** %1, align 8, !dbg !8253
  %125 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %124, i32 0, i32 0, !dbg !8255
  %126 = load i16, i16* %125, align 2, !dbg !8255
  %127 = zext i16 %126 to i32, !dbg !8253
  %128 = icmp eq i32 %127, 2, !dbg !8256
  br i1 %128, label %129, label %162, !dbg !8257

; <label>:129                                     ; preds = %123
  call void @llvm.dbg.declare(metadata %struct.sockaddr_in** %sina1, metadata !8258, metadata !2279), !dbg !8260
  call void @llvm.dbg.declare(metadata %struct.sockaddr_in** %sinb2, metadata !8261, metadata !2279), !dbg !8262
  %130 = load %struct.fwd*, %struct.fwd** %fwd, align 8, !dbg !8263
  %131 = getelementptr inbounds %struct.fwd, %struct.fwd* %130, i32 0, i32 2, !dbg !8264
  %132 = load %struct.sockaddr*, %struct.sockaddr** %131, align 8, !dbg !8264
  %133 = bitcast %struct.sockaddr* %132 to %struct.sockaddr_in*, !dbg !8265
  store %struct.sockaddr_in* %133, %struct.sockaddr_in** %sina1, align 8, !dbg !8266
  %134 = load %struct.sockaddr*, %struct.sockaddr** %1, align 8, !dbg !8267
  %135 = bitcast %struct.sockaddr* %134 to %struct.sockaddr_in*, !dbg !8268
  store %struct.sockaddr_in* %135, %struct.sockaddr_in** %sinb2, align 8, !dbg !8269
  %136 = load %struct.sockaddr_in*, %struct.sockaddr_in** %sina1, align 8, !dbg !8270
  %137 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %136, i32 0, i32 2, !dbg !8272
  %138 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %137, i32 0, i32 0, !dbg !8273
  %139 = load i32, i32* %138, align 4, !dbg !8273
  %140 = load %struct.sockaddr_in*, %struct.sockaddr_in** %sinb2, align 8, !dbg !8274
  %141 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %140, i32 0, i32 2, !dbg !8275
  %142 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %141, i32 0, i32 0, !dbg !8276
  %143 = load i32, i32* %142, align 4, !dbg !8276
  %144 = icmp eq i32 %139, %143, !dbg !8277
  br i1 %144, label %145, label %161, !dbg !8278

; <label>:145                                     ; preds = %129
  %146 = load %struct.sockaddr_in*, %struct.sockaddr_in** %sina1, align 8, !dbg !8279
  %147 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %146, i32 0, i32 1, !dbg !8280
  %148 = load i16, i16* %147, align 2, !dbg !8280
  %149 = zext i16 %148 to i32, !dbg !8279
  %150 = load %struct.sockaddr_in*, %struct.sockaddr_in** %sinb2, align 8, !dbg !8281
  %151 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %150, i32 0, i32 1, !dbg !8282
  %152 = load i16, i16* %151, align 2, !dbg !8282
  %153 = zext i16 %152 to i32, !dbg !8281
  %154 = icmp eq i32 %149, %153, !dbg !8283
  br i1 %154, label %155, label %161, !dbg !8284

; <label>:155                                     ; preds = %145
  %156 = load i32, i32* %2, align 4, !dbg !8286
  %157 = load %struct.fwd*, %struct.fwd** %fwd, align 8, !dbg !8288
  %158 = getelementptr inbounds %struct.fwd, %struct.fwd* %157, i32 0, i32 5, !dbg !8289
  %159 = load i32, i32* %158, align 8, !dbg !8290
  %160 = add nsw i32 %159, %156, !dbg !8290
  store i32 %160, i32* %158, align 8, !dbg !8290
  br label %167, !dbg !8291

; <label>:161                                     ; preds = %145, %129
  br label %162, !dbg !8292

; <label>:162                                     ; preds = %161, %123
  br label %163, !dbg !8293

; <label>:163                                     ; preds = %162, %36
  %164 = load %struct.generic_list*, %struct.generic_list** %gl, align 8, !dbg !8294
  %165 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %164, i32 0, i32 0, !dbg !8296
  %166 = load %struct.generic_list*, %struct.generic_list** %165, align 8, !dbg !8296
  store %struct.generic_list* %166, %struct.generic_list** %gl, align 8, !dbg !8297
  br label %15, !dbg !8298

; <label>:167                                     ; preds = %155, %116, %15
  %168 = load %struct.fwd*, %struct.fwd** %fwd, align 8, !dbg !8299
  %169 = icmp ne %struct.fwd* %168, null, !dbg !8299
  br i1 %169, label %171, label %170, !dbg !8301

; <label>:170                                     ; preds = %167
  br label %286, !dbg !8302

; <label>:171                                     ; preds = %167
  %172 = load %struct.fwd*, %struct.fwd** %fwd, align 8, !dbg !8303
  %173 = getelementptr inbounds %struct.fwd, %struct.fwd* %172, i32 0, i32 5, !dbg !8305
  %174 = load i32, i32* %173, align 8, !dbg !8305
  %175 = icmp slt i32 %174, 0, !dbg !8306
  br i1 %175, label %176, label %179, !dbg !8307

; <label>:176                                     ; preds = %171
  %177 = load %struct.fwd*, %struct.fwd** %fwd, align 8, !dbg !8308
  %178 = getelementptr inbounds %struct.fwd, %struct.fwd* %177, i32 0, i32 5, !dbg !8309
  store i32 0, i32* %178, align 8, !dbg !8310
  br label %179, !dbg !8308

; <label>:179                                     ; preds = %176, %171
  %180 = load %struct.generic_list*, %struct.generic_list** %gl, align 8, !dbg !8311
  %181 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %180, i32 0, i32 2, !dbg !8313
  %182 = load i8*, i8** %181, align 8, !dbg !8313
  %183 = icmp ne i8* %182, null, !dbg !8311
  br i1 %183, label %184, label %191, !dbg !8314

; <label>:184                                     ; preds = %179
  %185 = load %struct.fwd*, %struct.fwd** %fwd, align 8, !dbg !8315
  %186 = getelementptr inbounds %struct.fwd, %struct.fwd* %185, i32 0, i32 5, !dbg !8316
  %187 = load i32, i32* %186, align 8, !dbg !8316
  %188 = load %struct.sockaddr*, %struct.sockaddr** %1, align 8, !dbg !8317
  %189 = getelementptr inbounds [256 x i8], [256 x i8]* %astr, i32 0, i32 0, !dbg !8318
  %190 = call i8* @sprint_inet(%struct.sockaddr* %188, i8* %189), !dbg !8319
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.17.210, i32 0, i32 0), i32 %187, i8* %190), !dbg !8320
  br label %191, !dbg !8320

; <label>:191                                     ; preds = %184, %179
  %192 = load %struct.fwd*, %struct.fwd** %fwd, align 8, !dbg !8321
  %193 = getelementptr inbounds %struct.fwd, %struct.fwd* %192, i32 0, i32 5, !dbg !8323
  %194 = load i32, i32* %193, align 8, !dbg !8323
  %195 = icmp slt i32 %194, 3, !dbg !8324
  br i1 %195, label %196, label %197, !dbg !8325

; <label>:196                                     ; preds = %191
  br label %286, !dbg !8326

; <label>:197                                     ; preds = %191
  %198 = call i64 @time(i64* null) #10, !dbg !8327
  %199 = load %struct.fwd*, %struct.fwd** %fwd, align 8, !dbg !8328
  %200 = getelementptr inbounds %struct.fwd, %struct.fwd* %199, i32 0, i32 4, !dbg !8329
  store i64 %198, i64* %200, align 8, !dbg !8330
  br label %201

; <label>:201                                     ; preds = %197
  %202 = load %struct.generic_list*, %struct.generic_list** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 22), align 8, !dbg !8331
  %203 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %202, i32 0, i32 2, !dbg !8333
  %204 = load i8*, i8** %203, align 8, !dbg !8333
  %205 = bitcast i8* %204 to %struct.fwd*, !dbg !8334
  %206 = getelementptr inbounds %struct.fwd, %struct.fwd* %205, i32 0, i32 4, !dbg !8335
  %207 = load i64, i64* %206, align 8, !dbg !8335
  %208 = icmp ne i64 %207, 0, !dbg !8336
  br i1 %208, label %209, label %286, !dbg !8337

; <label>:209                                     ; preds = %201
  call void @llvm.dbg.declare(metadata %struct.generic_list** %new_fwd, metadata !8338, metadata !2279), !dbg !8340
  call void @llvm.dbg.declare(metadata %struct.fwd** %fwd_tmp, metadata !8341, metadata !2279), !dbg !8342
  %210 = load %struct.generic_list*, %struct.generic_list** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 22), align 8, !dbg !8343
  %211 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %210, i32 0, i32 0, !dbg !8344
  %212 = load %struct.generic_list*, %struct.generic_list** %211, align 8, !dbg !8344
  store %struct.generic_list* %212, %struct.generic_list** %new_fwd, align 8, !dbg !8345
  %213 = load %struct.generic_list*, %struct.generic_list** %new_fwd, align 8, !dbg !8346
  %214 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %213, i32 0, i32 2, !dbg !8347
  %215 = load i8*, i8** %214, align 8, !dbg !8347
  %216 = bitcast i8* %215 to %struct.fwd*, !dbg !8348
  store %struct.fwd* %216, %struct.fwd** %fwd_tmp, align 8, !dbg !8349
  br label %217, !dbg !8350

; <label>:217                                     ; preds = %231, %209
  %218 = load %struct.fwd*, %struct.fwd** %fwd_tmp, align 8, !dbg !8351
  %219 = icmp ne %struct.fwd* %218, null, !dbg !8353
  br i1 %219, label %220, label %239, !dbg !8353

; <label>:220                                     ; preds = %217
  %221 = load %struct.fwd*, %struct.fwd** %fwd_tmp, align 8, !dbg !8354
  %222 = getelementptr inbounds %struct.fwd, %struct.fwd* %221, i32 0, i32 2, !dbg !8357
  %223 = load %struct.sockaddr*, %struct.sockaddr** %222, align 8, !dbg !8357
  %224 = icmp ne %struct.sockaddr* %223, null, !dbg !8354
  br i1 %224, label %225, label %231, !dbg !8358

; <label>:225                                     ; preds = %220
  %226 = load %struct.fwd*, %struct.fwd** %fwd_tmp, align 8, !dbg !8359
  %227 = getelementptr inbounds %struct.fwd, %struct.fwd* %226, i32 0, i32 4, !dbg !8361
  %228 = load i64, i64* %227, align 8, !dbg !8361
  %229 = icmp ne i64 %228, 0, !dbg !8359
  br i1 %229, label %231, label %230, !dbg !8362

; <label>:230                                     ; preds = %225
  br label %239, !dbg !8363

; <label>:231                                     ; preds = %225, %220
  %232 = load %struct.generic_list*, %struct.generic_list** %new_fwd, align 8, !dbg !8364
  %233 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %232, i32 0, i32 0, !dbg !8365
  %234 = load %struct.generic_list*, %struct.generic_list** %233, align 8, !dbg !8365
  store %struct.generic_list* %234, %struct.generic_list** %new_fwd, align 8, !dbg !8366
  %235 = load %struct.generic_list*, %struct.generic_list** %new_fwd, align 8, !dbg !8367
  %236 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %235, i32 0, i32 2, !dbg !8368
  %237 = load i8*, i8** %236, align 8, !dbg !8368
  %238 = bitcast i8* %237 to %struct.fwd*, !dbg !8369
  store %struct.fwd* %238, %struct.fwd** %fwd_tmp, align 8, !dbg !8370
  br label %217, !dbg !8371

; <label>:239                                     ; preds = %230, %217
  %240 = load %struct.fwd*, %struct.fwd** %fwd_tmp, align 8, !dbg !8373
  %241 = icmp ne %struct.fwd* %240, null, !dbg !8373
  br i1 %241, label %242, label %247, !dbg !8375

; <label>:242                                     ; preds = %239
  %243 = load %struct.fwd*, %struct.fwd** %fwd_tmp, align 8, !dbg !8376
  %244 = getelementptr inbounds %struct.fwd, %struct.fwd* %243, i32 0, i32 2, !dbg !8378
  %245 = load %struct.sockaddr*, %struct.sockaddr** %244, align 8, !dbg !8378
  %246 = icmp ne %struct.sockaddr* %245, null, !dbg !8376
  br i1 %246, label %271, label %247, !dbg !8379

; <label>:247                                     ; preds = %242, %239
  %248 = load %struct.generic_list*, %struct.generic_list** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 21), align 8, !dbg !8380
  %249 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %248, i32 0, i32 0, !dbg !8382
  %250 = load %struct.generic_list*, %struct.generic_list** %249, align 8, !dbg !8382
  store %struct.generic_list* %250, %struct.generic_list** %new_fwd, align 8, !dbg !8383
  %251 = load %struct.generic_list*, %struct.generic_list** %new_fwd, align 8, !dbg !8384
  %252 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %251, i32 0, i32 2, !dbg !8385
  %253 = load i8*, i8** %252, align 8, !dbg !8385
  %254 = bitcast i8* %253 to %struct.fwd*, !dbg !8386
  store %struct.fwd* %254, %struct.fwd** %fwd_tmp, align 8, !dbg !8387
  br label %255, !dbg !8388

; <label>:255                                     ; preds = %258, %247
  %256 = load %struct.fwd*, %struct.fwd** %fwd_tmp, align 8, !dbg !8389
  %257 = icmp ne %struct.fwd* %256, null, !dbg !8391
  br i1 %257, label %258, label %270, !dbg !8391

; <label>:258                                     ; preds = %255
  %259 = load %struct.fwd*, %struct.fwd** %fwd_tmp, align 8, !dbg !8392
  %260 = getelementptr inbounds %struct.fwd, %struct.fwd* %259, i32 0, i32 5, !dbg !8394
  store i32 0, i32* %260, align 8, !dbg !8395
  %261 = load %struct.fwd*, %struct.fwd** %fwd_tmp, align 8, !dbg !8396
  %262 = getelementptr inbounds %struct.fwd, %struct.fwd* %261, i32 0, i32 4, !dbg !8397
  store i64 0, i64* %262, align 8, !dbg !8398
  %263 = load %struct.generic_list*, %struct.generic_list** %new_fwd, align 8, !dbg !8399
  %264 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %263, i32 0, i32 0, !dbg !8400
  %265 = load %struct.generic_list*, %struct.generic_list** %264, align 8, !dbg !8400
  store %struct.generic_list* %265, %struct.generic_list** %new_fwd, align 8, !dbg !8401
  %266 = load %struct.generic_list*, %struct.generic_list** %new_fwd, align 8, !dbg !8402
  %267 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %266, i32 0, i32 2, !dbg !8403
  %268 = load i8*, i8** %267, align 8, !dbg !8403
  %269 = bitcast i8* %268 to %struct.fwd*, !dbg !8404
  store %struct.fwd* %269, %struct.fwd** %fwd_tmp, align 8, !dbg !8405
  br label %255, !dbg !8406

; <label>:270                                     ; preds = %255
  br label %286, !dbg !8408

; <label>:271                                     ; preds = %242
  %272 = load %struct.generic_list*, %struct.generic_list** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 22), align 8, !dbg !8409
  %273 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %272, i32 0, i32 2, !dbg !8410
  %274 = load i8*, i8** %273, align 8, !dbg !8410
  %275 = bitcast i8* %274 to %struct.fwd*, !dbg !8411
  %276 = getelementptr inbounds %struct.fwd, %struct.fwd* %275, i32 0, i32 2, !dbg !8412
  %277 = load %struct.sockaddr*, %struct.sockaddr** %276, align 8, !dbg !8412
  %278 = getelementptr inbounds [256 x i8], [256 x i8]* %astr, i32 0, i32 0, !dbg !8413
  %279 = call i8* @sprint_inet(%struct.sockaddr* %277, i8* %278), !dbg !8414
  %280 = load %struct.fwd*, %struct.fwd** %fwd_tmp, align 8, !dbg !8415
  %281 = getelementptr inbounds %struct.fwd, %struct.fwd* %280, i32 0, i32 2, !dbg !8416
  %282 = load %struct.sockaddr*, %struct.sockaddr** %281, align 8, !dbg !8416
  %283 = getelementptr inbounds [256 x i8], [256 x i8]* %bstr, i32 0, i32 0, !dbg !8417
  %284 = call i8* @sprint_inet(%struct.sockaddr* %282, i8* %283), !dbg !8418
  call void (i32, i8*, ...) @syslog(i32 5, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.18.211, i32 0, i32 0), i8* %279, i8* %284), !dbg !8419
  %285 = load %struct.generic_list*, %struct.generic_list** %new_fwd, align 8, !dbg !8420
  store %struct.generic_list* %285, %struct.generic_list** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 22), align 8, !dbg !8421
  br label %286, !dbg !8422

; <label>:286                                     ; preds = %10, %170, %196, %270, %271, %201
  ret void, !dbg !8423
}

; Function Attrs: nounwind uwtable
define %struct.generic_list* @fwd_socketlist() #0 !dbg !934 {
  %1 = alloca %struct.generic_list*, align 8
  %fn = alloca i8*, align 8
  %socklist = alloca %struct.generic_list*, align 8
  %gl = alloca %struct.generic_list*, align 8
  %fwd = alloca %struct.fwd*, align 8
  %sa = alloca %struct.sockaddr*, align 8
  call void @llvm.dbg.declare(metadata i8** %fn, metadata !8424, metadata !2279), !dbg !8425
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.19.214, i32 0, i32 0), i8** %fn, align 8, !dbg !8425
  call void @llvm.dbg.declare(metadata %struct.generic_list** %socklist, metadata !8426, metadata !2279), !dbg !8427
  call void @llvm.dbg.declare(metadata %struct.generic_list** %gl, metadata !8428, metadata !2279), !dbg !8429
  call void @llvm.dbg.declare(metadata %struct.fwd** %fwd, metadata !8430, metadata !2279), !dbg !8431
  %2 = load i8*, i8** %fn, align 8, !dbg !8432
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.10.201, i32 0, i32 0), i8* %2), !dbg !8433
  %3 = load %struct.generic_list*, %struct.generic_list** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 21), align 8, !dbg !8434
  %4 = icmp ne %struct.generic_list* %3, null, !dbg !8436
  br i1 %4, label %5, label %8, !dbg !8437

; <label>:5                                       ; preds = %0
  %6 = load %struct.generic_list*, %struct.generic_list** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 22), align 8, !dbg !8438
  %7 = icmp ne %struct.generic_list* %6, null, !dbg !8440
  br i1 %7, label %9, label %8, !dbg !8441

; <label>:8                                       ; preds = %5, %0
  store %struct.generic_list* null, %struct.generic_list** %1, align 8, !dbg !8442
  br label %81, !dbg !8442

; <label>:9                                       ; preds = %5
  %10 = call %struct.generic_list* @list_init(), !dbg !8443
  store %struct.generic_list* %10, %struct.generic_list** %socklist, align 8, !dbg !8444
  %11 = load %struct.generic_list*, %struct.generic_list** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 22), align 8, !dbg !8445
  store %struct.generic_list* %11, %struct.generic_list** %gl, align 8, !dbg !8447
  br label %12, !dbg !8448

; <label>:12                                      ; preds = %75, %9
  %13 = load %struct.generic_list*, %struct.generic_list** %gl, align 8, !dbg !8449
  %14 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %13, i32 0, i32 0, !dbg !8452
  %15 = load %struct.generic_list*, %struct.generic_list** %14, align 8, !dbg !8452
  %16 = load %struct.generic_list*, %struct.generic_list** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 22), align 8, !dbg !8453
  %17 = icmp ne %struct.generic_list* %15, %16, !dbg !8454
  br i1 %17, label %18, label %79, !dbg !8455

; <label>:18                                      ; preds = %12
  %19 = load %struct.generic_list*, %struct.generic_list** %gl, align 8, !dbg !8456
  %20 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %19, i32 0, i32 2, !dbg !8459
  %21 = load i8*, i8** %20, align 8, !dbg !8459
  %22 = icmp ne i8* %21, null, !dbg !8456
  br i1 %22, label %24, label %23, !dbg !8460

; <label>:23                                      ; preds = %18
  br label %75, !dbg !8461

; <label>:24                                      ; preds = %18
  %25 = load %struct.generic_list*, %struct.generic_list** %gl, align 8, !dbg !8462
  %26 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %25, i32 0, i32 2, !dbg !8463
  %27 = load i8*, i8** %26, align 8, !dbg !8463
  %28 = bitcast i8* %27 to %struct.fwd*, !dbg !8464
  store %struct.fwd* %28, %struct.fwd** %fwd, align 8, !dbg !8465
  %29 = load %struct.fwd*, %struct.fwd** %fwd, align 8, !dbg !8466
  %30 = getelementptr inbounds %struct.fwd, %struct.fwd* %29, i32 0, i32 2, !dbg !8468
  %31 = load %struct.sockaddr*, %struct.sockaddr** %30, align 8, !dbg !8468
  %32 = icmp ne %struct.sockaddr* %31, null, !dbg !8466
  br i1 %32, label %33, label %74, !dbg !8469

; <label>:33                                      ; preds = %24
  %34 = load %struct.fwd*, %struct.fwd** %fwd, align 8, !dbg !8470
  %35 = getelementptr inbounds %struct.fwd, %struct.fwd* %34, i32 0, i32 4, !dbg !8472
  %36 = load i64, i64* %35, align 8, !dbg !8472
  %37 = icmp ne i64 %36, 0, !dbg !8470
  br i1 %37, label %74, label %38, !dbg !8473

; <label>:38                                      ; preds = %33
  call void @llvm.dbg.declare(metadata %struct.sockaddr** %sa, metadata !8474, metadata !2279), !dbg !8476
  %39 = call noalias i8* @malloc(i64 128) #10, !dbg !8477
  %40 = bitcast i8* %39 to %struct.sockaddr*, !dbg !8477
  store %struct.sockaddr* %40, %struct.sockaddr** %sa, align 8, !dbg !8478
  %41 = load %struct.sockaddr*, %struct.sockaddr** %sa, align 8, !dbg !8479
  %42 = icmp ne %struct.sockaddr* %41, null, !dbg !8479
  br i1 %42, label %44, label %43, !dbg !8481

; <label>:43                                      ; preds = %38
  store %struct.generic_list* null, %struct.generic_list** %1, align 8, !dbg !8482
  br label %81, !dbg !8482

; <label>:44                                      ; preds = %38
  %45 = load %struct.sockaddr*, %struct.sockaddr** %sa, align 8, !dbg !8483
  %46 = bitcast %struct.sockaddr* %45 to i8*, !dbg !8484
  %47 = load %struct.fwd*, %struct.fwd** %fwd, align 8, !dbg !8485
  %48 = getelementptr inbounds %struct.fwd, %struct.fwd* %47, i32 0, i32 2, !dbg !8486
  %49 = load %struct.sockaddr*, %struct.sockaddr** %48, align 8, !dbg !8486
  %50 = bitcast %struct.sockaddr* %49 to i8*, !dbg !8484
  %51 = load %struct.fwd*, %struct.fwd** %fwd, align 8, !dbg !8487
  %52 = getelementptr inbounds %struct.fwd, %struct.fwd* %51, i32 0, i32 2, !dbg !8487
  %53 = load %struct.sockaddr*, %struct.sockaddr** %52, align 8, !dbg !8487
  %54 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %53, i32 0, i32 0, !dbg !8487
  %55 = load i16, i16* %54, align 2, !dbg !8487
  %56 = zext i16 %55 to i32, !dbg !8487
  %57 = icmp eq i32 %56, 10, !dbg !8487
  br i1 %57, label %58, label %59, !dbg !8487

; <label>:58                                      ; preds = %44
  br label %68, !dbg !8488

; <label>:59                                      ; preds = %44
  %60 = load %struct.fwd*, %struct.fwd** %fwd, align 8, !dbg !8490
  %61 = getelementptr inbounds %struct.fwd, %struct.fwd* %60, i32 0, i32 2, !dbg !8490
  %62 = load %struct.sockaddr*, %struct.sockaddr** %61, align 8, !dbg !8490
  %63 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %62, i32 0, i32 0, !dbg !8490
  %64 = load i16, i16* %63, align 2, !dbg !8490
  %65 = zext i16 %64 to i32, !dbg !8490
  %66 = icmp eq i32 %65, 2, !dbg !8490
  %67 = select i1 %66, i64 16, i64 16, !dbg !8490
  br label %68, !dbg !8490

; <label>:68                                      ; preds = %59, %58
  %69 = phi i64 [ 28, %58 ], [ %67, %59 ], !dbg !8492
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %46, i8* %50, i64 %69, i32 2, i1 false), !dbg !8494
  %70 = load %struct.generic_list*, %struct.generic_list** %socklist, align 8, !dbg !8495
  %71 = load %struct.sockaddr*, %struct.sockaddr** %sa, align 8, !dbg !8496
  %72 = bitcast %struct.sockaddr* %71 to i8*, !dbg !8496
  %73 = call i32 @list_add_tail(%struct.generic_list* %70, i8* %72), !dbg !8497
  br label %74, !dbg !8498

; <label>:74                                      ; preds = %68, %33, %24
  br label %75, !dbg !8499

; <label>:75                                      ; preds = %74, %23
  %76 = load %struct.generic_list*, %struct.generic_list** %gl, align 8, !dbg !8500
  %77 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %76, i32 0, i32 0, !dbg !8502
  %78 = load %struct.generic_list*, %struct.generic_list** %77, align 8, !dbg !8502
  store %struct.generic_list* %78, %struct.generic_list** %gl, align 8, !dbg !8503
  br label %12, !dbg !8504

; <label>:79                                      ; preds = %12
  %80 = load %struct.generic_list*, %struct.generic_list** %socklist, align 8, !dbg !8505
  store %struct.generic_list* %80, %struct.generic_list** %1, align 8, !dbg !8506
  br label %81, !dbg !8506

; <label>:81                                      ; preds = %79, %43, %8
  %82 = load %struct.generic_list*, %struct.generic_list** %1, align 8, !dbg !8507
  ret %struct.generic_list* %82, !dbg !8507
}

; Function Attrs: nounwind uwtable
define %struct.qset* @queue_create() #0 !dbg !941 {
  %1 = alloca %struct.qset*, align 8
  %fn = alloca i8*, align 8
  %qs_tmp = alloca %struct.qset*, align 8
  call void @llvm.dbg.declare(metadata i8** %fn, metadata !8508, metadata !2279), !dbg !8509
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.215, i32 0, i32 0), i8** %fn, align 8, !dbg !8509
  call void @llvm.dbg.declare(metadata %struct.qset** %qs_tmp, metadata !8510, metadata !2279), !dbg !8511
  %2 = call noalias i8* @malloc(i64 16) #10, !dbg !8512
  %3 = bitcast i8* %2 to %struct.qset*, !dbg !8512
  store %struct.qset* %3, %struct.qset** %qs_tmp, align 8, !dbg !8513
  %4 = load %struct.qset*, %struct.qset** %qs_tmp, align 8, !dbg !8514
  %5 = icmp ne %struct.qset* %4, null, !dbg !8514
  br i1 %5, label %8, label %6, !dbg !8516

; <label>:6                                       ; preds = %0
  %7 = load i8*, i8** %fn, align 8, !dbg !8517
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1.216, i32 0, i32 0), i8* %7), !dbg !8518
  br label %31, !dbg !8518

; <label>:8                                       ; preds = %0
  %9 = call noalias i8* @malloc(i64 16) #10, !dbg !8519
  %10 = bitcast i8* %9 to %struct.gqueue*, !dbg !8519
  %11 = load %struct.qset*, %struct.qset** %qs_tmp, align 8, !dbg !8521
  %12 = getelementptr inbounds %struct.qset, %struct.qset* %11, i32 0, i32 1, !dbg !8522
  store %struct.gqueue* %10, %struct.gqueue** %12, align 8, !dbg !8523
  %13 = load %struct.qset*, %struct.qset** %qs_tmp, align 8, !dbg !8524
  %14 = getelementptr inbounds %struct.qset, %struct.qset* %13, i32 0, i32 0, !dbg !8525
  store %struct.gqueue* %10, %struct.gqueue** %14, align 8, !dbg !8526
  %15 = icmp ne %struct.gqueue* %10, null, !dbg !8526
  br i1 %15, label %20, label %16, !dbg !8527

; <label>:16                                      ; preds = %8
  %17 = load i8*, i8** %fn, align 8, !dbg !8528
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1.216, i32 0, i32 0), i8* %17), !dbg !8530
  %18 = load %struct.qset*, %struct.qset** %qs_tmp, align 8, !dbg !8531
  %19 = bitcast %struct.qset* %18 to i8*, !dbg !8531
  call void @free(i8* %19) #10, !dbg !8532
  br label %30, !dbg !8533

; <label>:20                                      ; preds = %8
  %21 = load %struct.qset*, %struct.qset** %qs_tmp, align 8, !dbg !8534
  %22 = getelementptr inbounds %struct.qset, %struct.qset* %21, i32 0, i32 0, !dbg !8536
  %23 = load %struct.gqueue*, %struct.gqueue** %22, align 8, !dbg !8536
  %24 = getelementptr inbounds %struct.gqueue, %struct.gqueue* %23, i32 0, i32 0, !dbg !8537
  store %struct.gqueue* null, %struct.gqueue** %24, align 8, !dbg !8538
  %25 = load %struct.qset*, %struct.qset** %qs_tmp, align 8, !dbg !8539
  %26 = getelementptr inbounds %struct.qset, %struct.qset* %25, i32 0, i32 0, !dbg !8540
  %27 = load %struct.gqueue*, %struct.gqueue** %26, align 8, !dbg !8540
  %28 = getelementptr inbounds %struct.gqueue, %struct.gqueue* %27, i32 0, i32 1, !dbg !8541
  store i8* null, i8** %28, align 8, !dbg !8542
  %29 = load %struct.qset*, %struct.qset** %qs_tmp, align 8, !dbg !8543
  store %struct.qset* %29, %struct.qset** %1, align 8, !dbg !8544
  br label %32, !dbg !8544

; <label>:30                                      ; preds = %16
  br label %31

; <label>:31                                      ; preds = %30, %6
  store %struct.qset* null, %struct.qset** %1, align 8, !dbg !8545
  br label %32, !dbg !8545

; <label>:32                                      ; preds = %31, %20
  %33 = load %struct.qset*, %struct.qset** %1, align 8, !dbg !8546
  ret %struct.qset* %33, !dbg !8546
}

; Function Attrs: nounwind uwtable
define i32 @enqueue(%struct.qset* %qs, i8* %p) #0 !dbg !955 {
  %1 = alloca i32, align 4
  %2 = alloca %struct.qset*, align 8
  %3 = alloca i8*, align 8
  %fn = alloca i8*, align 8
  %gq_tmp = alloca %struct.gqueue*, align 8
  store %struct.qset* %qs, %struct.qset** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.qset** %2, metadata !8547, metadata !2279), !dbg !8548
  store i8* %p, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !8549, metadata !2279), !dbg !8550
  call void @llvm.dbg.declare(metadata i8** %fn, metadata !8551, metadata !2279), !dbg !8552
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2.217, i32 0, i32 0), i8** %fn, align 8, !dbg !8552
  call void @llvm.dbg.declare(metadata %struct.gqueue** %gq_tmp, metadata !8553, metadata !2279), !dbg !8554
  %4 = call noalias i8* @malloc(i64 16) #10, !dbg !8555
  %5 = bitcast i8* %4 to %struct.gqueue*, !dbg !8555
  store %struct.gqueue* %5, %struct.gqueue** %gq_tmp, align 8, !dbg !8556
  %6 = load %struct.gqueue*, %struct.gqueue** %gq_tmp, align 8, !dbg !8557
  %7 = icmp ne %struct.gqueue* %6, null, !dbg !8557
  br i1 %7, label %10, label %8, !dbg !8559

; <label>:8                                       ; preds = %0
  %9 = load i8*, i8** %fn, align 8, !dbg !8560
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1.216, i32 0, i32 0), i8* %9), !dbg !8561
  br label %28, !dbg !8561

; <label>:10                                      ; preds = %0
  %11 = load %struct.gqueue*, %struct.gqueue** %gq_tmp, align 8, !dbg !8562
  %12 = getelementptr inbounds %struct.gqueue, %struct.gqueue* %11, i32 0, i32 0, !dbg !8564
  store %struct.gqueue* null, %struct.gqueue** %12, align 8, !dbg !8565
  %13 = load %struct.gqueue*, %struct.gqueue** %gq_tmp, align 8, !dbg !8566
  %14 = getelementptr inbounds %struct.gqueue, %struct.gqueue* %13, i32 0, i32 1, !dbg !8567
  store i8* null, i8** %14, align 8, !dbg !8568
  %15 = load i8*, i8** %3, align 8, !dbg !8569
  %16 = load %struct.qset*, %struct.qset** %2, align 8, !dbg !8570
  %17 = getelementptr inbounds %struct.qset, %struct.qset* %16, i32 0, i32 1, !dbg !8571
  %18 = load %struct.gqueue*, %struct.gqueue** %17, align 8, !dbg !8571
  %19 = getelementptr inbounds %struct.gqueue, %struct.gqueue* %18, i32 0, i32 1, !dbg !8572
  store i8* %15, i8** %19, align 8, !dbg !8573
  %20 = load %struct.gqueue*, %struct.gqueue** %gq_tmp, align 8, !dbg !8574
  %21 = load %struct.qset*, %struct.qset** %2, align 8, !dbg !8575
  %22 = getelementptr inbounds %struct.qset, %struct.qset* %21, i32 0, i32 1, !dbg !8576
  %23 = load %struct.gqueue*, %struct.gqueue** %22, align 8, !dbg !8576
  %24 = getelementptr inbounds %struct.gqueue, %struct.gqueue* %23, i32 0, i32 0, !dbg !8577
  store %struct.gqueue* %20, %struct.gqueue** %24, align 8, !dbg !8578
  %25 = load %struct.gqueue*, %struct.gqueue** %gq_tmp, align 8, !dbg !8579
  %26 = load %struct.qset*, %struct.qset** %2, align 8, !dbg !8580
  %27 = getelementptr inbounds %struct.qset, %struct.qset* %26, i32 0, i32 1, !dbg !8581
  store %struct.gqueue* %25, %struct.gqueue** %27, align 8, !dbg !8582
  store i32 0, i32* %1, align 4, !dbg !8583
  br label %29, !dbg !8583

; <label>:28                                      ; preds = %8
  store i32 -1, i32* %1, align 4, !dbg !8584
  br label %29, !dbg !8584

; <label>:29                                      ; preds = %28, %10
  %30 = load i32, i32* %1, align 4, !dbg !8585
  ret i32 %30, !dbg !8585
}

; Function Attrs: nounwind uwtable
define i8* @dequeue(%struct.qset* %qs) #0 !dbg !958 {
  %1 = alloca i8*, align 8
  %2 = alloca %struct.qset*, align 8
  %p = alloca i8*, align 8
  %gq_tmp = alloca %struct.gqueue*, align 8
  store %struct.qset* %qs, %struct.qset** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.qset** %2, metadata !8586, metadata !2279), !dbg !8587
  call void @llvm.dbg.declare(metadata i8** %p, metadata !8588, metadata !2279), !dbg !8589
  call void @llvm.dbg.declare(metadata %struct.gqueue** %gq_tmp, metadata !8590, metadata !2279), !dbg !8591
  %3 = load %struct.qset*, %struct.qset** %2, align 8, !dbg !8592
  %4 = getelementptr inbounds %struct.qset, %struct.qset* %3, i32 0, i32 0, !dbg !8594
  %5 = load %struct.gqueue*, %struct.gqueue** %4, align 8, !dbg !8594
  %6 = getelementptr inbounds %struct.gqueue, %struct.gqueue* %5, i32 0, i32 0, !dbg !8595
  %7 = load %struct.gqueue*, %struct.gqueue** %6, align 8, !dbg !8595
  %8 = icmp ne %struct.gqueue* %7, null, !dbg !8592
  br i1 %8, label %10, label %9, !dbg !8596

; <label>:9                                       ; preds = %0
  store i8* null, i8** %1, align 8, !dbg !8597
  br label %44, !dbg !8597

; <label>:10                                      ; preds = %0
  br label %11, !dbg !8598

; <label>:11                                      ; preds = %40, %10
  %12 = load %struct.qset*, %struct.qset** %2, align 8, !dbg !8599
  %13 = getelementptr inbounds %struct.qset, %struct.qset* %12, i32 0, i32 0, !dbg !8601
  %14 = load %struct.gqueue*, %struct.gqueue** %13, align 8, !dbg !8601
  %15 = getelementptr inbounds %struct.gqueue, %struct.gqueue* %14, i32 0, i32 1, !dbg !8602
  %16 = load i8*, i8** %15, align 8, !dbg !8602
  store i8* %16, i8** %p, align 8, !dbg !8603
  %17 = load %struct.qset*, %struct.qset** %2, align 8, !dbg !8604
  %18 = getelementptr inbounds %struct.qset, %struct.qset* %17, i32 0, i32 0, !dbg !8605
  %19 = load %struct.gqueue*, %struct.gqueue** %18, align 8, !dbg !8605
  store %struct.gqueue* %19, %struct.gqueue** %gq_tmp, align 8, !dbg !8606
  %20 = load %struct.qset*, %struct.qset** %2, align 8, !dbg !8607
  %21 = getelementptr inbounds %struct.qset, %struct.qset* %20, i32 0, i32 0, !dbg !8608
  %22 = load %struct.gqueue*, %struct.gqueue** %21, align 8, !dbg !8608
  %23 = getelementptr inbounds %struct.gqueue, %struct.gqueue* %22, i32 0, i32 0, !dbg !8609
  %24 = load %struct.gqueue*, %struct.gqueue** %23, align 8, !dbg !8609
  %25 = load %struct.qset*, %struct.qset** %2, align 8, !dbg !8610
  %26 = getelementptr inbounds %struct.qset, %struct.qset* %25, i32 0, i32 0, !dbg !8611
  store %struct.gqueue* %24, %struct.gqueue** %26, align 8, !dbg !8612
  %27 = load %struct.gqueue*, %struct.gqueue** %gq_tmp, align 8, !dbg !8613
  %28 = bitcast %struct.gqueue* %27 to i8*, !dbg !8613
  call void @free(i8* %28) #10, !dbg !8614
  br label %29, !dbg !8615

; <label>:29                                      ; preds = %11
  %30 = load i8*, i8** %p, align 8, !dbg !8616
  %31 = icmp ne i8* %30, null, !dbg !8616
  br i1 %31, label %40, label %32, !dbg !8618

; <label>:32                                      ; preds = %29
  %33 = load %struct.qset*, %struct.qset** %2, align 8, !dbg !8619
  %34 = getelementptr inbounds %struct.qset, %struct.qset* %33, i32 0, i32 0, !dbg !8621
  %35 = load %struct.gqueue*, %struct.gqueue** %34, align 8, !dbg !8621
  %36 = load %struct.qset*, %struct.qset** %2, align 8, !dbg !8622
  %37 = getelementptr inbounds %struct.qset, %struct.qset* %36, i32 0, i32 1, !dbg !8623
  %38 = load %struct.gqueue*, %struct.gqueue** %37, align 8, !dbg !8623
  %39 = icmp ne %struct.gqueue* %35, %38, !dbg !8624
  br label %40

; <label>:40                                      ; preds = %32, %29
  %41 = phi i1 [ false, %29 ], [ %39, %32 ]
  br i1 %41, label %11, label %42, !dbg !8625

; <label>:42                                      ; preds = %40
  %43 = load i8*, i8** %p, align 8, !dbg !8627
  store i8* %43, i8** %1, align 8, !dbg !8628
  br label %44, !dbg !8628

; <label>:44                                      ; preds = %42, %9
  %45 = load i8*, i8** %1, align 8, !dbg !8629
  ret i8* %45, !dbg !8629
}

; Function Attrs: nounwind uwtable
define i8* @queue_peek(%struct.qset* %qs) #0 !dbg !961 {
  %1 = alloca i8*, align 8
  %2 = alloca %struct.qset*, align 8
  store %struct.qset* %qs, %struct.qset** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.qset** %2, metadata !8630, metadata !2279), !dbg !8631
  %3 = load %struct.qset*, %struct.qset** %2, align 8, !dbg !8632
  %4 = getelementptr inbounds %struct.qset, %struct.qset* %3, i32 0, i32 0, !dbg !8634
  %5 = load %struct.gqueue*, %struct.gqueue** %4, align 8, !dbg !8634
  %6 = getelementptr inbounds %struct.gqueue, %struct.gqueue* %5, i32 0, i32 0, !dbg !8635
  %7 = load %struct.gqueue*, %struct.gqueue** %6, align 8, !dbg !8635
  %8 = icmp ne %struct.gqueue* %7, null, !dbg !8632
  br i1 %8, label %10, label %9, !dbg !8636

; <label>:9                                       ; preds = %0
  store i8* null, i8** %1, align 8, !dbg !8637
  br label %16, !dbg !8637

; <label>:10                                      ; preds = %0
  %11 = load %struct.qset*, %struct.qset** %2, align 8, !dbg !8638
  %12 = getelementptr inbounds %struct.qset, %struct.qset* %11, i32 0, i32 0, !dbg !8639
  %13 = load %struct.gqueue*, %struct.gqueue** %12, align 8, !dbg !8639
  %14 = getelementptr inbounds %struct.gqueue, %struct.gqueue* %13, i32 0, i32 1, !dbg !8640
  %15 = load i8*, i8** %14, align 8, !dbg !8640
  store i8* %15, i8** %1, align 8, !dbg !8641
  br label %16, !dbg !8641

; <label>:16                                      ; preds = %10, %9
  %17 = load i8*, i8** %1, align 8, !dbg !8642
  ret i8* %17, !dbg !8642
}

; Function Attrs: nounwind uwtable
define i8* @queue_disable(%struct.gqueue* %gq) #0 !dbg !962 {
  %1 = alloca %struct.gqueue*, align 8
  %p = alloca i8*, align 8
  store %struct.gqueue* %gq, %struct.gqueue** %1, align 8
  call void @llvm.dbg.declare(metadata %struct.gqueue** %1, metadata !8643, metadata !2279), !dbg !8644
  call void @llvm.dbg.declare(metadata i8** %p, metadata !8645, metadata !2279), !dbg !8646
  %2 = load %struct.gqueue*, %struct.gqueue** %1, align 8, !dbg !8647
  %3 = getelementptr inbounds %struct.gqueue, %struct.gqueue* %2, i32 0, i32 1, !dbg !8648
  %4 = load i8*, i8** %3, align 8, !dbg !8648
  store i8* %4, i8** %p, align 8, !dbg !8649
  %5 = load %struct.gqueue*, %struct.gqueue** %1, align 8, !dbg !8650
  %6 = getelementptr inbounds %struct.gqueue, %struct.gqueue* %5, i32 0, i32 1, !dbg !8651
  store i8* null, i8** %6, align 8, !dbg !8652
  %7 = load i8*, i8** %p, align 8, !dbg !8653
  ret i8* %7, !dbg !8654
}

; Function Attrs: nounwind uwtable
define void @queue_destroy(%struct.qset* %qs, void (i8*)* %freefnc) #0 !dbg !967 {
  %1 = alloca %struct.qset*, align 8
  %2 = alloca void (i8*)*, align 8
  %p = alloca i8*, align 8
  store %struct.qset* %qs, %struct.qset** %1, align 8
  call void @llvm.dbg.declare(metadata %struct.qset** %1, metadata !8655, metadata !2279), !dbg !8656
  store void (i8*)* %freefnc, void (i8*)** %2, align 8
  call void @llvm.dbg.declare(metadata void (i8*)** %2, metadata !8657, metadata !2279), !dbg !8658
  call void @llvm.dbg.declare(metadata i8** %p, metadata !8659, metadata !2279), !dbg !8660
  %3 = load %struct.qset*, %struct.qset** %1, align 8, !dbg !8661
  %4 = icmp ne %struct.qset* %3, null, !dbg !8661
  br i1 %4, label %6, label %5, !dbg !8663

; <label>:5                                       ; preds = %0
  br label %27, !dbg !8664

; <label>:6                                       ; preds = %0
  br label %7, !dbg !8665

; <label>:7                                       ; preds = %11, %6
  %8 = load %struct.qset*, %struct.qset** %1, align 8, !dbg !8666
  %9 = call i8* @dequeue(%struct.qset* %8), !dbg !8668
  store i8* %9, i8** %p, align 8, !dbg !8669
  %10 = icmp ne i8* %9, null, !dbg !8670
  br i1 %10, label %11, label %14, !dbg !8670

; <label>:11                                      ; preds = %7
  %12 = load void (i8*)*, void (i8*)** %2, align 8, !dbg !8671
  %13 = load i8*, i8** %p, align 8, !dbg !8672
  call void %12(i8* %13), !dbg !8673
  br label %7, !dbg !8674

; <label>:14                                      ; preds = %7
  %15 = load %struct.qset*, %struct.qset** %1, align 8, !dbg !8676
  %16 = getelementptr inbounds %struct.qset, %struct.qset* %15, i32 0, i32 0, !dbg !8678
  %17 = load %struct.gqueue*, %struct.gqueue** %16, align 8, !dbg !8678
  %18 = icmp ne %struct.gqueue* %17, null, !dbg !8676
  br i1 %18, label %19, label %24, !dbg !8679

; <label>:19                                      ; preds = %14
  %20 = load %struct.qset*, %struct.qset** %1, align 8, !dbg !8680
  %21 = getelementptr inbounds %struct.qset, %struct.qset* %20, i32 0, i32 0, !dbg !8682
  %22 = load %struct.gqueue*, %struct.gqueue** %21, align 8, !dbg !8682
  %23 = bitcast %struct.gqueue* %22 to i8*, !dbg !8680
  call void @free(i8* %23) #10, !dbg !8683
  br label %24, !dbg !8684

; <label>:24                                      ; preds = %19, %14
  %25 = load %struct.qset*, %struct.qset** %1, align 8, !dbg !8685
  %26 = bitcast %struct.qset* %25 to i8*, !dbg !8685
  call void @free(i8* %26) #10, !dbg !8686
  br label %27, !dbg !8687

; <label>:27                                      ; preds = %24, %5
  ret void, !dbg !8688
}

; Function Attrs: nounwind uwtable
define i32 @read_config(i8* %config_file) #0 !dbg !975 {
  %1 = alloca i32, align 4
  %2 = alloca i8*, align 8
  %buf = alloca [512 x i8], align 16
  %cp = alloca i8*, align 8
  %config_fp = alloca %struct._IO_FILE*, align 8
  %args = alloca [30 x i8*], align 16
  %argcnt = alloca i32, align 4
  %errcnt = alloca i32, align 4
  %linenum = alloca i32, align 4
  %i = alloca i32, align 4
  %temp = alloca i8*, align 8
  %i1 = alloca i32, align 4
  %orig = alloca i8, align 1
  %port = alloca i32, align 4
  %i2 = alloca i32, align 4
  %i3 = alloca i32, align 4
  store i8* %config_file, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !8689, metadata !2279), !dbg !8690
  call void @llvm.dbg.declare(metadata [512 x i8]* %buf, metadata !8691, metadata !2279), !dbg !8693
  call void @llvm.dbg.declare(metadata i8** %cp, metadata !8694, metadata !2279), !dbg !8695
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %config_fp, metadata !8696, metadata !2279), !dbg !8750
  call void @llvm.dbg.declare(metadata [30 x i8*]* %args, metadata !8751, metadata !2279), !dbg !8753
  call void @llvm.dbg.declare(metadata i32* %argcnt, metadata !8754, metadata !2279), !dbg !8755
  call void @llvm.dbg.declare(metadata i32* %errcnt, metadata !8756, metadata !2279), !dbg !8757
  call void @llvm.dbg.declare(metadata i32* %linenum, metadata !8758, metadata !2279), !dbg !8759
  store i32 0, i32* %errcnt, align 4, !dbg !8760
  store i32 0, i32* %linenum, align 4, !dbg !8761
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8762, metadata !2279), !dbg !8764
  store i32 0, i32* %i, align 4, !dbg !8764
  br label %3, !dbg !8765

; <label>:3                                       ; preds = %386, %0
  %4 = load i32, i32* %i, align 4, !dbg !8766
  %5 = icmp slt i32 %4, 50, !dbg !8769
  br i1 %5, label %6, label %389, !dbg !8770

; <label>:6                                       ; preds = %3
  %7 = load i32, i32* %i, align 4, !dbg !8771
  %8 = icmp sge i32 %7, 17, !dbg !8774
  br i1 %8, label %9, label %10, !dbg !8775

; <label>:9                                       ; preds = %6
  br label %389, !dbg !8776

; <label>:10                                      ; preds = %6
  %11 = getelementptr inbounds [512 x i8], [512 x i8]* %buf, i32 0, i32 0, !dbg !8778
  call void @llvm.memset.p0i8.i64(i8* %11, i8 0, i64 512, i32 16, i1 false), !dbg !8778
  %12 = getelementptr inbounds [512 x i8], [512 x i8]* %buf, i32 0, i32 0, !dbg !8779
  %13 = load i32, i32* %i, align 4, !dbg !8780
  %14 = sext i32 %13 to i64, !dbg !8781
  %15 = getelementptr inbounds [17 x i8*], [17 x i8*]* @lines, i64 0, i64 %14, !dbg !8781
  %16 = load i8*, i8** %15, align 8, !dbg !8781
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %12, i8* %16, i64 512, i32 1, i1 false), !dbg !8779
  %17 = load i32, i32* %linenum, align 4, !dbg !8782
  %18 = add nsw i32 %17, 1, !dbg !8782
  store i32 %18, i32* %linenum, align 4, !dbg !8782
  %19 = getelementptr inbounds [512 x i8], [512 x i8]* %buf, i32 0, i32 0, !dbg !8783
  call void (i8*, ...) @__print_debug_string__(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.19.237, i32 0, i32 0), i8* %19, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.20.238, i32 0, i32 0)), !dbg !8784
  %20 = getelementptr inbounds [512 x i8], [512 x i8]* %buf, i32 0, i32 0, !dbg !8785
  %21 = call i8* @strchr(i8* %20, i32 10) #9, !dbg !8786
  store i8* %21, i8** %cp, align 8, !dbg !8787
  %22 = load i8*, i8** %cp, align 8, !dbg !8788
  %23 = icmp ne i8* %22, null, !dbg !8788
  br i1 %23, label %24, label %26, !dbg !8790

; <label>:24                                      ; preds = %10
  %25 = load i8*, i8** %cp, align 8, !dbg !8791
  store i8 0, i8* %25, align 1, !dbg !8792
  br label %26, !dbg !8793

; <label>:26                                      ; preds = %24, %10
  %27 = getelementptr inbounds [512 x i8], [512 x i8]* %buf, i32 0, i32 0, !dbg !8794
  %28 = call i8* @strchr(i8* %27, i32 10) #9, !dbg !8795
  store i8* %28, i8** %cp, align 8, !dbg !8796
  %29 = load i8*, i8** %cp, align 8, !dbg !8797
  %30 = icmp ne i8* %29, null, !dbg !8797
  br i1 %30, label %31, label %33, !dbg !8799

; <label>:31                                      ; preds = %26
  %32 = load i8*, i8** %cp, align 8, !dbg !8800
  store i8 0, i8* %32, align 1, !dbg !8801
  br label %33, !dbg !8802

; <label>:33                                      ; preds = %31, %26
  %34 = getelementptr inbounds [512 x i8], [512 x i8]* %buf, i32 0, i32 0, !dbg !8803
  %35 = call i8* @strchr(i8* %34, i32 35) #9, !dbg !8804
  store i8* %35, i8** %cp, align 8, !dbg !8805
  %36 = load i8*, i8** %cp, align 8, !dbg !8806
  %37 = icmp ne i8* %36, null, !dbg !8806
  br i1 %37, label %38, label %40, !dbg !8808

; <label>:38                                      ; preds = %33
  %39 = load i8*, i8** %cp, align 8, !dbg !8809
  store i8 0, i8* %39, align 1, !dbg !8810
  br label %40, !dbg !8811

; <label>:40                                      ; preds = %38, %33
  %41 = getelementptr inbounds [512 x i8], [512 x i8]* %buf, i32 0, i32 0, !dbg !8812
  %42 = call i8* @strchr(i8* %41, i32 59) #9, !dbg !8813
  store i8* %42, i8** %cp, align 8, !dbg !8814
  %43 = load i8*, i8** %cp, align 8, !dbg !8815
  %44 = icmp ne i8* %43, null, !dbg !8815
  br i1 %44, label %45, label %47, !dbg !8817

; <label>:45                                      ; preds = %40
  %46 = load i8*, i8** %cp, align 8, !dbg !8818
  store i8 0, i8* %46, align 1, !dbg !8819
  br label %47, !dbg !8820

; <label>:47                                      ; preds = %45, %40
  call void @llvm.dbg.declare(metadata i8** %temp, metadata !8821, metadata !2279), !dbg !8822
  %48 = getelementptr inbounds [512 x i8], [512 x i8]* %buf, i32 0, i32 0, !dbg !8823
  store i8* %48, i8** %temp, align 8, !dbg !8822
  store i32 0, i32* %argcnt, align 4, !dbg !8824
  %49 = getelementptr inbounds [512 x i8], [512 x i8]* %buf, i64 0, i64 0, !dbg !8825
  %50 = load i8, i8* %49, align 16, !dbg !8825
  %51 = sext i8 %50 to i32, !dbg !8825
  %52 = icmp eq i32 %51, 0, !dbg !8827
  br i1 %52, label %53, label %54, !dbg !8828

; <label>:53                                      ; preds = %47
  br label %386, !dbg !8829

; <label>:54                                      ; preds = %47
  call void @llvm.dbg.declare(metadata i32* %i1, metadata !8831, metadata !2279), !dbg !8833
  store i32 0, i32* %i1, align 4, !dbg !8833
  br label %55, !dbg !8834

; <label>:55                                      ; preds = %96, %54
  %56 = load i32, i32* %i1, align 4, !dbg !8835
  %57 = icmp slt i32 %56, 50, !dbg !8838
  br i1 %57, label %58, label %99, !dbg !8839

; <label>:58                                      ; preds = %55
  %59 = load i32, i32* %i1, align 4, !dbg !8840
  %60 = sext i32 %59 to i64, !dbg !8843
  %61 = getelementptr inbounds [512 x i8], [512 x i8]* %buf, i64 0, i64 %60, !dbg !8843
  %62 = load i8, i8* %61, align 1, !dbg !8843
  %63 = icmp ne i8 %62, 0, !dbg !8843
  br i1 %63, label %65, label %64, !dbg !8844

; <label>:64                                      ; preds = %58
  br label %99, !dbg !8845

; <label>:65                                      ; preds = %58
  call void @unroll_loop(i32 50), !dbg !8847
  %66 = load i32, i32* %i1, align 4, !dbg !8848
  %67 = sext i32 %66 to i64, !dbg !8850
  %68 = getelementptr inbounds [512 x i8], [512 x i8]* %buf, i64 0, i64 %67, !dbg !8850
  %69 = load i8, i8* %68, align 1, !dbg !8850
  %70 = sext i8 %69 to i32, !dbg !8850
  %71 = icmp eq i32 %70, 32, !dbg !8851
  br i1 %71, label %72, label %95, !dbg !8852

; <label>:72                                      ; preds = %65
  call void @llvm.dbg.declare(metadata i8* %orig, metadata !8853, metadata !2279), !dbg !8855
  %73 = load i32, i32* %i1, align 4, !dbg !8856
  %74 = sext i32 %73 to i64, !dbg !8857
  %75 = getelementptr inbounds [512 x i8], [512 x i8]* %buf, i64 0, i64 %74, !dbg !8857
  %76 = load i8, i8* %75, align 1, !dbg !8857
  store i8 %76, i8* %orig, align 1, !dbg !8855
  %77 = load i32, i32* %i1, align 4, !dbg !8858
  %78 = sext i32 %77 to i64, !dbg !8859
  %79 = getelementptr inbounds [512 x i8], [512 x i8]* %buf, i64 0, i64 %78, !dbg !8859
  store i8 0, i8* %79, align 1, !dbg !8860
  %80 = load i8*, i8** %temp, align 8, !dbg !8861
  %81 = load i32, i32* %argcnt, align 4, !dbg !8862
  %82 = sext i32 %81 to i64, !dbg !8863
  %83 = getelementptr inbounds [30 x i8*], [30 x i8*]* %args, i64 0, i64 %82, !dbg !8863
  store i8* %80, i8** %83, align 8, !dbg !8864
  %84 = load i32, i32* %argcnt, align 4, !dbg !8865
  %85 = add nsw i32 %84, 1, !dbg !8865
  store i32 %85, i32* %argcnt, align 4, !dbg !8865
  %86 = load i32, i32* %i1, align 4, !dbg !8866
  %87 = add nsw i32 %86, 1, !dbg !8867
  %88 = sext i32 %87 to i64, !dbg !8868
  %89 = getelementptr inbounds [512 x i8], [512 x i8]* %buf, i64 0, i64 %88, !dbg !8868
  store i8* %89, i8** %temp, align 8, !dbg !8869
  %90 = load i8, i8* %orig, align 1, !dbg !8870
  %91 = sext i8 %90 to i32, !dbg !8870
  %92 = icmp eq i32 %91, 10, !dbg !8872
  br i1 %92, label %93, label %94, !dbg !8873

; <label>:93                                      ; preds = %72
  br label %99, !dbg !8874

; <label>:94                                      ; preds = %72
  br label %95, !dbg !8876

; <label>:95                                      ; preds = %94, %65
  br label %96, !dbg !8877

; <label>:96                                      ; preds = %95
  %97 = load i32, i32* %i1, align 4, !dbg !8878
  %98 = add nsw i32 %97, 1, !dbg !8878
  store i32 %98, i32* %i1, align 4, !dbg !8878
  br label %55, !dbg !8880

; <label>:99                                      ; preds = %93, %64, %55
  %100 = load i8*, i8** %temp, align 8, !dbg !8881
  %101 = load i32, i32* %argcnt, align 4, !dbg !8882
  %102 = sext i32 %101 to i64, !dbg !8883
  %103 = getelementptr inbounds [30 x i8*], [30 x i8*]* %args, i64 0, i64 %102, !dbg !8883
  store i8* %100, i8** %103, align 8, !dbg !8884
  %104 = load i32, i32* %argcnt, align 4, !dbg !8885
  %105 = add nsw i32 %104, 1, !dbg !8885
  store i32 %105, i32* %argcnt, align 4, !dbg !8885
  %106 = getelementptr inbounds [30 x i8*], [30 x i8*]* %args, i64 0, i64 0, !dbg !8886
  %107 = load i8*, i8** %106, align 16, !dbg !8886
  %108 = icmp ne i8* %107, null, !dbg !8886
  br i1 %108, label %110, label %109, !dbg !8888

; <label>:109                                     ; preds = %99
  br label %386, !dbg !8889

; <label>:110                                     ; preds = %99
  %111 = getelementptr inbounds [30 x i8*], [30 x i8*]* %args, i64 0, i64 0, !dbg !8890
  %112 = load i8*, i8** %111, align 16, !dbg !8890
  %113 = call i32 @strcmp(i8* %112, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.21.239, i32 0, i32 0)) #9, !dbg !8892
  %114 = icmp ne i32 %113, 0, !dbg !8892
  br i1 %114, label %168, label %115, !dbg !8893

; <label>:115                                     ; preds = %110
  %116 = load i32, i32* %argcnt, align 4, !dbg !8894
  %117 = icmp slt i32 %116, 2, !dbg !8897
  br i1 %117, label %121, label %118, !dbg !8898

; <label>:118                                     ; preds = %115
  %119 = load i32, i32* %argcnt, align 4, !dbg !8899
  %120 = icmp sgt i32 %119, 4, !dbg !8901
  br i1 %120, label %121, label %125, !dbg !8902

; <label>:121                                     ; preds = %118, %115
  %122 = load i32, i32* %linenum, align 4, !dbg !8903
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.22.240, i32 0, i32 0), i32 %122), !dbg !8905
  %123 = load i32, i32* %errcnt, align 4, !dbg !8906
  %124 = add nsw i32 %123, 1, !dbg !8906
  store i32 %124, i32* %errcnt, align 4, !dbg !8906
  br label %167, !dbg !8907

; <label>:125                                     ; preds = %118
  call void @llvm.dbg.declare(metadata i32* %port, metadata !8908, metadata !2279), !dbg !8910
  store i32 53, i32* %port, align 4, !dbg !8910
  call void @llvm.dbg.declare(metadata i32* %i2, metadata !8911, metadata !2279), !dbg !8912
  store i32 2, i32* %i2, align 4, !dbg !8913
  %126 = load i32, i32* %argcnt, align 4, !dbg !8914
  %127 = load i32, i32* %i2, align 4, !dbg !8916
  %128 = icmp sgt i32 %126, %127, !dbg !8917
  br i1 %128, label %129, label %162, !dbg !8918

; <label>:129                                     ; preds = %125
  %130 = load i32, i32* %i2, align 4, !dbg !8919
  %131 = sext i32 %130 to i64, !dbg !8922
  %132 = getelementptr inbounds [30 x i8*], [30 x i8*]* %args, i64 0, i64 %131, !dbg !8922
  %133 = load i8*, i8** %132, align 8, !dbg !8922
  %134 = call i32 @strcmp(i8* %133, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.23.241, i32 0, i32 0)) #9, !dbg !8923
  %135 = icmp ne i32 %134, 0, !dbg !8923
  br i1 %135, label %153, label %136, !dbg !8924

; <label>:136                                     ; preds = %129
  %137 = load i32, i32* %argcnt, align 4, !dbg !8925
  %138 = load i32, i32* %i2, align 4, !dbg !8928
  %139 = add nsw i32 %138, 1, !dbg !8928
  store i32 %139, i32* %i2, align 4, !dbg !8928
  %140 = icmp sge i32 %137, %139, !dbg !8929
  br i1 %140, label %141, label %148, !dbg !8930

; <label>:141                                     ; preds = %136
  %142 = load i32, i32* %i2, align 4, !dbg !8931
  %143 = add nsw i32 %142, 1, !dbg !8931
  store i32 %143, i32* %i2, align 4, !dbg !8931
  %144 = sext i32 %142 to i64, !dbg !8933
  %145 = getelementptr inbounds [30 x i8*], [30 x i8*]* %args, i64 0, i64 %144, !dbg !8933
  %146 = load i8*, i8** %145, align 8, !dbg !8933
  %147 = call i32 @atoi(i8* %146) #9, !dbg !8934
  store i32 %147, i32* %port, align 4, !dbg !8935
  br label %152, !dbg !8936

; <label>:148                                     ; preds = %136
  %149 = load i32, i32* %linenum, align 4, !dbg !8937
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.24.242, i32 0, i32 0), i32 %149), !dbg !8939
  %150 = load i32, i32* %errcnt, align 4, !dbg !8940
  %151 = add nsw i32 %150, 1, !dbg !8940
  store i32 %151, i32* %errcnt, align 4, !dbg !8940
  br label %386, !dbg !8941

; <label>:152                                     ; preds = %141
  br label %161, !dbg !8942

; <label>:153                                     ; preds = %129
  %154 = load i32, i32* %linenum, align 4, !dbg !8943
  %155 = load i32, i32* %i2, align 4, !dbg !8945
  %156 = sext i32 %155 to i64, !dbg !8946
  %157 = getelementptr inbounds [30 x i8*], [30 x i8*]* %args, i64 0, i64 %156, !dbg !8946
  %158 = load i8*, i8** %157, align 8, !dbg !8946
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.25.243, i32 0, i32 0), i32 %154, i8* %158), !dbg !8947
  %159 = load i32, i32* %errcnt, align 4, !dbg !8948
  %160 = add nsw i32 %159, 1, !dbg !8948
  store i32 %160, i32* %errcnt, align 4, !dbg !8948
  br label %386, !dbg !8949

; <label>:161                                     ; preds = %152
  br label %162, !dbg !8950

; <label>:162                                     ; preds = %161, %125
  %163 = getelementptr inbounds [30 x i8*], [30 x i8*]* %args, i64 0, i64 1, !dbg !8951
  %164 = load i8*, i8** %163, align 8, !dbg !8951
  %165 = load i32, i32* %port, align 4, !dbg !8952
  %166 = call i32 @fwd_add(i8* %164, i32 %165), !dbg !8953
  br label %167

; <label>:167                                     ; preds = %162, %121
  br label %385, !dbg !8954

; <label>:168                                     ; preds = %110
  %169 = getelementptr inbounds [30 x i8*], [30 x i8*]* %args, i64 0, i64 0, !dbg !8955
  %170 = load i8*, i8** %169, align 16, !dbg !8955
  %171 = call i32 @strcmp(i8* %170, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.26.244, i32 0, i32 0)) #9, !dbg !8958
  %172 = icmp ne i32 %171, 0, !dbg !8958
  br i1 %172, label %185, label %173, !dbg !8959

; <label>:173                                     ; preds = %168
  %174 = load i32, i32* %argcnt, align 4, !dbg !8960
  %175 = icmp ne i32 %174, 2, !dbg !8963
  br i1 %175, label %176, label %180, !dbg !8964

; <label>:176                                     ; preds = %173
  %177 = load i32, i32* %linenum, align 4, !dbg !8965
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.27.245, i32 0, i32 0), i32 %177), !dbg !8967
  %178 = load i32, i32* %errcnt, align 4, !dbg !8968
  %179 = add nsw i32 %178, 1, !dbg !8968
  store i32 %179, i32* %errcnt, align 4, !dbg !8968
  br label %184, !dbg !8969

; <label>:180                                     ; preds = %173
  %181 = getelementptr inbounds [30 x i8*], [30 x i8*]* %args, i64 0, i64 1, !dbg !8970
  %182 = load i8*, i8** %181, align 8, !dbg !8970
  %183 = call i32 @conv_trick_conf(i8* %182), !dbg !8972
  br label %184

; <label>:184                                     ; preds = %180, %176
  br label %384, !dbg !8973

; <label>:185                                     ; preds = %168
  %186 = getelementptr inbounds [30 x i8*], [30 x i8*]* %args, i64 0, i64 0, !dbg !8974
  %187 = load i8*, i8** %186, align 16, !dbg !8974
  %188 = call i32 @strcmp(i8* %187, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.28.246, i32 0, i32 0)) #9, !dbg !8977
  %189 = icmp ne i32 %188, 0, !dbg !8977
  br i1 %189, label %199, label %190, !dbg !8978

; <label>:190                                     ; preds = %185
  %191 = load i32, i32* %argcnt, align 4, !dbg !8979
  %192 = icmp ne i32 %191, 2, !dbg !8982
  br i1 %192, label %193, label %197, !dbg !8983

; <label>:193                                     ; preds = %190
  %194 = load i32, i32* %linenum, align 4, !dbg !8984
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.29.247, i32 0, i32 0), i32 %194), !dbg !8986
  %195 = load i32, i32* %errcnt, align 4, !dbg !8987
  %196 = add nsw i32 %195, 1, !dbg !8987
  store i32 %196, i32* %errcnt, align 4, !dbg !8987
  br label %198, !dbg !8988

; <label>:197                                     ; preds = %190
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.30.248, i32 0, i32 0)), !dbg !8989
  br label %198

; <label>:198                                     ; preds = %197, %193
  br label %383, !dbg !8991

; <label>:199                                     ; preds = %185
  %200 = getelementptr inbounds [30 x i8*], [30 x i8*]* %args, i64 0, i64 0, !dbg !8992
  %201 = load i8*, i8** %200, align 16, !dbg !8992
  %202 = call i32 @strcmp(i8* %201, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.31.249, i32 0, i32 0)) #9, !dbg !8995
  %203 = icmp ne i32 %202, 0, !dbg !8995
  br i1 %203, label %216, label %204, !dbg !8996

; <label>:204                                     ; preds = %199
  %205 = load i32, i32* %argcnt, align 4, !dbg !8997
  %206 = icmp ne i32 %205, 2, !dbg !9000
  br i1 %206, label %207, label %211, !dbg !9001

; <label>:207                                     ; preds = %204
  %208 = load i32, i32* %linenum, align 4, !dbg !9002
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.32.250, i32 0, i32 0), i32 %208), !dbg !9004
  %209 = load i32, i32* %errcnt, align 4, !dbg !9005
  %210 = add nsw i32 %209, 1, !dbg !9005
  store i32 %210, i32* %errcnt, align 4, !dbg !9005
  br label %215, !dbg !9006

; <label>:211                                     ; preds = %204
  %212 = getelementptr inbounds [30 x i8*], [30 x i8*]* %args, i64 0, i64 1, !dbg !9007
  %213 = load i8*, i8** %212, align 8, !dbg !9007
  %214 = call i32 @atoi(i8* %213) #9, !dbg !9009
  store i32 %214, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 10), align 4, !dbg !9010
  br label %215

; <label>:215                                     ; preds = %211, %207
  br label %382, !dbg !9011

; <label>:216                                     ; preds = %199
  %217 = getelementptr inbounds [30 x i8*], [30 x i8*]* %args, i64 0, i64 0, !dbg !9012
  %218 = load i8*, i8** %217, align 16, !dbg !9012
  %219 = call i32 @strcmp(i8* %218, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.33.251, i32 0, i32 0)) #9, !dbg !9015
  %220 = icmp ne i32 %219, 0, !dbg !9015
  br i1 %220, label %233, label %221, !dbg !9016

; <label>:221                                     ; preds = %216
  %222 = load i32, i32* %argcnt, align 4, !dbg !9017
  %223 = icmp ne i32 %222, 2, !dbg !9020
  br i1 %223, label %224, label %228, !dbg !9021

; <label>:224                                     ; preds = %221
  %225 = load i32, i32* %linenum, align 4, !dbg !9022
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.34.252, i32 0, i32 0), i32 %225), !dbg !9024
  %226 = load i32, i32* %errcnt, align 4, !dbg !9025
  %227 = add nsw i32 %226, 1, !dbg !9025
  store i32 %227, i32* %errcnt, align 4, !dbg !9025
  br label %232, !dbg !9026

; <label>:228                                     ; preds = %221
  %229 = getelementptr inbounds [30 x i8*], [30 x i8*]* %args, i64 0, i64 1, !dbg !9027
  %230 = load i8*, i8** %229, align 8, !dbg !9027
  %231 = call noalias i8* @strdup(i8* %230) #10, !dbg !9029
  store i8* %231, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 1), align 8, !dbg !9030
  br label %232

; <label>:232                                     ; preds = %228, %224
  br label %381, !dbg !9031

; <label>:233                                     ; preds = %216
  %234 = getelementptr inbounds [30 x i8*], [30 x i8*]* %args, i64 0, i64 0, !dbg !9032
  %235 = load i8*, i8** %234, align 16, !dbg !9032
  %236 = call i32 @strcmp(i8* %235, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.35.253, i32 0, i32 0)) #9, !dbg !9035
  %237 = icmp ne i32 %236, 0, !dbg !9035
  br i1 %237, label %312, label %238, !dbg !9036

; <label>:238                                     ; preds = %233
  call void @llvm.dbg.declare(metadata i32* %i3, metadata !9037, metadata !2279), !dbg !9039
  %239 = load i32, i32* %argcnt, align 4, !dbg !9040
  %240 = icmp slt i32 %239, 2, !dbg !9042
  br i1 %240, label %241, label %245, !dbg !9043

; <label>:241                                     ; preds = %238
  %242 = load i32, i32* %linenum, align 4, !dbg !9044
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.36.254, i32 0, i32 0), i32 %242), !dbg !9046
  %243 = load i32, i32* %errcnt, align 4, !dbg !9047
  %244 = add nsw i32 %243, 1, !dbg !9047
  store i32 %244, i32* %errcnt, align 4, !dbg !9047
  br label %245, !dbg !9048

; <label>:245                                     ; preds = %241, %238
  store i32 0, i32* %i3, align 4, !dbg !9049
  br label %246, !dbg !9051

; <label>:246                                     ; preds = %258, %245
  %247 = load i32, i32* %i3, align 4, !dbg !9052
  %248 = sext i32 %247 to i64, !dbg !9055
  %249 = getelementptr inbounds [31 x i8*], [31 x i8*]* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 24), i64 0, i64 %248, !dbg !9055
  %250 = load i8*, i8** %249, align 8, !dbg !9055
  %251 = icmp ne i8* %250, null, !dbg !9055
  br i1 %251, label %252, label %255, !dbg !9056

; <label>:252                                     ; preds = %246
  %253 = load i32, i32* %i3, align 4, !dbg !9057
  %254 = icmp slt i32 %253, 30, !dbg !9059
  br label %255

; <label>:255                                     ; preds = %252, %246
  %256 = phi i1 [ false, %246 ], [ %254, %252 ]
  br i1 %256, label %257, label %261, !dbg !9060

; <label>:257                                     ; preds = %255
  br label %258, !dbg !9062

; <label>:258                                     ; preds = %257
  %259 = load i32, i32* %i3, align 4, !dbg !9064
  %260 = add nsw i32 %259, 1, !dbg !9064
  store i32 %260, i32* %i3, align 4, !dbg !9064
  br label %246, !dbg !9066

; <label>:261                                     ; preds = %255
  %262 = load i32, i32* %i3, align 4, !dbg !9067
  %263 = load i32, i32* %argcnt, align 4, !dbg !9069
  %264 = add nsw i32 %262, %263, !dbg !9070
  %265 = sub nsw i32 %264, 1, !dbg !9071
  %266 = icmp sgt i32 %265, 30, !dbg !9072
  br i1 %266, label %267, label %271, !dbg !9073

; <label>:267                                     ; preds = %261
  %268 = load i32, i32* %linenum, align 4, !dbg !9074
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.37.255, i32 0, i32 0), i32 %268, i32 30), !dbg !9076
  %269 = load i32, i32* %errcnt, align 4, !dbg !9077
  %270 = add nsw i32 %269, 1, !dbg !9077
  store i32 %270, i32* %errcnt, align 4, !dbg !9077
  br label %311, !dbg !9078

; <label>:271                                     ; preds = %261
  %272 = load i32, i32* %linenum, align 4, !dbg !9079
  %273 = load i32, i32* %argcnt, align 4, !dbg !9081
  %274 = sub nsw i32 %273, 1, !dbg !9082
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.38.256, i32 0, i32 0), i32 %272, i32 %274), !dbg !9083
  %275 = load i32, i32* %i3, align 4, !dbg !9084
  %276 = load i32, i32* %argcnt, align 4, !dbg !9085
  %277 = add nsw i32 %276, -1, !dbg !9085
  store i32 %277, i32* %argcnt, align 4, !dbg !9085
  %278 = add nsw i32 %275, %276, !dbg !9086
  %279 = sext i32 %278 to i64, !dbg !9087
  %280 = getelementptr inbounds [31 x i8*], [31 x i8*]* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 24), i64 0, i64 %279, !dbg !9087
  store i8* null, i8** %280, align 8, !dbg !9088
  br label %281, !dbg !9089

; <label>:281                                     ; preds = %292, %271
  %282 = load i32, i32* %argcnt, align 4, !dbg !9090
  %283 = icmp ne i32 %282, 0, !dbg !9092
  br i1 %283, label %284, label %306, !dbg !9092

; <label>:284                                     ; preds = %281
  %285 = load i32, i32* %argcnt, align 4, !dbg !9093
  %286 = sext i32 %285 to i64, !dbg !9096
  %287 = getelementptr inbounds [30 x i8*], [30 x i8*]* %args, i64 0, i64 %286, !dbg !9096
  %288 = load i8*, i8** %287, align 8, !dbg !9096
  %289 = call i32 @strcmp(i8* %288, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.39.257, i32 0, i32 0)) #9, !dbg !9097
  %290 = icmp ne i32 %289, 0, !dbg !9097
  br i1 %290, label %292, label %291, !dbg !9098

; <label>:291                                     ; preds = %284
  store i8* null, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 24, i64 0), align 8, !dbg !9099
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 15), align 8, !dbg !9101
  br label %306, !dbg !9102

; <label>:292                                     ; preds = %284
  %293 = load i32, i32* %argcnt, align 4, !dbg !9103
  %294 = sext i32 %293 to i64, !dbg !9104
  %295 = getelementptr inbounds [30 x i8*], [30 x i8*]* %args, i64 0, i64 %294, !dbg !9104
  %296 = load i8*, i8** %295, align 8, !dbg !9104
  %297 = call noalias i8* @strdup(i8* %296) #10, !dbg !9105
  %298 = load i32, i32* %i3, align 4, !dbg !9106
  %299 = load i32, i32* %argcnt, align 4, !dbg !9107
  %300 = add nsw i32 %298, %299, !dbg !9108
  %301 = sub nsw i32 %300, 1, !dbg !9109
  %302 = sext i32 %301 to i64, !dbg !9110
  %303 = getelementptr inbounds [31 x i8*], [31 x i8*]* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 24), i64 0, i64 %302, !dbg !9110
  store i8* %297, i8** %303, align 8, !dbg !9111
  %304 = load i32, i32* %argcnt, align 4, !dbg !9112
  %305 = add nsw i32 %304, -1, !dbg !9112
  store i32 %305, i32* %argcnt, align 4, !dbg !9112
  br label %281, !dbg !9113

; <label>:306                                     ; preds = %291, %281
  %307 = load i8*, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 24, i64 0), align 8, !dbg !9115
  %308 = icmp ne i8* %307, null, !dbg !9115
  br i1 %308, label %309, label %310, !dbg !9117

; <label>:309                                     ; preds = %306
  store i32 0, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 15), align 8, !dbg !9118
  br label %310, !dbg !9119

; <label>:310                                     ; preds = %309, %306
  br label %311

; <label>:311                                     ; preds = %310, %267
  br label %380, !dbg !9120

; <label>:312                                     ; preds = %233
  %313 = getelementptr inbounds [30 x i8*], [30 x i8*]* %args, i64 0, i64 0, !dbg !9121
  %314 = load i8*, i8** %313, align 16, !dbg !9121
  %315 = call i32 @strcmp(i8* %314, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.23.241, i32 0, i32 0)) #9, !dbg !9124
  %316 = icmp ne i32 %315, 0, !dbg !9124
  br i1 %316, label %329, label %317, !dbg !9125

; <label>:317                                     ; preds = %312
  %318 = load i32, i32* %argcnt, align 4, !dbg !9126
  %319 = icmp ne i32 %318, 2, !dbg !9129
  br i1 %319, label %320, label %324, !dbg !9130

; <label>:320                                     ; preds = %317
  %321 = load i32, i32* %linenum, align 4, !dbg !9131
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.40.258, i32 0, i32 0), i32 %321), !dbg !9133
  %322 = load i32, i32* %errcnt, align 4, !dbg !9134
  %323 = add nsw i32 %322, 1, !dbg !9134
  store i32 %323, i32* %errcnt, align 4, !dbg !9134
  br label %328, !dbg !9135

; <label>:324                                     ; preds = %317
  %325 = getelementptr inbounds [30 x i8*], [30 x i8*]* %args, i64 0, i64 1, !dbg !9136
  %326 = load i8*, i8** %325, align 8, !dbg !9136
  %327 = call i32 @atoi(i8* %326) #9, !dbg !9138
  store i32 %327, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 9), align 8, !dbg !9139
  br label %328

; <label>:328                                     ; preds = %324, %320
  br label %379, !dbg !9140

; <label>:329                                     ; preds = %312
  %330 = getelementptr inbounds [30 x i8*], [30 x i8*]* %args, i64 0, i64 0, !dbg !9141
  %331 = load i8*, i8** %330, align 16, !dbg !9141
  %332 = call i32 @strcmp(i8* %331, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.41.259, i32 0, i32 0)) #9, !dbg !9143
  %333 = icmp ne i32 %332, 0, !dbg !9143
  br i1 %333, label %372, label %334, !dbg !9144

; <label>:334                                     ; preds = %329
  %335 = load i32, i32* %argcnt, align 4, !dbg !9145
  %336 = icmp ne i32 %335, 4, !dbg !9148
  br i1 %336, label %337, label %341, !dbg !9149

; <label>:337                                     ; preds = %334
  %338 = load i32, i32* %linenum, align 4, !dbg !9150
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.42.260, i32 0, i32 0), i32 %338), !dbg !9152
  %339 = load i32, i32* %errcnt, align 4, !dbg !9153
  %340 = add nsw i32 %339, 1, !dbg !9153
  store i32 %340, i32* %errcnt, align 4, !dbg !9153
  br label %371, !dbg !9154

; <label>:341                                     ; preds = %334
  %342 = getelementptr inbounds [30 x i8*], [30 x i8*]* %args, i64 0, i64 1, !dbg !9155
  %343 = load i8*, i8** %342, align 8, !dbg !9155
  %344 = getelementptr inbounds [30 x i8*], [30 x i8*]* %args, i64 0, i64 2, !dbg !9158
  %345 = load i8*, i8** %344, align 16, !dbg !9158
  %346 = getelementptr inbounds [30 x i8*], [30 x i8*]* %args, i64 0, i64 3, !dbg !9159
  %347 = load i8*, i8** %346, align 8, !dbg !9159
  %348 = call i32 @atoi(i8* %347) #9, !dbg !9160
  %349 = call i32 @conv_scoped_conf(i8* %343, i8* %345, i32 %348), !dbg !9161
  %350 = icmp ne i32 %349, 0, !dbg !9163
  br i1 %350, label %351, label %361, !dbg !9164

; <label>:351                                     ; preds = %341
  %352 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 25), align 8, !dbg !9165
  %353 = getelementptr inbounds [30 x i8*], [30 x i8*]* %args, i64 0, i64 1, !dbg !9167
  %354 = load i8*, i8** %353, align 8, !dbg !9167
  %355 = getelementptr inbounds [30 x i8*], [30 x i8*]* %args, i64 0, i64 2, !dbg !9168
  %356 = load i8*, i8** %355, align 16, !dbg !9168
  %357 = getelementptr inbounds [30 x i8*], [30 x i8*]* %args, i64 0, i64 3, !dbg !9169
  %358 = load i8*, i8** %357, align 8, !dbg !9169
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.43.261, i32 0, i32 0), i32 %352, i8* %354, i8* %356, i8* %358), !dbg !9170
  %359 = load i32, i32* %errcnt, align 4, !dbg !9171
  %360 = add nsw i32 %359, 1, !dbg !9171
  store i32 %360, i32* %errcnt, align 4, !dbg !9171
  br label %370, !dbg !9172

; <label>:361                                     ; preds = %341
  %362 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 25), align 8, !dbg !9173
  %363 = getelementptr inbounds [30 x i8*], [30 x i8*]* %args, i64 0, i64 1, !dbg !9175
  %364 = load i8*, i8** %363, align 8, !dbg !9175
  %365 = getelementptr inbounds [30 x i8*], [30 x i8*]* %args, i64 0, i64 2, !dbg !9176
  %366 = load i8*, i8** %365, align 16, !dbg !9176
  %367 = getelementptr inbounds [30 x i8*], [30 x i8*]* %args, i64 0, i64 3, !dbg !9177
  %368 = load i8*, i8** %367, align 8, !dbg !9177
  %369 = call i32 @atoi(i8* %368) #9, !dbg !9178
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.44.262, i32 0, i32 0), i32 %362, i8* %364, i8* %366, i32 %369), !dbg !9179
  br label %370

; <label>:370                                     ; preds = %361, %351
  br label %371

; <label>:371                                     ; preds = %370, %337
  br label %378, !dbg !9180

; <label>:372                                     ; preds = %329
  %373 = load i32, i32* %linenum, align 4, !dbg !9181
  %374 = getelementptr inbounds [30 x i8*], [30 x i8*]* %args, i64 0, i64 0, !dbg !9183
  %375 = load i8*, i8** %374, align 16, !dbg !9183
  call void (i32, i8*, ...) @syslog(i32 4, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.45.263, i32 0, i32 0), i32 %373, i8* %375), !dbg !9184
  %376 = load i32, i32* %errcnt, align 4, !dbg !9185
  %377 = add nsw i32 %376, 1, !dbg !9185
  store i32 %377, i32* %errcnt, align 4, !dbg !9185
  br label %378

; <label>:378                                     ; preds = %372, %371
  br label %379

; <label>:379                                     ; preds = %378, %328
  br label %380

; <label>:380                                     ; preds = %379, %311
  br label %381

; <label>:381                                     ; preds = %380, %232
  br label %382

; <label>:382                                     ; preds = %381, %215
  br label %383

; <label>:383                                     ; preds = %382, %198
  br label %384

; <label>:384                                     ; preds = %383, %184
  br label %385

; <label>:385                                     ; preds = %384, %167
  br label %386, !dbg !9186

; <label>:386                                     ; preds = %385, %153, %148, %109, %53
  %387 = load i32, i32* %i, align 4, !dbg !9187
  %388 = add nsw i32 %387, 1, !dbg !9187
  store i32 %388, i32* %i, align 4, !dbg !9187
  br label %3, !dbg !9189

; <label>:389                                     ; preds = %9, %3
  %390 = load i32, i32* %errcnt, align 4, !dbg !9190
  %391 = icmp ne i32 %390, 0, !dbg !9190
  br i1 %391, label %392, label %394, !dbg !9192

; <label>:392                                     ; preds = %389
  %393 = load i32, i32* %errcnt, align 4, !dbg !9193
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.46.264, i32 0, i32 0), i32 %393), !dbg !9195
  store i32 -1, i32* %1, align 4, !dbg !9196
  br label %396, !dbg !9196

; <label>:394                                     ; preds = %389
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.47.265, i32 0, i32 0)), !dbg !9197
  br label %395

; <label>:395                                     ; preds = %394
  store i32 0, i32* %1, align 4, !dbg !9198
  br label %396, !dbg !9198

; <label>:396                                     ; preds = %395, %392
  %397 = load i32, i32* %1, align 4, !dbg !9199
  ret i32 %397, !dbg !9199
}

; Function Attrs: nounwind readonly
declare i32 @strcmp(i8*, i8*) #4

; Function Attrs: nounwind readonly
declare i32 @atoi(i8*) #4

; Function Attrs: nounwind
declare noalias i8* @strdup(i8*) #5

; Function Attrs: nounwind uwtable
define i32 @tcp_request_start(%struct.context.69* %cont) #0 !dbg !992 {
  %1 = alloca i32, align 4
  %2 = alloca %struct.context.69*, align 8
  %fn = alloca i8*, align 8
  %sa = alloca %struct.sockaddr*, align 8
  %on = alloca i32, align 4
  %sock = alloca i32, align 4
  %timeout = alloca i32, align 4
  store %struct.context.69* %cont, %struct.context.69** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.context.69** %2, metadata !9200, metadata !2279), !dbg !9201
  call void @llvm.dbg.declare(metadata i8** %fn, metadata !9202, metadata !2279), !dbg !9203
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.268, i32 0, i32 0), i8** %fn, align 8, !dbg !9203
  call void @llvm.dbg.declare(metadata %struct.sockaddr** %sa, metadata !9204, metadata !2279), !dbg !9205
  call void @llvm.dbg.declare(metadata i32* %on, metadata !9206, metadata !2279), !dbg !9207
  store i32 1, i32* %on, align 4, !dbg !9207
  call void @llvm.dbg.declare(metadata i32* %sock, metadata !9208, metadata !2279), !dbg !9209
  call void @llvm.dbg.declare(metadata i32* %timeout, metadata !9210, metadata !2279), !dbg !9211
  %3 = load i8*, i8** %fn, align 8, !dbg !9212
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1.269, i32 0, i32 0), i8* %3), !dbg !9213
  %4 = load %struct.context.69*, %struct.context.69** %2, align 8, !dbg !9214
  %5 = getelementptr inbounds %struct.context.69, %struct.context.69* %4, i32 0, i32 7, !dbg !9215
  %6 = bitcast {}** %5 to i32 (%struct.context.69*)**, !dbg !9215
  store i32 (%struct.context.69*)* @tcp_request_wait_connect_process, i32 (%struct.context.69*)** %6, align 8, !dbg !9216
  %7 = load %struct.context.69*, %struct.context.69** %2, align 8, !dbg !9217
  %8 = getelementptr inbounds %struct.context.69, %struct.context.69* %7, i32 0, i32 8, !dbg !9218
  %9 = bitcast {}** %8 to i32 (%struct.context.69*)**, !dbg !9218
  store i32 (%struct.context.69*)* @tcp_request_wait_connect_retry, i32 (%struct.context.69*)** %9, align 8, !dbg !9219
  store i32 0, i32* %timeout, align 4, !dbg !9220
  %10 = load %struct.context.69*, %struct.context.69** %2, align 8, !dbg !9221
  %11 = getelementptr inbounds %struct.context.69, %struct.context.69* %10, i32 0, i32 5, !dbg !9222
  %12 = load %struct.generic_list*, %struct.generic_list** %11, align 8, !dbg !9222
  %13 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %12, i32 0, i32 2, !dbg !9223
  %14 = load i8*, i8** %13, align 8, !dbg !9223
  %15 = bitcast i8* %14 to %struct.sockaddr*, !dbg !9224
  store %struct.sockaddr* %15, %struct.sockaddr** %sa, align 8, !dbg !9225
  %16 = load %struct.sockaddr*, %struct.sockaddr** %sa, align 8, !dbg !9226
  %17 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %16, i32 0, i32 0, !dbg !9227
  %18 = load i16, i16* %17, align 2, !dbg !9227
  %19 = zext i16 %18 to i32, !dbg !9226
  %20 = call i32 @socket(i32 %19, i32 1, i32 0) #10, !dbg !9228
  store i32 %20, i32* %sock, align 4, !dbg !9229
  %21 = load i32, i32* %sock, align 4, !dbg !9230
  %22 = icmp eq i32 %21, -1, !dbg !9232
  br i1 %22, label %28, label %23, !dbg !9233

; <label>:23                                      ; preds = %0
  %24 = load i32, i32* %sock, align 4, !dbg !9234
  %25 = bitcast i32* %on to i8*, !dbg !9236
  %26 = call i32 (i32, i64, ...) @ioctl(i32 %24, i64 21537, i8* %25) #10, !dbg !9237
  %27 = icmp eq i32 %26, -1, !dbg !9238
  br i1 %27, label %28, label %32, !dbg !9239

; <label>:28                                      ; preds = %23, %0
  %29 = load i8*, i8** %fn, align 8, !dbg !9240
  call void (i32, i8*, ...) @syslog(i32 4, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.291, i32 0, i32 0), i8* %29), !dbg !9242
  %30 = load %struct.context.69*, %struct.context.69** %2, align 8, !dbg !9243
  %31 = call i32 bitcast (i32 (%struct.context*, i32)* @request_abort to i32 (%struct.context.69*, i32)*)(%struct.context.69* %30, i32 -1), !dbg !9244
  store i32 %31, i32* %1, align 4, !dbg !9245
  br label %89, !dbg !9245

; <label>:32                                      ; preds = %23
  %33 = load i32, i32* %sock, align 4, !dbg !9246
  %34 = load %struct.sockaddr*, %struct.sockaddr** %sa, align 8, !dbg !9248
  %35 = load %struct.sockaddr*, %struct.sockaddr** %sa, align 8, !dbg !9249
  %36 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %35, i32 0, i32 0, !dbg !9249
  %37 = load i16, i16* %36, align 2, !dbg !9249
  %38 = zext i16 %37 to i32, !dbg !9249
  %39 = icmp eq i32 %38, 10, !dbg !9249
  br i1 %39, label %40, label %41, !dbg !9249

; <label>:40                                      ; preds = %32
  br label %48, !dbg !9250

; <label>:41                                      ; preds = %32
  %42 = load %struct.sockaddr*, %struct.sockaddr** %sa, align 8, !dbg !9252
  %43 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %42, i32 0, i32 0, !dbg !9252
  %44 = load i16, i16* %43, align 2, !dbg !9252
  %45 = zext i16 %44 to i32, !dbg !9252
  %46 = icmp eq i32 %45, 2, !dbg !9252
  %47 = select i1 %46, i64 16, i64 16, !dbg !9252
  br label %48, !dbg !9252

; <label>:48                                      ; preds = %41, %40
  %49 = phi i64 [ 28, %40 ], [ %47, %41 ], !dbg !9254
  %50 = trunc i64 %49 to i32, !dbg !9254
  %51 = call i32 @connect(i32 %33, %struct.sockaddr* %34, i32 %50), !dbg !9256
  %52 = icmp ne i32 %51, 0, !dbg !9256
  br i1 %52, label %53, label %57, !dbg !9257

; <label>:53                                      ; preds = %48
  %54 = call i32* @__errno_location() #1, !dbg !9258
  %55 = load i32, i32* %54, align 4, !dbg !9258
  %56 = icmp eq i32 %55, 115, !dbg !9260
  br i1 %56, label %57, label %73, !dbg !9261

; <label>:57                                      ; preds = %53, %48
  %58 = load i32, i32* %sock, align 4, !dbg !9262
  %59 = load %struct.context.69*, %struct.context.69** %2, align 8, !dbg !9264
  %60 = getelementptr inbounds %struct.context.69, %struct.context.69* %59, i32 0, i32 23, !dbg !9265
  store i32 %58, i32* %60, align 8, !dbg !9266
  %61 = load %struct.context.69*, %struct.context.69** %2, align 8, !dbg !9267
  %62 = getelementptr inbounds %struct.context.69, %struct.context.69* %61, i32 0, i32 21, !dbg !9268
  %63 = load i16, i16* %62, align 2, !dbg !9268
  %64 = zext i16 %63 to i32, !dbg !9267
  store i32 %64, i32* %timeout, align 4, !dbg !9269
  %65 = load i32, i32* %sock, align 4, !dbg !9270
  %66 = load %struct.context.69*, %struct.context.69** %2, align 8, !dbg !9272
  %67 = call i32 bitcast (i32 (i32, %struct.context*)* @ev_tcp_out_register to i32 (i32, %struct.context.69*)*)(i32 %65, %struct.context.69* %66), !dbg !9273
  %68 = icmp slt i32 %67, 0, !dbg !9274
  br i1 %68, label %69, label %72, !dbg !9275

; <label>:69                                      ; preds = %57
  %70 = load %struct.context.69*, %struct.context.69** %2, align 8, !dbg !9276
  %71 = call i32 bitcast (i32 (%struct.context*, i32)* @request_abort to i32 (%struct.context.69*, i32)*)(%struct.context.69* %70, i32 -1), !dbg !9277
  store i32 %71, i32* %1, align 4, !dbg !9278
  br label %89, !dbg !9278

; <label>:72                                      ; preds = %57
  br label %75, !dbg !9279

; <label>:73                                      ; preds = %53
  %74 = load i8*, i8** %fn, align 8, !dbg !9280
  call void (i32, i8*, ...) @syslog(i32 4, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.3.297, i32 0, i32 0), i8* %74), !dbg !9282
  store i32 0, i32* %timeout, align 4, !dbg !9283
  br label %75

; <label>:75                                      ; preds = %73, %72
  %76 = load %struct.context.69*, %struct.context.69** %2, align 8, !dbg !9284
  %77 = load i32, i32* %timeout, align 4, !dbg !9286
  %78 = call i32 bitcast (i32 (%struct.context.19*, i32)* @context_timeout_register to i32 (%struct.context.69*, i32)*)(%struct.context.69* %76, i32 %77), !dbg !9287
  %79 = icmp slt i32 %78, 0, !dbg !9288
  br i1 %79, label %80, label %83, !dbg !9289

; <label>:80                                      ; preds = %75
  %81 = load %struct.context.69*, %struct.context.69** %2, align 8, !dbg !9290
  %82 = call i32 bitcast (i32 (%struct.context*, i32)* @request_abort to i32 (%struct.context.69*, i32)*)(%struct.context.69* %81, i32 -1), !dbg !9291
  store i32 %82, i32* %1, align 4, !dbg !9292
  br label %89, !dbg !9292

; <label>:83                                      ; preds = %75
  %84 = load i8*, i8** %fn, align 8, !dbg !9293
  %85 = load %struct.context.69*, %struct.context.69** %2, align 8, !dbg !9294
  %86 = getelementptr inbounds %struct.context.69, %struct.context.69* %85, i32 0, i32 21, !dbg !9295
  %87 = load i16, i16* %86, align 2, !dbg !9295
  %88 = zext i16 %87 to i32, !dbg !9294
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.4.294, i32 0, i32 0), i8* %84, i32 %88), !dbg !9296
  store i32 0, i32* %1, align 4, !dbg !9297
  br label %89, !dbg !9297

; <label>:89                                      ; preds = %83, %80, %69, %28
  %90 = load i32, i32* %1, align 4, !dbg !9298
  ret i32 %90, !dbg !9298
}

; Function Attrs: nounwind uwtable
define i32 @tcp_request_wait_connect_process(%struct.context.69* %cont) #0 !dbg !1073 {
  %1 = alloca i32, align 4
  %2 = alloca %struct.context.69*, align 8
  %fn = alloca i8*, align 8
  %errlen = alloca i32, align 4
  %sockerr = alloca i32, align 4
  store %struct.context.69* %cont, %struct.context.69** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.context.69** %2, metadata !9299, metadata !2279), !dbg !9300
  call void @llvm.dbg.declare(metadata i8** %fn, metadata !9301, metadata !2279), !dbg !9302
  store i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.5.270, i32 0, i32 0), i8** %fn, align 8, !dbg !9302
  call void @llvm.dbg.declare(metadata i32* %errlen, metadata !9303, metadata !2279), !dbg !9304
  call void @llvm.dbg.declare(metadata i32* %sockerr, metadata !9305, metadata !2279), !dbg !9306
  %3 = load i8*, i8** %fn, align 8, !dbg !9307
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1.269, i32 0, i32 0), i8* %3), !dbg !9308
  %4 = load %struct.context.69*, %struct.context.69** %2, align 8, !dbg !9309
  %5 = getelementptr inbounds %struct.context.69, %struct.context.69* %4, i32 0, i32 6, !dbg !9311
  %6 = load %struct.ev_to_data*, %struct.ev_to_data** %5, align 8, !dbg !9311
  %7 = icmp ne %struct.ev_to_data* %6, null, !dbg !9309
  br i1 %7, label %8, label %13, !dbg !9312

; <label>:8                                       ; preds = %0
  %9 = load %struct.context.69*, %struct.context.69** %2, align 8, !dbg !9313
  %10 = getelementptr inbounds %struct.context.69, %struct.context.69* %9, i32 0, i32 6, !dbg !9314
  %11 = load %struct.ev_to_data*, %struct.ev_to_data** %10, align 8, !dbg !9314
  %12 = getelementptr inbounds %struct.ev_to_data, %struct.ev_to_data* %11, i32 0, i32 1, !dbg !9315
  store i32 (%struct.ev_to_data*)* null, i32 (%struct.ev_to_data*)** %12, align 8, !dbg !9316
  br label %13, !dbg !9313

; <label>:13                                      ; preds = %8, %0
  %14 = load %struct.context.69*, %struct.context.69** %2, align 8, !dbg !9317
  %15 = load %struct.context.69*, %struct.context.69** %2, align 8, !dbg !9319
  %16 = getelementptr inbounds %struct.context.69, %struct.context.69* %15, i32 0, i32 21, !dbg !9320
  %17 = load i16, i16* %16, align 2, !dbg !9320
  %18 = zext i16 %17 to i32, !dbg !9319
  %19 = call i32 bitcast (i32 (%struct.context.19*, i32)* @context_timeout_register to i32 (%struct.context.69*, i32)*)(%struct.context.69* %14, i32 %18), !dbg !9321
  %20 = icmp ne i32 %19, 0, !dbg !9321
  br i1 %20, label %21, label %24, !dbg !9322

; <label>:21                                      ; preds = %13
  %22 = load %struct.context.69*, %struct.context.69** %2, align 8, !dbg !9323
  %23 = call i32 bitcast (i32 (%struct.context*, i32)* @request_abort to i32 (%struct.context.69*, i32)*)(%struct.context.69* %22, i32 -1), !dbg !9324
  store i32 %23, i32* %1, align 4, !dbg !9325
  br label %59, !dbg !9325

; <label>:24                                      ; preds = %13
  store i32 4, i32* %errlen, align 4, !dbg !9326
  %25 = load %struct.context.69*, %struct.context.69** %2, align 8, !dbg !9327
  %26 = getelementptr inbounds %struct.context.69, %struct.context.69* %25, i32 0, i32 23, !dbg !9329
  %27 = load i32, i32* %26, align 8, !dbg !9329
  %28 = bitcast i32* %sockerr to i8*, !dbg !9330
  %29 = call i32 @getsockopt(i32 %27, i32 1, i32 4, i8* %28, i32* %errlen) #10, !dbg !9331
  %30 = icmp ne i32 %29, 0, !dbg !9331
  br i1 %30, label %31, label %34, !dbg !9332

; <label>:31                                      ; preds = %24
  %32 = load %struct.context.69*, %struct.context.69** %2, align 8, !dbg !9333
  %33 = call i32 bitcast (i32 (%struct.context*, i32)* @request_abort to i32 (%struct.context.69*, i32)*)(%struct.context.69* %32, i32 -1), !dbg !9334
  store i32 %33, i32* %1, align 4, !dbg !9335
  br label %59, !dbg !9335

; <label>:34                                      ; preds = %24
  %35 = load i32, i32* %sockerr, align 4, !dbg !9336
  switch i32 %35, label %56 [
    i32 0, label %36
    i32 110, label %46
    i32 111, label %50
    i32 101, label %53
  ], !dbg !9337

; <label>:36                                      ; preds = %34
  %37 = load i8*, i8** %fn, align 8, !dbg !9338
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.6.271, i32 0, i32 0), i8* %37), !dbg !9340
  %38 = load %struct.context.69*, %struct.context.69** %2, align 8, !dbg !9341
  %39 = getelementptr inbounds %struct.context.69, %struct.context.69* %38, i32 0, i32 7, !dbg !9342
  %40 = bitcast {}** %39 to i32 (%struct.context.69*)**, !dbg !9342
  store i32 (%struct.context.69*)* @tcp_request_writing_process, i32 (%struct.context.69*)** %40, align 8, !dbg !9343
  %41 = load %struct.context.69*, %struct.context.69** %2, align 8, !dbg !9344
  %42 = getelementptr inbounds %struct.context.69, %struct.context.69* %41, i32 0, i32 8, !dbg !9345
  %43 = bitcast {}** %42 to i32 (%struct.context.69*)**, !dbg !9345
  store i32 (%struct.context.69*)* @tcp_request_writing_retry, i32 (%struct.context.69*)** %43, align 8, !dbg !9346
  %44 = load %struct.context.69*, %struct.context.69** %2, align 8, !dbg !9347
  %45 = getelementptr inbounds %struct.context.69, %struct.context.69* %44, i32 0, i32 18, !dbg !9348
  store i8* null, i8** %45, align 8, !dbg !9349
  store i32 0, i32* %1, align 4, !dbg !9350
  br label %59, !dbg !9350

; <label>:46                                      ; preds = %34
  %47 = load i8*, i8** %fn, align 8, !dbg !9351
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.7.289, i32 0, i32 0), i8* %47), !dbg !9352
  %48 = load %struct.context.69*, %struct.context.69** %2, align 8, !dbg !9353
  %49 = call i32 @tcp_request_wait_connect_retry(%struct.context.69* %48), !dbg !9354
  store i32 %49, i32* %1, align 4, !dbg !9355
  br label %59, !dbg !9355

; <label>:50                                      ; preds = %34
  call void (i32, i8*, ...) @syslog(i32 4, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.8.295, i32 0, i32 0)), !dbg !9356
  %51 = load %struct.context.69*, %struct.context.69** %2, align 8, !dbg !9357
  %52 = call i32 @tcp_request_wait_connect_retry(%struct.context.69* %51), !dbg !9358
  store i32 %52, i32* %1, align 4, !dbg !9359
  br label %59, !dbg !9359

; <label>:53                                      ; preds = %34
  call void (i32, i8*, ...) @syslog(i32 4, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.9.296, i32 0, i32 0)), !dbg !9360
  %54 = load %struct.context.69*, %struct.context.69** %2, align 8, !dbg !9361
  %55 = call i32 @tcp_request_wait_connect_retry(%struct.context.69* %54), !dbg !9362
  store i32 %55, i32* %1, align 4, !dbg !9363
  br label %59, !dbg !9363

; <label>:56                                      ; preds = %34
  %57 = load %struct.context.69*, %struct.context.69** %2, align 8, !dbg !9364
  %58 = call i32 bitcast (i32 (%struct.context*, i32)* @request_abort to i32 (%struct.context.69*, i32)*)(%struct.context.69* %57, i32 -1), !dbg !9365
  store i32 %58, i32* %1, align 4, !dbg !9366
  br label %59, !dbg !9366

; <label>:59                                      ; preds = %56, %53, %50, %46, %36, %31, %21
  %60 = load i32, i32* %1, align 4, !dbg !9367
  ret i32 %60, !dbg !9367
}

; Function Attrs: nounwind
declare i32 @getsockopt(i32, i32, i32, i8*, i32*) #5

; Function Attrs: nounwind uwtable
define i32 @tcp_request_writing_process(%struct.context.69* %cont) #0 !dbg !1079 {
  %1 = alloca i32, align 4
  %2 = alloca %struct.context.69*, align 8
  %fn = alloca i8*, align 8
  store %struct.context.69* %cont, %struct.context.69** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.context.69** %2, metadata !9368, metadata !2279), !dbg !9369
  call void @llvm.dbg.declare(metadata i8** %fn, metadata !9370, metadata !2279), !dbg !9371
  store i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.13.272, i32 0, i32 0), i8** %fn, align 8, !dbg !9371
  %3 = load i8*, i8** %fn, align 8, !dbg !9372
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1.269, i32 0, i32 0), i8* %3), !dbg !9373
  %4 = load %struct.context.69*, %struct.context.69** %2, align 8, !dbg !9374
  %5 = getelementptr inbounds %struct.context.69, %struct.context.69* %4, i32 0, i32 6, !dbg !9376
  %6 = load %struct.ev_to_data*, %struct.ev_to_data** %5, align 8, !dbg !9376
  %7 = icmp ne %struct.ev_to_data* %6, null, !dbg !9374
  br i1 %7, label %8, label %13, !dbg !9377

; <label>:8                                       ; preds = %0
  %9 = load %struct.context.69*, %struct.context.69** %2, align 8, !dbg !9378
  %10 = getelementptr inbounds %struct.context.69, %struct.context.69* %9, i32 0, i32 6, !dbg !9379
  %11 = load %struct.ev_to_data*, %struct.ev_to_data** %10, align 8, !dbg !9379
  %12 = getelementptr inbounds %struct.ev_to_data, %struct.ev_to_data* %11, i32 0, i32 1, !dbg !9380
  store i32 (%struct.ev_to_data*)* null, i32 (%struct.ev_to_data*)** %12, align 8, !dbg !9381
  br label %13, !dbg !9378

; <label>:13                                      ; preds = %8, %0
  %14 = load %struct.context.69*, %struct.context.69** %2, align 8, !dbg !9382
  %15 = load %struct.context.69*, %struct.context.69** %2, align 8, !dbg !9384
  %16 = getelementptr inbounds %struct.context.69, %struct.context.69* %15, i32 0, i32 21, !dbg !9385
  %17 = load i16, i16* %16, align 2, !dbg !9385
  %18 = zext i16 %17 to i32, !dbg !9384
  %19 = call i32 bitcast (i32 (%struct.context.19*, i32)* @context_timeout_register to i32 (%struct.context.69*, i32)*)(%struct.context.69* %14, i32 %18), !dbg !9386
  %20 = icmp ne i32 %19, 0, !dbg !9386
  br i1 %20, label %50, label %21, !dbg !9387

; <label>:21                                      ; preds = %13
  %22 = load %struct.context.69*, %struct.context.69** %2, align 8, !dbg !9388
  %23 = load %struct.context.69*, %struct.context.69** %2, align 8, !dbg !9390
  %24 = getelementptr inbounds %struct.context.69, %struct.context.69* %23, i32 0, i32 23, !dbg !9391
  %25 = load i32, i32* %24, align 8, !dbg !9391
  %26 = call i32 @tcp_writemesg(%struct.context.69* %22, i32 %25), !dbg !9392
  switch i32 %26, label %48 [
    i32 0, label %27
    i32 1, label %29
  ], !dbg !9393

; <label>:27                                      ; preds = %21
  %28 = load i8*, i8** %fn, align 8, !dbg !9394
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.14.276, i32 0, i32 0), i8* %28), !dbg !9396
  store i32 0, i32* %1, align 4, !dbg !9397
  br label %53, !dbg !9397

; <label>:29                                      ; preds = %21
  %30 = load %struct.context.69*, %struct.context.69** %2, align 8, !dbg !9398
  %31 = getelementptr inbounds %struct.context.69, %struct.context.69* %30, i32 0, i32 23, !dbg !9400
  %32 = load i32, i32* %31, align 8, !dbg !9400
  %33 = load %struct.context.69*, %struct.context.69** %2, align 8, !dbg !9401
  %34 = call i32 bitcast (i32 (i32, %struct.context*)* @ev_tcp_conn_in_register to i32 (i32, %struct.context.69*)*)(i32 %32, %struct.context.69* %33), !dbg !9402
  %35 = icmp ne i32 %34, 0, !dbg !9402
  br i1 %35, label %47, label %36, !dbg !9403

; <label>:36                                      ; preds = %29
  %37 = load %struct.context.69*, %struct.context.69** %2, align 8, !dbg !9404
  %38 = getelementptr inbounds %struct.context.69, %struct.context.69* %37, i32 0, i32 23, !dbg !9406
  %39 = load i32, i32* %38, align 8, !dbg !9406
  %40 = call i32 @ev_tcp_out_remove(i32 %39), !dbg !9407
  %41 = load %struct.context.69*, %struct.context.69** %2, align 8, !dbg !9408
  %42 = getelementptr inbounds %struct.context.69, %struct.context.69* %41, i32 0, i32 7, !dbg !9409
  %43 = bitcast {}** %42 to i32 (%struct.context.69*)**, !dbg !9409
  store i32 (%struct.context.69*)* @tcp_request_readlen_process, i32 (%struct.context.69*)** %43, align 8, !dbg !9410
  %44 = load %struct.context.69*, %struct.context.69** %2, align 8, !dbg !9411
  %45 = getelementptr inbounds %struct.context.69, %struct.context.69* %44, i32 0, i32 8, !dbg !9412
  %46 = bitcast {}** %45 to i32 (%struct.context.69*)**, !dbg !9412
  store i32 (%struct.context.69*)* @tcp_request_readlen_retry, i32 (%struct.context.69*)** %46, align 8, !dbg !9413
  store i32 0, i32* %1, align 4, !dbg !9414
  br label %53, !dbg !9414

; <label>:47                                      ; preds = %29
  br label %49, !dbg !9415

; <label>:48                                      ; preds = %21
  br label %49, !dbg !9416

; <label>:49                                      ; preds = %48, %47
  br label %50, !dbg !9417

; <label>:50                                      ; preds = %49, %13
  %51 = load %struct.context.69*, %struct.context.69** %2, align 8, !dbg !9418
  %52 = call i32 bitcast (i32 (%struct.context*, i32)* @request_abort to i32 (%struct.context.69*, i32)*)(%struct.context.69* %51, i32 -1), !dbg !9419
  store i32 %52, i32* %1, align 4, !dbg !9420
  br label %53, !dbg !9420

; <label>:53                                      ; preds = %50, %36, %27
  %54 = load i32, i32* %1, align 4, !dbg !9421
  ret i32 %54, !dbg !9421
}

; Function Attrs: nounwind uwtable
define i32 @tcp_writemesg(%struct.context.69* %cont, i32 %sock) #0 !dbg !1085 {
  %1 = alloca i32, align 4
  %2 = alloca %struct.context.69*, align 8
  %3 = alloca i32, align 4
  %fn = alloca i8*, align 8
  %lenbuf_nbo = alloca i16, align 2
  %len = alloca i32, align 4
  store %struct.context.69* %cont, %struct.context.69** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.context.69** %2, metadata !9422, metadata !2279), !dbg !9423
  store i32 %sock, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !9424, metadata !2279), !dbg !9425
  call void @llvm.dbg.declare(metadata i8** %fn, metadata !9426, metadata !2279), !dbg !9427
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.27.273, i32 0, i32 0), i8** %fn, align 8, !dbg !9427
  call void @llvm.dbg.declare(metadata i16* %lenbuf_nbo, metadata !9428, metadata !2279), !dbg !9429
  call void @llvm.dbg.declare(metadata i32* %len, metadata !9430, metadata !2279), !dbg !9431
  %4 = load %struct.context.69*, %struct.context.69** %2, align 8, !dbg !9432
  %5 = getelementptr inbounds %struct.context.69, %struct.context.69* %4, i32 0, i32 18, !dbg !9434
  %6 = load i8*, i8** %5, align 8, !dbg !9434
  %7 = icmp ne i8* %6, null, !dbg !9432
  br i1 %7, label %29, label %8, !dbg !9435

; <label>:8                                       ; preds = %0
  %9 = load %struct.context.69*, %struct.context.69** %2, align 8, !dbg !9436
  %10 = getelementptr inbounds %struct.context.69, %struct.context.69* %9, i32 0, i32 17, !dbg !9438
  %11 = load i32, i32* %10, align 8, !dbg !9438
  %12 = trunc i32 %11 to i16, !dbg !9436
  %13 = call zeroext i16 @htons(i16 zeroext %12) #1, !dbg !9439
  store i16 %13, i16* %lenbuf_nbo, align 2, !dbg !9440
  %14 = load i32, i32* %3, align 4, !dbg !9441
  %15 = bitcast i16* %lenbuf_nbo to i8*, !dbg !9442
  %16 = call i64 @write(i32 %14, i8* %15, i64 2), !dbg !9443
  %17 = trunc i64 %16 to i32, !dbg !9443
  store i32 %17, i32* %len, align 4, !dbg !9444
  %18 = load i32, i32* %len, align 4, !dbg !9445
  %19 = icmp slt i32 %18, 0, !dbg !9447
  br i1 %19, label %20, label %22, !dbg !9448

; <label>:20                                      ; preds = %8
  %21 = load i8*, i8** %fn, align 8, !dbg !9449
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.28.274, i32 0, i32 0), i8* %21), !dbg !9451
  store i32 -1, i32* %1, align 4, !dbg !9452
  br label %77, !dbg !9452

; <label>:22                                      ; preds = %8
  %23 = load %struct.context.69*, %struct.context.69** %2, align 8, !dbg !9453
  %24 = getelementptr inbounds %struct.context.69, %struct.context.69* %23, i32 0, i32 16, !dbg !9454
  %25 = bitcast %union.anon.0* %24 to i8**, !dbg !9455
  %26 = load i8*, i8** %25, align 8, !dbg !9455
  %27 = load %struct.context.69*, %struct.context.69** %2, align 8, !dbg !9456
  %28 = getelementptr inbounds %struct.context.69, %struct.context.69* %27, i32 0, i32 18, !dbg !9457
  store i8* %26, i8** %28, align 8, !dbg !9458
  store i32 0, i32* %1, align 4, !dbg !9459
  br label %77, !dbg !9459

; <label>:29                                      ; preds = %0
  %30 = load i32, i32* %3, align 4, !dbg !9460
  %31 = load %struct.context.69*, %struct.context.69** %2, align 8, !dbg !9461
  %32 = getelementptr inbounds %struct.context.69, %struct.context.69* %31, i32 0, i32 18, !dbg !9462
  %33 = load i8*, i8** %32, align 8, !dbg !9462
  %34 = load %struct.context.69*, %struct.context.69** %2, align 8, !dbg !9463
  %35 = getelementptr inbounds %struct.context.69, %struct.context.69* %34, i32 0, i32 17, !dbg !9464
  %36 = load i32, i32* %35, align 8, !dbg !9464
  %37 = sext i32 %36 to i64, !dbg !9463
  %38 = load %struct.context.69*, %struct.context.69** %2, align 8, !dbg !9465
  %39 = getelementptr inbounds %struct.context.69, %struct.context.69* %38, i32 0, i32 18, !dbg !9466
  %40 = load i8*, i8** %39, align 8, !dbg !9466
  %41 = load %struct.context.69*, %struct.context.69** %2, align 8, !dbg !9467
  %42 = getelementptr inbounds %struct.context.69, %struct.context.69* %41, i32 0, i32 16, !dbg !9468
  %43 = bitcast %union.anon.0* %42 to i8**, !dbg !9469
  %44 = load i8*, i8** %43, align 8, !dbg !9469
  %45 = ptrtoint i8* %40 to i64, !dbg !9470
  %46 = ptrtoint i8* %44 to i64, !dbg !9470
  %47 = sub i64 %45, %46, !dbg !9470
  %48 = sub nsw i64 %37, %47, !dbg !9471
  %49 = call i64 @write(i32 %30, i8* %33, i64 %48), !dbg !9472
  %50 = trunc i64 %49 to i32, !dbg !9472
  store i32 %50, i32* %len, align 4, !dbg !9473
  %51 = load i32, i32* %len, align 4, !dbg !9474
  %52 = icmp slt i32 %51, 0, !dbg !9476
  br i1 %52, label %53, label %55, !dbg !9477

; <label>:53                                      ; preds = %29
  %54 = load i8*, i8** %fn, align 8, !dbg !9478
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.29.275, i32 0, i32 0), i8* %54), !dbg !9480
  store i32 -1, i32* %1, align 4, !dbg !9481
  br label %77, !dbg !9481

; <label>:55                                      ; preds = %29
  %56 = load i32, i32* %len, align 4, !dbg !9482
  %57 = load %struct.context.69*, %struct.context.69** %2, align 8, !dbg !9483
  %58 = getelementptr inbounds %struct.context.69, %struct.context.69* %57, i32 0, i32 18, !dbg !9484
  %59 = load i8*, i8** %58, align 8, !dbg !9485
  %60 = sext i32 %56 to i64, !dbg !9485
  %61 = getelementptr inbounds i8, i8* %59, i64 %60, !dbg !9485
  store i8* %61, i8** %58, align 8, !dbg !9485
  %62 = load %struct.context.69*, %struct.context.69** %2, align 8, !dbg !9486
  %63 = getelementptr inbounds %struct.context.69, %struct.context.69* %62, i32 0, i32 18, !dbg !9488
  %64 = load i8*, i8** %63, align 8, !dbg !9488
  %65 = load %struct.context.69*, %struct.context.69** %2, align 8, !dbg !9489
  %66 = getelementptr inbounds %struct.context.69, %struct.context.69* %65, i32 0, i32 16, !dbg !9490
  %67 = bitcast %union.anon.0* %66 to i8**, !dbg !9491
  %68 = load i8*, i8** %67, align 8, !dbg !9491
  %69 = load %struct.context.69*, %struct.context.69** %2, align 8, !dbg !9492
  %70 = getelementptr inbounds %struct.context.69, %struct.context.69* %69, i32 0, i32 17, !dbg !9493
  %71 = load i32, i32* %70, align 8, !dbg !9493
  %72 = sext i32 %71 to i64, !dbg !9494
  %73 = getelementptr inbounds i8, i8* %68, i64 %72, !dbg !9494
  %74 = icmp ult i8* %64, %73, !dbg !9495
  br i1 %74, label %75, label %76, !dbg !9496

; <label>:75                                      ; preds = %55
  store i32 0, i32* %1, align 4, !dbg !9497
  br label %77, !dbg !9497

; <label>:76                                      ; preds = %55
  store i32 1, i32* %1, align 4, !dbg !9498
  br label %77, !dbg !9498

; <label>:77                                      ; preds = %76, %75, %53, %22, %20
  %78 = load i32, i32* %1, align 4, !dbg !9499
  ret i32 %78, !dbg !9499
}

declare i64 @write(i32, i8*, i64) #2

; Function Attrs: nounwind uwtable
define i32 @tcp_request_readlen_process(%struct.context.69* %cont) #0 !dbg !1081 {
  %1 = alloca i32, align 4
  %2 = alloca %struct.context.69*, align 8
  %fn = alloca i8*, align 8
  %length_buf = alloca i16, align 2
  store %struct.context.69* %cont, %struct.context.69** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.context.69** %2, metadata !9500, metadata !2279), !dbg !9501
  call void @llvm.dbg.declare(metadata i8** %fn, metadata !9502, metadata !2279), !dbg !9503
  store i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.16.277, i32 0, i32 0), i8** %fn, align 8, !dbg !9503
  call void @llvm.dbg.declare(metadata i16* %length_buf, metadata !9504, metadata !2279), !dbg !9505
  %3 = load i8*, i8** %fn, align 8, !dbg !9506
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1.269, i32 0, i32 0), i8* %3), !dbg !9507
  %4 = load %struct.context.69*, %struct.context.69** %2, align 8, !dbg !9508
  %5 = getelementptr inbounds %struct.context.69, %struct.context.69* %4, i32 0, i32 6, !dbg !9510
  %6 = load %struct.ev_to_data*, %struct.ev_to_data** %5, align 8, !dbg !9510
  %7 = icmp ne %struct.ev_to_data* %6, null, !dbg !9508
  br i1 %7, label %8, label %13, !dbg !9511

; <label>:8                                       ; preds = %0
  %9 = load %struct.context.69*, %struct.context.69** %2, align 8, !dbg !9512
  %10 = getelementptr inbounds %struct.context.69, %struct.context.69* %9, i32 0, i32 6, !dbg !9513
  %11 = load %struct.ev_to_data*, %struct.ev_to_data** %10, align 8, !dbg !9513
  %12 = getelementptr inbounds %struct.ev_to_data, %struct.ev_to_data* %11, i32 0, i32 1, !dbg !9514
  store i32 (%struct.ev_to_data*)* null, i32 (%struct.ev_to_data*)** %12, align 8, !dbg !9515
  br label %13, !dbg !9512

; <label>:13                                      ; preds = %8, %0
  %14 = load %struct.context.69*, %struct.context.69** %2, align 8, !dbg !9516
  %15 = load %struct.context.69*, %struct.context.69** %2, align 8, !dbg !9518
  %16 = getelementptr inbounds %struct.context.69, %struct.context.69* %15, i32 0, i32 21, !dbg !9519
  %17 = load i16, i16* %16, align 2, !dbg !9519
  %18 = zext i16 %17 to i32, !dbg !9518
  %19 = call i32 bitcast (i32 (%struct.context.19*, i32)* @context_timeout_register to i32 (%struct.context.69*, i32)*)(%struct.context.69* %14, i32 %18), !dbg !9520
  %20 = icmp slt i32 %19, 0, !dbg !9521
  br i1 %20, label %21, label %24, !dbg !9522

; <label>:21                                      ; preds = %13
  %22 = load %struct.context.69*, %struct.context.69** %2, align 8, !dbg !9523
  %23 = call i32 bitcast (i32 (%struct.context*, i32)* @request_abort to i32 (%struct.context.69*, i32)*)(%struct.context.69* %22, i32 -1), !dbg !9524
  store i32 %23, i32* %1, align 4, !dbg !9525
  br label %78, !dbg !9525

; <label>:24                                      ; preds = %13
  %25 = load %struct.context.69*, %struct.context.69** %2, align 8, !dbg !9526
  %26 = getelementptr inbounds %struct.context.69, %struct.context.69* %25, i32 0, i32 23, !dbg !9528
  %27 = load i32, i32* %26, align 8, !dbg !9528
  %28 = bitcast i16* %length_buf to i8*, !dbg !9529
  %29 = call i64 @read(i32 %27, i8* %28, i64 2), !dbg !9530
  %30 = icmp ult i64 %29, 2, !dbg !9531
  br i1 %30, label %31, label %34, !dbg !9532

; <label>:31                                      ; preds = %24
  call void (i32, i8*, ...) @syslog(i32 5, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.17.278, i32 0, i32 0)), !dbg !9533
  %32 = load %struct.context.69*, %struct.context.69** %2, align 8, !dbg !9535
  %33 = call i32 bitcast (i32 (%struct.context*, i32)* @request_abort to i32 (%struct.context.69*, i32)*)(%struct.context.69* %32, i32 -1), !dbg !9536
  store i32 %33, i32* %1, align 4, !dbg !9537
  br label %78, !dbg !9537

; <label>:34                                      ; preds = %24
  %35 = load i16, i16* %length_buf, align 2, !dbg !9538
  %36 = call zeroext i16 @ntohs(i16 zeroext %35) #1, !dbg !9539
  store i16 %36, i16* %length_buf, align 2, !dbg !9540
  %37 = load i8*, i8** %fn, align 8, !dbg !9541
  %38 = load i16, i16* %length_buf, align 2, !dbg !9542
  %39 = zext i16 %38 to i32, !dbg !9542
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.279, i32 0, i32 0), i8* %37, i32 %39), !dbg !9543
  %40 = load %struct.context.69*, %struct.context.69** %2, align 8, !dbg !9544
  %41 = getelementptr inbounds %struct.context.69, %struct.context.69* %40, i32 0, i32 16, !dbg !9545
  %42 = bitcast %union.anon.0* %41 to i8**, !dbg !9546
  %43 = load i8*, i8** %42, align 8, !dbg !9546
  call void @free(i8* %43) #10, !dbg !9547
  %44 = load %struct.context.69*, %struct.context.69** %2, align 8, !dbg !9548
  %45 = getelementptr inbounds %struct.context.69, %struct.context.69* %44, i32 0, i32 17, !dbg !9549
  store i32 0, i32* %45, align 8, !dbg !9550
  %46 = load i16, i16* %length_buf, align 2, !dbg !9551
  %47 = zext i16 %46 to i64, !dbg !9551
  %48 = call noalias i8* @malloc(i64 %47) #10, !dbg !9552
  %49 = load %struct.context.69*, %struct.context.69** %2, align 8, !dbg !9553
  %50 = getelementptr inbounds %struct.context.69, %struct.context.69* %49, i32 0, i32 16, !dbg !9554
  %51 = bitcast %union.anon.0* %50 to i8**, !dbg !9555
  store i8* %48, i8** %51, align 8, !dbg !9556
  %52 = load %struct.context.69*, %struct.context.69** %2, align 8, !dbg !9557
  %53 = getelementptr inbounds %struct.context.69, %struct.context.69* %52, i32 0, i32 16, !dbg !9559
  %54 = bitcast %union.anon.0* %53 to i8**, !dbg !9560
  %55 = load i8*, i8** %54, align 8, !dbg !9560
  %56 = icmp ne i8* %55, null, !dbg !9557
  br i1 %56, label %61, label %57, !dbg !9561

; <label>:57                                      ; preds = %34
  %58 = load i8*, i8** %fn, align 8, !dbg !9562
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.19.280, i32 0, i32 0), i8* %58), !dbg !9564
  %59 = load %struct.context.69*, %struct.context.69** %2, align 8, !dbg !9565
  %60 = call i32 bitcast (i32 (%struct.context*, i32)* @request_abort to i32 (%struct.context.69*, i32)*)(%struct.context.69* %59, i32 -1), !dbg !9566
  store i32 %60, i32* %1, align 4, !dbg !9567
  br label %78, !dbg !9567

; <label>:61                                      ; preds = %34
  %62 = load i16, i16* %length_buf, align 2, !dbg !9568
  %63 = zext i16 %62 to i32, !dbg !9568
  %64 = load %struct.context.69*, %struct.context.69** %2, align 8, !dbg !9569
  %65 = getelementptr inbounds %struct.context.69, %struct.context.69* %64, i32 0, i32 17, !dbg !9570
  store i32 %63, i32* %65, align 8, !dbg !9571
  %66 = load %struct.context.69*, %struct.context.69** %2, align 8, !dbg !9572
  %67 = getelementptr inbounds %struct.context.69, %struct.context.69* %66, i32 0, i32 16, !dbg !9573
  %68 = bitcast %union.anon.0* %67 to i8**, !dbg !9574
  %69 = load i8*, i8** %68, align 8, !dbg !9574
  %70 = load %struct.context.69*, %struct.context.69** %2, align 8, !dbg !9575
  %71 = getelementptr inbounds %struct.context.69, %struct.context.69* %70, i32 0, i32 18, !dbg !9576
  store i8* %69, i8** %71, align 8, !dbg !9577
  %72 = load %struct.context.69*, %struct.context.69** %2, align 8, !dbg !9578
  %73 = getelementptr inbounds %struct.context.69, %struct.context.69* %72, i32 0, i32 7, !dbg !9579
  %74 = bitcast {}** %73 to i32 (%struct.context.69*)**, !dbg !9579
  store i32 (%struct.context.69*)* @tcp_request_reading_process, i32 (%struct.context.69*)** %74, align 8, !dbg !9580
  %75 = load %struct.context.69*, %struct.context.69** %2, align 8, !dbg !9581
  %76 = getelementptr inbounds %struct.context.69, %struct.context.69* %75, i32 0, i32 8, !dbg !9582
  %77 = bitcast {}** %76 to i32 (%struct.context.69*)**, !dbg !9582
  store i32 (%struct.context.69*)* @tcp_request_reading_retry, i32 (%struct.context.69*)** %77, align 8, !dbg !9583
  store i32 0, i32* %1, align 4, !dbg !9584
  br label %78, !dbg !9584

; <label>:78                                      ; preds = %61, %57, %31, %21
  %79 = load i32, i32* %1, align 4, !dbg !9585
  ret i32 %79, !dbg !9585
}

declare i64 @read(i32, i8*, i64) #2

; Function Attrs: nounwind uwtable
define i32 @tcp_request_reading_process(%struct.context.69* %cont) #0 !dbg !1083 {
  %1 = alloca i32, align 4
  %2 = alloca %struct.context.69*, align 8
  %fn = alloca i8*, align 8
  %len = alloca i32, align 4
  store %struct.context.69* %cont, %struct.context.69** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.context.69** %2, metadata !9586, metadata !2279), !dbg !9587
  call void @llvm.dbg.declare(metadata i8** %fn, metadata !9588, metadata !2279), !dbg !9589
  store i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.24.281, i32 0, i32 0), i8** %fn, align 8, !dbg !9589
  %3 = load i8*, i8** %fn, align 8, !dbg !9590
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1.269, i32 0, i32 0), i8* %3), !dbg !9591
  %4 = load %struct.context.69*, %struct.context.69** %2, align 8, !dbg !9592
  %5 = getelementptr inbounds %struct.context.69, %struct.context.69* %4, i32 0, i32 6, !dbg !9594
  %6 = load %struct.ev_to_data*, %struct.ev_to_data** %5, align 8, !dbg !9594
  %7 = icmp ne %struct.ev_to_data* %6, null, !dbg !9592
  br i1 %7, label %8, label %13, !dbg !9595

; <label>:8                                       ; preds = %0
  %9 = load %struct.context.69*, %struct.context.69** %2, align 8, !dbg !9596
  %10 = getelementptr inbounds %struct.context.69, %struct.context.69* %9, i32 0, i32 6, !dbg !9597
  %11 = load %struct.ev_to_data*, %struct.ev_to_data** %10, align 8, !dbg !9597
  %12 = getelementptr inbounds %struct.ev_to_data, %struct.ev_to_data* %11, i32 0, i32 1, !dbg !9598
  store i32 (%struct.ev_to_data*)* null, i32 (%struct.ev_to_data*)** %12, align 8, !dbg !9599
  br label %13, !dbg !9596

; <label>:13                                      ; preds = %8, %0
  %14 = load %struct.context.69*, %struct.context.69** %2, align 8, !dbg !9600
  %15 = load %struct.context.69*, %struct.context.69** %2, align 8, !dbg !9602
  %16 = getelementptr inbounds %struct.context.69, %struct.context.69* %15, i32 0, i32 21, !dbg !9603
  %17 = load i16, i16* %16, align 2, !dbg !9603
  %18 = zext i16 %17 to i32, !dbg !9602
  %19 = call i32 bitcast (i32 (%struct.context.19*, i32)* @context_timeout_register to i32 (%struct.context.69*, i32)*)(%struct.context.69* %14, i32 %18), !dbg !9604
  %20 = icmp ne i32 %19, 0, !dbg !9604
  br i1 %20, label %74, label %21, !dbg !9605

; <label>:21                                      ; preds = %13
  call void @llvm.dbg.declare(metadata i32* %len, metadata !9606, metadata !2279), !dbg !9608
  %22 = load %struct.context.69*, %struct.context.69** %2, align 8, !dbg !9609
  %23 = getelementptr inbounds %struct.context.69, %struct.context.69* %22, i32 0, i32 23, !dbg !9610
  %24 = load i32, i32* %23, align 8, !dbg !9610
  %25 = load %struct.context.69*, %struct.context.69** %2, align 8, !dbg !9611
  %26 = getelementptr inbounds %struct.context.69, %struct.context.69* %25, i32 0, i32 18, !dbg !9612
  %27 = load i8*, i8** %26, align 8, !dbg !9612
  %28 = load %struct.context.69*, %struct.context.69** %2, align 8, !dbg !9613
  %29 = getelementptr inbounds %struct.context.69, %struct.context.69* %28, i32 0, i32 17, !dbg !9614
  %30 = load i32, i32* %29, align 8, !dbg !9614
  %31 = sext i32 %30 to i64, !dbg !9613
  %32 = load %struct.context.69*, %struct.context.69** %2, align 8, !dbg !9615
  %33 = getelementptr inbounds %struct.context.69, %struct.context.69* %32, i32 0, i32 18, !dbg !9616
  %34 = load i8*, i8** %33, align 8, !dbg !9616
  %35 = load %struct.context.69*, %struct.context.69** %2, align 8, !dbg !9617
  %36 = getelementptr inbounds %struct.context.69, %struct.context.69* %35, i32 0, i32 16, !dbg !9618
  %37 = bitcast %union.anon.0* %36 to i8**, !dbg !9619
  %38 = load i8*, i8** %37, align 8, !dbg !9619
  %39 = ptrtoint i8* %34 to i64, !dbg !9620
  %40 = ptrtoint i8* %38 to i64, !dbg !9620
  %41 = sub i64 %39, %40, !dbg !9620
  %42 = sub nsw i64 %31, %41, !dbg !9621
  %43 = call i64 @read(i32 %24, i8* %27, i64 %42), !dbg !9622
  %44 = trunc i64 %43 to i32, !dbg !9622
  store i32 %44, i32* %len, align 4, !dbg !9623
  %45 = load i32, i32* %len, align 4, !dbg !9624
  %46 = icmp sle i32 %45, 0, !dbg !9626
  br i1 %46, label %47, label %49, !dbg !9627

; <label>:47                                      ; preds = %21
  %48 = load i8*, i8** %fn, align 8, !dbg !9628
  call void (i32, i8*, ...) @syslog(i32 5, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.25.282, i32 0, i32 0), i8* %48), !dbg !9629
  br label %73, !dbg !9629

; <label>:49                                      ; preds = %21
  %50 = load i32, i32* %len, align 4, !dbg !9630
  %51 = load %struct.context.69*, %struct.context.69** %2, align 8, !dbg !9632
  %52 = getelementptr inbounds %struct.context.69, %struct.context.69* %51, i32 0, i32 18, !dbg !9633
  %53 = load i8*, i8** %52, align 8, !dbg !9634
  %54 = sext i32 %50 to i64, !dbg !9634
  %55 = getelementptr inbounds i8, i8* %53, i64 %54, !dbg !9634
  store i8* %55, i8** %52, align 8, !dbg !9634
  %56 = load %struct.context.69*, %struct.context.69** %2, align 8, !dbg !9635
  %57 = getelementptr inbounds %struct.context.69, %struct.context.69* %56, i32 0, i32 18, !dbg !9637
  %58 = load i8*, i8** %57, align 8, !dbg !9637
  %59 = load %struct.context.69*, %struct.context.69** %2, align 8, !dbg !9638
  %60 = getelementptr inbounds %struct.context.69, %struct.context.69* %59, i32 0, i32 16, !dbg !9639
  %61 = bitcast %union.anon.0* %60 to i8**, !dbg !9640
  %62 = load i8*, i8** %61, align 8, !dbg !9640
  %63 = load %struct.context.69*, %struct.context.69** %2, align 8, !dbg !9641
  %64 = getelementptr inbounds %struct.context.69, %struct.context.69* %63, i32 0, i32 17, !dbg !9642
  %65 = load i32, i32* %64, align 8, !dbg !9642
  %66 = sext i32 %65 to i64, !dbg !9643
  %67 = getelementptr inbounds i8, i8* %62, i64 %66, !dbg !9643
  %68 = icmp ult i8* %58, %67, !dbg !9644
  br i1 %68, label %69, label %70, !dbg !9645

; <label>:69                                      ; preds = %49
  store i32 0, i32* %1, align 4, !dbg !9646
  br label %77, !dbg !9646

; <label>:70                                      ; preds = %49
  %71 = load %struct.context.69*, %struct.context.69** %2, align 8, !dbg !9647
  %72 = call i32 bitcast (i32 (%struct.context*)* @request_finish to i32 (%struct.context.69*)*)(%struct.context.69* %71), !dbg !9648
  store i32 %72, i32* %1, align 4, !dbg !9649
  br label %77, !dbg !9649

; <label>:73                                      ; preds = %47
  br label %74, !dbg !9650

; <label>:74                                      ; preds = %73, %13
  %75 = load %struct.context.69*, %struct.context.69** %2, align 8, !dbg !9651
  %76 = call i32 bitcast (i32 (%struct.context*, i32)* @request_abort to i32 (%struct.context.69*, i32)*)(%struct.context.69* %75, i32 -1), !dbg !9652
  store i32 %76, i32* %1, align 4, !dbg !9653
  br label %77, !dbg !9653

; <label>:77                                      ; preds = %74, %70, %69
  %78 = load i32, i32* %1, align 4, !dbg !9654
  ret i32 %78, !dbg !9654
}

; Function Attrs: nounwind uwtable
define i32 @tcp_request_reading_retry(%struct.context.69* %cont) #0 !dbg !1084 {
  %1 = alloca %struct.context.69*, align 8
  store %struct.context.69* %cont, %struct.context.69** %1, align 8
  call void @llvm.dbg.declare(metadata %struct.context.69** %1, metadata !9655, metadata !2279), !dbg !9656
  call void (i32, i8*, ...) @syslog(i32 5, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.26.283, i32 0, i32 0)), !dbg !9657
  %2 = load %struct.context.69*, %struct.context.69** %1, align 8, !dbg !9658
  %3 = call i32 bitcast (i32 (%struct.context*, i32)* @request_abort to i32 (%struct.context.69*, i32)*)(%struct.context.69* %2, i32 -1), !dbg !9659
  ret i32 %3, !dbg !9660
}

; Function Attrs: nounwind uwtable
define i32 @tcp_request_readlen_retry(%struct.context.69* %cont) #0 !dbg !1082 {
  %1 = alloca i32, align 4
  %2 = alloca %struct.context.69*, align 8
  %fn = alloca i8*, align 8
  store %struct.context.69* %cont, %struct.context.69** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.context.69** %2, metadata !9661, metadata !2279), !dbg !9662
  call void @llvm.dbg.declare(metadata i8** %fn, metadata !9663, metadata !2279), !dbg !9664
  store i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.20.284, i32 0, i32 0), i8** %fn, align 8, !dbg !9664
  call void (i32, i8*, ...) @syslog(i32 5, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.21.285, i32 0, i32 0)), !dbg !9665
  %3 = load %struct.context.69*, %struct.context.69** %2, align 8, !dbg !9666
  %4 = getelementptr inbounds %struct.context.69, %struct.context.69* %3, i32 0, i32 12, !dbg !9668
  %5 = load i16, i16* %4, align 2, !dbg !9668
  %6 = zext i16 %5 to i32, !dbg !9666
  %7 = icmp eq i32 %6, 28, !dbg !9669
  br i1 %7, label %14, label %8, !dbg !9670

; <label>:8                                       ; preds = %0
  %9 = load %struct.context.69*, %struct.context.69** %2, align 8, !dbg !9671
  %10 = getelementptr inbounds %struct.context.69, %struct.context.69* %9, i32 0, i32 12, !dbg !9673
  %11 = load i16, i16* %10, align 2, !dbg !9673
  %12 = zext i16 %11 to i32, !dbg !9671
  %13 = icmp eq i32 %12, 38, !dbg !9674
  br i1 %13, label %14, label %70, !dbg !9675

; <label>:14                                      ; preds = %8, %0
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.22.286, i32 0, i32 0)), !dbg !9676
  %15 = load %struct.context.69*, %struct.context.69** %2, align 8, !dbg !9678
  %16 = getelementptr inbounds %struct.context.69, %struct.context.69* %15, i32 0, i32 13, !dbg !9679
  %17 = load %struct.generic_list*, %struct.generic_list** %16, align 8, !dbg !9679
  call void @list_destroy(%struct.generic_list* %17, void (i8*)* @rrset_freev), !dbg !9680
  %18 = load %struct.context.69*, %struct.context.69** %2, align 8, !dbg !9681
  %19 = getelementptr inbounds %struct.context.69, %struct.context.69* %18, i32 0, i32 14, !dbg !9682
  %20 = load %struct.generic_list*, %struct.generic_list** %19, align 8, !dbg !9682
  call void @list_destroy(%struct.generic_list* %20, void (i8*)* @rrset_freev), !dbg !9683
  %21 = load %struct.context.69*, %struct.context.69** %2, align 8, !dbg !9684
  %22 = getelementptr inbounds %struct.context.69, %struct.context.69* %21, i32 0, i32 15, !dbg !9685
  %23 = load %struct.generic_list*, %struct.generic_list** %22, align 8, !dbg !9685
  call void @list_destroy(%struct.generic_list* %23, void (i8*)* @rrset_freev), !dbg !9686
  %24 = call %struct.generic_list* @list_init(), !dbg !9687
  %25 = load %struct.context.69*, %struct.context.69** %2, align 8, !dbg !9688
  %26 = getelementptr inbounds %struct.context.69, %struct.context.69* %25, i32 0, i32 13, !dbg !9689
  store %struct.generic_list* %24, %struct.generic_list** %26, align 8, !dbg !9690
  %27 = call %struct.generic_list* @list_init(), !dbg !9691
  %28 = load %struct.context.69*, %struct.context.69** %2, align 8, !dbg !9692
  %29 = getelementptr inbounds %struct.context.69, %struct.context.69* %28, i32 0, i32 14, !dbg !9693
  store %struct.generic_list* %27, %struct.generic_list** %29, align 8, !dbg !9694
  %30 = call %struct.generic_list* @list_init(), !dbg !9695
  %31 = load %struct.context.69*, %struct.context.69** %2, align 8, !dbg !9696
  %32 = getelementptr inbounds %struct.context.69, %struct.context.69* %31, i32 0, i32 15, !dbg !9697
  store %struct.generic_list* %30, %struct.generic_list** %32, align 8, !dbg !9698
  %33 = load %struct.context.69*, %struct.context.69** %2, align 8, !dbg !9699
  %34 = getelementptr inbounds %struct.context.69, %struct.context.69* %33, i32 0, i32 13, !dbg !9701
  %35 = load %struct.generic_list*, %struct.generic_list** %34, align 8, !dbg !9701
  %36 = icmp ne %struct.generic_list* %35, null, !dbg !9699
  br i1 %36, label %37, label %47, !dbg !9702

; <label>:37                                      ; preds = %14
  %38 = load %struct.context.69*, %struct.context.69** %2, align 8, !dbg !9703
  %39 = getelementptr inbounds %struct.context.69, %struct.context.69* %38, i32 0, i32 14, !dbg !9705
  %40 = load %struct.generic_list*, %struct.generic_list** %39, align 8, !dbg !9705
  %41 = icmp ne %struct.generic_list* %40, null, !dbg !9703
  br i1 %41, label %42, label %47, !dbg !9706

; <label>:42                                      ; preds = %37
  %43 = load %struct.context.69*, %struct.context.69** %2, align 8, !dbg !9707
  %44 = getelementptr inbounds %struct.context.69, %struct.context.69* %43, i32 0, i32 15, !dbg !9709
  %45 = load %struct.generic_list*, %struct.generic_list** %44, align 8, !dbg !9709
  %46 = icmp ne %struct.generic_list* %45, null, !dbg !9707
  br i1 %46, label %50, label %47, !dbg !9710

; <label>:47                                      ; preds = %42, %37, %14
  %48 = load %struct.context.69*, %struct.context.69** %2, align 8, !dbg !9711
  %49 = call i32 bitcast (i32 (%struct.context*, i32)* @request_abort to i32 (%struct.context.69*, i32)*)(%struct.context.69* %48, i32 -1), !dbg !9712
  store i32 %49, i32* %1, align 4, !dbg !9713
  br label %73, !dbg !9713

; <label>:50                                      ; preds = %42
  %51 = load %struct.context.69*, %struct.context.69** %2, align 8, !dbg !9714
  %52 = getelementptr inbounds %struct.context.69, %struct.context.69* %51, i32 0, i32 0, !dbg !9716
  %53 = load %struct.context.69*, %struct.context.69** %52, align 8, !dbg !9716
  %54 = icmp ne %struct.context.69* %53, null, !dbg !9714
  br i1 %54, label %55, label %67, !dbg !9717

; <label>:55                                      ; preds = %50
  %56 = load i8*, i8** %fn, align 8, !dbg !9718
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.23.287, i32 0, i32 0), i8* %56), !dbg !9720
  %57 = load %struct.context.69*, %struct.context.69** %2, align 8, !dbg !9721
  %58 = getelementptr inbounds %struct.context.69, %struct.context.69* %57, i32 0, i32 0, !dbg !9722
  %59 = load %struct.context.69*, %struct.context.69** %58, align 8, !dbg !9722
  %60 = getelementptr inbounds %struct.context.69, %struct.context.69* %59, i32 0, i32 7, !dbg !9723
  %61 = bitcast {}** %60 to i32 (%struct.context.69*)**, !dbg !9723
  %62 = load i32 (%struct.context.69*)*, i32 (%struct.context.69*)** %61, align 8, !dbg !9723
  %63 = load %struct.context.69*, %struct.context.69** %2, align 8, !dbg !9724
  %64 = getelementptr inbounds %struct.context.69, %struct.context.69* %63, i32 0, i32 0, !dbg !9725
  %65 = load %struct.context.69*, %struct.context.69** %64, align 8, !dbg !9725
  %66 = call i32 %62(%struct.context.69* %65), !dbg !9721
  br label %67, !dbg !9726

; <label>:67                                      ; preds = %55, %50
  %68 = load %struct.context.69*, %struct.context.69** %2, align 8, !dbg !9727
  %69 = call i8* bitcast (i8* (%struct.context.19*)* @context_destroy to i8* (%struct.context.69*)*)(%struct.context.69* %68), !dbg !9728
  store i32 0, i32* %1, align 4, !dbg !9729
  br label %73, !dbg !9729

; <label>:70                                      ; preds = %8
  %71 = load %struct.context.69*, %struct.context.69** %2, align 8, !dbg !9730
  %72 = call i32 bitcast (i32 (%struct.context*, i32)* @request_abort to i32 (%struct.context.69*, i32)*)(%struct.context.69* %71, i32 -1), !dbg !9731
  store i32 %72, i32* %1, align 4, !dbg !9732
  br label %73, !dbg !9732

; <label>:73                                      ; preds = %70, %67, %47
  %74 = load i32, i32* %1, align 4, !dbg !9733
  ret i32 %74, !dbg !9733
}

; Function Attrs: nounwind uwtable
define i32 @tcp_request_writing_retry(%struct.context.69* %cont) #0 !dbg !1080 {
  %1 = alloca %struct.context.69*, align 8
  store %struct.context.69* %cont, %struct.context.69** %1, align 8
  call void @llvm.dbg.declare(metadata %struct.context.69** %1, metadata !9734, metadata !2279), !dbg !9735
  call void (i32, i8*, ...) @syslog(i32 5, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.15.288, i32 0, i32 0)), !dbg !9736
  %2 = load %struct.context.69*, %struct.context.69** %1, align 8, !dbg !9737
  %3 = call i32 bitcast (i32 (%struct.context*, i32)* @request_abort to i32 (%struct.context.69*, i32)*)(%struct.context.69* %2, i32 -1), !dbg !9738
  ret i32 %3, !dbg !9739
}

; Function Attrs: nounwind uwtable
define i32 @tcp_request_wait_connect_retry(%struct.context.69* %cont) #0 !dbg !1078 {
  %1 = alloca i32, align 4
  %2 = alloca %struct.context.69*, align 8
  %fn = alloca i8*, align 8
  %sa = alloca %struct.sockaddr*, align 8
  %on = alloca i32, align 4
  %sock = alloca i32, align 4
  %timeout = alloca i32, align 4
  store %struct.context.69* %cont, %struct.context.69** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.context.69** %2, metadata !9740, metadata !2279), !dbg !9741
  call void @llvm.dbg.declare(metadata i8** %fn, metadata !9742, metadata !2279), !dbg !9743
  store i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.10.290, i32 0, i32 0), i8** %fn, align 8, !dbg !9743
  call void @llvm.dbg.declare(metadata %struct.sockaddr** %sa, metadata !9744, metadata !2279), !dbg !9745
  call void @llvm.dbg.declare(metadata i32* %on, metadata !9746, metadata !2279), !dbg !9747
  store i32 1, i32* %on, align 4, !dbg !9747
  call void @llvm.dbg.declare(metadata i32* %sock, metadata !9748, metadata !2279), !dbg !9749
  call void @llvm.dbg.declare(metadata i32* %timeout, metadata !9750, metadata !2279), !dbg !9751
  %3 = load i8*, i8** %fn, align 8, !dbg !9752
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1.269, i32 0, i32 0), i8* %3), !dbg !9753
  %4 = load %struct.context.69*, %struct.context.69** %2, align 8, !dbg !9754
  %5 = getelementptr inbounds %struct.context.69, %struct.context.69* %4, i32 0, i32 6, !dbg !9756
  %6 = load %struct.ev_to_data*, %struct.ev_to_data** %5, align 8, !dbg !9756
  %7 = icmp ne %struct.ev_to_data* %6, null, !dbg !9754
  br i1 %7, label %8, label %13, !dbg !9757

; <label>:8                                       ; preds = %0
  %9 = load %struct.context.69*, %struct.context.69** %2, align 8, !dbg !9758
  %10 = getelementptr inbounds %struct.context.69, %struct.context.69* %9, i32 0, i32 6, !dbg !9759
  %11 = load %struct.ev_to_data*, %struct.ev_to_data** %10, align 8, !dbg !9759
  %12 = getelementptr inbounds %struct.ev_to_data, %struct.ev_to_data* %11, i32 0, i32 1, !dbg !9760
  store i32 (%struct.ev_to_data*)* null, i32 (%struct.ev_to_data*)** %12, align 8, !dbg !9761
  br label %13, !dbg !9758

; <label>:13                                      ; preds = %8, %0
  %14 = load %struct.context.69*, %struct.context.69** %2, align 8, !dbg !9762
  %15 = getelementptr inbounds %struct.context.69, %struct.context.69* %14, i32 0, i32 23, !dbg !9764
  %16 = load i32, i32* %15, align 8, !dbg !9764
  %17 = icmp sge i32 %16, 0, !dbg !9765
  br i1 %17, label %18, label %29, !dbg !9766

; <label>:18                                      ; preds = %13
  %19 = load %struct.context.69*, %struct.context.69** %2, align 8, !dbg !9767
  %20 = getelementptr inbounds %struct.context.69, %struct.context.69* %19, i32 0, i32 23, !dbg !9769
  %21 = load i32, i32* %20, align 8, !dbg !9769
  %22 = call i32 @ev_tcp_out_remove(i32 %21), !dbg !9770
  %23 = load %struct.context.69*, %struct.context.69** %2, align 8, !dbg !9771
  %24 = getelementptr inbounds %struct.context.69, %struct.context.69* %23, i32 0, i32 23, !dbg !9772
  %25 = load i32, i32* %24, align 8, !dbg !9772
  %26 = call i32 @close(i32 %25), !dbg !9773
  %27 = load %struct.context.69*, %struct.context.69** %2, align 8, !dbg !9774
  %28 = getelementptr inbounds %struct.context.69, %struct.context.69* %27, i32 0, i32 23, !dbg !9775
  store i32 -1, i32* %28, align 8, !dbg !9776
  br label %29, !dbg !9777

; <label>:29                                      ; preds = %18, %13
  %30 = load %struct.context.69*, %struct.context.69** %2, align 8, !dbg !9778
  %31 = call i32 bitcast (i32 (%struct.context*)* @request_retry to i32 (%struct.context.69*)*)(%struct.context.69* %30), !dbg !9780
  %32 = icmp slt i32 %31, 0, !dbg !9781
  br i1 %32, label %33, label %36, !dbg !9782

; <label>:33                                      ; preds = %29
  %34 = load %struct.context.69*, %struct.context.69** %2, align 8, !dbg !9783
  %35 = call i32 bitcast (i32 (%struct.context*, i32)* @request_abort to i32 (%struct.context.69*, i32)*)(%struct.context.69* %34, i32 -1), !dbg !9784
  store i32 %35, i32* %1, align 4, !dbg !9785
  br label %122, !dbg !9785

; <label>:36                                      ; preds = %29
  store i32 0, i32* %timeout, align 4, !dbg !9786
  %37 = load %struct.context.69*, %struct.context.69** %2, align 8, !dbg !9787
  %38 = getelementptr inbounds %struct.context.69, %struct.context.69* %37, i32 0, i32 5, !dbg !9788
  %39 = load %struct.generic_list*, %struct.generic_list** %38, align 8, !dbg !9788
  %40 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %39, i32 0, i32 2, !dbg !9789
  %41 = load i8*, i8** %40, align 8, !dbg !9789
  %42 = bitcast i8* %41 to %struct.sockaddr*, !dbg !9790
  store %struct.sockaddr* %42, %struct.sockaddr** %sa, align 8, !dbg !9791
  %43 = load %struct.sockaddr*, %struct.sockaddr** %sa, align 8, !dbg !9792
  %44 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %43, i32 0, i32 0, !dbg !9793
  %45 = load i16, i16* %44, align 2, !dbg !9793
  %46 = zext i16 %45 to i32, !dbg !9792
  %47 = call i32 @socket(i32 %46, i32 1, i32 0) #10, !dbg !9794
  store i32 %47, i32* %sock, align 4, !dbg !9795
  %48 = load i32, i32* %sock, align 4, !dbg !9796
  %49 = icmp eq i32 %48, -1, !dbg !9798
  br i1 %49, label %55, label %50, !dbg !9799

; <label>:50                                      ; preds = %36
  %51 = load i32, i32* %sock, align 4, !dbg !9800
  %52 = bitcast i32* %on to i8*, !dbg !9802
  %53 = call i32 (i32, i64, ...) @ioctl(i32 %51, i64 21537, i8* %52) #10, !dbg !9803
  %54 = icmp eq i32 %53, -1, !dbg !9804
  br i1 %54, label %55, label %59, !dbg !9805

; <label>:55                                      ; preds = %50, %36
  %56 = load i8*, i8** %fn, align 8, !dbg !9806
  call void (i32, i8*, ...) @syslog(i32 4, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.291, i32 0, i32 0), i8* %56), !dbg !9808
  %57 = load %struct.context.69*, %struct.context.69** %2, align 8, !dbg !9809
  %58 = call i32 bitcast (i32 (%struct.context*, i32)* @request_abort to i32 (%struct.context.69*, i32)*)(%struct.context.69* %57, i32 -1), !dbg !9810
  store i32 %58, i32* %1, align 4, !dbg !9811
  br label %122, !dbg !9811

; <label>:59                                      ; preds = %50
  %60 = load i32, i32* %sock, align 4, !dbg !9812
  %61 = load %struct.sockaddr*, %struct.sockaddr** %sa, align 8, !dbg !9814
  %62 = load %struct.sockaddr*, %struct.sockaddr** %sa, align 8, !dbg !9815
  %63 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %62, i32 0, i32 0, !dbg !9815
  %64 = load i16, i16* %63, align 2, !dbg !9815
  %65 = zext i16 %64 to i32, !dbg !9815
  %66 = icmp eq i32 %65, 10, !dbg !9815
  br i1 %66, label %67, label %68, !dbg !9815

; <label>:67                                      ; preds = %59
  br label %75, !dbg !9816

; <label>:68                                      ; preds = %59
  %69 = load %struct.sockaddr*, %struct.sockaddr** %sa, align 8, !dbg !9818
  %70 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %69, i32 0, i32 0, !dbg !9818
  %71 = load i16, i16* %70, align 2, !dbg !9818
  %72 = zext i16 %71 to i32, !dbg !9818
  %73 = icmp eq i32 %72, 2, !dbg !9818
  %74 = select i1 %73, i64 16, i64 16, !dbg !9818
  br label %75, !dbg !9818

; <label>:75                                      ; preds = %68, %67
  %76 = phi i64 [ 28, %67 ], [ %74, %68 ], !dbg !9820
  %77 = trunc i64 %76 to i32, !dbg !9820
  %78 = call i32 @connect(i32 %60, %struct.sockaddr* %61, i32 %77), !dbg !9822
  %79 = icmp ne i32 %78, 0, !dbg !9822
  br i1 %79, label %80, label %84, !dbg !9823

; <label>:80                                      ; preds = %75
  %81 = call i32* @__errno_location() #1, !dbg !9824
  %82 = load i32, i32* %81, align 4, !dbg !9824
  %83 = icmp eq i32 %82, 115, !dbg !9825
  br i1 %83, label %84, label %102, !dbg !9826

; <label>:84                                      ; preds = %80, %75
  %85 = load i32, i32* %sock, align 4, !dbg !9828
  %86 = load %struct.context.69*, %struct.context.69** %2, align 8, !dbg !9830
  %87 = getelementptr inbounds %struct.context.69, %struct.context.69* %86, i32 0, i32 23, !dbg !9831
  store i32 %85, i32* %87, align 8, !dbg !9832
  %88 = load %struct.context.69*, %struct.context.69** %2, align 8, !dbg !9833
  %89 = getelementptr inbounds %struct.context.69, %struct.context.69* %88, i32 0, i32 21, !dbg !9834
  %90 = load i16, i16* %89, align 2, !dbg !9834
  %91 = zext i16 %90 to i32, !dbg !9833
  store i32 %91, i32* %timeout, align 4, !dbg !9835
  %92 = load %struct.context.69*, %struct.context.69** %2, align 8, !dbg !9836
  %93 = getelementptr inbounds %struct.context.69, %struct.context.69* %92, i32 0, i32 23, !dbg !9838
  %94 = load i32, i32* %93, align 8, !dbg !9838
  %95 = load %struct.context.69*, %struct.context.69** %2, align 8, !dbg !9839
  %96 = call i32 bitcast (i32 (i32, %struct.context*)* @ev_tcp_out_register to i32 (i32, %struct.context.69*)*)(i32 %94, %struct.context.69* %95), !dbg !9840
  %97 = icmp slt i32 %96, 0, !dbg !9841
  br i1 %97, label %98, label %101, !dbg !9842

; <label>:98                                      ; preds = %84
  %99 = load %struct.context.69*, %struct.context.69** %2, align 8, !dbg !9843
  %100 = call i32 bitcast (i32 (%struct.context*, i32)* @request_abort to i32 (%struct.context.69*, i32)*)(%struct.context.69* %99, i32 -1), !dbg !9844
  store i32 %100, i32* %1, align 4, !dbg !9845
  br label %122, !dbg !9845

; <label>:101                                     ; preds = %84
  br label %102, !dbg !9846

; <label>:102                                     ; preds = %101, %80
  %103 = load i32, i32* %timeout, align 4, !dbg !9847
  %104 = icmp ne i32 %103, 0, !dbg !9847
  br i1 %104, label %108, label %105, !dbg !9849

; <label>:105                                     ; preds = %102
  %106 = load i8*, i8** %fn, align 8, !dbg !9850
  call void (i32, i8*, ...) @syslog(i32 4, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.11.292, i32 0, i32 0), i8* %106), !dbg !9852
  %107 = load i8*, i8** %fn, align 8, !dbg !9853
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.12.293, i32 0, i32 0), i8* %107), !dbg !9854
  br label %108, !dbg !9855

; <label>:108                                     ; preds = %105, %102
  %109 = load %struct.context.69*, %struct.context.69** %2, align 8, !dbg !9856
  %110 = load i32, i32* %timeout, align 4, !dbg !9858
  %111 = call i32 bitcast (i32 (%struct.context.19*, i32)* @context_timeout_register to i32 (%struct.context.69*, i32)*)(%struct.context.69* %109, i32 %110), !dbg !9859
  %112 = icmp slt i32 %111, 0, !dbg !9860
  br i1 %112, label %113, label %116, !dbg !9861

; <label>:113                                     ; preds = %108
  %114 = load %struct.context.69*, %struct.context.69** %2, align 8, !dbg !9862
  %115 = call i32 bitcast (i32 (%struct.context*, i32)* @request_abort to i32 (%struct.context.69*, i32)*)(%struct.context.69* %114, i32 -1), !dbg !9863
  store i32 %115, i32* %1, align 4, !dbg !9864
  br label %122, !dbg !9864

; <label>:116                                     ; preds = %108
  %117 = load i8*, i8** %fn, align 8, !dbg !9865
  %118 = load %struct.context.69*, %struct.context.69** %2, align 8, !dbg !9866
  %119 = getelementptr inbounds %struct.context.69, %struct.context.69* %118, i32 0, i32 21, !dbg !9867
  %120 = load i16, i16* %119, align 2, !dbg !9867
  %121 = zext i16 %120 to i32, !dbg !9866
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.4.294, i32 0, i32 0), i8* %117, i32 %121), !dbg !9868
  store i32 0, i32* %1, align 4, !dbg !9869
  br label %122, !dbg !9869

; <label>:122                                     ; preds = %116, %113, %98, %55, %33
  %123 = load i32, i32* %1, align 4, !dbg !9870
  ret i32 %123, !dbg !9870
}

; Function Attrs: nounwind
declare i32 @socket(i32, i32, i32) #5

; Function Attrs: nounwind
declare i32 @ioctl(i32, i64, ...) #5

declare i32 @connect(i32, %struct.sockaddr*, i32) #2

; Function Attrs: nounwind readnone
declare i32* @__errno_location() #6

; Function Attrs: nounwind uwtable
define i32 @tcp_response_start(i32 %sock, %struct.sockaddr* %sa_p) #0 !dbg !1091 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca %struct.sockaddr*, align 8
  %fn = alloca i8*, align 8
  %cont = alloca %struct.context*, align 8
  store i32 %sock, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !9871, metadata !2279), !dbg !9872
  store %struct.sockaddr* %sa_p, %struct.sockaddr** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.sockaddr** %3, metadata !9873, metadata !2279), !dbg !9874
  call void @llvm.dbg.declare(metadata i8** %fn, metadata !9875, metadata !2279), !dbg !9876
  store i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.300, i32 0, i32 0), i8** %fn, align 8, !dbg !9876
  call void @llvm.dbg.declare(metadata %struct.context** %cont, metadata !9877, metadata !2279), !dbg !9878
  %4 = load i8*, i8** %fn, align 8, !dbg !9879
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1.301, i32 0, i32 0), i8* %4), !dbg !9880
  %5 = call %struct.context* bitcast (%struct.context.19* ()* @context_create to %struct.context* ()*)(), !dbg !9881
  store %struct.context* %5, %struct.context** %cont, align 8, !dbg !9882
  %6 = load %struct.context*, %struct.context** %cont, align 8, !dbg !9883
  %7 = icmp ne %struct.context* %6, null, !dbg !9883
  br i1 %7, label %11, label %8, !dbg !9885

; <label>:8                                       ; preds = %0
  %9 = load %struct.context*, %struct.context** %cont, align 8, !dbg !9886
  %10 = call i32 @response_abort(%struct.context* %9, i32 -1), !dbg !9887
  store i32 %10, i32* %1, align 4, !dbg !9888
  br label %60, !dbg !9888

; <label>:11                                      ; preds = %0
  %12 = load %struct.context*, %struct.context** %cont, align 8, !dbg !9889
  %13 = getelementptr inbounds %struct.context, %struct.context* %12, i32 0, i32 7, !dbg !9890
  store i32 (%struct.context*)* @tcp_response_readlen_process, i32 (%struct.context*)** %13, align 8, !dbg !9891
  %14 = load %struct.context*, %struct.context** %cont, align 8, !dbg !9892
  %15 = getelementptr inbounds %struct.context, %struct.context* %14, i32 0, i32 8, !dbg !9893
  store i32 (%struct.context*)* @tcp_response_readlen_retry, i32 (%struct.context*)** %15, align 8, !dbg !9894
  %16 = load %struct.context*, %struct.context** %cont, align 8, !dbg !9895
  %17 = getelementptr inbounds %struct.context, %struct.context* %16, i32 0, i32 22, !dbg !9896
  %18 = load %struct.sockaddr*, %struct.sockaddr** %17, align 8, !dbg !9896
  %19 = bitcast %struct.sockaddr* %18 to i8*, !dbg !9897
  %20 = load %struct.sockaddr*, %struct.sockaddr** %3, align 8, !dbg !9898
  %21 = bitcast %struct.sockaddr* %20 to i8*, !dbg !9897
  %22 = load %struct.sockaddr*, %struct.sockaddr** %3, align 8, !dbg !9899
  %23 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %22, i32 0, i32 0, !dbg !9899
  %24 = load i16, i16* %23, align 2, !dbg !9899
  %25 = zext i16 %24 to i32, !dbg !9899
  %26 = icmp eq i32 %25, 10, !dbg !9899
  br i1 %26, label %27, label %28, !dbg !9899

; <label>:27                                      ; preds = %11
  br label %35, !dbg !9900

; <label>:28                                      ; preds = %11
  %29 = load %struct.sockaddr*, %struct.sockaddr** %3, align 8, !dbg !9902
  %30 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %29, i32 0, i32 0, !dbg !9902
  %31 = load i16, i16* %30, align 2, !dbg !9902
  %32 = zext i16 %31 to i32, !dbg !9902
  %33 = icmp eq i32 %32, 2, !dbg !9902
  %34 = select i1 %33, i64 16, i64 16, !dbg !9902
  br label %35, !dbg !9902

; <label>:35                                      ; preds = %28, %27
  %36 = phi i64 [ 28, %27 ], [ %34, %28 ], !dbg !9904
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %19, i8* %21, i64 %36, i32 2, i1 false), !dbg !9906
  %37 = load i32, i32* %2, align 4, !dbg !9907
  %38 = load %struct.context*, %struct.context** %cont, align 8, !dbg !9908
  %39 = getelementptr inbounds %struct.context, %struct.context* %38, i32 0, i32 23, !dbg !9909
  store i32 %37, i32* %39, align 8, !dbg !9910
  %40 = load %struct.context*, %struct.context** %cont, align 8, !dbg !9911
  %41 = getelementptr inbounds %struct.context, %struct.context* %40, i32 0, i32 21, !dbg !9912
  store i16 60, i16* %41, align 2, !dbg !9913
  %42 = load %struct.context*, %struct.context** %cont, align 8, !dbg !9914
  %43 = load %struct.context*, %struct.context** %cont, align 8, !dbg !9916
  %44 = getelementptr inbounds %struct.context, %struct.context* %43, i32 0, i32 21, !dbg !9917
  %45 = load i16, i16* %44, align 2, !dbg !9917
  %46 = zext i16 %45 to i32, !dbg !9916
  %47 = call i32 bitcast (i32 (%struct.context.19*, i32)* @context_timeout_register to i32 (%struct.context*, i32)*)(%struct.context* %42, i32 %46), !dbg !9918
  %48 = icmp ne i32 %47, 0, !dbg !9918
  br i1 %48, label %57, label %49, !dbg !9919

; <label>:49                                      ; preds = %35
  %50 = load %struct.context*, %struct.context** %cont, align 8, !dbg !9920
  %51 = getelementptr inbounds %struct.context, %struct.context* %50, i32 0, i32 23, !dbg !9921
  %52 = load i32, i32* %51, align 8, !dbg !9921
  %53 = load %struct.context*, %struct.context** %cont, align 8, !dbg !9922
  %54 = call i32 @ev_tcp_conn_in_register(i32 %52, %struct.context* %53), !dbg !9923
  %55 = icmp ne i32 %54, 0, !dbg !9923
  br i1 %55, label %57, label %56, !dbg !9924

; <label>:56                                      ; preds = %49
  store i32 0, i32* %1, align 4, !dbg !9925
  br label %60, !dbg !9925

; <label>:57                                      ; preds = %49, %35
  %58 = load %struct.context*, %struct.context** %cont, align 8, !dbg !9926
  %59 = call i32 @response_abort(%struct.context* %58, i32 -1), !dbg !9927
  store i32 %59, i32* %1, align 4, !dbg !9928
  br label %60, !dbg !9928

; <label>:60                                      ; preds = %57, %56, %8
  %61 = load i32, i32* %1, align 4, !dbg !9929
  ret i32 %61, !dbg !9929
}

; Function Attrs: nounwind uwtable
define i32 @tcp_response_readlen_process(%struct.context* %cont) #0 !dbg !1099 {
  %1 = alloca i32, align 4
  %2 = alloca %struct.context*, align 8
  %fn = alloca i8*, align 8
  %length_buf = alloca i16, align 2
  store %struct.context* %cont, %struct.context** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.context** %2, metadata !9930, metadata !2279), !dbg !9931
  call void @llvm.dbg.declare(metadata i8** %fn, metadata !9932, metadata !2279), !dbg !9933
  store i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.2.302, i32 0, i32 0), i8** %fn, align 8, !dbg !9933
  call void @llvm.dbg.declare(metadata i16* %length_buf, metadata !9934, metadata !2279), !dbg !9935
  %3 = load i8*, i8** %fn, align 8, !dbg !9936
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1.301, i32 0, i32 0), i8* %3), !dbg !9937
  %4 = load %struct.context*, %struct.context** %2, align 8, !dbg !9938
  %5 = getelementptr inbounds %struct.context, %struct.context* %4, i32 0, i32 6, !dbg !9940
  %6 = load %struct.ev_to_data*, %struct.ev_to_data** %5, align 8, !dbg !9940
  %7 = icmp ne %struct.ev_to_data* %6, null, !dbg !9938
  br i1 %7, label %8, label %13, !dbg !9941

; <label>:8                                       ; preds = %0
  %9 = load %struct.context*, %struct.context** %2, align 8, !dbg !9942
  %10 = getelementptr inbounds %struct.context, %struct.context* %9, i32 0, i32 6, !dbg !9943
  %11 = load %struct.ev_to_data*, %struct.ev_to_data** %10, align 8, !dbg !9943
  %12 = getelementptr inbounds %struct.ev_to_data, %struct.ev_to_data* %11, i32 0, i32 1, !dbg !9944
  store i32 (%struct.ev_to_data*)* null, i32 (%struct.ev_to_data*)** %12, align 8, !dbg !9945
  br label %13, !dbg !9942

; <label>:13                                      ; preds = %8, %0
  %14 = load %struct.context*, %struct.context** %2, align 8, !dbg !9946
  %15 = load %struct.context*, %struct.context** %2, align 8, !dbg !9948
  %16 = getelementptr inbounds %struct.context, %struct.context* %15, i32 0, i32 21, !dbg !9949
  %17 = load i16, i16* %16, align 2, !dbg !9949
  %18 = zext i16 %17 to i32, !dbg !9948
  %19 = call i32 bitcast (i32 (%struct.context.19*, i32)* @context_timeout_register to i32 (%struct.context*, i32)*)(%struct.context* %14, i32 %18), !dbg !9950
  %20 = icmp ne i32 %19, 0, !dbg !9950
  br i1 %20, label %21, label %24, !dbg !9951

; <label>:21                                      ; preds = %13
  %22 = load %struct.context*, %struct.context** %2, align 8, !dbg !9952
  %23 = call i32 @response_abort(%struct.context* %22, i32 -1), !dbg !9953
  store i32 %23, i32* %1, align 4, !dbg !9954
  br label %81, !dbg !9954

; <label>:24                                      ; preds = %13
  %25 = load %struct.context*, %struct.context** %2, align 8, !dbg !9955
  %26 = getelementptr inbounds %struct.context, %struct.context* %25, i32 0, i32 23, !dbg !9957
  %27 = load i32, i32* %26, align 8, !dbg !9957
  %28 = bitcast i16* %length_buf to i8*, !dbg !9958
  %29 = call i64 @read(i32 %27, i8* %28, i64 2), !dbg !9959
  %30 = icmp ult i64 %29, 2, !dbg !9960
  br i1 %30, label %31, label %35, !dbg !9961

; <label>:31                                      ; preds = %24
  %32 = load i8*, i8** %fn, align 8, !dbg !9962
  call void (i32, i8*, ...) @syslog(i32 5, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.3.303, i32 0, i32 0), i8* %32), !dbg !9964
  %33 = load %struct.context*, %struct.context** %2, align 8, !dbg !9965
  %34 = call i32 @response_abort(%struct.context* %33, i32 -1), !dbg !9966
  store i32 %34, i32* %1, align 4, !dbg !9967
  br label %81, !dbg !9967

; <label>:35                                      ; preds = %24
  %36 = load i16, i16* %length_buf, align 2, !dbg !9968
  %37 = call zeroext i16 @ntohs(i16 zeroext %36) #1, !dbg !9969
  store i16 %37, i16* %length_buf, align 2, !dbg !9970
  %38 = load i8*, i8** %fn, align 8, !dbg !9971
  %39 = load i16, i16* %length_buf, align 2, !dbg !9972
  %40 = zext i16 %39 to i32, !dbg !9972
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.304, i32 0, i32 0), i8* %38, i32 %40), !dbg !9973
  %41 = load %struct.context*, %struct.context** %2, align 8, !dbg !9974
  %42 = getelementptr inbounds %struct.context, %struct.context* %41, i32 0, i32 16, !dbg !9976
  %43 = bitcast %union.anon.0* %42 to i8**, !dbg !9977
  %44 = load i8*, i8** %43, align 8, !dbg !9977
  %45 = icmp ne i8* %44, null, !dbg !9974
  br i1 %45, label %46, label %51, !dbg !9978

; <label>:46                                      ; preds = %35
  %47 = load %struct.context*, %struct.context** %2, align 8, !dbg !9979
  %48 = getelementptr inbounds %struct.context, %struct.context* %47, i32 0, i32 16, !dbg !9980
  %49 = bitcast %union.anon.0* %48 to i8**, !dbg !9981
  %50 = load i8*, i8** %49, align 8, !dbg !9981
  call void @free(i8* %50) #10, !dbg !9982
  br label %51, !dbg !9982

; <label>:51                                      ; preds = %46, %35
  %52 = load i16, i16* %length_buf, align 2, !dbg !9983
  %53 = zext i16 %52 to i64, !dbg !9983
  %54 = call noalias i8* @malloc(i64 %53) #10, !dbg !9984
  %55 = load %struct.context*, %struct.context** %2, align 8, !dbg !9985
  %56 = getelementptr inbounds %struct.context, %struct.context* %55, i32 0, i32 16, !dbg !9986
  %57 = bitcast %union.anon.0* %56 to i8**, !dbg !9987
  store i8* %54, i8** %57, align 8, !dbg !9988
  %58 = load %struct.context*, %struct.context** %2, align 8, !dbg !9989
  %59 = getelementptr inbounds %struct.context, %struct.context* %58, i32 0, i32 16, !dbg !9991
  %60 = bitcast %union.anon.0* %59 to i8**, !dbg !9992
  %61 = load i8*, i8** %60, align 8, !dbg !9992
  %62 = icmp ne i8* %61, null, !dbg !9989
  br i1 %62, label %66, label %63, !dbg !9993

; <label>:63                                      ; preds = %51
  %64 = load %struct.context*, %struct.context** %2, align 8, !dbg !9994
  %65 = call i32 @response_abort(%struct.context* %64, i32 -1), !dbg !9995
  store i32 %65, i32* %1, align 4, !dbg !9996
  br label %81, !dbg !9996

; <label>:66                                      ; preds = %51
  %67 = load i16, i16* %length_buf, align 2, !dbg !9997
  %68 = zext i16 %67 to i32, !dbg !9997
  %69 = load %struct.context*, %struct.context** %2, align 8, !dbg !9998
  %70 = getelementptr inbounds %struct.context, %struct.context* %69, i32 0, i32 17, !dbg !9999
  store i32 %68, i32* %70, align 8, !dbg !10000
  %71 = load %struct.context*, %struct.context** %2, align 8, !dbg !10001
  %72 = getelementptr inbounds %struct.context, %struct.context* %71, i32 0, i32 16, !dbg !10002
  %73 = bitcast %union.anon.0* %72 to i8**, !dbg !10003
  %74 = load i8*, i8** %73, align 8, !dbg !10003
  %75 = load %struct.context*, %struct.context** %2, align 8, !dbg !10004
  %76 = getelementptr inbounds %struct.context, %struct.context* %75, i32 0, i32 18, !dbg !10005
  store i8* %74, i8** %76, align 8, !dbg !10006
  %77 = load %struct.context*, %struct.context** %2, align 8, !dbg !10007
  %78 = getelementptr inbounds %struct.context, %struct.context* %77, i32 0, i32 7, !dbg !10008
  store i32 (%struct.context*)* @tcp_response_reading_process, i32 (%struct.context*)** %78, align 8, !dbg !10009
  %79 = load %struct.context*, %struct.context** %2, align 8, !dbg !10010
  %80 = getelementptr inbounds %struct.context, %struct.context* %79, i32 0, i32 8, !dbg !10011
  store i32 (%struct.context*)* @tcp_response_reading_retry, i32 (%struct.context*)** %80, align 8, !dbg !10012
  store i32 0, i32* %1, align 4, !dbg !10013
  br label %81, !dbg !10013

; <label>:81                                      ; preds = %66, %63, %31, %21
  %82 = load i32, i32* %1, align 4, !dbg !10014
  ret i32 %82, !dbg !10014
}

; Function Attrs: nounwind uwtable
define i32 @tcp_response_reading_process(%struct.context* %cont) #0 !dbg !1185 {
  %1 = alloca i32, align 4
  %2 = alloca %struct.context*, align 8
  %fn = alloca i8*, align 8
  %len = alloca i32, align 4
  store %struct.context* %cont, %struct.context** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.context** %2, metadata !10015, metadata !2279), !dbg !10016
  call void @llvm.dbg.declare(metadata i8** %fn, metadata !10017, metadata !2279), !dbg !10018
  store i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.7.305, i32 0, i32 0), i8** %fn, align 8, !dbg !10018
  call void @llvm.dbg.declare(metadata i32* %len, metadata !10019, metadata !2279), !dbg !10020
  %3 = load i8*, i8** %fn, align 8, !dbg !10021
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1.301, i32 0, i32 0), i8* %3), !dbg !10022
  %4 = load %struct.context*, %struct.context** %2, align 8, !dbg !10023
  %5 = getelementptr inbounds %struct.context, %struct.context* %4, i32 0, i32 6, !dbg !10025
  %6 = load %struct.ev_to_data*, %struct.ev_to_data** %5, align 8, !dbg !10025
  %7 = icmp ne %struct.ev_to_data* %6, null, !dbg !10023
  br i1 %7, label %8, label %13, !dbg !10026

; <label>:8                                       ; preds = %0
  %9 = load %struct.context*, %struct.context** %2, align 8, !dbg !10027
  %10 = getelementptr inbounds %struct.context, %struct.context* %9, i32 0, i32 6, !dbg !10028
  %11 = load %struct.ev_to_data*, %struct.ev_to_data** %10, align 8, !dbg !10028
  %12 = getelementptr inbounds %struct.ev_to_data, %struct.ev_to_data* %11, i32 0, i32 1, !dbg !10029
  store i32 (%struct.ev_to_data*)* null, i32 (%struct.ev_to_data*)** %12, align 8, !dbg !10030
  br label %13, !dbg !10027

; <label>:13                                      ; preds = %8, %0
  %14 = load %struct.context*, %struct.context** %2, align 8, !dbg !10031
  %15 = load %struct.context*, %struct.context** %2, align 8, !dbg !10033
  %16 = getelementptr inbounds %struct.context, %struct.context* %15, i32 0, i32 21, !dbg !10034
  %17 = load i16, i16* %16, align 2, !dbg !10034
  %18 = zext i16 %17 to i32, !dbg !10033
  %19 = call i32 bitcast (i32 (%struct.context.19*, i32)* @context_timeout_register to i32 (%struct.context*, i32)*)(%struct.context* %14, i32 %18), !dbg !10035
  %20 = icmp ne i32 %19, 0, !dbg !10035
  br i1 %20, label %21, label %24, !dbg !10036

; <label>:21                                      ; preds = %13
  %22 = load %struct.context*, %struct.context** %2, align 8, !dbg !10037
  %23 = call i32 @response_abort(%struct.context* %22, i32 -1), !dbg !10038
  store i32 %23, i32* %1, align 4, !dbg !10039
  br label %184, !dbg !10039

; <label>:24                                      ; preds = %13
  %25 = load %struct.context*, %struct.context** %2, align 8, !dbg !10040
  %26 = getelementptr inbounds %struct.context, %struct.context* %25, i32 0, i32 23, !dbg !10041
  %27 = load i32, i32* %26, align 8, !dbg !10041
  %28 = load %struct.context*, %struct.context** %2, align 8, !dbg !10042
  %29 = getelementptr inbounds %struct.context, %struct.context* %28, i32 0, i32 18, !dbg !10043
  %30 = load i8*, i8** %29, align 8, !dbg !10043
  %31 = load %struct.context*, %struct.context** %2, align 8, !dbg !10044
  %32 = getelementptr inbounds %struct.context, %struct.context* %31, i32 0, i32 17, !dbg !10045
  %33 = load i32, i32* %32, align 8, !dbg !10045
  %34 = sext i32 %33 to i64, !dbg !10044
  %35 = load %struct.context*, %struct.context** %2, align 8, !dbg !10046
  %36 = getelementptr inbounds %struct.context, %struct.context* %35, i32 0, i32 18, !dbg !10047
  %37 = load i8*, i8** %36, align 8, !dbg !10047
  %38 = load %struct.context*, %struct.context** %2, align 8, !dbg !10048
  %39 = getelementptr inbounds %struct.context, %struct.context* %38, i32 0, i32 16, !dbg !10049
  %40 = bitcast %union.anon.0* %39 to i8**, !dbg !10050
  %41 = load i8*, i8** %40, align 8, !dbg !10050
  %42 = ptrtoint i8* %37 to i64, !dbg !10051
  %43 = ptrtoint i8* %41 to i64, !dbg !10051
  %44 = sub i64 %42, %43, !dbg !10051
  %45 = sub nsw i64 %34, %44, !dbg !10052
  %46 = call i64 @read(i32 %27, i8* %30, i64 %45), !dbg !10053
  %47 = trunc i64 %46 to i32, !dbg !10053
  store i32 %47, i32* %len, align 4, !dbg !10054
  %48 = load i32, i32* %len, align 4, !dbg !10055
  %49 = icmp sle i32 %48, 0, !dbg !10057
  br i1 %49, label %50, label %53, !dbg !10058

; <label>:50                                      ; preds = %24
  %51 = load %struct.context*, %struct.context** %2, align 8, !dbg !10059
  %52 = call i32 @response_abort(%struct.context* %51, i32 -1), !dbg !10060
  store i32 %52, i32* %1, align 4, !dbg !10061
  br label %184, !dbg !10061

; <label>:53                                      ; preds = %24
  %54 = load i32, i32* %len, align 4, !dbg !10062
  %55 = load %struct.context*, %struct.context** %2, align 8, !dbg !10063
  %56 = getelementptr inbounds %struct.context, %struct.context* %55, i32 0, i32 18, !dbg !10064
  %57 = load i8*, i8** %56, align 8, !dbg !10065
  %58 = sext i32 %54 to i64, !dbg !10065
  %59 = getelementptr inbounds i8, i8* %57, i64 %58, !dbg !10065
  store i8* %59, i8** %56, align 8, !dbg !10065
  %60 = load %struct.context*, %struct.context** %2, align 8, !dbg !10066
  %61 = getelementptr inbounds %struct.context, %struct.context* %60, i32 0, i32 18, !dbg !10068
  %62 = load i8*, i8** %61, align 8, !dbg !10068
  %63 = load %struct.context*, %struct.context** %2, align 8, !dbg !10069
  %64 = getelementptr inbounds %struct.context, %struct.context* %63, i32 0, i32 16, !dbg !10070
  %65 = bitcast %union.anon.0* %64 to i8**, !dbg !10071
  %66 = load i8*, i8** %65, align 8, !dbg !10071
  %67 = load %struct.context*, %struct.context** %2, align 8, !dbg !10072
  %68 = getelementptr inbounds %struct.context, %struct.context* %67, i32 0, i32 17, !dbg !10073
  %69 = load i32, i32* %68, align 8, !dbg !10073
  %70 = sext i32 %69 to i64, !dbg !10074
  %71 = getelementptr inbounds i8, i8* %66, i64 %70, !dbg !10074
  %72 = icmp ult i8* %62, %71, !dbg !10075
  br i1 %72, label %73, label %90, !dbg !10076

; <label>:73                                      ; preds = %53
  %74 = load i8*, i8** %fn, align 8, !dbg !10077
  %75 = load %struct.context*, %struct.context** %2, align 8, !dbg !10079
  %76 = getelementptr inbounds %struct.context, %struct.context* %75, i32 0, i32 16, !dbg !10080
  %77 = bitcast %union.anon.0* %76 to i8**, !dbg !10081
  %78 = load i8*, i8** %77, align 8, !dbg !10081
  %79 = load %struct.context*, %struct.context** %2, align 8, !dbg !10082
  %80 = getelementptr inbounds %struct.context, %struct.context* %79, i32 0, i32 17, !dbg !10083
  %81 = load i32, i32* %80, align 8, !dbg !10083
  %82 = sext i32 %81 to i64, !dbg !10084
  %83 = getelementptr inbounds i8, i8* %78, i64 %82, !dbg !10084
  %84 = load %struct.context*, %struct.context** %2, align 8, !dbg !10085
  %85 = getelementptr inbounds %struct.context, %struct.context* %84, i32 0, i32 18, !dbg !10086
  %86 = load i8*, i8** %85, align 8, !dbg !10086
  %87 = ptrtoint i8* %83 to i64, !dbg !10087
  %88 = ptrtoint i8* %86 to i64, !dbg !10087
  %89 = sub i64 %87, %88, !dbg !10087
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.8.306, i32 0, i32 0), i8* %74, i64 %89), !dbg !10088
  store i32 0, i32* %1, align 4, !dbg !10089
  br label %184, !dbg !10089

; <label>:90                                      ; preds = %53
  %91 = load %struct.context*, %struct.context** %2, align 8, !dbg !10090
  %92 = getelementptr inbounds %struct.context, %struct.context* %91, i32 0, i32 23, !dbg !10091
  %93 = load i32, i32* %92, align 8, !dbg !10091
  %94 = call i32 @ev_tcp_conn_in_remove(i32 %93), !dbg !10092
  %95 = load %struct.context*, %struct.context** %2, align 8, !dbg !10093
  %96 = getelementptr inbounds %struct.context, %struct.context* %95, i32 0, i32 16, !dbg !10095
  %97 = bitcast %union.anon.0* %96 to %struct.mesg_hdr**, !dbg !10096
  %98 = load %struct.mesg_hdr*, %struct.mesg_hdr** %97, align 8, !dbg !10096
  %99 = getelementptr inbounds %struct.mesg_hdr, %struct.mesg_hdr* %98, i32 0, i32 1, !dbg !10097
  %100 = load i16, i16* %99, align 2, !dbg !10097
  %101 = lshr i16 %100, 3, !dbg !10097
  %102 = and i16 %101, 15, !dbg !10097
  %103 = trunc i16 %102 to i8, !dbg !10097
  %104 = zext i8 %103 to i32, !dbg !10093
  %105 = icmp eq i32 %104, 0, !dbg !10098
  br i1 %105, label %106, label %155, !dbg !10099

; <label>:106                                     ; preds = %90
  %107 = load %struct.context*, %struct.context** %2, align 8, !dbg !10100
  %108 = getelementptr inbounds %struct.context, %struct.context* %107, i32 0, i32 6, !dbg !10103
  %109 = load %struct.ev_to_data*, %struct.ev_to_data** %108, align 8, !dbg !10103
  %110 = icmp ne %struct.ev_to_data* %109, null, !dbg !10100
  br i1 %110, label %111, label %116, !dbg !10104

; <label>:111                                     ; preds = %106
  %112 = load %struct.context*, %struct.context** %2, align 8, !dbg !10105
  %113 = getelementptr inbounds %struct.context, %struct.context* %112, i32 0, i32 6, !dbg !10106
  %114 = load %struct.ev_to_data*, %struct.ev_to_data** %113, align 8, !dbg !10106
  %115 = getelementptr inbounds %struct.ev_to_data, %struct.ev_to_data* %114, i32 0, i32 1, !dbg !10107
  store i32 (%struct.ev_to_data*)* null, i32 (%struct.ev_to_data*)** %115, align 8, !dbg !10108
  br label %116, !dbg !10105

; <label>:116                                     ; preds = %111, %106
  %117 = load %struct.context*, %struct.context** %2, align 8, !dbg !10109
  %118 = call i32 @request_start(%struct.context* %117, i32 0), !dbg !10110
  switch i32 %118, label %144 [
    i32 0, label %119
    i32 1, label %134
  ], !dbg !10111

; <label>:119                                     ; preds = %116
  %120 = load %struct.context*, %struct.context** %2, align 8, !dbg !10112
  %121 = getelementptr inbounds %struct.context, %struct.context* %120, i32 0, i32 6, !dbg !10115
  %122 = load %struct.ev_to_data*, %struct.ev_to_data** %121, align 8, !dbg !10115
  %123 = icmp ne %struct.ev_to_data* %122, null, !dbg !10112
  br i1 %123, label %124, label %129, !dbg !10116

; <label>:124                                     ; preds = %119
  %125 = load %struct.context*, %struct.context** %2, align 8, !dbg !10117
  %126 = getelementptr inbounds %struct.context, %struct.context* %125, i32 0, i32 6, !dbg !10118
  %127 = load %struct.ev_to_data*, %struct.ev_to_data** %126, align 8, !dbg !10118
  %128 = getelementptr inbounds %struct.ev_to_data, %struct.ev_to_data* %127, i32 0, i32 1, !dbg !10119
  store i32 (%struct.ev_to_data*)* null, i32 (%struct.ev_to_data*)** %128, align 8, !dbg !10120
  br label %129, !dbg !10117

; <label>:129                                     ; preds = %124, %119
  %130 = load %struct.context*, %struct.context** %2, align 8, !dbg !10121
  %131 = getelementptr inbounds %struct.context, %struct.context* %130, i32 0, i32 7, !dbg !10122
  store i32 (%struct.context*)* @tcp_response_recursive_process, i32 (%struct.context*)** %131, align 8, !dbg !10123
  %132 = load %struct.context*, %struct.context** %2, align 8, !dbg !10124
  %133 = getelementptr inbounds %struct.context, %struct.context* %132, i32 0, i32 8, !dbg !10125
  store i32 (%struct.context*)* @tcp_response_recursive_retry, i32 (%struct.context*)** %133, align 8, !dbg !10126
  store i32 0, i32* %1, align 4, !dbg !10127
  br label %184, !dbg !10127

; <label>:134                                     ; preds = %116
  %135 = load i8*, i8** %fn, align 8, !dbg !10128
  call void (i32, i8*, ...) @syslog(i32 5, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.9.317, i32 0, i32 0), i8* %135), !dbg !10129
  %136 = load %struct.context*, %struct.context** %2, align 8, !dbg !10130
  %137 = getelementptr inbounds %struct.context, %struct.context* %136, i32 0, i32 16, !dbg !10131
  %138 = bitcast %union.anon.0* %137 to %struct.mesg_hdr**, !dbg !10132
  %139 = load %struct.mesg_hdr*, %struct.mesg_hdr** %138, align 8, !dbg !10132
  %140 = getelementptr inbounds %struct.mesg_hdr, %struct.mesg_hdr* %139, i32 0, i32 1, !dbg !10133
  %141 = load i16, i16* %140, align 2, !dbg !10134
  %142 = and i16 %141, -3841, !dbg !10134
  %143 = or i16 %142, 256, !dbg !10134
  store i16 %143, i16* %140, align 2, !dbg !10134
  br label %144, !dbg !10130

; <label>:144                                     ; preds = %116, %134
  %145 = load i8*, i8** %fn, align 8, !dbg !10135
  call void (i32, i8*, ...) @syslog(i32 5, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.10.318, i32 0, i32 0), i8* %145), !dbg !10136
  %146 = load %struct.context*, %struct.context** %2, align 8, !dbg !10137
  %147 = getelementptr inbounds %struct.context, %struct.context* %146, i32 0, i32 16, !dbg !10138
  %148 = bitcast %union.anon.0* %147 to %struct.mesg_hdr**, !dbg !10139
  %149 = load %struct.mesg_hdr*, %struct.mesg_hdr** %148, align 8, !dbg !10139
  %150 = getelementptr inbounds %struct.mesg_hdr, %struct.mesg_hdr* %149, i32 0, i32 1, !dbg !10140
  %151 = load i16, i16* %150, align 2, !dbg !10141
  %152 = and i16 %151, -3841, !dbg !10141
  %153 = or i16 %152, 512, !dbg !10141
  store i16 %153, i16* %150, align 2, !dbg !10141
  br label %154, !dbg !10142

; <label>:154                                     ; preds = %144
  br label %164, !dbg !10143

; <label>:155                                     ; preds = %90
  %156 = load %struct.context*, %struct.context** %2, align 8, !dbg !10144
  %157 = getelementptr inbounds %struct.context, %struct.context* %156, i32 0, i32 16, !dbg !10145
  %158 = bitcast %union.anon.0* %157 to %struct.mesg_hdr**, !dbg !10146
  %159 = load %struct.mesg_hdr*, %struct.mesg_hdr** %158, align 8, !dbg !10146
  %160 = getelementptr inbounds %struct.mesg_hdr, %struct.mesg_hdr* %159, i32 0, i32 1, !dbg !10147
  %161 = load i16, i16* %160, align 2, !dbg !10148
  %162 = and i16 %161, -3841, !dbg !10148
  %163 = or i16 %162, 1024, !dbg !10148
  store i16 %163, i16* %160, align 2, !dbg !10148
  br label %164

; <label>:164                                     ; preds = %155, %154
  %165 = load %struct.context*, %struct.context** %2, align 8, !dbg !10149
  %166 = getelementptr inbounds %struct.context, %struct.context* %165, i32 0, i32 23, !dbg !10151
  %167 = load i32, i32* %166, align 8, !dbg !10151
  %168 = load %struct.context*, %struct.context** %2, align 8, !dbg !10152
  %169 = call i32 @ev_tcp_out_register(i32 %167, %struct.context* %168), !dbg !10153
  %170 = icmp ne i32 %169, 0, !dbg !10153
  br i1 %170, label %181, label %171, !dbg !10154

; <label>:171                                     ; preds = %164
  %172 = load %struct.context*, %struct.context** %2, align 8, !dbg !10155
  %173 = call i32 @assemble_response(%struct.context* %172), !dbg !10157
  %174 = load %struct.context*, %struct.context** %2, align 8, !dbg !10158
  %175 = getelementptr inbounds %struct.context, %struct.context* %174, i32 0, i32 7, !dbg !10159
  store i32 (%struct.context*)* @tcp_response_writing_process, i32 (%struct.context*)** %175, align 8, !dbg !10160
  %176 = load %struct.context*, %struct.context** %2, align 8, !dbg !10161
  %177 = getelementptr inbounds %struct.context, %struct.context* %176, i32 0, i32 8, !dbg !10162
  store i32 (%struct.context*)* @tcp_response_writing_retry, i32 (%struct.context*)** %177, align 8, !dbg !10163
  %178 = load %struct.context*, %struct.context** %2, align 8, !dbg !10164
  %179 = getelementptr inbounds %struct.context, %struct.context* %178, i32 0, i32 18, !dbg !10165
  store i8* null, i8** %179, align 8, !dbg !10166
  %180 = load i8*, i8** %fn, align 8, !dbg !10167
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.11.319, i32 0, i32 0), i8* %180), !dbg !10168
  store i32 0, i32* %1, align 4, !dbg !10169
  br label %184, !dbg !10169

; <label>:181                                     ; preds = %164
  %182 = load %struct.context*, %struct.context** %2, align 8, !dbg !10170
  %183 = call i32 @response_abort(%struct.context* %182, i32 -1), !dbg !10171
  store i32 %183, i32* %1, align 4, !dbg !10172
  br label %184, !dbg !10172

; <label>:184                                     ; preds = %181, %171, %129, %73, %50, %21
  %185 = load i32, i32* %1, align 4, !dbg !10173
  ret i32 %185, !dbg !10173
}

; Function Attrs: nounwind uwtable
define i32 @tcp_response_recursive_process(%struct.context* %cont) #0 !dbg !1187 {
  %1 = alloca i32, align 4
  %2 = alloca %struct.context*, align 8
  %fn = alloca i8*, align 8
  store %struct.context* %cont, %struct.context** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.context** %2, metadata !10174, metadata !2279), !dbg !10175
  call void @llvm.dbg.declare(metadata i8** %fn, metadata !10176, metadata !2279), !dbg !10177
  store i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.12.307, i32 0, i32 0), i8** %fn, align 8, !dbg !10177
  %3 = load i8*, i8** %fn, align 8, !dbg !10178
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1.301, i32 0, i32 0), i8* %3), !dbg !10179
  %4 = load %struct.context*, %struct.context** %2, align 8, !dbg !10180
  %5 = call i32 @recursive_process(%struct.context* %4), !dbg !10181
  switch i32 %5, label %62 [
    i32 0, label %6
    i32 1, label %8
  ], !dbg !10182

; <label>:6                                       ; preds = %0
  %7 = load i8*, i8** %fn, align 8, !dbg !10183
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.13.308, i32 0, i32 0), i8* %7), !dbg !10185
  store i32 0, i32* %1, align 4, !dbg !10186
  br label %65, !dbg !10186

; <label>:8                                       ; preds = %0
  %9 = load %struct.context*, %struct.context** %2, align 8, !dbg !10187
  %10 = call i32 @assemble_response(%struct.context* %9), !dbg !10188
  %11 = load %struct.context*, %struct.context** %2, align 8, !dbg !10189
  %12 = getelementptr inbounds %struct.context, %struct.context* %11, i32 0, i32 17, !dbg !10191
  %13 = load i32, i32* %12, align 8, !dbg !10191
  %14 = icmp slt i32 %13, 0, !dbg !10192
  br i1 %14, label %20, label %15, !dbg !10193

; <label>:15                                      ; preds = %8
  %16 = load %struct.context*, %struct.context** %2, align 8, !dbg !10194
  %17 = getelementptr inbounds %struct.context, %struct.context* %16, i32 0, i32 17, !dbg !10196
  %18 = load i32, i32* %17, align 8, !dbg !10196
  %19 = icmp sgt i32 %18, 65535, !dbg !10197
  br i1 %19, label %20, label %23, !dbg !10198

; <label>:20                                      ; preds = %15, %8
  call void (i32, i8*, ...) @syslog(i32 4, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.14.309, i32 0, i32 0)), !dbg !10199
  %21 = load %struct.context*, %struct.context** %2, align 8, !dbg !10201
  %22 = call i32 @response_abort(%struct.context* %21, i32 1), !dbg !10202
  store i32 %22, i32* %1, align 4, !dbg !10203
  br label %65, !dbg !10203

; <label>:23                                      ; preds = %15
  %24 = load %struct.context*, %struct.context** %2, align 8, !dbg !10204
  %25 = getelementptr inbounds %struct.context, %struct.context* %24, i32 0, i32 6, !dbg !10206
  %26 = load %struct.ev_to_data*, %struct.ev_to_data** %25, align 8, !dbg !10206
  %27 = icmp ne %struct.ev_to_data* %26, null, !dbg !10204
  br i1 %27, label %28, label %33, !dbg !10207

; <label>:28                                      ; preds = %23
  %29 = load %struct.context*, %struct.context** %2, align 8, !dbg !10208
  %30 = getelementptr inbounds %struct.context, %struct.context* %29, i32 0, i32 6, !dbg !10209
  %31 = load %struct.ev_to_data*, %struct.ev_to_data** %30, align 8, !dbg !10209
  %32 = getelementptr inbounds %struct.ev_to_data, %struct.ev_to_data* %31, i32 0, i32 1, !dbg !10210
  store i32 (%struct.ev_to_data*)* null, i32 (%struct.ev_to_data*)** %32, align 8, !dbg !10211
  br label %33, !dbg !10208

; <label>:33                                      ; preds = %28, %23
  %34 = load %struct.context*, %struct.context** %2, align 8, !dbg !10212
  %35 = load %struct.context*, %struct.context** %2, align 8, !dbg !10214
  %36 = getelementptr inbounds %struct.context, %struct.context* %35, i32 0, i32 21, !dbg !10215
  %37 = load i16, i16* %36, align 2, !dbg !10215
  %38 = zext i16 %37 to i32, !dbg !10214
  %39 = call i32 bitcast (i32 (%struct.context.19*, i32)* @context_timeout_register to i32 (%struct.context*, i32)*)(%struct.context* %34, i32 %38), !dbg !10216
  %40 = icmp ne i32 %39, 0, !dbg !10216
  br i1 %40, label %41, label %44, !dbg !10217

; <label>:41                                      ; preds = %33
  %42 = load %struct.context*, %struct.context** %2, align 8, !dbg !10218
  %43 = call i32 @response_abort(%struct.context* %42, i32 -1), !dbg !10219
  store i32 %43, i32* %1, align 4, !dbg !10220
  br label %65, !dbg !10220

; <label>:44                                      ; preds = %33
  %45 = load %struct.context*, %struct.context** %2, align 8, !dbg !10221
  %46 = getelementptr inbounds %struct.context, %struct.context* %45, i32 0, i32 23, !dbg !10223
  %47 = load i32, i32* %46, align 8, !dbg !10223
  %48 = load %struct.context*, %struct.context** %2, align 8, !dbg !10224
  %49 = call i32 @ev_tcp_out_register(i32 %47, %struct.context* %48), !dbg !10225
  %50 = icmp ne i32 %49, 0, !dbg !10225
  br i1 %50, label %51, label %54, !dbg !10226

; <label>:51                                      ; preds = %44
  %52 = load %struct.context*, %struct.context** %2, align 8, !dbg !10227
  %53 = call i32 @response_abort(%struct.context* %52, i32 -1), !dbg !10228
  store i32 %53, i32* %1, align 4, !dbg !10229
  br label %65, !dbg !10229

; <label>:54                                      ; preds = %44
  %55 = load %struct.context*, %struct.context** %2, align 8, !dbg !10230
  %56 = getelementptr inbounds %struct.context, %struct.context* %55, i32 0, i32 7, !dbg !10231
  store i32 (%struct.context*)* @tcp_response_writing_process, i32 (%struct.context*)** %56, align 8, !dbg !10232
  %57 = load %struct.context*, %struct.context** %2, align 8, !dbg !10233
  %58 = getelementptr inbounds %struct.context, %struct.context* %57, i32 0, i32 8, !dbg !10234
  store i32 (%struct.context*)* @tcp_response_writing_retry, i32 (%struct.context*)** %58, align 8, !dbg !10235
  %59 = load %struct.context*, %struct.context** %2, align 8, !dbg !10236
  %60 = getelementptr inbounds %struct.context, %struct.context* %59, i32 0, i32 18, !dbg !10237
  store i8* null, i8** %60, align 8, !dbg !10238
  %61 = load i8*, i8** %fn, align 8, !dbg !10239
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.15.316, i32 0, i32 0), i8* %61), !dbg !10240
  store i32 0, i32* %1, align 4, !dbg !10241
  br label %65, !dbg !10241

; <label>:62                                      ; preds = %0
  %63 = load %struct.context*, %struct.context** %2, align 8, !dbg !10242
  %64 = call i32 @response_abort(%struct.context* %63, i32 -1), !dbg !10243
  store i32 %64, i32* %1, align 4, !dbg !10244
  br label %65, !dbg !10244

; <label>:65                                      ; preds = %62, %54, %51, %41, %20, %6
  %66 = load i32, i32* %1, align 4, !dbg !10245
  ret i32 %66, !dbg !10245
}

; Function Attrs: nounwind uwtable
define i32 @tcp_response_writing_process(%struct.context* %cont) #0 !dbg !1189 {
  %1 = alloca i32, align 4
  %2 = alloca %struct.context*, align 8
  %fn = alloca i8*, align 8
  store %struct.context* %cont, %struct.context** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.context** %2, metadata !10246, metadata !2279), !dbg !10247
  call void @llvm.dbg.declare(metadata i8** %fn, metadata !10248, metadata !2279), !dbg !10249
  store i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.16.310, i32 0, i32 0), i8** %fn, align 8, !dbg !10249
  %3 = load i8*, i8** %fn, align 8, !dbg !10250
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1.301, i32 0, i32 0), i8* %3), !dbg !10251
  %4 = load %struct.context*, %struct.context** %2, align 8, !dbg !10252
  %5 = getelementptr inbounds %struct.context, %struct.context* %4, i32 0, i32 6, !dbg !10254
  %6 = load %struct.ev_to_data*, %struct.ev_to_data** %5, align 8, !dbg !10254
  %7 = icmp ne %struct.ev_to_data* %6, null, !dbg !10252
  br i1 %7, label %8, label %13, !dbg !10255

; <label>:8                                       ; preds = %0
  %9 = load %struct.context*, %struct.context** %2, align 8, !dbg !10256
  %10 = getelementptr inbounds %struct.context, %struct.context* %9, i32 0, i32 6, !dbg !10257
  %11 = load %struct.ev_to_data*, %struct.ev_to_data** %10, align 8, !dbg !10257
  %12 = getelementptr inbounds %struct.ev_to_data, %struct.ev_to_data* %11, i32 0, i32 1, !dbg !10258
  store i32 (%struct.ev_to_data*)* null, i32 (%struct.ev_to_data*)** %12, align 8, !dbg !10259
  br label %13, !dbg !10256

; <label>:13                                      ; preds = %8, %0
  %14 = load %struct.context*, %struct.context** %2, align 8, !dbg !10260
  %15 = load %struct.context*, %struct.context** %2, align 8, !dbg !10262
  %16 = getelementptr inbounds %struct.context, %struct.context* %15, i32 0, i32 21, !dbg !10263
  %17 = load i16, i16* %16, align 2, !dbg !10263
  %18 = zext i16 %17 to i32, !dbg !10262
  %19 = call i32 bitcast (i32 (%struct.context.19*, i32)* @context_timeout_register to i32 (%struct.context*, i32)*)(%struct.context* %14, i32 %18), !dbg !10264
  %20 = icmp ne i32 %19, 0, !dbg !10264
  br i1 %20, label %21, label %24, !dbg !10265

; <label>:21                                      ; preds = %13
  %22 = load %struct.context*, %struct.context** %2, align 8, !dbg !10266
  %23 = call i32 @response_abort(%struct.context* %22, i32 -1), !dbg !10267
  store i32 %23, i32* %1, align 4, !dbg !10268
  br label %50, !dbg !10268

; <label>:24                                      ; preds = %13
  %25 = load %struct.context*, %struct.context** %2, align 8, !dbg !10269
  %26 = load %struct.context*, %struct.context** %2, align 8, !dbg !10270
  %27 = getelementptr inbounds %struct.context, %struct.context* %26, i32 0, i32 23, !dbg !10271
  %28 = load i32, i32* %27, align 8, !dbg !10271
  %29 = call i32 bitcast (i32 (%struct.context.69*, i32)* @tcp_writemesg to i32 (%struct.context*, i32)*)(%struct.context* %25, i32 %28), !dbg !10272
  switch i32 %29, label %47 [
    i32 0, label %30
    i32 1, label %32
  ], !dbg !10273

; <label>:30                                      ; preds = %24
  %31 = load i8*, i8** %fn, align 8, !dbg !10274
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.13.308, i32 0, i32 0), i8* %31), !dbg !10276
  store i32 0, i32* %1, align 4, !dbg !10277
  br label %50, !dbg !10277

; <label>:32                                      ; preds = %24
  %33 = load %struct.context*, %struct.context** %2, align 8, !dbg !10278
  %34 = getelementptr inbounds %struct.context, %struct.context* %33, i32 0, i32 7, !dbg !10279
  store i32 (%struct.context*)* @tcp_response_waiting_client_close_process, i32 (%struct.context*)** %34, align 8, !dbg !10280
  %35 = load %struct.context*, %struct.context** %2, align 8, !dbg !10281
  %36 = getelementptr inbounds %struct.context, %struct.context* %35, i32 0, i32 8, !dbg !10282
  store i32 (%struct.context*)* @tcp_response_waiting_client_close_retry, i32 (%struct.context*)** %36, align 8, !dbg !10283
  %37 = load %struct.context*, %struct.context** %2, align 8, !dbg !10284
  %38 = getelementptr inbounds %struct.context, %struct.context* %37, i32 0, i32 23, !dbg !10285
  %39 = load i32, i32* %38, align 8, !dbg !10285
  %40 = call i32 @ev_tcp_out_remove(i32 %39), !dbg !10286
  %41 = load %struct.context*, %struct.context** %2, align 8, !dbg !10287
  %42 = getelementptr inbounds %struct.context, %struct.context* %41, i32 0, i32 23, !dbg !10288
  %43 = load i32, i32* %42, align 8, !dbg !10288
  %44 = load %struct.context*, %struct.context** %2, align 8, !dbg !10289
  %45 = call i32 @ev_tcp_conn_in_register(i32 %43, %struct.context* %44), !dbg !10290
  %46 = load i8*, i8** %fn, align 8, !dbg !10291
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.15.316, i32 0, i32 0), i8* %46), !dbg !10292
  store i32 0, i32* %1, align 4, !dbg !10293
  br label %50, !dbg !10293

; <label>:47                                      ; preds = %24
  %48 = load %struct.context*, %struct.context** %2, align 8, !dbg !10294
  %49 = call i32 @response_abort(%struct.context* %48, i32 -1), !dbg !10295
  store i32 %49, i32* %1, align 4, !dbg !10296
  br label %50, !dbg !10296

; <label>:50                                      ; preds = %47, %32, %30, %21
  %51 = load i32, i32* %1, align 4, !dbg !10297
  ret i32 %51, !dbg !10297
}

; Function Attrs: nounwind uwtable
define i32 @tcp_response_waiting_client_close_process(%struct.context* %cont) #0 !dbg !1191 {
  %1 = alloca i32, align 4
  %2 = alloca %struct.context*, align 8
  %fn = alloca i8*, align 8
  %length_buf = alloca i16, align 2
  %i = alloca i32, align 4
  store %struct.context* %cont, %struct.context** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.context** %2, metadata !10298, metadata !2279), !dbg !10299
  call void @llvm.dbg.declare(metadata i8** %fn, metadata !10300, metadata !2279), !dbg !10301
  store i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.17.311, i32 0, i32 0), i8** %fn, align 8, !dbg !10301
  call void @llvm.dbg.declare(metadata i16* %length_buf, metadata !10302, metadata !2279), !dbg !10303
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10304, metadata !2279), !dbg !10305
  %3 = load i8*, i8** %fn, align 8, !dbg !10306
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1.301, i32 0, i32 0), i8* %3), !dbg !10307
  %4 = load %struct.context*, %struct.context** %2, align 8, !dbg !10308
  %5 = getelementptr inbounds %struct.context, %struct.context* %4, i32 0, i32 23, !dbg !10309
  %6 = load i32, i32* %5, align 8, !dbg !10309
  %7 = bitcast i16* %length_buf to i8*, !dbg !10310
  %8 = call i64 @read(i32 %6, i8* %7, i64 2), !dbg !10311
  %9 = trunc i64 %8 to i32, !dbg !10311
  store i32 %9, i32* %i, align 4, !dbg !10312
  %10 = load i32, i32* %i, align 4, !dbg !10313
  %11 = icmp ne i32 %10, 0, !dbg !10313
  br i1 %11, label %15, label %12, !dbg !10315

; <label>:12                                      ; preds = %0
  %13 = load %struct.context*, %struct.context** %2, align 8, !dbg !10316
  %14 = call i32 @tcp_response_finish(%struct.context* %13), !dbg !10317
  store i32 %14, i32* %1, align 4, !dbg !10318
  br label %95, !dbg !10318

; <label>:15                                      ; preds = %0
  %16 = load i32, i32* %i, align 4, !dbg !10319
  %17 = sext i32 %16 to i64, !dbg !10319
  %18 = icmp ult i64 %17, 2, !dbg !10321
  br i1 %18, label %19, label %23, !dbg !10322

; <label>:19                                      ; preds = %15
  %20 = load i8*, i8** %fn, align 8, !dbg !10323
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.18.313, i32 0, i32 0), i8* %20), !dbg !10325
  %21 = load %struct.context*, %struct.context** %2, align 8, !dbg !10326
  %22 = call i32 @response_abort(%struct.context* %21, i32 -1), !dbg !10327
  store i32 %22, i32* %1, align 4, !dbg !10328
  br label %95, !dbg !10328

; <label>:23                                      ; preds = %15
  %24 = load i16, i16* %length_buf, align 2, !dbg !10329
  %25 = call zeroext i16 @ntohs(i16 zeroext %24) #1, !dbg !10330
  store i16 %25, i16* %length_buf, align 2, !dbg !10331
  %26 = load i8*, i8** %fn, align 8, !dbg !10332
  %27 = load i16, i16* %length_buf, align 2, !dbg !10333
  %28 = zext i16 %27 to i32, !dbg !10333
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.19.314, i32 0, i32 0), i8* %26, i32 %28), !dbg !10334
  %29 = load %struct.context*, %struct.context** %2, align 8, !dbg !10335
  %30 = getelementptr inbounds %struct.context, %struct.context* %29, i32 0, i32 16, !dbg !10337
  %31 = bitcast %union.anon.0* %30 to i8**, !dbg !10338
  %32 = load i8*, i8** %31, align 8, !dbg !10338
  %33 = icmp ne i8* %32, null, !dbg !10335
  br i1 %33, label %34, label %39, !dbg !10339

; <label>:34                                      ; preds = %23
  %35 = load %struct.context*, %struct.context** %2, align 8, !dbg !10340
  %36 = getelementptr inbounds %struct.context, %struct.context* %35, i32 0, i32 16, !dbg !10341
  %37 = bitcast %union.anon.0* %36 to i8**, !dbg !10342
  %38 = load i8*, i8** %37, align 8, !dbg !10342
  call void @free(i8* %38) #10, !dbg !10343
  br label %39, !dbg !10343

; <label>:39                                      ; preds = %34, %23
  %40 = load i16, i16* %length_buf, align 2, !dbg !10344
  %41 = zext i16 %40 to i64, !dbg !10344
  %42 = call noalias i8* @malloc(i64 %41) #10, !dbg !10345
  %43 = load %struct.context*, %struct.context** %2, align 8, !dbg !10346
  %44 = getelementptr inbounds %struct.context, %struct.context* %43, i32 0, i32 16, !dbg !10347
  %45 = bitcast %union.anon.0* %44 to i8**, !dbg !10348
  store i8* %42, i8** %45, align 8, !dbg !10349
  %46 = load %struct.context*, %struct.context** %2, align 8, !dbg !10350
  %47 = getelementptr inbounds %struct.context, %struct.context* %46, i32 0, i32 16, !dbg !10352
  %48 = bitcast %union.anon.0* %47 to i8**, !dbg !10353
  %49 = load i8*, i8** %48, align 8, !dbg !10353
  %50 = icmp ne i8* %49, null, !dbg !10350
  br i1 %50, label %56, label %51, !dbg !10354

; <label>:51                                      ; preds = %39
  %52 = load %struct.context*, %struct.context** %2, align 8, !dbg !10355
  %53 = getelementptr inbounds %struct.context, %struct.context* %52, i32 0, i32 17, !dbg !10357
  store i32 0, i32* %53, align 8, !dbg !10358
  %54 = load %struct.context*, %struct.context** %2, align 8, !dbg !10359
  %55 = call i32 @response_abort(%struct.context* %54, i32 -1), !dbg !10360
  store i32 %55, i32* %1, align 4, !dbg !10361
  br label %95, !dbg !10361

; <label>:56                                      ; preds = %39
  %57 = load i16, i16* %length_buf, align 2, !dbg !10362
  %58 = zext i16 %57 to i32, !dbg !10362
  %59 = load %struct.context*, %struct.context** %2, align 8, !dbg !10363
  %60 = getelementptr inbounds %struct.context, %struct.context* %59, i32 0, i32 17, !dbg !10364
  store i32 %58, i32* %60, align 8, !dbg !10365
  %61 = load %struct.context*, %struct.context** %2, align 8, !dbg !10366
  %62 = getelementptr inbounds %struct.context, %struct.context* %61, i32 0, i32 16, !dbg !10367
  %63 = bitcast %union.anon.0* %62 to i8**, !dbg !10368
  %64 = load i8*, i8** %63, align 8, !dbg !10368
  %65 = load %struct.context*, %struct.context** %2, align 8, !dbg !10369
  %66 = getelementptr inbounds %struct.context, %struct.context* %65, i32 0, i32 18, !dbg !10370
  store i8* %64, i8** %66, align 8, !dbg !10371
  %67 = load %struct.context*, %struct.context** %2, align 8, !dbg !10372
  %68 = getelementptr inbounds %struct.context, %struct.context* %67, i32 0, i32 21, !dbg !10373
  store i16 60, i16* %68, align 2, !dbg !10374
  %69 = load %struct.context*, %struct.context** %2, align 8, !dbg !10375
  %70 = getelementptr inbounds %struct.context, %struct.context* %69, i32 0, i32 6, !dbg !10377
  %71 = load %struct.ev_to_data*, %struct.ev_to_data** %70, align 8, !dbg !10377
  %72 = icmp ne %struct.ev_to_data* %71, null, !dbg !10375
  br i1 %72, label %73, label %78, !dbg !10378

; <label>:73                                      ; preds = %56
  %74 = load %struct.context*, %struct.context** %2, align 8, !dbg !10379
  %75 = getelementptr inbounds %struct.context, %struct.context* %74, i32 0, i32 6, !dbg !10380
  %76 = load %struct.ev_to_data*, %struct.ev_to_data** %75, align 8, !dbg !10380
  %77 = getelementptr inbounds %struct.ev_to_data, %struct.ev_to_data* %76, i32 0, i32 1, !dbg !10381
  store i32 (%struct.ev_to_data*)* null, i32 (%struct.ev_to_data*)** %77, align 8, !dbg !10382
  br label %78, !dbg !10379

; <label>:78                                      ; preds = %73, %56
  %79 = load %struct.context*, %struct.context** %2, align 8, !dbg !10383
  %80 = load %struct.context*, %struct.context** %2, align 8, !dbg !10385
  %81 = getelementptr inbounds %struct.context, %struct.context* %80, i32 0, i32 21, !dbg !10386
  %82 = load i16, i16* %81, align 2, !dbg !10386
  %83 = zext i16 %82 to i32, !dbg !10385
  %84 = call i32 bitcast (i32 (%struct.context.19*, i32)* @context_timeout_register to i32 (%struct.context*, i32)*)(%struct.context* %79, i32 %83), !dbg !10387
  %85 = icmp ne i32 %84, 0, !dbg !10387
  br i1 %85, label %86, label %89, !dbg !10388

; <label>:86                                      ; preds = %78
  %87 = load %struct.context*, %struct.context** %2, align 8, !dbg !10389
  %88 = call i32 @response_abort(%struct.context* %87, i32 -1), !dbg !10390
  store i32 %88, i32* %1, align 4, !dbg !10391
  br label %95, !dbg !10391

; <label>:89                                      ; preds = %78
  %90 = load %struct.context*, %struct.context** %2, align 8, !dbg !10392
  %91 = getelementptr inbounds %struct.context, %struct.context* %90, i32 0, i32 7, !dbg !10393
  store i32 (%struct.context*)* @tcp_response_reading_process, i32 (%struct.context*)** %91, align 8, !dbg !10394
  %92 = load %struct.context*, %struct.context** %2, align 8, !dbg !10395
  %93 = getelementptr inbounds %struct.context, %struct.context* %92, i32 0, i32 8, !dbg !10396
  store i32 (%struct.context*)* @tcp_response_reading_retry, i32 (%struct.context*)** %93, align 8, !dbg !10397
  %94 = load i8*, i8** %fn, align 8, !dbg !10398
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.20.315, i32 0, i32 0), i8* %94), !dbg !10399
  store i32 0, i32* %1, align 4, !dbg !10400
  br label %95, !dbg !10400

; <label>:95                                      ; preds = %89, %86, %51, %19, %12
  %96 = load i32, i32* %1, align 4, !dbg !10401
  ret i32 %96, !dbg !10401
}

; Function Attrs: nounwind uwtable
define i32 @tcp_response_finish(%struct.context* %cont) #0 !dbg !1193 {
  %1 = alloca %struct.context*, align 8
  store %struct.context* %cont, %struct.context** %1, align 8
  call void @llvm.dbg.declare(metadata %struct.context** %1, metadata !10402, metadata !2279), !dbg !10403
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.21.312, i32 0, i32 0)), !dbg !10404
  %2 = load %struct.context*, %struct.context** %1, align 8, !dbg !10405
  %3 = call i8* bitcast (i8* (%struct.context.19*)* @context_destroy to i8* (%struct.context*)*)(%struct.context* %2), !dbg !10406
  ret i32 0, !dbg !10407
}

; Function Attrs: nounwind uwtable
define i32 @tcp_response_reading_retry(%struct.context* %cont) #0 !dbg !1186 {
  %1 = alloca %struct.context*, align 8
  store %struct.context* %cont, %struct.context** %1, align 8
  call void @llvm.dbg.declare(metadata %struct.context** %1, metadata !10408, metadata !2279), !dbg !10409
  %2 = load %struct.context*, %struct.context** %1, align 8, !dbg !10410
  %3 = call i32 @response_abort(%struct.context* %2, i32 -1), !dbg !10411
  ret i32 %3, !dbg !10412
}

; Function Attrs: nounwind uwtable
define i32 @tcp_response_waiting_client_close_retry(%struct.context* %cont) #0 !dbg !1192 {
  %1 = alloca %struct.context*, align 8
  store %struct.context* %cont, %struct.context** %1, align 8
  call void @llvm.dbg.declare(metadata %struct.context** %1, metadata !10413, metadata !2279), !dbg !10414
  %2 = load %struct.context*, %struct.context** %1, align 8, !dbg !10415
  %3 = call i32 @response_abort(%struct.context* %2, i32 0), !dbg !10416
  ret i32 %3, !dbg !10417
}

; Function Attrs: nounwind uwtable
define i32 @tcp_response_writing_retry(%struct.context* %cont) #0 !dbg !1190 {
  %1 = alloca %struct.context*, align 8
  store %struct.context* %cont, %struct.context** %1, align 8
  call void @llvm.dbg.declare(metadata %struct.context** %1, metadata !10418, metadata !2279), !dbg !10419
  %2 = load %struct.context*, %struct.context** %1, align 8, !dbg !10420
  %3 = call i32 @response_abort(%struct.context* %2, i32 -1), !dbg !10421
  ret i32 %3, !dbg !10422
}

; Function Attrs: nounwind uwtable
define i32 @tcp_response_recursive_retry(%struct.context* %cont) #0 !dbg !1188 {
  %1 = alloca %struct.context*, align 8
  store %struct.context* %cont, %struct.context** %1, align 8
  call void @llvm.dbg.declare(metadata %struct.context** %1, metadata !10423, metadata !2279), !dbg !10424
  %2 = load %struct.context*, %struct.context** %1, align 8, !dbg !10425
  %3 = call i32 @response_abort(%struct.context* %2, i32 -1), !dbg !10426
  ret i32 %3, !dbg !10427
}

; Function Attrs: nounwind uwtable
define i32 @tcp_response_readlen_retry(%struct.context* %cont) #0 !dbg !1184 {
  %1 = alloca %struct.context*, align 8
  %fn = alloca i8*, align 8
  store %struct.context* %cont, %struct.context** %1, align 8
  call void @llvm.dbg.declare(metadata %struct.context** %1, metadata !10428, metadata !2279), !dbg !10429
  call void @llvm.dbg.declare(metadata i8** %fn, metadata !10430, metadata !2279), !dbg !10431
  store i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.5.320, i32 0, i32 0), i8** %fn, align 8, !dbg !10431
  %2 = load i8*, i8** %fn, align 8, !dbg !10432
  call void (i32, i8*, ...) @syslog(i32 5, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.6.321, i32 0, i32 0), i8* %2), !dbg !10433
  %3 = load %struct.context*, %struct.context** %1, align 8, !dbg !10434
  %4 = call i32 @response_abort(%struct.context* %3, i32 -1), !dbg !10435
  ret i32 %4, !dbg !10436
}

; Function Attrs: nounwind uwtable
define void @ev_dup_init() #0 !dbg !1197 {
  %i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10437, metadata !2279), !dbg !10438
  store i32 0, i32* %i, align 4, !dbg !10439
  br label %1, !dbg !10441

; <label>:1                                       ; preds = %19, %0
  %2 = load i32, i32* %i, align 4, !dbg !10442
  %3 = icmp slt i32 %2, 1000, !dbg !10445
  br i1 %3, label %4, label %22, !dbg !10446

; <label>:4                                       ; preds = %1
  %5 = load i32, i32* %i, align 4, !dbg !10447
  %6 = sext i32 %5 to i64, !dbg !10449
  %7 = getelementptr inbounds [1000 x %struct.anon], [1000 x %struct.anon]* @Ev_dup_table, i64 0, i64 %6, !dbg !10449
  %8 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 0, !dbg !10450
  %9 = bitcast %union.anon.79* %8 to [16 x i8]*, !dbg !10451
  %10 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0, !dbg !10452
  call void @llvm.memset.p0i8.i64(i8* %10, i8 0, i64 16, i32 16, i1 false), !dbg !10452
  %11 = load i32, i32* %i, align 4, !dbg !10453
  %12 = sext i32 %11 to i64, !dbg !10454
  %13 = getelementptr inbounds [1000 x %struct.anon], [1000 x %struct.anon]* @Ev_dup_table, i64 0, i64 %12, !dbg !10454
  %14 = getelementptr inbounds %struct.anon, %struct.anon* %13, i32 0, i32 1, !dbg !10455
  store i16 0, i16* %14, align 16, !dbg !10456
  %15 = load i32, i32* %i, align 4, !dbg !10457
  %16 = sext i32 %15 to i64, !dbg !10458
  %17 = getelementptr inbounds [1000 x %struct.anon], [1000 x %struct.anon]* @Ev_dup_table, i64 0, i64 %16, !dbg !10458
  %18 = getelementptr inbounds %struct.anon, %struct.anon* %17, i32 0, i32 2, !dbg !10459
  store i16 0, i16* %18, align 2, !dbg !10460
  br label %19, !dbg !10461

; <label>:19                                      ; preds = %4
  %20 = load i32, i32* %i, align 4, !dbg !10462
  %21 = add nsw i32 %20, 1, !dbg !10462
  store i32 %21, i32* %i, align 4, !dbg !10462
  br label %1, !dbg !10464

; <label>:22                                      ; preds = %1
  ret void, !dbg !10465
}

; Function Attrs: nounwind uwtable
define i32 @ev_dup(%struct.sockaddr* %sa, i16 zeroext %sa_len, i16 zeroext %id) #0 !dbg !1198 {
  %1 = alloca i32, align 4
  %2 = alloca %struct.sockaddr*, align 8
  %3 = alloca i16, align 2
  %4 = alloca i16, align 2
  %index = alloca i32, align 4
  %now = alloca i64, align 8
  store %struct.sockaddr* %sa, %struct.sockaddr** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.sockaddr** %2, metadata !10466, metadata !2279), !dbg !10467
  store i16 %sa_len, i16* %3, align 2
  call void @llvm.dbg.declare(metadata i16* %3, metadata !10468, metadata !2279), !dbg !10469
  store i16 %id, i16* %4, align 2
  call void @llvm.dbg.declare(metadata i16* %4, metadata !10470, metadata !2279), !dbg !10471
  call void @llvm.dbg.declare(metadata i32* %index, metadata !10472, metadata !2279), !dbg !10473
  call void @llvm.dbg.declare(metadata i64* %now, metadata !10474, metadata !2279), !dbg !10475
  %5 = load %struct.sockaddr*, %struct.sockaddr** %2, align 8, !dbg !10476
  %6 = load i16, i16* %3, align 2, !dbg !10477
  %7 = load i16, i16* %4, align 2, !dbg !10478
  %8 = call i32 @ev_dup_hashval(%struct.sockaddr* %5, i16 zeroext %6, i16 zeroext %7), !dbg !10479
  store i32 %8, i32* %index, align 4, !dbg !10480
  %9 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 8), align 4, !dbg !10481
  %10 = icmp sgt i32 %9, 2, !dbg !10483
  br i1 %10, label %11, label %13, !dbg !10484

; <label>:11                                      ; preds = %0
  %12 = load i32, i32* %index, align 4, !dbg !10485
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.322, i32 0, i32 0), i32 %12), !dbg !10487
  br label %13, !dbg !10488

; <label>:13                                      ; preds = %11, %0
  %14 = call i64 @time(i64* null) #10, !dbg !10489
  store i64 %14, i64* %now, align 8, !dbg !10490
  %15 = load i16, i16* %3, align 2, !dbg !10491
  %16 = zext i16 %15 to i32, !dbg !10491
  %17 = icmp sgt i32 %16, 16, !dbg !10492
  br i1 %17, label %18, label %19, !dbg !10491

; <label>:18                                      ; preds = %13
  br label %22, !dbg !10493

; <label>:19                                      ; preds = %13
  %20 = load i16, i16* %3, align 2, !dbg !10495
  %21 = zext i16 %20 to i32, !dbg !10495
  br label %22, !dbg !10497

; <label>:22                                      ; preds = %19, %18
  %23 = phi i32 [ 16, %18 ], [ %21, %19 ], !dbg !10498
  %24 = trunc i32 %23 to i16, !dbg !10498
  store i16 %24, i16* %3, align 2, !dbg !10500
  %25 = load i32, i32* %index, align 4, !dbg !10501
  %26 = sext i32 %25 to i64, !dbg !10503
  %27 = getelementptr inbounds [1000 x %struct.anon], [1000 x %struct.anon]* @Ev_dup_table, i64 0, i64 %26, !dbg !10503
  %28 = getelementptr inbounds %struct.anon, %struct.anon* %27, i32 0, i32 2, !dbg !10504
  %29 = load i16, i16* %28, align 2, !dbg !10504
  %30 = zext i16 %29 to i32, !dbg !10503
  %31 = load i16, i16* %4, align 2, !dbg !10505
  %32 = zext i16 %31 to i32, !dbg !10505
  %33 = icmp eq i32 %30, %32, !dbg !10506
  br i1 %33, label %34, label %66, !dbg !10507

; <label>:34                                      ; preds = %22
  %35 = load i32, i32* %index, align 4, !dbg !10508
  %36 = sext i32 %35 to i64, !dbg !10509
  %37 = getelementptr inbounds [1000 x %struct.anon], [1000 x %struct.anon]* @Ev_dup_table, i64 0, i64 %36, !dbg !10509
  %38 = getelementptr inbounds %struct.anon, %struct.anon* %37, i32 0, i32 1, !dbg !10510
  %39 = load i16, i16* %38, align 16, !dbg !10510
  %40 = zext i16 %39 to i32, !dbg !10509
  %41 = load i16, i16* %3, align 2, !dbg !10511
  %42 = zext i16 %41 to i32, !dbg !10511
  %43 = icmp eq i32 %40, %42, !dbg !10512
  br i1 %43, label %44, label %66, !dbg !10513

; <label>:44                                      ; preds = %34
  %45 = load i32, i32* %index, align 4, !dbg !10514
  %46 = sext i32 %45 to i64, !dbg !10515
  %47 = getelementptr inbounds [1000 x %struct.anon], [1000 x %struct.anon]* @Ev_dup_table, i64 0, i64 %46, !dbg !10515
  %48 = getelementptr inbounds %struct.anon, %struct.anon* %47, i32 0, i32 0, !dbg !10516
  %49 = bitcast %union.anon.79* %48 to [16 x i8]*, !dbg !10517
  %50 = bitcast [16 x i8]* %49 to i8*, !dbg !10518
  %51 = load %struct.sockaddr*, %struct.sockaddr** %2, align 8, !dbg !10519
  %52 = bitcast %struct.sockaddr* %51 to i8*, !dbg !10520
  %53 = load i16, i16* %3, align 2, !dbg !10521
  %54 = zext i16 %53 to i64, !dbg !10521
  %55 = call i32 @memcmp(i8* %50, i8* %52, i64 %54) #9, !dbg !10522
  %56 = icmp ne i32 %55, 0, !dbg !10522
  br i1 %56, label %66, label %57, !dbg !10523

; <label>:57                                      ; preds = %44
  %58 = load i64, i64* %now, align 8, !dbg !10524
  %59 = load i32, i32* %index, align 4, !dbg !10525
  %60 = sext i32 %59 to i64, !dbg !10526
  %61 = getelementptr inbounds [1000 x %struct.anon], [1000 x %struct.anon]* @Ev_dup_table, i64 0, i64 %60, !dbg !10526
  %62 = getelementptr inbounds %struct.anon, %struct.anon* %61, i32 0, i32 3, !dbg !10527
  %63 = load i64, i64* %62, align 8, !dbg !10527
  %64 = icmp slt i64 %58, %63, !dbg !10528
  br i1 %64, label %65, label %66, !dbg !10529

; <label>:65                                      ; preds = %57
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.323, i32 0, i32 0)), !dbg !10530
  store i32 -1, i32* %1, align 4, !dbg !10532
  br label %93, !dbg !10532

; <label>:66                                      ; preds = %57, %44, %34, %22
  %67 = load i16, i16* %4, align 2, !dbg !10533
  %68 = load i32, i32* %index, align 4, !dbg !10535
  %69 = sext i32 %68 to i64, !dbg !10536
  %70 = getelementptr inbounds [1000 x %struct.anon], [1000 x %struct.anon]* @Ev_dup_table, i64 0, i64 %69, !dbg !10536
  %71 = getelementptr inbounds %struct.anon, %struct.anon* %70, i32 0, i32 2, !dbg !10537
  store i16 %67, i16* %71, align 2, !dbg !10538
  %72 = load i16, i16* %3, align 2, !dbg !10539
  %73 = load i32, i32* %index, align 4, !dbg !10540
  %74 = sext i32 %73 to i64, !dbg !10541
  %75 = getelementptr inbounds [1000 x %struct.anon], [1000 x %struct.anon]* @Ev_dup_table, i64 0, i64 %74, !dbg !10541
  %76 = getelementptr inbounds %struct.anon, %struct.anon* %75, i32 0, i32 1, !dbg !10542
  store i16 %72, i16* %76, align 16, !dbg !10543
  %77 = load i32, i32* %index, align 4, !dbg !10544
  %78 = sext i32 %77 to i64, !dbg !10545
  %79 = getelementptr inbounds [1000 x %struct.anon], [1000 x %struct.anon]* @Ev_dup_table, i64 0, i64 %78, !dbg !10545
  %80 = getelementptr inbounds %struct.anon, %struct.anon* %79, i32 0, i32 0, !dbg !10546
  %81 = bitcast %union.anon.79* %80 to [16 x i8]*, !dbg !10547
  %82 = getelementptr inbounds [16 x i8], [16 x i8]* %81, i32 0, i32 0, !dbg !10548
  %83 = load %struct.sockaddr*, %struct.sockaddr** %2, align 8, !dbg !10549
  %84 = bitcast %struct.sockaddr* %83 to i8*, !dbg !10548
  %85 = load i16, i16* %3, align 2, !dbg !10550
  %86 = zext i16 %85 to i64, !dbg !10550
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %82, i8* %84, i64 %86, i32 1, i1 false), !dbg !10548
  %87 = call i64 @time(i64* null) #10, !dbg !10551
  %88 = add nsw i64 %87, 60, !dbg !10552
  %89 = load i32, i32* %index, align 4, !dbg !10553
  %90 = sext i32 %89 to i64, !dbg !10554
  %91 = getelementptr inbounds [1000 x %struct.anon], [1000 x %struct.anon]* @Ev_dup_table, i64 0, i64 %90, !dbg !10554
  %92 = getelementptr inbounds %struct.anon, %struct.anon* %91, i32 0, i32 3, !dbg !10555
  store i64 %88, i64* %92, align 8, !dbg !10556
  store i32 0, i32* %1, align 4, !dbg !10557
  br label %93, !dbg !10557

; <label>:93                                      ; preds = %66, %65
  %94 = load i32, i32* %1, align 4, !dbg !10558
  ret i32 %94, !dbg !10558
}

; Function Attrs: nounwind uwtable
define internal i32 @ev_dup_hashval(%struct.sockaddr* %sa, i16 zeroext %sa_len, i16 zeroext %id) #0 !dbg !1206 {
  %1 = alloca %struct.sockaddr*, align 8
  %2 = alloca i16, align 2
  %3 = alloca i16, align 2
  %hashval = alloca i32, align 4
  %cp = alloca i8*, align 8
  %cp_tail = alloca i8*, align 8
  store %struct.sockaddr* %sa, %struct.sockaddr** %1, align 8
  call void @llvm.dbg.declare(metadata %struct.sockaddr** %1, metadata !10559, metadata !2279), !dbg !10560
  store i16 %sa_len, i16* %2, align 2
  call void @llvm.dbg.declare(metadata i16* %2, metadata !10561, metadata !2279), !dbg !10562
  store i16 %id, i16* %3, align 2
  call void @llvm.dbg.declare(metadata i16* %3, metadata !10563, metadata !2279), !dbg !10564
  call void @llvm.dbg.declare(metadata i32* %hashval, metadata !10565, metadata !2279), !dbg !10566
  call void @llvm.dbg.declare(metadata i8** %cp, metadata !10567, metadata !2279), !dbg !10568
  call void @llvm.dbg.declare(metadata i8** %cp_tail, metadata !10569, metadata !2279), !dbg !10570
  store i32 0, i32* %hashval, align 4, !dbg !10571
  %4 = load %struct.sockaddr*, %struct.sockaddr** %1, align 8, !dbg !10572
  %5 = bitcast %struct.sockaddr* %4 to i8*, !dbg !10574
  store i8* %5, i8** %cp, align 8, !dbg !10575
  %6 = load i8*, i8** %cp, align 8, !dbg !10576
  %7 = load i16, i16* %2, align 2, !dbg !10577
  %8 = zext i16 %7 to i32, !dbg !10577
  %9 = sext i32 %8 to i64, !dbg !10578
  %10 = getelementptr inbounds i8, i8* %6, i64 %9, !dbg !10578
  store i8* %10, i8** %cp_tail, align 8, !dbg !10579
  br label %11, !dbg !10580

; <label>:11                                      ; preds = %21, %0
  %12 = load i8*, i8** %cp, align 8, !dbg !10581
  %13 = load i8*, i8** %cp_tail, align 8, !dbg !10584
  %14 = icmp ult i8* %12, %13, !dbg !10585
  br i1 %14, label %15, label %24, !dbg !10586

; <label>:15                                      ; preds = %11
  %16 = load i8*, i8** %cp, align 8, !dbg !10587
  %17 = load i8, i8* %16, align 1, !dbg !10588
  %18 = zext i8 %17 to i32, !dbg !10588
  %19 = load i32, i32* %hashval, align 4, !dbg !10589
  %20 = add nsw i32 %19, %18, !dbg !10589
  store i32 %20, i32* %hashval, align 4, !dbg !10589
  br label %21, !dbg !10590

; <label>:21                                      ; preds = %15
  %22 = load i8*, i8** %cp, align 8, !dbg !10591
  %23 = getelementptr inbounds i8, i8* %22, i32 1, !dbg !10591
  store i8* %23, i8** %cp, align 8, !dbg !10591
  br label %11, !dbg !10593

; <label>:24                                      ; preds = %11
  %25 = load i16, i16* %3, align 2, !dbg !10594
  %26 = zext i16 %25 to i32, !dbg !10594
  %27 = load i32, i32* %hashval, align 4, !dbg !10595
  %28 = add nsw i32 %27, %26, !dbg !10595
  store i32 %28, i32* %hashval, align 4, !dbg !10595
  %29 = load i32, i32* %hashval, align 4, !dbg !10596
  %30 = srem i32 %29, 1000, !dbg !10597
  ret i32 %30, !dbg !10598
}

; Function Attrs: nounwind uwtable
define %struct.generic_list* @list_init() #0 !dbg !1226 {
  %fn = alloca i8*, align 8
  %gl_new = alloca %struct.generic_list*, align 8
  call void @llvm.dbg.declare(metadata i8** %fn, metadata !10599, metadata !2279), !dbg !10600
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.326, i32 0, i32 0), i8** %fn, align 8, !dbg !10600
  call void @llvm.dbg.declare(metadata %struct.generic_list** %gl_new, metadata !10601, metadata !2279), !dbg !10602
  store %struct.generic_list* null, %struct.generic_list** %gl_new, align 8, !dbg !10602
  %1 = call noalias i8* @malloc(i64 24) #10, !dbg !10603
  %2 = bitcast i8* %1 to %struct.generic_list*, !dbg !10603
  store %struct.generic_list* %2, %struct.generic_list** %gl_new, align 8, !dbg !10604
  %3 = load %struct.generic_list*, %struct.generic_list** %gl_new, align 8, !dbg !10605
  %4 = icmp ne %struct.generic_list* %3, null, !dbg !10605
  br i1 %4, label %5, label %14, !dbg !10607

; <label>:5                                       ; preds = %0
  %6 = load %struct.generic_list*, %struct.generic_list** %gl_new, align 8, !dbg !10608
  %7 = load %struct.generic_list*, %struct.generic_list** %gl_new, align 8, !dbg !10610
  %8 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %7, i32 0, i32 0, !dbg !10611
  store %struct.generic_list* %6, %struct.generic_list** %8, align 8, !dbg !10612
  %9 = load %struct.generic_list*, %struct.generic_list** %gl_new, align 8, !dbg !10613
  %10 = load %struct.generic_list*, %struct.generic_list** %gl_new, align 8, !dbg !10614
  %11 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %10, i32 0, i32 1, !dbg !10615
  store %struct.generic_list* %9, %struct.generic_list** %11, align 8, !dbg !10616
  %12 = load %struct.generic_list*, %struct.generic_list** %gl_new, align 8, !dbg !10617
  %13 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %12, i32 0, i32 2, !dbg !10618
  store i8* null, i8** %13, align 8, !dbg !10619
  br label %14, !dbg !10620

; <label>:14                                      ; preds = %5, %0
  %15 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 8), align 4, !dbg !10621
  %16 = icmp sgt i32 %15, 4, !dbg !10623
  br i1 %16, label %17, label %21, !dbg !10624

; <label>:17                                      ; preds = %14
  %18 = load i8*, i8** %fn, align 8, !dbg !10625
  %19 = load %struct.generic_list*, %struct.generic_list** %gl_new, align 8, !dbg !10626
  %20 = bitcast %struct.generic_list* %19 to i8*, !dbg !10627
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1.327, i32 0, i32 0), i8* %18, i8* %20), !dbg !10628
  br label %21, !dbg !10628

; <label>:21                                      ; preds = %17, %14
  %22 = load %struct.generic_list*, %struct.generic_list** %gl_new, align 8, !dbg !10629
  ret %struct.generic_list* %22, !dbg !10630
}

; Function Attrs: nounwind uwtable
define i32 @list_add(%struct.generic_list* %gl_head, i8* %list_data) #0 !dbg !1237 {
  %1 = alloca i32, align 4
  %2 = alloca %struct.generic_list*, align 8
  %3 = alloca i8*, align 8
  %gl_new = alloca %struct.generic_list*, align 8
  store %struct.generic_list* %gl_head, %struct.generic_list** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.generic_list** %2, metadata !10631, metadata !2279), !dbg !10632
  store i8* %list_data, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !10633, metadata !2279), !dbg !10634
  call void @llvm.dbg.declare(metadata %struct.generic_list** %gl_new, metadata !10635, metadata !2279), !dbg !10636
  %4 = call noalias i8* @malloc(i64 24) #10, !dbg !10637
  %5 = bitcast i8* %4 to %struct.generic_list*, !dbg !10637
  store %struct.generic_list* %5, %struct.generic_list** %gl_new, align 8, !dbg !10638
  %6 = load %struct.generic_list*, %struct.generic_list** %gl_new, align 8, !dbg !10639
  %7 = icmp ne %struct.generic_list* %6, null, !dbg !10639
  br i1 %7, label %8, label %28, !dbg !10641

; <label>:8                                       ; preds = %0
  %9 = load i8*, i8** %3, align 8, !dbg !10642
  %10 = load %struct.generic_list*, %struct.generic_list** %gl_new, align 8, !dbg !10644
  %11 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %10, i32 0, i32 2, !dbg !10645
  store i8* %9, i8** %11, align 8, !dbg !10646
  %12 = load %struct.generic_list*, %struct.generic_list** %2, align 8, !dbg !10647
  %13 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %12, i32 0, i32 0, !dbg !10648
  %14 = load %struct.generic_list*, %struct.generic_list** %13, align 8, !dbg !10648
  %15 = load %struct.generic_list*, %struct.generic_list** %gl_new, align 8, !dbg !10649
  %16 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %15, i32 0, i32 0, !dbg !10650
  store %struct.generic_list* %14, %struct.generic_list** %16, align 8, !dbg !10651
  %17 = load %struct.generic_list*, %struct.generic_list** %2, align 8, !dbg !10652
  %18 = load %struct.generic_list*, %struct.generic_list** %gl_new, align 8, !dbg !10653
  %19 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %18, i32 0, i32 1, !dbg !10654
  store %struct.generic_list* %17, %struct.generic_list** %19, align 8, !dbg !10655
  %20 = load %struct.generic_list*, %struct.generic_list** %gl_new, align 8, !dbg !10656
  %21 = load %struct.generic_list*, %struct.generic_list** %2, align 8, !dbg !10657
  %22 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %21, i32 0, i32 0, !dbg !10658
  %23 = load %struct.generic_list*, %struct.generic_list** %22, align 8, !dbg !10658
  %24 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %23, i32 0, i32 1, !dbg !10659
  store %struct.generic_list* %20, %struct.generic_list** %24, align 8, !dbg !10660
  %25 = load %struct.generic_list*, %struct.generic_list** %gl_new, align 8, !dbg !10661
  %26 = load %struct.generic_list*, %struct.generic_list** %2, align 8, !dbg !10662
  %27 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %26, i32 0, i32 0, !dbg !10663
  store %struct.generic_list* %25, %struct.generic_list** %27, align 8, !dbg !10664
  store i32 0, i32* %1, align 4, !dbg !10665
  br label %29, !dbg !10665

; <label>:28                                      ; preds = %0
  store i32 -1, i32* %1, align 4, !dbg !10666
  br label %29, !dbg !10666

; <label>:29                                      ; preds = %28, %8
  %30 = load i32, i32* %1, align 4, !dbg !10667
  ret i32 %30, !dbg !10667
}

; Function Attrs: nounwind uwtable
define i32 @list_add_tail(%struct.generic_list* %gl_head, i8* %list_data) #0 !dbg !1240 {
  %1 = alloca i32, align 4
  %2 = alloca %struct.generic_list*, align 8
  %3 = alloca i8*, align 8
  %gl_new = alloca %struct.generic_list*, align 8
  store %struct.generic_list* %gl_head, %struct.generic_list** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.generic_list** %2, metadata !10668, metadata !2279), !dbg !10669
  store i8* %list_data, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !10670, metadata !2279), !dbg !10671
  call void @llvm.dbg.declare(metadata %struct.generic_list** %gl_new, metadata !10672, metadata !2279), !dbg !10673
  %4 = call noalias i8* @malloc(i64 24) #10, !dbg !10674
  %5 = bitcast i8* %4 to %struct.generic_list*, !dbg !10674
  store %struct.generic_list* %5, %struct.generic_list** %gl_new, align 8, !dbg !10675
  %6 = load %struct.generic_list*, %struct.generic_list** %gl_new, align 8, !dbg !10676
  %7 = icmp ne %struct.generic_list* %6, null, !dbg !10676
  br i1 %7, label %8, label %28, !dbg !10678

; <label>:8                                       ; preds = %0
  %9 = load i8*, i8** %3, align 8, !dbg !10679
  %10 = load %struct.generic_list*, %struct.generic_list** %gl_new, align 8, !dbg !10681
  %11 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %10, i32 0, i32 2, !dbg !10682
  store i8* %9, i8** %11, align 8, !dbg !10683
  %12 = load %struct.generic_list*, %struct.generic_list** %2, align 8, !dbg !10684
  %13 = load %struct.generic_list*, %struct.generic_list** %gl_new, align 8, !dbg !10685
  %14 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %13, i32 0, i32 0, !dbg !10686
  store %struct.generic_list* %12, %struct.generic_list** %14, align 8, !dbg !10687
  %15 = load %struct.generic_list*, %struct.generic_list** %2, align 8, !dbg !10688
  %16 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %15, i32 0, i32 1, !dbg !10689
  %17 = load %struct.generic_list*, %struct.generic_list** %16, align 8, !dbg !10689
  %18 = load %struct.generic_list*, %struct.generic_list** %gl_new, align 8, !dbg !10690
  %19 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %18, i32 0, i32 1, !dbg !10691
  store %struct.generic_list* %17, %struct.generic_list** %19, align 8, !dbg !10692
  %20 = load %struct.generic_list*, %struct.generic_list** %gl_new, align 8, !dbg !10693
  %21 = load %struct.generic_list*, %struct.generic_list** %2, align 8, !dbg !10694
  %22 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %21, i32 0, i32 1, !dbg !10695
  %23 = load %struct.generic_list*, %struct.generic_list** %22, align 8, !dbg !10695
  %24 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %23, i32 0, i32 0, !dbg !10696
  store %struct.generic_list* %20, %struct.generic_list** %24, align 8, !dbg !10697
  %25 = load %struct.generic_list*, %struct.generic_list** %gl_new, align 8, !dbg !10698
  %26 = load %struct.generic_list*, %struct.generic_list** %2, align 8, !dbg !10699
  %27 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %26, i32 0, i32 1, !dbg !10700
  store %struct.generic_list* %25, %struct.generic_list** %27, align 8, !dbg !10701
  store i32 0, i32* %1, align 4, !dbg !10702
  br label %29, !dbg !10702

; <label>:28                                      ; preds = %0
  store i32 -1, i32* %1, align 4, !dbg !10703
  br label %29, !dbg !10703

; <label>:29                                      ; preds = %28, %8
  %30 = load i32, i32* %1, align 4, !dbg !10704
  ret i32 %30, !dbg !10704
}

; Function Attrs: nounwind uwtable
define %struct.generic_list* @list_search(%struct.generic_list* %list_head, i8* %data, i32 (i8*, i8*)* %fcmp) #0 !dbg !1241 {
  %1 = alloca %struct.generic_list*, align 8
  %2 = alloca %struct.generic_list*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i32 (i8*, i8*)*, align 8
  %gl = alloca %struct.generic_list*, align 8
  store %struct.generic_list* %list_head, %struct.generic_list** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.generic_list** %2, metadata !10705, metadata !2279), !dbg !10706
  store i8* %data, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !10707, metadata !2279), !dbg !10708
  store i32 (i8*, i8*)* %fcmp, i32 (i8*, i8*)** %4, align 8
  call void @llvm.dbg.declare(metadata i32 (i8*, i8*)** %4, metadata !10709, metadata !2279), !dbg !10710
  call void @llvm.dbg.declare(metadata %struct.generic_list** %gl, metadata !10711, metadata !2279), !dbg !10712
  %5 = load i8*, i8** %3, align 8, !dbg !10713
  %6 = load %struct.generic_list*, %struct.generic_list** %2, align 8, !dbg !10714
  %7 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %6, i32 0, i32 2, !dbg !10715
  store i8* %5, i8** %7, align 8, !dbg !10716
  %8 = load %struct.generic_list*, %struct.generic_list** %2, align 8, !dbg !10717
  %9 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %8, i32 0, i32 0, !dbg !10719
  %10 = load %struct.generic_list*, %struct.generic_list** %9, align 8, !dbg !10719
  store %struct.generic_list* %10, %struct.generic_list** %gl, align 8, !dbg !10720
  br label %11, !dbg !10721

; <label>:11                                      ; preds = %20, %0
  %12 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %4, align 8, !dbg !10722
  %13 = load i8*, i8** %3, align 8, !dbg !10725
  %14 = load %struct.generic_list*, %struct.generic_list** %gl, align 8, !dbg !10726
  %15 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %14, i32 0, i32 2, !dbg !10727
  %16 = load i8*, i8** %15, align 8, !dbg !10727
  %17 = call i32 %12(i8* %13, i8* %16), !dbg !10728
  %18 = icmp ne i32 %17, 0, !dbg !10729
  br i1 %18, label %19, label %24, !dbg !10729

; <label>:19                                      ; preds = %11
  br label %20, !dbg !10730

; <label>:20                                      ; preds = %19
  %21 = load %struct.generic_list*, %struct.generic_list** %gl, align 8, !dbg !10732
  %22 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %21, i32 0, i32 0, !dbg !10734
  %23 = load %struct.generic_list*, %struct.generic_list** %22, align 8, !dbg !10734
  store %struct.generic_list* %23, %struct.generic_list** %gl, align 8, !dbg !10735
  br label %11, !dbg !10736

; <label>:24                                      ; preds = %11
  %25 = load %struct.generic_list*, %struct.generic_list** %2, align 8, !dbg !10737
  %26 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %25, i32 0, i32 2, !dbg !10738
  store i8* null, i8** %26, align 8, !dbg !10739
  %27 = load %struct.generic_list*, %struct.generic_list** %gl, align 8, !dbg !10740
  %28 = load %struct.generic_list*, %struct.generic_list** %2, align 8, !dbg !10742
  %29 = icmp eq %struct.generic_list* %27, %28, !dbg !10743
  br i1 %29, label %30, label %31, !dbg !10744

; <label>:30                                      ; preds = %24
  store %struct.generic_list* null, %struct.generic_list** %1, align 8, !dbg !10745
  br label %33, !dbg !10745

; <label>:31                                      ; preds = %24
  %32 = load %struct.generic_list*, %struct.generic_list** %gl, align 8, !dbg !10746
  store %struct.generic_list* %32, %struct.generic_list** %1, align 8, !dbg !10747
  br label %33, !dbg !10747

; <label>:33                                      ; preds = %31, %30
  %34 = load %struct.generic_list*, %struct.generic_list** %1, align 8, !dbg !10748
  ret %struct.generic_list* %34, !dbg !10748
}

; Function Attrs: nounwind uwtable
define i8* @list_delete(%struct.generic_list* %gl) #0 !dbg !1245 {
  %1 = alloca %struct.generic_list*, align 8
  %p = alloca i8*, align 8
  store %struct.generic_list* %gl, %struct.generic_list** %1, align 8
  call void @llvm.dbg.declare(metadata %struct.generic_list** %1, metadata !10749, metadata !2279), !dbg !10750
  call void @llvm.dbg.declare(metadata i8** %p, metadata !10751, metadata !2279), !dbg !10752
  %2 = load %struct.generic_list*, %struct.generic_list** %1, align 8, !dbg !10753
  %3 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %2, i32 0, i32 1, !dbg !10754
  %4 = load %struct.generic_list*, %struct.generic_list** %3, align 8, !dbg !10754
  %5 = load %struct.generic_list*, %struct.generic_list** %1, align 8, !dbg !10755
  %6 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %5, i32 0, i32 0, !dbg !10756
  %7 = load %struct.generic_list*, %struct.generic_list** %6, align 8, !dbg !10756
  %8 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %7, i32 0, i32 1, !dbg !10757
  store %struct.generic_list* %4, %struct.generic_list** %8, align 8, !dbg !10758
  %9 = load %struct.generic_list*, %struct.generic_list** %1, align 8, !dbg !10759
  %10 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %9, i32 0, i32 0, !dbg !10760
  %11 = load %struct.generic_list*, %struct.generic_list** %10, align 8, !dbg !10760
  %12 = load %struct.generic_list*, %struct.generic_list** %1, align 8, !dbg !10761
  %13 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %12, i32 0, i32 1, !dbg !10762
  %14 = load %struct.generic_list*, %struct.generic_list** %13, align 8, !dbg !10762
  %15 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %14, i32 0, i32 0, !dbg !10763
  store %struct.generic_list* %11, %struct.generic_list** %15, align 8, !dbg !10764
  %16 = load %struct.generic_list*, %struct.generic_list** %1, align 8, !dbg !10765
  %17 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %16, i32 0, i32 2, !dbg !10766
  %18 = load i8*, i8** %17, align 8, !dbg !10766
  store i8* %18, i8** %p, align 8, !dbg !10767
  %19 = load %struct.generic_list*, %struct.generic_list** %1, align 8, !dbg !10768
  %20 = bitcast %struct.generic_list* %19 to i8*, !dbg !10768
  call void @free(i8* %20) #10, !dbg !10769
  %21 = load i8*, i8** %p, align 8, !dbg !10770
  ret i8* %21, !dbg !10771
}

; Function Attrs: nounwind uwtable
define void @list_destroy(%struct.generic_list* %gl, void (i8*)* %freefnc) #0 !dbg !1248 {
  %1 = alloca %struct.generic_list*, align 8
  %2 = alloca void (i8*)*, align 8
  %gl_tmp = alloca %struct.generic_list*, align 8
  %gl_next = alloca %struct.generic_list*, align 8
  store %struct.generic_list* %gl, %struct.generic_list** %1, align 8
  call void @llvm.dbg.declare(metadata %struct.generic_list** %1, metadata !10772, metadata !2279), !dbg !10773
  store void (i8*)* %freefnc, void (i8*)** %2, align 8
  call void @llvm.dbg.declare(metadata void (i8*)** %2, metadata !10774, metadata !2279), !dbg !10775
  call void @llvm.dbg.declare(metadata %struct.generic_list** %gl_tmp, metadata !10776, metadata !2279), !dbg !10777
  call void @llvm.dbg.declare(metadata %struct.generic_list** %gl_next, metadata !10778, metadata !2279), !dbg !10779
  %3 = load %struct.generic_list*, %struct.generic_list** %1, align 8, !dbg !10780
  %4 = icmp ne %struct.generic_list* %3, null, !dbg !10780
  br i1 %4, label %6, label %5, !dbg !10782

; <label>:5                                       ; preds = %0
  br label %35, !dbg !10783

; <label>:6                                       ; preds = %0
  %7 = load %struct.generic_list*, %struct.generic_list** %1, align 8, !dbg !10784
  %8 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %7, i32 0, i32 0, !dbg !10786
  %9 = load %struct.generic_list*, %struct.generic_list** %8, align 8, !dbg !10786
  store %struct.generic_list* %9, %struct.generic_list** %gl_tmp, align 8, !dbg !10787
  br label %10, !dbg !10788

; <label>:10                                      ; preds = %30, %6
  %11 = load %struct.generic_list*, %struct.generic_list** %gl_tmp, align 8, !dbg !10789
  %12 = load %struct.generic_list*, %struct.generic_list** %1, align 8, !dbg !10792
  %13 = icmp ne %struct.generic_list* %11, %12, !dbg !10793
  br i1 %13, label %14, label %32, !dbg !10794

; <label>:14                                      ; preds = %10
  %15 = load %struct.generic_list*, %struct.generic_list** %gl_tmp, align 8, !dbg !10795
  %16 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %15, i32 0, i32 0, !dbg !10797
  %17 = load %struct.generic_list*, %struct.generic_list** %16, align 8, !dbg !10797
  store %struct.generic_list* %17, %struct.generic_list** %gl_next, align 8, !dbg !10798
  %18 = load %struct.generic_list*, %struct.generic_list** %gl_tmp, align 8, !dbg !10799
  %19 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %18, i32 0, i32 2, !dbg !10801
  %20 = load i8*, i8** %19, align 8, !dbg !10801
  %21 = icmp ne i8* %20, null, !dbg !10799
  br i1 %21, label %22, label %27, !dbg !10802

; <label>:22                                      ; preds = %14
  %23 = load void (i8*)*, void (i8*)** %2, align 8, !dbg !10803
  %24 = load %struct.generic_list*, %struct.generic_list** %gl_tmp, align 8, !dbg !10804
  %25 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %24, i32 0, i32 2, !dbg !10805
  %26 = load i8*, i8** %25, align 8, !dbg !10805
  call void %23(i8* %26), !dbg !10806
  br label %27, !dbg !10806

; <label>:27                                      ; preds = %22, %14
  %28 = load %struct.generic_list*, %struct.generic_list** %gl_tmp, align 8, !dbg !10807
  %29 = bitcast %struct.generic_list* %28 to i8*, !dbg !10807
  call void @free(i8* %29) #10, !dbg !10808
  br label %30, !dbg !10809

; <label>:30                                      ; preds = %27
  %31 = load %struct.generic_list*, %struct.generic_list** %gl_next, align 8, !dbg !10810
  store %struct.generic_list* %31, %struct.generic_list** %gl_tmp, align 8, !dbg !10812
  br label %10, !dbg !10813

; <label>:32                                      ; preds = %10
  %33 = load %struct.generic_list*, %struct.generic_list** %1, align 8, !dbg !10814
  %34 = bitcast %struct.generic_list* %33 to i8*, !dbg !10814
  call void @free(i8* %34) #10, !dbg !10815
  br label %35, !dbg !10816

; <label>:35                                      ; preds = %32, %5
  ret void, !dbg !10817
}

; Function Attrs: nounwind uwtable
define %struct.generic_list* @list_dup(%struct.generic_list* %gl, void (i8*)* %freefunc, i8* (i8*)* %dupfunc) #0 !dbg !1251 {
  %1 = alloca %struct.generic_list*, align 8
  %2 = alloca %struct.generic_list*, align 8
  %3 = alloca void (i8*)*, align 8
  %4 = alloca i8* (i8*)*, align 8
  %gl_new = alloca %struct.generic_list*, align 8
  %gl_tmp = alloca %struct.generic_list*, align 8
  %p = alloca i8*, align 8
  store %struct.generic_list* %gl, %struct.generic_list** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.generic_list** %2, metadata !10818, metadata !2279), !dbg !10819
  store void (i8*)* %freefunc, void (i8*)** %3, align 8
  call void @llvm.dbg.declare(metadata void (i8*)** %3, metadata !10820, metadata !2279), !dbg !10821
  store i8* (i8*)* %dupfunc, i8* (i8*)** %4, align 8
  call void @llvm.dbg.declare(metadata i8* (i8*)** %4, metadata !10822, metadata !2279), !dbg !10823
  call void @llvm.dbg.declare(metadata %struct.generic_list** %gl_new, metadata !10824, metadata !2279), !dbg !10825
  call void @llvm.dbg.declare(metadata %struct.generic_list** %gl_tmp, metadata !10826, metadata !2279), !dbg !10827
  call void @llvm.dbg.declare(metadata i8** %p, metadata !10828, metadata !2279), !dbg !10829
  %5 = call %struct.generic_list* @list_init(), !dbg !10830
  store %struct.generic_list* %5, %struct.generic_list** %gl_new, align 8, !dbg !10831
  %6 = load %struct.generic_list*, %struct.generic_list** %gl_new, align 8, !dbg !10832
  %7 = icmp ne %struct.generic_list* %6, null, !dbg !10832
  br i1 %7, label %9, label %8, !dbg !10834

; <label>:8                                       ; preds = %0
  store %struct.generic_list* null, %struct.generic_list** %1, align 8, !dbg !10835
  br label %46, !dbg !10835

; <label>:9                                       ; preds = %0
  %10 = load %struct.generic_list*, %struct.generic_list** %2, align 8, !dbg !10836
  %11 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %10, i32 0, i32 2, !dbg !10837
  store i8* null, i8** %11, align 8, !dbg !10838
  %12 = load %struct.generic_list*, %struct.generic_list** %2, align 8, !dbg !10839
  %13 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %12, i32 0, i32 0, !dbg !10841
  %14 = load %struct.generic_list*, %struct.generic_list** %13, align 8, !dbg !10841
  store %struct.generic_list* %14, %struct.generic_list** %gl_tmp, align 8, !dbg !10842
  br label %15, !dbg !10843

; <label>:15                                      ; preds = %40, %9
  %16 = load %struct.generic_list*, %struct.generic_list** %gl_tmp, align 8, !dbg !10844
  %17 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %16, i32 0, i32 2, !dbg !10847
  %18 = load i8*, i8** %17, align 8, !dbg !10847
  %19 = icmp ne i8* %18, null, !dbg !10848
  br i1 %19, label %20, label %44, !dbg !10848

; <label>:20                                      ; preds = %15
  %21 = load i8* (i8*)*, i8* (i8*)** %4, align 8, !dbg !10849
  %22 = load %struct.generic_list*, %struct.generic_list** %gl_tmp, align 8, !dbg !10851
  %23 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %22, i32 0, i32 2, !dbg !10852
  %24 = load i8*, i8** %23, align 8, !dbg !10852
  %25 = call i8* %21(i8* %24), !dbg !10853
  store i8* %25, i8** %p, align 8, !dbg !10854
  %26 = load i8*, i8** %p, align 8, !dbg !10855
  %27 = icmp ne i8* %26, null, !dbg !10855
  br i1 %27, label %31, label %28, !dbg !10857

; <label>:28                                      ; preds = %20
  %29 = load %struct.generic_list*, %struct.generic_list** %gl_new, align 8, !dbg !10858
  %30 = load void (i8*)*, void (i8*)** %3, align 8, !dbg !10860
  call void @list_destroy(%struct.generic_list* %29, void (i8*)* %30), !dbg !10861
  store %struct.generic_list* null, %struct.generic_list** %1, align 8, !dbg !10862
  br label %46, !dbg !10862

; <label>:31                                      ; preds = %20
  %32 = load %struct.generic_list*, %struct.generic_list** %gl_new, align 8, !dbg !10863
  %33 = load i8*, i8** %p, align 8, !dbg !10865
  %34 = call i32 @list_add_tail(%struct.generic_list* %32, i8* %33), !dbg !10866
  %35 = icmp slt i32 %34, 0, !dbg !10867
  br i1 %35, label %36, label %39, !dbg !10868

; <label>:36                                      ; preds = %31
  %37 = load %struct.generic_list*, %struct.generic_list** %gl_new, align 8, !dbg !10869
  %38 = load void (i8*)*, void (i8*)** %3, align 8, !dbg !10871
  call void @list_destroy(%struct.generic_list* %37, void (i8*)* %38), !dbg !10872
  store %struct.generic_list* null, %struct.generic_list** %1, align 8, !dbg !10873
  br label %46, !dbg !10873

; <label>:39                                      ; preds = %31
  br label %40, !dbg !10874

; <label>:40                                      ; preds = %39
  %41 = load %struct.generic_list*, %struct.generic_list** %gl_tmp, align 8, !dbg !10875
  %42 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %41, i32 0, i32 0, !dbg !10877
  %43 = load %struct.generic_list*, %struct.generic_list** %42, align 8, !dbg !10877
  store %struct.generic_list* %43, %struct.generic_list** %gl_tmp, align 8, !dbg !10878
  br label %15, !dbg !10879

; <label>:44                                      ; preds = %15
  %45 = load %struct.generic_list*, %struct.generic_list** %gl_new, align 8, !dbg !10880
  store %struct.generic_list* %45, %struct.generic_list** %1, align 8, !dbg !10881
  br label %46, !dbg !10881

; <label>:46                                      ; preds = %44, %36, %28, %8
  %47 = load %struct.generic_list*, %struct.generic_list** %1, align 8, !dbg !10882
  ret %struct.generic_list* %47, !dbg !10882
}

; Function Attrs: nounwind uwtable
define void @list_cat(%struct.generic_list* %list, %struct.generic_list* %toadd) #0 !dbg !1257 {
  %1 = alloca %struct.generic_list*, align 8
  %2 = alloca %struct.generic_list*, align 8
  store %struct.generic_list* %list, %struct.generic_list** %1, align 8
  call void @llvm.dbg.declare(metadata %struct.generic_list** %1, metadata !10883, metadata !2279), !dbg !10884
  store %struct.generic_list* %toadd, %struct.generic_list** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.generic_list** %2, metadata !10885, metadata !2279), !dbg !10886
  %3 = load %struct.generic_list*, %struct.generic_list** %2, align 8, !dbg !10887
  %4 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %3, i32 0, i32 2, !dbg !10888
  store i8* null, i8** %4, align 8, !dbg !10889
  %5 = load %struct.generic_list*, %struct.generic_list** %2, align 8, !dbg !10890
  %6 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %5, i32 0, i32 0, !dbg !10892
  %7 = load %struct.generic_list*, %struct.generic_list** %6, align 8, !dbg !10892
  %8 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %7, i32 0, i32 2, !dbg !10893
  %9 = load i8*, i8** %8, align 8, !dbg !10893
  %10 = icmp ne i8* %9, null, !dbg !10890
  br i1 %10, label %11, label %42, !dbg !10894

; <label>:11                                      ; preds = %0
  %12 = load %struct.generic_list*, %struct.generic_list** %2, align 8, !dbg !10895
  %13 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %12, i32 0, i32 0, !dbg !10897
  %14 = load %struct.generic_list*, %struct.generic_list** %13, align 8, !dbg !10897
  %15 = load %struct.generic_list*, %struct.generic_list** %1, align 8, !dbg !10898
  %16 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %15, i32 0, i32 1, !dbg !10899
  %17 = load %struct.generic_list*, %struct.generic_list** %16, align 8, !dbg !10899
  %18 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %17, i32 0, i32 0, !dbg !10900
  store %struct.generic_list* %14, %struct.generic_list** %18, align 8, !dbg !10901
  %19 = load %struct.generic_list*, %struct.generic_list** %1, align 8, !dbg !10902
  %20 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %19, i32 0, i32 1, !dbg !10903
  %21 = load %struct.generic_list*, %struct.generic_list** %20, align 8, !dbg !10903
  %22 = load %struct.generic_list*, %struct.generic_list** %2, align 8, !dbg !10904
  %23 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %22, i32 0, i32 0, !dbg !10905
  %24 = load %struct.generic_list*, %struct.generic_list** %23, align 8, !dbg !10905
  %25 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %24, i32 0, i32 1, !dbg !10906
  store %struct.generic_list* %21, %struct.generic_list** %25, align 8, !dbg !10907
  %26 = load %struct.generic_list*, %struct.generic_list** %2, align 8, !dbg !10908
  %27 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %26, i32 0, i32 1, !dbg !10909
  %28 = load %struct.generic_list*, %struct.generic_list** %27, align 8, !dbg !10909
  %29 = load %struct.generic_list*, %struct.generic_list** %1, align 8, !dbg !10910
  %30 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %29, i32 0, i32 1, !dbg !10911
  store %struct.generic_list* %28, %struct.generic_list** %30, align 8, !dbg !10912
  %31 = load %struct.generic_list*, %struct.generic_list** %1, align 8, !dbg !10913
  %32 = load %struct.generic_list*, %struct.generic_list** %2, align 8, !dbg !10914
  %33 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %32, i32 0, i32 1, !dbg !10915
  %34 = load %struct.generic_list*, %struct.generic_list** %33, align 8, !dbg !10915
  %35 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %34, i32 0, i32 0, !dbg !10916
  store %struct.generic_list* %31, %struct.generic_list** %35, align 8, !dbg !10917
  %36 = load %struct.generic_list*, %struct.generic_list** %2, align 8, !dbg !10918
  %37 = load %struct.generic_list*, %struct.generic_list** %2, align 8, !dbg !10919
  %38 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %37, i32 0, i32 1, !dbg !10920
  store %struct.generic_list* %36, %struct.generic_list** %38, align 8, !dbg !10921
  %39 = load %struct.generic_list*, %struct.generic_list** %2, align 8, !dbg !10922
  %40 = load %struct.generic_list*, %struct.generic_list** %2, align 8, !dbg !10923
  %41 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %40, i32 0, i32 0, !dbg !10924
  store %struct.generic_list* %39, %struct.generic_list** %41, align 8, !dbg !10925
  br label %42, !dbg !10926

; <label>:42                                      ; preds = %11, %0
  ret void, !dbg !10927
}

; Function Attrs: nounwind uwtable
define %struct.rr* @rr_alloc(i32 %ttl, i32 %rd_len, i8* %rdata) #0 !dbg !1317 {
  %1 = alloca %struct.rr*, align 8
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  %ret = alloca %struct.rr*, align 8
  store i32 %ttl, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10928, metadata !2279), !dbg !10929
  store i32 %rd_len, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !10930, metadata !2279), !dbg !10931
  store i8* %rdata, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !10932, metadata !2279), !dbg !10933
  call void @llvm.dbg.declare(metadata %struct.rr** %ret, metadata !10934, metadata !2279), !dbg !10935
  %5 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 8), align 4, !dbg !10936
  %6 = icmp sgt i32 %5, 5, !dbg !10938
  br i1 %6, label %7, label %10, !dbg !10939

; <label>:7                                       ; preds = %0
  %8 = load i32, i32* %2, align 4, !dbg !10940
  %9 = load i32, i32* %3, align 4, !dbg !10941
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.340, i32 0, i32 0), i32 %8, i32 %9), !dbg !10942
  br label %10, !dbg !10942

; <label>:10                                      ; preds = %7, %0
  %11 = load i32, i32* %3, align 4, !dbg !10943
  %12 = sext i32 %11 to i64, !dbg !10943
  %13 = add i64 %12, 6, !dbg !10944
  %14 = call noalias i8* @malloc(i64 %13) #10, !dbg !10945
  %15 = bitcast i8* %14 to %struct.rr*, !dbg !10946
  store %struct.rr* %15, %struct.rr** %ret, align 8, !dbg !10947
  %16 = load %struct.rr*, %struct.rr** %ret, align 8, !dbg !10948
  %17 = icmp ne %struct.rr* %16, null, !dbg !10948
  br i1 %17, label %19, label %18, !dbg !10950

; <label>:18                                      ; preds = %10
  store %struct.rr* null, %struct.rr** %1, align 8, !dbg !10951
  br label %40, !dbg !10951

; <label>:19                                      ; preds = %10
  %20 = load i32, i32* %2, align 4, !dbg !10952
  %21 = load %struct.rr*, %struct.rr** %ret, align 8, !dbg !10953
  %22 = getelementptr inbounds %struct.rr, %struct.rr* %21, i32 0, i32 0, !dbg !10954
  store i32 %20, i32* %22, align 4, !dbg !10955
  %23 = load i32, i32* %3, align 4, !dbg !10956
  %24 = trunc i32 %23 to i16, !dbg !10956
  %25 = load %struct.rr*, %struct.rr** %ret, align 8, !dbg !10957
  %26 = getelementptr inbounds %struct.rr, %struct.rr* %25, i32 0, i32 1, !dbg !10958
  store i16 %24, i16* %26, align 4, !dbg !10959
  %27 = load i8*, i8** %4, align 8, !dbg !10960
  %28 = icmp ne i8* %27, null, !dbg !10960
  br i1 %28, label %29, label %38, !dbg !10962

; <label>:29                                      ; preds = %19
  %30 = load %struct.rr*, %struct.rr** %ret, align 8, !dbg !10963
  %31 = bitcast %struct.rr* %30 to i8*, !dbg !10963
  %32 = getelementptr inbounds i8, i8* %31, i64 6, !dbg !10963
  %33 = load i8*, i8** %4, align 8, !dbg !10964
  %34 = load %struct.rr*, %struct.rr** %ret, align 8, !dbg !10965
  %35 = getelementptr inbounds %struct.rr, %struct.rr* %34, i32 0, i32 1, !dbg !10966
  %36 = load i16, i16* %35, align 4, !dbg !10966
  %37 = zext i16 %36 to i64, !dbg !10965
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %32, i8* %33, i64 %37, i32 1, i1 false), !dbg !10967
  br label %38, !dbg !10967

; <label>:38                                      ; preds = %29, %19
  %39 = load %struct.rr*, %struct.rr** %ret, align 8, !dbg !10968
  store %struct.rr* %39, %struct.rr** %1, align 8, !dbg !10969
  br label %40, !dbg !10969

; <label>:40                                      ; preds = %38, %18
  %41 = load %struct.rr*, %struct.rr** %1, align 8, !dbg !10970
  ret %struct.rr* %41, !dbg !10970
}

; Function Attrs: nounwind uwtable
define %struct.rr_list* @rr_list_alloc() #0 !dbg !1320 {
  %1 = alloca %struct.rr_list*, align 8
  %ret = alloca %struct.rr_list*, align 8
  call void @llvm.dbg.declare(metadata %struct.rr_list** %ret, metadata !10971, metadata !2279), !dbg !10972
  %2 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 8), align 4, !dbg !10973
  %3 = icmp sgt i32 %2, 5, !dbg !10975
  br i1 %3, label %4, label %5, !dbg !10976

; <label>:4                                       ; preds = %0
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1.343, i32 0, i32 0)), !dbg !10977
  br label %5, !dbg !10977

; <label>:5                                       ; preds = %4, %0
  %6 = call noalias i8* @malloc(i64 24) #10, !dbg !10978
  %7 = bitcast i8* %6 to %struct.rr_list*, !dbg !10979
  store %struct.rr_list* %7, %struct.rr_list** %ret, align 8, !dbg !10980
  %8 = load %struct.rr_list*, %struct.rr_list** %ret, align 8, !dbg !10981
  %9 = icmp ne %struct.rr_list* %8, null, !dbg !10981
  br i1 %9, label %11, label %10, !dbg !10983

; <label>:10                                      ; preds = %5
  store %struct.rr_list* null, %struct.rr_list** %1, align 8, !dbg !10984
  br label %19, !dbg !10984

; <label>:11                                      ; preds = %5
  %12 = load %struct.rr_list*, %struct.rr_list** %ret, align 8, !dbg !10985
  %13 = getelementptr inbounds %struct.rr_list, %struct.rr_list* %12, i32 0, i32 0, !dbg !10986
  store %struct.rr_list* null, %struct.rr_list** %13, align 8, !dbg !10987
  %14 = load %struct.rr_list*, %struct.rr_list** %ret, align 8, !dbg !10988
  %15 = getelementptr inbounds %struct.rr_list, %struct.rr_list* %14, i32 0, i32 3, !dbg !10989
  store %struct.rr* null, %struct.rr** %15, align 8, !dbg !10990
  %16 = load %struct.rr_list*, %struct.rr_list** %ret, align 8, !dbg !10991
  %17 = getelementptr inbounds %struct.rr_list, %struct.rr_list* %16, i32 0, i32 1, !dbg !10992
  store i32 -1, i32* %17, align 8, !dbg !10993
  %18 = load %struct.rr_list*, %struct.rr_list** %ret, align 8, !dbg !10994
  store %struct.rr_list* %18, %struct.rr_list** %1, align 8, !dbg !10995
  br label %19, !dbg !10995

; <label>:19                                      ; preds = %11, %10
  %20 = load %struct.rr_list*, %struct.rr_list** %1, align 8, !dbg !10996
  ret %struct.rr_list* %20, !dbg !10996
}

; Function Attrs: nounwind uwtable
define void @rr_list_free(%struct.rr_list* %rrl) #0 !dbg !1323 {
  %1 = alloca %struct.rr_list*, align 8
  %fn = alloca i8*, align 8
  %rrl_tmp = alloca %struct.rr_list*, align 8
  store %struct.rr_list* %rrl, %struct.rr_list** %1, align 8
  call void @llvm.dbg.declare(metadata %struct.rr_list** %1, metadata !10997, metadata !2279), !dbg !10998
  call void @llvm.dbg.declare(metadata i8** %fn, metadata !10999, metadata !2279), !dbg !11000
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2.346, i32 0, i32 0), i8** %fn, align 8, !dbg !11000
  call void @llvm.dbg.declare(metadata %struct.rr_list** %rrl_tmp, metadata !11001, metadata !2279), !dbg !11002
  %2 = load %struct.rr_list*, %struct.rr_list** %1, align 8, !dbg !11003
  %3 = icmp ne %struct.rr_list* %2, null, !dbg !11003
  br i1 %3, label %10, label %4, !dbg !11005

; <label>:4                                       ; preds = %0
  %5 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 8), align 4, !dbg !11006
  %6 = icmp sgt i32 %5, 5, !dbg !11009
  br i1 %6, label %7, label %9, !dbg !11010

; <label>:7                                       ; preds = %4
  %8 = load i8*, i8** %fn, align 8, !dbg !11011
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.3.347, i32 0, i32 0), i8* %8), !dbg !11012
  br label %9, !dbg !11012

; <label>:9                                       ; preds = %7, %4
  br label %51, !dbg !11013

; <label>:10                                      ; preds = %0
  %11 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 8), align 4, !dbg !11014
  %12 = icmp sgt i32 %11, 5, !dbg !11016
  br i1 %12, label %13, label %16, !dbg !11017

; <label>:13                                      ; preds = %10
  %14 = load i8*, i8** %fn, align 8, !dbg !11018
  %15 = load %struct.rr_list*, %struct.rr_list** %1, align 8, !dbg !11019
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4.348, i32 0, i32 0), i8* %14, %struct.rr_list* %15), !dbg !11020
  br label %16, !dbg !11020

; <label>:16                                      ; preds = %13, %10
  br label %17, !dbg !11021

; <label>:17                                      ; preds = %46, %16
  %18 = load %struct.rr_list*, %struct.rr_list** %1, align 8, !dbg !11022
  %19 = getelementptr inbounds %struct.rr_list, %struct.rr_list* %18, i32 0, i32 0, !dbg !11026
  %20 = load %struct.rr_list*, %struct.rr_list** %19, align 8, !dbg !11026
  %21 = icmp ne %struct.rr_list* %20, null, !dbg !11027
  br i1 %21, label %22, label %48, !dbg !11027

; <label>:22                                      ; preds = %17
  %23 = load %struct.rr_list*, %struct.rr_list** %1, align 8, !dbg !11028
  %24 = getelementptr inbounds %struct.rr_list, %struct.rr_list* %23, i32 0, i32 3, !dbg !11031
  %25 = load %struct.rr*, %struct.rr** %24, align 8, !dbg !11031
  %26 = icmp ne %struct.rr* %25, null, !dbg !11028
  br i1 %26, label %27, label %40, !dbg !11032

; <label>:27                                      ; preds = %22
  %28 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 8), align 4, !dbg !11033
  %29 = icmp sgt i32 %28, 5, !dbg !11036
  br i1 %29, label %30, label %35, !dbg !11037

; <label>:30                                      ; preds = %27
  %31 = load i8*, i8** %fn, align 8, !dbg !11038
  %32 = load %struct.rr_list*, %struct.rr_list** %1, align 8, !dbg !11039
  %33 = getelementptr inbounds %struct.rr_list, %struct.rr_list* %32, i32 0, i32 3, !dbg !11040
  %34 = load %struct.rr*, %struct.rr** %33, align 8, !dbg !11040
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.5.349, i32 0, i32 0), i8* %31, %struct.rr* %34), !dbg !11041
  br label %35, !dbg !11041

; <label>:35                                      ; preds = %30, %27
  %36 = load %struct.rr_list*, %struct.rr_list** %1, align 8, !dbg !11042
  %37 = getelementptr inbounds %struct.rr_list, %struct.rr_list* %36, i32 0, i32 3, !dbg !11043
  %38 = load %struct.rr*, %struct.rr** %37, align 8, !dbg !11043
  %39 = bitcast %struct.rr* %38 to i8*, !dbg !11042
  call void @free(i8* %39) #10, !dbg !11044
  br label %40, !dbg !11045

; <label>:40                                      ; preds = %35, %22
  %41 = load %struct.rr_list*, %struct.rr_list** %1, align 8, !dbg !11046
  %42 = getelementptr inbounds %struct.rr_list, %struct.rr_list* %41, i32 0, i32 0, !dbg !11047
  %43 = load %struct.rr_list*, %struct.rr_list** %42, align 8, !dbg !11047
  store %struct.rr_list* %43, %struct.rr_list** %rrl_tmp, align 8, !dbg !11048
  %44 = load %struct.rr_list*, %struct.rr_list** %1, align 8, !dbg !11049
  %45 = bitcast %struct.rr_list* %44 to i8*, !dbg !11049
  call void @free(i8* %45) #10, !dbg !11050
  br label %46, !dbg !11051

; <label>:46                                      ; preds = %40
  %47 = load %struct.rr_list*, %struct.rr_list** %rrl_tmp, align 8, !dbg !11052
  store %struct.rr_list* %47, %struct.rr_list** %1, align 8, !dbg !11054
  br label %17, !dbg !11055

; <label>:48                                      ; preds = %17
  %49 = load %struct.rr_list*, %struct.rr_list** %1, align 8, !dbg !11056
  %50 = bitcast %struct.rr_list* %49 to i8*, !dbg !11056
  call void @free(i8* %50) #10, !dbg !11057
  br label %51, !dbg !11058

; <label>:51                                      ; preds = %48, %9
  ret void, !dbg !11059
}

; Function Attrs: nounwind uwtable
define %struct.rr_list* @rr_list_add(%struct.rr_list* %rrl, i32 %ttl, i32 %rd_len, i8* %rdata) #0 !dbg !1326 {
  %1 = alloca %struct.rr_list*, align 8
  %2 = alloca %struct.rr_list*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %rrl_tmp = alloca %struct.rr_list*, align 8
  store %struct.rr_list* %rrl, %struct.rr_list** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.rr_list** %2, metadata !11060, metadata !2279), !dbg !11061
  store i32 %ttl, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !11062, metadata !2279), !dbg !11063
  store i32 %rd_len, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !11064, metadata !2279), !dbg !11065
  store i8* %rdata, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !11066, metadata !2279), !dbg !11067
  call void @llvm.dbg.declare(metadata %struct.rr_list** %rrl_tmp, metadata !11068, metadata !2279), !dbg !11069
  %6 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 8), align 4, !dbg !11070
  %7 = icmp sgt i32 %6, 5, !dbg !11072
  br i1 %7, label %8, label %11, !dbg !11073

; <label>:8                                       ; preds = %0
  %9 = load i32, i32* %3, align 4, !dbg !11074
  %10 = load i32, i32* %4, align 4, !dbg !11075
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.6.352, i32 0, i32 0), i32 %9, i32 %10), !dbg !11076
  br label %11, !dbg !11076

; <label>:11                                      ; preds = %8, %0
  %12 = call noalias i8* @malloc(i64 24) #10, !dbg !11077
  %13 = bitcast i8* %12 to %struct.rr_list*, !dbg !11078
  store %struct.rr_list* %13, %struct.rr_list** %rrl_tmp, align 8, !dbg !11079
  %14 = load %struct.rr_list*, %struct.rr_list** %rrl_tmp, align 8, !dbg !11080
  %15 = icmp ne %struct.rr_list* %14, null, !dbg !11080
  br i1 %15, label %17, label %16, !dbg !11082

; <label>:16                                      ; preds = %11
  store %struct.rr_list* null, %struct.rr_list** %1, align 8, !dbg !11083
  br label %42, !dbg !11083

; <label>:17                                      ; preds = %11
  %18 = load i32, i32* %3, align 4, !dbg !11084
  %19 = load i32, i32* %4, align 4, !dbg !11085
  %20 = load i8*, i8** %5, align 8, !dbg !11086
  %21 = call %struct.rr* @rr_alloc(i32 %18, i32 %19, i8* %20), !dbg !11087
  %22 = load %struct.rr_list*, %struct.rr_list** %rrl_tmp, align 8, !dbg !11088
  %23 = getelementptr inbounds %struct.rr_list, %struct.rr_list* %22, i32 0, i32 3, !dbg !11089
  store %struct.rr* %21, %struct.rr** %23, align 8, !dbg !11090
  %24 = load %struct.rr_list*, %struct.rr_list** %rrl_tmp, align 8, !dbg !11091
  %25 = getelementptr inbounds %struct.rr_list, %struct.rr_list* %24, i32 0, i32 3, !dbg !11093
  %26 = load %struct.rr*, %struct.rr** %25, align 8, !dbg !11093
  %27 = icmp ne %struct.rr* %26, null, !dbg !11091
  br i1 %27, label %31, label %28, !dbg !11094

; <label>:28                                      ; preds = %17
  %29 = load %struct.rr_list*, %struct.rr_list** %rrl_tmp, align 8, !dbg !11095
  %30 = bitcast %struct.rr_list* %29 to i8*, !dbg !11095
  call void @free(i8* %30) #10, !dbg !11097
  store %struct.rr_list* null, %struct.rr_list** %1, align 8, !dbg !11098
  br label %42, !dbg !11098

; <label>:31                                      ; preds = %17
  %32 = load %struct.rr_list*, %struct.rr_list** %2, align 8, !dbg !11099
  %33 = load %struct.rr_list*, %struct.rr_list** %rrl_tmp, align 8, !dbg !11100
  %34 = getelementptr inbounds %struct.rr_list, %struct.rr_list* %33, i32 0, i32 0, !dbg !11101
  store %struct.rr_list* %32, %struct.rr_list** %34, align 8, !dbg !11102
  %35 = load %struct.rr_list*, %struct.rr_list** %2, align 8, !dbg !11103
  %36 = getelementptr inbounds %struct.rr_list, %struct.rr_list* %35, i32 0, i32 1, !dbg !11104
  %37 = load i32, i32* %36, align 8, !dbg !11104
  %38 = add nsw i32 %37, 1, !dbg !11105
  %39 = load %struct.rr_list*, %struct.rr_list** %rrl_tmp, align 8, !dbg !11106
  %40 = getelementptr inbounds %struct.rr_list, %struct.rr_list* %39, i32 0, i32 1, !dbg !11107
  store i32 %38, i32* %40, align 8, !dbg !11108
  %41 = load %struct.rr_list*, %struct.rr_list** %rrl_tmp, align 8, !dbg !11109
  store %struct.rr_list* %41, %struct.rr_list** %1, align 8, !dbg !11110
  br label %42, !dbg !11110

; <label>:42                                      ; preds = %31, %28, %16
  %43 = load %struct.rr_list*, %struct.rr_list** %1, align 8, !dbg !11111
  ret %struct.rr_list* %43, !dbg !11111
}

; Function Attrs: nounwind uwtable
define %struct.rr* @rrset_get_rr_f(i32 %n, %struct.rr_set* %rrset) #0 !dbg !1329 {
  %1 = alloca i32, align 4
  %2 = alloca %struct.rr_set*, align 8
  %offset = alloca i16, align 2
  store i32 %n, i32* %1, align 4
  call void @llvm.dbg.declare(metadata i32* %1, metadata !11112, metadata !2279), !dbg !11113
  store %struct.rr_set* %rrset, %struct.rr_set** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.rr_set** %2, metadata !11114, metadata !2279), !dbg !11115
  call void @llvm.dbg.declare(metadata i16* %offset, metadata !11116, metadata !2279), !dbg !11117
  %3 = load %struct.rr_set*, %struct.rr_set** %2, align 8, !dbg !11118
  %4 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %3, i32 0, i32 4, !dbg !11119
  %5 = bitcast %union.u_data* %4 to i8**, !dbg !11120
  %6 = load i8*, i8** %5, align 8, !dbg !11120
  %7 = getelementptr inbounds i8, i8* %6, i64 2, !dbg !11121
  %8 = load i32, i32* %1, align 4, !dbg !11122
  %9 = sext i32 %8 to i64, !dbg !11122
  %10 = mul i64 2, %9, !dbg !11123
  %11 = getelementptr inbounds i8, i8* %7, i64 %10, !dbg !11124
  %12 = bitcast i8* %11 to i16*, !dbg !11125
  %13 = load i16, i16* %12, align 2, !dbg !11125
  store i16 %13, i16* %offset, align 2, !dbg !11126
  %14 = load %struct.rr_set*, %struct.rr_set** %2, align 8, !dbg !11127
  %15 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %14, i32 0, i32 4, !dbg !11128
  %16 = bitcast %union.u_data* %15 to i8**, !dbg !11129
  %17 = load i8*, i8** %16, align 8, !dbg !11129
  %18 = load i16, i16* %offset, align 2, !dbg !11130
  %19 = zext i16 %18 to i32, !dbg !11130
  %20 = sext i32 %19 to i64, !dbg !11131
  %21 = getelementptr inbounds i8, i8* %17, i64 %20, !dbg !11131
  %22 = bitcast i8* %21 to %struct.rr*, !dbg !11132
  ret %struct.rr* %22, !dbg !11133
}

; Function Attrs: nounwind uwtable
define %struct.rr_list* @rr_list_of_rrset(%struct.rr_set* %rrsp) #0 !dbg !1332 {
  %1 = alloca %struct.rr_list*, align 8
  %2 = alloca %struct.rr_set*, align 8
  %rrl = alloca %struct.rr_list*, align 8
  %rrl_tmp = alloca %struct.rr_list*, align 8
  %rrp = alloca %struct.rr*, align 8
  %i = alloca i32, align 4
  store %struct.rr_set* %rrsp, %struct.rr_set** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.rr_set** %2, metadata !11134, metadata !2279), !dbg !11135
  call void @llvm.dbg.declare(metadata %struct.rr_list** %rrl, metadata !11136, metadata !2279), !dbg !11137
  call void @llvm.dbg.declare(metadata %struct.rr_list** %rrl_tmp, metadata !11138, metadata !2279), !dbg !11139
  call void @llvm.dbg.declare(metadata %struct.rr** %rrp, metadata !11140, metadata !2279), !dbg !11141
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11142, metadata !2279), !dbg !11143
  %3 = call %struct.rr_list* @rr_list_alloc(), !dbg !11144
  store %struct.rr_list* %3, %struct.rr_list** %rrl, align 8, !dbg !11145
  %4 = load %struct.rr_list*, %struct.rr_list** %rrl, align 8, !dbg !11146
  %5 = icmp ne %struct.rr_list* %4, null, !dbg !11146
  br i1 %5, label %7, label %6, !dbg !11148

; <label>:6                                       ; preds = %0
  store %struct.rr_list* null, %struct.rr_list** %1, align 8, !dbg !11149
  br label %70, !dbg !11149

; <label>:7                                       ; preds = %0
  %8 = load %struct.rr_set*, %struct.rr_set** %2, align 8, !dbg !11150
  %9 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %8, i32 0, i32 4, !dbg !11152
  %10 = bitcast %union.u_data* %9 to i8**, !dbg !11153
  %11 = load i8*, i8** %10, align 8, !dbg !11153
  %12 = icmp ne i8* %11, null, !dbg !11150
  br i1 %12, label %15, label %13, !dbg !11154

; <label>:13                                      ; preds = %7
  %14 = load %struct.rr_list*, %struct.rr_list** %rrl, align 8, !dbg !11155
  store %struct.rr_list* %14, %struct.rr_list** %1, align 8, !dbg !11156
  br label %70, !dbg !11156

; <label>:15                                      ; preds = %7
  store i32 0, i32* %i, align 4, !dbg !11157
  br label %16, !dbg !11159

; <label>:16                                      ; preds = %65, %15
  %17 = load i32, i32* %i, align 4, !dbg !11160
  %18 = load %struct.rr_set*, %struct.rr_set** %2, align 8, !dbg !11163
  %19 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %18, i32 0, i32 4, !dbg !11164
  %20 = bitcast %union.u_data* %19 to %struct.data_data**, !dbg !11165
  %21 = load %struct.data_data*, %struct.data_data** %20, align 8, !dbg !11165
  %22 = getelementptr inbounds %struct.data_data, %struct.data_data* %21, i32 0, i32 0, !dbg !11166
  %23 = load i16, i16* %22, align 2, !dbg !11166
  %24 = zext i16 %23 to i32, !dbg !11163
  %25 = icmp slt i32 %17, %24, !dbg !11167
  br i1 %25, label %26, label %68, !dbg !11168

; <label>:26                                      ; preds = %16
  %27 = load %struct.rr_set*, %struct.rr_set** %2, align 8, !dbg !11169
  %28 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %27, i32 0, i32 4, !dbg !11171
  %29 = bitcast %union.u_data* %28 to i8**, !dbg !11172
  %30 = load i8*, i8** %29, align 8, !dbg !11172
  %31 = load %struct.rr_set*, %struct.rr_set** %2, align 8, !dbg !11173
  %32 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %31, i32 0, i32 4, !dbg !11173
  %33 = bitcast %union.u_data* %32 to %struct.data_data**, !dbg !11173
  %34 = load %struct.data_data*, %struct.data_data** %33, align 8, !dbg !11173
  %35 = bitcast %struct.data_data* %34 to i8*, !dbg !11173
  %36 = load i32, i32* %i, align 4, !dbg !11173
  %37 = add nsw i32 %36, 1, !dbg !11173
  %38 = sext i32 %37 to i64, !dbg !11173
  %39 = mul i64 2, %38, !dbg !11173
  %40 = getelementptr inbounds i8, i8* %35, i64 %39, !dbg !11173
  %41 = bitcast i8* %40 to i16*, !dbg !11173
  %42 = load i16, i16* %41, align 2, !dbg !11173
  %43 = zext i16 %42 to i32, !dbg !11173
  %44 = sext i32 %43 to i64, !dbg !11174
  %45 = getelementptr inbounds i8, i8* %30, i64 %44, !dbg !11174
  %46 = bitcast i8* %45 to %struct.rr*, !dbg !11175
  store %struct.rr* %46, %struct.rr** %rrp, align 8, !dbg !11176
  %47 = load %struct.rr_list*, %struct.rr_list** %rrl, align 8, !dbg !11177
  %48 = load %struct.rr*, %struct.rr** %rrp, align 8, !dbg !11178
  %49 = getelementptr inbounds %struct.rr, %struct.rr* %48, i32 0, i32 0, !dbg !11179
  %50 = load i32, i32* %49, align 4, !dbg !11179
  %51 = load %struct.rr*, %struct.rr** %rrp, align 8, !dbg !11180
  %52 = getelementptr inbounds %struct.rr, %struct.rr* %51, i32 0, i32 1, !dbg !11181
  %53 = load i16, i16* %52, align 4, !dbg !11181
  %54 = zext i16 %53 to i32, !dbg !11180
  %55 = load %struct.rr*, %struct.rr** %rrp, align 8, !dbg !11182
  %56 = bitcast %struct.rr* %55 to i8*, !dbg !11182
  %57 = getelementptr inbounds i8, i8* %56, i64 6, !dbg !11182
  %58 = call %struct.rr_list* @rr_list_add(%struct.rr_list* %47, i32 %50, i32 %54, i8* %57), !dbg !11183
  store %struct.rr_list* %58, %struct.rr_list** %rrl_tmp, align 8, !dbg !11184
  %59 = load %struct.rr_list*, %struct.rr_list** %rrl_tmp, align 8, !dbg !11185
  %60 = icmp ne %struct.rr_list* %59, null, !dbg !11185
  br i1 %60, label %63, label %61, !dbg !11187

; <label>:61                                      ; preds = %26
  %62 = load %struct.rr_list*, %struct.rr_list** %rrl, align 8, !dbg !11188
  call void @rr_list_free(%struct.rr_list* %62), !dbg !11190
  store %struct.rr_list* null, %struct.rr_list** %1, align 8, !dbg !11191
  br label %70, !dbg !11191

; <label>:63                                      ; preds = %26
  %64 = load %struct.rr_list*, %struct.rr_list** %rrl_tmp, align 8, !dbg !11192
  store %struct.rr_list* %64, %struct.rr_list** %rrl, align 8, !dbg !11193
  br label %65, !dbg !11194

; <label>:65                                      ; preds = %63
  %66 = load i32, i32* %i, align 4, !dbg !11195
  %67 = add nsw i32 %66, 1, !dbg !11195
  store i32 %67, i32* %i, align 4, !dbg !11195
  br label %16, !dbg !11197

; <label>:68                                      ; preds = %16
  %69 = load %struct.rr_list*, %struct.rr_list** %rrl, align 8, !dbg !11198
  store %struct.rr_list* %69, %struct.rr_list** %1, align 8, !dbg !11199
  br label %70, !dbg !11199

; <label>:70                                      ; preds = %68, %61, %13, %6
  %71 = load %struct.rr_list*, %struct.rr_list** %1, align 8, !dbg !11200
  ret %struct.rr_list* %71, !dbg !11200
}

; Function Attrs: nounwind uwtable
define %struct.rr_set* @rrset_alloc() #0 !dbg !1335 {
  %1 = alloca %struct.rr_set*, align 8
  %ret = alloca %struct.rr_set*, align 8
  call void @llvm.dbg.declare(metadata %struct.rr_set** %ret, metadata !11201, metadata !2279), !dbg !11202
  %2 = call noalias i8* @malloc(i64 40) #10, !dbg !11203
  %3 = bitcast i8* %2 to %struct.rr_set*, !dbg !11204
  store %struct.rr_set* %3, %struct.rr_set** %ret, align 8, !dbg !11205
  %4 = load %struct.rr_set*, %struct.rr_set** %ret, align 8, !dbg !11206
  %5 = icmp ne %struct.rr_set* %4, null, !dbg !11206
  br i1 %5, label %7, label %6, !dbg !11208

; <label>:6                                       ; preds = %0
  store %struct.rr_set* null, %struct.rr_set** %1, align 8, !dbg !11209
  br label %26, !dbg !11209

; <label>:7                                       ; preds = %0
  %8 = load %struct.rr_set*, %struct.rr_set** %ret, align 8, !dbg !11210
  %9 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %8, i32 0, i32 1, !dbg !11211
  store i64 0, i64* %9, align 8, !dbg !11212
  %10 = load %struct.rr_set*, %struct.rr_set** %ret, align 8, !dbg !11213
  %11 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %10, i32 0, i32 2, !dbg !11214
  %12 = bitcast %union.u_key* %11 to i8**, !dbg !11215
  store i8* null, i8** %12, align 8, !dbg !11216
  %13 = load %struct.rr_set*, %struct.rr_set** %ret, align 8, !dbg !11217
  %14 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %13, i32 0, i32 3, !dbg !11218
  store i64 0, i64* %14, align 8, !dbg !11219
  %15 = load %struct.rr_set*, %struct.rr_set** %ret, align 8, !dbg !11220
  %16 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %15, i32 0, i32 4, !dbg !11221
  %17 = bitcast %union.u_data* %16 to i8**, !dbg !11222
  store i8* null, i8** %17, align 8, !dbg !11223
  %18 = load %struct.rr_set*, %struct.rr_set** %ret, align 8, !dbg !11224
  %19 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %18, i32 0, i32 0, !dbg !11225
  store i32 1, i32* %19, align 8, !dbg !11226
  %20 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 8), align 4, !dbg !11227
  %21 = icmp sgt i32 %20, 5, !dbg !11229
  br i1 %21, label %22, label %24, !dbg !11230

; <label>:22                                      ; preds = %7
  %23 = load %struct.rr_set*, %struct.rr_set** %ret, align 8, !dbg !11231
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.7.355, i32 0, i32 0), %struct.rr_set* %23), !dbg !11232
  br label %24, !dbg !11232

; <label>:24                                      ; preds = %22, %7
  %25 = load %struct.rr_set*, %struct.rr_set** %ret, align 8, !dbg !11233
  store %struct.rr_set* %25, %struct.rr_set** %1, align 8, !dbg !11234
  br label %26, !dbg !11234

; <label>:26                                      ; preds = %24, %6
  %27 = load %struct.rr_set*, %struct.rr_set** %1, align 8, !dbg !11235
  ret %struct.rr_set* %27, !dbg !11235
}

; Function Attrs: nounwind uwtable
define %struct.rr_set* @rrset_create(i16 zeroext %r_type, i16 zeroext %r_class, i16 zeroext %owner_len, i8* %owner, %struct.rr_list* %rrl) #0 !dbg !1338 {
  %1 = alloca %struct.rr_set*, align 8
  %2 = alloca i16, align 2
  %3 = alloca i16, align 2
  %4 = alloca i16, align 2
  %5 = alloca i8*, align 8
  %6 = alloca %struct.rr_list*, align 8
  %rrl_tmp = alloca %struct.rr_list*, align 8
  %len = alloca i32, align 4
  %rrs = alloca %struct.rr_set*, align 8
  store i16 %r_type, i16* %2, align 2
  call void @llvm.dbg.declare(metadata i16* %2, metadata !11236, metadata !2279), !dbg !11237
  store i16 %r_class, i16* %3, align 2
  call void @llvm.dbg.declare(metadata i16* %3, metadata !11238, metadata !2279), !dbg !11239
  store i16 %owner_len, i16* %4, align 2
  call void @llvm.dbg.declare(metadata i16* %4, metadata !11240, metadata !2279), !dbg !11241
  store i8* %owner, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !11242, metadata !2279), !dbg !11243
  store %struct.rr_list* %rrl, %struct.rr_list** %6, align 8
  call void @llvm.dbg.declare(metadata %struct.rr_list** %6, metadata !11244, metadata !2279), !dbg !11245
  call void @llvm.dbg.declare(metadata %struct.rr_list** %rrl_tmp, metadata !11246, metadata !2279), !dbg !11247
  call void @llvm.dbg.declare(metadata i32* %len, metadata !11248, metadata !2279), !dbg !11249
  call void @llvm.dbg.declare(metadata %struct.rr_set** %rrs, metadata !11250, metadata !2279), !dbg !11251
  %7 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 8), align 4, !dbg !11252
  %8 = icmp sgt i32 %7, 5, !dbg !11254
  br i1 %8, label %9, label %14, !dbg !11255

; <label>:9                                       ; preds = %0
  %10 = load i16, i16* %2, align 2, !dbg !11256
  %11 = call i8* @string_rtype(i16 zeroext %10), !dbg !11257
  %12 = load i16, i16* %3, align 2, !dbg !11258
  %13 = call i8* @string_rclass(i16 zeroext %12), !dbg !11259
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.8.358, i32 0, i32 0), i8* %11, i8* %13), !dbg !11261
  br label %14, !dbg !11261

; <label>:14                                      ; preds = %9, %0
  %15 = call %struct.rr_set* @rrset_alloc(), !dbg !11262
  store %struct.rr_set* %15, %struct.rr_set** %rrs, align 8, !dbg !11263
  %16 = load %struct.rr_set*, %struct.rr_set** %rrs, align 8, !dbg !11264
  %17 = icmp ne %struct.rr_set* %16, null, !dbg !11264
  br i1 %17, label %19, label %18, !dbg !11266

; <label>:18                                      ; preds = %14
  store %struct.rr_set* null, %struct.rr_set** %1, align 8, !dbg !11267
  br label %214, !dbg !11267

; <label>:19                                      ; preds = %14
  %20 = load i16, i16* %4, align 2, !dbg !11268
  %21 = zext i16 %20 to i64, !dbg !11268
  %22 = add i64 %21, 6, !dbg !11269
  %23 = trunc i64 %22 to i32, !dbg !11268
  store i32 %23, i32* %len, align 4, !dbg !11270
  %24 = load i32, i32* %len, align 4, !dbg !11271
  %25 = sext i32 %24 to i64, !dbg !11271
  %26 = call noalias i8* @malloc(i64 %25) #10, !dbg !11272
  %27 = load %struct.rr_set*, %struct.rr_set** %rrs, align 8, !dbg !11273
  %28 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %27, i32 0, i32 2, !dbg !11274
  %29 = bitcast %union.u_key* %28 to i8**, !dbg !11275
  store i8* %26, i8** %29, align 8, !dbg !11276
  %30 = load %struct.rr_set*, %struct.rr_set** %rrs, align 8, !dbg !11277
  %31 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %30, i32 0, i32 2, !dbg !11279
  %32 = bitcast %union.u_key* %31 to i8**, !dbg !11280
  %33 = load i8*, i8** %32, align 8, !dbg !11280
  %34 = icmp ne i8* %33, null, !dbg !11277
  br i1 %34, label %37, label %35, !dbg !11281

; <label>:35                                      ; preds = %19
  %36 = load %struct.rr_set*, %struct.rr_set** %rrs, align 8, !dbg !11282
  call void @rrset_free(%struct.rr_set* %36), !dbg !11284
  store %struct.rr_set* null, %struct.rr_set** %1, align 8, !dbg !11285
  br label %214, !dbg !11285

; <label>:37                                      ; preds = %19
  %38 = load i32, i32* %len, align 4, !dbg !11286
  %39 = sext i32 %38 to i64, !dbg !11286
  %40 = load %struct.rr_set*, %struct.rr_set** %rrs, align 8, !dbg !11287
  %41 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %40, i32 0, i32 1, !dbg !11288
  store i64 %39, i64* %41, align 8, !dbg !11289
  %42 = load i16, i16* %2, align 2, !dbg !11290
  %43 = load %struct.rr_set*, %struct.rr_set** %rrs, align 8, !dbg !11291
  %44 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %43, i32 0, i32 2, !dbg !11292
  %45 = bitcast %union.u_key* %44 to %struct.key_info**, !dbg !11293
  %46 = load %struct.key_info*, %struct.key_info** %45, align 8, !dbg !11293
  %47 = getelementptr inbounds %struct.key_info, %struct.key_info* %46, i32 0, i32 0, !dbg !11294
  store i16 %42, i16* %47, align 2, !dbg !11295
  %48 = load i16, i16* %3, align 2, !dbg !11296
  %49 = load %struct.rr_set*, %struct.rr_set** %rrs, align 8, !dbg !11297
  %50 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %49, i32 0, i32 2, !dbg !11298
  %51 = bitcast %union.u_key* %50 to %struct.key_info**, !dbg !11299
  %52 = load %struct.key_info*, %struct.key_info** %51, align 8, !dbg !11299
  %53 = getelementptr inbounds %struct.key_info, %struct.key_info* %52, i32 0, i32 1, !dbg !11300
  store i16 %48, i16* %53, align 2, !dbg !11301
  %54 = load i16, i16* %4, align 2, !dbg !11302
  %55 = load %struct.rr_set*, %struct.rr_set** %rrs, align 8, !dbg !11303
  %56 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %55, i32 0, i32 2, !dbg !11304
  %57 = bitcast %union.u_key* %56 to %struct.key_info**, !dbg !11305
  %58 = load %struct.key_info*, %struct.key_info** %57, align 8, !dbg !11305
  %59 = getelementptr inbounds %struct.key_info, %struct.key_info* %58, i32 0, i32 2, !dbg !11306
  store i16 %54, i16* %59, align 2, !dbg !11307
  %60 = load %struct.rr_set*, %struct.rr_set** %rrs, align 8, !dbg !11308
  %61 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %60, i32 0, i32 2, !dbg !11308
  %62 = bitcast %union.u_key* %61 to %struct.key_info**, !dbg !11308
  %63 = load %struct.key_info*, %struct.key_info** %62, align 8, !dbg !11308
  %64 = bitcast %struct.key_info* %63 to i8*, !dbg !11308
  %65 = getelementptr inbounds i8, i8* %64, i64 6, !dbg !11308
  %66 = load i8*, i8** %5, align 8, !dbg !11309
  %67 = load i16, i16* %4, align 2, !dbg !11310
  %68 = zext i16 %67 to i64, !dbg !11310
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %65, i8* %66, i64 %68, i32 1, i1 false), !dbg !11311
  %69 = load %struct.rr_list*, %struct.rr_list** %6, align 8, !dbg !11312
  %70 = icmp ne %struct.rr_list* %69, null, !dbg !11312
  br i1 %70, label %73, label %71, !dbg !11314

; <label>:71                                      ; preds = %37
  %72 = load %struct.rr_set*, %struct.rr_set** %rrs, align 8, !dbg !11315
  store %struct.rr_set* %72, %struct.rr_set** %1, align 8, !dbg !11316
  br label %214, !dbg !11316

; <label>:73                                      ; preds = %37
  %74 = load %struct.rr_list*, %struct.rr_list** %6, align 8, !dbg !11317
  %75 = getelementptr inbounds %struct.rr_list, %struct.rr_list* %74, i32 0, i32 1, !dbg !11318
  %76 = load i32, i32* %75, align 8, !dbg !11318
  %77 = add nsw i32 %76, 1, !dbg !11319
  %78 = sext i32 %77 to i64, !dbg !11320
  %79 = mul i64 %78, 2, !dbg !11321
  %80 = add i64 %79, 2, !dbg !11322
  %81 = trunc i64 %80 to i32, !dbg !11323
  store i32 %81, i32* %len, align 4, !dbg !11324
  %82 = load i32, i32* %len, align 4, !dbg !11325
  %83 = srem i32 %82, 4, !dbg !11326
  %84 = icmp eq i32 %83, 0, !dbg !11327
  br i1 %84, label %85, label %86, !dbg !11328

; <label>:85                                      ; preds = %73
  br label %90, !dbg !11329

; <label>:86                                      ; preds = %73
  %87 = load i32, i32* %len, align 4, !dbg !11331
  %88 = srem i32 %87, 4, !dbg !11333
  %89 = sub nsw i32 4, %88, !dbg !11334
  br label %90, !dbg !11335

; <label>:90                                      ; preds = %86, %85
  %91 = phi i32 [ 0, %85 ], [ %89, %86 ], !dbg !11336
  %92 = load i32, i32* %len, align 4, !dbg !11338
  %93 = add nsw i32 %92, %91, !dbg !11338
  store i32 %93, i32* %len, align 4, !dbg !11338
  %94 = load %struct.rr_list*, %struct.rr_list** %6, align 8, !dbg !11339
  store %struct.rr_list* %94, %struct.rr_list** %rrl_tmp, align 8, !dbg !11341
  br label %95, !dbg !11342

; <label>:95                                      ; preds = %127, %90
  %96 = load %struct.rr_list*, %struct.rr_list** %rrl_tmp, align 8, !dbg !11343
  %97 = getelementptr inbounds %struct.rr_list, %struct.rr_list* %96, i32 0, i32 0, !dbg !11346
  %98 = load %struct.rr_list*, %struct.rr_list** %97, align 8, !dbg !11346
  %99 = icmp ne %struct.rr_list* %98, null, !dbg !11347
  br i1 %99, label %100, label %131, !dbg !11347

; <label>:100                                     ; preds = %95
  %101 = load i32, i32* %len, align 4, !dbg !11348
  %102 = load %struct.rr_list*, %struct.rr_list** %rrl_tmp, align 8, !dbg !11350
  %103 = getelementptr inbounds %struct.rr_list, %struct.rr_list* %102, i32 0, i32 2, !dbg !11351
  store i32 %101, i32* %103, align 4, !dbg !11352
  %104 = load %struct.rr_list*, %struct.rr_list** %rrl_tmp, align 8, !dbg !11353
  %105 = getelementptr inbounds %struct.rr_list, %struct.rr_list* %104, i32 0, i32 3, !dbg !11354
  %106 = load %struct.rr*, %struct.rr** %105, align 8, !dbg !11354
  %107 = getelementptr inbounds %struct.rr, %struct.rr* %106, i32 0, i32 1, !dbg !11355
  %108 = load i16, i16* %107, align 4, !dbg !11355
  %109 = zext i16 %108 to i64, !dbg !11353
  %110 = add i64 6, %109, !dbg !11356
  %111 = load i32, i32* %len, align 4, !dbg !11357
  %112 = sext i32 %111 to i64, !dbg !11357
  %113 = add i64 %112, %110, !dbg !11357
  %114 = trunc i64 %113 to i32, !dbg !11357
  store i32 %114, i32* %len, align 4, !dbg !11357
  %115 = load i32, i32* %len, align 4, !dbg !11358
  %116 = srem i32 %115, 4, !dbg !11359
  %117 = icmp eq i32 %116, 0, !dbg !11360
  br i1 %117, label %118, label %119, !dbg !11361

; <label>:118                                     ; preds = %100
  br label %123, !dbg !11362

; <label>:119                                     ; preds = %100
  %120 = load i32, i32* %len, align 4, !dbg !11364
  %121 = srem i32 %120, 4, !dbg !11366
  %122 = sub nsw i32 4, %121, !dbg !11367
  br label %123, !dbg !11368

; <label>:123                                     ; preds = %119, %118
  %124 = phi i32 [ 0, %118 ], [ %122, %119 ], !dbg !11369
  %125 = load i32, i32* %len, align 4, !dbg !11371
  %126 = add nsw i32 %125, %124, !dbg !11371
  store i32 %126, i32* %len, align 4, !dbg !11371
  br label %127, !dbg !11372

; <label>:127                                     ; preds = %123
  %128 = load %struct.rr_list*, %struct.rr_list** %rrl_tmp, align 8, !dbg !11373
  %129 = getelementptr inbounds %struct.rr_list, %struct.rr_list* %128, i32 0, i32 0, !dbg !11375
  %130 = load %struct.rr_list*, %struct.rr_list** %129, align 8, !dbg !11375
  store %struct.rr_list* %130, %struct.rr_list** %rrl_tmp, align 8, !dbg !11376
  br label %95, !dbg !11377

; <label>:131                                     ; preds = %95
  %132 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 8), align 4, !dbg !11378
  %133 = icmp sgt i32 %132, 5, !dbg !11380
  br i1 %133, label %134, label %136, !dbg !11381

; <label>:134                                     ; preds = %131
  %135 = load i32, i32* %len, align 4, !dbg !11382
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.9.363, i32 0, i32 0), i32 %135), !dbg !11383
  br label %136, !dbg !11383

; <label>:136                                     ; preds = %134, %131
  %137 = load i32, i32* %len, align 4, !dbg !11384
  %138 = sext i32 %137 to i64, !dbg !11384
  %139 = call noalias i8* @malloc(i64 %138) #10, !dbg !11385
  %140 = load %struct.rr_set*, %struct.rr_set** %rrs, align 8, !dbg !11386
  %141 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %140, i32 0, i32 4, !dbg !11387
  %142 = bitcast %union.u_data* %141 to i8**, !dbg !11388
  store i8* %139, i8** %142, align 8, !dbg !11389
  %143 = load %struct.rr_set*, %struct.rr_set** %rrs, align 8, !dbg !11390
  %144 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %143, i32 0, i32 4, !dbg !11392
  %145 = bitcast %union.u_data* %144 to i8**, !dbg !11393
  %146 = load i8*, i8** %145, align 8, !dbg !11393
  %147 = icmp ne i8* %146, null, !dbg !11390
  br i1 %147, label %150, label %148, !dbg !11394

; <label>:148                                     ; preds = %136
  %149 = load %struct.rr_set*, %struct.rr_set** %rrs, align 8, !dbg !11395
  call void @rrset_free(%struct.rr_set* %149), !dbg !11397
  store %struct.rr_set* null, %struct.rr_set** %1, align 8, !dbg !11398
  br label %214, !dbg !11398

; <label>:150                                     ; preds = %136
  %151 = load i32, i32* %len, align 4, !dbg !11399
  %152 = sext i32 %151 to i64, !dbg !11399
  %153 = load %struct.rr_set*, %struct.rr_set** %rrs, align 8, !dbg !11400
  %154 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %153, i32 0, i32 3, !dbg !11401
  store i64 %152, i64* %154, align 8, !dbg !11402
  %155 = load %struct.rr_list*, %struct.rr_list** %6, align 8, !dbg !11403
  %156 = getelementptr inbounds %struct.rr_list, %struct.rr_list* %155, i32 0, i32 1, !dbg !11404
  %157 = load i32, i32* %156, align 8, !dbg !11404
  %158 = add nsw i32 %157, 1, !dbg !11405
  %159 = trunc i32 %158 to i16, !dbg !11403
  %160 = load %struct.rr_set*, %struct.rr_set** %rrs, align 8, !dbg !11406
  %161 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %160, i32 0, i32 4, !dbg !11407
  %162 = bitcast %union.u_data* %161 to %struct.data_data**, !dbg !11408
  %163 = load %struct.data_data*, %struct.data_data** %162, align 8, !dbg !11408
  %164 = getelementptr inbounds %struct.data_data, %struct.data_data* %163, i32 0, i32 0, !dbg !11409
  store i16 %159, i16* %164, align 2, !dbg !11410
  %165 = load %struct.rr_list*, %struct.rr_list** %6, align 8, !dbg !11411
  store %struct.rr_list* %165, %struct.rr_list** %rrl_tmp, align 8, !dbg !11413
  br label %166, !dbg !11414

; <label>:166                                     ; preds = %208, %150
  %167 = load %struct.rr_list*, %struct.rr_list** %rrl_tmp, align 8, !dbg !11415
  %168 = getelementptr inbounds %struct.rr_list, %struct.rr_list* %167, i32 0, i32 0, !dbg !11418
  %169 = load %struct.rr_list*, %struct.rr_list** %168, align 8, !dbg !11418
  %170 = icmp ne %struct.rr_list* %169, null, !dbg !11419
  br i1 %170, label %171, label %212, !dbg !11419

; <label>:171                                     ; preds = %166
  %172 = load %struct.rr_list*, %struct.rr_list** %rrl_tmp, align 8, !dbg !11420
  %173 = getelementptr inbounds %struct.rr_list, %struct.rr_list* %172, i32 0, i32 2, !dbg !11422
  %174 = load i32, i32* %173, align 4, !dbg !11422
  %175 = trunc i32 %174 to i16, !dbg !11420
  %176 = load %struct.rr_set*, %struct.rr_set** %rrs, align 8, !dbg !11423
  %177 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %176, i32 0, i32 4, !dbg !11423
  %178 = bitcast %union.u_data* %177 to i8**, !dbg !11423
  %179 = load i8*, i8** %178, align 8, !dbg !11423
  %180 = load %struct.rr_list*, %struct.rr_list** %rrl_tmp, align 8, !dbg !11423
  %181 = getelementptr inbounds %struct.rr_list, %struct.rr_list* %180, i32 0, i32 1, !dbg !11423
  %182 = load i32, i32* %181, align 8, !dbg !11423
  %183 = add nsw i32 %182, 1, !dbg !11423
  %184 = sext i32 %183 to i64, !dbg !11423
  %185 = mul i64 2, %184, !dbg !11423
  %186 = getelementptr inbounds i8, i8* %179, i64 %185, !dbg !11423
  %187 = bitcast i8* %186 to i16*, !dbg !11423
  store i16 %175, i16* %187, align 2, !dbg !11424
  %188 = load %struct.rr_set*, %struct.rr_set** %rrs, align 8, !dbg !11425
  %189 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %188, i32 0, i32 4, !dbg !11426
  %190 = bitcast %union.u_data* %189 to i8**, !dbg !11427
  %191 = load i8*, i8** %190, align 8, !dbg !11427
  %192 = load %struct.rr_list*, %struct.rr_list** %rrl_tmp, align 8, !dbg !11428
  %193 = getelementptr inbounds %struct.rr_list, %struct.rr_list* %192, i32 0, i32 2, !dbg !11429
  %194 = load i32, i32* %193, align 4, !dbg !11429
  %195 = sext i32 %194 to i64, !dbg !11430
  %196 = getelementptr inbounds i8, i8* %191, i64 %195, !dbg !11430
  %197 = load %struct.rr_list*, %struct.rr_list** %rrl_tmp, align 8, !dbg !11431
  %198 = getelementptr inbounds %struct.rr_list, %struct.rr_list* %197, i32 0, i32 3, !dbg !11432
  %199 = load %struct.rr*, %struct.rr** %198, align 8, !dbg !11432
  %200 = bitcast %struct.rr* %199 to i8*, !dbg !11433
  %201 = load %struct.rr_list*, %struct.rr_list** %rrl_tmp, align 8, !dbg !11434
  %202 = getelementptr inbounds %struct.rr_list, %struct.rr_list* %201, i32 0, i32 3, !dbg !11435
  %203 = load %struct.rr*, %struct.rr** %202, align 8, !dbg !11435
  %204 = getelementptr inbounds %struct.rr, %struct.rr* %203, i32 0, i32 1, !dbg !11436
  %205 = load i16, i16* %204, align 4, !dbg !11436
  %206 = zext i16 %205 to i64, !dbg !11434
  %207 = add i64 %206, 6, !dbg !11437
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %196, i8* %200, i64 %207, i32 1, i1 false), !dbg !11433
  br label %208, !dbg !11438

; <label>:208                                     ; preds = %171
  %209 = load %struct.rr_list*, %struct.rr_list** %rrl_tmp, align 8, !dbg !11439
  %210 = getelementptr inbounds %struct.rr_list, %struct.rr_list* %209, i32 0, i32 0, !dbg !11441
  %211 = load %struct.rr_list*, %struct.rr_list** %210, align 8, !dbg !11441
  store %struct.rr_list* %211, %struct.rr_list** %rrl_tmp, align 8, !dbg !11442
  br label %166, !dbg !11443

; <label>:212                                     ; preds = %166
  %213 = load %struct.rr_set*, %struct.rr_set** %rrs, align 8, !dbg !11444
  store %struct.rr_set* %213, %struct.rr_set** %1, align 8, !dbg !11445
  br label %214, !dbg !11445

; <label>:214                                     ; preds = %212, %148, %71, %35, %18
  %215 = load %struct.rr_set*, %struct.rr_set** %1, align 8, !dbg !11446
  ret %struct.rr_set* %215, !dbg !11446
}

; Function Attrs: nounwind uwtable
define void @rrset_free(%struct.rr_set* %rrset) #0 !dbg !1345 {
  %1 = alloca %struct.rr_set*, align 8
  store %struct.rr_set* %rrset, %struct.rr_set** %1, align 8
  call void @llvm.dbg.declare(metadata %struct.rr_set** %1, metadata !11447, metadata !2279), !dbg !11448
  %2 = load %struct.rr_set*, %struct.rr_set** %1, align 8, !dbg !11449
  %3 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %2, i32 0, i32 0, !dbg !11451
  %4 = load i32, i32* %3, align 8, !dbg !11451
  %5 = icmp sle i32 %4, 1, !dbg !11452
  br i1 %5, label %6, label %39, !dbg !11453

; <label>:6                                       ; preds = %0
  %7 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 8), align 4, !dbg !11454
  %8 = icmp sgt i32 %7, 5, !dbg !11457
  br i1 %8, label %9, label %14, !dbg !11458

; <label>:9                                       ; preds = %6
  %10 = load %struct.rr_set*, %struct.rr_set** %1, align 8, !dbg !11459
  %11 = load %struct.rr_set*, %struct.rr_set** %1, align 8, !dbg !11460
  %12 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %11, i32 0, i32 0, !dbg !11461
  %13 = load i32, i32* %12, align 8, !dbg !11461
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.10.361, i32 0, i32 0), %struct.rr_set* %10, i32 %13), !dbg !11462
  br label %14, !dbg !11462

; <label>:14                                      ; preds = %9, %6
  %15 = load %struct.rr_set*, %struct.rr_set** %1, align 8, !dbg !11463
  %16 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %15, i32 0, i32 2, !dbg !11465
  %17 = bitcast %union.u_key* %16 to i8**, !dbg !11466
  %18 = load i8*, i8** %17, align 8, !dbg !11466
  %19 = icmp ne i8* %18, null, !dbg !11463
  br i1 %19, label %20, label %25, !dbg !11467

; <label>:20                                      ; preds = %14
  %21 = load %struct.rr_set*, %struct.rr_set** %1, align 8, !dbg !11468
  %22 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %21, i32 0, i32 2, !dbg !11469
  %23 = bitcast %union.u_key* %22 to i8**, !dbg !11470
  %24 = load i8*, i8** %23, align 8, !dbg !11470
  call void @free(i8* %24) #10, !dbg !11471
  br label %25, !dbg !11471

; <label>:25                                      ; preds = %20, %14
  %26 = load %struct.rr_set*, %struct.rr_set** %1, align 8, !dbg !11472
  %27 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %26, i32 0, i32 4, !dbg !11474
  %28 = bitcast %union.u_data* %27 to i8**, !dbg !11475
  %29 = load i8*, i8** %28, align 8, !dbg !11475
  %30 = icmp ne i8* %29, null, !dbg !11472
  br i1 %30, label %31, label %36, !dbg !11476

; <label>:31                                      ; preds = %25
  %32 = load %struct.rr_set*, %struct.rr_set** %1, align 8, !dbg !11477
  %33 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %32, i32 0, i32 4, !dbg !11478
  %34 = bitcast %union.u_data* %33 to i8**, !dbg !11479
  %35 = load i8*, i8** %34, align 8, !dbg !11479
  call void @free(i8* %35) #10, !dbg !11480
  br label %36, !dbg !11480

; <label>:36                                      ; preds = %31, %25
  %37 = load %struct.rr_set*, %struct.rr_set** %1, align 8, !dbg !11481
  %38 = bitcast %struct.rr_set* %37 to i8*, !dbg !11481
  call void @free(i8* %38) #10, !dbg !11482
  br label %56, !dbg !11483

; <label>:39                                      ; preds = %0
  %40 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 8), align 4, !dbg !11484
  %41 = icmp sgt i32 %40, 5, !dbg !11487
  br i1 %41, label %42, label %51, !dbg !11488

; <label>:42                                      ; preds = %39
  %43 = load %struct.rr_set*, %struct.rr_set** %1, align 8, !dbg !11489
  %44 = load %struct.rr_set*, %struct.rr_set** %1, align 8, !dbg !11490
  %45 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %44, i32 0, i32 0, !dbg !11491
  %46 = load i32, i32* %45, align 8, !dbg !11491
  %47 = load %struct.rr_set*, %struct.rr_set** %1, align 8, !dbg !11492
  %48 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %47, i32 0, i32 0, !dbg !11493
  %49 = load i32, i32* %48, align 8, !dbg !11493
  %50 = sub nsw i32 %49, 1, !dbg !11494
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.11.362, i32 0, i32 0), %struct.rr_set* %43, i32 %46, i32 %50), !dbg !11495
  br label %51, !dbg !11495

; <label>:51                                      ; preds = %42, %39
  %52 = load %struct.rr_set*, %struct.rr_set** %1, align 8, !dbg !11496
  %53 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %52, i32 0, i32 0, !dbg !11497
  %54 = load i32, i32* %53, align 8, !dbg !11498
  %55 = add nsw i32 %54, -1, !dbg !11498
  store i32 %55, i32* %53, align 8, !dbg !11498
  br label %56

; <label>:56                                      ; preds = %51, %36
  ret void, !dbg !11499
}

; Function Attrs: nounwind uwtable
define %struct.rr_set* @rrset_create_single(i8* %dname, i32 %dname_len, i16 zeroext %rtype, i16 zeroext %rclass, i32 %ttl, i16 zeroext %rd_len, i8* %rd) #0 !dbg !1341 {
  %1 = alloca %struct.rr_set*, align 8
  %2 = alloca i8*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i16, align 2
  %5 = alloca i16, align 2
  %6 = alloca i32, align 4
  %7 = alloca i16, align 2
  %8 = alloca i8*, align 8
  %rrlp = alloca %struct.rr_list*, align 8
  %rrlp_tmp = alloca %struct.rr_list*, align 8
  %rrsp = alloca %struct.rr_set*, align 8
  store i8* %dname, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !11500, metadata !2279), !dbg !11501
  store i32 %dname_len, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !11502, metadata !2279), !dbg !11503
  store i16 %rtype, i16* %4, align 2
  call void @llvm.dbg.declare(metadata i16* %4, metadata !11504, metadata !2279), !dbg !11505
  store i16 %rclass, i16* %5, align 2
  call void @llvm.dbg.declare(metadata i16* %5, metadata !11506, metadata !2279), !dbg !11507
  store i32 %ttl, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !11508, metadata !2279), !dbg !11509
  store i16 %rd_len, i16* %7, align 2
  call void @llvm.dbg.declare(metadata i16* %7, metadata !11510, metadata !2279), !dbg !11511
  store i8* %rd, i8** %8, align 8
  call void @llvm.dbg.declare(metadata i8** %8, metadata !11512, metadata !2279), !dbg !11513
  call void @llvm.dbg.declare(metadata %struct.rr_list** %rrlp, metadata !11514, metadata !2279), !dbg !11515
  call void @llvm.dbg.declare(metadata %struct.rr_list** %rrlp_tmp, metadata !11516, metadata !2279), !dbg !11517
  call void @llvm.dbg.declare(metadata %struct.rr_set** %rrsp, metadata !11518, metadata !2279), !dbg !11519
  %9 = call %struct.rr_list* @rr_list_alloc(), !dbg !11520
  store %struct.rr_list* %9, %struct.rr_list** %rrlp, align 8, !dbg !11521
  %10 = load %struct.rr_list*, %struct.rr_list** %rrlp, align 8, !dbg !11522
  %11 = icmp ne %struct.rr_list* %10, null, !dbg !11522
  br i1 %11, label %13, label %12, !dbg !11524

; <label>:12                                      ; preds = %0
  store %struct.rr_set* null, %struct.rr_set** %1, align 8, !dbg !11525
  br label %40, !dbg !11525

; <label>:13                                      ; preds = %0
  %14 = load %struct.rr_list*, %struct.rr_list** %rrlp, align 8, !dbg !11526
  %15 = load i32, i32* %6, align 4, !dbg !11527
  %16 = load i16, i16* %7, align 2, !dbg !11528
  %17 = zext i16 %16 to i32, !dbg !11528
  %18 = load i8*, i8** %8, align 8, !dbg !11529
  %19 = call %struct.rr_list* @rr_list_add(%struct.rr_list* %14, i32 %15, i32 %17, i8* %18), !dbg !11530
  store %struct.rr_list* %19, %struct.rr_list** %rrlp_tmp, align 8, !dbg !11531
  %20 = load %struct.rr_list*, %struct.rr_list** %rrlp_tmp, align 8, !dbg !11532
  %21 = icmp ne %struct.rr_list* %20, null, !dbg !11532
  br i1 %21, label %24, label %22, !dbg !11534

; <label>:22                                      ; preds = %13
  %23 = load %struct.rr_list*, %struct.rr_list** %rrlp, align 8, !dbg !11535
  call void @rr_list_free(%struct.rr_list* %23), !dbg !11537
  store %struct.rr_set* null, %struct.rr_set** %1, align 8, !dbg !11538
  br label %40, !dbg !11538

; <label>:24                                      ; preds = %13
  %25 = load %struct.rr_list*, %struct.rr_list** %rrlp_tmp, align 8, !dbg !11539
  store %struct.rr_list* %25, %struct.rr_list** %rrlp, align 8, !dbg !11540
  %26 = load i16, i16* %4, align 2, !dbg !11541
  %27 = load i16, i16* %5, align 2, !dbg !11542
  %28 = load i32, i32* %3, align 4, !dbg !11543
  %29 = trunc i32 %28 to i16, !dbg !11543
  %30 = load i8*, i8** %2, align 8, !dbg !11544
  %31 = load %struct.rr_list*, %struct.rr_list** %rrlp, align 8, !dbg !11545
  %32 = call %struct.rr_set* @rrset_create(i16 zeroext %26, i16 zeroext %27, i16 zeroext %29, i8* %30, %struct.rr_list* %31), !dbg !11546
  store %struct.rr_set* %32, %struct.rr_set** %rrsp, align 8, !dbg !11547
  %33 = load %struct.rr_set*, %struct.rr_set** %rrsp, align 8, !dbg !11548
  %34 = icmp ne %struct.rr_set* %33, null, !dbg !11548
  br i1 %34, label %37, label %35, !dbg !11550

; <label>:35                                      ; preds = %24
  %36 = load %struct.rr_list*, %struct.rr_list** %rrlp, align 8, !dbg !11551
  call void @rr_list_free(%struct.rr_list* %36), !dbg !11553
  store %struct.rr_set* null, %struct.rr_set** %1, align 8, !dbg !11554
  br label %40, !dbg !11554

; <label>:37                                      ; preds = %24
  %38 = load %struct.rr_list*, %struct.rr_list** %rrlp, align 8, !dbg !11555
  call void @rr_list_free(%struct.rr_list* %38), !dbg !11556
  %39 = load %struct.rr_set*, %struct.rr_set** %rrsp, align 8, !dbg !11557
  store %struct.rr_set* %39, %struct.rr_set** %1, align 8, !dbg !11558
  br label %40, !dbg !11558

; <label>:40                                      ; preds = %37, %35, %22, %12
  %41 = load %struct.rr_set*, %struct.rr_set** %1, align 8, !dbg !11559
  ret %struct.rr_set* %41, !dbg !11559
}

; Function Attrs: nounwind uwtable
define void @rrset_freev(i8* %p) #0 !dbg !1344 {
  %1 = alloca i8*, align 8
  store i8* %p, i8** %1, align 8
  call void @llvm.dbg.declare(metadata i8** %1, metadata !11560, metadata !2279), !dbg !11561
  %2 = load i8*, i8** %1, align 8, !dbg !11562
  %3 = bitcast i8* %2 to %struct.rr_set*, !dbg !11563
  call void @rrset_free(%struct.rr_set* %3), !dbg !11564
  ret void, !dbg !11565
}

; Function Attrs: nounwind uwtable
define %struct.rr_set* @rrset_copy(%struct.rr_set* %rrset) #0 !dbg !1348 {
  %1 = alloca %struct.rr_set*, align 8
  store %struct.rr_set* %rrset, %struct.rr_set** %1, align 8
  call void @llvm.dbg.declare(metadata %struct.rr_set** %1, metadata !11566, metadata !2279), !dbg !11567
  %2 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 8), align 4, !dbg !11568
  %3 = icmp sgt i32 %2, 5, !dbg !11570
  br i1 %3, label %4, label %13, !dbg !11571

; <label>:4                                       ; preds = %0
  %5 = load %struct.rr_set*, %struct.rr_set** %1, align 8, !dbg !11572
  %6 = load %struct.rr_set*, %struct.rr_set** %1, align 8, !dbg !11573
  %7 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %6, i32 0, i32 0, !dbg !11574
  %8 = load i32, i32* %7, align 8, !dbg !11574
  %9 = load %struct.rr_set*, %struct.rr_set** %1, align 8, !dbg !11575
  %10 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %9, i32 0, i32 0, !dbg !11576
  %11 = load i32, i32* %10, align 8, !dbg !11576
  %12 = add nsw i32 %11, 1, !dbg !11577
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.12.368, i32 0, i32 0), %struct.rr_set* %5, i32 %8, i32 %12), !dbg !11578
  br label %13, !dbg !11578

; <label>:13                                      ; preds = %4, %0
  %14 = load %struct.rr_set*, %struct.rr_set** %1, align 8, !dbg !11579
  %15 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %14, i32 0, i32 0, !dbg !11580
  %16 = load i32, i32* %15, align 8, !dbg !11581
  %17 = add nsw i32 %16, 1, !dbg !11581
  store i32 %17, i32* %15, align 8, !dbg !11581
  %18 = load %struct.rr_set*, %struct.rr_set** %1, align 8, !dbg !11582
  ret %struct.rr_set* %18, !dbg !11583
}

; Function Attrs: nounwind uwtable
define i8* @rrset_copyv(i8* %rrsetv) #0 !dbg !1351 {
  %1 = alloca i8*, align 8
  store i8* %rrsetv, i8** %1, align 8
  call void @llvm.dbg.declare(metadata i8** %1, metadata !11584, metadata !2279), !dbg !11585
  %2 = load i8*, i8** %1, align 8, !dbg !11586
  %3 = bitcast i8* %2 to %struct.rr_set*, !dbg !11587
  %4 = call %struct.rr_set* @rrset_copy(%struct.rr_set* %3), !dbg !11588
  %5 = bitcast %struct.rr_set* %4 to i8*, !dbg !11589
  ret i8* %5, !dbg !11590
}

; Function Attrs: nounwind uwtable
define i8* @rrset_dupv(i8* %rrsetv) #0 !dbg !1352 {
  %1 = alloca i8*, align 8
  store i8* %rrsetv, i8** %1, align 8
  call void @llvm.dbg.declare(metadata i8** %1, metadata !11591, metadata !2279), !dbg !11592
  %2 = load i8*, i8** %1, align 8, !dbg !11593
  %3 = bitcast i8* %2 to %struct.rr_set*, !dbg !11594
  %4 = call %struct.rr_set* @rrset_dup(%struct.rr_set* %3), !dbg !11595
  %5 = bitcast %struct.rr_set* %4 to i8*, !dbg !11596
  ret i8* %5, !dbg !11597
}

; Function Attrs: nounwind uwtable
define %struct.rr_set* @rrset_dup(%struct.rr_set* %rrset) #0 !dbg !1353 {
  %1 = alloca %struct.rr_set*, align 8
  %2 = alloca %struct.rr_set*, align 8
  %rrsp_new = alloca %struct.rr_set*, align 8
  store %struct.rr_set* %rrset, %struct.rr_set** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.rr_set** %2, metadata !11598, metadata !2279), !dbg !11599
  call void @llvm.dbg.declare(metadata %struct.rr_set** %rrsp_new, metadata !11600, metadata !2279), !dbg !11601
  store %struct.rr_set* null, %struct.rr_set** %rrsp_new, align 8, !dbg !11601
  %3 = call %struct.rr_set* @rrset_alloc(), !dbg !11602
  store %struct.rr_set* %3, %struct.rr_set** %rrsp_new, align 8, !dbg !11603
  %4 = load %struct.rr_set*, %struct.rr_set** %rrsp_new, align 8, !dbg !11604
  %5 = icmp ne %struct.rr_set* %4, null, !dbg !11604
  br i1 %5, label %7, label %6, !dbg !11606

; <label>:6                                       ; preds = %0
  store %struct.rr_set* null, %struct.rr_set** %1, align 8, !dbg !11607
  br label %104, !dbg !11607

; <label>:7                                       ; preds = %0
  %8 = load %struct.rr_set*, %struct.rr_set** %rrsp_new, align 8, !dbg !11608
  %9 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %8, i32 0, i32 2, !dbg !11609
  %10 = bitcast %union.u_key* %9 to i8**, !dbg !11610
  store i8* null, i8** %10, align 8, !dbg !11611
  %11 = load %struct.rr_set*, %struct.rr_set** %rrsp_new, align 8, !dbg !11612
  %12 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %11, i32 0, i32 4, !dbg !11613
  %13 = bitcast %union.u_data* %12 to i8**, !dbg !11614
  store i8* null, i8** %13, align 8, !dbg !11615
  %14 = load %struct.rr_set*, %struct.rr_set** %2, align 8, !dbg !11616
  %15 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %14, i32 0, i32 2, !dbg !11618
  %16 = bitcast %union.u_key* %15 to i8**, !dbg !11619
  %17 = load i8*, i8** %16, align 8, !dbg !11619
  %18 = icmp ne i8* %17, null, !dbg !11616
  br i1 %18, label %19, label %52, !dbg !11620

; <label>:19                                      ; preds = %7
  %20 = load %struct.rr_set*, %struct.rr_set** %2, align 8, !dbg !11621
  %21 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %20, i32 0, i32 1, !dbg !11623
  %22 = load i64, i64* %21, align 8, !dbg !11623
  %23 = call noalias i8* @malloc(i64 %22) #10, !dbg !11624
  %24 = load %struct.rr_set*, %struct.rr_set** %rrsp_new, align 8, !dbg !11625
  %25 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %24, i32 0, i32 2, !dbg !11626
  %26 = bitcast %union.u_key* %25 to i8**, !dbg !11627
  store i8* %23, i8** %26, align 8, !dbg !11628
  %27 = load %struct.rr_set*, %struct.rr_set** %rrsp_new, align 8, !dbg !11629
  %28 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %27, i32 0, i32 2, !dbg !11631
  %29 = bitcast %union.u_key* %28 to i8**, !dbg !11632
  %30 = load i8*, i8** %29, align 8, !dbg !11632
  %31 = icmp ne i8* %30, null, !dbg !11629
  br i1 %31, label %35, label %32, !dbg !11633

; <label>:32                                      ; preds = %19
  %33 = load %struct.rr_set*, %struct.rr_set** %rrsp_new, align 8, !dbg !11634
  %34 = bitcast %struct.rr_set* %33 to i8*, !dbg !11634
  call void @free(i8* %34) #10, !dbg !11636
  store %struct.rr_set* null, %struct.rr_set** %1, align 8, !dbg !11637
  br label %104, !dbg !11637

; <label>:35                                      ; preds = %19
  %36 = load %struct.rr_set*, %struct.rr_set** %rrsp_new, align 8, !dbg !11638
  %37 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %36, i32 0, i32 2, !dbg !11639
  %38 = bitcast %union.u_key* %37 to i8**, !dbg !11640
  %39 = load i8*, i8** %38, align 8, !dbg !11640
  %40 = load %struct.rr_set*, %struct.rr_set** %2, align 8, !dbg !11641
  %41 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %40, i32 0, i32 2, !dbg !11642
  %42 = bitcast %union.u_key* %41 to i8**, !dbg !11643
  %43 = load i8*, i8** %42, align 8, !dbg !11643
  %44 = load %struct.rr_set*, %struct.rr_set** %2, align 8, !dbg !11644
  %45 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %44, i32 0, i32 1, !dbg !11645
  %46 = load i64, i64* %45, align 8, !dbg !11645
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %39, i8* %43, i64 %46, i32 1, i1 false), !dbg !11646
  %47 = load %struct.rr_set*, %struct.rr_set** %2, align 8, !dbg !11647
  %48 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %47, i32 0, i32 1, !dbg !11648
  %49 = load i64, i64* %48, align 8, !dbg !11648
  %50 = load %struct.rr_set*, %struct.rr_set** %rrsp_new, align 8, !dbg !11649
  %51 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %50, i32 0, i32 1, !dbg !11650
  store i64 %49, i64* %51, align 8, !dbg !11651
  br label %52, !dbg !11652

; <label>:52                                      ; preds = %35, %7
  %53 = load %struct.rr_set*, %struct.rr_set** %2, align 8, !dbg !11653
  %54 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %53, i32 0, i32 4, !dbg !11655
  %55 = bitcast %union.u_data* %54 to i8**, !dbg !11656
  %56 = load i8*, i8** %55, align 8, !dbg !11656
  %57 = icmp ne i8* %56, null, !dbg !11653
  br i1 %57, label %58, label %102, !dbg !11657

; <label>:58                                      ; preds = %52
  %59 = load %struct.rr_set*, %struct.rr_set** %2, align 8, !dbg !11658
  %60 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %59, i32 0, i32 3, !dbg !11660
  %61 = load i64, i64* %60, align 8, !dbg !11660
  %62 = call noalias i8* @malloc(i64 %61) #10, !dbg !11661
  %63 = load %struct.rr_set*, %struct.rr_set** %rrsp_new, align 8, !dbg !11662
  %64 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %63, i32 0, i32 4, !dbg !11663
  %65 = bitcast %union.u_data* %64 to i8**, !dbg !11664
  store i8* %62, i8** %65, align 8, !dbg !11665
  %66 = load %struct.rr_set*, %struct.rr_set** %rrsp_new, align 8, !dbg !11666
  %67 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %66, i32 0, i32 4, !dbg !11668
  %68 = bitcast %union.u_data* %67 to i8**, !dbg !11669
  %69 = load i8*, i8** %68, align 8, !dbg !11669
  %70 = icmp ne i8* %69, null, !dbg !11666
  br i1 %70, label %85, label %71, !dbg !11670

; <label>:71                                      ; preds = %58
  %72 = load %struct.rr_set*, %struct.rr_set** %rrsp_new, align 8, !dbg !11671
  %73 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %72, i32 0, i32 2, !dbg !11674
  %74 = bitcast %union.u_key* %73 to i8**, !dbg !11675
  %75 = load i8*, i8** %74, align 8, !dbg !11675
  %76 = icmp ne i8* %75, null, !dbg !11671
  br i1 %76, label %77, label %82, !dbg !11676

; <label>:77                                      ; preds = %71
  %78 = load %struct.rr_set*, %struct.rr_set** %rrsp_new, align 8, !dbg !11677
  %79 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %78, i32 0, i32 2, !dbg !11678
  %80 = bitcast %union.u_key* %79 to i8**, !dbg !11679
  %81 = load i8*, i8** %80, align 8, !dbg !11679
  call void @free(i8* %81) #10, !dbg !11680
  br label %82, !dbg !11680

; <label>:82                                      ; preds = %77, %71
  %83 = load %struct.rr_set*, %struct.rr_set** %rrsp_new, align 8, !dbg !11681
  %84 = bitcast %struct.rr_set* %83 to i8*, !dbg !11681
  call void @free(i8* %84) #10, !dbg !11682
  store %struct.rr_set* null, %struct.rr_set** %1, align 8, !dbg !11683
  br label %104, !dbg !11683

; <label>:85                                      ; preds = %58
  %86 = load %struct.rr_set*, %struct.rr_set** %rrsp_new, align 8, !dbg !11684
  %87 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %86, i32 0, i32 4, !dbg !11685
  %88 = bitcast %union.u_data* %87 to i8**, !dbg !11686
  %89 = load i8*, i8** %88, align 8, !dbg !11686
  %90 = load %struct.rr_set*, %struct.rr_set** %2, align 8, !dbg !11687
  %91 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %90, i32 0, i32 4, !dbg !11688
  %92 = bitcast %union.u_data* %91 to i8**, !dbg !11689
  %93 = load i8*, i8** %92, align 8, !dbg !11689
  %94 = load %struct.rr_set*, %struct.rr_set** %2, align 8, !dbg !11690
  %95 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %94, i32 0, i32 3, !dbg !11691
  %96 = load i64, i64* %95, align 8, !dbg !11691
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %89, i8* %93, i64 %96, i32 1, i1 false), !dbg !11692
  %97 = load %struct.rr_set*, %struct.rr_set** %2, align 8, !dbg !11693
  %98 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %97, i32 0, i32 3, !dbg !11694
  %99 = load i64, i64* %98, align 8, !dbg !11694
  %100 = load %struct.rr_set*, %struct.rr_set** %rrsp_new, align 8, !dbg !11695
  %101 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %100, i32 0, i32 3, !dbg !11696
  store i64 %99, i64* %101, align 8, !dbg !11697
  br label %102, !dbg !11698

; <label>:102                                     ; preds = %85, %52
  %103 = load %struct.rr_set*, %struct.rr_set** %rrsp_new, align 8, !dbg !11699
  store %struct.rr_set* %103, %struct.rr_set** %1, align 8, !dbg !11700
  br label %104, !dbg !11700

; <label>:104                                     ; preds = %102, %82, %32, %6
  %105 = load %struct.rr_set*, %struct.rr_set** %1, align 8, !dbg !11701
  ret %struct.rr_set* %105, !dbg !11701
}

; Function Attrs: nounwind uwtable
define void @rrset_couple_free(%struct.RRset_Couple* %rc) #0 !dbg !1354 {
  %1 = alloca %struct.RRset_Couple*, align 8
  store %struct.RRset_Couple* %rc, %struct.RRset_Couple** %1, align 8
  call void @llvm.dbg.declare(metadata %struct.RRset_Couple** %1, metadata !11702, metadata !2279), !dbg !11703
  %2 = load %struct.RRset_Couple*, %struct.RRset_Couple** %1, align 8, !dbg !11704
  %3 = getelementptr inbounds %struct.RRset_Couple, %struct.RRset_Couple* %2, i32 0, i32 0, !dbg !11706
  %4 = load %struct.rr_set*, %struct.rr_set** %3, align 8, !dbg !11706
  %5 = icmp ne %struct.rr_set* %4, null, !dbg !11704
  br i1 %5, label %6, label %10, !dbg !11707

; <label>:6                                       ; preds = %0
  %7 = load %struct.RRset_Couple*, %struct.RRset_Couple** %1, align 8, !dbg !11708
  %8 = getelementptr inbounds %struct.RRset_Couple, %struct.RRset_Couple* %7, i32 0, i32 0, !dbg !11709
  %9 = load %struct.rr_set*, %struct.rr_set** %8, align 8, !dbg !11709
  call void @rrset_free(%struct.rr_set* %9), !dbg !11710
  br label %10, !dbg !11710

; <label>:10                                      ; preds = %6, %0
  %11 = load %struct.RRset_Couple*, %struct.RRset_Couple** %1, align 8, !dbg !11711
  %12 = getelementptr inbounds %struct.RRset_Couple, %struct.RRset_Couple* %11, i32 0, i32 1, !dbg !11713
  %13 = load %struct.rr_list*, %struct.rr_list** %12, align 8, !dbg !11713
  %14 = icmp ne %struct.rr_list* %13, null, !dbg !11711
  br i1 %14, label %15, label %19, !dbg !11714

; <label>:15                                      ; preds = %10
  %16 = load %struct.RRset_Couple*, %struct.RRset_Couple** %1, align 8, !dbg !11715
  %17 = getelementptr inbounds %struct.RRset_Couple, %struct.RRset_Couple* %16, i32 0, i32 1, !dbg !11716
  %18 = load %struct.rr_list*, %struct.rr_list** %17, align 8, !dbg !11716
  call void @rr_list_free(%struct.rr_list* %18), !dbg !11717
  br label %19, !dbg !11717

; <label>:19                                      ; preds = %15, %10
  %20 = load %struct.RRset_Couple*, %struct.RRset_Couple** %1, align 8, !dbg !11718
  %21 = bitcast %struct.RRset_Couple* %20 to i8*, !dbg !11718
  call void @free(i8* %21) #10, !dbg !11719
  ret void, !dbg !11720
}

; Function Attrs: nounwind uwtable
define void @rrset_couple_freev(i8* %rcv) #0 !dbg !1357 {
  %1 = alloca i8*, align 8
  store i8* %rcv, i8** %1, align 8
  call void @llvm.dbg.declare(metadata i8** %1, metadata !11721, metadata !2279), !dbg !11722
  %2 = load i8*, i8** %1, align 8, !dbg !11723
  %3 = bitcast i8* %2 to %struct.RRset_Couple*, !dbg !11724
  call void @rrset_couple_free(%struct.RRset_Couple* %3), !dbg !11725
  ret void, !dbg !11726
}

; Function Attrs: nounwind uwtable
define i32 @udp_request_start(%struct.context.107* %cont) #0 !dbg !1367 {
  %1 = alloca i32, align 4
  %2 = alloca %struct.context.107*, align 8
  %fn = alloca i8*, align 8
  %sa = alloca %struct.sockaddr*, align 8
  %timeout = alloca i32, align 4
  store %struct.context.107* %cont, %struct.context.107** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.context.107** %2, metadata !11727, metadata !2279), !dbg !11728
  call void @llvm.dbg.declare(metadata i8** %fn, metadata !11729, metadata !2279), !dbg !11730
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.375, i32 0, i32 0), i8** %fn, align 8, !dbg !11730
  call void @llvm.dbg.declare(metadata %struct.sockaddr** %sa, metadata !11731, metadata !2279), !dbg !11732
  call void @llvm.dbg.declare(metadata i32* %timeout, metadata !11733, metadata !2279), !dbg !11734
  %3 = load i8*, i8** %fn, align 8, !dbg !11735
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1.376, i32 0, i32 0), i8* %3), !dbg !11736
  %4 = load %struct.context.107*, %struct.context.107** %2, align 8, !dbg !11737
  %5 = getelementptr inbounds %struct.context.107, %struct.context.107* %4, i32 0, i32 7, !dbg !11738
  %6 = bitcast {}** %5 to i32 (%struct.context.107*)**, !dbg !11738
  store i32 (%struct.context.107*)* @udp_request_process, i32 (%struct.context.107*)** %6, align 8, !dbg !11739
  %7 = load %struct.context.107*, %struct.context.107** %2, align 8, !dbg !11740
  %8 = getelementptr inbounds %struct.context.107, %struct.context.107* %7, i32 0, i32 8, !dbg !11741
  %9 = bitcast {}** %8 to i32 (%struct.context.107*)**, !dbg !11741
  store i32 (%struct.context.107*)* @udp_request_retry, i32 (%struct.context.107*)** %9, align 8, !dbg !11742
  %10 = load %struct.context.107*, %struct.context.107** %2, align 8, !dbg !11743
  %11 = getelementptr inbounds %struct.context.107, %struct.context.107* %10, i32 0, i32 17, !dbg !11745
  %12 = load i32, i32* %11, align 8, !dbg !11745
  %13 = icmp sgt i32 %12, 512, !dbg !11746
  br i1 %13, label %14, label %17, !dbg !11747

; <label>:14                                      ; preds = %0
  call void (i32, i8*, ...) @syslog(i32 5, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.2.385, i32 0, i32 0)), !dbg !11748
  %15 = load %struct.context.107*, %struct.context.107** %2, align 8, !dbg !11750
  %16 = call i32 bitcast (i32 (%struct.context*, i32)* @request_abort to i32 (%struct.context.107*, i32)*)(%struct.context.107* %15, i32 1), !dbg !11751
  store i32 %16, i32* %1, align 4, !dbg !11752
  br label %80, !dbg !11752

; <label>:17                                      ; preds = %0
  %18 = load %struct.context.107*, %struct.context.107** %2, align 8, !dbg !11753
  %19 = getelementptr inbounds %struct.context.107, %struct.context.107* %18, i32 0, i32 5, !dbg !11754
  %20 = load %struct.generic_list*, %struct.generic_list** %19, align 8, !dbg !11754
  %21 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %20, i32 0, i32 2, !dbg !11755
  %22 = load i8*, i8** %21, align 8, !dbg !11755
  %23 = bitcast i8* %22 to %struct.sockaddr*, !dbg !11756
  store %struct.sockaddr* %23, %struct.sockaddr** %sa, align 8, !dbg !11757
  %24 = load %struct.context.107*, %struct.context.107** %2, align 8, !dbg !11758
  %25 = getelementptr inbounds %struct.context.107, %struct.context.107* %24, i32 0, i32 16, !dbg !11760
  %26 = bitcast %union.anon.0* %25 to i8**, !dbg !11761
  %27 = load i8*, i8** %26, align 8, !dbg !11761
  %28 = load %struct.context.107*, %struct.context.107** %2, align 8, !dbg !11762
  %29 = getelementptr inbounds %struct.context.107, %struct.context.107* %28, i32 0, i32 17, !dbg !11763
  %30 = load i32, i32* %29, align 8, !dbg !11763
  %31 = load %struct.sockaddr*, %struct.sockaddr** %sa, align 8, !dbg !11764
  %32 = call i32 @net_mesg_send(%struct.nia* null, i8* %27, i32 %30, %struct.sockaddr* %31), !dbg !11765
  %33 = icmp slt i32 %32, 0, !dbg !11766
  br i1 %33, label %34, label %36, !dbg !11767

; <label>:34                                      ; preds = %17
  call void (i32, i8*, ...) @syslog(i32 5, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3.386, i32 0, i32 0)), !dbg !11768
  store i32 0, i32* %timeout, align 4, !dbg !11770
  %35 = load i8*, i8** %fn, align 8, !dbg !11771
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.4.387, i32 0, i32 0), i8* %35), !dbg !11772
  br label %70, !dbg !11773

; <label>:36                                      ; preds = %17
  %37 = load %struct.context.107*, %struct.context.107** %2, align 8, !dbg !11774
  %38 = load %struct.sockaddr*, %struct.sockaddr** %sa, align 8, !dbg !11777
  %39 = load %struct.sockaddr*, %struct.sockaddr** %sa, align 8, !dbg !11778
  %40 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %39, i32 0, i32 0, !dbg !11778
  %41 = load i16, i16* %40, align 2, !dbg !11778
  %42 = zext i16 %41 to i32, !dbg !11778
  %43 = icmp eq i32 %42, 10, !dbg !11778
  br i1 %43, label %44, label %45, !dbg !11778

; <label>:44                                      ; preds = %36
  br label %52, !dbg !11779

; <label>:45                                      ; preds = %36
  %46 = load %struct.sockaddr*, %struct.sockaddr** %sa, align 8, !dbg !11781
  %47 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %46, i32 0, i32 0, !dbg !11781
  %48 = load i16, i16* %47, align 2, !dbg !11781
  %49 = zext i16 %48 to i32, !dbg !11781
  %50 = icmp eq i32 %49, 2, !dbg !11781
  %51 = select i1 %50, i64 16, i64 16, !dbg !11781
  br label %52, !dbg !11781

; <label>:52                                      ; preds = %45, %44
  %53 = phi i64 [ 28, %44 ], [ %51, %45 ], !dbg !11783
  %54 = trunc i64 %53 to i32, !dbg !11783
  %55 = load %struct.context.107*, %struct.context.107** %2, align 8, !dbg !11785
  %56 = getelementptr inbounds %struct.context.107, %struct.context.107* %55, i32 0, i32 10, !dbg !11786
  %57 = load i32, i32* %56, align 8, !dbg !11786
  %58 = trunc i32 %57 to i16, !dbg !11785
  %59 = call i32 bitcast (i32 (%struct.context*, %struct.sockaddr*, i32, i16)* @ev_udp_in_register to i32 (%struct.context.107*, %struct.sockaddr*, i32, i16)*)(%struct.context.107* %37, %struct.sockaddr* %38, i32 %54, i16 zeroext %58), !dbg !11787
  %60 = icmp slt i32 %59, 0, !dbg !11788
  br i1 %60, label %61, label %64, !dbg !11787

; <label>:61                                      ; preds = %52
  %62 = load %struct.context.107*, %struct.context.107** %2, align 8, !dbg !11789
  %63 = call i32 bitcast (i32 (%struct.context*, i32)* @request_abort to i32 (%struct.context.107*, i32)*)(%struct.context.107* %62, i32 -1), !dbg !11790
  store i32 %63, i32* %1, align 4, !dbg !11791
  br label %80, !dbg !11791

; <label>:64                                      ; preds = %52
  %65 = load %struct.context.107*, %struct.context.107** %2, align 8, !dbg !11792
  %66 = getelementptr inbounds %struct.context.107, %struct.context.107* %65, i32 0, i32 21, !dbg !11793
  %67 = load i16, i16* %66, align 2, !dbg !11793
  %68 = zext i16 %67 to i32, !dbg !11792
  store i32 %68, i32* %timeout, align 4, !dbg !11794
  %69 = load i32, i32* %timeout, align 4, !dbg !11795
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.5.388, i32 0, i32 0), i32 %69), !dbg !11796
  br label %70

; <label>:70                                      ; preds = %64, %34
  %71 = load %struct.context.107*, %struct.context.107** %2, align 8, !dbg !11797
  %72 = load i32, i32* %timeout, align 4, !dbg !11799
  %73 = call i32 bitcast (i32 (%struct.context.19*, i32)* @context_timeout_register to i32 (%struct.context.107*, i32)*)(%struct.context.107* %71, i32 %72), !dbg !11800
  %74 = icmp slt i32 %73, 0, !dbg !11801
  br i1 %74, label %75, label %78, !dbg !11802

; <label>:75                                      ; preds = %70
  %76 = load %struct.context.107*, %struct.context.107** %2, align 8, !dbg !11803
  %77 = call i32 bitcast (i32 (%struct.context*, i32)* @request_abort to i32 (%struct.context.107*, i32)*)(%struct.context.107* %76, i32 -1), !dbg !11804
  store i32 %77, i32* %1, align 4, !dbg !11805
  br label %80, !dbg !11805

; <label>:78                                      ; preds = %70
  %79 = load i8*, i8** %fn, align 8, !dbg !11806
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.6.384, i32 0, i32 0), i8* %79), !dbg !11807
  store i32 0, i32* %1, align 4, !dbg !11808
  br label %80, !dbg !11808

; <label>:80                                      ; preds = %78, %75, %61, %14
  %81 = load i32, i32* %1, align 4, !dbg !11809
  ret i32 %81, !dbg !11809
}

; Function Attrs: nounwind uwtable
define i32 @udp_request_process(%struct.context.107* %cont) #0 !dbg !1448 {
  %1 = alloca i32, align 4
  %2 = alloca %struct.context.107*, align 8
  %fn = alloca i8*, align 8
  %sa = alloca %struct.sockaddr*, align 8
  store %struct.context.107* %cont, %struct.context.107** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.context.107** %2, metadata !11810, metadata !2279), !dbg !11811
  call void @llvm.dbg.declare(metadata i8** %fn, metadata !11812, metadata !2279), !dbg !11813
  store i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.7.377, i32 0, i32 0), i8** %fn, align 8, !dbg !11813
  call void @llvm.dbg.declare(metadata %struct.sockaddr** %sa, metadata !11814, metadata !2279), !dbg !11815
  %3 = load i8*, i8** %fn, align 8, !dbg !11816
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1.376, i32 0, i32 0), i8* %3), !dbg !11817
  %4 = load %struct.context.107*, %struct.context.107** %2, align 8, !dbg !11818
  %5 = getelementptr inbounds %struct.context.107, %struct.context.107* %4, i32 0, i32 6, !dbg !11820
  %6 = load %struct.ev_to_data*, %struct.ev_to_data** %5, align 8, !dbg !11820
  %7 = icmp ne %struct.ev_to_data* %6, null, !dbg !11818
  br i1 %7, label %8, label %13, !dbg !11821

; <label>:8                                       ; preds = %0
  %9 = load %struct.context.107*, %struct.context.107** %2, align 8, !dbg !11822
  %10 = getelementptr inbounds %struct.context.107, %struct.context.107* %9, i32 0, i32 6, !dbg !11823
  %11 = load %struct.ev_to_data*, %struct.ev_to_data** %10, align 8, !dbg !11823
  %12 = getelementptr inbounds %struct.ev_to_data, %struct.ev_to_data* %11, i32 0, i32 1, !dbg !11824
  store i32 (%struct.ev_to_data*)* null, i32 (%struct.ev_to_data*)** %12, align 8, !dbg !11825
  br label %13, !dbg !11822

; <label>:13                                      ; preds = %8, %0
  %14 = load %struct.context.107*, %struct.context.107** %2, align 8, !dbg !11826
  %15 = getelementptr inbounds %struct.context.107, %struct.context.107* %14, i32 0, i32 5, !dbg !11827
  %16 = load %struct.generic_list*, %struct.generic_list** %15, align 8, !dbg !11827
  %17 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %16, i32 0, i32 2, !dbg !11828
  %18 = load i8*, i8** %17, align 8, !dbg !11828
  %19 = bitcast i8* %18 to %struct.sockaddr*, !dbg !11829
  store %struct.sockaddr* %19, %struct.sockaddr** %sa, align 8, !dbg !11830
  %20 = load %struct.sockaddr*, %struct.sockaddr** %sa, align 8, !dbg !11831
  %21 = load %struct.context.107*, %struct.context.107** %2, align 8, !dbg !11833
  %22 = getelementptr inbounds %struct.context.107, %struct.context.107* %21, i32 0, i32 10, !dbg !11834
  %23 = load i32, i32* %22, align 8, !dbg !11834
  %24 = call i32 @ev_udp_in_remove(%struct.sockaddr* %20, i32 %23), !dbg !11835
  %25 = icmp slt i32 %24, 0, !dbg !11836
  br i1 %25, label %26, label %29, !dbg !11837

; <label>:26                                      ; preds = %13
  %27 = load %struct.context.107*, %struct.context.107** %2, align 8, !dbg !11838
  %28 = call i32 bitcast (i32 (%struct.context*, i32)* @request_abort to i32 (%struct.context.107*, i32)*)(%struct.context.107* %27, i32 -1), !dbg !11839
  store i32 %28, i32* %1, align 4, !dbg !11840
  br label %32, !dbg !11840

; <label>:29                                      ; preds = %13
  %30 = load %struct.context.107*, %struct.context.107** %2, align 8, !dbg !11841
  %31 = call i32 bitcast (i32 (%struct.context*)* @request_finish to i32 (%struct.context.107*)*)(%struct.context.107* %30), !dbg !11842
  store i32 %31, i32* %1, align 4, !dbg !11843
  br label %32, !dbg !11843

; <label>:32                                      ; preds = %29, %26
  %33 = load i32, i32* %1, align 4, !dbg !11844
  ret i32 %33, !dbg !11844
}

; Function Attrs: nounwind uwtable
define i32 @udp_request_retry(%struct.context.107* %cont) #0 !dbg !1453 {
  %1 = alloca i32, align 4
  %2 = alloca %struct.context.107*, align 8
  %fn = alloca i8*, align 8
  %sa = alloca %struct.sockaddr*, align 8
  %len = alloca i32, align 4
  %timeout = alloca i32, align 4
  store %struct.context.107* %cont, %struct.context.107** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.context.107** %2, metadata !11845, metadata !2279), !dbg !11846
  call void @llvm.dbg.declare(metadata i8** %fn, metadata !11847, metadata !2279), !dbg !11848
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.8.378, i32 0, i32 0), i8** %fn, align 8, !dbg !11848
  call void @llvm.dbg.declare(metadata %struct.sockaddr** %sa, metadata !11849, metadata !2279), !dbg !11850
  call void @llvm.dbg.declare(metadata i32* %len, metadata !11851, metadata !2279), !dbg !11852
  call void @llvm.dbg.declare(metadata i32* %timeout, metadata !11853, metadata !2279), !dbg !11854
  %3 = load i8*, i8** %fn, align 8, !dbg !11855
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1.376, i32 0, i32 0), i8* %3), !dbg !11856
  %4 = load %struct.context.107*, %struct.context.107** %2, align 8, !dbg !11857
  %5 = getelementptr inbounds %struct.context.107, %struct.context.107* %4, i32 0, i32 5, !dbg !11858
  %6 = load %struct.generic_list*, %struct.generic_list** %5, align 8, !dbg !11858
  %7 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %6, i32 0, i32 2, !dbg !11859
  %8 = load i8*, i8** %7, align 8, !dbg !11859
  %9 = bitcast i8* %8 to %struct.sockaddr*, !dbg !11860
  store %struct.sockaddr* %9, %struct.sockaddr** %sa, align 8, !dbg !11861
  %10 = load %struct.sockaddr*, %struct.sockaddr** %sa, align 8, !dbg !11862
  %11 = load %struct.context.107*, %struct.context.107** %2, align 8, !dbg !11863
  %12 = getelementptr inbounds %struct.context.107, %struct.context.107* %11, i32 0, i32 10, !dbg !11864
  %13 = load i32, i32* %12, align 8, !dbg !11864
  %14 = call i32 @ev_udp_in_remove(%struct.sockaddr* %10, i32 %13), !dbg !11865
  %15 = load %struct.context.107*, %struct.context.107** %2, align 8, !dbg !11866
  %16 = getelementptr inbounds %struct.context.107, %struct.context.107* %15, i32 0, i32 12, !dbg !11868
  %17 = load i16, i16* %16, align 2, !dbg !11868
  %18 = zext i16 %17 to i32, !dbg !11866
  %19 = icmp eq i32 %18, 28, !dbg !11869
  br i1 %19, label %26, label %20, !dbg !11870

; <label>:20                                      ; preds = %0
  %21 = load %struct.context.107*, %struct.context.107** %2, align 8, !dbg !11871
  %22 = getelementptr inbounds %struct.context.107, %struct.context.107* %21, i32 0, i32 12, !dbg !11873
  %23 = load i16, i16* %22, align 2, !dbg !11873
  %24 = zext i16 %23 to i32, !dbg !11871
  %25 = icmp eq i32 %24, 38, !dbg !11874
  br i1 %25, label %26, label %83, !dbg !11875

; <label>:26                                      ; preds = %20, %0
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.9.379, i32 0, i32 0)), !dbg !11876
  %27 = load %struct.context.107*, %struct.context.107** %2, align 8, !dbg !11878
  %28 = getelementptr inbounds %struct.context.107, %struct.context.107* %27, i32 0, i32 13, !dbg !11879
  %29 = load %struct.generic_list*, %struct.generic_list** %28, align 8, !dbg !11879
  call void @list_destroy(%struct.generic_list* %29, void (i8*)* @rrset_freev), !dbg !11880
  %30 = load %struct.context.107*, %struct.context.107** %2, align 8, !dbg !11881
  %31 = getelementptr inbounds %struct.context.107, %struct.context.107* %30, i32 0, i32 14, !dbg !11882
  %32 = load %struct.generic_list*, %struct.generic_list** %31, align 8, !dbg !11882
  call void @list_destroy(%struct.generic_list* %32, void (i8*)* @rrset_freev), !dbg !11883
  %33 = load %struct.context.107*, %struct.context.107** %2, align 8, !dbg !11884
  %34 = getelementptr inbounds %struct.context.107, %struct.context.107* %33, i32 0, i32 15, !dbg !11885
  %35 = load %struct.generic_list*, %struct.generic_list** %34, align 8, !dbg !11885
  call void @list_destroy(%struct.generic_list* %35, void (i8*)* @rrset_freev), !dbg !11886
  %36 = call %struct.generic_list* @list_init(), !dbg !11887
  %37 = load %struct.context.107*, %struct.context.107** %2, align 8, !dbg !11888
  %38 = getelementptr inbounds %struct.context.107, %struct.context.107* %37, i32 0, i32 13, !dbg !11889
  store %struct.generic_list* %36, %struct.generic_list** %38, align 8, !dbg !11890
  %39 = call %struct.generic_list* @list_init(), !dbg !11891
  %40 = load %struct.context.107*, %struct.context.107** %2, align 8, !dbg !11892
  %41 = getelementptr inbounds %struct.context.107, %struct.context.107* %40, i32 0, i32 14, !dbg !11893
  store %struct.generic_list* %39, %struct.generic_list** %41, align 8, !dbg !11894
  %42 = call %struct.generic_list* @list_init(), !dbg !11895
  %43 = load %struct.context.107*, %struct.context.107** %2, align 8, !dbg !11896
  %44 = getelementptr inbounds %struct.context.107, %struct.context.107* %43, i32 0, i32 15, !dbg !11897
  store %struct.generic_list* %42, %struct.generic_list** %44, align 8, !dbg !11898
  %45 = load %struct.context.107*, %struct.context.107** %2, align 8, !dbg !11899
  %46 = getelementptr inbounds %struct.context.107, %struct.context.107* %45, i32 0, i32 13, !dbg !11901
  %47 = load %struct.generic_list*, %struct.generic_list** %46, align 8, !dbg !11901
  %48 = icmp ne %struct.generic_list* %47, null, !dbg !11899
  br i1 %48, label %49, label %59, !dbg !11902

; <label>:49                                      ; preds = %26
  %50 = load %struct.context.107*, %struct.context.107** %2, align 8, !dbg !11903
  %51 = getelementptr inbounds %struct.context.107, %struct.context.107* %50, i32 0, i32 14, !dbg !11905
  %52 = load %struct.generic_list*, %struct.generic_list** %51, align 8, !dbg !11905
  %53 = icmp ne %struct.generic_list* %52, null, !dbg !11903
  br i1 %53, label %54, label %59, !dbg !11906

; <label>:54                                      ; preds = %49
  %55 = load %struct.context.107*, %struct.context.107** %2, align 8, !dbg !11907
  %56 = getelementptr inbounds %struct.context.107, %struct.context.107* %55, i32 0, i32 15, !dbg !11909
  %57 = load %struct.generic_list*, %struct.generic_list** %56, align 8, !dbg !11909
  %58 = icmp ne %struct.generic_list* %57, null, !dbg !11907
  br i1 %58, label %62, label %59, !dbg !11910

; <label>:59                                      ; preds = %54, %49, %26
  %60 = load %struct.context.107*, %struct.context.107** %2, align 8, !dbg !11911
  %61 = call i32 bitcast (i32 (%struct.context*, i32)* @request_abort to i32 (%struct.context.107*, i32)*)(%struct.context.107* %60, i32 -1), !dbg !11912
  store i32 %61, i32* %1, align 4, !dbg !11913
  br label %160, !dbg !11913

; <label>:62                                      ; preds = %54
  %63 = load %struct.context.107*, %struct.context.107** %2, align 8, !dbg !11914
  %64 = getelementptr inbounds %struct.context.107, %struct.context.107* %63, i32 0, i32 0, !dbg !11916
  %65 = load %struct.context.107*, %struct.context.107** %64, align 8, !dbg !11916
  %66 = icmp ne %struct.context.107* %65, null, !dbg !11914
  br i1 %66, label %67, label %79, !dbg !11917

; <label>:67                                      ; preds = %62
  %68 = load i8*, i8** %fn, align 8, !dbg !11918
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.10.380, i32 0, i32 0), i8* %68), !dbg !11920
  %69 = load %struct.context.107*, %struct.context.107** %2, align 8, !dbg !11921
  %70 = getelementptr inbounds %struct.context.107, %struct.context.107* %69, i32 0, i32 0, !dbg !11922
  %71 = load %struct.context.107*, %struct.context.107** %70, align 8, !dbg !11922
  %72 = getelementptr inbounds %struct.context.107, %struct.context.107* %71, i32 0, i32 7, !dbg !11923
  %73 = bitcast {}** %72 to i32 (%struct.context.107*)**, !dbg !11923
  %74 = load i32 (%struct.context.107*)*, i32 (%struct.context.107*)** %73, align 8, !dbg !11923
  %75 = load %struct.context.107*, %struct.context.107** %2, align 8, !dbg !11924
  %76 = getelementptr inbounds %struct.context.107, %struct.context.107* %75, i32 0, i32 0, !dbg !11925
  %77 = load %struct.context.107*, %struct.context.107** %76, align 8, !dbg !11925
  %78 = call i32 %74(%struct.context.107* %77), !dbg !11921
  br label %79, !dbg !11926

; <label>:79                                      ; preds = %67, %62
  %80 = load %struct.context.107*, %struct.context.107** %2, align 8, !dbg !11927
  %81 = call i8* bitcast (i8* (%struct.context.19*)* @context_destroy to i8* (%struct.context.107*)*)(%struct.context.107* %80), !dbg !11928
  %82 = load i8*, i8** %fn, align 8, !dbg !11929
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.11.381, i32 0, i32 0), i8* %82), !dbg !11930
  store i32 0, i32* %1, align 4, !dbg !11931
  br label %160, !dbg !11931

; <label>:83                                      ; preds = %20
  %84 = load %struct.context.107*, %struct.context.107** %2, align 8, !dbg !11932
  %85 = call i32 bitcast (i32 (%struct.context*)* @request_retry to i32 (%struct.context.107*)*)(%struct.context.107* %84), !dbg !11934
  %86 = icmp slt i32 %85, 0, !dbg !11935
  br i1 %86, label %87, label %90, !dbg !11936

; <label>:87                                      ; preds = %83
  %88 = load %struct.context.107*, %struct.context.107** %2, align 8, !dbg !11937
  %89 = call i32 bitcast (i32 (%struct.context*, i32)* @request_abort to i32 (%struct.context.107*, i32)*)(%struct.context.107* %88, i32 -2), !dbg !11938
  store i32 %89, i32* %1, align 4, !dbg !11939
  br label %160, !dbg !11939

; <label>:90                                      ; preds = %83
  %91 = load %struct.context.107*, %struct.context.107** %2, align 8, !dbg !11940
  %92 = getelementptr inbounds %struct.context.107, %struct.context.107* %91, i32 0, i32 5, !dbg !11941
  %93 = load %struct.generic_list*, %struct.generic_list** %92, align 8, !dbg !11941
  %94 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %93, i32 0, i32 2, !dbg !11942
  %95 = load i8*, i8** %94, align 8, !dbg !11942
  %96 = bitcast i8* %95 to %struct.sockaddr*, !dbg !11943
  store %struct.sockaddr* %96, %struct.sockaddr** %sa, align 8, !dbg !11944
  %97 = load %struct.context.107*, %struct.context.107** %2, align 8, !dbg !11945
  %98 = getelementptr inbounds %struct.context.107, %struct.context.107* %97, i32 0, i32 16, !dbg !11946
  %99 = bitcast %union.anon.0* %98 to i8**, !dbg !11947
  %100 = load i8*, i8** %99, align 8, !dbg !11947
  %101 = load %struct.context.107*, %struct.context.107** %2, align 8, !dbg !11948
  %102 = getelementptr inbounds %struct.context.107, %struct.context.107* %101, i32 0, i32 17, !dbg !11949
  %103 = load i32, i32* %102, align 8, !dbg !11949
  %104 = load %struct.sockaddr*, %struct.sockaddr** %sa, align 8, !dbg !11950
  %105 = call i32 @net_mesg_send(%struct.nia* null, i8* %100, i32 %103, %struct.sockaddr* %104), !dbg !11951
  store i32 %105, i32* %len, align 4, !dbg !11952
  %106 = load i32, i32* %len, align 4, !dbg !11953
  %107 = load %struct.context.107*, %struct.context.107** %2, align 8, !dbg !11955
  %108 = getelementptr inbounds %struct.context.107, %struct.context.107* %107, i32 0, i32 17, !dbg !11956
  %109 = load i32, i32* %108, align 8, !dbg !11956
  %110 = icmp slt i32 %106, %109, !dbg !11957
  br i1 %110, label %111, label %117, !dbg !11958

; <label>:111                                     ; preds = %90
  %112 = load i32, i32* %len, align 4, !dbg !11959
  %113 = icmp slt i32 %112, 0, !dbg !11962
  br i1 %113, label %114, label %115, !dbg !11963

; <label>:114                                     ; preds = %111
  call void (i32, i8*, ...) @syslog(i32 5, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.12.382, i32 0, i32 0)), !dbg !11964
  br label %116, !dbg !11964

; <label>:115                                     ; preds = %111
  call void (i32, i8*, ...) @syslog(i32 5, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.13.383, i32 0, i32 0)), !dbg !11965
  br label %116

; <label>:116                                     ; preds = %115, %114
  store i32 0, i32* %timeout, align 4, !dbg !11966
  br label %150, !dbg !11967

; <label>:117                                     ; preds = %90
  %118 = load %struct.context.107*, %struct.context.107** %2, align 8, !dbg !11968
  %119 = getelementptr inbounds %struct.context.107, %struct.context.107* %118, i32 0, i32 21, !dbg !11970
  %120 = load i16, i16* %119, align 2, !dbg !11970
  %121 = zext i16 %120 to i32, !dbg !11968
  store i32 %121, i32* %timeout, align 4, !dbg !11971
  %122 = load %struct.context.107*, %struct.context.107** %2, align 8, !dbg !11972
  %123 = load %struct.sockaddr*, %struct.sockaddr** %sa, align 8, !dbg !11974
  %124 = load %struct.sockaddr*, %struct.sockaddr** %sa, align 8, !dbg !11975
  %125 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %124, i32 0, i32 0, !dbg !11975
  %126 = load i16, i16* %125, align 2, !dbg !11975
  %127 = zext i16 %126 to i32, !dbg !11975
  %128 = icmp eq i32 %127, 10, !dbg !11975
  br i1 %128, label %129, label %130, !dbg !11975

; <label>:129                                     ; preds = %117
  br label %137, !dbg !11976

; <label>:130                                     ; preds = %117
  %131 = load %struct.sockaddr*, %struct.sockaddr** %sa, align 8, !dbg !11978
  %132 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %131, i32 0, i32 0, !dbg !11978
  %133 = load i16, i16* %132, align 2, !dbg !11978
  %134 = zext i16 %133 to i32, !dbg !11978
  %135 = icmp eq i32 %134, 2, !dbg !11978
  %136 = select i1 %135, i64 16, i64 16, !dbg !11978
  br label %137, !dbg !11978

; <label>:137                                     ; preds = %130, %129
  %138 = phi i64 [ 28, %129 ], [ %136, %130 ], !dbg !11980
  %139 = trunc i64 %138 to i32, !dbg !11980
  %140 = load %struct.context.107*, %struct.context.107** %2, align 8, !dbg !11982
  %141 = getelementptr inbounds %struct.context.107, %struct.context.107* %140, i32 0, i32 10, !dbg !11983
  %142 = load i32, i32* %141, align 8, !dbg !11983
  %143 = trunc i32 %142 to i16, !dbg !11982
  %144 = call i32 bitcast (i32 (%struct.context*, %struct.sockaddr*, i32, i16)* @ev_udp_in_register to i32 (%struct.context.107*, %struct.sockaddr*, i32, i16)*)(%struct.context.107* %122, %struct.sockaddr* %123, i32 %139, i16 zeroext %143), !dbg !11984
  %145 = icmp slt i32 %144, 0, !dbg !11985
  br i1 %145, label %146, label %149, !dbg !11984

; <label>:146                                     ; preds = %137
  %147 = load %struct.context.107*, %struct.context.107** %2, align 8, !dbg !11986
  %148 = call i32 bitcast (i32 (%struct.context*, i32)* @request_abort to i32 (%struct.context.107*, i32)*)(%struct.context.107* %147, i32 -1), !dbg !11987
  store i32 %148, i32* %1, align 4, !dbg !11988
  br label %160, !dbg !11988

; <label>:149                                     ; preds = %137
  br label %150

; <label>:150                                     ; preds = %149, %116
  %151 = load %struct.context.107*, %struct.context.107** %2, align 8, !dbg !11989
  %152 = load i32, i32* %timeout, align 4, !dbg !11991
  %153 = call i32 bitcast (i32 (%struct.context.19*, i32)* @context_timeout_register to i32 (%struct.context.107*, i32)*)(%struct.context.107* %151, i32 %152), !dbg !11992
  %154 = icmp slt i32 %153, 0, !dbg !11993
  br i1 %154, label %155, label %158, !dbg !11994

; <label>:155                                     ; preds = %150
  %156 = load %struct.context.107*, %struct.context.107** %2, align 8, !dbg !11995
  %157 = call i32 bitcast (i32 (%struct.context*, i32)* @request_abort to i32 (%struct.context.107*, i32)*)(%struct.context.107* %156, i32 -1), !dbg !11996
  store i32 %157, i32* %1, align 4, !dbg !11997
  br label %160, !dbg !11997

; <label>:158                                     ; preds = %150
  %159 = load i8*, i8** %fn, align 8, !dbg !11998
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.6.384, i32 0, i32 0), i8* %159), !dbg !11999
  store i32 0, i32* %1, align 4, !dbg !12000
  br label %160, !dbg !12000

; <label>:160                                     ; preds = %158, %155, %146, %87, %79, %59
  %161 = load i32, i32* %1, align 4, !dbg !12001
  ret i32 %161, !dbg !12001
}

; Function Attrs: nounwind uwtable
define i32 @ev_to_init() #0 !dbg !1545 {
  %1 = alloca i32, align 4
  %2 = load %struct.qset*, %struct.qset** @ev_to_queue, align 8, !dbg !12002
  %3 = icmp ne %struct.qset* %2, null, !dbg !12002
  br i1 %3, label %4, label %5, !dbg !12004

; <label>:4                                       ; preds = %0
  store i32 -1, i32* %1, align 4, !dbg !12005
  br label %11, !dbg !12005

; <label>:5                                       ; preds = %0
  %6 = call %struct.qset* @queue_create(), !dbg !12006
  store %struct.qset* %6, %struct.qset** @ev_to_queue, align 8, !dbg !12007
  %7 = load %struct.qset*, %struct.qset** @ev_to_queue, align 8, !dbg !12008
  %8 = icmp ne %struct.qset* %7, null, !dbg !12008
  br i1 %8, label %10, label %9, !dbg !12010

; <label>:9                                       ; preds = %5
  store i32 -1, i32* %1, align 4, !dbg !12011
  br label %11, !dbg !12011

; <label>:10                                      ; preds = %5
  store i32 0, i32* %1, align 4, !dbg !12012
  br label %11, !dbg !12012

; <label>:11                                      ; preds = %10, %9, %4
  %12 = load i32, i32* %1, align 4, !dbg !12013
  ret i32 %12, !dbg !12013
}

; Function Attrs: nounwind uwtable
define i32 @ev_to_register(%struct.ev_to_data.14* %td) #0 !dbg !1546 {
  %1 = alloca i32, align 4
  %2 = alloca %struct.ev_to_data.14*, align 8
  %fn = alloca i8*, align 8
  %gq_new = alloca %struct.gqueue*, align 8
  %gq_tmp = alloca %struct.gqueue*, align 8
  %gq_prev = alloca %struct.gqueue*, align 8
  store %struct.ev_to_data.14* %td, %struct.ev_to_data.14** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.ev_to_data.14** %2, metadata !12014, metadata !2279), !dbg !12015
  call void @llvm.dbg.declare(metadata i8** %fn, metadata !12016, metadata !2279), !dbg !12017
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.391, i32 0, i32 0), i8** %fn, align 8, !dbg !12017
  call void @llvm.dbg.declare(metadata %struct.gqueue** %gq_new, metadata !12018, metadata !2279), !dbg !12021
  call void @llvm.dbg.declare(metadata %struct.gqueue** %gq_tmp, metadata !12022, metadata !2279), !dbg !12023
  call void @llvm.dbg.declare(metadata %struct.gqueue** %gq_prev, metadata !12024, metadata !2279), !dbg !12025
  %3 = call noalias i8* @malloc(i64 16) #10, !dbg !12026
  %4 = bitcast i8* %3 to %struct.gqueue*, !dbg !12026
  store %struct.gqueue* %4, %struct.gqueue** %gq_new, align 8, !dbg !12027
  %5 = load %struct.gqueue*, %struct.gqueue** %gq_new, align 8, !dbg !12028
  %6 = icmp ne %struct.gqueue* %5, null, !dbg !12028
  br i1 %6, label %9, label %7, !dbg !12030

; <label>:7                                       ; preds = %0
  %8 = load i8*, i8** %fn, align 8, !dbg !12031
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1.392, i32 0, i32 0), i8* %8), !dbg !12032
  br label %129, !dbg !12032

; <label>:9                                       ; preds = %0
  store %struct.gqueue* null, %struct.gqueue** %gq_prev, align 8, !dbg !12033
  %10 = load %struct.qset*, %struct.qset** @ev_to_queue, align 8, !dbg !12035
  %11 = getelementptr inbounds %struct.qset, %struct.qset* %10, i32 0, i32 0, !dbg !12037
  %12 = load %struct.gqueue*, %struct.gqueue** %11, align 8, !dbg !12037
  store %struct.gqueue* %12, %struct.gqueue** %gq_tmp, align 8, !dbg !12038
  br label %13, !dbg !12039

; <label>:13                                      ; preds = %33, %9
  %14 = load %struct.gqueue*, %struct.gqueue** %gq_tmp, align 8, !dbg !12040
  %15 = getelementptr inbounds %struct.gqueue, %struct.gqueue* %14, i32 0, i32 0, !dbg !12043
  %16 = load %struct.gqueue*, %struct.gqueue** %15, align 8, !dbg !12043
  %17 = icmp ne %struct.gqueue* %16, null, !dbg !12040
  br i1 %17, label %18, label %29, !dbg !12044

; <label>:18                                      ; preds = %13
  %19 = load %struct.gqueue*, %struct.gqueue** %gq_tmp, align 8, !dbg !12045
  %20 = getelementptr inbounds %struct.gqueue, %struct.gqueue* %19, i32 0, i32 1, !dbg !12046
  %21 = load i8*, i8** %20, align 8, !dbg !12046
  %22 = bitcast i8* %21 to %struct.ev_to_data.14*, !dbg !12047
  %23 = getelementptr inbounds %struct.ev_to_data.14, %struct.ev_to_data.14* %22, i32 0, i32 0, !dbg !12048
  %24 = load i64, i64* %23, align 8, !dbg !12048
  %25 = load %struct.ev_to_data.14*, %struct.ev_to_data.14** %2, align 8, !dbg !12049
  %26 = getelementptr inbounds %struct.ev_to_data.14, %struct.ev_to_data.14* %25, i32 0, i32 0, !dbg !12050
  %27 = load i64, i64* %26, align 8, !dbg !12050
  %28 = icmp slt i64 %24, %27, !dbg !12051
  br label %29

; <label>:29                                      ; preds = %18, %13
  %30 = phi i1 [ false, %13 ], [ %28, %18 ]
  br i1 %30, label %31, label %37, !dbg !12052

; <label>:31                                      ; preds = %29
  %32 = load %struct.gqueue*, %struct.gqueue** %gq_tmp, align 8, !dbg !12054
  store %struct.gqueue* %32, %struct.gqueue** %gq_prev, align 8, !dbg !12055
  br label %33, !dbg !12056

; <label>:33                                      ; preds = %31
  %34 = load %struct.gqueue*, %struct.gqueue** %gq_tmp, align 8, !dbg !12057
  %35 = getelementptr inbounds %struct.gqueue, %struct.gqueue* %34, i32 0, i32 0, !dbg !12058
  %36 = load %struct.gqueue*, %struct.gqueue** %35, align 8, !dbg !12058
  store %struct.gqueue* %36, %struct.gqueue** %gq_tmp, align 8, !dbg !12059
  br label %13, !dbg !12060

; <label>:37                                      ; preds = %29
  %38 = load %struct.gqueue*, %struct.gqueue** %gq_prev, align 8, !dbg !12062
  %39 = icmp ne %struct.gqueue* %38, null, !dbg !12062
  br i1 %39, label %58, label %40, !dbg !12064

; <label>:40                                      ; preds = %37
  %41 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 8), align 4, !dbg !12065
  %42 = icmp sgt i32 %41, 3, !dbg !12068
  br i1 %42, label %43, label %45, !dbg !12069

; <label>:43                                      ; preds = %40
  %44 = load i8*, i8** %fn, align 8, !dbg !12070
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.2.393, i32 0, i32 0), i8* %44), !dbg !12071
  br label %45, !dbg !12071

; <label>:45                                      ; preds = %43, %40
  %46 = load %struct.ev_to_data.14*, %struct.ev_to_data.14** %2, align 8, !dbg !12072
  %47 = bitcast %struct.ev_to_data.14* %46 to i8*, !dbg !12073
  %48 = load %struct.gqueue*, %struct.gqueue** %gq_new, align 8, !dbg !12074
  %49 = getelementptr inbounds %struct.gqueue, %struct.gqueue* %48, i32 0, i32 1, !dbg !12075
  store i8* %47, i8** %49, align 8, !dbg !12076
  %50 = load %struct.qset*, %struct.qset** @ev_to_queue, align 8, !dbg !12077
  %51 = getelementptr inbounds %struct.qset, %struct.qset* %50, i32 0, i32 0, !dbg !12078
  %52 = load %struct.gqueue*, %struct.gqueue** %51, align 8, !dbg !12078
  %53 = load %struct.gqueue*, %struct.gqueue** %gq_new, align 8, !dbg !12079
  %54 = getelementptr inbounds %struct.gqueue, %struct.gqueue* %53, i32 0, i32 0, !dbg !12080
  store %struct.gqueue* %52, %struct.gqueue** %54, align 8, !dbg !12081
  %55 = load %struct.gqueue*, %struct.gqueue** %gq_new, align 8, !dbg !12082
  %56 = load %struct.qset*, %struct.qset** @ev_to_queue, align 8, !dbg !12083
  %57 = getelementptr inbounds %struct.qset, %struct.qset* %56, i32 0, i32 0, !dbg !12084
  store %struct.gqueue* %55, %struct.gqueue** %57, align 8, !dbg !12085
  br label %128, !dbg !12086

; <label>:58                                      ; preds = %37
  br label %59, !dbg !12087

; <label>:59                                      ; preds = %77, %58
  %60 = load %struct.gqueue*, %struct.gqueue** %gq_tmp, align 8, !dbg !12089
  %61 = getelementptr inbounds %struct.gqueue, %struct.gqueue* %60, i32 0, i32 1, !dbg !12091
  %62 = load i8*, i8** %61, align 8, !dbg !12091
  %63 = icmp ne i8* %62, null, !dbg !12089
  br i1 %63, label %64, label %75, !dbg !12092

; <label>:64                                      ; preds = %59
  %65 = load %struct.gqueue*, %struct.gqueue** %gq_tmp, align 8, !dbg !12093
  %66 = getelementptr inbounds %struct.gqueue, %struct.gqueue* %65, i32 0, i32 1, !dbg !12094
  %67 = load i8*, i8** %66, align 8, !dbg !12094
  %68 = bitcast i8* %67 to %struct.ev_to_data.14*, !dbg !12095
  %69 = getelementptr inbounds %struct.ev_to_data.14, %struct.ev_to_data.14* %68, i32 0, i32 0, !dbg !12096
  %70 = load i64, i64* %69, align 8, !dbg !12096
  %71 = load %struct.ev_to_data.14*, %struct.ev_to_data.14** %2, align 8, !dbg !12097
  %72 = getelementptr inbounds %struct.ev_to_data.14, %struct.ev_to_data.14* %71, i32 0, i32 0, !dbg !12098
  %73 = load i64, i64* %72, align 8, !dbg !12098
  %74 = icmp eq i64 %70, %73, !dbg !12099
  br label %75

; <label>:75                                      ; preds = %64, %59
  %76 = phi i1 [ false, %59 ], [ %74, %64 ]
  br i1 %76, label %77, label %82, !dbg !12100

; <label>:77                                      ; preds = %75
  %78 = load %struct.gqueue*, %struct.gqueue** %gq_tmp, align 8, !dbg !12102
  store %struct.gqueue* %78, %struct.gqueue** %gq_prev, align 8, !dbg !12104
  %79 = load %struct.gqueue*, %struct.gqueue** %gq_tmp, align 8, !dbg !12105
  %80 = getelementptr inbounds %struct.gqueue, %struct.gqueue* %79, i32 0, i32 0, !dbg !12106
  %81 = load %struct.gqueue*, %struct.gqueue** %80, align 8, !dbg !12106
  store %struct.gqueue* %81, %struct.gqueue** %gq_tmp, align 8, !dbg !12107
  br label %59, !dbg !12108

; <label>:82                                      ; preds = %75
  %83 = load %struct.gqueue*, %struct.gqueue** %gq_tmp, align 8, !dbg !12110
  %84 = getelementptr inbounds %struct.gqueue, %struct.gqueue* %83, i32 0, i32 1, !dbg !12112
  %85 = load i8*, i8** %84, align 8, !dbg !12112
  %86 = icmp ne i8* %85, null, !dbg !12110
  br i1 %86, label %111, label %87, !dbg !12113

; <label>:87                                      ; preds = %82
  %88 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 8), align 4, !dbg !12114
  %89 = icmp sgt i32 %88, 3, !dbg !12117
  br i1 %89, label %90, label %92, !dbg !12118

; <label>:90                                      ; preds = %87
  %91 = load i8*, i8** %fn, align 8, !dbg !12119
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3.394, i32 0, i32 0), i8* %91), !dbg !12120
  br label %92, !dbg !12120

; <label>:92                                      ; preds = %90, %87
  %93 = load %struct.ev_to_data.14*, %struct.ev_to_data.14** %2, align 8, !dbg !12121
  %94 = bitcast %struct.ev_to_data.14* %93 to i8*, !dbg !12122
  %95 = load %struct.qset*, %struct.qset** @ev_to_queue, align 8, !dbg !12123
  %96 = getelementptr inbounds %struct.qset, %struct.qset* %95, i32 0, i32 1, !dbg !12124
  %97 = load %struct.gqueue*, %struct.gqueue** %96, align 8, !dbg !12124
  %98 = getelementptr inbounds %struct.gqueue, %struct.gqueue* %97, i32 0, i32 1, !dbg !12125
  store i8* %94, i8** %98, align 8, !dbg !12126
  %99 = load %struct.gqueue*, %struct.gqueue** %gq_new, align 8, !dbg !12127
  %100 = load %struct.qset*, %struct.qset** @ev_to_queue, align 8, !dbg !12128
  %101 = getelementptr inbounds %struct.qset, %struct.qset* %100, i32 0, i32 1, !dbg !12129
  %102 = load %struct.gqueue*, %struct.gqueue** %101, align 8, !dbg !12129
  %103 = getelementptr inbounds %struct.gqueue, %struct.gqueue* %102, i32 0, i32 0, !dbg !12130
  store %struct.gqueue* %99, %struct.gqueue** %103, align 8, !dbg !12131
  %104 = load %struct.gqueue*, %struct.gqueue** %gq_new, align 8, !dbg !12132
  %105 = getelementptr inbounds %struct.gqueue, %struct.gqueue* %104, i32 0, i32 1, !dbg !12133
  store i8* null, i8** %105, align 8, !dbg !12134
  %106 = load %struct.gqueue*, %struct.gqueue** %gq_new, align 8, !dbg !12135
  %107 = getelementptr inbounds %struct.gqueue, %struct.gqueue* %106, i32 0, i32 0, !dbg !12136
  store %struct.gqueue* null, %struct.gqueue** %107, align 8, !dbg !12137
  %108 = load %struct.gqueue*, %struct.gqueue** %gq_new, align 8, !dbg !12138
  %109 = load %struct.qset*, %struct.qset** @ev_to_queue, align 8, !dbg !12139
  %110 = getelementptr inbounds %struct.qset, %struct.qset* %109, i32 0, i32 1, !dbg !12140
  store %struct.gqueue* %108, %struct.gqueue** %110, align 8, !dbg !12141
  br label %127, !dbg !12142

; <label>:111                                     ; preds = %82
  %112 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 8), align 4, !dbg !12143
  %113 = icmp sgt i32 %112, 3, !dbg !12146
  br i1 %113, label %114, label %116, !dbg !12147

; <label>:114                                     ; preds = %111
  %115 = load i8*, i8** %fn, align 8, !dbg !12148
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.4.395, i32 0, i32 0), i8* %115), !dbg !12149
  br label %116, !dbg !12149

; <label>:116                                     ; preds = %114, %111
  %117 = load %struct.ev_to_data.14*, %struct.ev_to_data.14** %2, align 8, !dbg !12150
  %118 = bitcast %struct.ev_to_data.14* %117 to i8*, !dbg !12151
  %119 = load %struct.gqueue*, %struct.gqueue** %gq_new, align 8, !dbg !12152
  %120 = getelementptr inbounds %struct.gqueue, %struct.gqueue* %119, i32 0, i32 1, !dbg !12153
  store i8* %118, i8** %120, align 8, !dbg !12154
  %121 = load %struct.gqueue*, %struct.gqueue** %gq_new, align 8, !dbg !12155
  %122 = load %struct.gqueue*, %struct.gqueue** %gq_prev, align 8, !dbg !12156
  %123 = getelementptr inbounds %struct.gqueue, %struct.gqueue* %122, i32 0, i32 0, !dbg !12157
  store %struct.gqueue* %121, %struct.gqueue** %123, align 8, !dbg !12158
  %124 = load %struct.gqueue*, %struct.gqueue** %gq_tmp, align 8, !dbg !12159
  %125 = load %struct.gqueue*, %struct.gqueue** %gq_new, align 8, !dbg !12160
  %126 = getelementptr inbounds %struct.gqueue, %struct.gqueue* %125, i32 0, i32 0, !dbg !12161
  store %struct.gqueue* %124, %struct.gqueue** %126, align 8, !dbg !12162
  br label %127

; <label>:127                                     ; preds = %116, %92
  br label %128

; <label>:128                                     ; preds = %127, %45
  store i32 0, i32* %1, align 4, !dbg !12163
  br label %130, !dbg !12163

; <label>:129                                     ; preds = %7
  store i32 -1, i32* %1, align 4, !dbg !12164
  br label %130, !dbg !12164

; <label>:130                                     ; preds = %129, %128
  %131 = load i32, i32* %1, align 4, !dbg !12165
  ret i32 %131, !dbg !12165
}

; Function Attrs: nounwind uwtable
define i64 @ev_timeout_process() #0 !dbg !1549 {
  %1 = alloca i64, align 8
  %fn = alloca i8*, align 8
  %td_tmp = alloca %struct.ev_to_data.14*, align 8
  call void @llvm.dbg.declare(metadata i8** %fn, metadata !12166, metadata !2279), !dbg !12167
  store i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.396, i32 0, i32 0), i8** %fn, align 8, !dbg !12167
  call void @llvm.dbg.declare(metadata %struct.ev_to_data.14** %td_tmp, metadata !12168, metadata !2279), !dbg !12169
  br label %2, !dbg !12170

; <label>:2                                       ; preds = %42, %0
  %3 = load %struct.qset*, %struct.qset** @ev_to_queue, align 8, !dbg !12171
  %4 = call i8* @queue_peek(%struct.qset* %3), !dbg !12173
  %5 = bitcast i8* %4 to %struct.ev_to_data.14*, !dbg !12174
  store %struct.ev_to_data.14* %5, %struct.ev_to_data.14** %td_tmp, align 8, !dbg !12175
  %6 = icmp ne %struct.ev_to_data.14* %5, null, !dbg !12175
  br i1 %6, label %7, label %13, !dbg !12176

; <label>:7                                       ; preds = %2
  %8 = load %struct.ev_to_data.14*, %struct.ev_to_data.14** %td_tmp, align 8, !dbg !12177
  %9 = getelementptr inbounds %struct.ev_to_data.14, %struct.ev_to_data.14* %8, i32 0, i32 0, !dbg !12178
  %10 = load i64, i64* %9, align 8, !dbg !12178
  %11 = call i64 @time(i64* null) #10, !dbg !12179
  %12 = icmp sle i64 %10, %11, !dbg !12180
  br label %13

; <label>:13                                      ; preds = %7, %2
  %14 = phi i1 [ false, %2 ], [ %12, %7 ]
  br i1 %14, label %15, label %44, !dbg !12181

; <label>:15                                      ; preds = %13
  %16 = load %struct.qset*, %struct.qset** @ev_to_queue, align 8, !dbg !12183
  %17 = call i8* @dequeue(%struct.qset* %16), !dbg !12185
  %18 = bitcast i8* %17 to %struct.ev_to_data.14*, !dbg !12185
  store %struct.ev_to_data.14* %18, %struct.ev_to_data.14** %td_tmp, align 8, !dbg !12186
  %19 = load %struct.ev_to_data.14*, %struct.ev_to_data.14** %td_tmp, align 8, !dbg !12187
  %20 = getelementptr inbounds %struct.ev_to_data.14, %struct.ev_to_data.14* %19, i32 0, i32 1, !dbg !12189
  %21 = bitcast {}** %20 to i32 (%struct.ev_to_data.14*)**, !dbg !12189
  %22 = load i32 (%struct.ev_to_data.14*)*, i32 (%struct.ev_to_data.14*)** %21, align 8, !dbg !12189
  %23 = icmp ne i32 (%struct.ev_to_data.14*)* %22, null, !dbg !12187
  br i1 %23, label %24, label %36, !dbg !12190

; <label>:24                                      ; preds = %15
  %25 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 8), align 4, !dbg !12191
  %26 = icmp sgt i32 %25, 3, !dbg !12194
  br i1 %26, label %27, label %29, !dbg !12195

; <label>:27                                      ; preds = %24
  %28 = load i8*, i8** %fn, align 8, !dbg !12196
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.6.397, i32 0, i32 0), i8* %28), !dbg !12197
  br label %29, !dbg !12197

; <label>:29                                      ; preds = %27, %24
  %30 = load %struct.ev_to_data.14*, %struct.ev_to_data.14** %td_tmp, align 8, !dbg !12198
  %31 = getelementptr inbounds %struct.ev_to_data.14, %struct.ev_to_data.14* %30, i32 0, i32 1, !dbg !12199
  %32 = bitcast {}** %31 to i32 (%struct.ev_to_data.14*)**, !dbg !12199
  %33 = load i32 (%struct.ev_to_data.14*)*, i32 (%struct.ev_to_data.14*)** %32, align 8, !dbg !12199
  %34 = load %struct.ev_to_data.14*, %struct.ev_to_data.14** %td_tmp, align 8, !dbg !12200
  %35 = call i32 %33(%struct.ev_to_data.14* %34), !dbg !12201
  br label %42, !dbg !12202

; <label>:36                                      ; preds = %15
  %37 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 8), align 4, !dbg !12203
  %38 = icmp sgt i32 %37, 3, !dbg !12205
  br i1 %38, label %39, label %41, !dbg !12206

; <label>:39                                      ; preds = %36
  %40 = load i8*, i8** %fn, align 8, !dbg !12207
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.7.398, i32 0, i32 0), i8* %40), !dbg !12208
  br label %41, !dbg !12208

; <label>:41                                      ; preds = %39, %36
  br label %42

; <label>:42                                      ; preds = %41, %29
  %43 = load %struct.ev_to_data.14*, %struct.ev_to_data.14** %td_tmp, align 8, !dbg !12209
  call void @ev_to_data_free(%struct.ev_to_data.14* %43), !dbg !12210
  br label %2, !dbg !12211

; <label>:44                                      ; preds = %13
  %45 = load %struct.qset*, %struct.qset** @ev_to_queue, align 8, !dbg !12213
  %46 = call i8* @queue_peek(%struct.qset* %45), !dbg !12214
  %47 = bitcast i8* %46 to %struct.ev_to_data.14*, !dbg !12215
  store %struct.ev_to_data.14* %47, %struct.ev_to_data.14** %td_tmp, align 8, !dbg !12216
  %48 = load %struct.ev_to_data.14*, %struct.ev_to_data.14** %td_tmp, align 8, !dbg !12217
  %49 = icmp ne %struct.ev_to_data.14* %48, null, !dbg !12217
  br i1 %49, label %50, label %54, !dbg !12219

; <label>:50                                      ; preds = %44
  %51 = load %struct.ev_to_data.14*, %struct.ev_to_data.14** %td_tmp, align 8, !dbg !12220
  %52 = getelementptr inbounds %struct.ev_to_data.14, %struct.ev_to_data.14* %51, i32 0, i32 0, !dbg !12221
  %53 = load i64, i64* %52, align 8, !dbg !12221
  store i64 %53, i64* %1, align 8, !dbg !12222
  br label %55, !dbg !12222

; <label>:54                                      ; preds = %44
  store i64 0, i64* %1, align 8, !dbg !12223
  br label %55, !dbg !12223

; <label>:55                                      ; preds = %54, %50
  %56 = load i64, i64* %1, align 8, !dbg !12224
  ret i64 %56, !dbg !12224
}

; Function Attrs: nounwind uwtable
define void @ev_to_data_free(%struct.ev_to_data.14* %td) #0 !dbg !1552 {
  %1 = alloca %struct.ev_to_data.14*, align 8
  %fn = alloca i8*, align 8
  store %struct.ev_to_data.14* %td, %struct.ev_to_data.14** %1, align 8
  call void @llvm.dbg.declare(metadata %struct.ev_to_data.14** %1, metadata !12225, metadata !2279), !dbg !12226
  call void @llvm.dbg.declare(metadata i8** %fn, metadata !12227, metadata !2279), !dbg !12228
  store i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.8.399, i32 0, i32 0), i8** %fn, align 8, !dbg !12228
  %2 = load %struct.ev_to_data.14*, %struct.ev_to_data.14** %1, align 8, !dbg !12229
  %3 = getelementptr inbounds %struct.ev_to_data.14, %struct.ev_to_data.14* %2, i32 0, i32 2, !dbg !12230
  %4 = load i32, i32* %3, align 8, !dbg !12230
  switch i32 %4, label %18 [
    i32 0, label %5
    i32 1, label %17
  ], !dbg !12231

; <label>:5                                       ; preds = %0
  %6 = load %struct.ev_to_data.14*, %struct.ev_to_data.14** %1, align 8, !dbg !12232
  %7 = getelementptr inbounds %struct.ev_to_data.14, %struct.ev_to_data.14* %6, i32 0, i32 3, !dbg !12235
  %8 = bitcast %union.anon* %7 to i8**, !dbg !12236
  %9 = load i8*, i8** %8, align 8, !dbg !12236
  %10 = icmp ne i8* %9, null, !dbg !12232
  br i1 %10, label %11, label %16, !dbg !12237

; <label>:11                                      ; preds = %5
  %12 = load %struct.ev_to_data.14*, %struct.ev_to_data.14** %1, align 8, !dbg !12238
  %13 = getelementptr inbounds %struct.ev_to_data.14, %struct.ev_to_data.14* %12, i32 0, i32 3, !dbg !12239
  %14 = bitcast %union.anon* %13 to i8**, !dbg !12240
  %15 = load i8*, i8** %14, align 8, !dbg !12240
  call void @free(i8* %15) #10, !dbg !12241
  br label %16, !dbg !12241

; <label>:16                                      ; preds = %11, %5
  br label %20, !dbg !12242

; <label>:17                                      ; preds = %0
  br label %20, !dbg !12243

; <label>:18                                      ; preds = %0
  %19 = load i8*, i8** %fn, align 8, !dbg !12244
  call void (i32, i8*, ...) @syslog(i32 2, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.9.400, i32 0, i32 0), i8* %19), !dbg !12245
  br label %20, !dbg !12246

; <label>:20                                      ; preds = %18, %17, %16
  %21 = load %struct.ev_to_data.14*, %struct.ev_to_data.14** %1, align 8, !dbg !12247
  %22 = bitcast %struct.ev_to_data.14* %21 to i8*, !dbg !12247
  call void @free(i8* %22) #10, !dbg !12248
  ret void, !dbg !12249
}

; Function Attrs: nounwind uwtable
define void @ev_to_data_free_v(i8* %td_v) #0 !dbg !1555 {
  %1 = alloca i8*, align 8
  store i8* %td_v, i8** %1, align 8
  call void @llvm.dbg.declare(metadata i8** %1, metadata !12250, metadata !2279), !dbg !12251
  %2 = load i8*, i8** %1, align 8, !dbg !12252
  %3 = bitcast i8* %2 to %struct.ev_to_data.14*, !dbg !12253
  call void @ev_to_data_free(%struct.ev_to_data.14* %3), !dbg !12254
  ret void, !dbg !12255
}

; Function Attrs: nounwind uwtable
define void @ev_to_finish() #0 !dbg !1556 {
  %1 = load %struct.qset*, %struct.qset** @ev_to_queue, align 8, !dbg !12256
  call void @queue_destroy(%struct.qset* %1, void (i8*)* @ev_to_data_free_v), !dbg !12257
  ret void, !dbg !12258
}

; Function Attrs: nounwind uwtable
define void @ev_to_flush(i32 %type) #0 !dbg !1557 {
  %1 = alloca i32, align 4
  %gqp = alloca %struct.gqueue*, align 8
  %etdp = alloca %struct.ev_to_data.14*, align 8
  store i32 %type, i32* %1, align 4
  call void @llvm.dbg.declare(metadata i32* %1, metadata !12259, metadata !2279), !dbg !12260
  call void @llvm.dbg.declare(metadata %struct.gqueue** %gqp, metadata !12261, metadata !2279), !dbg !12262
  call void @llvm.dbg.declare(metadata %struct.ev_to_data.14** %etdp, metadata !12263, metadata !2279), !dbg !12264
  %2 = load %struct.qset*, %struct.qset** @ev_to_queue, align 8, !dbg !12265
  %3 = getelementptr inbounds %struct.qset, %struct.qset* %2, i32 0, i32 0, !dbg !12267
  %4 = load %struct.gqueue*, %struct.gqueue** %3, align 8, !dbg !12267
  store %struct.gqueue* %4, %struct.gqueue** %gqp, align 8, !dbg !12268
  br label %5, !dbg !12269

; <label>:5                                       ; preds = %44, %0
  %6 = load %struct.gqueue*, %struct.gqueue** %gqp, align 8, !dbg !12270
  %7 = getelementptr inbounds %struct.gqueue, %struct.gqueue* %6, i32 0, i32 0, !dbg !12273
  %8 = load %struct.gqueue*, %struct.gqueue** %7, align 8, !dbg !12273
  %9 = icmp ne %struct.gqueue* %8, null, !dbg !12274
  br i1 %9, label %10, label %48, !dbg !12274

; <label>:10                                      ; preds = %5
  %11 = load %struct.gqueue*, %struct.gqueue** %gqp, align 8, !dbg !12275
  %12 = getelementptr inbounds %struct.gqueue, %struct.gqueue* %11, i32 0, i32 1, !dbg !12278
  %13 = load i8*, i8** %12, align 8, !dbg !12278
  %14 = icmp ne i8* %13, null, !dbg !12275
  br i1 %14, label %15, label %43, !dbg !12279

; <label>:15                                      ; preds = %10
  %16 = load %struct.gqueue*, %struct.gqueue** %gqp, align 8, !dbg !12280
  %17 = getelementptr inbounds %struct.gqueue, %struct.gqueue* %16, i32 0, i32 1, !dbg !12282
  %18 = load i8*, i8** %17, align 8, !dbg !12282
  %19 = bitcast i8* %18 to %struct.ev_to_data.14*, !dbg !12283
  store %struct.ev_to_data.14* %19, %struct.ev_to_data.14** %etdp, align 8, !dbg !12284
  %20 = load %struct.ev_to_data.14*, %struct.ev_to_data.14** %etdp, align 8, !dbg !12285
  %21 = getelementptr inbounds %struct.ev_to_data.14, %struct.ev_to_data.14* %20, i32 0, i32 2, !dbg !12287
  %22 = load i32, i32* %21, align 8, !dbg !12287
  %23 = load i32, i32* %1, align 4, !dbg !12288
  %24 = icmp eq i32 %22, %23, !dbg !12289
  br i1 %24, label %25, label %42, !dbg !12290

; <label>:25                                      ; preds = %15
  %26 = load %struct.ev_to_data.14*, %struct.ev_to_data.14** %etdp, align 8, !dbg !12291
  %27 = getelementptr inbounds %struct.ev_to_data.14, %struct.ev_to_data.14* %26, i32 0, i32 1, !dbg !12294
  %28 = bitcast {}** %27 to i32 (%struct.ev_to_data.14*)**, !dbg !12294
  %29 = load i32 (%struct.ev_to_data.14*)*, i32 (%struct.ev_to_data.14*)** %28, align 8, !dbg !12294
  %30 = icmp ne i32 (%struct.ev_to_data.14*)* %29, null, !dbg !12291
  br i1 %30, label %31, label %38, !dbg !12295

; <label>:31                                      ; preds = %25
  %32 = load %struct.ev_to_data.14*, %struct.ev_to_data.14** %etdp, align 8, !dbg !12296
  %33 = getelementptr inbounds %struct.ev_to_data.14, %struct.ev_to_data.14* %32, i32 0, i32 1, !dbg !12297
  %34 = bitcast {}** %33 to i32 (%struct.ev_to_data.14*)**, !dbg !12297
  %35 = load i32 (%struct.ev_to_data.14*)*, i32 (%struct.ev_to_data.14*)** %34, align 8, !dbg !12297
  %36 = load %struct.ev_to_data.14*, %struct.ev_to_data.14** %etdp, align 8, !dbg !12298
  %37 = call i32 %35(%struct.ev_to_data.14* %36), !dbg !12299
  br label %38, !dbg !12299

; <label>:38                                      ; preds = %31, %25
  %39 = load %struct.ev_to_data.14*, %struct.ev_to_data.14** %etdp, align 8, !dbg !12300
  %40 = getelementptr inbounds %struct.ev_to_data.14, %struct.ev_to_data.14* %39, i32 0, i32 1, !dbg !12301
  %41 = bitcast {}** %40 to i32 (%struct.ev_to_data.14*)**, !dbg !12301
  store i32 (%struct.ev_to_data.14*)* null, i32 (%struct.ev_to_data.14*)** %41, align 8, !dbg !12302
  br label %42, !dbg !12303

; <label>:42                                      ; preds = %38, %15
  br label %43, !dbg !12304

; <label>:43                                      ; preds = %42, %10
  br label %44, !dbg !12305

; <label>:44                                      ; preds = %43
  %45 = load %struct.gqueue*, %struct.gqueue** %gqp, align 8, !dbg !12306
  %46 = getelementptr inbounds %struct.gqueue, %struct.gqueue* %45, i32 0, i32 0, !dbg !12308
  %47 = load %struct.gqueue*, %struct.gqueue** %46, align 8, !dbg !12308
  store %struct.gqueue* %47, %struct.gqueue** %gqp, align 8, !dbg !12309
  br label %5, !dbg !12310

; <label>:48                                      ; preds = %5
  ret void, !dbg !12311
}

; Function Attrs: nounwind uwtable
define i32 @ev_to_register_ifcheck() #0 !dbg !1558 {
  %1 = alloca i32, align 4
  %fn = alloca i8*, align 8
  %td_new = alloca %struct.ev_to_data.14*, align 8
  call void @llvm.dbg.declare(metadata i8** %fn, metadata !12312, metadata !2279), !dbg !12313
  store i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.10.401, i32 0, i32 0), i8** %fn, align 8, !dbg !12313
  call void @llvm.dbg.declare(metadata %struct.ev_to_data.14** %td_new, metadata !12314, metadata !2279), !dbg !12315
  %2 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 8), align 4, !dbg !12316
  %3 = icmp sgt i32 %2, 2, !dbg !12318
  br i1 %3, label %4, label %6, !dbg !12319

; <label>:4                                       ; preds = %0
  %5 = load i8*, i8** %fn, align 8, !dbg !12320
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.11.402, i32 0, i32 0), i8* %5), !dbg !12321
  br label %6, !dbg !12321

; <label>:6                                       ; preds = %4, %0
  %7 = load %struct.qset*, %struct.qset** @ev_to_queue, align 8, !dbg !12322
  %8 = icmp ne %struct.qset* %7, null, !dbg !12322
  br i1 %8, label %10, label %9, !dbg !12324

; <label>:9                                       ; preds = %6
  store i32 -1, i32* %1, align 4, !dbg !12325
  br label %32, !dbg !12325

; <label>:10                                      ; preds = %6
  %11 = call noalias i8* @malloc(i64 32) #10, !dbg !12326
  %12 = bitcast i8* %11 to %struct.ev_to_data.14*, !dbg !12326
  store %struct.ev_to_data.14* %12, %struct.ev_to_data.14** %td_new, align 8, !dbg !12327
  %13 = load %struct.ev_to_data.14*, %struct.ev_to_data.14** %td_new, align 8, !dbg !12328
  %14 = icmp ne %struct.ev_to_data.14* %13, null, !dbg !12328
  br i1 %14, label %17, label %15, !dbg !12330

; <label>:15                                      ; preds = %10
  %16 = load i8*, i8** %fn, align 8, !dbg !12331
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.12.403, i32 0, i32 0), i8* %16), !dbg !12333
  store i32 -1, i32* %1, align 4, !dbg !12334
  br label %32, !dbg !12334

; <label>:17                                      ; preds = %10
  %18 = call i64 @time(i64* null) #10, !dbg !12335
  %19 = add nsw i64 %18, 10, !dbg !12336
  %20 = load %struct.ev_to_data.14*, %struct.ev_to_data.14** %td_new, align 8, !dbg !12337
  %21 = getelementptr inbounds %struct.ev_to_data.14, %struct.ev_to_data.14* %20, i32 0, i32 0, !dbg !12338
  store i64 %19, i64* %21, align 8, !dbg !12339
  %22 = load %struct.ev_to_data.14*, %struct.ev_to_data.14** %td_new, align 8, !dbg !12340
  %23 = getelementptr inbounds %struct.ev_to_data.14, %struct.ev_to_data.14* %22, i32 0, i32 1, !dbg !12341
  %24 = bitcast {}** %23 to i32 (%struct.ev_to_data.14*)**, !dbg !12341
  store i32 (%struct.ev_to_data.14*)* @ev_to_handler_ifcheck, i32 (%struct.ev_to_data.14*)** %24, align 8, !dbg !12342
  %25 = load %struct.ev_to_data.14*, %struct.ev_to_data.14** %td_new, align 8, !dbg !12343
  %26 = getelementptr inbounds %struct.ev_to_data.14, %struct.ev_to_data.14* %25, i32 0, i32 2, !dbg !12344
  store i32 0, i32* %26, align 8, !dbg !12345
  %27 = load %struct.ev_to_data.14*, %struct.ev_to_data.14** %td_new, align 8, !dbg !12346
  %28 = getelementptr inbounds %struct.ev_to_data.14, %struct.ev_to_data.14* %27, i32 0, i32 3, !dbg !12347
  %29 = bitcast %union.anon* %28 to i8**, !dbg !12348
  store i8* null, i8** %29, align 8, !dbg !12349
  %30 = load %struct.ev_to_data.14*, %struct.ev_to_data.14** %td_new, align 8, !dbg !12350
  %31 = call i32 @ev_to_register(%struct.ev_to_data.14* %30), !dbg !12351
  store i32 0, i32* %1, align 4, !dbg !12352
  br label %32, !dbg !12352

; <label>:32                                      ; preds = %17, %15, %9
  %33 = load i32, i32* %1, align 4, !dbg !12353
  ret i32 %33, !dbg !12353
}

; Function Attrs: nounwind uwtable
define i32 @ev_to_handler_ifcheck(%struct.ev_to_data.14* %td) #0 !dbg !1559 {
  %1 = alloca %struct.ev_to_data.14*, align 8
  %fn = alloca i8*, align 8
  store %struct.ev_to_data.14* %td, %struct.ev_to_data.14** %1, align 8
  call void @llvm.dbg.declare(metadata %struct.ev_to_data.14** %1, metadata !12354, metadata !2279), !dbg !12355
  call void @llvm.dbg.declare(metadata i8** %fn, metadata !12356, metadata !2279), !dbg !12357
  store i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.13.404, i32 0, i32 0), i8** %fn, align 8, !dbg !12357
  %2 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 8), align 4, !dbg !12358
  %3 = icmp sgt i32 %2, 2, !dbg !12360
  br i1 %3, label %4, label %6, !dbg !12361

; <label>:4                                       ; preds = %0
  %5 = load i8*, i8** %fn, align 8, !dbg !12362
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.11.402, i32 0, i32 0), i8* %5), !dbg !12363
  br label %6, !dbg !12363

; <label>:6                                       ; preds = %4, %0
  %7 = load %struct.ev_to_data.14*, %struct.ev_to_data.14** %1, align 8, !dbg !12364
  %8 = icmp ne %struct.ev_to_data.14* %7, null, !dbg !12364
  br i1 %8, label %9, label %19, !dbg !12366

; <label>:9                                       ; preds = %6
  %10 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 9), align 8, !dbg !12367
  %11 = call i32 @net_reinit_socketlist(i32 %10, i32 0), !dbg !12369
  switch i32 %11, label %16 [
    i32 0, label %12
    i32 1, label %14
  ], !dbg !12370

; <label>:12                                      ; preds = %9
  %13 = load i8*, i8** %fn, align 8, !dbg !12371
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.14.405, i32 0, i32 0), i8* %13), !dbg !12373
  br label %18, !dbg !12374

; <label>:14                                      ; preds = %9
  %15 = load i8*, i8** %fn, align 8, !dbg !12375
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.15.406, i32 0, i32 0), i8* %15), !dbg !12376
  br label %18, !dbg !12377

; <label>:16                                      ; preds = %9
  %17 = load i8*, i8** %fn, align 8, !dbg !12378
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.16.407, i32 0, i32 0), i8* %17), !dbg !12379
  br label %18, !dbg !12380

; <label>:18                                      ; preds = %16, %14, %12
  br label %19, !dbg !12381

; <label>:19                                      ; preds = %18, %6
  %20 = call i32 @ev_to_register_ifcheck(), !dbg !12382
  ret i32 %20, !dbg !12383
}

; Function Attrs: nounwind uwtable
define i32 @udp_response_start(i8* %mesg_buf, i32 %mesg_len, %struct.sockaddr* %sa_p, %struct.nia* %inif) #0 !dbg !1576 {
  %1 = alloca i32, align 4
  %2 = alloca i8*, align 8
  %3 = alloca i32, align 4
  %4 = alloca %struct.sockaddr*, align 8
  %5 = alloca %struct.nia*, align 8
  %fn = alloca i8*, align 8
  %cont = alloca %struct.context*, align 8
  store i8* %mesg_buf, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !12384, metadata !2279), !dbg !12385
  store i32 %mesg_len, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !12386, metadata !2279), !dbg !12387
  store %struct.sockaddr* %sa_p, %struct.sockaddr** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.sockaddr** %4, metadata !12388, metadata !2279), !dbg !12389
  store %struct.nia* %inif, %struct.nia** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.nia** %5, metadata !12390, metadata !2279), !dbg !12391
  call void @llvm.dbg.declare(metadata i8** %fn, metadata !12392, metadata !2279), !dbg !12393
  store i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.408, i32 0, i32 0), i8** %fn, align 8, !dbg !12393
  call void @llvm.dbg.declare(metadata %struct.context** %cont, metadata !12394, metadata !2279), !dbg !12395
  %6 = load i8*, i8** %fn, align 8, !dbg !12396
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1.409, i32 0, i32 0), i8* %6), !dbg !12397
  %7 = call %struct.context* bitcast (%struct.context.19* ()* @context_create to %struct.context* ()*)(), !dbg !12398
  store %struct.context* %7, %struct.context** %cont, align 8, !dbg !12399
  %8 = load %struct.context*, %struct.context** %cont, align 8, !dbg !12400
  %9 = icmp ne %struct.context* %8, null, !dbg !12400
  br i1 %9, label %13, label %10, !dbg !12402

; <label>:10                                      ; preds = %0
  %11 = load %struct.context*, %struct.context** %cont, align 8, !dbg !12403
  %12 = call i32 @response_abort(%struct.context* %11, i32 -1), !dbg !12404
  store i32 %12, i32* %1, align 4, !dbg !12405
  br label %125, !dbg !12405

; <label>:13                                      ; preds = %0
  %14 = load i8*, i8** %2, align 8, !dbg !12406
  %15 = load %struct.context*, %struct.context** %cont, align 8, !dbg !12407
  %16 = getelementptr inbounds %struct.context, %struct.context* %15, i32 0, i32 16, !dbg !12408
  %17 = bitcast %union.anon.0* %16 to i8**, !dbg !12409
  store i8* %14, i8** %17, align 8, !dbg !12410
  %18 = load i32, i32* %3, align 4, !dbg !12411
  %19 = load %struct.context*, %struct.context** %cont, align 8, !dbg !12412
  %20 = getelementptr inbounds %struct.context, %struct.context* %19, i32 0, i32 17, !dbg !12413
  store i32 %18, i32* %20, align 8, !dbg !12414
  %21 = load i8*, i8** %2, align 8, !dbg !12415
  %22 = load i32, i32* %3, align 4, !dbg !12416
  %23 = sext i32 %22 to i64, !dbg !12417
  %24 = getelementptr inbounds i8, i8* %21, i64 %23, !dbg !12417
  %25 = load %struct.context*, %struct.context** %cont, align 8, !dbg !12418
  %26 = getelementptr inbounds %struct.context, %struct.context* %25, i32 0, i32 18, !dbg !12419
  store i8* %24, i8** %26, align 8, !dbg !12420
  %27 = load %struct.context*, %struct.context** %cont, align 8, !dbg !12421
  %28 = getelementptr inbounds %struct.context, %struct.context* %27, i32 0, i32 16, !dbg !12422
  %29 = bitcast %union.anon.0* %28 to %struct.mesg_hdr**, !dbg !12423
  %30 = load %struct.mesg_hdr*, %struct.mesg_hdr** %29, align 8, !dbg !12423
  %31 = getelementptr inbounds %struct.mesg_hdr, %struct.mesg_hdr* %30, i32 0, i32 0, !dbg !12424
  %32 = load i16, i16* %31, align 2, !dbg !12424
  %33 = zext i16 %32 to i32, !dbg !12421
  %34 = load %struct.context*, %struct.context** %cont, align 8, !dbg !12425
  %35 = getelementptr inbounds %struct.context, %struct.context* %34, i32 0, i32 10, !dbg !12426
  store i32 %33, i32* %35, align 8, !dbg !12427
  %36 = load %struct.nia*, %struct.nia** %5, align 8, !dbg !12428
  %37 = call %struct.nia* @nia_copy(%struct.nia* %36), !dbg !12429
  %38 = load %struct.context*, %struct.context** %cont, align 8, !dbg !12430
  %39 = getelementptr inbounds %struct.context, %struct.context* %38, i32 0, i32 19, !dbg !12431
  store %struct.nia* %37, %struct.nia** %39, align 8, !dbg !12432
  %40 = load %struct.context*, %struct.context** %cont, align 8, !dbg !12433
  %41 = getelementptr inbounds %struct.context, %struct.context* %40, i32 0, i32 22, !dbg !12434
  %42 = load %struct.sockaddr*, %struct.sockaddr** %41, align 8, !dbg !12434
  %43 = bitcast %struct.sockaddr* %42 to i8*, !dbg !12435
  %44 = load %struct.sockaddr*, %struct.sockaddr** %4, align 8, !dbg !12436
  %45 = bitcast %struct.sockaddr* %44 to i8*, !dbg !12435
  %46 = load %struct.sockaddr*, %struct.sockaddr** %4, align 8, !dbg !12437
  %47 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %46, i32 0, i32 0, !dbg !12437
  %48 = load i16, i16* %47, align 2, !dbg !12437
  %49 = zext i16 %48 to i32, !dbg !12437
  %50 = icmp eq i32 %49, 10, !dbg !12437
  br i1 %50, label %51, label %52, !dbg !12437

; <label>:51                                      ; preds = %13
  br label %59, !dbg !12438

; <label>:52                                      ; preds = %13
  %53 = load %struct.sockaddr*, %struct.sockaddr** %4, align 8, !dbg !12440
  %54 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %53, i32 0, i32 0, !dbg !12440
  %55 = load i16, i16* %54, align 2, !dbg !12440
  %56 = zext i16 %55 to i32, !dbg !12440
  %57 = icmp eq i32 %56, 2, !dbg !12440
  %58 = select i1 %57, i64 16, i64 16, !dbg !12440
  br label %59, !dbg !12440

; <label>:59                                      ; preds = %52, %51
  %60 = phi i64 [ 28, %51 ], [ %58, %52 ], !dbg !12442
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %43, i8* %45, i64 %60, i32 2, i1 false), !dbg !12444
  %61 = load %struct.context*, %struct.context** %cont, align 8, !dbg !12445
  %62 = getelementptr inbounds %struct.context, %struct.context* %61, i32 0, i32 16, !dbg !12447
  %63 = bitcast %union.anon.0* %62 to %struct.mesg_hdr**, !dbg !12448
  %64 = load %struct.mesg_hdr*, %struct.mesg_hdr** %63, align 8, !dbg !12448
  %65 = getelementptr inbounds %struct.mesg_hdr, %struct.mesg_hdr* %64, i32 0, i32 1, !dbg !12449
  %66 = load i16, i16* %65, align 2, !dbg !12449
  %67 = lshr i16 %66, 3, !dbg !12449
  %68 = and i16 %67, 15, !dbg !12449
  %69 = trunc i16 %68 to i8, !dbg !12449
  %70 = zext i8 %69 to i32, !dbg !12445
  %71 = icmp eq i32 %70, 0, !dbg !12450
  br i1 %71, label %72, label %103, !dbg !12451

; <label>:72                                      ; preds = %59
  %73 = load i8*, i8** %fn, align 8, !dbg !12452
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.2.410, i32 0, i32 0), i8* %73), !dbg !12454
  %74 = load %struct.context*, %struct.context** %cont, align 8, !dbg !12455
  %75 = getelementptr inbounds %struct.context, %struct.context* %74, i32 0, i32 7, !dbg !12456
  store i32 (%struct.context*)* @udp_response_recursive_process, i32 (%struct.context*)** %75, align 8, !dbg !12457
  %76 = load %struct.context*, %struct.context** %cont, align 8, !dbg !12458
  %77 = getelementptr inbounds %struct.context, %struct.context* %76, i32 0, i32 8, !dbg !12459
  store i32 (%struct.context*)* @udp_response_recursive_retry, i32 (%struct.context*)** %77, align 8, !dbg !12460
  %78 = load %struct.context*, %struct.context** %cont, align 8, !dbg !12461
  %79 = call i32 @request_start(%struct.context* %78, i32 0), !dbg !12462
  switch i32 %79, label %92 [
    i32 0, label %80
    i32 1, label %81
  ], !dbg !12463

; <label>:80                                      ; preds = %72
  store i32 0, i32* %1, align 4, !dbg !12464
  br label %125, !dbg !12464

; <label>:81                                      ; preds = %72
  %82 = load %struct.context*, %struct.context** %cont, align 8, !dbg !12466
  %83 = getelementptr inbounds %struct.context, %struct.context* %82, i32 0, i32 16, !dbg !12467
  %84 = bitcast %union.anon.0* %83 to %struct.mesg_hdr**, !dbg !12468
  %85 = load %struct.mesg_hdr*, %struct.mesg_hdr** %84, align 8, !dbg !12468
  %86 = getelementptr inbounds %struct.mesg_hdr, %struct.mesg_hdr* %85, i32 0, i32 1, !dbg !12469
  %87 = load i16, i16* %86, align 2, !dbg !12470
  %88 = and i16 %87, -3841, !dbg !12470
  %89 = or i16 %88, 256, !dbg !12470
  store i16 %89, i16* %86, align 2, !dbg !12470
  %90 = load %struct.context*, %struct.context** %cont, align 8, !dbg !12471
  %91 = call i32 @udp_response_finish(%struct.context* %90), !dbg !12472
  store i32 %91, i32* %1, align 4, !dbg !12473
  br label %125, !dbg !12473

; <label>:92                                      ; preds = %72
  %93 = load %struct.context*, %struct.context** %cont, align 8, !dbg !12474
  %94 = getelementptr inbounds %struct.context, %struct.context* %93, i32 0, i32 16, !dbg !12475
  %95 = bitcast %union.anon.0* %94 to %struct.mesg_hdr**, !dbg !12476
  %96 = load %struct.mesg_hdr*, %struct.mesg_hdr** %95, align 8, !dbg !12476
  %97 = getelementptr inbounds %struct.mesg_hdr, %struct.mesg_hdr* %96, i32 0, i32 1, !dbg !12477
  %98 = load i16, i16* %97, align 2, !dbg !12478
  %99 = and i16 %98, -3841, !dbg !12478
  %100 = or i16 %99, 512, !dbg !12478
  store i16 %100, i16* %97, align 2, !dbg !12478
  %101 = load %struct.context*, %struct.context** %cont, align 8, !dbg !12479
  %102 = call i32 @udp_response_finish(%struct.context* %101), !dbg !12480
  store i32 %102, i32* %1, align 4, !dbg !12481
  br label %125, !dbg !12481

; <label>:103                                     ; preds = %59
  %104 = load i8*, i8** %fn, align 8, !dbg !12482
  %105 = load %struct.context*, %struct.context** %cont, align 8, !dbg !12484
  %106 = getelementptr inbounds %struct.context, %struct.context* %105, i32 0, i32 16, !dbg !12485
  %107 = bitcast %union.anon.0* %106 to %struct.mesg_hdr**, !dbg !12486
  %108 = load %struct.mesg_hdr*, %struct.mesg_hdr** %107, align 8, !dbg !12486
  %109 = getelementptr inbounds %struct.mesg_hdr, %struct.mesg_hdr* %108, i32 0, i32 1, !dbg !12487
  %110 = load i16, i16* %109, align 2, !dbg !12487
  %111 = lshr i16 %110, 3, !dbg !12487
  %112 = and i16 %111, 15, !dbg !12487
  %113 = trunc i16 %112 to i8, !dbg !12487
  %114 = zext i8 %113 to i32, !dbg !12484
  call void (i32, i8*, ...) @syslog(i32 5, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3.418, i32 0, i32 0), i8* %104, i32 %114), !dbg !12488
  %115 = load %struct.context*, %struct.context** %cont, align 8, !dbg !12489
  %116 = getelementptr inbounds %struct.context, %struct.context* %115, i32 0, i32 16, !dbg !12490
  %117 = bitcast %union.anon.0* %116 to %struct.mesg_hdr**, !dbg !12491
  %118 = load %struct.mesg_hdr*, %struct.mesg_hdr** %117, align 8, !dbg !12491
  %119 = getelementptr inbounds %struct.mesg_hdr, %struct.mesg_hdr* %118, i32 0, i32 1, !dbg !12492
  %120 = load i16, i16* %119, align 2, !dbg !12493
  %121 = and i16 %120, -3841, !dbg !12493
  %122 = or i16 %121, 1024, !dbg !12493
  store i16 %122, i16* %119, align 2, !dbg !12493
  %123 = load %struct.context*, %struct.context** %cont, align 8, !dbg !12494
  %124 = call i32 @udp_response_finish(%struct.context* %123), !dbg !12495
  store i32 %124, i32* %1, align 4, !dbg !12496
  br label %125, !dbg !12496

; <label>:125                                     ; preds = %103, %92, %81, %80, %10
  %126 = load i32, i32* %1, align 4, !dbg !12497
  ret i32 %126, !dbg !12497
}

; Function Attrs: nounwind uwtable
define i32 @udp_response_recursive_process(%struct.context* %cont) #0 !dbg !1591 {
  %1 = alloca i32, align 4
  %2 = alloca %struct.context*, align 8
  store %struct.context* %cont, %struct.context** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.context** %2, metadata !12498, metadata !2279), !dbg !12499
  %3 = load %struct.context*, %struct.context** %2, align 8, !dbg !12500
  %4 = call i32 @recursive_process(%struct.context* %3), !dbg !12501
  switch i32 %4, label %9 [
    i32 0, label %5
    i32 1, label %6
  ], !dbg !12502

; <label>:5                                       ; preds = %0
  store i32 0, i32* %1, align 4, !dbg !12503
  br label %20, !dbg !12503

; <label>:6                                       ; preds = %0
  %7 = load %struct.context*, %struct.context** %2, align 8, !dbg !12505
  %8 = call i32 @udp_response_finish(%struct.context* %7), !dbg !12506
  store i32 %8, i32* %1, align 4, !dbg !12507
  br label %20, !dbg !12507

; <label>:9                                       ; preds = %0
  %10 = load %struct.context*, %struct.context** %2, align 8, !dbg !12508
  %11 = getelementptr inbounds %struct.context, %struct.context* %10, i32 0, i32 16, !dbg !12509
  %12 = bitcast %union.anon.0* %11 to %struct.mesg_hdr**, !dbg !12510
  %13 = load %struct.mesg_hdr*, %struct.mesg_hdr** %12, align 8, !dbg !12510
  %14 = getelementptr inbounds %struct.mesg_hdr, %struct.mesg_hdr* %13, i32 0, i32 1, !dbg !12511
  %15 = load i16, i16* %14, align 2, !dbg !12512
  %16 = and i16 %15, -3841, !dbg !12512
  %17 = or i16 %16, 512, !dbg !12512
  store i16 %17, i16* %14, align 2, !dbg !12512
  %18 = load %struct.context*, %struct.context** %2, align 8, !dbg !12513
  %19 = call i32 @udp_response_finish(%struct.context* %18), !dbg !12514
  store i32 %19, i32* %1, align 4, !dbg !12515
  br label %20, !dbg !12515

; <label>:20                                      ; preds = %9, %6, %5
  %21 = load i32, i32* %1, align 4, !dbg !12516
  ret i32 %21, !dbg !12516
}

; Function Attrs: nounwind uwtable
define i32 @udp_response_finish(%struct.context* %cont) #0 !dbg !1670 {
  %1 = alloca i32, align 4
  %2 = alloca %struct.context*, align 8
  %fn = alloca i8*, align 8
  %len = alloca i32, align 4
  store %struct.context* %cont, %struct.context** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.context** %2, metadata !12517, metadata !2279), !dbg !12518
  call void @llvm.dbg.declare(metadata i8** %fn, metadata !12519, metadata !2279), !dbg !12520
  store i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.5.411, i32 0, i32 0), i8** %fn, align 8, !dbg !12520
  call void @llvm.dbg.declare(metadata i32* %len, metadata !12521, metadata !2279), !dbg !12522
  %3 = load i8*, i8** %fn, align 8, !dbg !12523
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1.409, i32 0, i32 0), i8* %3), !dbg !12524
  %4 = load %struct.context*, %struct.context** %2, align 8, !dbg !12525
  %5 = call i32 @assemble_response(%struct.context* %4), !dbg !12526
  %6 = load %struct.context*, %struct.context** %2, align 8, !dbg !12527
  %7 = getelementptr inbounds %struct.context, %struct.context* %6, i32 0, i32 17, !dbg !12529
  %8 = load i32, i32* %7, align 8, !dbg !12529
  %9 = icmp slt i32 %8, 0, !dbg !12530
  br i1 %9, label %15, label %10, !dbg !12531

; <label>:10                                      ; preds = %0
  %11 = load %struct.context*, %struct.context** %2, align 8, !dbg !12532
  %12 = getelementptr inbounds %struct.context, %struct.context* %11, i32 0, i32 17, !dbg !12534
  %13 = load i32, i32* %12, align 8, !dbg !12534
  %14 = icmp sgt i32 %13, 512, !dbg !12535
  br i1 %14, label %15, label %23, !dbg !12536

; <label>:15                                      ; preds = %10, %0
  %16 = load %struct.context*, %struct.context** %2, align 8, !dbg !12537
  %17 = getelementptr inbounds %struct.context, %struct.context* %16, i32 0, i32 15, !dbg !12539
  %18 = load %struct.generic_list*, %struct.generic_list** %17, align 8, !dbg !12539
  call void @list_destroy(%struct.generic_list* %18, void (i8*)* @rrset_freev), !dbg !12540
  %19 = load %struct.context*, %struct.context** %2, align 8, !dbg !12541
  %20 = getelementptr inbounds %struct.context, %struct.context* %19, i32 0, i32 15, !dbg !12542
  store %struct.generic_list* null, %struct.generic_list** %20, align 8, !dbg !12543
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.6.412, i32 0, i32 0)), !dbg !12544
  %21 = load %struct.context*, %struct.context** %2, align 8, !dbg !12545
  %22 = call i32 @assemble_response(%struct.context* %21), !dbg !12546
  br label %23, !dbg !12547

; <label>:23                                      ; preds = %15, %10
  %24 = load %struct.context*, %struct.context** %2, align 8, !dbg !12548
  %25 = getelementptr inbounds %struct.context, %struct.context* %24, i32 0, i32 17, !dbg !12550
  %26 = load i32, i32* %25, align 8, !dbg !12550
  %27 = icmp slt i32 %26, 0, !dbg !12551
  br i1 %27, label %33, label %28, !dbg !12552

; <label>:28                                      ; preds = %23
  %29 = load %struct.context*, %struct.context** %2, align 8, !dbg !12553
  %30 = getelementptr inbounds %struct.context, %struct.context* %29, i32 0, i32 17, !dbg !12555
  %31 = load i32, i32* %30, align 8, !dbg !12555
  %32 = icmp sgt i32 %31, 512, !dbg !12556
  br i1 %32, label %33, label %41, !dbg !12557

; <label>:33                                      ; preds = %28, %23
  %34 = load %struct.context*, %struct.context** %2, align 8, !dbg !12558
  %35 = getelementptr inbounds %struct.context, %struct.context* %34, i32 0, i32 14, !dbg !12560
  %36 = load %struct.generic_list*, %struct.generic_list** %35, align 8, !dbg !12560
  call void @list_destroy(%struct.generic_list* %36, void (i8*)* @rrset_freev), !dbg !12561
  %37 = load %struct.context*, %struct.context** %2, align 8, !dbg !12562
  %38 = getelementptr inbounds %struct.context, %struct.context* %37, i32 0, i32 14, !dbg !12563
  store %struct.generic_list* null, %struct.generic_list** %38, align 8, !dbg !12564
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.7.413, i32 0, i32 0)), !dbg !12565
  %39 = load %struct.context*, %struct.context** %2, align 8, !dbg !12566
  %40 = call i32 @assemble_response(%struct.context* %39), !dbg !12567
  br label %41, !dbg !12568

; <label>:41                                      ; preds = %33, %28
  %42 = load %struct.context*, %struct.context** %2, align 8, !dbg !12569
  %43 = getelementptr inbounds %struct.context, %struct.context* %42, i32 0, i32 17, !dbg !12571
  %44 = load i32, i32* %43, align 8, !dbg !12571
  %45 = icmp slt i32 %44, 0, !dbg !12572
  br i1 %45, label %51, label %46, !dbg !12573

; <label>:46                                      ; preds = %41
  %47 = load %struct.context*, %struct.context** %2, align 8, !dbg !12574
  %48 = getelementptr inbounds %struct.context, %struct.context* %47, i32 0, i32 17, !dbg !12576
  %49 = load i32, i32* %48, align 8, !dbg !12576
  %50 = icmp sgt i32 %49, 512, !dbg !12577
  br i1 %50, label %51, label %67, !dbg !12578

; <label>:51                                      ; preds = %46, %41
  %52 = load %struct.context*, %struct.context** %2, align 8, !dbg !12579
  %53 = getelementptr inbounds %struct.context, %struct.context* %52, i32 0, i32 13, !dbg !12581
  %54 = load %struct.generic_list*, %struct.generic_list** %53, align 8, !dbg !12581
  call void @list_destroy(%struct.generic_list* %54, void (i8*)* @rrset_freev), !dbg !12582
  %55 = load %struct.context*, %struct.context** %2, align 8, !dbg !12583
  %56 = getelementptr inbounds %struct.context, %struct.context* %55, i32 0, i32 13, !dbg !12584
  store %struct.generic_list* null, %struct.generic_list** %56, align 8, !dbg !12585
  %57 = load %struct.context*, %struct.context** %2, align 8, !dbg !12586
  %58 = call i32 @assemble_response(%struct.context* %57), !dbg !12587
  %59 = load %struct.context*, %struct.context** %2, align 8, !dbg !12588
  %60 = getelementptr inbounds %struct.context, %struct.context* %59, i32 0, i32 16, !dbg !12589
  %61 = bitcast %union.anon.0* %60 to %struct.mesg_hdr**, !dbg !12590
  %62 = load %struct.mesg_hdr*, %struct.mesg_hdr** %61, align 8, !dbg !12590
  %63 = getelementptr inbounds %struct.mesg_hdr, %struct.mesg_hdr* %62, i32 0, i32 1, !dbg !12591
  %64 = load i16, i16* %63, align 2, !dbg !12592
  %65 = and i16 %64, -3, !dbg !12592
  %66 = or i16 %65, 2, !dbg !12592
  store i16 %66, i16* %63, align 2, !dbg !12592
  call void (i32, i8*, ...) @syslog(i32 4, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.8.414, i32 0, i32 0)), !dbg !12593
  br label %67, !dbg !12594

; <label>:67                                      ; preds = %51, %46
  %68 = load %struct.context*, %struct.context** %2, align 8, !dbg !12595
  %69 = getelementptr inbounds %struct.context, %struct.context* %68, i32 0, i32 17, !dbg !12597
  %70 = load i32, i32* %69, align 8, !dbg !12597
  %71 = icmp slt i32 %70, 0, !dbg !12598
  br i1 %71, label %77, label %72, !dbg !12599

; <label>:72                                      ; preds = %67
  %73 = load %struct.context*, %struct.context** %2, align 8, !dbg !12600
  %74 = getelementptr inbounds %struct.context, %struct.context* %73, i32 0, i32 17, !dbg !12602
  %75 = load i32, i32* %74, align 8, !dbg !12602
  %76 = icmp sgt i32 %75, 512, !dbg !12603
  br i1 %76, label %77, label %80, !dbg !12604

; <label>:77                                      ; preds = %72, %67
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.9.415, i32 0, i32 0)), !dbg !12605
  %78 = load %struct.context*, %struct.context** %2, align 8, !dbg !12607
  %79 = call i32 @response_abort(%struct.context* %78, i32 1), !dbg !12608
  store i32 %79, i32* %1, align 4, !dbg !12609
  br label %106, !dbg !12609

; <label>:80                                      ; preds = %72
  %81 = load %struct.context*, %struct.context** %2, align 8, !dbg !12610
  %82 = getelementptr inbounds %struct.context, %struct.context* %81, i32 0, i32 19, !dbg !12611
  %83 = load %struct.nia*, %struct.nia** %82, align 8, !dbg !12611
  %84 = load %struct.context*, %struct.context** %2, align 8, !dbg !12612
  %85 = getelementptr inbounds %struct.context, %struct.context* %84, i32 0, i32 16, !dbg !12613
  %86 = bitcast %union.anon.0* %85 to i8**, !dbg !12614
  %87 = load i8*, i8** %86, align 8, !dbg !12614
  %88 = load %struct.context*, %struct.context** %2, align 8, !dbg !12615
  %89 = getelementptr inbounds %struct.context, %struct.context* %88, i32 0, i32 17, !dbg !12616
  %90 = load i32, i32* %89, align 8, !dbg !12616
  %91 = load %struct.context*, %struct.context** %2, align 8, !dbg !12617
  %92 = getelementptr inbounds %struct.context, %struct.context* %91, i32 0, i32 22, !dbg !12618
  %93 = load %struct.sockaddr*, %struct.sockaddr** %92, align 8, !dbg !12618
  %94 = call i32 @net_mesg_send(%struct.nia* %83, i8* %87, i32 %90, %struct.sockaddr* %93), !dbg !12619
  store i32 %94, i32* %len, align 4, !dbg !12620
  %95 = load i32, i32* %len, align 4, !dbg !12621
  %96 = load %struct.context*, %struct.context** %2, align 8, !dbg !12623
  %97 = getelementptr inbounds %struct.context, %struct.context* %96, i32 0, i32 17, !dbg !12624
  %98 = load i32, i32* %97, align 8, !dbg !12624
  %99 = icmp slt i32 %95, %98, !dbg !12625
  br i1 %99, label %100, label %103, !dbg !12626

; <label>:100                                     ; preds = %80
  call void (i32, i8*, ...) @syslog(i32 5, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.10.416, i32 0, i32 0)), !dbg !12627
  %101 = load %struct.context*, %struct.context** %2, align 8, !dbg !12629
  %102 = call i32 @response_abort(%struct.context* %101, i32 -1), !dbg !12630
  store i32 %102, i32* %1, align 4, !dbg !12631
  br label %106, !dbg !12631

; <label>:103                                     ; preds = %80
  %104 = load %struct.context*, %struct.context** %2, align 8, !dbg !12632
  %105 = call i8* bitcast (i8* (%struct.context.19*)* @context_destroy to i8* (%struct.context*)*)(%struct.context* %104), !dbg !12633
  store i32 0, i32* %1, align 4, !dbg !12634
  br label %106, !dbg !12634

; <label>:106                                     ; preds = %103, %100, %77
  %107 = load i32, i32* %1, align 4, !dbg !12635
  ret i32 %107, !dbg !12635
}

; Function Attrs: nounwind uwtable
define i32 @udp_response_recursive_retry(%struct.context* %cont) #0 !dbg !1669 {
  %1 = alloca %struct.context*, align 8
  store %struct.context* %cont, %struct.context** %1, align 8
  call void @llvm.dbg.declare(metadata %struct.context** %1, metadata !12636, metadata !2279), !dbg !12637
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.4.417, i32 0, i32 0)), !dbg !12638
  %2 = load %struct.context*, %struct.context** %1, align 8, !dbg !12639
  %3 = call i32 @response_abort(%struct.context* %2, i32 0), !dbg !12640
  ret i32 %3, !dbg !12641
}

; Function Attrs: nounwind uwtable
define internal void @ev_signal_initiator_generic(i32 %sig) #0 !dbg !1684 {
  %1 = alloca i32, align 4
  %i = alloca i32, align 4
  %sd_tmp = alloca %struct.ev_sig_data*, align 8
  store i32 %sig, i32* %1, align 4
  call void @llvm.dbg.declare(metadata i32* %1, metadata !12642, metadata !2279), !dbg !12643
  call void @llvm.dbg.declare(metadata i32* %i, metadata !12644, metadata !2279), !dbg !12645
  call void @llvm.dbg.declare(metadata %struct.ev_sig_data** %sd_tmp, metadata !12646, metadata !2279), !dbg !12647
  %2 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 8), align 4, !dbg !12648
  %3 = icmp sgt i32 %2, 2, !dbg !12650
  br i1 %3, label %4, label %5, !dbg !12651

; <label>:4                                       ; preds = %0
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1.419, i32 0, i32 0)), !dbg !12652
  br label %5, !dbg !12654

; <label>:5                                       ; preds = %4, %0
  %6 = load %struct.qset*, %struct.qset** @Ev_signal_queue, align 8, !dbg !12655
  %7 = icmp ne %struct.qset* %6, null, !dbg !12655
  br i1 %7, label %9, label %8, !dbg !12657

; <label>:8                                       ; preds = %5
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.2.420, i32 0, i32 0)), !dbg !12658
  br label %52, !dbg !12660

; <label>:9                                       ; preds = %5
  store i32 0, i32* %i, align 4, !dbg !12661
  br label %10, !dbg !12663

; <label>:10                                      ; preds = %28, %9
  %11 = load i32, i32* %i, align 4, !dbg !12664
  %12 = sext i32 %11 to i64, !dbg !12667
  %13 = getelementptr inbounds [6 x %struct.anon.124], [6 x %struct.anon.124]* @Ev_matrix, i64 0, i64 %12, !dbg !12667
  %14 = getelementptr inbounds %struct.anon.124, %struct.anon.124* %13, i32 0, i32 0, !dbg !12668
  %15 = load i32, i32* %14, align 8, !dbg !12668
  %16 = icmp sgt i32 %15, 0, !dbg !12669
  br i1 %16, label %17, label %25, !dbg !12670

; <label>:17                                      ; preds = %10
  %18 = load i32, i32* %i, align 4, !dbg !12671
  %19 = sext i32 %18 to i64, !dbg !12673
  %20 = getelementptr inbounds [6 x %struct.anon.124], [6 x %struct.anon.124]* @Ev_matrix, i64 0, i64 %19, !dbg !12673
  %21 = getelementptr inbounds %struct.anon.124, %struct.anon.124* %20, i32 0, i32 0, !dbg !12674
  %22 = load i32, i32* %21, align 8, !dbg !12674
  %23 = load i32, i32* %1, align 4, !dbg !12675
  %24 = icmp ne i32 %22, %23, !dbg !12676
  br label %25

; <label>:25                                      ; preds = %17, %10
  %26 = phi i1 [ false, %10 ], [ %24, %17 ]
  br i1 %26, label %27, label %31, !dbg !12677

; <label>:27                                      ; preds = %25
  br label %28, !dbg !12679

; <label>:28                                      ; preds = %27
  %29 = load i32, i32* %i, align 4, !dbg !12681
  %30 = add nsw i32 %29, 1, !dbg !12681
  store i32 %30, i32* %i, align 4, !dbg !12681
  br label %10, !dbg !12683

; <label>:31                                      ; preds = %25
  %32 = call noalias i8* @malloc(i64 8) #10, !dbg !12684
  %33 = bitcast i8* %32 to %struct.ev_sig_data*, !dbg !12684
  store %struct.ev_sig_data* %33, %struct.ev_sig_data** %sd_tmp, align 8, !dbg !12685
  %34 = load %struct.ev_sig_data*, %struct.ev_sig_data** %sd_tmp, align 8, !dbg !12686
  %35 = icmp ne %struct.ev_sig_data* %34, null, !dbg !12686
  br i1 %35, label %37, label %36, !dbg !12688

; <label>:36                                      ; preds = %31
  call void (i32, i8*, ...) @syslog(i32 4, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.3.421, i32 0, i32 0)), !dbg !12689
  br label %52, !dbg !12691

; <label>:37                                      ; preds = %31
  %38 = load i32, i32* %i, align 4, !dbg !12692
  %39 = sext i32 %38 to i64, !dbg !12693
  %40 = getelementptr inbounds [6 x %struct.anon.124], [6 x %struct.anon.124]* @Ev_matrix, i64 0, i64 %39, !dbg !12693
  %41 = getelementptr inbounds %struct.anon.124, %struct.anon.124* %40, i32 0, i32 2, !dbg !12694
  %42 = load void ()*, void ()** %41, align 8, !dbg !12694
  %43 = load %struct.ev_sig_data*, %struct.ev_sig_data** %sd_tmp, align 8, !dbg !12695
  %44 = getelementptr inbounds %struct.ev_sig_data, %struct.ev_sig_data* %43, i32 0, i32 0, !dbg !12696
  store void ()* %42, void ()** %44, align 8, !dbg !12697
  %45 = load %struct.qset*, %struct.qset** @Ev_signal_queue, align 8, !dbg !12698
  %46 = load %struct.ev_sig_data*, %struct.ev_sig_data** %sd_tmp, align 8, !dbg !12700
  %47 = bitcast %struct.ev_sig_data* %46 to i8*, !dbg !12701
  %48 = call i32 @enqueue(%struct.qset* %45, i8* %47), !dbg !12702
  %49 = icmp slt i32 %48, 0, !dbg !12703
  br i1 %49, label %50, label %51, !dbg !12704

; <label>:50                                      ; preds = %37
  call void (i32, i8*, ...) @syslog(i32 4, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.4.422, i32 0, i32 0)), !dbg !12705
  br label %51, !dbg !12705

; <label>:51                                      ; preds = %50, %37
  br label %52, !dbg !12706

; <label>:52                                      ; preds = %51, %36, %8
  ret void, !dbg !12707
}

; Function Attrs: nounwind uwtable
define internal void @ev_handler_cleanup() #0 !dbg !1687 {
  %1 = call i32 @totd_exit(i32 0), !dbg !12708
  ret void, !dbg !12709
}

; Function Attrs: nounwind uwtable
define internal void @ev_handler_sigusr1() #0 !dbg !1685 {
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.5.423, i32 0, i32 0)), !dbg !12710
  ret void, !dbg !12711
}

; Function Attrs: nounwind uwtable
define internal void @ev_handler_sigusr2() #0 !dbg !1686 {
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.6.424, i32 0, i32 0)), !dbg !12712
  ret void, !dbg !12713
}

; Function Attrs: nounwind uwtable
define i32 @ev_signal_init() #0 !dbg !1681 {
  %1 = alloca i32, align 4
  %i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i, metadata !12714, metadata !2279), !dbg !12715
  store i32 0, i32* %i, align 4, !dbg !12716
  br label %2, !dbg !12718

; <label>:2                                       ; preds = %21, %0
  %3 = load i32, i32* %i, align 4, !dbg !12719
  %4 = sext i32 %3 to i64, !dbg !12722
  %5 = getelementptr inbounds [6 x %struct.anon.124], [6 x %struct.anon.124]* @Ev_matrix, i64 0, i64 %4, !dbg !12722
  %6 = getelementptr inbounds %struct.anon.124, %struct.anon.124* %5, i32 0, i32 0, !dbg !12723
  %7 = load i32, i32* %6, align 8, !dbg !12723
  %8 = icmp sgt i32 %7, 0, !dbg !12724
  br i1 %8, label %9, label %24, !dbg !12725

; <label>:9                                       ; preds = %2
  %10 = load i32, i32* %i, align 4, !dbg !12726
  %11 = sext i32 %10 to i64, !dbg !12727
  %12 = getelementptr inbounds [6 x %struct.anon.124], [6 x %struct.anon.124]* @Ev_matrix, i64 0, i64 %11, !dbg !12727
  %13 = getelementptr inbounds %struct.anon.124, %struct.anon.124* %12, i32 0, i32 0, !dbg !12728
  %14 = load i32, i32* %13, align 8, !dbg !12728
  %15 = load i32, i32* %i, align 4, !dbg !12729
  %16 = sext i32 %15 to i64, !dbg !12730
  %17 = getelementptr inbounds [6 x %struct.anon.124], [6 x %struct.anon.124]* @Ev_matrix, i64 0, i64 %16, !dbg !12730
  %18 = getelementptr inbounds %struct.anon.124, %struct.anon.124* %17, i32 0, i32 1, !dbg !12731
  %19 = load void (i32)*, void (i32)** %18, align 8, !dbg !12731
  %20 = call void (i32)* @signal(i32 %14, void (i32)* %19) #10, !dbg !12732
  br label %21, !dbg !12732

; <label>:21                                      ; preds = %9
  %22 = load i32, i32* %i, align 4, !dbg !12733
  %23 = add nsw i32 %22, 1, !dbg !12733
  store i32 %23, i32* %i, align 4, !dbg !12733
  br label %2, !dbg !12735

; <label>:24                                      ; preds = %2
  %25 = call %struct.qset* @queue_create(), !dbg !12736
  store %struct.qset* %25, %struct.qset** @Ev_signal_queue, align 8, !dbg !12737
  %26 = load %struct.qset*, %struct.qset** @Ev_signal_queue, align 8, !dbg !12738
  %27 = icmp ne %struct.qset* %26, null, !dbg !12738
  br i1 %27, label %29, label %28, !dbg !12740

; <label>:28                                      ; preds = %24
  store i32 -1, i32* %1, align 4, !dbg !12741
  br label %30, !dbg !12741

; <label>:29                                      ; preds = %24
  store i32 0, i32* %1, align 4, !dbg !12742
  br label %30, !dbg !12742

; <label>:30                                      ; preds = %29, %28
  %31 = load i32, i32* %1, align 4, !dbg !12743
  ret i32 %31, !dbg !12743
}

; Function Attrs: nounwind
declare void (i32)* @signal(i32, void (i32)*) #5

; Function Attrs: nounwind uwtable
define void @ev_signal_process() #0 !dbg !1682 {
  %sd_tmp = alloca %struct.ev_sig_data*, align 8
  call void @llvm.dbg.declare(metadata %struct.ev_sig_data** %sd_tmp, metadata !12744, metadata !2279), !dbg !12745
  %1 = load %struct.qset*, %struct.qset** @Ev_signal_queue, align 8, !dbg !12746
  %2 = icmp ne %struct.qset* %1, null, !dbg !12746
  br i1 %2, label %3, label %16, !dbg !12748

; <label>:3                                       ; preds = %0
  br label %4, !dbg !12749

; <label>:4                                       ; preds = %9, %3
  %5 = load %struct.qset*, %struct.qset** @Ev_signal_queue, align 8, !dbg !12750
  %6 = call i8* @dequeue(%struct.qset* %5), !dbg !12752
  %7 = bitcast i8* %6 to %struct.ev_sig_data*, !dbg !12753
  store %struct.ev_sig_data* %7, %struct.ev_sig_data** %sd_tmp, align 8, !dbg !12754
  %8 = icmp ne %struct.ev_sig_data* %7, null, !dbg !12755
  br i1 %8, label %9, label %15, !dbg !12755

; <label>:9                                       ; preds = %4
  %10 = load %struct.ev_sig_data*, %struct.ev_sig_data** %sd_tmp, align 8, !dbg !12756
  %11 = getelementptr inbounds %struct.ev_sig_data, %struct.ev_sig_data* %10, i32 0, i32 0, !dbg !12758
  %12 = load void ()*, void ()** %11, align 8, !dbg !12758
  call void %12(), !dbg !12759
  %13 = load %struct.ev_sig_data*, %struct.ev_sig_data** %sd_tmp, align 8, !dbg !12760
  %14 = bitcast %struct.ev_sig_data* %13 to i8*, !dbg !12760
  call void @free(i8* %14) #10, !dbg !12761
  br label %4, !dbg !12762

; <label>:15                                      ; preds = %4
  br label %17, !dbg !12764

; <label>:16                                      ; preds = %0
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.425, i32 0, i32 0)), !dbg !12766
  br label %17

; <label>:17                                      ; preds = %16, %15
  ret void, !dbg !12767
}

; Function Attrs: nounwind uwtable
define void @ev_signal_finish() #0 !dbg !1683 {
  %1 = load %struct.qset*, %struct.qset** @Ev_signal_queue, align 8, !dbg !12768
  call void @queue_destroy(%struct.qset* %1, void (i8*)* @free), !dbg !12769
  store %struct.qset* null, %struct.qset** @Ev_signal_queue, align 8, !dbg !12770
  ret void, !dbg !12771
}

; Function Attrs: nounwind uwtable
define i32 @ev_udp_in_eq(i8* %arg1, i8* %arg2) #0 !dbg !1810 {
  %1 = alloca i32, align 4
  %2 = alloca i8*, align 8
  %3 = alloca i8*, align 8
  %e1 = alloca %struct.ev_udp_in_data*, align 8
  %e2 = alloca %struct.ev_udp_in_data*, align 8
  %len1 = alloca i32, align 4
  %len2 = alloca i32, align 4
  store i8* %arg1, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !12772, metadata !2279), !dbg !12773
  store i8* %arg2, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !12774, metadata !2279), !dbg !12775
  call void @llvm.dbg.declare(metadata %struct.ev_udp_in_data** %e1, metadata !12776, metadata !2279), !dbg !12777
  call void @llvm.dbg.declare(metadata %struct.ev_udp_in_data** %e2, metadata !12778, metadata !2279), !dbg !12779
  call void @llvm.dbg.declare(metadata i32* %len1, metadata !12780, metadata !2279), !dbg !12781
  call void @llvm.dbg.declare(metadata i32* %len2, metadata !12782, metadata !2279), !dbg !12783
  %4 = load i8*, i8** %2, align 8, !dbg !12784
  %5 = bitcast i8* %4 to %struct.ev_udp_in_data*, !dbg !12785
  store %struct.ev_udp_in_data* %5, %struct.ev_udp_in_data** %e1, align 8, !dbg !12786
  %6 = load i8*, i8** %3, align 8, !dbg !12787
  %7 = bitcast i8* %6 to %struct.ev_udp_in_data*, !dbg !12788
  store %struct.ev_udp_in_data* %7, %struct.ev_udp_in_data** %e2, align 8, !dbg !12789
  %8 = load %struct.ev_udp_in_data*, %struct.ev_udp_in_data** %e1, align 8, !dbg !12790
  %9 = icmp ne %struct.ev_udp_in_data* %8, null, !dbg !12790
  br i1 %9, label %10, label %23, !dbg !12792

; <label>:10                                      ; preds = %0
  %11 = load %struct.ev_udp_in_data*, %struct.ev_udp_in_data** %e2, align 8, !dbg !12793
  %12 = icmp ne %struct.ev_udp_in_data* %11, null, !dbg !12793
  br i1 %12, label %13, label %23, !dbg !12795

; <label>:13                                      ; preds = %10
  %14 = load %struct.ev_udp_in_data*, %struct.ev_udp_in_data** %e1, align 8, !dbg !12796
  %15 = getelementptr inbounds %struct.ev_udp_in_data, %struct.ev_udp_in_data* %14, i32 0, i32 1, !dbg !12798
  %16 = load %struct.sockaddr*, %struct.sockaddr** %15, align 8, !dbg !12798
  %17 = icmp ne %struct.sockaddr* %16, null, !dbg !12796
  br i1 %17, label %18, label %23, !dbg !12799

; <label>:18                                      ; preds = %13
  %19 = load %struct.ev_udp_in_data*, %struct.ev_udp_in_data** %e2, align 8, !dbg !12800
  %20 = getelementptr inbounds %struct.ev_udp_in_data, %struct.ev_udp_in_data* %19, i32 0, i32 1, !dbg !12802
  %21 = load %struct.sockaddr*, %struct.sockaddr** %20, align 8, !dbg !12802
  %22 = icmp ne %struct.sockaddr* %21, null, !dbg !12800
  br i1 %22, label %24, label %23, !dbg !12803

; <label>:23                                      ; preds = %18, %13, %10, %0
  store i32 -1, i32* %1, align 4, !dbg !12804
  br label %93, !dbg !12804

; <label>:24                                      ; preds = %18
  %25 = load %struct.ev_udp_in_data*, %struct.ev_udp_in_data** %e1, align 8, !dbg !12805
  %26 = getelementptr inbounds %struct.ev_udp_in_data, %struct.ev_udp_in_data* %25, i32 0, i32 1, !dbg !12805
  %27 = load %struct.sockaddr*, %struct.sockaddr** %26, align 8, !dbg !12805
  %28 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %27, i32 0, i32 0, !dbg !12805
  %29 = load i16, i16* %28, align 2, !dbg !12805
  %30 = zext i16 %29 to i32, !dbg !12805
  %31 = icmp eq i32 %30, 10, !dbg !12805
  br i1 %31, label %32, label %33, !dbg !12805

; <label>:32                                      ; preds = %24
  br label %42, !dbg !12806

; <label>:33                                      ; preds = %24
  %34 = load %struct.ev_udp_in_data*, %struct.ev_udp_in_data** %e1, align 8, !dbg !12808
  %35 = getelementptr inbounds %struct.ev_udp_in_data, %struct.ev_udp_in_data* %34, i32 0, i32 1, !dbg !12808
  %36 = load %struct.sockaddr*, %struct.sockaddr** %35, align 8, !dbg !12808
  %37 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %36, i32 0, i32 0, !dbg !12808
  %38 = load i16, i16* %37, align 2, !dbg !12808
  %39 = zext i16 %38 to i32, !dbg !12808
  %40 = icmp eq i32 %39, 2, !dbg !12808
  %41 = select i1 %40, i64 16, i64 16, !dbg !12808
  br label %42, !dbg !12808

; <label>:42                                      ; preds = %33, %32
  %43 = phi i64 [ 28, %32 ], [ %41, %33 ], !dbg !12810
  %44 = trunc i64 %43 to i32, !dbg !12810
  store i32 %44, i32* %len1, align 4, !dbg !12812
  %45 = load %struct.ev_udp_in_data*, %struct.ev_udp_in_data** %e2, align 8, !dbg !12813
  %46 = getelementptr inbounds %struct.ev_udp_in_data, %struct.ev_udp_in_data* %45, i32 0, i32 1, !dbg !12813
  %47 = load %struct.sockaddr*, %struct.sockaddr** %46, align 8, !dbg !12813
  %48 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %47, i32 0, i32 0, !dbg !12813
  %49 = load i16, i16* %48, align 2, !dbg !12813
  %50 = zext i16 %49 to i32, !dbg !12813
  %51 = icmp eq i32 %50, 10, !dbg !12813
  br i1 %51, label %52, label %53, !dbg !12813

; <label>:52                                      ; preds = %42
  br label %62, !dbg !12814

; <label>:53                                      ; preds = %42
  %54 = load %struct.ev_udp_in_data*, %struct.ev_udp_in_data** %e2, align 8, !dbg !12815
  %55 = getelementptr inbounds %struct.ev_udp_in_data, %struct.ev_udp_in_data* %54, i32 0, i32 1, !dbg !12815
  %56 = load %struct.sockaddr*, %struct.sockaddr** %55, align 8, !dbg !12815
  %57 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %56, i32 0, i32 0, !dbg !12815
  %58 = load i16, i16* %57, align 2, !dbg !12815
  %59 = zext i16 %58 to i32, !dbg !12815
  %60 = icmp eq i32 %59, 2, !dbg !12815
  %61 = select i1 %60, i64 16, i64 16, !dbg !12815
  br label %62, !dbg !12815

; <label>:62                                      ; preds = %53, %52
  %63 = phi i64 [ 28, %52 ], [ %61, %53 ], !dbg !12816
  %64 = trunc i64 %63 to i32, !dbg !12816
  store i32 %64, i32* %len2, align 4, !dbg !12817
  %65 = load %struct.ev_udp_in_data*, %struct.ev_udp_in_data** %e1, align 8, !dbg !12818
  %66 = getelementptr inbounds %struct.ev_udp_in_data, %struct.ev_udp_in_data* %65, i32 0, i32 2, !dbg !12820
  %67 = load i16, i16* %66, align 8, !dbg !12820
  %68 = zext i16 %67 to i32, !dbg !12818
  %69 = load %struct.ev_udp_in_data*, %struct.ev_udp_in_data** %e2, align 8, !dbg !12821
  %70 = getelementptr inbounds %struct.ev_udp_in_data, %struct.ev_udp_in_data* %69, i32 0, i32 2, !dbg !12822
  %71 = load i16, i16* %70, align 8, !dbg !12822
  %72 = zext i16 %71 to i32, !dbg !12821
  %73 = icmp eq i32 %68, %72, !dbg !12823
  br i1 %73, label %74, label %92, !dbg !12824

; <label>:74                                      ; preds = %62
  %75 = load i32, i32* %len1, align 4, !dbg !12825
  %76 = load i32, i32* %len2, align 4, !dbg !12827
  %77 = icmp eq i32 %75, %76, !dbg !12828
  br i1 %77, label %78, label %92, !dbg !12829

; <label>:78                                      ; preds = %74
  %79 = load %struct.ev_udp_in_data*, %struct.ev_udp_in_data** %e1, align 8, !dbg !12830
  %80 = getelementptr inbounds %struct.ev_udp_in_data, %struct.ev_udp_in_data* %79, i32 0, i32 1, !dbg !12831
  %81 = load %struct.sockaddr*, %struct.sockaddr** %80, align 8, !dbg !12831
  %82 = bitcast %struct.sockaddr* %81 to i8*, !dbg !12830
  %83 = load %struct.ev_udp_in_data*, %struct.ev_udp_in_data** %e2, align 8, !dbg !12832
  %84 = getelementptr inbounds %struct.ev_udp_in_data, %struct.ev_udp_in_data* %83, i32 0, i32 1, !dbg !12833
  %85 = load %struct.sockaddr*, %struct.sockaddr** %84, align 8, !dbg !12833
  %86 = bitcast %struct.sockaddr* %85 to i8*, !dbg !12832
  %87 = load i32, i32* %len1, align 4, !dbg !12834
  %88 = sext i32 %87 to i64, !dbg !12834
  %89 = call i32 @memcmp(i8* %82, i8* %86, i64 %88) #9, !dbg !12835
  %90 = icmp ne i32 %89, 0, !dbg !12835
  br i1 %90, label %92, label %91, !dbg !12836

; <label>:91                                      ; preds = %78
  store i32 0, i32* %1, align 4, !dbg !12837
  br label %93, !dbg !12837

; <label>:92                                      ; preds = %78, %74, %62
  store i32 1, i32* %1, align 4, !dbg !12838
  br label %93, !dbg !12838

; <label>:93                                      ; preds = %92, %91, %23
  %94 = load i32, i32* %1, align 4, !dbg !12839
  ret i32 %94, !dbg !12839
}

; Function Attrs: nounwind uwtable
define void @ev_udp_in_data_free(%struct.ev_udp_in_data* %euid_p) #0 !dbg !1811 {
  %1 = alloca %struct.ev_udp_in_data*, align 8
  store %struct.ev_udp_in_data* %euid_p, %struct.ev_udp_in_data** %1, align 8
  call void @llvm.dbg.declare(metadata %struct.ev_udp_in_data** %1, metadata !12840, metadata !2279), !dbg !12841
  %2 = load %struct.ev_udp_in_data*, %struct.ev_udp_in_data** %1, align 8, !dbg !12842
  %3 = icmp ne %struct.ev_udp_in_data* %2, null, !dbg !12842
  br i1 %3, label %4, label %17, !dbg !12844

; <label>:4                                       ; preds = %0
  %5 = load %struct.ev_udp_in_data*, %struct.ev_udp_in_data** %1, align 8, !dbg !12845
  %6 = getelementptr inbounds %struct.ev_udp_in_data, %struct.ev_udp_in_data* %5, i32 0, i32 1, !dbg !12848
  %7 = load %struct.sockaddr*, %struct.sockaddr** %6, align 8, !dbg !12848
  %8 = icmp ne %struct.sockaddr* %7, null, !dbg !12845
  br i1 %8, label %9, label %14, !dbg !12849

; <label>:9                                       ; preds = %4
  %10 = load %struct.ev_udp_in_data*, %struct.ev_udp_in_data** %1, align 8, !dbg !12850
  %11 = getelementptr inbounds %struct.ev_udp_in_data, %struct.ev_udp_in_data* %10, i32 0, i32 1, !dbg !12851
  %12 = load %struct.sockaddr*, %struct.sockaddr** %11, align 8, !dbg !12851
  %13 = bitcast %struct.sockaddr* %12 to i8*, !dbg !12850
  call void @free(i8* %13) #10, !dbg !12852
  br label %14, !dbg !12852

; <label>:14                                      ; preds = %9, %4
  %15 = load %struct.ev_udp_in_data*, %struct.ev_udp_in_data** %1, align 8, !dbg !12853
  %16 = bitcast %struct.ev_udp_in_data* %15 to i8*, !dbg !12853
  call void @free(i8* %16) #10, !dbg !12854
  br label %17, !dbg !12855

; <label>:17                                      ; preds = %14, %0
  ret void, !dbg !12856
}

; Function Attrs: nounwind uwtable
define void @ev_udp_in_data_free_v(i8* %euid_vp) #0 !dbg !1814 {
  %1 = alloca i8*, align 8
  store i8* %euid_vp, i8** %1, align 8
  call void @llvm.dbg.declare(metadata i8** %1, metadata !12857, metadata !2279), !dbg !12858
  %2 = load i8*, i8** %1, align 8, !dbg !12859
  %3 = bitcast i8* %2 to %struct.ev_udp_in_data*, !dbg !12860
  call void @ev_udp_in_data_free(%struct.ev_udp_in_data* %3), !dbg !12861
  ret void, !dbg !12862
}

; Function Attrs: nounwind uwtable
define i32 @ev_udp_in_init() #0 !dbg !1815 {
  %1 = alloca i32, align 4
  %2 = load %struct.generic_list*, %struct.generic_list** @UDPL_head, align 8, !dbg !12863
  %3 = icmp ne %struct.generic_list* %2, null, !dbg !12863
  br i1 %3, label %4, label %5, !dbg !12865

; <label>:4                                       ; preds = %0
  store i32 -1, i32* %1, align 4, !dbg !12866
  br label %14, !dbg !12866

; <label>:5                                       ; preds = %0
  %6 = call %struct.generic_list* @list_init(), !dbg !12867
  store %struct.generic_list* %6, %struct.generic_list** @UDPL_head, align 8, !dbg !12868
  %7 = load %struct.generic_list*, %struct.generic_list** @UDPL_head, align 8, !dbg !12869
  %8 = icmp ne %struct.generic_list* %7, null, !dbg !12869
  br i1 %8, label %10, label %9, !dbg !12871

; <label>:9                                       ; preds = %5
  store i32 -1, i32* %1, align 4, !dbg !12872
  br label %14, !dbg !12872

; <label>:10                                      ; preds = %5
  %11 = load %struct.generic_list*, %struct.generic_list** @UDPL_head, align 8, !dbg !12873
  store %struct.generic_list* %11, %struct.generic_list** @UDPL_tail, align 8, !dbg !12874
  %12 = load %struct.generic_list*, %struct.generic_list** @UDPL_head, align 8, !dbg !12875
  %13 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %12, i32 0, i32 2, !dbg !12876
  store i8* null, i8** %13, align 8, !dbg !12877
  store i32 0, i32* %1, align 4, !dbg !12878
  br label %14, !dbg !12878

; <label>:14                                      ; preds = %10, %9, %4
  %15 = load i32, i32* %1, align 4, !dbg !12879
  ret i32 %15, !dbg !12879
}

; Function Attrs: nounwind uwtable
define void @ev_udp_in_finish() #0 !dbg !1816 {
  %1 = call i32 @net_delete_socketlist(), !dbg !12880
  %2 = load %struct.generic_list*, %struct.generic_list** @UDPL_head, align 8, !dbg !12881
  call void @list_destroy(%struct.generic_list* %2, void (i8*)* @ev_udp_in_data_free_v), !dbg !12882
  ret void, !dbg !12883
}

; Function Attrs: nounwind uwtable
define i32 @ev_udp_in_register(%struct.context* %cptr, %struct.sockaddr* %sa_p, i32 %sa_len, i16 zeroext %id) #0 !dbg !1817 {
  %1 = alloca i32, align 4
  %2 = alloca %struct.context*, align 8
  %3 = alloca %struct.sockaddr*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i16, align 2
  %fn = alloca i8*, align 8
  %euid_new = alloca %struct.ev_udp_in_data*, align 8
  store %struct.context* %cptr, %struct.context** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.context** %2, metadata !12884, metadata !2279), !dbg !12885
  store %struct.sockaddr* %sa_p, %struct.sockaddr** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.sockaddr** %3, metadata !12886, metadata !2279), !dbg !12887
  store i32 %sa_len, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !12888, metadata !2279), !dbg !12889
  store i16 %id, i16* %5, align 2
  call void @llvm.dbg.declare(metadata i16* %5, metadata !12890, metadata !2279), !dbg !12891
  call void @llvm.dbg.declare(metadata i8** %fn, metadata !12892, metadata !2279), !dbg !12893
  store i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.428, i32 0, i32 0), i8** %fn, align 8, !dbg !12893
  call void @llvm.dbg.declare(metadata %struct.ev_udp_in_data** %euid_new, metadata !12894, metadata !2279), !dbg !12895
  store %struct.ev_udp_in_data* null, %struct.ev_udp_in_data** %euid_new, align 8, !dbg !12895
  %6 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 8), align 4, !dbg !12896
  %7 = icmp sgt i32 %6, 3, !dbg !12898
  br i1 %7, label %8, label %12, !dbg !12899

; <label>:8                                       ; preds = %0
  %9 = load i8*, i8** %fn, align 8, !dbg !12900
  %10 = load i16, i16* %5, align 2, !dbg !12901
  %11 = zext i16 %10 to i32, !dbg !12901
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1.429, i32 0, i32 0), i8* %9, i32 %11), !dbg !12902
  br label %12, !dbg !12902

; <label>:12                                      ; preds = %8, %0
  %13 = call noalias i8* @malloc(i64 24) #10, !dbg !12903
  %14 = bitcast i8* %13 to %struct.ev_udp_in_data*, !dbg !12903
  store %struct.ev_udp_in_data* %14, %struct.ev_udp_in_data** %euid_new, align 8, !dbg !12904
  %15 = load %struct.ev_udp_in_data*, %struct.ev_udp_in_data** %euid_new, align 8, !dbg !12905
  %16 = icmp ne %struct.ev_udp_in_data* %15, null, !dbg !12905
  br i1 %16, label %18, label %17, !dbg !12907

; <label>:17                                      ; preds = %12
  store i32 -1, i32* %1, align 4, !dbg !12908
  br label %61, !dbg !12908

; <label>:18                                      ; preds = %12
  %19 = load i32, i32* %4, align 4, !dbg !12909
  %20 = sext i32 %19 to i64, !dbg !12909
  %21 = call noalias i8* @malloc(i64 %20) #10, !dbg !12910
  %22 = bitcast i8* %21 to %struct.sockaddr*, !dbg !12910
  %23 = load %struct.ev_udp_in_data*, %struct.ev_udp_in_data** %euid_new, align 8, !dbg !12911
  %24 = getelementptr inbounds %struct.ev_udp_in_data, %struct.ev_udp_in_data* %23, i32 0, i32 1, !dbg !12912
  store %struct.sockaddr* %22, %struct.sockaddr** %24, align 8, !dbg !12913
  %25 = load %struct.ev_udp_in_data*, %struct.ev_udp_in_data** %euid_new, align 8, !dbg !12914
  %26 = getelementptr inbounds %struct.ev_udp_in_data, %struct.ev_udp_in_data* %25, i32 0, i32 1, !dbg !12916
  %27 = load %struct.sockaddr*, %struct.sockaddr** %26, align 8, !dbg !12916
  %28 = icmp ne %struct.sockaddr* %27, null, !dbg !12914
  br i1 %28, label %32, label %29, !dbg !12917

; <label>:29                                      ; preds = %18
  %30 = load %struct.ev_udp_in_data*, %struct.ev_udp_in_data** %euid_new, align 8, !dbg !12918
  %31 = bitcast %struct.ev_udp_in_data* %30 to i8*, !dbg !12918
  call void @free(i8* %31) #10, !dbg !12920
  store i32 -1, i32* %1, align 4, !dbg !12921
  br label %61, !dbg !12921

; <label>:32                                      ; preds = %18
  %33 = load %struct.ev_udp_in_data*, %struct.ev_udp_in_data** %euid_new, align 8, !dbg !12922
  %34 = getelementptr inbounds %struct.ev_udp_in_data, %struct.ev_udp_in_data* %33, i32 0, i32 1, !dbg !12923
  %35 = load %struct.sockaddr*, %struct.sockaddr** %34, align 8, !dbg !12923
  %36 = bitcast %struct.sockaddr* %35 to i8*, !dbg !12924
  %37 = load %struct.sockaddr*, %struct.sockaddr** %3, align 8, !dbg !12925
  %38 = bitcast %struct.sockaddr* %37 to i8*, !dbg !12924
  %39 = load i32, i32* %4, align 4, !dbg !12926
  %40 = sext i32 %39 to i64, !dbg !12926
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %36, i8* %38, i64 %40, i32 2, i1 false), !dbg !12924
  %41 = load %struct.context*, %struct.context** %2, align 8, !dbg !12927
  %42 = load %struct.ev_udp_in_data*, %struct.ev_udp_in_data** %euid_new, align 8, !dbg !12928
  %43 = getelementptr inbounds %struct.ev_udp_in_data, %struct.ev_udp_in_data* %42, i32 0, i32 0, !dbg !12929
  store %struct.context* %41, %struct.context** %43, align 8, !dbg !12930
  %44 = load i16, i16* %5, align 2, !dbg !12931
  %45 = load %struct.ev_udp_in_data*, %struct.ev_udp_in_data** %euid_new, align 8, !dbg !12932
  %46 = getelementptr inbounds %struct.ev_udp_in_data, %struct.ev_udp_in_data* %45, i32 0, i32 2, !dbg !12933
  store i16 %44, i16* %46, align 8, !dbg !12934
  %47 = load %struct.generic_list*, %struct.generic_list** @UDPL_head, align 8, !dbg !12935
  %48 = load %struct.ev_udp_in_data*, %struct.ev_udp_in_data** %euid_new, align 8, !dbg !12937
  %49 = bitcast %struct.ev_udp_in_data* %48 to i8*, !dbg !12937
  %50 = call i32 @list_add(%struct.generic_list* %47, i8* %49), !dbg !12938
  %51 = icmp ne i32 %50, 0, !dbg !12938
  br i1 %51, label %59, label %52, !dbg !12939

; <label>:52                                      ; preds = %32
  %53 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 8), align 4, !dbg !12940
  %54 = icmp sgt i32 %53, 3, !dbg !12943
  br i1 %54, label %55, label %58, !dbg !12944

; <label>:55                                      ; preds = %52
  %56 = load i8*, i8** %fn, align 8, !dbg !12945
  %57 = load %struct.ev_udp_in_data*, %struct.ev_udp_in_data** %euid_new, align 8, !dbg !12946
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2.430, i32 0, i32 0), i8* %56, %struct.ev_udp_in_data* %57), !dbg !12947
  br label %58, !dbg !12947

; <label>:58                                      ; preds = %55, %52
  store i32 0, i32* %1, align 4, !dbg !12948
  br label %61, !dbg !12948

; <label>:59                                      ; preds = %32
  %60 = load %struct.ev_udp_in_data*, %struct.ev_udp_in_data** %euid_new, align 8, !dbg !12949
  call void @ev_udp_in_data_free(%struct.ev_udp_in_data* %60), !dbg !12951
  store i32 -1, i32* %1, align 4, !dbg !12952
  br label %61, !dbg !12952

; <label>:61                                      ; preds = %59, %58, %29, %17
  %62 = load i32, i32* %1, align 4, !dbg !12953
  ret i32 %62, !dbg !12953
}

; Function Attrs: nounwind uwtable
define i32 @ev_udp_in_remove(%struct.sockaddr* %sa_p, i32 %id) #0 !dbg !1820 {
  %1 = alloca i32, align 4
  %2 = alloca %struct.sockaddr*, align 8
  %3 = alloca i32, align 4
  %euid_tmp = alloca %struct.ev_udp_in_data, align 8
  %euid_p = alloca %struct.ev_udp_in_data*, align 8
  %gl_tmp = alloca %struct.generic_list*, align 8
  store %struct.sockaddr* %sa_p, %struct.sockaddr** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.sockaddr** %2, metadata !12954, metadata !2279), !dbg !12955
  store i32 %id, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !12956, metadata !2279), !dbg !12957
  call void @llvm.dbg.declare(metadata %struct.ev_udp_in_data* %euid_tmp, metadata !12958, metadata !2279), !dbg !12959
  call void @llvm.dbg.declare(metadata %struct.ev_udp_in_data** %euid_p, metadata !12960, metadata !2279), !dbg !12961
  call void @llvm.dbg.declare(metadata %struct.generic_list** %gl_tmp, metadata !12962, metadata !2279), !dbg !12963
  %4 = load %struct.sockaddr*, %struct.sockaddr** %2, align 8, !dbg !12964
  %5 = getelementptr inbounds %struct.ev_udp_in_data, %struct.ev_udp_in_data* %euid_tmp, i32 0, i32 1, !dbg !12965
  store %struct.sockaddr* %4, %struct.sockaddr** %5, align 8, !dbg !12966
  %6 = load i32, i32* %3, align 4, !dbg !12967
  %7 = trunc i32 %6 to i16, !dbg !12967
  %8 = getelementptr inbounds %struct.ev_udp_in_data, %struct.ev_udp_in_data* %euid_tmp, i32 0, i32 2, !dbg !12968
  store i16 %7, i16* %8, align 8, !dbg !12969
  %9 = load %struct.generic_list*, %struct.generic_list** @UDPL_head, align 8, !dbg !12970
  %10 = bitcast %struct.ev_udp_in_data* %euid_tmp to i8*, !dbg !12971
  %11 = call %struct.generic_list* @list_search(%struct.generic_list* %9, i8* %10, i32 (i8*, i8*)* @ev_udp_in_eq), !dbg !12972
  store %struct.generic_list* %11, %struct.generic_list** %gl_tmp, align 8, !dbg !12973
  %12 = load %struct.generic_list*, %struct.generic_list** %gl_tmp, align 8, !dbg !12974
  %13 = icmp ne %struct.generic_list* %12, null, !dbg !12974
  br i1 %13, label %15, label %14, !dbg !12976

; <label>:14                                      ; preds = %0
  store i32 -1, i32* %1, align 4, !dbg !12977
  br label %20, !dbg !12977

; <label>:15                                      ; preds = %0
  %16 = load %struct.generic_list*, %struct.generic_list** %gl_tmp, align 8, !dbg !12978
  %17 = call i8* @list_delete(%struct.generic_list* %16), !dbg !12979
  %18 = bitcast i8* %17 to %struct.ev_udp_in_data*, !dbg !12980
  store %struct.ev_udp_in_data* %18, %struct.ev_udp_in_data** %euid_p, align 8, !dbg !12981
  %19 = load %struct.ev_udp_in_data*, %struct.ev_udp_in_data** %euid_p, align 8, !dbg !12982
  call void @ev_udp_in_data_free(%struct.ev_udp_in_data* %19), !dbg !12983
  store i32 0, i32* %1, align 4, !dbg !12984
  br label %20, !dbg !12984

; <label>:20                                      ; preds = %15, %14
  %21 = load i32, i32* %1, align 4, !dbg !12985
  ret i32 %21, !dbg !12985
}

; Function Attrs: nounwind uwtable
define i32 @ev_udp_in_read(i32 %sock) #0 !dbg !1823 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %fn = alloca i8*, align 8
  %sa = alloca %struct.sockaddr_storage, align 8
  %newbuf = alloca i8*, align 8
  %mesg = alloca %struct.mesg_hdr*, align 8
  %mesg_len = alloca i32, align 4
  %sa_len = alloca i32, align 4
  %gl_tmp = alloca %struct.generic_list*, align 8
  %euid = alloca %struct.ev_udp_in_data, align 8
  %ni_l = alloca %struct.nia*, align 8
  %cont = alloca %struct.context*, align 8
  store i32 %sock, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12986, metadata !2279), !dbg !12987
  call void @llvm.dbg.declare(metadata i8** %fn, metadata !12988, metadata !2279), !dbg !12989
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3.433, i32 0, i32 0), i8** %fn, align 8, !dbg !12989
  call void @llvm.dbg.declare(metadata %struct.sockaddr_storage* %sa, metadata !12990, metadata !2279), !dbg !12996
  call void @llvm.dbg.declare(metadata i8** %newbuf, metadata !12997, metadata !2279), !dbg !12998
  call void @llvm.dbg.declare(metadata %struct.mesg_hdr** %mesg, metadata !12999, metadata !2279), !dbg !13000
  call void @llvm.dbg.declare(metadata i32* %mesg_len, metadata !13001, metadata !2279), !dbg !13002
  call void @llvm.dbg.declare(metadata i32* %sa_len, metadata !13003, metadata !2279), !dbg !13004
  call void @llvm.dbg.declare(metadata %struct.generic_list** %gl_tmp, metadata !13005, metadata !2279), !dbg !13006
  call void @llvm.dbg.declare(metadata %struct.ev_udp_in_data* %euid, metadata !13007, metadata !2279), !dbg !13008
  call void @llvm.dbg.declare(metadata %struct.nia** %ni_l, metadata !13009, metadata !2279), !dbg !13010
  %3 = call noalias i8* @malloc(i64 512) #10, !dbg !13011
  store i8* %3, i8** %newbuf, align 8, !dbg !13012
  %4 = load i8*, i8** %newbuf, align 8, !dbg !13013
  %5 = icmp ne i8* %4, null, !dbg !13013
  br i1 %5, label %7, label %6, !dbg !13015

; <label>:6                                       ; preds = %0
  store i32 -1, i32* %1, align 4, !dbg !13016
  br label %154, !dbg !13016

; <label>:7                                       ; preds = %0
  %8 = load i8*, i8** %newbuf, align 8, !dbg !13017
  %9 = bitcast i8* %8 to %struct.mesg_hdr*, !dbg !13018
  store %struct.mesg_hdr* %9, %struct.mesg_hdr** %mesg, align 8, !dbg !13019
  store i32 128, i32* %sa_len, align 4, !dbg !13020
  %10 = bitcast %struct.sockaddr_storage* %sa to i8*, !dbg !13021
  %11 = load i32, i32* %sa_len, align 4, !dbg !13022
  %12 = zext i32 %11 to i64, !dbg !13022
  call void @llvm.memset.p0i8.i64(i8* %10, i8 0, i64 %12, i32 8, i1 false), !dbg !13021
  %13 = load i32, i32* %2, align 4, !dbg !13023
  %14 = load i8*, i8** %newbuf, align 8, !dbg !13024
  %15 = bitcast %struct.sockaddr_storage* %sa to %struct.sockaddr*, !dbg !13025
  %16 = call i64 @recvfrom(i32 %13, i8* %14, i64 512, i32 0, %struct.sockaddr* %15, i32* %sa_len), !dbg !13026
  %17 = trunc i64 %16 to i32, !dbg !13026
  store i32 %17, i32* %mesg_len, align 4, !dbg !13027
  %18 = load i32, i32* %mesg_len, align 4, !dbg !13028
  %19 = icmp slt i32 %18, 0, !dbg !13030
  br i1 %19, label %20, label %26, !dbg !13031

; <label>:20                                      ; preds = %7
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.4.434, i32 0, i32 0)), !dbg !13032
  %21 = load i8*, i8** %newbuf, align 8, !dbg !13034
  %22 = icmp ne i8* %21, null, !dbg !13034
  br i1 %22, label %23, label %25, !dbg !13036

; <label>:23                                      ; preds = %20
  %24 = load i8*, i8** %newbuf, align 8, !dbg !13037
  call void @free(i8* %24) #10, !dbg !13038
  br label %25, !dbg !13038

; <label>:25                                      ; preds = %23, %20
  store i32 -1, i32* %1, align 4, !dbg !13039
  br label %154, !dbg !13039

; <label>:26                                      ; preds = %7
  %27 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 8), align 4, !dbg !13040
  %28 = icmp sgt i32 %27, 3, !dbg !13042
  br i1 %28, label %29, label %33, !dbg !13043

; <label>:29                                      ; preds = %26
  %30 = load i8*, i8** %fn, align 8, !dbg !13044
  %31 = load i32, i32* %2, align 4, !dbg !13045
  %32 = load i32, i32* %mesg_len, align 4, !dbg !13046
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.5.435, i32 0, i32 0), i8* %30, i32 %31, i32 %32), !dbg !13047
  br label %33, !dbg !13047

; <label>:33                                      ; preds = %29, %26
  %34 = load i32, i32* %mesg_len, align 4, !dbg !13048
  %35 = sext i32 %34 to i64, !dbg !13048
  %36 = icmp ult i64 %35, 12, !dbg !13050
  br i1 %36, label %37, label %43, !dbg !13051

; <label>:37                                      ; preds = %33
  call void (i32, i8*, ...) @syslog(i32 5, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.6.436, i32 0, i32 0)), !dbg !13052
  %38 = load i8*, i8** %newbuf, align 8, !dbg !13054
  %39 = icmp ne i8* %38, null, !dbg !13054
  br i1 %39, label %40, label %42, !dbg !13056

; <label>:40                                      ; preds = %37
  %41 = load i8*, i8** %newbuf, align 8, !dbg !13057
  call void @free(i8* %41) #10, !dbg !13058
  br label %42, !dbg !13058

; <label>:42                                      ; preds = %40, %37
  store i32 -1, i32* %1, align 4, !dbg !13059
  br label %154, !dbg !13059

; <label>:43                                      ; preds = %33
  %44 = bitcast %struct.sockaddr_storage* %sa to %struct.sockaddr*, !dbg !13060
  %45 = load i32, i32* %sa_len, align 4, !dbg !13062
  %46 = trunc i32 %45 to i16, !dbg !13062
  %47 = load %struct.mesg_hdr*, %struct.mesg_hdr** %mesg, align 8, !dbg !13063
  %48 = getelementptr inbounds %struct.mesg_hdr, %struct.mesg_hdr* %47, i32 0, i32 0, !dbg !13064
  %49 = load i16, i16* %48, align 2, !dbg !13064
  %50 = call i32 @ev_dup(%struct.sockaddr* %44, i16 zeroext %46, i16 zeroext %49), !dbg !13065
  %51 = icmp slt i32 %50, 0, !dbg !13066
  br i1 %51, label %52, label %63, !dbg !13067

; <label>:52                                      ; preds = %43
  %53 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 8), align 4, !dbg !13068
  %54 = icmp sgt i32 %53, 3, !dbg !13071
  br i1 %54, label %55, label %57, !dbg !13072

; <label>:55                                      ; preds = %52
  %56 = load i8*, i8** %fn, align 8, !dbg !13073
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.7.437, i32 0, i32 0), i8* %56), !dbg !13074
  br label %57, !dbg !13074

; <label>:57                                      ; preds = %55, %52
  %58 = load i8*, i8** %newbuf, align 8, !dbg !13075
  %59 = icmp ne i8* %58, null, !dbg !13075
  br i1 %59, label %60, label %62, !dbg !13077

; <label>:60                                      ; preds = %57
  %61 = load i8*, i8** %newbuf, align 8, !dbg !13078
  call void @free(i8* %61) #10, !dbg !13079
  br label %62, !dbg !13079

; <label>:62                                      ; preds = %60, %57
  store i32 0, i32* %1, align 4, !dbg !13080
  br label %154, !dbg !13080

; <label>:63                                      ; preds = %43
  %64 = load %struct.mesg_hdr*, %struct.mesg_hdr** %mesg, align 8, !dbg !13081
  %65 = getelementptr inbounds %struct.mesg_hdr, %struct.mesg_hdr* %64, i32 0, i32 0, !dbg !13082
  %66 = load i16, i16* %65, align 2, !dbg !13082
  %67 = getelementptr inbounds %struct.ev_udp_in_data, %struct.ev_udp_in_data* %euid, i32 0, i32 2, !dbg !13083
  store i16 %66, i16* %67, align 8, !dbg !13084
  %68 = bitcast %struct.sockaddr_storage* %sa to %struct.sockaddr*, !dbg !13085
  %69 = getelementptr inbounds %struct.ev_udp_in_data, %struct.ev_udp_in_data* %euid, i32 0, i32 1, !dbg !13086
  store %struct.sockaddr* %68, %struct.sockaddr** %69, align 8, !dbg !13087
  %70 = load %struct.generic_list*, %struct.generic_list** @UDPL_head, align 8, !dbg !13088
  %71 = bitcast %struct.ev_udp_in_data* %euid to i8*, !dbg !13089
  %72 = call %struct.generic_list* @list_search(%struct.generic_list* %70, i8* %71, i32 (i8*, i8*)* @ev_udp_in_eq), !dbg !13090
  store %struct.generic_list* %72, %struct.generic_list** %gl_tmp, align 8, !dbg !13091
  %73 = load %struct.generic_list*, %struct.generic_list** %gl_tmp, align 8, !dbg !13092
  %74 = icmp ne %struct.generic_list* %73, null, !dbg !13092
  br i1 %74, label %117, label %75, !dbg !13094

; <label>:75                                      ; preds = %63
  %76 = load %struct.mesg_hdr*, %struct.mesg_hdr** %mesg, align 8, !dbg !13095
  %77 = getelementptr inbounds %struct.mesg_hdr, %struct.mesg_hdr* %76, i32 0, i32 1, !dbg !13098
  %78 = load i16, i16* %77, align 2, !dbg !13098
  %79 = lshr i16 %78, 7, !dbg !13098
  %80 = and i16 %79, 1, !dbg !13098
  %81 = trunc i16 %80 to i8, !dbg !13098
  %82 = zext i8 %81 to i32, !dbg !13095
  %83 = icmp eq i32 %82, 1, !dbg !13099
  br i1 %83, label %84, label %95, !dbg !13100

; <label>:84                                      ; preds = %75
  %85 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 8), align 4, !dbg !13101
  %86 = icmp sgt i32 %85, 3, !dbg !13104
  br i1 %86, label %87, label %89, !dbg !13105

; <label>:87                                      ; preds = %84
  %88 = load i8*, i8** %fn, align 8, !dbg !13106
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.8.438, i32 0, i32 0), i8* %88), !dbg !13107
  br label %89, !dbg !13107

; <label>:89                                      ; preds = %87, %84
  %90 = load i8*, i8** %newbuf, align 8, !dbg !13108
  %91 = icmp ne i8* %90, null, !dbg !13108
  br i1 %91, label %92, label %94, !dbg !13110

; <label>:92                                      ; preds = %89
  %93 = load i8*, i8** %newbuf, align 8, !dbg !13111
  call void @free(i8* %93) #10, !dbg !13112
  br label %94, !dbg !13112

; <label>:94                                      ; preds = %92, %89
  store i32 0, i32* %1, align 4, !dbg !13113
  br label %154, !dbg !13113

; <label>:95                                      ; preds = %75
  %96 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 8), align 4, !dbg !13114
  %97 = icmp sgt i32 %96, 3, !dbg !13116
  br i1 %97, label %98, label %100, !dbg !13117

; <label>:98                                      ; preds = %95
  %99 = load i8*, i8** %fn, align 8, !dbg !13118
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.9.439, i32 0, i32 0), i8* %99), !dbg !13119
  br label %100, !dbg !13119

; <label>:100                                     ; preds = %98, %95
  %101 = load i32, i32* %2, align 4, !dbg !13120
  %102 = call %struct.nia* @nia_find_by_sock(i32 %101), !dbg !13121
  store %struct.nia* %102, %struct.nia** %ni_l, align 8, !dbg !13122
  %103 = load %struct.nia*, %struct.nia** %ni_l, align 8, !dbg !13123
  %104 = icmp ne %struct.nia* %103, null, !dbg !13123
  br i1 %104, label %111, label %105, !dbg !13125

; <label>:105                                     ; preds = %100
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.10.440, i32 0, i32 0)), !dbg !13126
  %106 = load i8*, i8** %newbuf, align 8, !dbg !13128
  %107 = icmp ne i8* %106, null, !dbg !13128
  br i1 %107, label %108, label %110, !dbg !13130

; <label>:108                                     ; preds = %105
  %109 = load i8*, i8** %newbuf, align 8, !dbg !13131
  call void @free(i8* %109) #10, !dbg !13132
  br label %110, !dbg !13132

; <label>:110                                     ; preds = %108, %105
  store i32 -1, i32* %1, align 4, !dbg !13133
  br label %154, !dbg !13133

; <label>:111                                     ; preds = %100
  %112 = load i8*, i8** %newbuf, align 8, !dbg !13134
  %113 = load i32, i32* %mesg_len, align 4, !dbg !13135
  %114 = bitcast %struct.sockaddr_storage* %sa to %struct.sockaddr*, !dbg !13136
  %115 = load %struct.nia*, %struct.nia** %ni_l, align 8, !dbg !13137
  %116 = call i32 @udp_response_start(i8* %112, i32 %113, %struct.sockaddr* %114, %struct.nia* %115), !dbg !13138
  store i32 %116, i32* %1, align 4, !dbg !13139
  br label %154, !dbg !13139

; <label>:117                                     ; preds = %63
  call void @llvm.dbg.declare(metadata %struct.context** %cont, metadata !13140, metadata !2279), !dbg !13142
  %118 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 8), align 4, !dbg !13143
  %119 = icmp sgt i32 %118, 3, !dbg !13145
  br i1 %119, label %120, label %122, !dbg !13146

; <label>:120                                     ; preds = %117
  %121 = load i8*, i8** %fn, align 8, !dbg !13147
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.11.441, i32 0, i32 0), i8* %121), !dbg !13148
  br label %122, !dbg !13148

; <label>:122                                     ; preds = %120, %117
  %123 = load %struct.generic_list*, %struct.generic_list** %gl_tmp, align 8, !dbg !13149
  %124 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %123, i32 0, i32 2, !dbg !13150
  %125 = load i8*, i8** %124, align 8, !dbg !13150
  %126 = bitcast i8* %125 to %struct.ev_udp_in_data*, !dbg !13151
  %127 = getelementptr inbounds %struct.ev_udp_in_data, %struct.ev_udp_in_data* %126, i32 0, i32 0, !dbg !13152
  %128 = load %struct.context*, %struct.context** %127, align 8, !dbg !13152
  store %struct.context* %128, %struct.context** %cont, align 8, !dbg !13153
  %129 = load %struct.context*, %struct.context** %cont, align 8, !dbg !13154
  %130 = getelementptr inbounds %struct.context, %struct.context* %129, i32 0, i32 16, !dbg !13156
  %131 = bitcast %union.anon.0* %130 to i8**, !dbg !13157
  %132 = load i8*, i8** %131, align 8, !dbg !13157
  %133 = icmp ne i8* %132, null, !dbg !13154
  br i1 %133, label %134, label %139, !dbg !13158

; <label>:134                                     ; preds = %122
  %135 = load %struct.context*, %struct.context** %cont, align 8, !dbg !13159
  %136 = getelementptr inbounds %struct.context, %struct.context* %135, i32 0, i32 16, !dbg !13160
  %137 = bitcast %union.anon.0* %136 to i8**, !dbg !13161
  %138 = load i8*, i8** %137, align 8, !dbg !13161
  call void @free(i8* %138) #10, !dbg !13162
  br label %139, !dbg !13162

; <label>:139                                     ; preds = %134, %122
  %140 = load i8*, i8** %newbuf, align 8, !dbg !13163
  %141 = load %struct.context*, %struct.context** %cont, align 8, !dbg !13164
  %142 = getelementptr inbounds %struct.context, %struct.context* %141, i32 0, i32 16, !dbg !13165
  %143 = bitcast %union.anon.0* %142 to i8**, !dbg !13166
  store i8* %140, i8** %143, align 8, !dbg !13167
  %144 = load i32, i32* %mesg_len, align 4, !dbg !13168
  %145 = load %struct.context*, %struct.context** %cont, align 8, !dbg !13169
  %146 = getelementptr inbounds %struct.context, %struct.context* %145, i32 0, i32 17, !dbg !13170
  store i32 %144, i32* %146, align 8, !dbg !13171
  %147 = load %struct.context*, %struct.context** %cont, align 8, !dbg !13172
  %148 = getelementptr inbounds %struct.context, %struct.context* %147, i32 0, i32 18, !dbg !13173
  store i8* null, i8** %148, align 8, !dbg !13174
  %149 = load %struct.context*, %struct.context** %cont, align 8, !dbg !13175
  %150 = getelementptr inbounds %struct.context, %struct.context* %149, i32 0, i32 7, !dbg !13176
  %151 = load i32 (%struct.context*)*, i32 (%struct.context*)** %150, align 8, !dbg !13176
  %152 = load %struct.context*, %struct.context** %cont, align 8, !dbg !13177
  %153 = call i32 %151(%struct.context* %152), !dbg !13178
  store i32 %153, i32* %1, align 4, !dbg !13179
  br label %154, !dbg !13179

; <label>:154                                     ; preds = %139, %111, %110, %94, %62, %42, %25, %6
  %155 = load i32, i32* %1, align 4, !dbg !13180
  ret i32 %155, !dbg !13180
}

declare i64 @recvfrom(i32, i8*, i64, i32, %struct.sockaddr*, i32*) #2

; Function Attrs: nounwind uwtable
define void @nia_free_closev(i8* %ni) #0 !dbg !1903 {
  %1 = alloca i8*, align 8
  store i8* %ni, i8** %1, align 8
  call void @llvm.dbg.declare(metadata i8** %1, metadata !13181, metadata !2279), !dbg !13182
  %2 = load i8*, i8** %1, align 8, !dbg !13183
  %3 = bitcast i8* %2 to %struct.nia*, !dbg !13184
  call void @nia_free(%struct.nia* %3, i32 1), !dbg !13185
  ret void, !dbg !13186
}

; Function Attrs: nounwind uwtable
define void @nia_free(%struct.nia* %ni, i32 %close_flag) #0 !dbg !1904 {
  %1 = alloca %struct.nia*, align 8
  %2 = alloca i32, align 4
  %fn = alloca i8*, align 8
  store %struct.nia* %ni, %struct.nia** %1, align 8
  call void @llvm.dbg.declare(metadata %struct.nia** %1, metadata !13187, metadata !2279), !dbg !13188
  store i32 %close_flag, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !13189, metadata !2279), !dbg !13190
  call void @llvm.dbg.declare(metadata i8** %fn, metadata !13191, metadata !2279), !dbg !13192
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.444, i32 0, i32 0), i8** %fn, align 8, !dbg !13192
  %3 = load %struct.nia*, %struct.nia** %1, align 8, !dbg !13193
  %4 = getelementptr inbounds %struct.nia, %struct.nia* %3, i32 0, i32 0, !dbg !13195
  %5 = load %struct.sockaddr*, %struct.sockaddr** %4, align 8, !dbg !13195
  %6 = icmp ne %struct.sockaddr* %5, null, !dbg !13193
  br i1 %6, label %7, label %12, !dbg !13196

; <label>:7                                       ; preds = %0
  %8 = load %struct.nia*, %struct.nia** %1, align 8, !dbg !13197
  %9 = getelementptr inbounds %struct.nia, %struct.nia* %8, i32 0, i32 0, !dbg !13198
  %10 = load %struct.sockaddr*, %struct.sockaddr** %9, align 8, !dbg !13198
  %11 = bitcast %struct.sockaddr* %10 to i8*, !dbg !13197
  call void @free(i8* %11) #10, !dbg !13199
  br label %12, !dbg !13199

; <label>:12                                      ; preds = %7, %0
  %13 = load %struct.nia*, %struct.nia** %1, align 8, !dbg !13200
  %14 = getelementptr inbounds %struct.nia, %struct.nia* %13, i32 0, i32 1, !dbg !13202
  %15 = load i32, i32* %14, align 8, !dbg !13202
  %16 = icmp sge i32 %15, 0, !dbg !13203
  br i1 %16, label %17, label %33, !dbg !13204

; <label>:17                                      ; preds = %12
  %18 = load i32, i32* %2, align 4, !dbg !13205
  %19 = icmp ne i32 %18, 0, !dbg !13205
  br i1 %19, label %20, label %33, !dbg !13207

; <label>:20                                      ; preds = %17
  %21 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 8), align 4, !dbg !13208
  %22 = icmp sgt i32 %21, 4, !dbg !13211
  br i1 %22, label %23, label %28, !dbg !13212

; <label>:23                                      ; preds = %20
  %24 = load i8*, i8** %fn, align 8, !dbg !13213
  %25 = load %struct.nia*, %struct.nia** %1, align 8, !dbg !13214
  %26 = getelementptr inbounds %struct.nia, %struct.nia* %25, i32 0, i32 1, !dbg !13215
  %27 = load i32, i32* %26, align 8, !dbg !13215
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.1.445, i32 0, i32 0), i8* %24, i32 %27), !dbg !13216
  br label %28, !dbg !13216

; <label>:28                                      ; preds = %23, %20
  %29 = load %struct.nia*, %struct.nia** %1, align 8, !dbg !13217
  %30 = getelementptr inbounds %struct.nia, %struct.nia* %29, i32 0, i32 1, !dbg !13218
  %31 = load i32, i32* %30, align 8, !dbg !13218
  %32 = call i32 @close(i32 %31), !dbg !13219
  br label %33, !dbg !13220

; <label>:33                                      ; preds = %28, %17, %12
  %34 = load %struct.nia*, %struct.nia** %1, align 8, !dbg !13221
  %35 = getelementptr inbounds %struct.nia, %struct.nia* %34, i32 0, i32 2, !dbg !13223
  %36 = load i32, i32* %35, align 4, !dbg !13223
  %37 = icmp sge i32 %36, 0, !dbg !13224
  br i1 %37, label %38, label %54, !dbg !13225

; <label>:38                                      ; preds = %33
  %39 = load i32, i32* %2, align 4, !dbg !13226
  %40 = icmp ne i32 %39, 0, !dbg !13226
  br i1 %40, label %41, label %54, !dbg !13228

; <label>:41                                      ; preds = %38
  %42 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 8), align 4, !dbg !13229
  %43 = icmp sgt i32 %42, 4, !dbg !13232
  br i1 %43, label %44, label %49, !dbg !13233

; <label>:44                                      ; preds = %41
  %45 = load i8*, i8** %fn, align 8, !dbg !13234
  %46 = load %struct.nia*, %struct.nia** %1, align 8, !dbg !13235
  %47 = getelementptr inbounds %struct.nia, %struct.nia* %46, i32 0, i32 2, !dbg !13236
  %48 = load i32, i32* %47, align 4, !dbg !13236
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.1.445, i32 0, i32 0), i8* %45, i32 %48), !dbg !13237
  br label %49, !dbg !13237

; <label>:49                                      ; preds = %44, %41
  %50 = load %struct.nia*, %struct.nia** %1, align 8, !dbg !13238
  %51 = getelementptr inbounds %struct.nia, %struct.nia* %50, i32 0, i32 2, !dbg !13239
  %52 = load i32, i32* %51, align 4, !dbg !13239
  %53 = call i32 @close(i32 %52), !dbg !13240
  br label %54, !dbg !13241

; <label>:54                                      ; preds = %49, %38, %33
  %55 = load %struct.nia*, %struct.nia** %1, align 8, !dbg !13242
  %56 = bitcast %struct.nia* %55 to i8*, !dbg !13242
  call void @free(i8* %56) #10, !dbg !13243
  ret void, !dbg !13244
}

; Function Attrs: nounwind uwtable
define %struct.nia* @nia_copy(%struct.nia* %ni) #0 !dbg !1907 {
  %1 = alloca %struct.nia*, align 8
  %2 = alloca %struct.nia*, align 8
  store %struct.nia* %ni, %struct.nia** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.nia** %2, metadata !13245, metadata !2279), !dbg !13246
  %3 = load %struct.nia*, %struct.nia** %2, align 8, !dbg !13247
  %4 = icmp ne %struct.nia* %3, null, !dbg !13247
  br i1 %4, label %6, label %5, !dbg !13249

; <label>:5                                       ; preds = %0
  store %struct.nia* null, %struct.nia** %1, align 8, !dbg !13250
  br label %17, !dbg !13250

; <label>:6                                       ; preds = %0
  %7 = load %struct.nia*, %struct.nia** %2, align 8, !dbg !13251
  %8 = getelementptr inbounds %struct.nia, %struct.nia* %7, i32 0, i32 0, !dbg !13252
  %9 = load %struct.sockaddr*, %struct.sockaddr** %8, align 8, !dbg !13252
  %10 = load %struct.nia*, %struct.nia** %2, align 8, !dbg !13253
  %11 = getelementptr inbounds %struct.nia, %struct.nia* %10, i32 0, i32 1, !dbg !13254
  %12 = load i32, i32* %11, align 8, !dbg !13254
  %13 = load %struct.nia*, %struct.nia** %2, align 8, !dbg !13255
  %14 = getelementptr inbounds %struct.nia, %struct.nia* %13, i32 0, i32 2, !dbg !13256
  %15 = load i32, i32* %14, align 4, !dbg !13256
  %16 = call %struct.nia* @nia_alloc(%struct.sockaddr* %9, i32 %12, i32 %15), !dbg !13257
  store %struct.nia* %16, %struct.nia** %1, align 8, !dbg !13258
  br label %17, !dbg !13258

; <label>:17                                      ; preds = %6, %5
  %18 = load %struct.nia*, %struct.nia** %1, align 8, !dbg !13259
  ret %struct.nia* %18, !dbg !13259
}

; Function Attrs: nounwind uwtable
define internal %struct.nia* @nia_alloc(%struct.sockaddr* %sa_p, i32 %usock, i32 %tsock) #0 !dbg !1937 {
  %1 = alloca %struct.nia*, align 8
  %2 = alloca %struct.sockaddr*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %ni = alloca %struct.nia*, align 8
  store %struct.sockaddr* %sa_p, %struct.sockaddr** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.sockaddr** %2, metadata !13260, metadata !2279), !dbg !13261
  store i32 %usock, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !13262, metadata !2279), !dbg !13263
  store i32 %tsock, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !13264, metadata !2279), !dbg !13265
  call void @llvm.dbg.declare(metadata %struct.nia** %ni, metadata !13266, metadata !2279), !dbg !13267
  %5 = call noalias i8* @malloc(i64 16) #10, !dbg !13268
  %6 = bitcast i8* %5 to %struct.nia*, !dbg !13269
  store %struct.nia* %6, %struct.nia** %ni, align 8, !dbg !13270
  %7 = load %struct.nia*, %struct.nia** %ni, align 8, !dbg !13271
  %8 = icmp ne %struct.nia* %7, null, !dbg !13271
  br i1 %8, label %10, label %9, !dbg !13273

; <label>:9                                       ; preds = %0
  store %struct.nia* null, %struct.nia** %1, align 8, !dbg !13274
  br label %73, !dbg !13274

; <label>:10                                      ; preds = %0
  %11 = load %struct.sockaddr*, %struct.sockaddr** %2, align 8, !dbg !13275
  %12 = icmp ne %struct.sockaddr* %11, null, !dbg !13275
  br i1 %12, label %13, label %62, !dbg !13277

; <label>:13                                      ; preds = %10
  %14 = load %struct.sockaddr*, %struct.sockaddr** %2, align 8, !dbg !13278
  %15 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %14, i32 0, i32 0, !dbg !13278
  %16 = load i16, i16* %15, align 2, !dbg !13278
  %17 = zext i16 %16 to i32, !dbg !13278
  %18 = icmp eq i32 %17, 10, !dbg !13278
  br i1 %18, label %19, label %20, !dbg !13278

; <label>:19                                      ; preds = %13
  br label %27, !dbg !13280

; <label>:20                                      ; preds = %13
  %21 = load %struct.sockaddr*, %struct.sockaddr** %2, align 8, !dbg !13282
  %22 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %21, i32 0, i32 0, !dbg !13282
  %23 = load i16, i16* %22, align 2, !dbg !13282
  %24 = zext i16 %23 to i32, !dbg !13282
  %25 = icmp eq i32 %24, 2, !dbg !13282
  %26 = select i1 %25, i64 16, i64 16, !dbg !13282
  br label %27, !dbg !13282

; <label>:27                                      ; preds = %20, %19
  %28 = phi i64 [ 28, %19 ], [ %26, %20 ], !dbg !13284
  %29 = call noalias i8* @malloc(i64 %28) #10, !dbg !13286
  %30 = bitcast i8* %29 to %struct.sockaddr*, !dbg !13287
  %31 = load %struct.nia*, %struct.nia** %ni, align 8, !dbg !13288
  %32 = getelementptr inbounds %struct.nia, %struct.nia* %31, i32 0, i32 0, !dbg !13289
  store %struct.sockaddr* %30, %struct.sockaddr** %32, align 8, !dbg !13290
  %33 = load %struct.nia*, %struct.nia** %ni, align 8, !dbg !13291
  %34 = getelementptr inbounds %struct.nia, %struct.nia* %33, i32 0, i32 0, !dbg !13293
  %35 = load %struct.sockaddr*, %struct.sockaddr** %34, align 8, !dbg !13293
  %36 = icmp ne %struct.sockaddr* %35, null, !dbg !13291
  br i1 %36, label %40, label %37, !dbg !13294

; <label>:37                                      ; preds = %27
  %38 = load %struct.nia*, %struct.nia** %ni, align 8, !dbg !13295
  %39 = bitcast %struct.nia* %38 to i8*, !dbg !13295
  call void @free(i8* %39) #10, !dbg !13297
  store %struct.nia* null, %struct.nia** %1, align 8, !dbg !13298
  br label %73, !dbg !13298

; <label>:40                                      ; preds = %27
  %41 = load %struct.nia*, %struct.nia** %ni, align 8, !dbg !13299
  %42 = getelementptr inbounds %struct.nia, %struct.nia* %41, i32 0, i32 0, !dbg !13300
  %43 = load %struct.sockaddr*, %struct.sockaddr** %42, align 8, !dbg !13300
  %44 = bitcast %struct.sockaddr* %43 to i8*, !dbg !13301
  %45 = load %struct.sockaddr*, %struct.sockaddr** %2, align 8, !dbg !13302
  %46 = bitcast %struct.sockaddr* %45 to i8*, !dbg !13301
  %47 = load %struct.sockaddr*, %struct.sockaddr** %2, align 8, !dbg !13303
  %48 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %47, i32 0, i32 0, !dbg !13303
  %49 = load i16, i16* %48, align 2, !dbg !13303
  %50 = zext i16 %49 to i32, !dbg !13303
  %51 = icmp eq i32 %50, 10, !dbg !13303
  br i1 %51, label %52, label %53, !dbg !13303

; <label>:52                                      ; preds = %40
  br label %60, !dbg !13304

; <label>:53                                      ; preds = %40
  %54 = load %struct.sockaddr*, %struct.sockaddr** %2, align 8, !dbg !13305
  %55 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %54, i32 0, i32 0, !dbg !13305
  %56 = load i16, i16* %55, align 2, !dbg !13305
  %57 = zext i16 %56 to i32, !dbg !13305
  %58 = icmp eq i32 %57, 2, !dbg !13305
  %59 = select i1 %58, i64 16, i64 16, !dbg !13305
  br label %60, !dbg !13305

; <label>:60                                      ; preds = %53, %52
  %61 = phi i64 [ 28, %52 ], [ %59, %53 ], !dbg !13306
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %44, i8* %46, i64 %61, i32 2, i1 false), !dbg !13307
  br label %65, !dbg !13308

; <label>:62                                      ; preds = %10
  %63 = load %struct.nia*, %struct.nia** %ni, align 8, !dbg !13309
  %64 = getelementptr inbounds %struct.nia, %struct.nia* %63, i32 0, i32 0, !dbg !13310
  store %struct.sockaddr* null, %struct.sockaddr** %64, align 8, !dbg !13311
  br label %65

; <label>:65                                      ; preds = %62, %60
  %66 = load i32, i32* %3, align 4, !dbg !13312
  %67 = load %struct.nia*, %struct.nia** %ni, align 8, !dbg !13313
  %68 = getelementptr inbounds %struct.nia, %struct.nia* %67, i32 0, i32 1, !dbg !13314
  store i32 %66, i32* %68, align 8, !dbg !13315
  %69 = load i32, i32* %4, align 4, !dbg !13316
  %70 = load %struct.nia*, %struct.nia** %ni, align 8, !dbg !13317
  %71 = getelementptr inbounds %struct.nia, %struct.nia* %70, i32 0, i32 2, !dbg !13318
  store i32 %69, i32* %71, align 4, !dbg !13319
  %72 = load %struct.nia*, %struct.nia** %ni, align 8, !dbg !13320
  store %struct.nia* %72, %struct.nia** %1, align 8, !dbg !13321
  br label %73, !dbg !13321

; <label>:73                                      ; preds = %65, %37, %9
  %74 = load %struct.nia*, %struct.nia** %1, align 8, !dbg !13322
  ret %struct.nia* %74, !dbg !13322
}

; Function Attrs: nounwind uwtable
define %struct.nia* @nia_find_by_sock(i32 %sock_id) #0 !dbg !1910 {
  %1 = alloca %struct.nia*, align 8
  %2 = alloca i32, align 4
  %gl = alloca %struct.generic_list*, align 8
  %ni = alloca %struct.nia*, align 8
  store i32 %sock_id, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !13323, metadata !2279), !dbg !13324
  call void @llvm.dbg.declare(metadata %struct.generic_list** %gl, metadata !13325, metadata !2279), !dbg !13326
  call void @llvm.dbg.declare(metadata %struct.nia** %ni, metadata !13327, metadata !2279), !dbg !13328
  %3 = load %struct.generic_list*, %struct.generic_list** @NI_head, align 8, !dbg !13329
  %4 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %3, i32 0, i32 0, !dbg !13331
  %5 = load %struct.generic_list*, %struct.generic_list** %4, align 8, !dbg !13331
  store %struct.generic_list* %5, %struct.generic_list** %gl, align 8, !dbg !13332
  br label %6, !dbg !13333

; <label>:6                                       ; preds = %38, %0
  %7 = load %struct.generic_list*, %struct.generic_list** %gl, align 8, !dbg !13334
  %8 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %7, i32 0, i32 2, !dbg !13337
  %9 = load i8*, i8** %8, align 8, !dbg !13337
  %10 = icmp ne i8* %9, null, !dbg !13338
  br i1 %10, label %11, label %42, !dbg !13338

; <label>:11                                      ; preds = %6
  %12 = load %struct.generic_list*, %struct.generic_list** %gl, align 8, !dbg !13339
  %13 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %12, i32 0, i32 2, !dbg !13341
  %14 = load i8*, i8** %13, align 8, !dbg !13341
  %15 = bitcast i8* %14 to %struct.nia*, !dbg !13342
  store %struct.nia* %15, %struct.nia** %ni, align 8, !dbg !13343
  %16 = load %struct.nia*, %struct.nia** %ni, align 8, !dbg !13344
  %17 = getelementptr inbounds %struct.nia, %struct.nia* %16, i32 0, i32 0, !dbg !13346
  %18 = load %struct.sockaddr*, %struct.sockaddr** %17, align 8, !dbg !13346
  %19 = icmp ne %struct.sockaddr* %18, null, !dbg !13344
  br i1 %19, label %21, label %20, !dbg !13347

; <label>:20                                      ; preds = %11
  br label %38, !dbg !13348

; <label>:21                                      ; preds = %11
  %22 = load %struct.nia*, %struct.nia** %ni, align 8, !dbg !13349
  %23 = getelementptr inbounds %struct.nia, %struct.nia* %22, i32 0, i32 1, !dbg !13351
  %24 = load i32, i32* %23, align 8, !dbg !13351
  %25 = load i32, i32* %2, align 4, !dbg !13352
  %26 = icmp eq i32 %24, %25, !dbg !13353
  br i1 %26, label %27, label %29, !dbg !13354

; <label>:27                                      ; preds = %21
  %28 = load %struct.nia*, %struct.nia** %ni, align 8, !dbg !13355
  store %struct.nia* %28, %struct.nia** %1, align 8, !dbg !13356
  br label %43, !dbg !13356

; <label>:29                                      ; preds = %21
  %30 = load %struct.nia*, %struct.nia** %ni, align 8, !dbg !13357
  %31 = getelementptr inbounds %struct.nia, %struct.nia* %30, i32 0, i32 2, !dbg !13359
  %32 = load i32, i32* %31, align 4, !dbg !13359
  %33 = load i32, i32* %2, align 4, !dbg !13360
  %34 = icmp eq i32 %32, %33, !dbg !13361
  br i1 %34, label %35, label %37, !dbg !13362

; <label>:35                                      ; preds = %29
  %36 = load %struct.nia*, %struct.nia** %ni, align 8, !dbg !13363
  store %struct.nia* %36, %struct.nia** %1, align 8, !dbg !13364
  br label %43, !dbg !13364

; <label>:37                                      ; preds = %29
  br label %38, !dbg !13365

; <label>:38                                      ; preds = %37, %20
  %39 = load %struct.generic_list*, %struct.generic_list** %gl, align 8, !dbg !13366
  %40 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %39, i32 0, i32 0, !dbg !13368
  %41 = load %struct.generic_list*, %struct.generic_list** %40, align 8, !dbg !13368
  store %struct.generic_list* %41, %struct.generic_list** %gl, align 8, !dbg !13369
  br label %6, !dbg !13370

; <label>:42                                      ; preds = %6
  store %struct.nia* null, %struct.nia** %1, align 8, !dbg !13371
  br label %43, !dbg !13371

; <label>:43                                      ; preds = %42, %35, %27
  %44 = load %struct.nia*, %struct.nia** %1, align 8, !dbg !13372
  ret %struct.nia* %44, !dbg !13372
}

; Function Attrs: nounwind uwtable
define void @nia_fds_set(%struct.fd_set* %fds, i32* %max_fd) #0 !dbg !1913 {
  %1 = alloca %struct.fd_set*, align 8
  %2 = alloca i32*, align 8
  %fn = alloca i8*, align 8
  %gl = alloca %struct.generic_list*, align 8
  %ni = alloca %struct.nia*, align 8
  store %struct.fd_set* %fds, %struct.fd_set** %1, align 8
  call void @llvm.dbg.declare(metadata %struct.fd_set** %1, metadata !13373, metadata !2279), !dbg !13374
  store i32* %max_fd, i32** %2, align 8
  call void @llvm.dbg.declare(metadata i32** %2, metadata !13375, metadata !2279), !dbg !13376
  call void @llvm.dbg.declare(metadata i8** %fn, metadata !13377, metadata !2279), !dbg !13378
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2.450, i32 0, i32 0), i8** %fn, align 8, !dbg !13378
  call void @llvm.dbg.declare(metadata %struct.generic_list** %gl, metadata !13379, metadata !2279), !dbg !13380
  call void @llvm.dbg.declare(metadata %struct.nia** %ni, metadata !13381, metadata !2279), !dbg !13382
  %3 = load %struct.generic_list*, %struct.generic_list** @NI_head, align 8, !dbg !13383
  %4 = icmp ne %struct.generic_list* %3, null, !dbg !13383
  br i1 %4, label %6, label %5, !dbg !13385

; <label>:5                                       ; preds = %0
  br label %131, !dbg !13386

; <label>:6                                       ; preds = %0
  %7 = load %struct.generic_list*, %struct.generic_list** @NI_head, align 8, !dbg !13387
  %8 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %7, i32 0, i32 0, !dbg !13389
  %9 = load %struct.generic_list*, %struct.generic_list** %8, align 8, !dbg !13389
  store %struct.generic_list* %9, %struct.generic_list** %gl, align 8, !dbg !13390
  br label %10, !dbg !13391

; <label>:10                                      ; preds = %126, %6
  %11 = load %struct.generic_list*, %struct.generic_list** %gl, align 8, !dbg !13392
  %12 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %11, i32 0, i32 2, !dbg !13395
  %13 = load i8*, i8** %12, align 8, !dbg !13395
  %14 = icmp ne i8* %13, null, !dbg !13396
  br i1 %14, label %15, label %130, !dbg !13396

; <label>:15                                      ; preds = %10
  %16 = load %struct.generic_list*, %struct.generic_list** %gl, align 8, !dbg !13397
  %17 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %16, i32 0, i32 2, !dbg !13399
  %18 = load i8*, i8** %17, align 8, !dbg !13399
  %19 = bitcast i8* %18 to %struct.nia*, !dbg !13400
  store %struct.nia* %19, %struct.nia** %ni, align 8, !dbg !13401
  %20 = load %struct.nia*, %struct.nia** %ni, align 8, !dbg !13402
  %21 = getelementptr inbounds %struct.nia, %struct.nia* %20, i32 0, i32 0, !dbg !13404
  %22 = load %struct.sockaddr*, %struct.sockaddr** %21, align 8, !dbg !13404
  %23 = icmp ne %struct.sockaddr* %22, null, !dbg !13402
  br i1 %23, label %25, label %24, !dbg !13405

; <label>:24                                      ; preds = %15
  br label %126, !dbg !13406

; <label>:25                                      ; preds = %15
  %26 = load %struct.nia*, %struct.nia** %ni, align 8, !dbg !13407
  %27 = getelementptr inbounds %struct.nia, %struct.nia* %26, i32 0, i32 1, !dbg !13409
  %28 = load i32, i32* %27, align 8, !dbg !13409
  %29 = icmp sge i32 %28, 0, !dbg !13410
  br i1 %29, label %30, label %75, !dbg !13411

; <label>:30                                      ; preds = %25
  %31 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 8), align 4, !dbg !13412
  %32 = icmp sgt i32 %31, 4, !dbg !13415
  br i1 %32, label %33, label %38, !dbg !13416

; <label>:33                                      ; preds = %30
  %34 = load i8*, i8** %fn, align 8, !dbg !13417
  %35 = load %struct.nia*, %struct.nia** %ni, align 8, !dbg !13418
  %36 = getelementptr inbounds %struct.nia, %struct.nia* %35, i32 0, i32 1, !dbg !13419
  %37 = load i32, i32* %36, align 8, !dbg !13419
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.3.451, i32 0, i32 0), i8* %34, i32 %37), !dbg !13420
  br label %38, !dbg !13420

; <label>:38                                      ; preds = %33, %30
  %39 = load %struct.nia*, %struct.nia** %ni, align 8, !dbg !13421
  %40 = getelementptr inbounds %struct.nia, %struct.nia* %39, i32 0, i32 1, !dbg !13421
  %41 = load i32, i32* %40, align 8, !dbg !13421
  %42 = srem i32 %41, 64, !dbg !13421
  %43 = zext i32 %42 to i64, !dbg !13421
  %44 = shl i64 1, %43, !dbg !13421
  %45 = load %struct.nia*, %struct.nia** %ni, align 8, !dbg !13421
  %46 = getelementptr inbounds %struct.nia, %struct.nia* %45, i32 0, i32 1, !dbg !13421
  %47 = load i32, i32* %46, align 8, !dbg !13421
  %48 = sdiv i32 %47, 64, !dbg !13421
  %49 = sext i32 %48 to i64, !dbg !13421
  %50 = load %struct.fd_set*, %struct.fd_set** %1, align 8, !dbg !13421
  %51 = getelementptr inbounds %struct.fd_set, %struct.fd_set* %50, i32 0, i32 0, !dbg !13421
  %52 = getelementptr inbounds [16 x i64], [16 x i64]* %51, i64 0, i64 %49, !dbg !13421
  %53 = load i64, i64* %52, align 8, !dbg !13421
  %54 = or i64 %53, %44, !dbg !13421
  store i64 %54, i64* %52, align 8, !dbg !13421
  %55 = load i32*, i32** %2, align 8, !dbg !13422
  %56 = icmp ne i32* %55, null, !dbg !13422
  br i1 %56, label %57, label %74, !dbg !13424

; <label>:57                                      ; preds = %38
  %58 = load i32*, i32** %2, align 8, !dbg !13425
  %59 = load i32, i32* %58, align 4, !dbg !13425
  %60 = load %struct.nia*, %struct.nia** %ni, align 8, !dbg !13425
  %61 = getelementptr inbounds %struct.nia, %struct.nia* %60, i32 0, i32 1, !dbg !13425
  %62 = load i32, i32* %61, align 8, !dbg !13425
  %63 = icmp sgt i32 %59, %62, !dbg !13425
  br i1 %63, label %64, label %67, !dbg !13425

; <label>:64                                      ; preds = %57
  %65 = load i32*, i32** %2, align 8, !dbg !13426
  %66 = load i32, i32* %65, align 4, !dbg !13426
  br label %71, !dbg !13426

; <label>:67                                      ; preds = %57
  %68 = load %struct.nia*, %struct.nia** %ni, align 8, !dbg !13428
  %69 = getelementptr inbounds %struct.nia, %struct.nia* %68, i32 0, i32 1, !dbg !13428
  %70 = load i32, i32* %69, align 8, !dbg !13428
  br label %71, !dbg !13428

; <label>:71                                      ; preds = %67, %64
  %72 = phi i32 [ %66, %64 ], [ %70, %67 ], !dbg !13430
  %73 = load i32*, i32** %2, align 8, !dbg !13432
  store i32 %72, i32* %73, align 4, !dbg !13433
  br label %74, !dbg !13434

; <label>:74                                      ; preds = %71, %38
  br label %75, !dbg !13435

; <label>:75                                      ; preds = %74, %25
  %76 = load %struct.nia*, %struct.nia** %ni, align 8, !dbg !13436
  %77 = getelementptr inbounds %struct.nia, %struct.nia* %76, i32 0, i32 2, !dbg !13438
  %78 = load i32, i32* %77, align 4, !dbg !13438
  %79 = icmp sge i32 %78, 0, !dbg !13439
  br i1 %79, label %80, label %125, !dbg !13440

; <label>:80                                      ; preds = %75
  %81 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 8), align 4, !dbg !13441
  %82 = icmp sgt i32 %81, 4, !dbg !13444
  br i1 %82, label %83, label %88, !dbg !13445

; <label>:83                                      ; preds = %80
  %84 = load i8*, i8** %fn, align 8, !dbg !13446
  %85 = load %struct.nia*, %struct.nia** %ni, align 8, !dbg !13447
  %86 = getelementptr inbounds %struct.nia, %struct.nia* %85, i32 0, i32 2, !dbg !13448
  %87 = load i32, i32* %86, align 4, !dbg !13448
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.3.451, i32 0, i32 0), i8* %84, i32 %87), !dbg !13449
  br label %88, !dbg !13449

; <label>:88                                      ; preds = %83, %80
  %89 = load %struct.nia*, %struct.nia** %ni, align 8, !dbg !13450
  %90 = getelementptr inbounds %struct.nia, %struct.nia* %89, i32 0, i32 2, !dbg !13450
  %91 = load i32, i32* %90, align 4, !dbg !13450
  %92 = srem i32 %91, 64, !dbg !13450
  %93 = zext i32 %92 to i64, !dbg !13450
  %94 = shl i64 1, %93, !dbg !13450
  %95 = load %struct.nia*, %struct.nia** %ni, align 8, !dbg !13450
  %96 = getelementptr inbounds %struct.nia, %struct.nia* %95, i32 0, i32 2, !dbg !13450
  %97 = load i32, i32* %96, align 4, !dbg !13450
  %98 = sdiv i32 %97, 64, !dbg !13450
  %99 = sext i32 %98 to i64, !dbg !13450
  %100 = load %struct.fd_set*, %struct.fd_set** %1, align 8, !dbg !13450
  %101 = getelementptr inbounds %struct.fd_set, %struct.fd_set* %100, i32 0, i32 0, !dbg !13450
  %102 = getelementptr inbounds [16 x i64], [16 x i64]* %101, i64 0, i64 %99, !dbg !13450
  %103 = load i64, i64* %102, align 8, !dbg !13450
  %104 = or i64 %103, %94, !dbg !13450
  store i64 %104, i64* %102, align 8, !dbg !13450
  %105 = load i32*, i32** %2, align 8, !dbg !13451
  %106 = icmp ne i32* %105, null, !dbg !13451
  br i1 %106, label %107, label %124, !dbg !13453

; <label>:107                                     ; preds = %88
  %108 = load i32*, i32** %2, align 8, !dbg !13454
  %109 = load i32, i32* %108, align 4, !dbg !13454
  %110 = load %struct.nia*, %struct.nia** %ni, align 8, !dbg !13454
  %111 = getelementptr inbounds %struct.nia, %struct.nia* %110, i32 0, i32 2, !dbg !13454
  %112 = load i32, i32* %111, align 4, !dbg !13454
  %113 = icmp sgt i32 %109, %112, !dbg !13454
  br i1 %113, label %114, label %117, !dbg !13454

; <label>:114                                     ; preds = %107
  %115 = load i32*, i32** %2, align 8, !dbg !13455
  %116 = load i32, i32* %115, align 4, !dbg !13455
  br label %121, !dbg !13455

; <label>:117                                     ; preds = %107
  %118 = load %struct.nia*, %struct.nia** %ni, align 8, !dbg !13457
  %119 = getelementptr inbounds %struct.nia, %struct.nia* %118, i32 0, i32 2, !dbg !13457
  %120 = load i32, i32* %119, align 4, !dbg !13457
  br label %121, !dbg !13457

; <label>:121                                     ; preds = %117, %114
  %122 = phi i32 [ %116, %114 ], [ %120, %117 ], !dbg !13459
  %123 = load i32*, i32** %2, align 8, !dbg !13461
  store i32 %122, i32* %123, align 4, !dbg !13462
  br label %124, !dbg !13463

; <label>:124                                     ; preds = %121, %88
  br label %125, !dbg !13464

; <label>:125                                     ; preds = %124, %75
  br label %126, !dbg !13465

; <label>:126                                     ; preds = %125, %24
  %127 = load %struct.generic_list*, %struct.generic_list** %gl, align 8, !dbg !13466
  %128 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %127, i32 0, i32 0, !dbg !13468
  %129 = load %struct.generic_list*, %struct.generic_list** %128, align 8, !dbg !13468
  store %struct.generic_list* %129, %struct.generic_list** %gl, align 8, !dbg !13469
  br label %10, !dbg !13470

; <label>:130                                     ; preds = %10
  br label %131, !dbg !13471

; <label>:131                                     ; preds = %130, %5
  ret void, !dbg !13472
}

; Function Attrs: nounwind uwtable
define i32 @nia_fds_isset(%struct.fd_set* %fds, i32* %sock) #0 !dbg !1921 {
  %1 = alloca i32, align 4
  %2 = alloca %struct.fd_set*, align 8
  %3 = alloca i32*, align 8
  %fn = alloca i8*, align 8
  %gl = alloca %struct.generic_list*, align 8
  %ni = alloca %struct.nia*, align 8
  store %struct.fd_set* %fds, %struct.fd_set** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.fd_set** %2, metadata !13473, metadata !2279), !dbg !13474
  store i32* %sock, i32** %3, align 8
  call void @llvm.dbg.declare(metadata i32** %3, metadata !13475, metadata !2279), !dbg !13476
  call void @llvm.dbg.declare(metadata i8** %fn, metadata !13477, metadata !2279), !dbg !13478
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.4.452, i32 0, i32 0), i8** %fn, align 8, !dbg !13478
  call void @llvm.dbg.declare(metadata %struct.generic_list** %gl, metadata !13479, metadata !2279), !dbg !13480
  call void @llvm.dbg.declare(metadata %struct.nia** %ni, metadata !13481, metadata !2279), !dbg !13482
  %4 = load i32*, i32** %3, align 8, !dbg !13483
  store i32 -1, i32* %4, align 4, !dbg !13484
  %5 = load %struct.generic_list*, %struct.generic_list** @NI_head, align 8, !dbg !13485
  %6 = icmp ne %struct.generic_list* %5, null, !dbg !13485
  br i1 %6, label %8, label %7, !dbg !13487

; <label>:7                                       ; preds = %0
  store i32 -1, i32* %1, align 4, !dbg !13488
  br label %139, !dbg !13488

; <label>:8                                       ; preds = %0
  %9 = load %struct.generic_list*, %struct.generic_list** @NI_head, align 8, !dbg !13489
  %10 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %9, i32 0, i32 0, !dbg !13491
  %11 = load %struct.generic_list*, %struct.generic_list** %10, align 8, !dbg !13491
  store %struct.generic_list* %11, %struct.generic_list** %gl, align 8, !dbg !13492
  br label %12, !dbg !13493

; <label>:12                                      ; preds = %134, %8
  %13 = load %struct.generic_list*, %struct.generic_list** %gl, align 8, !dbg !13494
  %14 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %13, i32 0, i32 2, !dbg !13497
  %15 = load i8*, i8** %14, align 8, !dbg !13497
  %16 = icmp ne i8* %15, null, !dbg !13498
  br i1 %16, label %17, label %138, !dbg !13498

; <label>:17                                      ; preds = %12
  %18 = load %struct.generic_list*, %struct.generic_list** %gl, align 8, !dbg !13499
  %19 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %18, i32 0, i32 2, !dbg !13501
  %20 = load i8*, i8** %19, align 8, !dbg !13501
  %21 = bitcast i8* %20 to %struct.nia*, !dbg !13502
  store %struct.nia* %21, %struct.nia** %ni, align 8, !dbg !13503
  %22 = load %struct.nia*, %struct.nia** %ni, align 8, !dbg !13504
  %23 = getelementptr inbounds %struct.nia, %struct.nia* %22, i32 0, i32 0, !dbg !13506
  %24 = load %struct.sockaddr*, %struct.sockaddr** %23, align 8, !dbg !13506
  %25 = icmp ne %struct.sockaddr* %24, null, !dbg !13504
  br i1 %25, label %27, label %26, !dbg !13507

; <label>:26                                      ; preds = %17
  br label %134, !dbg !13508

; <label>:27                                      ; preds = %17
  %28 = load %struct.nia*, %struct.nia** %ni, align 8, !dbg !13509
  %29 = getelementptr inbounds %struct.nia, %struct.nia* %28, i32 0, i32 1, !dbg !13511
  %30 = load i32, i32* %29, align 8, !dbg !13511
  %31 = icmp sge i32 %30, 0, !dbg !13512
  br i1 %31, label %32, label %80, !dbg !13513

; <label>:32                                      ; preds = %27
  %33 = load %struct.nia*, %struct.nia** %ni, align 8, !dbg !13514
  %34 = getelementptr inbounds %struct.nia, %struct.nia* %33, i32 0, i32 1, !dbg !13514
  %35 = load i32, i32* %34, align 8, !dbg !13514
  %36 = sdiv i32 %35, 64, !dbg !13514
  %37 = sext i32 %36 to i64, !dbg !13514
  %38 = load %struct.fd_set*, %struct.fd_set** %2, align 8, !dbg !13514
  %39 = getelementptr inbounds %struct.fd_set, %struct.fd_set* %38, i32 0, i32 0, !dbg !13514
  %40 = getelementptr inbounds [16 x i64], [16 x i64]* %39, i64 0, i64 %37, !dbg !13514
  %41 = load i64, i64* %40, align 8, !dbg !13514
  %42 = load %struct.nia*, %struct.nia** %ni, align 8, !dbg !13514
  %43 = getelementptr inbounds %struct.nia, %struct.nia* %42, i32 0, i32 1, !dbg !13514
  %44 = load i32, i32* %43, align 8, !dbg !13514
  %45 = srem i32 %44, 64, !dbg !13514
  %46 = zext i32 %45 to i64, !dbg !13514
  %47 = shl i64 1, %46, !dbg !13514
  %48 = and i64 %41, %47, !dbg !13514
  %49 = icmp ne i64 %48, 0, !dbg !13514
  br i1 %49, label %50, label %80, !dbg !13516

; <label>:50                                      ; preds = %32
  %51 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 8), align 4, !dbg !13517
  %52 = icmp sgt i32 %51, 4, !dbg !13520
  br i1 %52, label %53, label %58, !dbg !13521

; <label>:53                                      ; preds = %50
  %54 = load i8*, i8** %fn, align 8, !dbg !13522
  %55 = load %struct.nia*, %struct.nia** %ni, align 8, !dbg !13523
  %56 = getelementptr inbounds %struct.nia, %struct.nia* %55, i32 0, i32 1, !dbg !13524
  %57 = load i32, i32* %56, align 8, !dbg !13524
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5.453, i32 0, i32 0), i8* %54, i32 %57), !dbg !13525
  br label %58, !dbg !13525

; <label>:58                                      ; preds = %53, %50
  %59 = load %struct.nia*, %struct.nia** %ni, align 8, !dbg !13526
  %60 = getelementptr inbounds %struct.nia, %struct.nia* %59, i32 0, i32 1, !dbg !13526
  %61 = load i32, i32* %60, align 8, !dbg !13526
  %62 = srem i32 %61, 64, !dbg !13526
  %63 = zext i32 %62 to i64, !dbg !13526
  %64 = shl i64 1, %63, !dbg !13526
  %65 = xor i64 %64, -1, !dbg !13526
  %66 = load %struct.nia*, %struct.nia** %ni, align 8, !dbg !13526
  %67 = getelementptr inbounds %struct.nia, %struct.nia* %66, i32 0, i32 1, !dbg !13526
  %68 = load i32, i32* %67, align 8, !dbg !13526
  %69 = sdiv i32 %68, 64, !dbg !13526
  %70 = sext i32 %69 to i64, !dbg !13526
  %71 = load %struct.fd_set*, %struct.fd_set** %2, align 8, !dbg !13526
  %72 = getelementptr inbounds %struct.fd_set, %struct.fd_set* %71, i32 0, i32 0, !dbg !13526
  %73 = getelementptr inbounds [16 x i64], [16 x i64]* %72, i64 0, i64 %70, !dbg !13526
  %74 = load i64, i64* %73, align 8, !dbg !13526
  %75 = and i64 %74, %65, !dbg !13526
  store i64 %75, i64* %73, align 8, !dbg !13526
  %76 = load %struct.nia*, %struct.nia** %ni, align 8, !dbg !13527
  %77 = getelementptr inbounds %struct.nia, %struct.nia* %76, i32 0, i32 1, !dbg !13528
  %78 = load i32, i32* %77, align 8, !dbg !13528
  %79 = load i32*, i32** %3, align 8, !dbg !13529
  store i32 %78, i32* %79, align 4, !dbg !13530
  store i32 0, i32* %1, align 4, !dbg !13531
  br label %139, !dbg !13531

; <label>:80                                      ; preds = %32, %27
  %81 = load %struct.nia*, %struct.nia** %ni, align 8, !dbg !13532
  %82 = getelementptr inbounds %struct.nia, %struct.nia* %81, i32 0, i32 2, !dbg !13534
  %83 = load i32, i32* %82, align 4, !dbg !13534
  %84 = icmp sge i32 %83, 0, !dbg !13535
  br i1 %84, label %85, label %133, !dbg !13536

; <label>:85                                      ; preds = %80
  %86 = load %struct.nia*, %struct.nia** %ni, align 8, !dbg !13537
  %87 = getelementptr inbounds %struct.nia, %struct.nia* %86, i32 0, i32 2, !dbg !13537
  %88 = load i32, i32* %87, align 4, !dbg !13537
  %89 = sdiv i32 %88, 64, !dbg !13537
  %90 = sext i32 %89 to i64, !dbg !13537
  %91 = load %struct.fd_set*, %struct.fd_set** %2, align 8, !dbg !13537
  %92 = getelementptr inbounds %struct.fd_set, %struct.fd_set* %91, i32 0, i32 0, !dbg !13537
  %93 = getelementptr inbounds [16 x i64], [16 x i64]* %92, i64 0, i64 %90, !dbg !13537
  %94 = load i64, i64* %93, align 8, !dbg !13537
  %95 = load %struct.nia*, %struct.nia** %ni, align 8, !dbg !13537
  %96 = getelementptr inbounds %struct.nia, %struct.nia* %95, i32 0, i32 2, !dbg !13537
  %97 = load i32, i32* %96, align 4, !dbg !13537
  %98 = srem i32 %97, 64, !dbg !13537
  %99 = zext i32 %98 to i64, !dbg !13537
  %100 = shl i64 1, %99, !dbg !13537
  %101 = and i64 %94, %100, !dbg !13537
  %102 = icmp ne i64 %101, 0, !dbg !13537
  br i1 %102, label %103, label %133, !dbg !13539

; <label>:103                                     ; preds = %85
  %104 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 8), align 4, !dbg !13540
  %105 = icmp sgt i32 %104, 4, !dbg !13543
  br i1 %105, label %106, label %111, !dbg !13544

; <label>:106                                     ; preds = %103
  %107 = load i8*, i8** %fn, align 8, !dbg !13545
  %108 = load %struct.nia*, %struct.nia** %ni, align 8, !dbg !13546
  %109 = getelementptr inbounds %struct.nia, %struct.nia* %108, i32 0, i32 2, !dbg !13547
  %110 = load i32, i32* %109, align 4, !dbg !13547
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5.453, i32 0, i32 0), i8* %107, i32 %110), !dbg !13548
  br label %111, !dbg !13548

; <label>:111                                     ; preds = %106, %103
  %112 = load %struct.nia*, %struct.nia** %ni, align 8, !dbg !13549
  %113 = getelementptr inbounds %struct.nia, %struct.nia* %112, i32 0, i32 2, !dbg !13549
  %114 = load i32, i32* %113, align 4, !dbg !13549
  %115 = srem i32 %114, 64, !dbg !13549
  %116 = zext i32 %115 to i64, !dbg !13549
  %117 = shl i64 1, %116, !dbg !13549
  %118 = xor i64 %117, -1, !dbg !13549
  %119 = load %struct.nia*, %struct.nia** %ni, align 8, !dbg !13549
  %120 = getelementptr inbounds %struct.nia, %struct.nia* %119, i32 0, i32 2, !dbg !13549
  %121 = load i32, i32* %120, align 4, !dbg !13549
  %122 = sdiv i32 %121, 64, !dbg !13549
  %123 = sext i32 %122 to i64, !dbg !13549
  %124 = load %struct.fd_set*, %struct.fd_set** %2, align 8, !dbg !13549
  %125 = getelementptr inbounds %struct.fd_set, %struct.fd_set* %124, i32 0, i32 0, !dbg !13549
  %126 = getelementptr inbounds [16 x i64], [16 x i64]* %125, i64 0, i64 %123, !dbg !13549
  %127 = load i64, i64* %126, align 8, !dbg !13549
  %128 = and i64 %127, %118, !dbg !13549
  store i64 %128, i64* %126, align 8, !dbg !13549
  %129 = load %struct.nia*, %struct.nia** %ni, align 8, !dbg !13550
  %130 = getelementptr inbounds %struct.nia, %struct.nia* %129, i32 0, i32 2, !dbg !13551
  %131 = load i32, i32* %130, align 4, !dbg !13551
  %132 = load i32*, i32** %3, align 8, !dbg !13552
  store i32 %131, i32* %132, align 4, !dbg !13553
  store i32 1, i32* %1, align 4, !dbg !13554
  br label %139, !dbg !13554

; <label>:133                                     ; preds = %85, %80
  br label %134, !dbg !13555

; <label>:134                                     ; preds = %133, %26
  %135 = load %struct.generic_list*, %struct.generic_list** %gl, align 8, !dbg !13556
  %136 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %135, i32 0, i32 0, !dbg !13558
  %137 = load %struct.generic_list*, %struct.generic_list** %136, align 8, !dbg !13558
  store %struct.generic_list* %137, %struct.generic_list** %gl, align 8, !dbg !13559
  br label %12, !dbg !13560

; <label>:138                                     ; preds = %12
  store i32 -1, i32* %1, align 4, !dbg !13561
  br label %139, !dbg !13561

; <label>:139                                     ; preds = %138, %111, %58, %7
  %140 = load i32, i32* %1, align 4, !dbg !13562
  ret i32 %140, !dbg !13562
}

; Function Attrs: nounwind uwtable
define i32 @net_init_socketlist(i32 %port) #0 !dbg !1924 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  store i32 %port, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !13563, metadata !2279), !dbg !13564
  %3 = call %struct.generic_list* @list_init(), !dbg !13565
  store %struct.generic_list* %3, %struct.generic_list** @NI_head, align 8, !dbg !13566
  %4 = load %struct.generic_list*, %struct.generic_list** @NI_head, align 8, !dbg !13567
  %5 = icmp ne %struct.generic_list* %4, null, !dbg !13567
  br i1 %5, label %7, label %6, !dbg !13569

; <label>:6                                       ; preds = %0
  store i32 -1, i32* %1, align 4, !dbg !13570
  br label %24, !dbg !13570

; <label>:7                                       ; preds = %0
  %8 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 15), align 8, !dbg !13571
  %9 = icmp ne i32 %8, 0, !dbg !13573
  br i1 %9, label %10, label %14, !dbg !13574

; <label>:10                                      ; preds = %7
  %11 = load %struct.generic_list*, %struct.generic_list** @NI_head, align 8, !dbg !13575
  %12 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 9), align 8, !dbg !13576
  %13 = call i32 @nia_set_wildsock(%struct.generic_list* %11, i32 %12), !dbg !13577
  br label %23, !dbg !13577

; <label>:14                                      ; preds = %7
  %15 = load %struct.generic_list*, %struct.generic_list** @NI_head, align 8, !dbg !13578
  %16 = call i32 @nia_set_wildsock(%struct.generic_list* %15, i32 0), !dbg !13580
  %17 = load %struct.generic_list*, %struct.generic_list** @NI_head, align 8, !dbg !13581
  %18 = load i32, i32* %2, align 4, !dbg !13583
  %19 = call i32 @net_get_ifaddrs(%struct.generic_list* %17, i32 %18), !dbg !13584
  %20 = icmp ne i32 %19, 1, !dbg !13585
  br i1 %20, label %21, label %22, !dbg !13586

; <label>:21                                      ; preds = %14
  store i32 -1, i32* %1, align 4, !dbg !13587
  br label %24, !dbg !13587

; <label>:22                                      ; preds = %14
  br label %23

; <label>:23                                      ; preds = %22, %10
  store i32 0, i32* %1, align 4, !dbg !13588
  br label %24, !dbg !13588

; <label>:24                                      ; preds = %23, %21, %6
  %25 = load i32, i32* %1, align 4, !dbg !13589
  ret i32 %25, !dbg !13589
}

; Function Attrs: nounwind uwtable
define internal i32 @nia_set_wildsock(%struct.generic_list* %list_head, i32 %port) #0 !dbg !1940 {
  %1 = alloca i32, align 4
  %2 = alloca %struct.generic_list*, align 8
  %3 = alloca i32, align 4
  %ni = alloca %struct.nia*, align 8
  %sin = alloca %struct.sockaddr_in, align 4
  %sin6 = alloca %struct.sockaddr_in6, align 4
  store %struct.generic_list* %list_head, %struct.generic_list** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.generic_list** %2, metadata !13590, metadata !2279), !dbg !13591
  store i32 %port, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !13592, metadata !2279), !dbg !13593
  call void @llvm.dbg.declare(metadata %struct.nia** %ni, metadata !13594, metadata !2279), !dbg !13595
  %4 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 14), align 4, !dbg !13596
  %5 = icmp ne i32 %4, 0, !dbg !13598
  br i1 %5, label %32, label %6, !dbg !13599

; <label>:6                                       ; preds = %0
  call void @llvm.dbg.declare(metadata %struct.sockaddr_in* %sin, metadata !13600, metadata !2279), !dbg !13602
  %7 = bitcast %struct.sockaddr_in* %sin to i8*, !dbg !13603
  call void @llvm.memset.p0i8.i64(i8* %7, i8 0, i64 16, i32 4, i1 false), !dbg !13603
  %8 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %sin, i32 0, i32 0, !dbg !13604
  store i16 2, i16* %8, align 4, !dbg !13605
  %9 = load i32, i32* %3, align 4, !dbg !13606
  %10 = trunc i32 %9 to i16, !dbg !13606
  %11 = call zeroext i16 @htons(i16 zeroext %10) #1, !dbg !13607
  %12 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %sin, i32 0, i32 1, !dbg !13608
  store i16 %11, i16* %12, align 2, !dbg !13609
  %13 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %sin, i32 0, i32 2, !dbg !13610
  %14 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %13, i32 0, i32 0, !dbg !13611
  store i32 0, i32* %14, align 4, !dbg !13612
  %15 = bitcast %struct.sockaddr_in* %sin to %struct.sockaddr*, !dbg !13613
  %16 = call %struct.nia* @nia_alloc(%struct.sockaddr* %15, i32 -1, i32 -1), !dbg !13614
  store %struct.nia* %16, %struct.nia** %ni, align 8, !dbg !13615
  %17 = load %struct.nia*, %struct.nia** %ni, align 8, !dbg !13616
  %18 = icmp ne %struct.nia* %17, null, !dbg !13616
  br i1 %18, label %20, label %19, !dbg !13618

; <label>:19                                      ; preds = %6
  store i32 -1, i32* %1, align 4, !dbg !13619
  br label %58, !dbg !13619

; <label>:20                                      ; preds = %6
  %21 = load %struct.generic_list*, %struct.generic_list** %2, align 8, !dbg !13620
  %22 = load %struct.nia*, %struct.nia** %ni, align 8, !dbg !13622
  %23 = bitcast %struct.nia* %22 to i8*, !dbg !13622
  %24 = call i32 @list_add(%struct.generic_list* %21, i8* %23), !dbg !13623
  %25 = icmp slt i32 %24, 0, !dbg !13624
  br i1 %25, label %26, label %28, !dbg !13625

; <label>:26                                      ; preds = %20
  %27 = load %struct.nia*, %struct.nia** %ni, align 8, !dbg !13626
  call void @nia_free(%struct.nia* %27, i32 0), !dbg !13628
  store i32 -1, i32* %1, align 4, !dbg !13629
  br label %58, !dbg !13629

; <label>:28                                      ; preds = %20
  %29 = load %struct.generic_list*, %struct.generic_list** %2, align 8, !dbg !13630
  %30 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %29, i32 0, i32 0, !dbg !13631
  %31 = load %struct.generic_list*, %struct.generic_list** %30, align 8, !dbg !13631
  store %struct.generic_list* %31, %struct.generic_list** @NI_wildcard, align 8, !dbg !13632
  br label %32, !dbg !13633

; <label>:32                                      ; preds = %28, %0
  call void @llvm.dbg.declare(metadata %struct.sockaddr_in6* %sin6, metadata !13634, metadata !2279), !dbg !13637
  %33 = bitcast %struct.sockaddr_in6* %sin6 to i8*, !dbg !13638
  call void @llvm.memset.p0i8.i64(i8* %33, i8 0, i64 28, i32 4, i1 false), !dbg !13638
  %34 = getelementptr inbounds %struct.sockaddr_in6, %struct.sockaddr_in6* %sin6, i32 0, i32 0, !dbg !13639
  store i16 10, i16* %34, align 4, !dbg !13640
  %35 = load i32, i32* %3, align 4, !dbg !13641
  %36 = trunc i32 %35 to i16, !dbg !13641
  %37 = call zeroext i16 @htons(i16 zeroext %36) #1, !dbg !13642
  %38 = getelementptr inbounds %struct.sockaddr_in6, %struct.sockaddr_in6* %sin6, i32 0, i32 1, !dbg !13643
  store i16 %37, i16* %38, align 2, !dbg !13644
  %39 = getelementptr inbounds %struct.sockaddr_in6, %struct.sockaddr_in6* %sin6, i32 0, i32 3, !dbg !13645
  %40 = bitcast %struct.in6_addr* %39 to i8*, !dbg !13646
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %40, i8* bitcast (%struct.in6_addr* @in6addr_any to i8*), i64 16, i32 4, i1 false), !dbg !13646
  %41 = bitcast %struct.sockaddr_in6* %sin6 to %struct.sockaddr*, !dbg !13647
  %42 = call %struct.nia* @nia_alloc(%struct.sockaddr* %41, i32 -1, i32 -1), !dbg !13648
  store %struct.nia* %42, %struct.nia** %ni, align 8, !dbg !13649
  %43 = load %struct.nia*, %struct.nia** %ni, align 8, !dbg !13650
  %44 = icmp ne %struct.nia* %43, null, !dbg !13650
  br i1 %44, label %46, label %45, !dbg !13652

; <label>:45                                      ; preds = %32
  store i32 -1, i32* %1, align 4, !dbg !13653
  br label %58, !dbg !13653

; <label>:46                                      ; preds = %32
  %47 = load %struct.generic_list*, %struct.generic_list** %2, align 8, !dbg !13654
  %48 = load %struct.nia*, %struct.nia** %ni, align 8, !dbg !13656
  %49 = bitcast %struct.nia* %48 to i8*, !dbg !13656
  %50 = call i32 @list_add(%struct.generic_list* %47, i8* %49), !dbg !13657
  %51 = icmp slt i32 %50, 0, !dbg !13658
  br i1 %51, label %52, label %54, !dbg !13659

; <label>:52                                      ; preds = %46
  %53 = load %struct.nia*, %struct.nia** %ni, align 8, !dbg !13660
  call void @nia_free(%struct.nia* %53, i32 0), !dbg !13662
  store i32 -1, i32* %1, align 4, !dbg !13663
  br label %58, !dbg !13663

; <label>:54                                      ; preds = %46
  %55 = load %struct.generic_list*, %struct.generic_list** %2, align 8, !dbg !13664
  %56 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %55, i32 0, i32 0, !dbg !13665
  %57 = load %struct.generic_list*, %struct.generic_list** %56, align 8, !dbg !13665
  store %struct.generic_list* %57, %struct.generic_list** @NI_wildcard6, align 8, !dbg !13666
  store i32 0, i32* %1, align 4, !dbg !13667
  br label %58, !dbg !13667

; <label>:58                                      ; preds = %54, %52, %45, %26, %19
  %59 = load i32, i32* %1, align 4, !dbg !13668
  ret i32 %59, !dbg !13668
}

; Function Attrs: nounwind uwtable
define internal i32 @net_get_ifaddrs(%struct.generic_list* %list_head, i32 %port) #0 !dbg !1954 {
  %1 = alloca i32, align 4
  %2 = alloca %struct.generic_list*, align 8
  %3 = alloca i32, align 4
  %fn = alloca i8*, align 8
  %ifc = alloca %struct.ifconf, align 8
  %dummy_sock = alloca i32, align 4
  %status = alloca i32, align 4
  %buf = alloca [8192 x i8], align 16
  %cp = alloca i8*, align 8
  %valid_address = alloca i32, align 4
  %astr = alloca [256 x i8], align 16
  %ifr_p = alloca %struct.ifreq*, align 8
  %ni = alloca %struct.nia*, align 8
  %sa_p = alloca %struct.sockaddr_in6*, align 8
  %sa_p1 = alloca %struct.sockaddr_in*, align 8
  store %struct.generic_list* %list_head, %struct.generic_list** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.generic_list** %2, metadata !13669, metadata !2279), !dbg !13670
  store i32 %port, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !13671, metadata !2279), !dbg !13672
  call void @llvm.dbg.declare(metadata i8** %fn, metadata !13673, metadata !2279), !dbg !13674
  store i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.19.454, i32 0, i32 0), i8** %fn, align 8, !dbg !13674
  call void @llvm.dbg.declare(metadata %struct.ifconf* %ifc, metadata !13675, metadata !2279), !dbg !13676
  call void @llvm.dbg.declare(metadata i32* %dummy_sock, metadata !13677, metadata !2279), !dbg !13678
  store i32 -1, i32* %dummy_sock, align 4, !dbg !13678
  call void @llvm.dbg.declare(metadata i32* %status, metadata !13679, metadata !2279), !dbg !13680
  call void @llvm.dbg.declare(metadata [8192 x i8]* %buf, metadata !13681, metadata !2279), !dbg !13685
  call void @llvm.dbg.declare(metadata i8** %cp, metadata !13686, metadata !2279), !dbg !13687
  %4 = getelementptr inbounds [8192 x i8], [8192 x i8]* %buf, i32 0, i32 0, !dbg !13688
  call void @llvm.memset.p0i8.i64(i8* %4, i8 0, i64 8192, i32 16, i1 false), !dbg !13688
  %5 = getelementptr inbounds %struct.ifconf, %struct.ifconf* %ifc, i32 0, i32 0, !dbg !13689
  store i32 8192, i32* %5, align 8, !dbg !13690
  %6 = getelementptr inbounds [8192 x i8], [8192 x i8]* %buf, i32 0, i32 0, !dbg !13691
  %7 = getelementptr inbounds %struct.ifconf, %struct.ifconf* %ifc, i32 0, i32 1, !dbg !13692
  %8 = bitcast %union.anon* %7 to i8**, !dbg !13692
  store i8* %6, i8** %8, align 8, !dbg !13693
  %9 = load i32, i32* %dummy_sock, align 4, !dbg !13694
  %10 = icmp slt i32 %9, 0, !dbg !13696
  br i1 %10, label %11, label %13, !dbg !13697

; <label>:11                                      ; preds = %0
  %12 = call i32 @socket(i32 10, i32 1, i32 0) #10, !dbg !13698
  store i32 %12, i32* %dummy_sock, align 4, !dbg !13699
  br label %13, !dbg !13700

; <label>:13                                      ; preds = %11, %0
  %14 = load i32, i32* %dummy_sock, align 4, !dbg !13701
  %15 = icmp slt i32 %14, 0, !dbg !13703
  br i1 %15, label %16, label %18, !dbg !13704

; <label>:16                                      ; preds = %13
  %17 = call i32 @socket(i32 2, i32 1, i32 0) #10, !dbg !13705
  store i32 %17, i32* %dummy_sock, align 4, !dbg !13706
  br label %18, !dbg !13707

; <label>:18                                      ; preds = %16, %13
  %19 = load i32, i32* %dummy_sock, align 4, !dbg !13708
  %20 = icmp slt i32 %19, 0, !dbg !13710
  br i1 %20, label %21, label %22, !dbg !13711

; <label>:21                                      ; preds = %18
  store i32 -1, i32* %1, align 4, !dbg !13712
  br label %231, !dbg !13712

; <label>:22                                      ; preds = %18
  %23 = load i32, i32* %dummy_sock, align 4, !dbg !13713
  %24 = bitcast %struct.ifconf* %ifc to i8*, !dbg !13715
  %25 = call i32 (i32, i64, ...) @ioctl(i32 %23, i64 35090, i8* %24) #10, !dbg !13716
  %26 = icmp slt i32 %25, 0, !dbg !13717
  br i1 %26, label %27, label %31, !dbg !13718

; <label>:27                                      ; preds = %22
  %28 = load i32, i32* %dummy_sock, align 4, !dbg !13719
  %29 = call i32 @close(i32 %28), !dbg !13721
  %30 = load i8*, i8** %fn, align 8, !dbg !13722
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.20.455, i32 0, i32 0), i8* %30), !dbg !13723
  store i32 -1, i32* %1, align 4, !dbg !13724
  br label %231, !dbg !13724

; <label>:31                                      ; preds = %22
  %32 = load i32, i32* %dummy_sock, align 4, !dbg !13725
  %33 = call i32 @close(i32 %32), !dbg !13726
  store i32 1, i32* %status, align 4, !dbg !13727
  %34 = load i8*, i8** getelementptr inbounds (%struct.ifconf, %struct.ifconf* @net_get_ifaddrs.ifc_old, i32 0, i32 1, i32 0), align 8, !dbg !13728
  %35 = icmp ne i8* %34, null, !dbg !13730
  br i1 %35, label %36, label %40, !dbg !13731

; <label>:36                                      ; preds = %31
  %37 = call i32 @net_ifc_cmp(%struct.ifconf* @net_get_ifaddrs.ifc_old, %struct.ifconf* %ifc), !dbg !13732
  store i32 %37, i32* %status, align 4, !dbg !13734
  %38 = load i8*, i8** %fn, align 8, !dbg !13735
  %39 = load i32, i32* %status, align 4, !dbg !13736
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.21.458, i32 0, i32 0), i8* %38, i32 %39), !dbg !13737
  br label %40, !dbg !13738

; <label>:40                                      ; preds = %36, %31
  %41 = getelementptr inbounds [8192 x i8], [8192 x i8]* %buf, i32 0, i32 0, !dbg !13739
  store i8* %41, i8** %cp, align 8, !dbg !13740
  br label %42, !dbg !13741

; <label>:42                                      ; preds = %206, %40
  %43 = load i8*, i8** %cp, align 8, !dbg !13742
  %44 = load i8, i8* %43, align 1, !dbg !13744
  %45 = icmp ne i8 %44, 0, !dbg !13745
  br i1 %45, label %46, label %209, !dbg !13745

; <label>:46                                      ; preds = %42
  call void @llvm.dbg.declare(metadata i32* %valid_address, metadata !13746, metadata !2279), !dbg !13748
  store i32 0, i32* %valid_address, align 4, !dbg !13748
  call void @llvm.dbg.declare(metadata [256 x i8]* %astr, metadata !13749, metadata !2279), !dbg !13750
  call void @llvm.dbg.declare(metadata %struct.ifreq** %ifr_p, metadata !13751, metadata !2279), !dbg !13752
  %47 = load i8*, i8** %cp, align 8, !dbg !13753
  %48 = bitcast i8* %47 to %struct.ifreq*, !dbg !13754
  store %struct.ifreq* %48, %struct.ifreq** %ifr_p, align 8, !dbg !13755
  %49 = load %struct.ifreq*, %struct.ifreq** %ifr_p, align 8, !dbg !13756
  %50 = getelementptr inbounds %struct.ifreq, %struct.ifreq* %49, i32 0, i32 1, !dbg !13757
  %51 = bitcast %union.anon.2* %50 to %struct.sockaddr*, !dbg !13757
  %52 = getelementptr inbounds [256 x i8], [256 x i8]* %astr, i32 0, i32 0, !dbg !13758
  %53 = call i8* @sprint_inet(%struct.sockaddr* %51, i8* %52), !dbg !13759
  %54 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 13), align 8, !dbg !13760
  %55 = icmp ne i32 %54, 0, !dbg !13762
  br i1 %55, label %56, label %73, !dbg !13763

; <label>:56                                      ; preds = %46
  %57 = load %struct.ifreq*, %struct.ifreq** %ifr_p, align 8, !dbg !13764
  %58 = getelementptr inbounds %struct.ifreq, %struct.ifreq* %57, i32 0, i32 1, !dbg !13766
  %59 = bitcast %union.anon.2* %58 to %struct.sockaddr*, !dbg !13766
  %60 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %59, i32 0, i32 0, !dbg !13767
  %61 = load i16, i16* %60, align 8, !dbg !13767
  %62 = zext i16 %61 to i32, !dbg !13764
  %63 = icmp eq i32 %62, 10, !dbg !13768
  br i1 %63, label %64, label %73, !dbg !13769

; <label>:64                                      ; preds = %56
  %65 = load %struct.ifreq*, %struct.ifreq** %ifr_p, align 8, !dbg !13770
  %66 = getelementptr inbounds %struct.ifreq, %struct.ifreq* %65, i32 0, i32 0, !dbg !13772
  %67 = bitcast %union.anon.1.154* %66 to [16 x i8]*, !dbg !13772
  %68 = getelementptr inbounds [16 x i8], [16 x i8]* %67, i32 0, i32 0, !dbg !13770
  %69 = call i32 @nia_is_in_totd_iflist(i8* %68), !dbg !13773
  %70 = icmp ne i32 %69, 0, !dbg !13773
  br i1 %70, label %71, label %72, !dbg !13774

; <label>:71                                      ; preds = %64
  store i32 1, i32* %valid_address, align 4, !dbg !13775
  br label %72, !dbg !13776

; <label>:72                                      ; preds = %71, %64
  br label %73, !dbg !13777

; <label>:73                                      ; preds = %72, %56, %46
  %74 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 12), align 4, !dbg !13779
  %75 = icmp ne i32 %74, 0, !dbg !13781
  br i1 %75, label %76, label %96, !dbg !13782

; <label>:76                                      ; preds = %73
  %77 = load %struct.ifreq*, %struct.ifreq** %ifr_p, align 8, !dbg !13783
  %78 = getelementptr inbounds %struct.ifreq, %struct.ifreq* %77, i32 0, i32 1, !dbg !13785
  %79 = bitcast %union.anon.2* %78 to %struct.sockaddr*, !dbg !13785
  %80 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %79, i32 0, i32 0, !dbg !13786
  %81 = load i16, i16* %80, align 8, !dbg !13786
  %82 = zext i16 %81 to i32, !dbg !13783
  %83 = icmp eq i32 %82, 2, !dbg !13787
  br i1 %83, label %84, label %96, !dbg !13788

; <label>:84                                      ; preds = %76
  %85 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 12), align 4, !dbg !13789
  %86 = icmp ne i32 %85, 0, !dbg !13791
  br i1 %86, label %87, label %95, !dbg !13792

; <label>:87                                      ; preds = %84
  %88 = load %struct.ifreq*, %struct.ifreq** %ifr_p, align 8, !dbg !13793
  %89 = getelementptr inbounds %struct.ifreq, %struct.ifreq* %88, i32 0, i32 0, !dbg !13795
  %90 = bitcast %union.anon.1.154* %89 to [16 x i8]*, !dbg !13795
  %91 = getelementptr inbounds [16 x i8], [16 x i8]* %90, i32 0, i32 0, !dbg !13793
  %92 = call i32 @nia_is_in_totd_iflist(i8* %91), !dbg !13796
  %93 = icmp ne i32 %92, 0, !dbg !13796
  br i1 %93, label %94, label %95, !dbg !13797

; <label>:94                                      ; preds = %87
  store i32 1, i32* %valid_address, align 4, !dbg !13798
  br label %95, !dbg !13799

; <label>:95                                      ; preds = %94, %87, %84
  br label %96, !dbg !13800

; <label>:96                                      ; preds = %95, %76, %73
  %97 = load i32, i32* %valid_address, align 4, !dbg !13802
  %98 = icmp ne i32 %97, 0, !dbg !13802
  br i1 %98, label %99, label %171, !dbg !13804

; <label>:99                                      ; preds = %96
  call void @llvm.dbg.declare(metadata %struct.nia** %ni, metadata !13805, metadata !2279), !dbg !13807
  %100 = load %struct.ifreq*, %struct.ifreq** %ifr_p, align 8, !dbg !13808
  %101 = getelementptr inbounds %struct.ifreq, %struct.ifreq* %100, i32 0, i32 1, !dbg !13809
  %102 = bitcast %union.anon.2* %101 to %struct.sockaddr*, !dbg !13809
  %103 = call %struct.nia* @nia_alloc(%struct.sockaddr* %102, i32 -1, i32 -1), !dbg !13810
  store %struct.nia* %103, %struct.nia** %ni, align 8, !dbg !13811
  %104 = load %struct.nia*, %struct.nia** %ni, align 8, !dbg !13812
  %105 = icmp ne %struct.nia* %104, null, !dbg !13812
  br i1 %105, label %107, label %106, !dbg !13814

; <label>:106                                     ; preds = %99
  store i32 -1, i32* %1, align 4, !dbg !13815
  br label %231, !dbg !13815

; <label>:107                                     ; preds = %99
  %108 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 13), align 8, !dbg !13816
  %109 = icmp ne i32 %108, 0, !dbg !13818
  br i1 %109, label %110, label %128, !dbg !13819

; <label>:110                                     ; preds = %107
  %111 = load %struct.nia*, %struct.nia** %ni, align 8, !dbg !13820
  %112 = getelementptr inbounds %struct.nia, %struct.nia* %111, i32 0, i32 0, !dbg !13822
  %113 = load %struct.sockaddr*, %struct.sockaddr** %112, align 8, !dbg !13822
  %114 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %113, i32 0, i32 0, !dbg !13823
  %115 = load i16, i16* %114, align 2, !dbg !13823
  %116 = zext i16 %115 to i32, !dbg !13820
  %117 = icmp eq i32 %116, 10, !dbg !13824
  br i1 %117, label %118, label %128, !dbg !13825

; <label>:118                                     ; preds = %110
  call void @llvm.dbg.declare(metadata %struct.sockaddr_in6** %sa_p, metadata !13826, metadata !2279), !dbg !13828
  %119 = load %struct.nia*, %struct.nia** %ni, align 8, !dbg !13829
  %120 = getelementptr inbounds %struct.nia, %struct.nia* %119, i32 0, i32 0, !dbg !13830
  %121 = load %struct.sockaddr*, %struct.sockaddr** %120, align 8, !dbg !13830
  %122 = bitcast %struct.sockaddr* %121 to %struct.sockaddr_in6*, !dbg !13831
  store %struct.sockaddr_in6* %122, %struct.sockaddr_in6** %sa_p, align 8, !dbg !13832
  %123 = load i32, i32* %3, align 4, !dbg !13833
  %124 = trunc i32 %123 to i16, !dbg !13833
  %125 = call zeroext i16 @htons(i16 zeroext %124) #1, !dbg !13834
  %126 = load %struct.sockaddr_in6*, %struct.sockaddr_in6** %sa_p, align 8, !dbg !13835
  %127 = getelementptr inbounds %struct.sockaddr_in6, %struct.sockaddr_in6* %126, i32 0, i32 1, !dbg !13836
  store i16 %125, i16* %127, align 2, !dbg !13837
  br label %128, !dbg !13838

; <label>:128                                     ; preds = %118, %110, %107
  %129 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 12), align 4, !dbg !13839
  %130 = icmp ne i32 %129, 0, !dbg !13841
  br i1 %130, label %131, label %149, !dbg !13842

; <label>:131                                     ; preds = %128
  %132 = load %struct.nia*, %struct.nia** %ni, align 8, !dbg !13843
  %133 = getelementptr inbounds %struct.nia, %struct.nia* %132, i32 0, i32 0, !dbg !13845
  %134 = load %struct.sockaddr*, %struct.sockaddr** %133, align 8, !dbg !13845
  %135 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %134, i32 0, i32 0, !dbg !13846
  %136 = load i16, i16* %135, align 2, !dbg !13846
  %137 = zext i16 %136 to i32, !dbg !13843
  %138 = icmp eq i32 %137, 2, !dbg !13847
  br i1 %138, label %139, label %149, !dbg !13848

; <label>:139                                     ; preds = %131
  call void @llvm.dbg.declare(metadata %struct.sockaddr_in** %sa_p1, metadata !13849, metadata !2279), !dbg !13851
  %140 = load %struct.nia*, %struct.nia** %ni, align 8, !dbg !13852
  %141 = getelementptr inbounds %struct.nia, %struct.nia* %140, i32 0, i32 0, !dbg !13853
  %142 = load %struct.sockaddr*, %struct.sockaddr** %141, align 8, !dbg !13853
  %143 = bitcast %struct.sockaddr* %142 to %struct.sockaddr_in*, !dbg !13854
  store %struct.sockaddr_in* %143, %struct.sockaddr_in** %sa_p1, align 8, !dbg !13855
  %144 = load i32, i32* %3, align 4, !dbg !13856
  %145 = trunc i32 %144 to i16, !dbg !13856
  %146 = call zeroext i16 @htons(i16 zeroext %145) #1, !dbg !13857
  %147 = load %struct.sockaddr_in*, %struct.sockaddr_in** %sa_p1, align 8, !dbg !13858
  %148 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %147, i32 0, i32 1, !dbg !13859
  store i16 %146, i16* %148, align 2, !dbg !13860
  br label %149, !dbg !13861

; <label>:149                                     ; preds = %139, %131, %128
  %150 = getelementptr inbounds [256 x i8], [256 x i8]* %astr, i32 0, i32 0, !dbg !13862
  %151 = load i8, i8* %150, align 16, !dbg !13862
  %152 = sext i8 %151 to i32, !dbg !13862
  %153 = icmp ne i32 %152, 0, !dbg !13862
  br i1 %153, label %154, label %163, !dbg !13864

; <label>:154                                     ; preds = %149
  %155 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 8), align 4, !dbg !13865
  %156 = icmp sgt i32 %155, 3, !dbg !13867
  br i1 %156, label %157, label %163, !dbg !13868

; <label>:157                                     ; preds = %154
  %158 = getelementptr inbounds [256 x i8], [256 x i8]* %astr, i32 0, i32 0, !dbg !13869
  %159 = load %struct.ifreq*, %struct.ifreq** %ifr_p, align 8, !dbg !13870
  %160 = getelementptr inbounds %struct.ifreq, %struct.ifreq* %159, i32 0, i32 0, !dbg !13871
  %161 = bitcast %union.anon.1.154* %160 to [16 x i8]*, !dbg !13871
  %162 = getelementptr inbounds [16 x i8], [16 x i8]* %161, i32 0, i32 0, !dbg !13870
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.22.461, i32 0, i32 0), i8* %158, i8* %162), !dbg !13872
  br label %163, !dbg !13872

; <label>:163                                     ; preds = %157, %154, %149
  %164 = load %struct.generic_list*, %struct.generic_list** %2, align 8, !dbg !13873
  %165 = load %struct.nia*, %struct.nia** %ni, align 8, !dbg !13875
  %166 = bitcast %struct.nia* %165 to i8*, !dbg !13875
  %167 = call i32 @list_add(%struct.generic_list* %164, i8* %166), !dbg !13876
  %168 = icmp slt i32 %167, 0, !dbg !13877
  br i1 %168, label %169, label %170, !dbg !13878

; <label>:169                                     ; preds = %163
  store i32 -1, i32* %1, align 4, !dbg !13879
  br label %231, !dbg !13879

; <label>:170                                     ; preds = %163
  br label %186, !dbg !13880

; <label>:171                                     ; preds = %96
  %172 = getelementptr inbounds [256 x i8], [256 x i8]* %astr, i32 0, i32 0, !dbg !13881
  %173 = load i8, i8* %172, align 16, !dbg !13881
  %174 = sext i8 %173 to i32, !dbg !13881
  %175 = icmp ne i32 %174, 0, !dbg !13881
  br i1 %175, label %176, label %185, !dbg !13884

; <label>:176                                     ; preds = %171
  %177 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 8), align 4, !dbg !13885
  %178 = icmp sgt i32 %177, 3, !dbg !13887
  br i1 %178, label %179, label %185, !dbg !13888

; <label>:179                                     ; preds = %176
  %180 = getelementptr inbounds [256 x i8], [256 x i8]* %astr, i32 0, i32 0, !dbg !13889
  %181 = load %struct.ifreq*, %struct.ifreq** %ifr_p, align 8, !dbg !13890
  %182 = getelementptr inbounds %struct.ifreq, %struct.ifreq* %181, i32 0, i32 0, !dbg !13891
  %183 = bitcast %union.anon.1.154* %182 to [16 x i8]*, !dbg !13891
  %184 = getelementptr inbounds [16 x i8], [16 x i8]* %183, i32 0, i32 0, !dbg !13890
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.23.462, i32 0, i32 0), i8* %180, i8* %184), !dbg !13892
  br label %185, !dbg !13892

; <label>:185                                     ; preds = %179, %176, %171
  br label %186

; <label>:186                                     ; preds = %185, %170
  %187 = load i8*, i8** %cp, align 8, !dbg !13893
  %188 = getelementptr inbounds i8, i8* %187, i64 16, !dbg !13894
  %189 = load %struct.ifreq*, %struct.ifreq** %ifr_p, align 8, !dbg !13895
  %190 = getelementptr inbounds %struct.ifreq, %struct.ifreq* %189, i32 0, i32 1, !dbg !13895
  %191 = bitcast %union.anon.2* %190 to %struct.sockaddr*, !dbg !13895
  %192 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %191, i32 0, i32 0, !dbg !13895
  %193 = load i16, i16* %192, align 8, !dbg !13895
  %194 = zext i16 %193 to i32, !dbg !13895
  %195 = icmp eq i32 %194, 10, !dbg !13895
  br i1 %195, label %196, label %197, !dbg !13895

; <label>:196                                     ; preds = %186
  br label %206, !dbg !13896

; <label>:197                                     ; preds = %186
  %198 = load %struct.ifreq*, %struct.ifreq** %ifr_p, align 8, !dbg !13898
  %199 = getelementptr inbounds %struct.ifreq, %struct.ifreq* %198, i32 0, i32 1, !dbg !13898
  %200 = bitcast %union.anon.2* %199 to %struct.sockaddr*, !dbg !13898
  %201 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %200, i32 0, i32 0, !dbg !13898
  %202 = load i16, i16* %201, align 8, !dbg !13898
  %203 = zext i16 %202 to i32, !dbg !13898
  %204 = icmp eq i32 %203, 2, !dbg !13898
  %205 = select i1 %204, i64 16, i64 16, !dbg !13898
  br label %206, !dbg !13898

; <label>:206                                     ; preds = %197, %196
  %207 = phi i64 [ 28, %196 ], [ %205, %197 ], !dbg !13900
  %208 = getelementptr inbounds i8, i8* %188, i64 %207, !dbg !13902
  store i8* %208, i8** %cp, align 8, !dbg !13903
  br label %42, !dbg !13904

; <label>:209                                     ; preds = %42
  %210 = load i8*, i8** getelementptr inbounds (%struct.ifconf, %struct.ifconf* @net_get_ifaddrs.ifc_old, i32 0, i32 1, i32 0), align 8, !dbg !13906
  %211 = icmp ne i8* %210, null, !dbg !13908
  br i1 %211, label %212, label %214, !dbg !13909

; <label>:212                                     ; preds = %209
  %213 = load i8*, i8** getelementptr inbounds (%struct.ifconf, %struct.ifconf* @net_get_ifaddrs.ifc_old, i32 0, i32 1, i32 0), align 8, !dbg !13910
  call void @free(i8* %213) #10, !dbg !13911
  br label %214, !dbg !13911

; <label>:214                                     ; preds = %212, %209
  %215 = getelementptr inbounds %struct.ifconf, %struct.ifconf* %ifc, i32 0, i32 0, !dbg !13912
  %216 = load i32, i32* %215, align 8, !dbg !13912
  %217 = sext i32 %216 to i64, !dbg !13913
  %218 = call noalias i8* @malloc(i64 %217) #10, !dbg !13914
  store i8* %218, i8** getelementptr inbounds (%struct.ifconf, %struct.ifconf* @net_get_ifaddrs.ifc_old, i32 0, i32 1, i32 0), align 8, !dbg !13915
  %219 = load i8*, i8** getelementptr inbounds (%struct.ifconf, %struct.ifconf* @net_get_ifaddrs.ifc_old, i32 0, i32 1, i32 0), align 8, !dbg !13916
  %220 = icmp ne i8* %219, null, !dbg !13918
  br i1 %220, label %221, label %229, !dbg !13919

; <label>:221                                     ; preds = %214
  %222 = load i8*, i8** getelementptr inbounds (%struct.ifconf, %struct.ifconf* @net_get_ifaddrs.ifc_old, i32 0, i32 1, i32 0), align 8, !dbg !13920
  %223 = getelementptr inbounds [8192 x i8], [8192 x i8]* %buf, i32 0, i32 0, !dbg !13922
  %224 = getelementptr inbounds %struct.ifconf, %struct.ifconf* %ifc, i32 0, i32 0, !dbg !13923
  %225 = load i32, i32* %224, align 8, !dbg !13923
  %226 = sext i32 %225 to i64, !dbg !13924
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %222, i8* %223, i64 %226, i32 1, i1 false), !dbg !13922
  %227 = getelementptr inbounds %struct.ifconf, %struct.ifconf* %ifc, i32 0, i32 0, !dbg !13925
  %228 = load i32, i32* %227, align 8, !dbg !13925
  store i32 %228, i32* getelementptr inbounds (%struct.ifconf, %struct.ifconf* @net_get_ifaddrs.ifc_old, i32 0, i32 0), align 8, !dbg !13926
  br label %229, !dbg !13927

; <label>:229                                     ; preds = %221, %214
  %230 = load i32, i32* %status, align 4, !dbg !13928
  store i32 %230, i32* %1, align 4, !dbg !13929
  br label %231, !dbg !13929

; <label>:231                                     ; preds = %229, %169, %106, %27, %21
  %232 = load i32, i32* %1, align 4, !dbg !13930
  ret i32 %232, !dbg !13930
}

; Function Attrs: nounwind uwtable
define internal i32 @net_ifc_cmp(%struct.ifconf* %ifc1, %struct.ifconf* %ifc2) #0 !dbg !1955 {
  %1 = alloca i32, align 4
  %2 = alloca %struct.ifconf*, align 8
  %3 = alloca %struct.ifconf*, align 8
  %ifr_p1 = alloca %struct.ifreq*, align 8
  %ifr_p2 = alloca %struct.ifreq*, align 8
  %cp1 = alloca i8*, align 8
  %cp2 = alloca i8*, align 8
  %astr = alloca [256 x i8], align 16
  %bstr = alloca [256 x i8], align 16
  store %struct.ifconf* %ifc1, %struct.ifconf** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.ifconf** %2, metadata !13931, metadata !2279), !dbg !13932
  store %struct.ifconf* %ifc2, %struct.ifconf** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.ifconf** %3, metadata !13933, metadata !2279), !dbg !13934
  call void @llvm.dbg.declare(metadata %struct.ifreq** %ifr_p1, metadata !13935, metadata !2279), !dbg !13936
  call void @llvm.dbg.declare(metadata %struct.ifreq** %ifr_p2, metadata !13937, metadata !2279), !dbg !13938
  call void @llvm.dbg.declare(metadata i8** %cp1, metadata !13939, metadata !2279), !dbg !13940
  call void @llvm.dbg.declare(metadata i8** %cp2, metadata !13941, metadata !2279), !dbg !13942
  %4 = load %struct.ifconf*, %struct.ifconf** %2, align 8, !dbg !13943
  %5 = getelementptr inbounds %struct.ifconf, %struct.ifconf* %4, i32 0, i32 0, !dbg !13945
  %6 = load i32, i32* %5, align 8, !dbg !13945
  %7 = load %struct.ifconf*, %struct.ifconf** %3, align 8, !dbg !13946
  %8 = getelementptr inbounds %struct.ifconf, %struct.ifconf* %7, i32 0, i32 0, !dbg !13947
  %9 = load i32, i32* %8, align 8, !dbg !13947
  %10 = icmp ne i32 %6, %9, !dbg !13948
  br i1 %10, label %11, label %16, !dbg !13949

; <label>:11                                      ; preds = %0
  %12 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 8), align 4, !dbg !13950
  %13 = icmp sgt i32 %12, 4, !dbg !13953
  br i1 %13, label %14, label %15, !dbg !13954

; <label>:14                                      ; preds = %11
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.24.456, i32 0, i32 0)), !dbg !13955
  br label %15, !dbg !13955

; <label>:15                                      ; preds = %14, %11
  store i32 1, i32* %1, align 4, !dbg !13956
  br label %215, !dbg !13956

; <label>:16                                      ; preds = %0
  %17 = load %struct.ifconf*, %struct.ifconf** %2, align 8, !dbg !13957
  %18 = getelementptr inbounds %struct.ifconf, %struct.ifconf* %17, i32 0, i32 1, !dbg !13958
  %19 = bitcast %union.anon* %18 to i8**, !dbg !13958
  %20 = load i8*, i8** %19, align 8, !dbg !13958
  store i8* %20, i8** %cp1, align 8, !dbg !13959
  %21 = load %struct.ifconf*, %struct.ifconf** %3, align 8, !dbg !13960
  %22 = getelementptr inbounds %struct.ifconf, %struct.ifconf* %21, i32 0, i32 1, !dbg !13961
  %23 = bitcast %union.anon* %22 to i8**, !dbg !13961
  %24 = load i8*, i8** %23, align 8, !dbg !13961
  store i8* %24, i8** %cp2, align 8, !dbg !13962
  br label %25, !dbg !13963

; <label>:25                                      ; preds = %213, %153, %16
  %26 = load i8*, i8** %cp1, align 8, !dbg !13964
  %27 = load i8, i8* %26, align 1, !dbg !13966
  %28 = zext i8 %27 to i32, !dbg !13966
  %29 = icmp ne i32 %28, 0, !dbg !13966
  br i1 %29, label %30, label %35, !dbg !13967

; <label>:30                                      ; preds = %25
  %31 = load i8*, i8** %cp2, align 8, !dbg !13968
  %32 = load i8, i8* %31, align 1, !dbg !13970
  %33 = zext i8 %32 to i32, !dbg !13970
  %34 = icmp ne i32 %33, 0, !dbg !13971
  br label %35

; <label>:35                                      ; preds = %30, %25
  %36 = phi i1 [ false, %25 ], [ %34, %30 ]
  br i1 %36, label %37, label %214, !dbg !13972

; <label>:37                                      ; preds = %35
  %38 = load i8*, i8** %cp1, align 8, !dbg !13974
  %39 = bitcast i8* %38 to %struct.ifreq*, !dbg !13976
  store %struct.ifreq* %39, %struct.ifreq** %ifr_p1, align 8, !dbg !13977
  %40 = load i8*, i8** %cp2, align 8, !dbg !13978
  %41 = bitcast i8* %40 to %struct.ifreq*, !dbg !13979
  store %struct.ifreq* %41, %struct.ifreq** %ifr_p2, align 8, !dbg !13980
  %42 = load i8*, i8** %cp1, align 8, !dbg !13981
  %43 = getelementptr inbounds i8, i8* %42, i64 16, !dbg !13982
  %44 = load %struct.ifreq*, %struct.ifreq** %ifr_p1, align 8, !dbg !13983
  %45 = getelementptr inbounds %struct.ifreq, %struct.ifreq* %44, i32 0, i32 1, !dbg !13983
  %46 = bitcast %union.anon.2* %45 to %struct.sockaddr*, !dbg !13983
  %47 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %46, i32 0, i32 0, !dbg !13983
  %48 = load i16, i16* %47, align 8, !dbg !13983
  %49 = zext i16 %48 to i32, !dbg !13983
  %50 = icmp eq i32 %49, 10, !dbg !13983
  br i1 %50, label %51, label %52, !dbg !13983

; <label>:51                                      ; preds = %37
  br label %61, !dbg !13984

; <label>:52                                      ; preds = %37
  %53 = load %struct.ifreq*, %struct.ifreq** %ifr_p1, align 8, !dbg !13986
  %54 = getelementptr inbounds %struct.ifreq, %struct.ifreq* %53, i32 0, i32 1, !dbg !13986
  %55 = bitcast %union.anon.2* %54 to %struct.sockaddr*, !dbg !13986
  %56 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %55, i32 0, i32 0, !dbg !13986
  %57 = load i16, i16* %56, align 8, !dbg !13986
  %58 = zext i16 %57 to i32, !dbg !13986
  %59 = icmp eq i32 %58, 2, !dbg !13986
  %60 = select i1 %59, i64 16, i64 16, !dbg !13986
  br label %61, !dbg !13986

; <label>:61                                      ; preds = %52, %51
  %62 = phi i64 [ 28, %51 ], [ %60, %52 ], !dbg !13988
  %63 = getelementptr inbounds i8, i8* %43, i64 %62, !dbg !13990
  store i8* %63, i8** %cp1, align 8, !dbg !13991
  %64 = load i8*, i8** %cp2, align 8, !dbg !13992
  %65 = getelementptr inbounds i8, i8* %64, i64 16, !dbg !13993
  %66 = load %struct.ifreq*, %struct.ifreq** %ifr_p2, align 8, !dbg !13994
  %67 = getelementptr inbounds %struct.ifreq, %struct.ifreq* %66, i32 0, i32 1, !dbg !13994
  %68 = bitcast %union.anon.2* %67 to %struct.sockaddr*, !dbg !13994
  %69 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %68, i32 0, i32 0, !dbg !13994
  %70 = load i16, i16* %69, align 8, !dbg !13994
  %71 = zext i16 %70 to i32, !dbg !13994
  %72 = icmp eq i32 %71, 10, !dbg !13994
  br i1 %72, label %73, label %74, !dbg !13994

; <label>:73                                      ; preds = %61
  br label %83, !dbg !13995

; <label>:74                                      ; preds = %61
  %75 = load %struct.ifreq*, %struct.ifreq** %ifr_p2, align 8, !dbg !13996
  %76 = getelementptr inbounds %struct.ifreq, %struct.ifreq* %75, i32 0, i32 1, !dbg !13996
  %77 = bitcast %union.anon.2* %76 to %struct.sockaddr*, !dbg !13996
  %78 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %77, i32 0, i32 0, !dbg !13996
  %79 = load i16, i16* %78, align 8, !dbg !13996
  %80 = zext i16 %79 to i32, !dbg !13996
  %81 = icmp eq i32 %80, 2, !dbg !13996
  %82 = select i1 %81, i64 16, i64 16, !dbg !13996
  br label %83, !dbg !13996

; <label>:83                                      ; preds = %74, %73
  %84 = phi i64 [ 28, %73 ], [ %82, %74 ], !dbg !13997
  %85 = getelementptr inbounds i8, i8* %65, i64 %84, !dbg !13998
  store i8* %85, i8** %cp2, align 8, !dbg !13999
  %86 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 8), align 4, !dbg !14000
  %87 = icmp sgt i32 %86, 4, !dbg !14002
  br i1 %87, label %88, label %121, !dbg !14003

; <label>:88                                      ; preds = %83
  call void @llvm.dbg.declare(metadata [256 x i8]* %astr, metadata !14004, metadata !2279), !dbg !14006
  call void @llvm.dbg.declare(metadata [256 x i8]* %bstr, metadata !14007, metadata !2279), !dbg !14008
  %89 = load %struct.ifreq*, %struct.ifreq** %ifr_p1, align 8, !dbg !14009
  %90 = getelementptr inbounds %struct.ifreq, %struct.ifreq* %89, i32 0, i32 1, !dbg !14010
  %91 = bitcast %union.anon.2* %90 to %struct.sockaddr*, !dbg !14010
  %92 = getelementptr inbounds [256 x i8], [256 x i8]* %astr, i32 0, i32 0, !dbg !14011
  %93 = call i8* @sprint_inet(%struct.sockaddr* %91, i8* %92), !dbg !14012
  %94 = load %struct.ifreq*, %struct.ifreq** %ifr_p2, align 8, !dbg !14013
  %95 = getelementptr inbounds %struct.ifreq, %struct.ifreq* %94, i32 0, i32 1, !dbg !14014
  %96 = bitcast %union.anon.2* %95 to %struct.sockaddr*, !dbg !14014
  %97 = getelementptr inbounds [256 x i8], [256 x i8]* %bstr, i32 0, i32 0, !dbg !14015
  %98 = call i8* @sprint_inet(%struct.sockaddr* %96, i8* %97), !dbg !14016
  %99 = load %struct.ifreq*, %struct.ifreq** %ifr_p1, align 8, !dbg !14017
  %100 = getelementptr inbounds %struct.ifreq, %struct.ifreq* %99, i32 0, i32 0, !dbg !14018
  %101 = bitcast %union.anon.1.154* %100 to [16 x i8]*, !dbg !14018
  %102 = getelementptr inbounds [16 x i8], [16 x i8]* %101, i32 0, i32 0, !dbg !14017
  %103 = load %struct.ifreq*, %struct.ifreq** %ifr_p2, align 8, !dbg !14019
  %104 = getelementptr inbounds %struct.ifreq, %struct.ifreq* %103, i32 0, i32 0, !dbg !14020
  %105 = bitcast %union.anon.1.154* %104 to [16 x i8]*, !dbg !14020
  %106 = getelementptr inbounds [16 x i8], [16 x i8]* %105, i32 0, i32 0, !dbg !14019
  %107 = load %struct.ifreq*, %struct.ifreq** %ifr_p1, align 8, !dbg !14021
  %108 = getelementptr inbounds %struct.ifreq, %struct.ifreq* %107, i32 0, i32 1, !dbg !14022
  %109 = bitcast %union.anon.2* %108 to %struct.sockaddr*, !dbg !14022
  %110 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %109, i32 0, i32 0, !dbg !14023
  %111 = load i16, i16* %110, align 8, !dbg !14023
  %112 = zext i16 %111 to i32, !dbg !14021
  %113 = load %struct.ifreq*, %struct.ifreq** %ifr_p1, align 8, !dbg !14024
  %114 = getelementptr inbounds %struct.ifreq, %struct.ifreq* %113, i32 0, i32 1, !dbg !14025
  %115 = bitcast %union.anon.2* %114 to %struct.sockaddr*, !dbg !14025
  %116 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %115, i32 0, i32 0, !dbg !14026
  %117 = load i16, i16* %116, align 8, !dbg !14026
  %118 = zext i16 %117 to i32, !dbg !14024
  %119 = getelementptr inbounds [256 x i8], [256 x i8]* %astr, i32 0, i32 0, !dbg !14027
  %120 = getelementptr inbounds [256 x i8], [256 x i8]* %bstr, i32 0, i32 0, !dbg !14028
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.25.457, i32 0, i32 0), i8* %102, i8* %106, i32 %112, i32 %118, i8* %119, i8* %120), !dbg !14029
  br label %121, !dbg !14030

; <label>:121                                     ; preds = %88, %83
  %122 = load %struct.ifreq*, %struct.ifreq** %ifr_p1, align 8, !dbg !14031
  %123 = getelementptr inbounds %struct.ifreq, %struct.ifreq* %122, i32 0, i32 1, !dbg !14033
  %124 = bitcast %union.anon.2* %123 to %struct.sockaddr*, !dbg !14033
  %125 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %124, i32 0, i32 0, !dbg !14034
  %126 = load i16, i16* %125, align 8, !dbg !14034
  %127 = zext i16 %126 to i32, !dbg !14031
  %128 = icmp ne i32 %127, 2, !dbg !14035
  br i1 %128, label %129, label %155, !dbg !14036

; <label>:129                                     ; preds = %121
  %130 = load %struct.ifreq*, %struct.ifreq** %ifr_p2, align 8, !dbg !14037
  %131 = getelementptr inbounds %struct.ifreq, %struct.ifreq* %130, i32 0, i32 1, !dbg !14038
  %132 = bitcast %union.anon.2* %131 to %struct.sockaddr*, !dbg !14038
  %133 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %132, i32 0, i32 0, !dbg !14039
  %134 = load i16, i16* %133, align 8, !dbg !14039
  %135 = zext i16 %134 to i32, !dbg !14037
  %136 = icmp ne i32 %135, 2, !dbg !14040
  br i1 %136, label %137, label %155, !dbg !14041

; <label>:137                                     ; preds = %129
  %138 = load %struct.ifreq*, %struct.ifreq** %ifr_p1, align 8, !dbg !14042
  %139 = getelementptr inbounds %struct.ifreq, %struct.ifreq* %138, i32 0, i32 1, !dbg !14044
  %140 = bitcast %union.anon.2* %139 to %struct.sockaddr*, !dbg !14044
  %141 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %140, i32 0, i32 0, !dbg !14045
  %142 = load i16, i16* %141, align 8, !dbg !14045
  %143 = zext i16 %142 to i32, !dbg !14042
  %144 = icmp ne i32 %143, 10, !dbg !14046
  br i1 %144, label %145, label %154, !dbg !14047

; <label>:145                                     ; preds = %137
  %146 = load %struct.ifreq*, %struct.ifreq** %ifr_p2, align 8, !dbg !14048
  %147 = getelementptr inbounds %struct.ifreq, %struct.ifreq* %146, i32 0, i32 1, !dbg !14049
  %148 = bitcast %union.anon.2* %147 to %struct.sockaddr*, !dbg !14049
  %149 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %148, i32 0, i32 0, !dbg !14050
  %150 = load i16, i16* %149, align 8, !dbg !14050
  %151 = zext i16 %150 to i32, !dbg !14048
  %152 = icmp ne i32 %151, 10, !dbg !14051
  br i1 %152, label %153, label %154, !dbg !14052

; <label>:153                                     ; preds = %145
  br label %25, !dbg !14054

; <label>:154                                     ; preds = %145, %137
  br label %155, !dbg !14055

; <label>:155                                     ; preds = %154, %129, %121
  %156 = load %struct.ifreq*, %struct.ifreq** %ifr_p1, align 8, !dbg !14057
  %157 = getelementptr inbounds %struct.ifreq, %struct.ifreq* %156, i32 0, i32 1, !dbg !14059
  %158 = bitcast %union.anon.2* %157 to %struct.sockaddr*, !dbg !14059
  %159 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %158, i32 0, i32 0, !dbg !14060
  %160 = load i16, i16* %159, align 8, !dbg !14060
  %161 = zext i16 %160 to i32, !dbg !14057
  %162 = load %struct.ifreq*, %struct.ifreq** %ifr_p2, align 8, !dbg !14061
  %163 = getelementptr inbounds %struct.ifreq, %struct.ifreq* %162, i32 0, i32 1, !dbg !14062
  %164 = bitcast %union.anon.2* %163 to %struct.sockaddr*, !dbg !14062
  %165 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %164, i32 0, i32 0, !dbg !14063
  %166 = load i16, i16* %165, align 8, !dbg !14063
  %167 = zext i16 %166 to i32, !dbg !14061
  %168 = icmp ne i32 %161, %167, !dbg !14064
  br i1 %168, label %169, label %170, !dbg !14065

; <label>:169                                     ; preds = %155
  store i32 1, i32* %1, align 4, !dbg !14066
  br label %215, !dbg !14066

; <label>:170                                     ; preds = %155
  %171 = load %struct.ifreq*, %struct.ifreq** %ifr_p1, align 8, !dbg !14067
  %172 = getelementptr inbounds %struct.ifreq, %struct.ifreq* %171, i32 0, i32 0, !dbg !14069
  %173 = bitcast %union.anon.1.154* %172 to [16 x i8]*, !dbg !14069
  %174 = getelementptr inbounds [16 x i8], [16 x i8]* %173, i32 0, i32 0, !dbg !14067
  %175 = load %struct.ifreq*, %struct.ifreq** %ifr_p2, align 8, !dbg !14070
  %176 = getelementptr inbounds %struct.ifreq, %struct.ifreq* %175, i32 0, i32 0, !dbg !14071
  %177 = bitcast %union.anon.1.154* %176 to [16 x i8]*, !dbg !14071
  %178 = getelementptr inbounds [16 x i8], [16 x i8]* %177, i32 0, i32 0, !dbg !14070
  %179 = call i32 @strcmp(i8* %174, i8* %178) #9, !dbg !14072
  %180 = icmp ne i32 %179, 0, !dbg !14072
  br i1 %180, label %181, label %182, !dbg !14073

; <label>:181                                     ; preds = %170
  store i32 1, i32* %1, align 4, !dbg !14074
  br label %215, !dbg !14074

; <label>:182                                     ; preds = %170
  %183 = load %struct.ifreq*, %struct.ifreq** %ifr_p1, align 8, !dbg !14075
  %184 = getelementptr inbounds %struct.ifreq, %struct.ifreq* %183, i32 0, i32 1, !dbg !14077
  %185 = bitcast %union.anon.2* %184 to %struct.sockaddr*, !dbg !14077
  %186 = bitcast %struct.sockaddr* %185 to i8*, !dbg !14078
  %187 = load %struct.ifreq*, %struct.ifreq** %ifr_p2, align 8, !dbg !14079
  %188 = getelementptr inbounds %struct.ifreq, %struct.ifreq* %187, i32 0, i32 1, !dbg !14080
  %189 = bitcast %union.anon.2* %188 to %struct.sockaddr*, !dbg !14080
  %190 = bitcast %struct.sockaddr* %189 to i8*, !dbg !14081
  %191 = load %struct.ifreq*, %struct.ifreq** %ifr_p1, align 8, !dbg !14082
  %192 = getelementptr inbounds %struct.ifreq, %struct.ifreq* %191, i32 0, i32 1, !dbg !14082
  %193 = bitcast %union.anon.2* %192 to %struct.sockaddr*, !dbg !14082
  %194 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %193, i32 0, i32 0, !dbg !14082
  %195 = load i16, i16* %194, align 8, !dbg !14082
  %196 = zext i16 %195 to i32, !dbg !14082
  %197 = icmp eq i32 %196, 10, !dbg !14082
  br i1 %197, label %198, label %199, !dbg !14082

; <label>:198                                     ; preds = %182
  br label %208, !dbg !14083

; <label>:199                                     ; preds = %182
  %200 = load %struct.ifreq*, %struct.ifreq** %ifr_p1, align 8, !dbg !14085
  %201 = getelementptr inbounds %struct.ifreq, %struct.ifreq* %200, i32 0, i32 1, !dbg !14085
  %202 = bitcast %union.anon.2* %201 to %struct.sockaddr*, !dbg !14085
  %203 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %202, i32 0, i32 0, !dbg !14085
  %204 = load i16, i16* %203, align 8, !dbg !14085
  %205 = zext i16 %204 to i32, !dbg !14085
  %206 = icmp eq i32 %205, 2, !dbg !14085
  %207 = select i1 %206, i64 16, i64 16, !dbg !14085
  br label %208, !dbg !14085

; <label>:208                                     ; preds = %199, %198
  %209 = phi i64 [ 28, %198 ], [ %207, %199 ], !dbg !14087
  %210 = call i32 @memcmp(i8* %186, i8* %190, i64 %209) #9, !dbg !14089
  %211 = icmp ne i32 %210, 0, !dbg !14089
  br i1 %211, label %212, label %213, !dbg !14089

; <label>:212                                     ; preds = %208
  store i32 1, i32* %1, align 4, !dbg !14090
  br label %215, !dbg !14090

; <label>:213                                     ; preds = %208
  br label %25, !dbg !14091

; <label>:214                                     ; preds = %35
  store i32 0, i32* %1, align 4, !dbg !14093
  br label %215, !dbg !14093

; <label>:215                                     ; preds = %214, %212, %181, %169, %15
  %216 = load i32, i32* %1, align 4, !dbg !14094
  ret i32 %216, !dbg !14094
}

; Function Attrs: nounwind uwtable
define internal i32 @nia_is_in_totd_iflist(i8* %ifname) #0 !dbg !1967 {
  %1 = alloca i32, align 4
  %2 = alloca i8*, align 8
  %ifp = alloca i8**, align 8
  store i8* %ifname, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !14095, metadata !2279), !dbg !14096
  call void @llvm.dbg.declare(metadata i8*** %ifp, metadata !14097, metadata !2279), !dbg !14098
  store i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 24, i32 0), i8*** %ifp, align 8, !dbg !14099
  br label %3, !dbg !14100

; <label>:3                                       ; preds = %26, %0
  %4 = load i8**, i8*** %ifp, align 8, !dbg !14101
  %5 = load i8*, i8** %4, align 8, !dbg !14103
  %6 = icmp ne i8* %5, null, !dbg !14104
  br i1 %6, label %7, label %29, !dbg !14104

; <label>:7                                       ; preds = %3
  %8 = load i8**, i8*** %ifp, align 8, !dbg !14105
  %9 = load i8*, i8** %8, align 8, !dbg !14108
  %10 = call i32 @strcmp(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.26.459, i32 0, i32 0), i8* %9) #9, !dbg !14109
  %11 = icmp ne i32 %10, 0, !dbg !14109
  br i1 %11, label %13, label %12, !dbg !14110

; <label>:12                                      ; preds = %7
  store i32 1, i32* %1, align 4, !dbg !14111
  br label %30, !dbg !14111

; <label>:13                                      ; preds = %7
  %14 = load i8**, i8*** %ifp, align 8, !dbg !14112
  %15 = load i8*, i8** %14, align 8, !dbg !14114
  %16 = call i32 @strcmp(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.27.460, i32 0, i32 0), i8* %15) #9, !dbg !14115
  %17 = icmp ne i32 %16, 0, !dbg !14115
  br i1 %17, label %19, label %18, !dbg !14116

; <label>:18                                      ; preds = %13
  store i32 1, i32* %1, align 4, !dbg !14117
  br label %30, !dbg !14117

; <label>:19                                      ; preds = %13
  %20 = load i8*, i8** %2, align 8, !dbg !14118
  %21 = load i8**, i8*** %ifp, align 8, !dbg !14120
  %22 = load i8*, i8** %21, align 8, !dbg !14121
  %23 = call i32 @strcmp(i8* %20, i8* %22) #9, !dbg !14122
  %24 = icmp ne i32 %23, 0, !dbg !14122
  br i1 %24, label %26, label %25, !dbg !14123

; <label>:25                                      ; preds = %19
  store i32 1, i32* %1, align 4, !dbg !14124
  br label %30, !dbg !14124

; <label>:26                                      ; preds = %19
  %27 = load i8**, i8*** %ifp, align 8, !dbg !14125
  %28 = getelementptr inbounds i8*, i8** %27, i32 1, !dbg !14125
  store i8** %28, i8*** %ifp, align 8, !dbg !14125
  br label %3, !dbg !14126

; <label>:29                                      ; preds = %3
  store i32 0, i32* %1, align 4, !dbg !14128
  br label %30, !dbg !14128

; <label>:30                                      ; preds = %29, %25, %18, %12
  %31 = load i32, i32* %1, align 4, !dbg !14129
  ret i32 %31, !dbg !14129
}

; Function Attrs: nounwind uwtable
define i32 @net_reinit_socketlist(i32 %port, i32 %force_update) #0 !dbg !1925 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %newlist = alloca %struct.generic_list*, align 8
  store i32 %port, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !14130, metadata !2279), !dbg !14131
  store i32 %force_update, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !14132, metadata !2279), !dbg !14133
  call void @llvm.dbg.declare(metadata %struct.generic_list** %newlist, metadata !14134, metadata !2279), !dbg !14135
  %4 = call %struct.generic_list* @list_init(), !dbg !14136
  store %struct.generic_list* %4, %struct.generic_list** %newlist, align 8, !dbg !14137
  %5 = load %struct.generic_list*, %struct.generic_list** %newlist, align 8, !dbg !14138
  %6 = icmp ne %struct.generic_list* %5, null, !dbg !14138
  br i1 %6, label %8, label %7, !dbg !14140

; <label>:7                                       ; preds = %0
  store i32 -1, i32* %1, align 4, !dbg !14141
  br label %41, !dbg !14141

; <label>:8                                       ; preds = %0
  %9 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 15), align 8, !dbg !14142
  %10 = icmp ne i32 %9, 0, !dbg !14144
  br i1 %10, label %11, label %23, !dbg !14145

; <label>:11                                      ; preds = %8
  %12 = load i32, i32* %3, align 4, !dbg !14146
  %13 = icmp ne i32 %12, 0, !dbg !14146
  br i1 %13, label %14, label %21, !dbg !14149

; <label>:14                                      ; preds = %11
  %15 = load %struct.generic_list*, %struct.generic_list** @NI_head, align 8, !dbg !14150
  call void @nia_list_destroy(%struct.generic_list* %15), !dbg !14152
  %16 = load %struct.generic_list*, %struct.generic_list** %newlist, align 8, !dbg !14153
  %17 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 9), align 8, !dbg !14154
  %18 = call i32 @nia_set_wildsock(%struct.generic_list* %16, i32 %17), !dbg !14155
  %19 = load %struct.generic_list*, %struct.generic_list** %newlist, align 8, !dbg !14156
  store %struct.generic_list* %19, %struct.generic_list** @NI_head, align 8, !dbg !14157
  %20 = call i32 @net_bind_socketlist(), !dbg !14158
  store i32 1, i32* %1, align 4, !dbg !14159
  br label %41, !dbg !14159

; <label>:21                                      ; preds = %11
  %22 = load %struct.generic_list*, %struct.generic_list** %newlist, align 8, !dbg !14160
  call void @nia_list_destroy(%struct.generic_list* %22), !dbg !14162
  store i32 0, i32* %1, align 4, !dbg !14163
  br label %41, !dbg !14163

; <label>:23                                      ; preds = %8
  %24 = load %struct.generic_list*, %struct.generic_list** %newlist, align 8, !dbg !14164
  %25 = load i32, i32* %2, align 4, !dbg !14165
  %26 = call i32 @net_get_ifaddrs(%struct.generic_list* %24, i32 %25), !dbg !14166
  switch i32 %26, label %39 [
    i32 0, label %27
    i32 1, label %33
  ], !dbg !14167

; <label>:27                                      ; preds = %23
  %28 = load i32, i32* %3, align 4, !dbg !14168
  %29 = icmp ne i32 %28, 0, !dbg !14168
  br i1 %29, label %32, label %30, !dbg !14171

; <label>:30                                      ; preds = %27
  %31 = load %struct.generic_list*, %struct.generic_list** %newlist, align 8, !dbg !14172
  call void @nia_list_destroy(%struct.generic_list* %31), !dbg !14174
  store i32 0, i32* %1, align 4, !dbg !14175
  br label %41, !dbg !14175

; <label>:32                                      ; preds = %27
  br label %33, !dbg !14176

; <label>:33                                      ; preds = %23, %32
  %34 = load %struct.generic_list*, %struct.generic_list** @NI_head, align 8, !dbg !14178
  call void @nia_list_destroy(%struct.generic_list* %34), !dbg !14179
  %35 = load %struct.generic_list*, %struct.generic_list** %newlist, align 8, !dbg !14180
  %36 = call i32 @nia_set_wildsock(%struct.generic_list* %35, i32 0), !dbg !14181
  %37 = load %struct.generic_list*, %struct.generic_list** %newlist, align 8, !dbg !14182
  store %struct.generic_list* %37, %struct.generic_list** @NI_head, align 8, !dbg !14183
  %38 = call i32 @net_bind_socketlist(), !dbg !14184
  store i32 1, i32* %1, align 4, !dbg !14185
  br label %41, !dbg !14185

; <label>:39                                      ; preds = %23
  %40 = load %struct.generic_list*, %struct.generic_list** %newlist, align 8, !dbg !14186
  call void @nia_list_destroy(%struct.generic_list* %40), !dbg !14187
  store i32 -1, i32* %1, align 4, !dbg !14188
  br label %41, !dbg !14188

; <label>:41                                      ; preds = %39, %33, %30, %21, %14, %7
  %42 = load i32, i32* %1, align 4, !dbg !14189
  ret i32 %42, !dbg !14189
}

; Function Attrs: nounwind uwtable
define internal void @nia_list_destroy(%struct.generic_list* %list_head) #0 !dbg !1951 {
  %1 = alloca %struct.generic_list*, align 8
  store %struct.generic_list* %list_head, %struct.generic_list** %1, align 8
  call void @llvm.dbg.declare(metadata %struct.generic_list** %1, metadata !14190, metadata !2279), !dbg !14191
  %2 = load %struct.generic_list*, %struct.generic_list** %1, align 8, !dbg !14192
  call void @list_destroy(%struct.generic_list* %2, void (i8*)* @nia_free_closev), !dbg !14193
  ret void, !dbg !14194
}

; Function Attrs: nounwind uwtable
define i32 @net_bind_socketlist() #0 !dbg !1928 {
  %1 = alloca i32, align 4
  %gl = alloca %struct.generic_list*, align 8
  %ni = alloca %struct.nia*, align 8
  %s = alloca i32, align 4
  call void @llvm.dbg.declare(metadata %struct.generic_list** %gl, metadata !14195, metadata !2279), !dbg !14196
  call void @llvm.dbg.declare(metadata %struct.nia** %ni, metadata !14197, metadata !2279), !dbg !14198
  call void @llvm.dbg.declare(metadata i32* %s, metadata !14199, metadata !2279), !dbg !14200
  %2 = load %struct.generic_list*, %struct.generic_list** @NI_head, align 8, !dbg !14201
  %3 = icmp ne %struct.generic_list* %2, null, !dbg !14201
  br i1 %3, label %5, label %4, !dbg !14203

; <label>:4                                       ; preds = %0
  store i32 -1, i32* %1, align 4, !dbg !14204
  br label %45, !dbg !14204

; <label>:5                                       ; preds = %0
  store i32 0, i32* %s, align 4, !dbg !14205
  %6 = load %struct.generic_list*, %struct.generic_list** @NI_head, align 8, !dbg !14206
  %7 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %6, i32 0, i32 0, !dbg !14208
  %8 = load %struct.generic_list*, %struct.generic_list** %7, align 8, !dbg !14208
  store %struct.generic_list* %8, %struct.generic_list** %gl, align 8, !dbg !14209
  br label %9, !dbg !14210

; <label>:9                                       ; preds = %39, %5
  %10 = load %struct.generic_list*, %struct.generic_list** %gl, align 8, !dbg !14211
  %11 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %10, i32 0, i32 2, !dbg !14214
  %12 = load i8*, i8** %11, align 8, !dbg !14214
  %13 = icmp ne i8* %12, null, !dbg !14215
  br i1 %13, label %14, label %43, !dbg !14215

; <label>:14                                      ; preds = %9
  %15 = load %struct.generic_list*, %struct.generic_list** %gl, align 8, !dbg !14216
  %16 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %15, i32 0, i32 2, !dbg !14218
  %17 = load i8*, i8** %16, align 8, !dbg !14218
  %18 = bitcast i8* %17 to %struct.nia*, !dbg !14219
  store %struct.nia* %18, %struct.nia** %ni, align 8, !dbg !14220
  %19 = load %struct.nia*, %struct.nia** %ni, align 8, !dbg !14221
  %20 = getelementptr inbounds %struct.nia, %struct.nia* %19, i32 0, i32 0, !dbg !14223
  %21 = load %struct.sockaddr*, %struct.sockaddr** %20, align 8, !dbg !14223
  %22 = icmp ne %struct.sockaddr* %21, null, !dbg !14221
  br i1 %22, label %24, label %23, !dbg !14224

; <label>:23                                      ; preds = %14
  br label %39, !dbg !14225

; <label>:24                                      ; preds = %14
  %25 = load %struct.nia*, %struct.nia** %ni, align 8, !dbg !14226
  %26 = call i32 @net_mesg_socket(%struct.nia* %25), !dbg !14228
  %27 = icmp sge i32 %26, 0, !dbg !14229
  br i1 %27, label %28, label %31, !dbg !14230

; <label>:28                                      ; preds = %24
  %29 = load i32, i32* %s, align 4, !dbg !14231
  %30 = add nsw i32 %29, 1, !dbg !14231
  store i32 %30, i32* %s, align 4, !dbg !14231
  br label %31, !dbg !14232

; <label>:31                                      ; preds = %28, %24
  %32 = load %struct.nia*, %struct.nia** %ni, align 8, !dbg !14233
  %33 = call i32 @net_stream_socket(%struct.nia* %32), !dbg !14235
  %34 = icmp sge i32 %33, 0, !dbg !14236
  br i1 %34, label %35, label %38, !dbg !14237

; <label>:35                                      ; preds = %31
  %36 = load i32, i32* %s, align 4, !dbg !14238
  %37 = add nsw i32 %36, 1, !dbg !14238
  store i32 %37, i32* %s, align 4, !dbg !14238
  br label %38, !dbg !14239

; <label>:38                                      ; preds = %35, %31
  br label %39, !dbg !14240

; <label>:39                                      ; preds = %38, %23
  %40 = load %struct.generic_list*, %struct.generic_list** %gl, align 8, !dbg !14241
  %41 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %40, i32 0, i32 0, !dbg !14243
  %42 = load %struct.generic_list*, %struct.generic_list** %41, align 8, !dbg !14243
  store %struct.generic_list* %42, %struct.generic_list** %gl, align 8, !dbg !14244
  br label %9, !dbg !14245

; <label>:43                                      ; preds = %9
  %44 = load i32, i32* %s, align 4, !dbg !14246
  store i32 %44, i32* %1, align 4, !dbg !14247
  br label %45, !dbg !14247

; <label>:45                                      ; preds = %43, %4
  %46 = load i32, i32* %1, align 4, !dbg !14248
  ret i32 %46, !dbg !14248
}

; Function Attrs: nounwind uwtable
define i32 @net_mesg_socket(%struct.nia* %ni) #0 !dbg !1933 {
  %1 = alloca i32, align 4
  %2 = alloca %struct.nia*, align 8
  %fn = alloca i8*, align 8
  %astr = alloca [256 x i8], align 16
  %on = alloca i32, align 4
  %sock = alloca i32, align 4
  store %struct.nia* %ni, %struct.nia** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.nia** %2, metadata !14249, metadata !2279), !dbg !14250
  call void @llvm.dbg.declare(metadata i8** %fn, metadata !14251, metadata !2279), !dbg !14252
  store i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.8.465, i32 0, i32 0), i8** %fn, align 8, !dbg !14252
  call void @llvm.dbg.declare(metadata [256 x i8]* %astr, metadata !14253, metadata !2279), !dbg !14254
  call void @llvm.dbg.declare(metadata i32* %on, metadata !14255, metadata !2279), !dbg !14256
  store i32 1, i32* %on, align 4, !dbg !14256
  call void @llvm.dbg.declare(metadata i32* %sock, metadata !14257, metadata !2279), !dbg !14258
  %3 = load %struct.nia*, %struct.nia** %2, align 8, !dbg !14259
  %4 = getelementptr inbounds %struct.nia, %struct.nia* %3, i32 0, i32 1, !dbg !14260
  store i32 -1, i32* %4, align 8, !dbg !14261
  %5 = load %struct.nia*, %struct.nia** %2, align 8, !dbg !14262
  %6 = getelementptr inbounds %struct.nia, %struct.nia* %5, i32 0, i32 0, !dbg !14263
  %7 = load %struct.sockaddr*, %struct.sockaddr** %6, align 8, !dbg !14263
  %8 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %7, i32 0, i32 0, !dbg !14264
  %9 = load i16, i16* %8, align 2, !dbg !14264
  %10 = zext i16 %9 to i32, !dbg !14262
  %11 = call i32 @socket(i32 %10, i32 2, i32 0) #10, !dbg !14265
  store i32 %11, i32* %sock, align 4, !dbg !14266
  %12 = load i32, i32* %sock, align 4, !dbg !14267
  %13 = icmp slt i32 %12, 0, !dbg !14269
  br i1 %13, label %14, label %16, !dbg !14270

; <label>:14                                      ; preds = %0
  %15 = load i8*, i8** %fn, align 8, !dbg !14271
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.9.466, i32 0, i32 0), i8* %15), !dbg !14273
  store i32 -1, i32* %1, align 4, !dbg !14274
  br label %78, !dbg !14274

; <label>:16                                      ; preds = %0
  %17 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 8), align 4, !dbg !14275
  %18 = icmp sgt i32 %17, 4, !dbg !14277
  br i1 %18, label %19, label %22, !dbg !14278

; <label>:19                                      ; preds = %16
  %20 = load i8*, i8** %fn, align 8, !dbg !14279
  %21 = load i32, i32* %sock, align 4, !dbg !14280
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.10.467, i32 0, i32 0), i8* %20, i32 %21), !dbg !14281
  br label %22, !dbg !14281

; <label>:22                                      ; preds = %19, %16
  %23 = load i32, i32* %sock, align 4, !dbg !14282
  %24 = bitcast i32* %on to i8*, !dbg !14284
  %25 = call i32 @setsockopt(i32 %23, i32 1, i32 2, i8* %24, i32 4) #10, !dbg !14285
  %26 = icmp ne i32 %25, 0, !dbg !14285
  br i1 %26, label %27, label %28, !dbg !14286

; <label>:27                                      ; preds = %22
  call void (i32, i8*, ...) @syslog(i32 4, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.11.468, i32 0, i32 0)), !dbg !14287
  br label %28, !dbg !14287

; <label>:28                                      ; preds = %27, %22
  %29 = load i32, i32* %sock, align 4, !dbg !14288
  %30 = load %struct.nia*, %struct.nia** %2, align 8, !dbg !14290
  %31 = getelementptr inbounds %struct.nia, %struct.nia* %30, i32 0, i32 0, !dbg !14291
  %32 = load %struct.sockaddr*, %struct.sockaddr** %31, align 8, !dbg !14291
  %33 = load %struct.nia*, %struct.nia** %2, align 8, !dbg !14292
  %34 = getelementptr inbounds %struct.nia, %struct.nia* %33, i32 0, i32 0, !dbg !14292
  %35 = load %struct.sockaddr*, %struct.sockaddr** %34, align 8, !dbg !14292
  %36 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %35, i32 0, i32 0, !dbg !14292
  %37 = load i16, i16* %36, align 2, !dbg !14292
  %38 = zext i16 %37 to i32, !dbg !14292
  %39 = icmp eq i32 %38, 10, !dbg !14292
  br i1 %39, label %40, label %41, !dbg !14292

; <label>:40                                      ; preds = %28
  br label %50, !dbg !14293

; <label>:41                                      ; preds = %28
  %42 = load %struct.nia*, %struct.nia** %2, align 8, !dbg !14295
  %43 = getelementptr inbounds %struct.nia, %struct.nia* %42, i32 0, i32 0, !dbg !14295
  %44 = load %struct.sockaddr*, %struct.sockaddr** %43, align 8, !dbg !14295
  %45 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %44, i32 0, i32 0, !dbg !14295
  %46 = load i16, i16* %45, align 2, !dbg !14295
  %47 = zext i16 %46 to i32, !dbg !14295
  %48 = icmp eq i32 %47, 2, !dbg !14295
  %49 = select i1 %48, i64 16, i64 16, !dbg !14295
  br label %50, !dbg !14295

; <label>:50                                      ; preds = %41, %40
  %51 = phi i64 [ 28, %40 ], [ %49, %41 ], !dbg !14297
  %52 = trunc i64 %51 to i32, !dbg !14297
  %53 = call i32 @bind(i32 %29, %struct.sockaddr* %32, i32 %52) #10, !dbg !14299
  %54 = icmp slt i32 %53, 0, !dbg !14300
  br i1 %54, label %55, label %58, !dbg !14299

; <label>:55                                      ; preds = %50
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.12.469, i32 0, i32 0)), !dbg !14301
  %56 = load i32, i32* %sock, align 4, !dbg !14303
  %57 = call i32 @close(i32 %56), !dbg !14304
  store i32 -1, i32* %1, align 4, !dbg !14305
  br label %78, !dbg !14305

; <label>:58                                      ; preds = %50
  %59 = load %struct.nia*, %struct.nia** %2, align 8, !dbg !14306
  %60 = getelementptr inbounds %struct.nia, %struct.nia* %59, i32 0, i32 0, !dbg !14308
  %61 = load %struct.sockaddr*, %struct.sockaddr** %60, align 8, !dbg !14308
  %62 = bitcast %struct.sockaddr* %61 to %struct.sockaddr_in*, !dbg !14309
  %63 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %62, i32 0, i32 1, !dbg !14309
  %64 = load i16, i16* %63, align 2, !dbg !14309
  %65 = icmp ne i16 %64, 0, !dbg !14310
  br i1 %65, label %66, label %73, !dbg !14311

; <label>:66                                      ; preds = %58
  %67 = load %struct.nia*, %struct.nia** %2, align 8, !dbg !14312
  %68 = getelementptr inbounds %struct.nia, %struct.nia* %67, i32 0, i32 0, !dbg !14314
  %69 = load %struct.sockaddr*, %struct.sockaddr** %68, align 8, !dbg !14314
  %70 = getelementptr inbounds [256 x i8], [256 x i8]* %astr, i32 0, i32 0, !dbg !14315
  %71 = call i8* @sprint_inet(%struct.sockaddr* %69, i8* %70), !dbg !14316
  %72 = getelementptr inbounds [256 x i8], [256 x i8]* %astr, i32 0, i32 0, !dbg !14317
  call void (i32, i8*, ...) @syslog(i32 5, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.13.470, i32 0, i32 0), i8* %72), !dbg !14318
  br label %73, !dbg !14319

; <label>:73                                      ; preds = %66, %58
  %74 = load i32, i32* %sock, align 4, !dbg !14320
  %75 = load %struct.nia*, %struct.nia** %2, align 8, !dbg !14321
  %76 = getelementptr inbounds %struct.nia, %struct.nia* %75, i32 0, i32 1, !dbg !14322
  store i32 %74, i32* %76, align 8, !dbg !14323
  %77 = load i32, i32* %sock, align 4, !dbg !14324
  store i32 %77, i32* %1, align 4, !dbg !14325
  br label %78, !dbg !14325

; <label>:78                                      ; preds = %73, %55, %14
  %79 = load i32, i32* %1, align 4, !dbg !14326
  ret i32 %79, !dbg !14326
}

; Function Attrs: nounwind
declare i32 @setsockopt(i32, i32, i32, i8*, i32) #5

; Function Attrs: nounwind
declare i32 @bind(i32, %struct.sockaddr*, i32) #5

; Function Attrs: nounwind uwtable
define i32 @net_stream_socket(%struct.nia* %ni) #0 !dbg !1936 {
  %1 = alloca i32, align 4
  %2 = alloca %struct.nia*, align 8
  %fn = alloca i8*, align 8
  %astr = alloca [256 x i8], align 16
  %on = alloca i32, align 4
  %sock = alloca i32, align 4
  store %struct.nia* %ni, %struct.nia** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.nia** %2, metadata !14327, metadata !2279), !dbg !14328
  call void @llvm.dbg.declare(metadata i8** %fn, metadata !14329, metadata !2279), !dbg !14330
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.14.471, i32 0, i32 0), i8** %fn, align 8, !dbg !14330
  call void @llvm.dbg.declare(metadata [256 x i8]* %astr, metadata !14331, metadata !2279), !dbg !14332
  call void @llvm.dbg.declare(metadata i32* %on, metadata !14333, metadata !2279), !dbg !14334
  store i32 1, i32* %on, align 4, !dbg !14334
  call void @llvm.dbg.declare(metadata i32* %sock, metadata !14335, metadata !2279), !dbg !14336
  %3 = load %struct.nia*, %struct.nia** %2, align 8, !dbg !14337
  %4 = getelementptr inbounds %struct.nia, %struct.nia* %3, i32 0, i32 2, !dbg !14338
  store i32 -1, i32* %4, align 4, !dbg !14339
  %5 = load %struct.nia*, %struct.nia** %2, align 8, !dbg !14340
  %6 = getelementptr inbounds %struct.nia, %struct.nia* %5, i32 0, i32 0, !dbg !14342
  %7 = load %struct.sockaddr*, %struct.sockaddr** %6, align 8, !dbg !14342
  %8 = bitcast %struct.sockaddr* %7 to %struct.sockaddr_in*, !dbg !14343
  %9 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %8, i32 0, i32 1, !dbg !14343
  %10 = load i16, i16* %9, align 2, !dbg !14343
  %11 = icmp ne i16 %10, 0, !dbg !14344
  br i1 %11, label %13, label %12, !dbg !14345

; <label>:12                                      ; preds = %0
  store i32 -1, i32* %1, align 4, !dbg !14346
  br label %91, !dbg !14346

; <label>:13                                      ; preds = %0
  %14 = load %struct.nia*, %struct.nia** %2, align 8, !dbg !14347
  %15 = getelementptr inbounds %struct.nia, %struct.nia* %14, i32 0, i32 0, !dbg !14348
  %16 = load %struct.sockaddr*, %struct.sockaddr** %15, align 8, !dbg !14348
  %17 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %16, i32 0, i32 0, !dbg !14349
  %18 = load i16, i16* %17, align 2, !dbg !14349
  %19 = zext i16 %18 to i32, !dbg !14347
  %20 = call i32 @socket(i32 %19, i32 1, i32 0) #10, !dbg !14350
  store i32 %20, i32* %sock, align 4, !dbg !14351
  %21 = load i32, i32* %sock, align 4, !dbg !14352
  %22 = icmp slt i32 %21, 0, !dbg !14354
  br i1 %22, label %23, label %25, !dbg !14355

; <label>:23                                      ; preds = %13
  %24 = load i8*, i8** %fn, align 8, !dbg !14356
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.9.466, i32 0, i32 0), i8* %24), !dbg !14358
  store i32 -1, i32* %1, align 4, !dbg !14359
  br label %91, !dbg !14359

; <label>:25                                      ; preds = %13
  %26 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 8), align 4, !dbg !14360
  %27 = icmp sgt i32 %26, 4, !dbg !14362
  br i1 %27, label %28, label %31, !dbg !14363

; <label>:28                                      ; preds = %25
  %29 = load i8*, i8** %fn, align 8, !dbg !14364
  %30 = load i32, i32* %sock, align 4, !dbg !14365
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.10.467, i32 0, i32 0), i8* %29, i32 %30), !dbg !14366
  br label %31, !dbg !14366

; <label>:31                                      ; preds = %28, %25
  %32 = load i32, i32* %sock, align 4, !dbg !14367
  %33 = bitcast i32* %on to i8*, !dbg !14369
  %34 = call i32 @setsockopt(i32 %32, i32 1, i32 2, i8* %33, i32 4) #10, !dbg !14370
  %35 = icmp ne i32 %34, 0, !dbg !14370
  br i1 %35, label %36, label %37, !dbg !14371

; <label>:36                                      ; preds = %31
  call void (i32, i8*, ...) @syslog(i32 4, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.11.468, i32 0, i32 0)), !dbg !14372
  br label %37, !dbg !14372

; <label>:37                                      ; preds = %36, %31
  %38 = load i32, i32* %sock, align 4, !dbg !14373
  %39 = load %struct.nia*, %struct.nia** %2, align 8, !dbg !14375
  %40 = getelementptr inbounds %struct.nia, %struct.nia* %39, i32 0, i32 0, !dbg !14376
  %41 = load %struct.sockaddr*, %struct.sockaddr** %40, align 8, !dbg !14376
  %42 = load %struct.nia*, %struct.nia** %2, align 8, !dbg !14377
  %43 = getelementptr inbounds %struct.nia, %struct.nia* %42, i32 0, i32 0, !dbg !14377
  %44 = load %struct.sockaddr*, %struct.sockaddr** %43, align 8, !dbg !14377
  %45 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %44, i32 0, i32 0, !dbg !14377
  %46 = load i16, i16* %45, align 2, !dbg !14377
  %47 = zext i16 %46 to i32, !dbg !14377
  %48 = icmp eq i32 %47, 10, !dbg !14377
  br i1 %48, label %49, label %50, !dbg !14377

; <label>:49                                      ; preds = %37
  br label %59, !dbg !14378

; <label>:50                                      ; preds = %37
  %51 = load %struct.nia*, %struct.nia** %2, align 8, !dbg !14380
  %52 = getelementptr inbounds %struct.nia, %struct.nia* %51, i32 0, i32 0, !dbg !14380
  %53 = load %struct.sockaddr*, %struct.sockaddr** %52, align 8, !dbg !14380
  %54 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %53, i32 0, i32 0, !dbg !14380
  %55 = load i16, i16* %54, align 2, !dbg !14380
  %56 = zext i16 %55 to i32, !dbg !14380
  %57 = icmp eq i32 %56, 2, !dbg !14380
  %58 = select i1 %57, i64 16, i64 16, !dbg !14380
  br label %59, !dbg !14380

; <label>:59                                      ; preds = %50, %49
  %60 = phi i64 [ 28, %49 ], [ %58, %50 ], !dbg !14382
  %61 = trunc i64 %60 to i32, !dbg !14382
  %62 = call i32 @bind(i32 %38, %struct.sockaddr* %41, i32 %61) #10, !dbg !14384
  %63 = icmp ne i32 %62, 0, !dbg !14385
  br i1 %63, label %64, label %67, !dbg !14384

; <label>:64                                      ; preds = %59
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.15.472, i32 0, i32 0)), !dbg !14386
  %65 = load i32, i32* %sock, align 4, !dbg !14388
  %66 = call i32 @close(i32 %65), !dbg !14389
  store i32 -1, i32* %1, align 4, !dbg !14390
  br label %91, !dbg !14390

; <label>:67                                      ; preds = %59
  %68 = load i32, i32* %sock, align 4, !dbg !14391
  %69 = bitcast i32* %on to i8*, !dbg !14393
  %70 = call i32 (i32, i64, ...) @ioctl(i32 %68, i64 21537, i8* %69) #10, !dbg !14394
  %71 = icmp slt i32 %70, 0, !dbg !14395
  br i1 %71, label %72, label %73, !dbg !14396

; <label>:72                                      ; preds = %67
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.16.473, i32 0, i32 0)), !dbg !14397
  store i32 -1, i32* %1, align 4, !dbg !14399
  br label %91, !dbg !14399

; <label>:73                                      ; preds = %67
  %74 = load i32, i32* %sock, align 4, !dbg !14400
  %75 = call i32 @listen(i32 %74, i32 5) #10, !dbg !14402
  %76 = icmp ne i32 %75, 0, !dbg !14403
  br i1 %76, label %77, label %80, !dbg !14404

; <label>:77                                      ; preds = %73
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.17.474, i32 0, i32 0)), !dbg !14405
  %78 = load i32, i32* %sock, align 4, !dbg !14407
  %79 = call i32 @close(i32 %78), !dbg !14408
  store i32 -1, i32* %1, align 4, !dbg !14409
  br label %91, !dbg !14409

; <label>:80                                      ; preds = %73
  %81 = load %struct.nia*, %struct.nia** %2, align 8, !dbg !14410
  %82 = getelementptr inbounds %struct.nia, %struct.nia* %81, i32 0, i32 0, !dbg !14411
  %83 = load %struct.sockaddr*, %struct.sockaddr** %82, align 8, !dbg !14411
  %84 = getelementptr inbounds [256 x i8], [256 x i8]* %astr, i32 0, i32 0, !dbg !14412
  %85 = call i8* @sprint_inet(%struct.sockaddr* %83, i8* %84), !dbg !14413
  %86 = getelementptr inbounds [256 x i8], [256 x i8]* %astr, i32 0, i32 0, !dbg !14414
  call void (i32, i8*, ...) @syslog(i32 5, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.18.475, i32 0, i32 0), i8* %86), !dbg !14415
  %87 = load i32, i32* %sock, align 4, !dbg !14416
  %88 = load %struct.nia*, %struct.nia** %2, align 8, !dbg !14417
  %89 = getelementptr inbounds %struct.nia, %struct.nia* %88, i32 0, i32 2, !dbg !14418
  store i32 %87, i32* %89, align 4, !dbg !14419
  %90 = load i32, i32* %sock, align 4, !dbg !14420
  store i32 %90, i32* %1, align 4, !dbg !14421
  br label %91, !dbg !14421

; <label>:91                                      ; preds = %80, %77, %72, %64, %23, %12
  %92 = load i32, i32* %1, align 4, !dbg !14422
  ret i32 %92, !dbg !14422
}

; Function Attrs: nounwind
declare i32 @listen(i32, i32) #5

; Function Attrs: nounwind uwtable
define i32 @net_delete_socketlist() #0 !dbg !1929 {
  %1 = load %struct.generic_list*, %struct.generic_list** @NI_head, align 8, !dbg !14423
  call void @nia_list_destroy(%struct.generic_list* %1), !dbg !14424
  store %struct.generic_list* null, %struct.generic_list** @NI_wildcard6, align 8, !dbg !14425
  store %struct.generic_list* null, %struct.generic_list** @NI_wildcard, align 8, !dbg !14426
  store %struct.generic_list* null, %struct.generic_list** @NI_head, align 8, !dbg !14427
  ret i32 0, !dbg !14428
}

; Function Attrs: nounwind uwtable
define i32 @net_mesg_send(%struct.nia* %ni, i8* %mesg, i32 %mesg_len, %struct.sockaddr* %sa_p) #0 !dbg !1930 {
  %1 = alloca i32, align 4
  %2 = alloca %struct.nia*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %5 = alloca %struct.sockaddr*, align 8
  %fn = alloca i8*, align 8
  store %struct.nia* %ni, %struct.nia** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.nia** %2, metadata !14429, metadata !2279), !dbg !14430
  store i8* %mesg, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !14431, metadata !2279), !dbg !14432
  store i32 %mesg_len, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !14433, metadata !2279), !dbg !14434
  store %struct.sockaddr* %sa_p, %struct.sockaddr** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.sockaddr** %5, metadata !14435, metadata !2279), !dbg !14436
  call void @llvm.dbg.declare(metadata i8** %fn, metadata !14437, metadata !2279), !dbg !14438
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.6.480, i32 0, i32 0), i8** %fn, align 8, !dbg !14438
  %6 = load %struct.nia*, %struct.nia** %2, align 8, !dbg !14439
  %7 = icmp ne %struct.nia* %6, null, !dbg !14439
  br i1 %7, label %31, label %8, !dbg !14441

; <label>:8                                       ; preds = %0
  %9 = load %struct.sockaddr*, %struct.sockaddr** %5, align 8, !dbg !14442
  %10 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %9, i32 0, i32 0, !dbg !14445
  %11 = load i16, i16* %10, align 2, !dbg !14445
  %12 = zext i16 %11 to i32, !dbg !14442
  %13 = icmp eq i32 %12, 2, !dbg !14446
  br i1 %13, label %14, label %19, !dbg !14447

; <label>:14                                      ; preds = %8
  %15 = load %struct.generic_list*, %struct.generic_list** @NI_wildcard, align 8, !dbg !14448
  %16 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %15, i32 0, i32 2, !dbg !14449
  %17 = load i8*, i8** %16, align 8, !dbg !14449
  %18 = bitcast i8* %17 to %struct.nia*, !dbg !14450
  store %struct.nia* %18, %struct.nia** %2, align 8, !dbg !14451
  br label %19, !dbg !14452

; <label>:19                                      ; preds = %14, %8
  %20 = load %struct.sockaddr*, %struct.sockaddr** %5, align 8, !dbg !14453
  %21 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %20, i32 0, i32 0, !dbg !14455
  %22 = load i16, i16* %21, align 2, !dbg !14455
  %23 = zext i16 %22 to i32, !dbg !14453
  %24 = icmp eq i32 %23, 10, !dbg !14456
  br i1 %24, label %25, label %30, !dbg !14457

; <label>:25                                      ; preds = %19
  %26 = load %struct.generic_list*, %struct.generic_list** @NI_wildcard6, align 8, !dbg !14458
  %27 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %26, i32 0, i32 2, !dbg !14459
  %28 = load i8*, i8** %27, align 8, !dbg !14459
  %29 = bitcast i8* %28 to %struct.nia*, !dbg !14460
  store %struct.nia* %29, %struct.nia** %2, align 8, !dbg !14461
  br label %30, !dbg !14462

; <label>:30                                      ; preds = %25, %19
  br label %31, !dbg !14463

; <label>:31                                      ; preds = %30, %0
  %32 = load %struct.nia*, %struct.nia** %2, align 8, !dbg !14464
  %33 = icmp ne %struct.nia* %32, null, !dbg !14464
  br i1 %33, label %34, label %39, !dbg !14466

; <label>:34                                      ; preds = %31
  %35 = load %struct.nia*, %struct.nia** %2, align 8, !dbg !14467
  %36 = getelementptr inbounds %struct.nia, %struct.nia* %35, i32 0, i32 1, !dbg !14469
  %37 = load i32, i32* %36, align 8, !dbg !14469
  %38 = icmp slt i32 %37, 0, !dbg !14470
  br i1 %38, label %39, label %41, !dbg !14471

; <label>:39                                      ; preds = %34, %31
  %40 = load i8*, i8** %fn, align 8, !dbg !14472
  call void (i32, i8*, ...) @syslog(i32 4, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.7.481, i32 0, i32 0), i8* %40), !dbg !14474
  store i32 -1, i32* %1, align 4, !dbg !14475
  br label %122, !dbg !14475

; <label>:41                                      ; preds = %34
  %42 = load %struct.nia*, %struct.nia** %2, align 8, !dbg !14476
  %43 = getelementptr inbounds %struct.nia, %struct.nia* %42, i32 0, i32 0, !dbg !14478
  %44 = load %struct.sockaddr*, %struct.sockaddr** %43, align 8, !dbg !14478
  %45 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %44, i32 0, i32 0, !dbg !14479
  %46 = load i16, i16* %45, align 2, !dbg !14479
  %47 = zext i16 %46 to i32, !dbg !14476
  %48 = icmp eq i32 %47, 2, !dbg !14480
  br i1 %48, label %49, label %81, !dbg !14481

; <label>:49                                      ; preds = %41
  %50 = load %struct.sockaddr*, %struct.sockaddr** %5, align 8, !dbg !14482
  %51 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %50, i32 0, i32 0, !dbg !14484
  %52 = load i16, i16* %51, align 2, !dbg !14484
  %53 = zext i16 %52 to i32, !dbg !14482
  %54 = icmp eq i32 %53, 2, !dbg !14485
  br i1 %54, label %55, label %81, !dbg !14486

; <label>:55                                      ; preds = %49
  %56 = load %struct.nia*, %struct.nia** %2, align 8, !dbg !14487
  %57 = getelementptr inbounds %struct.nia, %struct.nia* %56, i32 0, i32 1, !dbg !14488
  %58 = load i32, i32* %57, align 8, !dbg !14488
  %59 = load i8*, i8** %3, align 8, !dbg !14489
  %60 = load i32, i32* %4, align 4, !dbg !14490
  %61 = sext i32 %60 to i64, !dbg !14490
  %62 = load %struct.sockaddr*, %struct.sockaddr** %5, align 8, !dbg !14491
  %63 = load %struct.sockaddr*, %struct.sockaddr** %5, align 8, !dbg !14492
  %64 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %63, i32 0, i32 0, !dbg !14492
  %65 = load i16, i16* %64, align 2, !dbg !14492
  %66 = zext i16 %65 to i32, !dbg !14492
  %67 = icmp eq i32 %66, 10, !dbg !14492
  br i1 %67, label %68, label %69, !dbg !14492

; <label>:68                                      ; preds = %55
  br label %76, !dbg !14493

; <label>:69                                      ; preds = %55
  %70 = load %struct.sockaddr*, %struct.sockaddr** %5, align 8, !dbg !14494
  %71 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %70, i32 0, i32 0, !dbg !14494
  %72 = load i16, i16* %71, align 2, !dbg !14494
  %73 = zext i16 %72 to i32, !dbg !14494
  %74 = icmp eq i32 %73, 2, !dbg !14494
  %75 = select i1 %74, i64 16, i64 16, !dbg !14494
  br label %76, !dbg !14494

; <label>:76                                      ; preds = %69, %68
  %77 = phi i64 [ 28, %68 ], [ %75, %69 ], !dbg !14496
  %78 = trunc i64 %77 to i32, !dbg !14496
  %79 = call i64 @sendto(i32 %58, i8* %59, i64 %61, i32 0, %struct.sockaddr* %62, i32 %78), !dbg !14498
  %80 = trunc i64 %79 to i32, !dbg !14498
  store i32 %80, i32* %1, align 4, !dbg !14499
  br label %122, !dbg !14499

; <label>:81                                      ; preds = %49, %41
  %82 = load %struct.nia*, %struct.nia** %2, align 8, !dbg !14500
  %83 = getelementptr inbounds %struct.nia, %struct.nia* %82, i32 0, i32 0, !dbg !14502
  %84 = load %struct.sockaddr*, %struct.sockaddr** %83, align 8, !dbg !14502
  %85 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %84, i32 0, i32 0, !dbg !14503
  %86 = load i16, i16* %85, align 2, !dbg !14503
  %87 = zext i16 %86 to i32, !dbg !14500
  %88 = icmp eq i32 %87, 10, !dbg !14504
  br i1 %88, label %89, label %121, !dbg !14505

; <label>:89                                      ; preds = %81
  %90 = load %struct.sockaddr*, %struct.sockaddr** %5, align 8, !dbg !14506
  %91 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %90, i32 0, i32 0, !dbg !14508
  %92 = load i16, i16* %91, align 2, !dbg !14508
  %93 = zext i16 %92 to i32, !dbg !14506
  %94 = icmp eq i32 %93, 10, !dbg !14509
  br i1 %94, label %95, label %121, !dbg !14510

; <label>:95                                      ; preds = %89
  %96 = load %struct.nia*, %struct.nia** %2, align 8, !dbg !14511
  %97 = getelementptr inbounds %struct.nia, %struct.nia* %96, i32 0, i32 1, !dbg !14512
  %98 = load i32, i32* %97, align 8, !dbg !14512
  %99 = load i8*, i8** %3, align 8, !dbg !14513
  %100 = load i32, i32* %4, align 4, !dbg !14514
  %101 = sext i32 %100 to i64, !dbg !14514
  %102 = load %struct.sockaddr*, %struct.sockaddr** %5, align 8, !dbg !14515
  %103 = load %struct.sockaddr*, %struct.sockaddr** %5, align 8, !dbg !14516
  %104 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %103, i32 0, i32 0, !dbg !14516
  %105 = load i16, i16* %104, align 2, !dbg !14516
  %106 = zext i16 %105 to i32, !dbg !14516
  %107 = icmp eq i32 %106, 10, !dbg !14516
  br i1 %107, label %108, label %109, !dbg !14516

; <label>:108                                     ; preds = %95
  br label %116, !dbg !14517

; <label>:109                                     ; preds = %95
  %110 = load %struct.sockaddr*, %struct.sockaddr** %5, align 8, !dbg !14518
  %111 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %110, i32 0, i32 0, !dbg !14518
  %112 = load i16, i16* %111, align 2, !dbg !14518
  %113 = zext i16 %112 to i32, !dbg !14518
  %114 = icmp eq i32 %113, 2, !dbg !14518
  %115 = select i1 %114, i64 16, i64 16, !dbg !14518
  br label %116, !dbg !14518

; <label>:116                                     ; preds = %109, %108
  %117 = phi i64 [ 28, %108 ], [ %115, %109 ], !dbg !14520
  %118 = trunc i64 %117 to i32, !dbg !14520
  %119 = call i64 @sendto(i32 %98, i8* %99, i64 %101, i32 0, %struct.sockaddr* %102, i32 %118), !dbg !14522
  %120 = trunc i64 %119 to i32, !dbg !14522
  store i32 %120, i32* %1, align 4, !dbg !14523
  br label %122, !dbg !14523

; <label>:121                                     ; preds = %89, %81
  store i32 -1, i32* %1, align 4, !dbg !14524
  br label %122, !dbg !14524

; <label>:122                                     ; preds = %121, %116, %76, %39
  %123 = load i32, i32* %1, align 4, !dbg !14525
  ret i32 %123, !dbg !14525
}

declare i64 @sendto(i32, i8*, i64, i32, %struct.sockaddr*, i32) #2

; Function Attrs: nounwind uwtable
define i32 @conv_scoped_query(%struct.context.165* %context) #0 !dbg !2027 {
  %1 = alloca i32, align 4
  %2 = alloca %struct.context.165*, align 8
  %me = alloca %struct.sockaddr_in6*, align 8
  %peer = alloca %struct.sockaddr_in6*, align 8
  %ni = alloca %struct.nia*, align 8
  %__a = alloca %struct.in6_addr*, align 8
  %__b = alloca %struct.in6_addr*, align 8
  %3 = alloca i32, align 4
  %__a1 = alloca %struct.in6_addr*, align 8
  %4 = alloca i32, align 4
  %__a2 = alloca %struct.in6_addr*, align 8
  %5 = alloca i32, align 4
  %__a3 = alloca %struct.in6_addr*, align 8
  %6 = alloca i32, align 4
  %__a4 = alloca %struct.in6_addr*, align 8
  %7 = alloca i32, align 4
  store %struct.context.165* %context, %struct.context.165** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.context.165** %2, metadata !14526, metadata !2279), !dbg !14527
  call void @llvm.dbg.declare(metadata %struct.sockaddr_in6** %me, metadata !14528, metadata !2279), !dbg !14529
  call void @llvm.dbg.declare(metadata %struct.sockaddr_in6** %peer, metadata !14530, metadata !2279), !dbg !14531
  call void @llvm.dbg.declare(metadata %struct.nia** %ni, metadata !14532, metadata !2279), !dbg !14533
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.484, i32 0, i32 0)), !dbg !14534
  %8 = load %struct.context.165*, %struct.context.165** %2, align 8, !dbg !14535
  %9 = getelementptr inbounds %struct.context.165, %struct.context.165* %8, i32 0, i32 19, !dbg !14536
  %10 = load %struct.nia*, %struct.nia** %9, align 8, !dbg !14536
  store %struct.nia* %10, %struct.nia** %ni, align 8, !dbg !14537
  %11 = load %struct.nia*, %struct.nia** %ni, align 8, !dbg !14538
  %12 = icmp ne %struct.nia* %11, null, !dbg !14538
  br i1 %12, label %13, label %18, !dbg !14540

; <label>:13                                      ; preds = %0
  %14 = load %struct.nia*, %struct.nia** %ni, align 8, !dbg !14541
  %15 = getelementptr inbounds %struct.nia, %struct.nia* %14, i32 0, i32 0, !dbg !14543
  %16 = load %struct.sockaddr*, %struct.sockaddr** %15, align 8, !dbg !14543
  %17 = icmp ne %struct.sockaddr* %16, null, !dbg !14541
  br i1 %17, label %19, label %18, !dbg !14544

; <label>:18                                      ; preds = %13, %0
  store i32 0, i32* %1, align 4, !dbg !14545
  br label %228, !dbg !14545

; <label>:19                                      ; preds = %13
  %20 = load %struct.nia*, %struct.nia** %ni, align 8, !dbg !14546
  %21 = getelementptr inbounds %struct.nia, %struct.nia* %20, i32 0, i32 0, !dbg !14547
  %22 = load %struct.sockaddr*, %struct.sockaddr** %21, align 8, !dbg !14547
  %23 = bitcast %struct.sockaddr* %22 to %struct.sockaddr_in6*, !dbg !14548
  store %struct.sockaddr_in6* %23, %struct.sockaddr_in6** %me, align 8, !dbg !14549
  %24 = load %struct.sockaddr_in6*, %struct.sockaddr_in6** %me, align 8, !dbg !14550
  %25 = getelementptr inbounds %struct.sockaddr_in6, %struct.sockaddr_in6* %24, i32 0, i32 0, !dbg !14552
  %26 = load i16, i16* %25, align 4, !dbg !14552
  %27 = zext i16 %26 to i32, !dbg !14550
  %28 = icmp ne i32 %27, 10, !dbg !14553
  br i1 %28, label %29, label %30, !dbg !14554

; <label>:29                                      ; preds = %19
  store i32 0, i32* %1, align 4, !dbg !14555
  br label %228, !dbg !14555

; <label>:30                                      ; preds = %19
  call void @llvm.dbg.declare(metadata %struct.in6_addr** %__a, metadata !14556, metadata !2279), !dbg !14559
  %31 = load %struct.sockaddr_in6*, %struct.sockaddr_in6** %me, align 8, !dbg !14559
  %32 = getelementptr inbounds %struct.sockaddr_in6, %struct.sockaddr_in6* %31, i32 0, i32 3, !dbg !14559
  store %struct.in6_addr* %32, %struct.in6_addr** %__a, align 8, !dbg !14559
  call void @llvm.dbg.declare(metadata %struct.in6_addr** %__b, metadata !14560, metadata !2279), !dbg !14559
  store %struct.in6_addr* @in6addr_any, %struct.in6_addr** %__b, align 8, !dbg !14559
  %33 = load %struct.in6_addr*, %struct.in6_addr** %__a, align 8, !dbg !14559
  %34 = getelementptr inbounds %struct.in6_addr, %struct.in6_addr* %33, i32 0, i32 0, !dbg !14559
  %35 = bitcast %union.anon.1* %34 to [4 x i32]*, !dbg !14559
  %36 = getelementptr inbounds [4 x i32], [4 x i32]* %35, i64 0, i64 0, !dbg !14559
  %37 = load i32, i32* %36, align 4, !dbg !14559
  %38 = load %struct.in6_addr*, %struct.in6_addr** %__b, align 8, !dbg !14559
  %39 = getelementptr inbounds %struct.in6_addr, %struct.in6_addr* %38, i32 0, i32 0, !dbg !14559
  %40 = bitcast %union.anon.1* %39 to [4 x i32]*, !dbg !14559
  %41 = getelementptr inbounds [4 x i32], [4 x i32]* %40, i64 0, i64 0, !dbg !14559
  %42 = load i32, i32* %41, align 4, !dbg !14559
  %43 = icmp eq i32 %37, %42, !dbg !14559
  br i1 %43, label %44, label %80, !dbg !14559

; <label>:44                                      ; preds = %30
  %45 = load %struct.in6_addr*, %struct.in6_addr** %__a, align 8, !dbg !14561
  %46 = getelementptr inbounds %struct.in6_addr, %struct.in6_addr* %45, i32 0, i32 0, !dbg !14561
  %47 = bitcast %union.anon.1* %46 to [4 x i32]*, !dbg !14561
  %48 = getelementptr inbounds [4 x i32], [4 x i32]* %47, i64 0, i64 1, !dbg !14561
  %49 = load i32, i32* %48, align 4, !dbg !14561
  %50 = load %struct.in6_addr*, %struct.in6_addr** %__b, align 8, !dbg !14561
  %51 = getelementptr inbounds %struct.in6_addr, %struct.in6_addr* %50, i32 0, i32 0, !dbg !14561
  %52 = bitcast %union.anon.1* %51 to [4 x i32]*, !dbg !14561
  %53 = getelementptr inbounds [4 x i32], [4 x i32]* %52, i64 0, i64 1, !dbg !14561
  %54 = load i32, i32* %53, align 4, !dbg !14561
  %55 = icmp eq i32 %49, %54, !dbg !14561
  br i1 %55, label %56, label %80, !dbg !14561

; <label>:56                                      ; preds = %44
  %57 = load %struct.in6_addr*, %struct.in6_addr** %__a, align 8, !dbg !14563
  %58 = getelementptr inbounds %struct.in6_addr, %struct.in6_addr* %57, i32 0, i32 0, !dbg !14563
  %59 = bitcast %union.anon.1* %58 to [4 x i32]*, !dbg !14563
  %60 = getelementptr inbounds [4 x i32], [4 x i32]* %59, i64 0, i64 2, !dbg !14563
  %61 = load i32, i32* %60, align 4, !dbg !14563
  %62 = load %struct.in6_addr*, %struct.in6_addr** %__b, align 8, !dbg !14563
  %63 = getelementptr inbounds %struct.in6_addr, %struct.in6_addr* %62, i32 0, i32 0, !dbg !14563
  %64 = bitcast %union.anon.1* %63 to [4 x i32]*, !dbg !14563
  %65 = getelementptr inbounds [4 x i32], [4 x i32]* %64, i64 0, i64 2, !dbg !14563
  %66 = load i32, i32* %65, align 4, !dbg !14563
  %67 = icmp eq i32 %61, %66, !dbg !14563
  br i1 %67, label %68, label %80, !dbg !14563

; <label>:68                                      ; preds = %56
  %69 = load %struct.in6_addr*, %struct.in6_addr** %__a, align 8, !dbg !14565
  %70 = getelementptr inbounds %struct.in6_addr, %struct.in6_addr* %69, i32 0, i32 0, !dbg !14565
  %71 = bitcast %union.anon.1* %70 to [4 x i32]*, !dbg !14565
  %72 = getelementptr inbounds [4 x i32], [4 x i32]* %71, i64 0, i64 3, !dbg !14565
  %73 = load i32, i32* %72, align 4, !dbg !14565
  %74 = load %struct.in6_addr*, %struct.in6_addr** %__b, align 8, !dbg !14565
  %75 = getelementptr inbounds %struct.in6_addr, %struct.in6_addr* %74, i32 0, i32 0, !dbg !14565
  %76 = bitcast %union.anon.1* %75 to [4 x i32]*, !dbg !14565
  %77 = getelementptr inbounds [4 x i32], [4 x i32]* %76, i64 0, i64 3, !dbg !14565
  %78 = load i32, i32* %77, align 4, !dbg !14565
  %79 = icmp eq i32 %73, %78, !dbg !14565
  br label %80

; <label>:80                                      ; preds = %68, %56, %44, %30
  %81 = phi i1 [ false, %56 ], [ false, %44 ], [ false, %30 ], [ %79, %68 ]
  %82 = zext i1 %81 to i32, !dbg !14567
  store i32 %82, i32* %3, align 4, !dbg !14567
  %83 = load i32, i32* %3, align 4, !dbg !14567
  %84 = icmp ne i32 %83, 0, !dbg !14567
  br i1 %84, label %85, label %90, !dbg !14567

; <label>:85                                      ; preds = %80
  %86 = load i32, i32* @conv_scoped_query.warned, align 4, !dbg !14569
  %87 = icmp ne i32 %86, 0, !dbg !14569
  br i1 %87, label %89, label %88, !dbg !14572

; <label>:88                                      ; preds = %85
  call void (i32, i8*, ...) @syslog(i32 4, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.1.485, i32 0, i32 0)), !dbg !14573
  br label %89, !dbg !14573

; <label>:89                                      ; preds = %88, %85
  store i32 1, i32* @conv_scoped_query.warned, align 4, !dbg !14574
  store i32 0, i32* %1, align 4, !dbg !14575
  br label %228, !dbg !14575

; <label>:90                                      ; preds = %80
  %91 = load %struct.context.165*, %struct.context.165** %2, align 8, !dbg !14576
  %92 = getelementptr inbounds %struct.context.165, %struct.context.165* %91, i32 0, i32 22, !dbg !14577
  %93 = load %struct.sockaddr*, %struct.sockaddr** %92, align 8, !dbg !14577
  %94 = bitcast %struct.sockaddr* %93 to %struct.sockaddr_in6*, !dbg !14578
  store %struct.sockaddr_in6* %94, %struct.sockaddr_in6** %peer, align 8, !dbg !14579
  %95 = load %struct.sockaddr_in6*, %struct.sockaddr_in6** %peer, align 8, !dbg !14580
  %96 = getelementptr inbounds %struct.sockaddr_in6, %struct.sockaddr_in6* %95, i32 0, i32 0, !dbg !14582
  %97 = load i16, i16* %96, align 4, !dbg !14582
  %98 = zext i16 %97 to i32, !dbg !14580
  %99 = icmp ne i32 %98, 10, !dbg !14583
  br i1 %99, label %100, label %101, !dbg !14584

; <label>:100                                     ; preds = %90
  store i32 0, i32* %1, align 4, !dbg !14585
  br label %228, !dbg !14585

; <label>:101                                     ; preds = %90
  call void @llvm.dbg.declare(metadata %struct.in6_addr** %__a1, metadata !14586, metadata !2279), !dbg !14589
  %102 = load %struct.sockaddr_in6*, %struct.sockaddr_in6** %me, align 8, !dbg !14589
  %103 = getelementptr inbounds %struct.sockaddr_in6, %struct.sockaddr_in6* %102, i32 0, i32 3, !dbg !14589
  store %struct.in6_addr* %103, %struct.in6_addr** %__a1, align 8, !dbg !14589
  %104 = load %struct.in6_addr*, %struct.in6_addr** %__a1, align 8, !dbg !14589
  %105 = getelementptr inbounds %struct.in6_addr, %struct.in6_addr* %104, i32 0, i32 0, !dbg !14589
  %106 = bitcast %union.anon.1* %105 to [4 x i32]*, !dbg !14589
  %107 = getelementptr inbounds [4 x i32], [4 x i32]* %106, i64 0, i64 0, !dbg !14589
  %108 = load i32, i32* %107, align 4, !dbg !14589
  %109 = call i32 @htonl(i32 -4194304) #1, !dbg !14589
  %110 = and i32 %108, %109, !dbg !14589
  %111 = call i32 @htonl(i32 -25165824) #1, !dbg !14590
  %112 = icmp eq i32 %110, %111, !dbg !14589
  %113 = zext i1 %112 to i32, !dbg !14589
  store i32 %113, i32* %4, align 4, !dbg !14589
  %114 = load i32, i32* %4, align 4, !dbg !14589
  %115 = icmp ne i32 %114, 0, !dbg !14592
  br i1 %115, label %116, label %164, !dbg !14593

; <label>:116                                     ; preds = %101
  call void @llvm.dbg.declare(metadata %struct.in6_addr** %__a2, metadata !14594, metadata !2279), !dbg !14596
  %117 = load %struct.sockaddr_in6*, %struct.sockaddr_in6** %peer, align 8, !dbg !14596
  %118 = getelementptr inbounds %struct.sockaddr_in6, %struct.sockaddr_in6* %117, i32 0, i32 3, !dbg !14596
  store %struct.in6_addr* %118, %struct.in6_addr** %__a2, align 8, !dbg !14596
  %119 = load %struct.in6_addr*, %struct.in6_addr** %__a2, align 8, !dbg !14596
  %120 = getelementptr inbounds %struct.in6_addr, %struct.in6_addr* %119, i32 0, i32 0, !dbg !14596
  %121 = bitcast %union.anon.1* %120 to [4 x i32]*, !dbg !14596
  %122 = getelementptr inbounds [4 x i32], [4 x i32]* %121, i64 0, i64 0, !dbg !14596
  %123 = load i32, i32* %122, align 4, !dbg !14596
  %124 = call i32 @htonl(i32 -4194304) #1, !dbg !14596
  %125 = and i32 %123, %124, !dbg !14596
  %126 = call i32 @htonl(i32 -25165824) #1, !dbg !14597
  %127 = icmp eq i32 %125, %126, !dbg !14596
  %128 = zext i1 %127 to i32, !dbg !14596
  store i32 %128, i32* %5, align 4, !dbg !14596
  %129 = load i32, i32* %5, align 4, !dbg !14596
  %130 = icmp ne i32 %129, 0, !dbg !14599
  br i1 %130, label %131, label %164, !dbg !14600

; <label>:131                                     ; preds = %116
  %132 = load %struct.sockaddr_in6*, %struct.sockaddr_in6** %me, align 8, !dbg !14602
  %133 = getelementptr inbounds %struct.sockaddr_in6, %struct.sockaddr_in6* %132, i32 0, i32 4, !dbg !14605
  %134 = load i32, i32* %133, align 4, !dbg !14605
  %135 = load %struct.sockaddr_in6*, %struct.sockaddr_in6** %peer, align 8, !dbg !14606
  %136 = getelementptr inbounds %struct.sockaddr_in6, %struct.sockaddr_in6* %135, i32 0, i32 4, !dbg !14607
  %137 = load i32, i32* %136, align 4, !dbg !14607
  %138 = icmp eq i32 %134, %137, !dbg !14608
  br i1 %138, label %139, label %140, !dbg !14609

; <label>:139                                     ; preds = %131
  store i32 1, i32* %1, align 4, !dbg !14610
  br label %228, !dbg !14610

; <label>:140                                     ; preds = %131
  %141 = load %struct.sockaddr_in6*, %struct.sockaddr_in6** %me, align 8, !dbg !14611
  %142 = getelementptr inbounds %struct.sockaddr_in6, %struct.sockaddr_in6* %141, i32 0, i32 4, !dbg !14613
  %143 = load i32, i32* %142, align 4, !dbg !14613
  %144 = icmp ne i32 %143, 0, !dbg !14611
  br i1 %144, label %145, label %146, !dbg !14614

; <label>:145                                     ; preds = %140
  store i32 0, i32* %1, align 4, !dbg !14615
  br label %228, !dbg !14615

; <label>:146                                     ; preds = %140
  %147 = load i32, i32* @conv_scoped_query.warned, align 4, !dbg !14616
  %148 = icmp ne i32 %147, 0, !dbg !14616
  br i1 %148, label %150, label %149, !dbg !14618

; <label>:149                                     ; preds = %146
  call void (i32, i8*, ...) @syslog(i32 4, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.2.486, i32 0, i32 0)), !dbg !14619
  br label %150, !dbg !14619

; <label>:150                                     ; preds = %149, %146
  store i32 1, i32* @conv_scoped_query.warned, align 4, !dbg !14620
  %151 = load %struct.sockaddr_in6*, %struct.sockaddr_in6** %me, align 8, !dbg !14621
  %152 = getelementptr inbounds %struct.sockaddr_in6, %struct.sockaddr_in6* %151, i32 0, i32 3, !dbg !14623
  %153 = getelementptr inbounds %struct.in6_addr, %struct.in6_addr* %152, i32 0, i32 0, !dbg !14624
  %154 = bitcast %union.anon.1* %153 to [16 x i8]*, !dbg !14624
  %155 = getelementptr inbounds [16 x i8], [16 x i8]* %154, i64 0, i64 3, !dbg !14625
  %156 = load i8, i8* %155, align 1, !dbg !14625
  %157 = zext i8 %156 to i32, !dbg !14625
  %158 = load %struct.sockaddr_in6*, %struct.sockaddr_in6** %peer, align 8, !dbg !14626
  %159 = getelementptr inbounds %struct.sockaddr_in6, %struct.sockaddr_in6* %158, i32 0, i32 4, !dbg !14627
  %160 = load i32, i32* %159, align 4, !dbg !14627
  %161 = icmp eq i32 %157, %160, !dbg !14628
  br i1 %161, label %162, label %163, !dbg !14629

; <label>:162                                     ; preds = %150
  store i32 1, i32* %1, align 4, !dbg !14630
  br label %228, !dbg !14630

; <label>:163                                     ; preds = %150
  store i32 0, i32* %1, align 4, !dbg !14631
  br label %228, !dbg !14631

; <label>:164                                     ; preds = %116, %101
  call void @llvm.dbg.declare(metadata %struct.in6_addr** %__a3, metadata !14632, metadata !2279), !dbg !14635
  %165 = load %struct.sockaddr_in6*, %struct.sockaddr_in6** %me, align 8, !dbg !14635
  %166 = getelementptr inbounds %struct.sockaddr_in6, %struct.sockaddr_in6* %165, i32 0, i32 3, !dbg !14635
  store %struct.in6_addr* %166, %struct.in6_addr** %__a3, align 8, !dbg !14635
  %167 = load %struct.in6_addr*, %struct.in6_addr** %__a3, align 8, !dbg !14635
  %168 = getelementptr inbounds %struct.in6_addr, %struct.in6_addr* %167, i32 0, i32 0, !dbg !14635
  %169 = bitcast %union.anon.1* %168 to [4 x i32]*, !dbg !14635
  %170 = getelementptr inbounds [4 x i32], [4 x i32]* %169, i64 0, i64 0, !dbg !14635
  %171 = load i32, i32* %170, align 4, !dbg !14635
  %172 = call i32 @htonl(i32 -4194304) #1, !dbg !14635
  %173 = and i32 %171, %172, !dbg !14635
  %174 = call i32 @htonl(i32 -20971520) #1, !dbg !14636
  %175 = icmp eq i32 %173, %174, !dbg !14635
  %176 = zext i1 %175 to i32, !dbg !14635
  store i32 %176, i32* %6, align 4, !dbg !14635
  %177 = load i32, i32* %6, align 4, !dbg !14635
  %178 = icmp ne i32 %177, 0, !dbg !14638
  br i1 %178, label %179, label %227, !dbg !14639

; <label>:179                                     ; preds = %164
  call void @llvm.dbg.declare(metadata %struct.in6_addr** %__a4, metadata !14640, metadata !2279), !dbg !14642
  %180 = load %struct.sockaddr_in6*, %struct.sockaddr_in6** %peer, align 8, !dbg !14642
  %181 = getelementptr inbounds %struct.sockaddr_in6, %struct.sockaddr_in6* %180, i32 0, i32 3, !dbg !14642
  store %struct.in6_addr* %181, %struct.in6_addr** %__a4, align 8, !dbg !14642
  %182 = load %struct.in6_addr*, %struct.in6_addr** %__a4, align 8, !dbg !14642
  %183 = getelementptr inbounds %struct.in6_addr, %struct.in6_addr* %182, i32 0, i32 0, !dbg !14642
  %184 = bitcast %union.anon.1* %183 to [4 x i32]*, !dbg !14642
  %185 = getelementptr inbounds [4 x i32], [4 x i32]* %184, i64 0, i64 0, !dbg !14642
  %186 = load i32, i32* %185, align 4, !dbg !14642
  %187 = call i32 @htonl(i32 -4194304) #1, !dbg !14642
  %188 = and i32 %186, %187, !dbg !14642
  %189 = call i32 @htonl(i32 -20971520) #1, !dbg !14643
  %190 = icmp eq i32 %188, %189, !dbg !14642
  %191 = zext i1 %190 to i32, !dbg !14642
  store i32 %191, i32* %7, align 4, !dbg !14642
  %192 = load i32, i32* %7, align 4, !dbg !14642
  %193 = icmp ne i32 %192, 0, !dbg !14645
  br i1 %193, label %194, label %227, !dbg !14646

; <label>:194                                     ; preds = %179
  %195 = load %struct.sockaddr_in6*, %struct.sockaddr_in6** %me, align 8, !dbg !14647
  %196 = getelementptr inbounds %struct.sockaddr_in6, %struct.sockaddr_in6* %195, i32 0, i32 4, !dbg !14650
  %197 = load i32, i32* %196, align 4, !dbg !14650
  %198 = load %struct.sockaddr_in6*, %struct.sockaddr_in6** %peer, align 8, !dbg !14651
  %199 = getelementptr inbounds %struct.sockaddr_in6, %struct.sockaddr_in6* %198, i32 0, i32 4, !dbg !14652
  %200 = load i32, i32* %199, align 4, !dbg !14652
  %201 = icmp eq i32 %197, %200, !dbg !14653
  br i1 %201, label %202, label %203, !dbg !14654

; <label>:202                                     ; preds = %194
  store i32 1, i32* %1, align 4, !dbg !14655
  br label %228, !dbg !14655

; <label>:203                                     ; preds = %194
  %204 = load %struct.sockaddr_in6*, %struct.sockaddr_in6** %me, align 8, !dbg !14656
  %205 = getelementptr inbounds %struct.sockaddr_in6, %struct.sockaddr_in6* %204, i32 0, i32 4, !dbg !14658
  %206 = load i32, i32* %205, align 4, !dbg !14658
  %207 = icmp ne i32 %206, 0, !dbg !14656
  br i1 %207, label %208, label %209, !dbg !14659

; <label>:208                                     ; preds = %203
  store i32 0, i32* %1, align 4, !dbg !14660
  br label %228, !dbg !14660

; <label>:209                                     ; preds = %203
  %210 = load i32, i32* @conv_scoped_query.warned, align 4, !dbg !14661
  %211 = icmp ne i32 %210, 0, !dbg !14661
  br i1 %211, label %213, label %212, !dbg !14663

; <label>:212                                     ; preds = %209
  call void (i32, i8*, ...) @syslog(i32 4, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.2.486, i32 0, i32 0)), !dbg !14664
  br label %213, !dbg !14664

; <label>:213                                     ; preds = %212, %209
  store i32 1, i32* @conv_scoped_query.warned, align 4, !dbg !14665
  %214 = load %struct.sockaddr_in6*, %struct.sockaddr_in6** %me, align 8, !dbg !14666
  %215 = getelementptr inbounds %struct.sockaddr_in6, %struct.sockaddr_in6* %214, i32 0, i32 3, !dbg !14668
  %216 = getelementptr inbounds %struct.in6_addr, %struct.in6_addr* %215, i32 0, i32 0, !dbg !14669
  %217 = bitcast %union.anon.1* %216 to [16 x i8]*, !dbg !14669
  %218 = getelementptr inbounds [16 x i8], [16 x i8]* %217, i64 0, i64 3, !dbg !14670
  %219 = load i8, i8* %218, align 1, !dbg !14670
  %220 = zext i8 %219 to i32, !dbg !14670
  %221 = load %struct.sockaddr_in6*, %struct.sockaddr_in6** %peer, align 8, !dbg !14671
  %222 = getelementptr inbounds %struct.sockaddr_in6, %struct.sockaddr_in6* %221, i32 0, i32 4, !dbg !14672
  %223 = load i32, i32* %222, align 4, !dbg !14672
  %224 = icmp eq i32 %220, %223, !dbg !14673
  br i1 %224, label %225, label %226, !dbg !14674

; <label>:225                                     ; preds = %213
  store i32 1, i32* %1, align 4, !dbg !14675
  br label %228, !dbg !14675

; <label>:226                                     ; preds = %213
  store i32 0, i32* %1, align 4, !dbg !14676
  br label %228, !dbg !14676

; <label>:227                                     ; preds = %179, %164
  store i32 0, i32* %1, align 4, !dbg !14677
  br label %228, !dbg !14677

; <label>:228                                     ; preds = %227, %226, %225, %208, %202, %163, %162, %145, %139, %100, %89, %29, %18
  %229 = load i32, i32* %1, align 4, !dbg !14678
  ret i32 %229, !dbg !14678
}

; Function Attrs: nounwind readnone
declare i32 @htonl(i32) #6

; Function Attrs: nounwind uwtable
define void @conv_scoped_list(%struct.generic_list* %rrsl) #0 !dbg !2117 {
  %1 = alloca %struct.generic_list*, align 8
  %fn = alloca i8*, align 8
  %rrsp = alloca %struct.rr_set*, align 8
  %rrsp_new = alloca %struct.rr_set*, align 8
  %gl_tmp = alloca %struct.generic_list*, align 8
  store %struct.generic_list* %rrsl, %struct.generic_list** %1, align 8
  call void @llvm.dbg.declare(metadata %struct.generic_list** %1, metadata !14679, metadata !2279), !dbg !14680
  call void @llvm.dbg.declare(metadata i8** %fn, metadata !14681, metadata !2279), !dbg !14682
  store i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3.489, i32 0, i32 0), i8** %fn, align 8, !dbg !14682
  call void @llvm.dbg.declare(metadata %struct.rr_set** %rrsp, metadata !14683, metadata !2279), !dbg !14684
  call void @llvm.dbg.declare(metadata %struct.rr_set** %rrsp_new, metadata !14685, metadata !2279), !dbg !14686
  call void @llvm.dbg.declare(metadata %struct.generic_list** %gl_tmp, metadata !14687, metadata !2279), !dbg !14688
  %2 = load i8*, i8** %fn, align 8, !dbg !14689
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.490, i32 0, i32 0), i8* %2), !dbg !14690
  %3 = load %struct.generic_list*, %struct.generic_list** %1, align 8, !dbg !14691
  %4 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %3, i32 0, i32 2, !dbg !14692
  store i8* null, i8** %4, align 8, !dbg !14693
  %5 = load %struct.generic_list*, %struct.generic_list** %1, align 8, !dbg !14694
  %6 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %5, i32 0, i32 0, !dbg !14696
  %7 = load %struct.generic_list*, %struct.generic_list** %6, align 8, !dbg !14696
  store %struct.generic_list* %7, %struct.generic_list** %gl_tmp, align 8, !dbg !14697
  br label %8, !dbg !14698

; <label>:8                                       ; preds = %40, %0
  %9 = load %struct.generic_list*, %struct.generic_list** %gl_tmp, align 8, !dbg !14699
  %10 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %9, i32 0, i32 2, !dbg !14702
  %11 = load i8*, i8** %10, align 8, !dbg !14702
  %12 = icmp ne i8* %11, null, !dbg !14703
  br i1 %12, label %13, label %44, !dbg !14703

; <label>:13                                      ; preds = %8
  %14 = load %struct.generic_list*, %struct.generic_list** %gl_tmp, align 8, !dbg !14704
  %15 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %14, i32 0, i32 2, !dbg !14706
  %16 = load i8*, i8** %15, align 8, !dbg !14706
  %17 = bitcast i8* %16 to %struct.rr_set*, !dbg !14707
  store %struct.rr_set* %17, %struct.rr_set** %rrsp, align 8, !dbg !14708
  %18 = load %struct.rr_set*, %struct.rr_set** %rrsp, align 8, !dbg !14709
  %19 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %18, i32 0, i32 2, !dbg !14711
  %20 = bitcast %union.u_key* %19 to %struct.key_info**, !dbg !14712
  %21 = load %struct.key_info*, %struct.key_info** %20, align 8, !dbg !14712
  %22 = getelementptr inbounds %struct.key_info, %struct.key_info* %21, i32 0, i32 0, !dbg !14713
  %23 = load i16, i16* %22, align 2, !dbg !14713
  %24 = zext i16 %23 to i32, !dbg !14709
  %25 = icmp ne i32 %24, 28, !dbg !14714
  br i1 %25, label %26, label %27, !dbg !14715

; <label>:26                                      ; preds = %13
  br label %40, !dbg !14716

; <label>:27                                      ; preds = %13
  %28 = load %struct.rr_set*, %struct.rr_set** %rrsp, align 8, !dbg !14717
  %29 = call %struct.rr_set* @conv_scoped_rrset(%struct.rr_set* %28), !dbg !14718
  store %struct.rr_set* %29, %struct.rr_set** %rrsp_new, align 8, !dbg !14719
  %30 = load %struct.rr_set*, %struct.rr_set** %rrsp_new, align 8, !dbg !14720
  %31 = icmp ne %struct.rr_set* %30, null, !dbg !14720
  br i1 %31, label %33, label %32, !dbg !14722

; <label>:32                                      ; preds = %27
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.5.493, i32 0, i32 0)), !dbg !14723
  br label %39, !dbg !14725

; <label>:33                                      ; preds = %27
  %34 = load %struct.rr_set*, %struct.rr_set** %rrsp, align 8, !dbg !14726
  call void @rrset_free(%struct.rr_set* %34), !dbg !14728
  %35 = load %struct.rr_set*, %struct.rr_set** %rrsp_new, align 8, !dbg !14729
  %36 = bitcast %struct.rr_set* %35 to i8*, !dbg !14729
  %37 = load %struct.generic_list*, %struct.generic_list** %gl_tmp, align 8, !dbg !14730
  %38 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %37, i32 0, i32 2, !dbg !14731
  store i8* %36, i8** %38, align 8, !dbg !14732
  store %struct.rr_set* null, %struct.rr_set** %rrsp_new, align 8, !dbg !14733
  br label %39

; <label>:39                                      ; preds = %33, %32
  br label %40, !dbg !14734

; <label>:40                                      ; preds = %39, %26
  %41 = load %struct.generic_list*, %struct.generic_list** %gl_tmp, align 8, !dbg !14735
  %42 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %41, i32 0, i32 0, !dbg !14737
  %43 = load %struct.generic_list*, %struct.generic_list** %42, align 8, !dbg !14737
  store %struct.generic_list* %43, %struct.generic_list** %gl_tmp, align 8, !dbg !14738
  br label %8, !dbg !14739

; <label>:44                                      ; preds = %8
  %45 = load i8*, i8** %fn, align 8, !dbg !14740
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.6.494, i32 0, i32 0), i8* %45), !dbg !14741
  ret void, !dbg !14742
}

; Function Attrs: nounwind uwtable
define internal %struct.rr_set* @conv_scoped_rrset(%struct.rr_set* %rrs_old) #0 !dbg !2130 {
  %1 = alloca %struct.rr_set*, align 8
  %rrl = alloca %struct.rr_list*, align 8
  %rrl_tmp = alloca %struct.rr_list*, align 8
  %ret_val = alloca %struct.rr_set*, align 8
  %rrs_new = alloca %struct.rr_set*, align 8
  %rd = alloca i8*, align 8
  %rd_new = alloca i8*, align 8
  %sentinel = alloca %struct.rr_list, align 8
  %cur = alloca %struct.rr_list*, align 8
  %i = alloca i32, align 4
  store %struct.rr_set* %rrs_old, %struct.rr_set** %1, align 8
  call void @llvm.dbg.declare(metadata %struct.rr_set** %1, metadata !14743, metadata !2279), !dbg !14744
  call void @llvm.dbg.declare(metadata %struct.rr_list** %rrl, metadata !14745, metadata !2279), !dbg !14761
  store %struct.rr_list* null, %struct.rr_list** %rrl, align 8, !dbg !14761
  call void @llvm.dbg.declare(metadata %struct.rr_list** %rrl_tmp, metadata !14762, metadata !2279), !dbg !14763
  store %struct.rr_list* null, %struct.rr_list** %rrl_tmp, align 8, !dbg !14763
  call void @llvm.dbg.declare(metadata %struct.rr_set** %ret_val, metadata !14764, metadata !2279), !dbg !14765
  store %struct.rr_set* null, %struct.rr_set** %ret_val, align 8, !dbg !14765
  call void @llvm.dbg.declare(metadata %struct.rr_set** %rrs_new, metadata !14766, metadata !2279), !dbg !14767
  store %struct.rr_set* null, %struct.rr_set** %rrs_new, align 8, !dbg !14767
  call void @llvm.dbg.declare(metadata i8** %rd, metadata !14768, metadata !2279), !dbg !14769
  store i8* null, i8** %rd, align 8, !dbg !14769
  call void @llvm.dbg.declare(metadata i8** %rd_new, metadata !14770, metadata !2279), !dbg !14771
  store i8* null, i8** %rd_new, align 8, !dbg !14771
  call void @llvm.dbg.declare(metadata %struct.rr_list* %sentinel, metadata !14772, metadata !2279), !dbg !14773
  call void @llvm.dbg.declare(metadata %struct.rr_list** %cur, metadata !14774, metadata !2279), !dbg !14775
  call void @llvm.dbg.declare(metadata i32* %i, metadata !14776, metadata !2279), !dbg !14777
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.21.491, i32 0, i32 0)), !dbg !14778
  %2 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 25), align 8, !dbg !14779
  %3 = icmp ne i32 %2, 0, !dbg !14781
  br i1 %3, label %5, label %4, !dbg !14782

; <label>:4                                       ; preds = %0
  store %struct.rr_set* null, %struct.rr_set** %ret_val, align 8, !dbg !14783
  br label %233, !dbg !14785

; <label>:5                                       ; preds = %0
  %6 = bitcast %struct.rr_list* %sentinel to i8*, !dbg !14786
  call void @llvm.memset.p0i8.i64(i8* %6, i8 0, i64 24, i32 8, i1 false), !dbg !14786
  store %struct.rr_list* %sentinel, %struct.rr_list** %cur, align 8, !dbg !14787
  %7 = load %struct.rr_set*, %struct.rr_set** %1, align 8, !dbg !14788
  %8 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %7, i32 0, i32 2, !dbg !14790
  %9 = bitcast %union.u_key* %8 to %struct.key_info**, !dbg !14791
  %10 = load %struct.key_info*, %struct.key_info** %9, align 8, !dbg !14791
  %11 = getelementptr inbounds %struct.key_info, %struct.key_info* %10, i32 0, i32 0, !dbg !14792
  %12 = load i16, i16* %11, align 2, !dbg !14792
  %13 = zext i16 %12 to i32, !dbg !14788
  %14 = icmp ne i32 %13, 28, !dbg !14793
  br i1 %14, label %15, label %16, !dbg !14794

; <label>:15                                      ; preds = %5
  store %struct.rr_set* null, %struct.rr_set** %ret_val, align 8, !dbg !14795
  br label %233, !dbg !14797

; <label>:16                                      ; preds = %5
  %17 = load %struct.rr_set*, %struct.rr_set** %1, align 8, !dbg !14798
  %18 = call %struct.rr_list* @rr_list_of_rrset(%struct.rr_set* %17), !dbg !14799
  store %struct.rr_list* %18, %struct.rr_list** %rrl, align 8, !dbg !14800
  %19 = load %struct.rr_list*, %struct.rr_list** %rrl, align 8, !dbg !14801
  %20 = icmp ne %struct.rr_list* %19, null, !dbg !14801
  br i1 %20, label %22, label %21, !dbg !14803

; <label>:21                                      ; preds = %16
  store %struct.rr_set* null, %struct.rr_set** %ret_val, align 8, !dbg !14804
  br label %233, !dbg !14806

; <label>:22                                      ; preds = %16
  %23 = load %struct.rr_list*, %struct.rr_list** %rrl, align 8, !dbg !14807
  store %struct.rr_list* %23, %struct.rr_list** %rrl_tmp, align 8, !dbg !14809
  br label %24, !dbg !14810

; <label>:24                                      ; preds = %169, %22
  %25 = load %struct.rr_list*, %struct.rr_list** %rrl_tmp, align 8, !dbg !14811
  %26 = getelementptr inbounds %struct.rr_list, %struct.rr_list* %25, i32 0, i32 0, !dbg !14814
  %27 = load %struct.rr_list*, %struct.rr_list** %26, align 8, !dbg !14814
  %28 = icmp ne %struct.rr_list* %27, null, !dbg !14815
  br i1 %28, label %29, label %173, !dbg !14815

; <label>:29                                      ; preds = %24
  %30 = load %struct.rr_list*, %struct.rr_list** %rrl_tmp, align 8, !dbg !14816
  %31 = getelementptr inbounds %struct.rr_list, %struct.rr_list* %30, i32 0, i32 3, !dbg !14816
  %32 = load %struct.rr*, %struct.rr** %31, align 8, !dbg !14816
  %33 = bitcast %struct.rr* %32 to i8*, !dbg !14816
  %34 = getelementptr inbounds i8, i8* %33, i64 6, !dbg !14816
  store i8* %34, i8** %rd, align 8, !dbg !14818
  store i32 0, i32* %i, align 4, !dbg !14819
  br label %35, !dbg !14821

; <label>:35                                      ; preds = %55, %29
  %36 = load i32, i32* %i, align 4, !dbg !14822
  %37 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 25), align 8, !dbg !14825
  %38 = icmp slt i32 %36, %37, !dbg !14826
  br i1 %38, label %39, label %58, !dbg !14827

; <label>:39                                      ; preds = %35
  %40 = load i8*, i8** %rd, align 8, !dbg !14828
  %41 = load i32, i32* %i, align 4, !dbg !14831
  %42 = sext i32 %41 to i64, !dbg !14832
  %43 = getelementptr inbounds [30 x %struct.in6_addr], [30 x %struct.in6_addr]* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 26), i64 0, i64 %42, !dbg !14832
  %44 = bitcast %struct.in6_addr* %43 to i8*, !dbg !14833
  %45 = load i32, i32* %i, align 4, !dbg !14834
  %46 = sext i32 %45 to i64, !dbg !14835
  %47 = getelementptr inbounds [30 x i32], [30 x i32]* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 28), i64 0, i64 %46, !dbg !14835
  %48 = load i32, i32* %47, align 4, !dbg !14835
  %49 = sdiv i32 %48, 8, !dbg !14836
  %50 = sext i32 %49 to i64, !dbg !14835
  %51 = call i32 @memcmp(i8* %40, i8* %44, i64 %50) #9, !dbg !14837
  %52 = icmp ne i32 %51, 0, !dbg !14837
  br i1 %52, label %54, label %53, !dbg !14838

; <label>:53                                      ; preds = %39
  br label %58, !dbg !14839

; <label>:54                                      ; preds = %39
  br label %55, !dbg !14840

; <label>:55                                      ; preds = %54
  %56 = load i32, i32* %i, align 4, !dbg !14841
  %57 = add nsw i32 %56, 1, !dbg !14841
  store i32 %57, i32* %i, align 4, !dbg !14841
  br label %35, !dbg !14843

; <label>:58                                      ; preds = %53, %35
  %59 = load i32, i32* %i, align 4, !dbg !14844
  %60 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 25), align 8, !dbg !14846
  %61 = icmp sge i32 %59, %60, !dbg !14847
  br i1 %61, label %62, label %63, !dbg !14848

; <label>:62                                      ; preds = %58
  br label %169, !dbg !14849

; <label>:63                                      ; preds = %58
  %64 = call %struct.rr_list* @rr_list_alloc(), !dbg !14850
  %65 = load %struct.rr_list*, %struct.rr_list** %cur, align 8, !dbg !14851
  %66 = getelementptr inbounds %struct.rr_list, %struct.rr_list* %65, i32 0, i32 0, !dbg !14852
  store %struct.rr_list* %64, %struct.rr_list** %66, align 8, !dbg !14853
  %67 = load %struct.rr_list*, %struct.rr_list** %cur, align 8, !dbg !14854
  %68 = getelementptr inbounds %struct.rr_list, %struct.rr_list* %67, i32 0, i32 0, !dbg !14855
  %69 = load %struct.rr_list*, %struct.rr_list** %68, align 8, !dbg !14855
  %70 = load %struct.rr_list*, %struct.rr_list** %rrl_tmp, align 8, !dbg !14856
  %71 = bitcast %struct.rr_list* %69 to i8*, !dbg !14857
  %72 = bitcast %struct.rr_list* %70 to i8*, !dbg !14857
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %71, i8* %72, i64 24, i32 8, i1 false), !dbg !14857
  %73 = load %struct.rr_list*, %struct.rr_list** %cur, align 8, !dbg !14858
  %74 = getelementptr inbounds %struct.rr_list, %struct.rr_list* %73, i32 0, i32 0, !dbg !14859
  %75 = load %struct.rr_list*, %struct.rr_list** %74, align 8, !dbg !14859
  %76 = getelementptr inbounds %struct.rr_list, %struct.rr_list* %75, i32 0, i32 3, !dbg !14860
  store %struct.rr* null, %struct.rr** %76, align 8, !dbg !14861
  %77 = load %struct.rr_list*, %struct.rr_list** %cur, align 8, !dbg !14862
  %78 = getelementptr inbounds %struct.rr_list, %struct.rr_list* %77, i32 0, i32 0, !dbg !14863
  %79 = load %struct.rr_list*, %struct.rr_list** %78, align 8, !dbg !14863
  %80 = getelementptr inbounds %struct.rr_list, %struct.rr_list* %79, i32 0, i32 0, !dbg !14864
  store %struct.rr_list* null, %struct.rr_list** %80, align 8, !dbg !14865
  %81 = call noalias i8* @malloc(i64 16) #10, !dbg !14866
  store i8* %81, i8** %rd_new, align 8, !dbg !14867
  %82 = load i8*, i8** %rd_new, align 8, !dbg !14868
  %83 = icmp ne i8* %82, null, !dbg !14868
  br i1 %83, label %90, label %84, !dbg !14870

; <label>:84                                      ; preds = %63
  %85 = load %struct.rr_list*, %struct.rr_list** %cur, align 8, !dbg !14871
  %86 = getelementptr inbounds %struct.rr_list, %struct.rr_list* %85, i32 0, i32 0, !dbg !14873
  %87 = load %struct.rr_list*, %struct.rr_list** %86, align 8, !dbg !14873
  call void @rr_list_free(%struct.rr_list* %87), !dbg !14874
  %88 = load %struct.rr_list*, %struct.rr_list** %cur, align 8, !dbg !14875
  %89 = getelementptr inbounds %struct.rr_list, %struct.rr_list* %88, i32 0, i32 0, !dbg !14876
  store %struct.rr_list* null, %struct.rr_list** %89, align 8, !dbg !14877
  br label %169, !dbg !14878

; <label>:90                                      ; preds = %63
  %91 = load i8*, i8** %rd_new, align 8, !dbg !14879
  %92 = load i32, i32* %i, align 4, !dbg !14880
  %93 = sext i32 %92 to i64, !dbg !14881
  %94 = getelementptr inbounds [30 x %struct.in6_addr], [30 x %struct.in6_addr]* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 27), i64 0, i64 %93, !dbg !14881
  %95 = bitcast %struct.in6_addr* %94 to i8*, !dbg !14882
  %96 = load i32, i32* %i, align 4, !dbg !14883
  %97 = sext i32 %96 to i64, !dbg !14884
  %98 = getelementptr inbounds [30 x i32], [30 x i32]* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 28), i64 0, i64 %97, !dbg !14884
  %99 = load i32, i32* %98, align 4, !dbg !14884
  %100 = sdiv i32 %99, 8, !dbg !14885
  %101 = sext i32 %100 to i64, !dbg !14884
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %91, i8* %95, i64 %101, i32 1, i1 false), !dbg !14882
  %102 = load i8*, i8** %rd_new, align 8, !dbg !14886
  %103 = load i32, i32* %i, align 4, !dbg !14887
  %104 = sext i32 %103 to i64, !dbg !14888
  %105 = getelementptr inbounds [30 x i32], [30 x i32]* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 28), i64 0, i64 %104, !dbg !14888
  %106 = load i32, i32* %105, align 4, !dbg !14888
  %107 = sdiv i32 %106, 8, !dbg !14889
  %108 = sext i32 %107 to i64, !dbg !14890
  %109 = getelementptr inbounds i8, i8* %102, i64 %108, !dbg !14890
  %110 = load i8*, i8** %rd, align 8, !dbg !14891
  %111 = load i32, i32* %i, align 4, !dbg !14892
  %112 = sext i32 %111 to i64, !dbg !14893
  %113 = getelementptr inbounds [30 x i32], [30 x i32]* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 28), i64 0, i64 %112, !dbg !14893
  %114 = load i32, i32* %113, align 4, !dbg !14893
  %115 = sdiv i32 %114, 8, !dbg !14894
  %116 = sext i32 %115 to i64, !dbg !14895
  %117 = getelementptr inbounds i8, i8* %110, i64 %116, !dbg !14895
  %118 = load i32, i32* %i, align 4, !dbg !14896
  %119 = sext i32 %118 to i64, !dbg !14897
  %120 = getelementptr inbounds [30 x i32], [30 x i32]* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 28), i64 0, i64 %119, !dbg !14897
  %121 = load i32, i32* %120, align 4, !dbg !14897
  %122 = sdiv i32 %121, 8, !dbg !14898
  %123 = sext i32 %122 to i64, !dbg !14897
  %124 = sub i64 16, %123, !dbg !14899
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %109, i8* %117, i64 %124, i32 1, i1 false), !dbg !14900
  %125 = load %struct.rr_list*, %struct.rr_list** %rrl_tmp, align 8, !dbg !14901
  %126 = getelementptr inbounds %struct.rr_list, %struct.rr_list* %125, i32 0, i32 3, !dbg !14902
  %127 = load %struct.rr*, %struct.rr** %126, align 8, !dbg !14902
  %128 = getelementptr inbounds %struct.rr, %struct.rr* %127, i32 0, i32 0, !dbg !14903
  %129 = load i32, i32* %128, align 4, !dbg !14903
  %130 = load i8*, i8** %rd_new, align 8, !dbg !14904
  %131 = call %struct.rr* @rr_alloc(i32 %129, i32 16, i8* %130), !dbg !14905
  %132 = load %struct.rr_list*, %struct.rr_list** %cur, align 8, !dbg !14906
  %133 = getelementptr inbounds %struct.rr_list, %struct.rr_list* %132, i32 0, i32 0, !dbg !14907
  %134 = load %struct.rr_list*, %struct.rr_list** %133, align 8, !dbg !14907
  %135 = getelementptr inbounds %struct.rr_list, %struct.rr_list* %134, i32 0, i32 3, !dbg !14908
  store %struct.rr* %131, %struct.rr** %135, align 8, !dbg !14909
  %136 = load i8*, i8** %rd_new, align 8, !dbg !14910
  %137 = icmp ne i8* %136, null, !dbg !14910
  br i1 %137, label %138, label %140, !dbg !14912

; <label>:138                                     ; preds = %90
  %139 = load i8*, i8** %rd_new, align 8, !dbg !14913
  call void @free(i8* %139) #10, !dbg !14914
  br label %140, !dbg !14914

; <label>:140                                     ; preds = %138, %90
  store i8* null, i8** %rd_new, align 8, !dbg !14915
  %141 = load %struct.rr_list*, %struct.rr_list** %cur, align 8, !dbg !14916
  %142 = getelementptr inbounds %struct.rr_list, %struct.rr_list* %141, i32 0, i32 0, !dbg !14918
  %143 = load %struct.rr_list*, %struct.rr_list** %142, align 8, !dbg !14918
  %144 = getelementptr inbounds %struct.rr_list, %struct.rr_list* %143, i32 0, i32 3, !dbg !14919
  %145 = load %struct.rr*, %struct.rr** %144, align 8, !dbg !14919
  %146 = icmp ne %struct.rr* %145, null, !dbg !14916
  br i1 %146, label %153, label %147, !dbg !14920

; <label>:147                                     ; preds = %140
  %148 = load %struct.rr_list*, %struct.rr_list** %cur, align 8, !dbg !14921
  %149 = getelementptr inbounds %struct.rr_list, %struct.rr_list* %148, i32 0, i32 0, !dbg !14923
  %150 = load %struct.rr_list*, %struct.rr_list** %149, align 8, !dbg !14923
  call void @rr_list_free(%struct.rr_list* %150), !dbg !14924
  %151 = load %struct.rr_list*, %struct.rr_list** %cur, align 8, !dbg !14925
  %152 = getelementptr inbounds %struct.rr_list, %struct.rr_list* %151, i32 0, i32 0, !dbg !14926
  store %struct.rr_list* null, %struct.rr_list** %152, align 8, !dbg !14927
  br label %169, !dbg !14928

; <label>:153                                     ; preds = %140
  br label %154, !dbg !14929

; <label>:154                                     ; preds = %164, %153
  %155 = load %struct.rr_list*, %struct.rr_list** %cur, align 8, !dbg !14930
  %156 = icmp ne %struct.rr_list* %155, null, !dbg !14930
  br i1 %156, label %157, label %162, !dbg !14932

; <label>:157                                     ; preds = %154
  %158 = load %struct.rr_list*, %struct.rr_list** %cur, align 8, !dbg !14933
  %159 = getelementptr inbounds %struct.rr_list, %struct.rr_list* %158, i32 0, i32 0, !dbg !14935
  %160 = load %struct.rr_list*, %struct.rr_list** %159, align 8, !dbg !14935
  %161 = icmp ne %struct.rr_list* %160, null, !dbg !14936
  br label %162

; <label>:162                                     ; preds = %157, %154
  %163 = phi i1 [ false, %154 ], [ %161, %157 ]
  br i1 %163, label %164, label %168, !dbg !14937

; <label>:164                                     ; preds = %162
  %165 = load %struct.rr_list*, %struct.rr_list** %cur, align 8, !dbg !14939
  %166 = getelementptr inbounds %struct.rr_list, %struct.rr_list* %165, i32 0, i32 0, !dbg !14940
  %167 = load %struct.rr_list*, %struct.rr_list** %166, align 8, !dbg !14940
  store %struct.rr_list* %167, %struct.rr_list** %cur, align 8, !dbg !14941
  br label %154, !dbg !14942

; <label>:168                                     ; preds = %162
  br label %169, !dbg !14944

; <label>:169                                     ; preds = %168, %147, %84, %62
  %170 = load %struct.rr_list*, %struct.rr_list** %rrl_tmp, align 8, !dbg !14945
  %171 = getelementptr inbounds %struct.rr_list, %struct.rr_list* %170, i32 0, i32 0, !dbg !14947
  %172 = load %struct.rr_list*, %struct.rr_list** %171, align 8, !dbg !14947
  store %struct.rr_list* %172, %struct.rr_list** %rrl_tmp, align 8, !dbg !14948
  br label %24, !dbg !14949

; <label>:173                                     ; preds = %24
  %174 = load %struct.rr_list*, %struct.rr_list** %rrl, align 8, !dbg !14950
  %175 = load %struct.rr_list*, %struct.rr_list** %cur, align 8, !dbg !14951
  %176 = getelementptr inbounds %struct.rr_list, %struct.rr_list* %175, i32 0, i32 0, !dbg !14952
  store %struct.rr_list* %174, %struct.rr_list** %176, align 8, !dbg !14953
  store i32 0, i32* %i, align 4, !dbg !14954
  %177 = getelementptr inbounds %struct.rr_list, %struct.rr_list* %sentinel, i32 0, i32 0, !dbg !14955
  %178 = load %struct.rr_list*, %struct.rr_list** %177, align 8, !dbg !14955
  store %struct.rr_list* %178, %struct.rr_list** %cur, align 8, !dbg !14957
  br label %179, !dbg !14958

; <label>:179                                     ; preds = %185, %173
  %180 = load %struct.rr_list*, %struct.rr_list** %cur, align 8, !dbg !14959
  %181 = icmp ne %struct.rr_list* %180, null, !dbg !14962
  br i1 %181, label %182, label %189, !dbg !14962

; <label>:182                                     ; preds = %179
  %183 = load i32, i32* %i, align 4, !dbg !14963
  %184 = add nsw i32 %183, 1, !dbg !14963
  store i32 %184, i32* %i, align 4, !dbg !14963
  br label %185, !dbg !14964

; <label>:185                                     ; preds = %182
  %186 = load %struct.rr_list*, %struct.rr_list** %cur, align 8, !dbg !14965
  %187 = getelementptr inbounds %struct.rr_list, %struct.rr_list* %186, i32 0, i32 0, !dbg !14967
  %188 = load %struct.rr_list*, %struct.rr_list** %187, align 8, !dbg !14967
  store %struct.rr_list* %188, %struct.rr_list** %cur, align 8, !dbg !14968
  br label %179, !dbg !14969

; <label>:189                                     ; preds = %179
  %190 = load i32, i32* %i, align 4, !dbg !14970
  %191 = sub nsw i32 %190, 2, !dbg !14970
  store i32 %191, i32* %i, align 4, !dbg !14970
  %192 = getelementptr inbounds %struct.rr_list, %struct.rr_list* %sentinel, i32 0, i32 0, !dbg !14971
  %193 = load %struct.rr_list*, %struct.rr_list** %192, align 8, !dbg !14971
  store %struct.rr_list* %193, %struct.rr_list** %cur, align 8, !dbg !14973
  br label %194, !dbg !14974

; <label>:194                                     ; preds = %202, %189
  %195 = load %struct.rr_list*, %struct.rr_list** %cur, align 8, !dbg !14975
  %196 = icmp ne %struct.rr_list* %195, null, !dbg !14978
  br i1 %196, label %197, label %206, !dbg !14978

; <label>:197                                     ; preds = %194
  %198 = load i32, i32* %i, align 4, !dbg !14979
  %199 = add nsw i32 %198, -1, !dbg !14979
  store i32 %199, i32* %i, align 4, !dbg !14979
  %200 = load %struct.rr_list*, %struct.rr_list** %cur, align 8, !dbg !14980
  %201 = getelementptr inbounds %struct.rr_list, %struct.rr_list* %200, i32 0, i32 1, !dbg !14981
  store i32 %198, i32* %201, align 8, !dbg !14982
  br label %202, !dbg !14980

; <label>:202                                     ; preds = %197
  %203 = load %struct.rr_list*, %struct.rr_list** %cur, align 8, !dbg !14983
  %204 = getelementptr inbounds %struct.rr_list, %struct.rr_list* %203, i32 0, i32 0, !dbg !14985
  %205 = load %struct.rr_list*, %struct.rr_list** %204, align 8, !dbg !14985
  store %struct.rr_list* %205, %struct.rr_list** %cur, align 8, !dbg !14986
  br label %194, !dbg !14987

; <label>:206                                     ; preds = %194
  %207 = load %struct.rr_set*, %struct.rr_set** %1, align 8, !dbg !14988
  %208 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %207, i32 0, i32 2, !dbg !14989
  %209 = bitcast %union.u_key* %208 to %struct.key_info**, !dbg !14990
  %210 = load %struct.key_info*, %struct.key_info** %209, align 8, !dbg !14990
  %211 = getelementptr inbounds %struct.key_info, %struct.key_info* %210, i32 0, i32 1, !dbg !14991
  %212 = load i16, i16* %211, align 2, !dbg !14991
  %213 = load %struct.rr_set*, %struct.rr_set** %1, align 8, !dbg !14992
  %214 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %213, i32 0, i32 2, !dbg !14993
  %215 = bitcast %union.u_key* %214 to %struct.key_info**, !dbg !14994
  %216 = load %struct.key_info*, %struct.key_info** %215, align 8, !dbg !14994
  %217 = getelementptr inbounds %struct.key_info, %struct.key_info* %216, i32 0, i32 2, !dbg !14995
  %218 = load i16, i16* %217, align 2, !dbg !14995
  %219 = load %struct.rr_set*, %struct.rr_set** %1, align 8, !dbg !14996
  %220 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %219, i32 0, i32 2, !dbg !14996
  %221 = bitcast %union.u_key* %220 to %struct.key_info**, !dbg !14996
  %222 = load %struct.key_info*, %struct.key_info** %221, align 8, !dbg !14996
  %223 = bitcast %struct.key_info* %222 to i8*, !dbg !14996
  %224 = getelementptr inbounds i8, i8* %223, i64 6, !dbg !14996
  %225 = getelementptr inbounds %struct.rr_list, %struct.rr_list* %sentinel, i32 0, i32 0, !dbg !14997
  %226 = load %struct.rr_list*, %struct.rr_list** %225, align 8, !dbg !14997
  %227 = call %struct.rr_set* @rrset_create(i16 zeroext 28, i16 zeroext %212, i16 zeroext %218, i8* %224, %struct.rr_list* %226), !dbg !14998
  store %struct.rr_set* %227, %struct.rr_set** %rrs_new, align 8, !dbg !14999
  %228 = load %struct.rr_set*, %struct.rr_set** %rrs_new, align 8, !dbg !15000
  %229 = icmp ne %struct.rr_set* %228, null, !dbg !15000
  br i1 %229, label %231, label %230, !dbg !15002

; <label>:230                                     ; preds = %206
  store %struct.rr_set* null, %struct.rr_set** %ret_val, align 8, !dbg !15003
  br label %233, !dbg !15005

; <label>:231                                     ; preds = %206
  %232 = load %struct.rr_set*, %struct.rr_set** %rrs_new, align 8, !dbg !15006
  store %struct.rr_set* %232, %struct.rr_set** %ret_val, align 8, !dbg !15007
  store %struct.rr_set* null, %struct.rr_set** %rrs_new, align 8, !dbg !15008
  br label %233, !dbg !15009

; <label>:233                                     ; preds = %231, %230, %21, %15, %4
  %234 = load %struct.rr_set*, %struct.rr_set** %rrs_new, align 8, !dbg !15010
  %235 = icmp ne %struct.rr_set* %234, null, !dbg !15010
  br i1 %235, label %236, label %238, !dbg !15012

; <label>:236                                     ; preds = %233
  %237 = load %struct.rr_set*, %struct.rr_set** %rrs_new, align 8, !dbg !15013
  call void @rrset_free(%struct.rr_set* %237), !dbg !15014
  br label %238, !dbg !15014

; <label>:238                                     ; preds = %236, %233
  %239 = getelementptr inbounds %struct.rr_list, %struct.rr_list* %sentinel, i32 0, i32 0, !dbg !15015
  %240 = load %struct.rr_list*, %struct.rr_list** %239, align 8, !dbg !15015
  %241 = icmp ne %struct.rr_list* %240, null, !dbg !15017
  br i1 %241, label %242, label %245, !dbg !15018

; <label>:242                                     ; preds = %238
  %243 = getelementptr inbounds %struct.rr_list, %struct.rr_list* %sentinel, i32 0, i32 0, !dbg !15019
  %244 = load %struct.rr_list*, %struct.rr_list** %243, align 8, !dbg !15019
  call void @rr_list_free(%struct.rr_list* %244), !dbg !15020
  br label %245, !dbg !15020

; <label>:245                                     ; preds = %242, %238
  %246 = load i8*, i8** %rd_new, align 8, !dbg !15021
  %247 = icmp ne i8* %246, null, !dbg !15021
  br i1 %247, label %248, label %250, !dbg !15023

; <label>:248                                     ; preds = %245
  %249 = load i8*, i8** %rd_new, align 8, !dbg !15024
  call void @free(i8* %249) #10, !dbg !15025
  br label %250, !dbg !15025

; <label>:250                                     ; preds = %248, %245
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.22.492, i32 0, i32 0)), !dbg !15026
  %251 = load %struct.rr_set*, %struct.rr_set** %ret_val, align 8, !dbg !15027
  ret %struct.rr_set* %251, !dbg !15028
}

; Function Attrs: nounwind uwtable
define i32 @conv_scoped_conf(i8* %from, i8* %to, i32 %plen) #0 !dbg !2120 {
  %1 = alloca i32, align 4
  %2 = alloca i8*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %fn = alloca i8*, align 8
  %max = alloca i32, align 4
  store i8* %from, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !15029, metadata !2279), !dbg !15030
  store i8* %to, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !15031, metadata !2279), !dbg !15032
  store i32 %plen, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !15033, metadata !2279), !dbg !15034
  call void @llvm.dbg.declare(metadata i8** %fn, metadata !15035, metadata !2279), !dbg !15036
  store i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.7.497, i32 0, i32 0), i8** %fn, align 8, !dbg !15036
  call void @llvm.dbg.declare(metadata i32* %max, metadata !15037, metadata !2279), !dbg !15038
  store i32 30, i32* %max, align 4, !dbg !15038
  %5 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 25), align 8, !dbg !15039
  %6 = icmp sge i32 %5, 30, !dbg !15041
  br i1 %6, label %7, label %9, !dbg !15042

; <label>:7                                       ; preds = %0
  %8 = load i8*, i8** %fn, align 8, !dbg !15043
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.8.498, i32 0, i32 0), i8* %8, i32 30), !dbg !15045
  store i32 -1, i32* %1, align 4, !dbg !15046
  br label %45, !dbg !15046

; <label>:9                                       ; preds = %0
  %10 = load i32, i32* %4, align 4, !dbg !15047
  %11 = srem i32 %10, 8, !dbg !15049
  %12 = icmp ne i32 %11, 0, !dbg !15049
  br i1 %12, label %13, label %15, !dbg !15050

; <label>:13                                      ; preds = %9
  %14 = load i8*, i8** %fn, align 8, !dbg !15051
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.9.499, i32 0, i32 0), i8* %14), !dbg !15053
  store i32 -1, i32* %1, align 4, !dbg !15054
  br label %45, !dbg !15054

; <label>:15                                      ; preds = %9
  %16 = load i8*, i8** %2, align 8, !dbg !15055
  %17 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 25), align 8, !dbg !15057
  %18 = sext i32 %17 to i64, !dbg !15058
  %19 = getelementptr inbounds [30 x %struct.in6_addr], [30 x %struct.in6_addr]* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 26), i64 0, i64 %18, !dbg !15058
  %20 = bitcast %struct.in6_addr* %19 to i8*, !dbg !15059
  %21 = call i32 @inet_pton(i32 10, i8* %16, i8* %20) #10, !dbg !15060
  %22 = icmp ne i32 %21, 1, !dbg !15061
  br i1 %22, label %23, label %25, !dbg !15062

; <label>:23                                      ; preds = %15
  %24 = load i8*, i8** %2, align 8, !dbg !15063
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.10.500, i32 0, i32 0), i8* %24), !dbg !15065
  store i32 -1, i32* %1, align 4, !dbg !15066
  br label %45, !dbg !15066

; <label>:25                                      ; preds = %15
  %26 = load i8*, i8** %3, align 8, !dbg !15067
  %27 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 25), align 8, !dbg !15069
  %28 = sext i32 %27 to i64, !dbg !15070
  %29 = getelementptr inbounds [30 x %struct.in6_addr], [30 x %struct.in6_addr]* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 27), i64 0, i64 %28, !dbg !15070
  %30 = bitcast %struct.in6_addr* %29 to i8*, !dbg !15071
  %31 = call i32 @inet_pton(i32 10, i8* %26, i8* %30) #10, !dbg !15072
  %32 = icmp ne i32 %31, 1, !dbg !15073
  br i1 %32, label %33, label %35, !dbg !15074

; <label>:33                                      ; preds = %25
  %34 = load i8*, i8** %3, align 8, !dbg !15075
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.11.501, i32 0, i32 0), i8* %34), !dbg !15077
  store i32 -1, i32* %1, align 4, !dbg !15078
  br label %45, !dbg !15078

; <label>:35                                      ; preds = %25
  %36 = load i32, i32* %4, align 4, !dbg !15079
  %37 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 25), align 8, !dbg !15080
  %38 = sext i32 %37 to i64, !dbg !15081
  %39 = getelementptr inbounds [30 x i32], [30 x i32]* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 28), i64 0, i64 %38, !dbg !15081
  store i32 %36, i32* %39, align 4, !dbg !15082
  %40 = load i8*, i8** %fn, align 8, !dbg !15083
  %41 = load i8*, i8** %2, align 8, !dbg !15084
  %42 = load i8*, i8** %3, align 8, !dbg !15085
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.12.502, i32 0, i32 0), i8* %40, i8* %41, i8* %42), !dbg !15086
  %43 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 25), align 8, !dbg !15087
  %44 = add nsw i32 %43, 1, !dbg !15087
  store i32 %44, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 25), align 8, !dbg !15087
  store i32 0, i32* %1, align 4, !dbg !15088
  br label %45, !dbg !15088

; <label>:45                                      ; preds = %35, %33, %23, %13, %7
  %46 = load i32, i32* %1, align 4, !dbg !15089
  ret i32 %46, !dbg !15089
}

; Function Attrs: nounwind uwtable
define void @conv_scoped_ptr(%struct.generic_list* %rrsl, i8* %qname) #0 !dbg !2123 {
  %1 = alloca %struct.generic_list*, align 8
  %2 = alloca i8*, align 8
  %gl_tmp = alloca %struct.generic_list*, align 8
  %rk = alloca %union.u_key, align 8
  %idx = alloca i32, align 4
  %p = alloca i8*, align 8
  %q = alloca i8*, align 8
  %off = alloca i32, align 4
  store %struct.generic_list* %rrsl, %struct.generic_list** %1, align 8
  call void @llvm.dbg.declare(metadata %struct.generic_list** %1, metadata !15090, metadata !2279), !dbg !15091
  store i8* %qname, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !15092, metadata !2279), !dbg !15093
  call void @llvm.dbg.declare(metadata %struct.generic_list** %gl_tmp, metadata !15094, metadata !2279), !dbg !15095
  call void @llvm.dbg.declare(metadata %union.u_key* %rk, metadata !15096, metadata !2279), !dbg !15097
  call void @llvm.dbg.declare(metadata i32* %idx, metadata !15098, metadata !2279), !dbg !15099
  call void @llvm.dbg.declare(metadata i8** %p, metadata !15100, metadata !2279), !dbg !15101
  call void @llvm.dbg.declare(metadata i8** %q, metadata !15102, metadata !2279), !dbg !15103
  call void @llvm.dbg.declare(metadata i32* %off, metadata !15104, metadata !2279), !dbg !15105
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.13.505, i32 0, i32 0)), !dbg !15106
  %3 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 25), align 8, !dbg !15107
  %4 = icmp ne i32 %3, 0, !dbg !15109
  br i1 %4, label %6, label %5, !dbg !15110

; <label>:5                                       ; preds = %0
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.14.506, i32 0, i32 0)), !dbg !15111
  br label %103, !dbg !15113

; <label>:6                                       ; preds = %0
  %7 = load i8*, i8** %2, align 8, !dbg !15114
  %8 = call i32 @conv_is_scoped_ptr(i8* %7, i32 1), !dbg !15115
  store i32 %8, i32* %idx, align 4, !dbg !15116
  %9 = load i32, i32* %idx, align 4, !dbg !15117
  %10 = icmp eq i32 %9, -1, !dbg !15119
  br i1 %10, label %11, label %12, !dbg !15120

; <label>:11                                      ; preds = %6
  br label %103, !dbg !15121

; <label>:12                                      ; preds = %6
  %13 = load %struct.generic_list*, %struct.generic_list** %1, align 8, !dbg !15122
  %14 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %13, i32 0, i32 2, !dbg !15123
  store i8* null, i8** %14, align 8, !dbg !15124
  %15 = load %struct.generic_list*, %struct.generic_list** %1, align 8, !dbg !15125
  %16 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %15, i32 0, i32 0, !dbg !15127
  %17 = load %struct.generic_list*, %struct.generic_list** %16, align 8, !dbg !15127
  store %struct.generic_list* %17, %struct.generic_list** %gl_tmp, align 8, !dbg !15128
  br label %18, !dbg !15129

; <label>:18                                      ; preds = %98, %12
  %19 = load %struct.generic_list*, %struct.generic_list** %gl_tmp, align 8, !dbg !15130
  %20 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %19, i32 0, i32 2, !dbg !15133
  %21 = load i8*, i8** %20, align 8, !dbg !15133
  %22 = icmp ne i8* %21, null, !dbg !15134
  br i1 %22, label %23, label %102, !dbg !15134

; <label>:23                                      ; preds = %18
  %24 = load %struct.generic_list*, %struct.generic_list** %gl_tmp, align 8, !dbg !15135
  %25 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %24, i32 0, i32 2, !dbg !15137
  %26 = load i8*, i8** %25, align 8, !dbg !15137
  %27 = bitcast i8* %26 to %struct.rr_set*, !dbg !15138
  %28 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %27, i32 0, i32 2, !dbg !15139
  %29 = bitcast %union.u_key* %rk to i8*, !dbg !15139
  %30 = bitcast %union.u_key* %28 to i8*, !dbg !15139
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %29, i8* %30, i64 8, i32 8, i1 false), !dbg !15139
  %31 = bitcast %union.u_key* %rk to %struct.key_info**, !dbg !15140
  %32 = load %struct.key_info*, %struct.key_info** %31, align 8, !dbg !15140
  %33 = getelementptr inbounds %struct.key_info, %struct.key_info* %32, i32 0, i32 0, !dbg !15142
  %34 = load i16, i16* %33, align 2, !dbg !15142
  %35 = zext i16 %34 to i32, !dbg !15143
  %36 = icmp ne i32 %35, 12, !dbg !15144
  br i1 %36, label %37, label %38, !dbg !15145

; <label>:37                                      ; preds = %23
  br label %98, !dbg !15146

; <label>:38                                      ; preds = %23
  %39 = bitcast %union.u_key* %rk to i8**, !dbg !15147
  %40 = load i8*, i8** %39, align 8, !dbg !15147
  %41 = getelementptr inbounds i8, i8* %40, i64 6, !dbg !15148
  store i8* %41, i8** %p, align 8, !dbg !15149
  %42 = load i32, i32* %idx, align 4, !dbg !15150
  %43 = sext i32 %42 to i64, !dbg !15151
  %44 = getelementptr inbounds [30 x %struct.in6_addr], [30 x %struct.in6_addr]* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 27), i64 0, i64 %43, !dbg !15151
  %45 = getelementptr inbounds %struct.in6_addr, %struct.in6_addr* %44, i32 0, i32 0, !dbg !15152
  %46 = bitcast %union.anon.1* %45 to [16 x i8]*, !dbg !15152
  %47 = getelementptr inbounds [16 x i8], [16 x i8]* %46, i64 0, i64 0, !dbg !15151
  store i8* %47, i8** %q, align 8, !dbg !15153
  store i32 0, i32* %off, align 4, !dbg !15154
  br label %48, !dbg !15156

; <label>:48                                      ; preds = %94, %38
  %49 = load i32, i32* %off, align 4, !dbg !15157
  %50 = load i32, i32* %idx, align 4, !dbg !15160
  %51 = sext i32 %50 to i64, !dbg !15161
  %52 = getelementptr inbounds [30 x i32], [30 x i32]* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 28), i64 0, i64 %51, !dbg !15161
  %53 = load i32, i32* %52, align 4, !dbg !15161
  %54 = sdiv i32 %53, 8, !dbg !15162
  %55 = icmp slt i32 %49, %54, !dbg !15163
  br i1 %55, label %56, label %97, !dbg !15164

; <label>:56                                      ; preds = %48
  %57 = load i32, i32* %off, align 4, !dbg !15165
  %58 = sext i32 %57 to i64, !dbg !15167
  %59 = load i8*, i8** %q, align 8, !dbg !15167
  %60 = getelementptr inbounds i8, i8* %59, i64 %58, !dbg !15167
  %61 = load i8, i8* %60, align 1, !dbg !15167
  %62 = zext i8 %61 to i32, !dbg !15167
  %63 = ashr i32 %62, 4, !dbg !15168
  %64 = and i32 %63, 15, !dbg !15169
  %65 = sext i32 %64 to i64, !dbg !15170
  %66 = load i8*, i8** @hex, align 8, !dbg !15170
  %67 = getelementptr inbounds i8, i8* %66, i64 %65, !dbg !15170
  %68 = load i8, i8* %67, align 1, !dbg !15170
  %69 = load i32, i32* %off, align 4, !dbg !15171
  %70 = mul nsw i32 %69, 4, !dbg !15172
  %71 = sub nsw i32 60, %70, !dbg !15173
  %72 = add nsw i32 %71, 3, !dbg !15174
  %73 = sext i32 %72 to i64, !dbg !15175
  %74 = load i8*, i8** %p, align 8, !dbg !15175
  %75 = getelementptr inbounds i8, i8* %74, i64 %73, !dbg !15175
  store i8 %68, i8* %75, align 1, !dbg !15176
  %76 = load i32, i32* %off, align 4, !dbg !15177
  %77 = sext i32 %76 to i64, !dbg !15178
  %78 = load i8*, i8** %q, align 8, !dbg !15178
  %79 = getelementptr inbounds i8, i8* %78, i64 %77, !dbg !15178
  %80 = load i8, i8* %79, align 1, !dbg !15178
  %81 = zext i8 %80 to i32, !dbg !15178
  %82 = and i32 %81, 15, !dbg !15179
  %83 = sext i32 %82 to i64, !dbg !15180
  %84 = load i8*, i8** @hex, align 8, !dbg !15180
  %85 = getelementptr inbounds i8, i8* %84, i64 %83, !dbg !15180
  %86 = load i8, i8* %85, align 1, !dbg !15180
  %87 = load i32, i32* %off, align 4, !dbg !15181
  %88 = mul nsw i32 %87, 4, !dbg !15182
  %89 = sub nsw i32 60, %88, !dbg !15183
  %90 = add nsw i32 %89, 1, !dbg !15184
  %91 = sext i32 %90 to i64, !dbg !15185
  %92 = load i8*, i8** %p, align 8, !dbg !15185
  %93 = getelementptr inbounds i8, i8* %92, i64 %91, !dbg !15185
  store i8 %86, i8* %93, align 1, !dbg !15186
  br label %94, !dbg !15187

; <label>:94                                      ; preds = %56
  %95 = load i32, i32* %off, align 4, !dbg !15188
  %96 = add nsw i32 %95, 1, !dbg !15188
  store i32 %96, i32* %off, align 4, !dbg !15188
  br label %48, !dbg !15190

; <label>:97                                      ; preds = %48
  br label %98, !dbg !15191

; <label>:98                                      ; preds = %97, %37
  %99 = load %struct.generic_list*, %struct.generic_list** %gl_tmp, align 8, !dbg !15192
  %100 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %99, i32 0, i32 0, !dbg !15194
  %101 = load %struct.generic_list*, %struct.generic_list** %100, align 8, !dbg !15194
  store %struct.generic_list* %101, %struct.generic_list** %gl_tmp, align 8, !dbg !15195
  br label %18, !dbg !15196

; <label>:102                                     ; preds = %18
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.15.514, i32 0, i32 0)), !dbg !15197
  br label %103, !dbg !15198

; <label>:103                                     ; preds = %102, %11, %5
  ret void, !dbg !15199
}

; Function Attrs: nounwind uwtable
define i32 @conv_is_scoped_ptr(i8* %qname, i32 %to) #0 !dbg !2126 {
  %1 = alloca i32, align 4
  %2 = alloca i8*, align 8
  %3 = alloca i32, align 4
  %qname6 = alloca i8*, align 8
  %q6 = alloca i8*, align 8
  %a6 = alloca %struct.in6_addr, align 4
  %p = alloca i8*, align 8
  %val = alloca i32, align 4
  %buf = alloca [3 x i8], align 1
  %i = alloca i32, align 4
  store i8* %qname, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !15200, metadata !2279), !dbg !15201
  store i32 %to, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !15202, metadata !2279), !dbg !15203
  call void @llvm.dbg.declare(metadata i8** %qname6, metadata !15204, metadata !2279), !dbg !15205
  call void @llvm.dbg.declare(metadata i8** %q6, metadata !15206, metadata !2279), !dbg !15207
  call void @llvm.dbg.declare(metadata %struct.in6_addr* %a6, metadata !15208, metadata !2279), !dbg !15209
  call void @llvm.dbg.declare(metadata i8** %p, metadata !15210, metadata !2279), !dbg !15211
  call void @llvm.dbg.declare(metadata i32* %val, metadata !15212, metadata !2279), !dbg !15213
  call void @llvm.dbg.declare(metadata [3 x i8]* %buf, metadata !15214, metadata !2279), !dbg !15216
  call void @llvm.dbg.declare(metadata i32* %i, metadata !15217, metadata !2279), !dbg !15218
  %4 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 25), align 8, !dbg !15219
  %5 = icmp ne i32 %4, 0, !dbg !15221
  br i1 %5, label %6, label %11, !dbg !15222

; <label>:6                                       ; preds = %0
  %7 = load i8*, i8** %2, align 8, !dbg !15223
  %8 = load i8, i8* %7, align 1, !dbg !15225
  %9 = zext i8 %8 to i32, !dbg !15225
  %10 = icmp eq i32 %9, 0, !dbg !15226
  br i1 %10, label %11, label %12, !dbg !15227

; <label>:11                                      ; preds = %6, %0
  store i32 -1, i32* %1, align 4, !dbg !15228
  br label %123, !dbg !15228

; <label>:12                                      ; preds = %6
  %13 = load i8*, i8** %2, align 8, !dbg !15229
  %14 = call i8* @strstr(i8* %13, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.16.509, i32 0, i32 0)) #9, !dbg !15231
  %15 = icmp ne i8* %14, null, !dbg !15231
  br i1 %15, label %21, label %16, !dbg !15232

; <label>:16                                      ; preds = %12
  %17 = load i8*, i8** %2, align 8, !dbg !15233
  %18 = call i8* @strstr(i8* %17, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.17.510, i32 0, i32 0)) #9, !dbg !15235
  %19 = icmp ne i8* %18, null, !dbg !15235
  br i1 %19, label %21, label %20, !dbg !15236

; <label>:20                                      ; preds = %16
  store i32 -1, i32* %1, align 4, !dbg !15237
  br label %123, !dbg !15237

; <label>:21                                      ; preds = %16, %12
  %22 = load i8*, i8** %2, align 8, !dbg !15238
  %23 = call i8* @strstr(i8* %22, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.18.511, i32 0, i32 0)) #9, !dbg !15239
  store i8* %23, i8** %qname6, align 8, !dbg !15240
  %24 = load i8*, i8** %qname6, align 8, !dbg !15241
  %25 = icmp ne i8* %24, null, !dbg !15241
  br i1 %25, label %29, label %26, !dbg !15243

; <label>:26                                      ; preds = %21
  %27 = load i8*, i8** %2, align 8, !dbg !15244
  %28 = call i8* @strstr(i8* %27, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.19.512, i32 0, i32 0)) #9, !dbg !15245
  store i8* %28, i8** %qname6, align 8, !dbg !15246
  br label %29, !dbg !15247

; <label>:29                                      ; preds = %26, %21
  %30 = load i8*, i8** %qname6, align 8, !dbg !15248
  %31 = icmp ne i8* %30, null, !dbg !15248
  br i1 %31, label %33, label %32, !dbg !15250

; <label>:32                                      ; preds = %29
  store i32 -1, i32* %1, align 4, !dbg !15251
  br label %123, !dbg !15251

; <label>:33                                      ; preds = %29
  %34 = bitcast %struct.in6_addr* %a6 to i8*, !dbg !15252
  call void @llvm.memset.p0i8.i64(i8* %34, i8 0, i64 16, i32 4, i1 false), !dbg !15252
  %35 = load i8*, i8** %qname6, align 8, !dbg !15253
  %36 = getelementptr inbounds i8, i8* %35, i32 -1, !dbg !15253
  store i8* %36, i8** %qname6, align 8, !dbg !15253
  %37 = load i8*, i8** %qname6, align 8, !dbg !15254
  %38 = load i8*, i8** %2, align 8, !dbg !15256
  %39 = ptrtoint i8* %37 to i64, !dbg !15257
  %40 = ptrtoint i8* %38 to i64, !dbg !15257
  %41 = sub i64 %39, %40, !dbg !15257
  %42 = icmp ne i64 %41, 64, !dbg !15258
  br i1 %42, label %43, label %44, !dbg !15259

; <label>:43                                      ; preds = %33
  store i32 -1, i32* %1, align 4, !dbg !15260
  br label %123, !dbg !15260

; <label>:44                                      ; preds = %33
  %45 = load i8*, i8** %qname6, align 8, !dbg !15261
  %46 = getelementptr inbounds i8, i8* %45, i32 -1, !dbg !15261
  store i8* %46, i8** %qname6, align 8, !dbg !15261
  %47 = load i8*, i8** %qname6, align 8, !dbg !15262
  store i8* %47, i8** %q6, align 8, !dbg !15263
  %48 = getelementptr inbounds %struct.in6_addr, %struct.in6_addr* %a6, i32 0, i32 0, !dbg !15264
  %49 = bitcast %union.anon.1* %48 to [16 x i8]*, !dbg !15264
  %50 = getelementptr inbounds [16 x i8], [16 x i8]* %49, i64 0, i64 0, !dbg !15265
  store i8* %50, i8** %p, align 8, !dbg !15266
  br label %51, !dbg !15267

; <label>:51                                      ; preds = %78, %44
  %52 = load i8*, i8** %q6, align 8, !dbg !15268
  %53 = getelementptr inbounds i8, i8* %52, i64 -3, !dbg !15270
  %54 = load i8*, i8** %2, align 8, !dbg !15271
  %55 = icmp uge i8* %53, %54, !dbg !15272
  br i1 %55, label %56, label %88, !dbg !15273

; <label>:56                                      ; preds = %51
  %57 = load i8*, i8** %q6, align 8, !dbg !15274
  %58 = getelementptr inbounds i8, i8* %57, i32 -1, !dbg !15274
  store i8* %58, i8** %q6, align 8, !dbg !15274
  %59 = load i8, i8* %57, align 1, !dbg !15276
  %60 = getelementptr inbounds [3 x i8], [3 x i8]* %buf, i64 0, i64 0, !dbg !15277
  store i8 %59, i8* %60, align 1, !dbg !15278
  %61 = load i8*, i8** %q6, align 8, !dbg !15279
  %62 = getelementptr inbounds i8, i8* %61, i32 -1, !dbg !15279
  store i8* %62, i8** %q6, align 8, !dbg !15279
  %63 = load i8, i8* %61, align 1, !dbg !15281
  %64 = zext i8 %63 to i32, !dbg !15281
  %65 = icmp ne i32 %64, 1, !dbg !15282
  br i1 %65, label %66, label %67, !dbg !15283

; <label>:66                                      ; preds = %56
  store i32 -1, i32* %1, align 4, !dbg !15284
  br label %123, !dbg !15284

; <label>:67                                      ; preds = %56
  %68 = load i8*, i8** %q6, align 8, !dbg !15285
  %69 = getelementptr inbounds i8, i8* %68, i32 -1, !dbg !15285
  store i8* %69, i8** %q6, align 8, !dbg !15285
  %70 = load i8, i8* %68, align 1, !dbg !15286
  %71 = getelementptr inbounds [3 x i8], [3 x i8]* %buf, i64 0, i64 1, !dbg !15287
  store i8 %70, i8* %71, align 1, !dbg !15288
  %72 = load i8*, i8** %q6, align 8, !dbg !15289
  %73 = getelementptr inbounds i8, i8* %72, i32 -1, !dbg !15289
  store i8* %73, i8** %q6, align 8, !dbg !15289
  %74 = load i8, i8* %72, align 1, !dbg !15291
  %75 = zext i8 %74 to i32, !dbg !15291
  %76 = icmp ne i32 %75, 1, !dbg !15292
  br i1 %76, label %77, label %78, !dbg !15293

; <label>:77                                      ; preds = %67
  store i32 -1, i32* %1, align 4, !dbg !15294
  br label %123, !dbg !15294

; <label>:78                                      ; preds = %67
  %79 = getelementptr inbounds [3 x i8], [3 x i8]* %buf, i64 0, i64 2, !dbg !15295
  store i8 0, i8* %79, align 1, !dbg !15296
  %80 = getelementptr inbounds [3 x i8], [3 x i8]* %buf, i32 0, i32 0, !dbg !15297
  %81 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %80, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.20.513, i32 0, i32 0), i32* %val) #10, !dbg !15298
  %82 = load i32, i32* %val, align 4, !dbg !15299
  %83 = and i32 %82, 255, !dbg !15300
  %84 = trunc i32 %83 to i8, !dbg !15299
  %85 = load i8*, i8** %p, align 8, !dbg !15301
  store i8 %84, i8* %85, align 1, !dbg !15302
  %86 = load i8*, i8** %p, align 8, !dbg !15303
  %87 = getelementptr inbounds i8, i8* %86, i32 1, !dbg !15303
  store i8* %87, i8** %p, align 8, !dbg !15303
  br label %51, !dbg !15304

; <label>:88                                      ; preds = %51
  store i32 0, i32* %i, align 4, !dbg !15306
  br label %89, !dbg !15308

; <label>:89                                      ; preds = %119, %88
  %90 = load i32, i32* %i, align 4, !dbg !15309
  %91 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 25), align 8, !dbg !15312
  %92 = icmp slt i32 %90, %91, !dbg !15313
  br i1 %92, label %93, label %122, !dbg !15314

; <label>:93                                      ; preds = %89
  %94 = bitcast %struct.in6_addr* %a6 to i8*, !dbg !15315
  %95 = load i32, i32* %3, align 4, !dbg !15318
  %96 = icmp ne i32 %95, 0, !dbg !15318
  br i1 %96, label %97, label %101, !dbg !15318

; <label>:97                                      ; preds = %93
  %98 = load i32, i32* %i, align 4, !dbg !15319
  %99 = sext i32 %98 to i64, !dbg !15321
  %100 = getelementptr inbounds [30 x %struct.in6_addr], [30 x %struct.in6_addr]* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 27), i64 0, i64 %99, !dbg !15321
  br label %105, !dbg !15322

; <label>:101                                     ; preds = %93
  %102 = load i32, i32* %i, align 4, !dbg !15323
  %103 = sext i32 %102 to i64, !dbg !15325
  %104 = getelementptr inbounds [30 x %struct.in6_addr], [30 x %struct.in6_addr]* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 26), i64 0, i64 %103, !dbg !15325
  br label %105, !dbg !15326

; <label>:105                                     ; preds = %101, %97
  %106 = phi %struct.in6_addr* [ %100, %97 ], [ %104, %101 ], !dbg !15327
  %107 = bitcast %struct.in6_addr* %106 to i8*, !dbg !15327
  %108 = load i32, i32* %i, align 4, !dbg !15329
  %109 = sext i32 %108 to i64, !dbg !15330
  %110 = getelementptr inbounds [30 x i32], [30 x i32]* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 28), i64 0, i64 %109, !dbg !15330
  %111 = load i32, i32* %110, align 4, !dbg !15330
  %112 = sdiv i32 %111, 8, !dbg !15331
  %113 = sext i32 %112 to i64, !dbg !15330
  %114 = call i32 @memcmp(i8* %94, i8* %107, i64 %113) #9, !dbg !15332
  %115 = icmp ne i32 %114, 0, !dbg !15332
  br i1 %115, label %118, label %116, !dbg !15333

; <label>:116                                     ; preds = %105
  %117 = load i32, i32* %i, align 4, !dbg !15334
  store i32 %117, i32* %1, align 4, !dbg !15335
  br label %123, !dbg !15335

; <label>:118                                     ; preds = %105
  br label %119, !dbg !15336

; <label>:119                                     ; preds = %118
  %120 = load i32, i32* %i, align 4, !dbg !15337
  %121 = add nsw i32 %120, 1, !dbg !15337
  store i32 %121, i32* %i, align 4, !dbg !15337
  br label %89, !dbg !15339

; <label>:122                                     ; preds = %89
  store i32 -1, i32* %1, align 4, !dbg !15340
  br label %123, !dbg !15340

; <label>:123                                     ; preds = %122, %116, %77, %66, %43, %32, %20, %11
  %124 = load i32, i32* %1, align 4, !dbg !15341
  ret i32 %124, !dbg !15341
}

; Function Attrs: nounwind uwtable
define void @conv_scoped_ptr_rq(i8* %qname) #0 !dbg !2129 {
  %1 = alloca i8*, align 8
  %p = alloca i8*, align 8
  %q = alloca i8*, align 8
  %off = alloca i32, align 4
  %idx = alloca i32, align 4
  store i8* %qname, i8** %1, align 8
  call void @llvm.dbg.declare(metadata i8** %1, metadata !15342, metadata !2279), !dbg !15343
  call void @llvm.dbg.declare(metadata i8** %p, metadata !15344, metadata !2279), !dbg !15345
  call void @llvm.dbg.declare(metadata i8** %q, metadata !15346, metadata !2279), !dbg !15347
  call void @llvm.dbg.declare(metadata i32* %off, metadata !15348, metadata !2279), !dbg !15349
  call void @llvm.dbg.declare(metadata i32* %idx, metadata !15350, metadata !2279), !dbg !15351
  %2 = load i8*, i8** %1, align 8, !dbg !15352
  %3 = call i32 @conv_is_scoped_ptr(i8* %2, i32 1), !dbg !15353
  store i32 %3, i32* %idx, align 4, !dbg !15354
  %4 = load i32, i32* %idx, align 4, !dbg !15355
  %5 = icmp eq i32 %4, -1, !dbg !15357
  br i1 %5, label %6, label %7, !dbg !15358

; <label>:6                                       ; preds = %0
  br label %64, !dbg !15359

; <label>:7                                       ; preds = %0
  %8 = load i8*, i8** %1, align 8, !dbg !15360
  store i8* %8, i8** %p, align 8, !dbg !15361
  %9 = load i32, i32* %idx, align 4, !dbg !15362
  %10 = sext i32 %9 to i64, !dbg !15363
  %11 = getelementptr inbounds [30 x %struct.in6_addr], [30 x %struct.in6_addr]* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 26), i64 0, i64 %10, !dbg !15363
  %12 = getelementptr inbounds %struct.in6_addr, %struct.in6_addr* %11, i32 0, i32 0, !dbg !15364
  %13 = bitcast %union.anon.1* %12 to [16 x i8]*, !dbg !15364
  %14 = getelementptr inbounds [16 x i8], [16 x i8]* %13, i64 0, i64 0, !dbg !15363
  store i8* %14, i8** %q, align 8, !dbg !15365
  store i32 0, i32* %off, align 4, !dbg !15366
  br label %15, !dbg !15368

; <label>:15                                      ; preds = %61, %7
  %16 = load i32, i32* %off, align 4, !dbg !15369
  %17 = load i32, i32* %idx, align 4, !dbg !15372
  %18 = sext i32 %17 to i64, !dbg !15373
  %19 = getelementptr inbounds [30 x i32], [30 x i32]* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 28), i64 0, i64 %18, !dbg !15373
  %20 = load i32, i32* %19, align 4, !dbg !15373
  %21 = sdiv i32 %20, 8, !dbg !15374
  %22 = icmp slt i32 %16, %21, !dbg !15375
  br i1 %22, label %23, label %64, !dbg !15376

; <label>:23                                      ; preds = %15
  %24 = load i32, i32* %off, align 4, !dbg !15377
  %25 = sext i32 %24 to i64, !dbg !15379
  %26 = load i8*, i8** %q, align 8, !dbg !15379
  %27 = getelementptr inbounds i8, i8* %26, i64 %25, !dbg !15379
  %28 = load i8, i8* %27, align 1, !dbg !15379
  %29 = zext i8 %28 to i32, !dbg !15379
  %30 = ashr i32 %29, 4, !dbg !15380
  %31 = and i32 %30, 15, !dbg !15381
  %32 = sext i32 %31 to i64, !dbg !15382
  %33 = load i8*, i8** @hex, align 8, !dbg !15382
  %34 = getelementptr inbounds i8, i8* %33, i64 %32, !dbg !15382
  %35 = load i8, i8* %34, align 1, !dbg !15382
  %36 = load i32, i32* %off, align 4, !dbg !15383
  %37 = mul nsw i32 %36, 4, !dbg !15384
  %38 = sub nsw i32 60, %37, !dbg !15385
  %39 = add nsw i32 %38, 3, !dbg !15386
  %40 = sext i32 %39 to i64, !dbg !15387
  %41 = load i8*, i8** %p, align 8, !dbg !15387
  %42 = getelementptr inbounds i8, i8* %41, i64 %40, !dbg !15387
  store i8 %35, i8* %42, align 1, !dbg !15388
  %43 = load i32, i32* %off, align 4, !dbg !15389
  %44 = sext i32 %43 to i64, !dbg !15390
  %45 = load i8*, i8** %q, align 8, !dbg !15390
  %46 = getelementptr inbounds i8, i8* %45, i64 %44, !dbg !15390
  %47 = load i8, i8* %46, align 1, !dbg !15390
  %48 = zext i8 %47 to i32, !dbg !15390
  %49 = and i32 %48, 15, !dbg !15391
  %50 = sext i32 %49 to i64, !dbg !15392
  %51 = load i8*, i8** @hex, align 8, !dbg !15392
  %52 = getelementptr inbounds i8, i8* %51, i64 %50, !dbg !15392
  %53 = load i8, i8* %52, align 1, !dbg !15392
  %54 = load i32, i32* %off, align 4, !dbg !15393
  %55 = mul nsw i32 %54, 4, !dbg !15394
  %56 = sub nsw i32 60, %55, !dbg !15395
  %57 = add nsw i32 %56, 1, !dbg !15396
  %58 = sext i32 %57 to i64, !dbg !15397
  %59 = load i8*, i8** %p, align 8, !dbg !15397
  %60 = getelementptr inbounds i8, i8* %59, i64 %58, !dbg !15397
  store i8 %53, i8* %60, align 1, !dbg !15398
  br label %61, !dbg !15399

; <label>:61                                      ; preds = %23
  %62 = load i32, i32* %off, align 4, !dbg !15400
  %63 = add nsw i32 %62, 1, !dbg !15400
  store i32 %63, i32* %off, align 4, !dbg !15400
  br label %15, !dbg !15402

; <label>:64                                      ; preds = %6, %15
  ret void, !dbg !15403
}

; Function Attrs: nounwind uwtable
define %struct.rr_set* @conv_stf_owner_rrset(%struct.rr_set* %rrs) #0 !dbg !2171 {
  %1 = alloca %struct.rr_set*, align 8
  %2 = alloca %struct.rr_set*, align 8
  %fn = alloca i8*, align 8
  %owner = alloca [256 x i8], align 16
  %str = alloca [256 x i8], align 16
  %own = alloca i8*, align 8
  %ostop = alloca i8*, align 8
  %op = alloca i8*, align 8
  %owner_len = alloca i32, align 4
  %i = alloca i32, align 4
  %val = alloca i32, align 4
  %rrs_new = alloca %struct.rr_set*, align 8
  %rrl = alloca %struct.rr_list*, align 8
  %buf = alloca [4 x i8], align 1
  store %struct.rr_set* %rrs, %struct.rr_set** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.rr_set** %2, metadata !15404, metadata !2279), !dbg !15405
  call void @llvm.dbg.declare(metadata i8** %fn, metadata !15406, metadata !2279), !dbg !15407
  store i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.517, i32 0, i32 0), i8** %fn, align 8, !dbg !15407
  call void @llvm.dbg.declare(metadata [256 x i8]* %owner, metadata !15408, metadata !2279), !dbg !15409
  call void @llvm.dbg.declare(metadata [256 x i8]* %str, metadata !15410, metadata !2279), !dbg !15411
  call void @llvm.dbg.declare(metadata i8** %own, metadata !15412, metadata !2279), !dbg !15413
  call void @llvm.dbg.declare(metadata i8** %ostop, metadata !15414, metadata !2279), !dbg !15415
  call void @llvm.dbg.declare(metadata i8** %op, metadata !15416, metadata !2279), !dbg !15417
  call void @llvm.dbg.declare(metadata i32* %owner_len, metadata !15418, metadata !2279), !dbg !15419
  call void @llvm.dbg.declare(metadata i32* %i, metadata !15420, metadata !2279), !dbg !15421
  call void @llvm.dbg.declare(metadata i32* %val, metadata !15422, metadata !2279), !dbg !15423
  call void @llvm.dbg.declare(metadata %struct.rr_set** %rrs_new, metadata !15424, metadata !2279), !dbg !15425
  store %struct.rr_set* null, %struct.rr_set** %rrs_new, align 8, !dbg !15425
  call void @llvm.dbg.declare(metadata %struct.rr_list** %rrl, metadata !15426, metadata !2279), !dbg !15442
  call void @llvm.dbg.declare(metadata [4 x i8]* %buf, metadata !15443, metadata !2279), !dbg !15445
  %3 = load i8*, i8** %fn, align 8, !dbg !15446
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1.518, i32 0, i32 0), i8* %3), !dbg !15447
  %4 = load %struct.rr_set*, %struct.rr_set** %2, align 8, !dbg !15448
  %5 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %4, i32 0, i32 2, !dbg !15450
  %6 = bitcast %union.u_key* %5 to %struct.key_info**, !dbg !15451
  %7 = load %struct.key_info*, %struct.key_info** %6, align 8, !dbg !15451
  %8 = getelementptr inbounds %struct.key_info, %struct.key_info* %7, i32 0, i32 0, !dbg !15452
  %9 = load i16, i16* %8, align 2, !dbg !15452
  %10 = zext i16 %9 to i32, !dbg !15448
  %11 = icmp ne i32 %10, 6, !dbg !15453
  br i1 %11, label %21, label %12, !dbg !15454

; <label>:12                                      ; preds = %0
  %13 = load %struct.rr_set*, %struct.rr_set** %2, align 8, !dbg !15455
  %14 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %13, i32 0, i32 2, !dbg !15456
  %15 = bitcast %union.u_key* %14 to %struct.key_info**, !dbg !15457
  %16 = load %struct.key_info*, %struct.key_info** %15, align 8, !dbg !15457
  %17 = getelementptr inbounds %struct.key_info, %struct.key_info* %16, i32 0, i32 0, !dbg !15458
  %18 = load i16, i16* %17, align 2, !dbg !15458
  %19 = zext i16 %18 to i32, !dbg !15455
  %20 = icmp ne i32 %19, 2, !dbg !15459
  br i1 %20, label %21, label %22, !dbg !15460

; <label>:21                                      ; preds = %12, %0
  store %struct.rr_set* null, %struct.rr_set** %1, align 8, !dbg !15462
  br label %165, !dbg !15462

; <label>:22                                      ; preds = %12
  %23 = load %struct.rr_set*, %struct.rr_set** %2, align 8, !dbg !15463
  %24 = call %struct.rr_list* @rr_list_of_rrset(%struct.rr_set* %23), !dbg !15464
  store %struct.rr_list* %24, %struct.rr_list** %rrl, align 8, !dbg !15465
  %25 = load %struct.rr_list*, %struct.rr_list** %rrl, align 8, !dbg !15466
  %26 = icmp ne %struct.rr_list* %25, null, !dbg !15466
  br i1 %26, label %28, label %27, !dbg !15468

; <label>:27                                      ; preds = %22
  store %struct.rr_set* null, %struct.rr_set** %1, align 8, !dbg !15469
  br label %165, !dbg !15469

; <label>:28                                      ; preds = %22
  %29 = load %struct.rr_set*, %struct.rr_set** %2, align 8, !dbg !15470
  %30 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %29, i32 0, i32 2, !dbg !15470
  %31 = bitcast %union.u_key* %30 to %struct.key_info**, !dbg !15470
  %32 = load %struct.key_info*, %struct.key_info** %31, align 8, !dbg !15470
  %33 = bitcast %struct.key_info* %32 to i8*, !dbg !15470
  %34 = getelementptr inbounds i8, i8* %33, i64 6, !dbg !15470
  store i8* %34, i8** %own, align 8, !dbg !15471
  %35 = load i8*, i8** %own, align 8, !dbg !15472
  %36 = call i8* @strstr(i8* %35, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2.519, i32 0, i32 0)) #9, !dbg !15473
  store i8* %36, i8** %ostop, align 8, !dbg !15474
  %37 = load i8*, i8** %ostop, align 8, !dbg !15475
  %38 = icmp ne i8* %37, null, !dbg !15475
  br i1 %38, label %42, label %39, !dbg !15477

; <label>:39                                      ; preds = %28
  %40 = load i8*, i8** %own, align 8, !dbg !15478
  %41 = call i8* @strstr(i8* %40, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.520, i32 0, i32 0)) #9, !dbg !15479
  store i8* %41, i8** %ostop, align 8, !dbg !15480
  br label %42, !dbg !15481

; <label>:42                                      ; preds = %39, %28
  %43 = load i8*, i8** %ostop, align 8, !dbg !15482
  %44 = icmp ne i8* %43, null, !dbg !15482
  br i1 %44, label %66, label %45, !dbg !15484

; <label>:45                                      ; preds = %42
  %46 = load %struct.rr_set*, %struct.rr_set** %2, align 8, !dbg !15485
  %47 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %46, i32 0, i32 2, !dbg !15487
  %48 = bitcast %union.u_key* %47 to %struct.key_info**, !dbg !15488
  %49 = load %struct.key_info*, %struct.key_info** %48, align 8, !dbg !15488
  %50 = getelementptr inbounds %struct.key_info, %struct.key_info* %49, i32 0, i32 2, !dbg !15489
  %51 = load i16, i16* %50, align 2, !dbg !15489
  %52 = zext i16 %51 to i32, !dbg !15485
  store i32 %52, i32* %owner_len, align 4, !dbg !15490
  %53 = getelementptr inbounds [256 x i8], [256 x i8]* %owner, i32 0, i32 0, !dbg !15491
  %54 = load i8*, i8** %own, align 8, !dbg !15492
  %55 = load i32, i32* %owner_len, align 4, !dbg !15493
  %56 = sext i32 %55 to i64, !dbg !15493
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %53, i8* %54, i64 %56, i32 1, i1 false), !dbg !15491
  %57 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 8), align 4, !dbg !15494
  %58 = icmp ne i32 %57, 0, !dbg !15496
  br i1 %58, label %59, label %65, !dbg !15497

; <label>:59                                      ; preds = %45
  %60 = getelementptr inbounds [256 x i8], [256 x i8]* %str, i32 0, i32 0, !dbg !15498
  %61 = getelementptr inbounds [256 x i8], [256 x i8]* %owner, i32 0, i32 0, !dbg !15500
  %62 = call i8* @dname_decompress(i8* %60, i32 256, i8* %61, i8* null, i8* null, i32* null), !dbg !15501
  %63 = load i8*, i8** %fn, align 8, !dbg !15502
  %64 = getelementptr inbounds [256 x i8], [256 x i8]* %str, i32 0, i32 0, !dbg !15503
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.4.521, i32 0, i32 0), i8* %63, i8* %64), !dbg !15504
  br label %65, !dbg !15505

; <label>:65                                      ; preds = %59, %45
  br label %142, !dbg !15506

; <label>:66                                      ; preds = %42
  %67 = getelementptr inbounds [256 x i8], [256 x i8]* %owner, i32 0, i32 0, !dbg !15507
  store i8* %67, i8** %op, align 8, !dbg !15509
  br label %68, !dbg !15510

; <label>:68                                      ; preds = %92, %66
  %69 = load i8*, i8** %own, align 8, !dbg !15511
  %70 = load i8*, i8** %ostop, align 8, !dbg !15513
  %71 = icmp ult i8* %69, %70, !dbg !15514
  br i1 %71, label %72, label %122, !dbg !15515

; <label>:72                                      ; preds = %68
  store i32 0, i32* %i, align 4, !dbg !15516
  br label %73, !dbg !15519

; <label>:73                                      ; preds = %89, %72
  %74 = load i32, i32* %i, align 4, !dbg !15520
  %75 = load i8*, i8** %own, align 8, !dbg !15523
  %76 = load i8, i8* %75, align 1, !dbg !15524
  %77 = zext i8 %76 to i32, !dbg !15524
  %78 = icmp slt i32 %74, %77, !dbg !15525
  br i1 %78, label %79, label %92, !dbg !15526

; <label>:79                                      ; preds = %73
  %80 = load i8*, i8** %own, align 8, !dbg !15527
  %81 = load i32, i32* %i, align 4, !dbg !15528
  %82 = sext i32 %81 to i64, !dbg !15529
  %83 = getelementptr inbounds i8, i8* %80, i64 %82, !dbg !15529
  %84 = getelementptr inbounds i8, i8* %83, i64 1, !dbg !15530
  %85 = load i8, i8* %84, align 1, !dbg !15531
  %86 = load i32, i32* %i, align 4, !dbg !15532
  %87 = sext i32 %86 to i64, !dbg !15533
  %88 = getelementptr inbounds [4 x i8], [4 x i8]* %buf, i64 0, i64 %87, !dbg !15533
  store i8 %85, i8* %88, align 1, !dbg !15534
  br label %89, !dbg !15533

; <label>:89                                      ; preds = %79
  %90 = load i32, i32* %i, align 4, !dbg !15535
  %91 = add nsw i32 %90, 1, !dbg !15535
  store i32 %91, i32* %i, align 4, !dbg !15535
  br label %73, !dbg !15537

; <label>:92                                      ; preds = %73
  %93 = load i32, i32* %i, align 4, !dbg !15538
  %94 = sext i32 %93 to i64, !dbg !15539
  %95 = getelementptr inbounds [4 x i8], [4 x i8]* %buf, i64 0, i64 %94, !dbg !15539
  store i8 0, i8* %95, align 1, !dbg !15540
  %96 = getelementptr inbounds [4 x i8], [4 x i8]* %buf, i32 0, i32 0, !dbg !15541
  %97 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %96, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.522, i32 0, i32 0), i32* %val) #10, !dbg !15542
  %98 = getelementptr inbounds [4 x i8], [4 x i8]* %buf, i32 0, i32 0, !dbg !15543
  %99 = load i32, i32* %val, align 4, !dbg !15544
  %100 = and i32 %99, 255, !dbg !15545
  %101 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %98, i64 4, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.523, i32 0, i32 0), i32 %100) #10, !dbg !15546
  %102 = load i8*, i8** %op, align 8, !dbg !15547
  %103 = getelementptr inbounds i8, i8* %102, i64 2, !dbg !15548
  store i8 1, i8* %103, align 1, !dbg !15549
  %104 = load i8*, i8** %op, align 8, !dbg !15550
  store i8 1, i8* %104, align 1, !dbg !15551
  %105 = getelementptr inbounds [4 x i8], [4 x i8]* %buf, i64 0, i64 1, !dbg !15552
  %106 = load i8, i8* %105, align 1, !dbg !15552
  %107 = load i8*, i8** %op, align 8, !dbg !15553
  %108 = getelementptr inbounds i8, i8* %107, i64 1, !dbg !15554
  store i8 %106, i8* %108, align 1, !dbg !15555
  %109 = getelementptr inbounds [4 x i8], [4 x i8]* %buf, i64 0, i64 0, !dbg !15556
  %110 = load i8, i8* %109, align 1, !dbg !15556
  %111 = load i8*, i8** %op, align 8, !dbg !15557
  %112 = getelementptr inbounds i8, i8* %111, i64 3, !dbg !15558
  store i8 %110, i8* %112, align 1, !dbg !15559
  %113 = load i8*, i8** %op, align 8, !dbg !15560
  %114 = getelementptr inbounds i8, i8* %113, i64 4, !dbg !15560
  store i8* %114, i8** %op, align 8, !dbg !15560
  %115 = load i8*, i8** %own, align 8, !dbg !15561
  %116 = load i8, i8* %115, align 1, !dbg !15562
  %117 = zext i8 %116 to i32, !dbg !15562
  %118 = add nsw i32 %117, 1, !dbg !15563
  %119 = load i8*, i8** %own, align 8, !dbg !15564
  %120 = sext i32 %118 to i64, !dbg !15564
  %121 = getelementptr inbounds i8, i8* %119, i64 %120, !dbg !15564
  store i8* %121, i8** %own, align 8, !dbg !15564
  br label %68, !dbg !15565

; <label>:122                                     ; preds = %68
  %123 = load i8*, i8** %op, align 8, !dbg !15567
  %124 = call i32 (i8*, i8*, ...) @sprintf(i8* %123, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7.524, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.8.525, i32 0, i32 0)) #10, !dbg !15568
  %125 = load i8*, i8** %op, align 8, !dbg !15569
  %126 = getelementptr inbounds i8, i8* %125, i64 17, !dbg !15569
  store i8* %126, i8** %op, align 8, !dbg !15569
  %127 = load i8*, i8** %op, align 8, !dbg !15570
  %128 = getelementptr inbounds [256 x i8], [256 x i8]* %owner, i32 0, i32 0, !dbg !15571
  %129 = ptrtoint i8* %127 to i64, !dbg !15572
  %130 = ptrtoint i8* %128 to i64, !dbg !15572
  %131 = sub i64 %129, %130, !dbg !15572
  %132 = trunc i64 %131 to i32, !dbg !15570
  store i32 %132, i32* %owner_len, align 4, !dbg !15573
  %133 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 8), align 4, !dbg !15574
  %134 = icmp ne i32 %133, 0, !dbg !15576
  br i1 %134, label %135, label %141, !dbg !15577

; <label>:135                                     ; preds = %122
  %136 = getelementptr inbounds [256 x i8], [256 x i8]* %str, i32 0, i32 0, !dbg !15578
  %137 = getelementptr inbounds [256 x i8], [256 x i8]* %owner, i32 0, i32 0, !dbg !15580
  %138 = call i8* @dname_decompress(i8* %136, i32 256, i8* %137, i8* null, i8* null, i32* null), !dbg !15581
  %139 = load i8*, i8** %fn, align 8, !dbg !15582
  %140 = getelementptr inbounds [256 x i8], [256 x i8]* %owner, i32 0, i32 0, !dbg !15583
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9.526, i32 0, i32 0), i8* %139, i8* %140), !dbg !15584
  br label %141, !dbg !15585

; <label>:141                                     ; preds = %135, %122
  br label %142

; <label>:142                                     ; preds = %141, %65
  %143 = load %struct.rr_set*, %struct.rr_set** %2, align 8, !dbg !15586
  %144 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %143, i32 0, i32 2, !dbg !15587
  %145 = bitcast %union.u_key* %144 to %struct.key_info**, !dbg !15588
  %146 = load %struct.key_info*, %struct.key_info** %145, align 8, !dbg !15588
  %147 = getelementptr inbounds %struct.key_info, %struct.key_info* %146, i32 0, i32 0, !dbg !15589
  %148 = load i16, i16* %147, align 2, !dbg !15589
  %149 = load %struct.rr_set*, %struct.rr_set** %2, align 8, !dbg !15590
  %150 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %149, i32 0, i32 2, !dbg !15591
  %151 = bitcast %union.u_key* %150 to %struct.key_info**, !dbg !15592
  %152 = load %struct.key_info*, %struct.key_info** %151, align 8, !dbg !15592
  %153 = getelementptr inbounds %struct.key_info, %struct.key_info* %152, i32 0, i32 1, !dbg !15593
  %154 = load i16, i16* %153, align 2, !dbg !15593
  %155 = load i32, i32* %owner_len, align 4, !dbg !15594
  %156 = trunc i32 %155 to i16, !dbg !15594
  %157 = getelementptr inbounds [256 x i8], [256 x i8]* %owner, i32 0, i32 0, !dbg !15595
  %158 = load %struct.rr_list*, %struct.rr_list** %rrl, align 8, !dbg !15596
  %159 = call %struct.rr_set* @rrset_create(i16 zeroext %148, i16 zeroext %154, i16 zeroext %156, i8* %157, %struct.rr_list* %158), !dbg !15597
  store %struct.rr_set* %159, %struct.rr_set** %rrs_new, align 8, !dbg !15598
  %160 = load %struct.rr_list*, %struct.rr_list** %rrl, align 8, !dbg !15599
  call void @rr_list_free(%struct.rr_list* %160), !dbg !15600
  %161 = load i8*, i8** %fn, align 8, !dbg !15601
  %162 = load %struct.rr_set*, %struct.rr_set** %rrs_new, align 8, !dbg !15602
  %163 = bitcast %struct.rr_set* %162 to i8*, !dbg !15603
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.10.527, i32 0, i32 0), i8* %161, i8* %163), !dbg !15604
  %164 = load %struct.rr_set*, %struct.rr_set** %rrs_new, align 8, !dbg !15605
  store %struct.rr_set* %164, %struct.rr_set** %1, align 8, !dbg !15606
  br label %165, !dbg !15606

; <label>:165                                     ; preds = %142, %27, %21
  %166 = load %struct.rr_set*, %struct.rr_set** %1, align 8, !dbg !15607
  ret %struct.rr_set* %166, !dbg !15607
}

; Function Attrs: nounwind uwtable
define void @conv_stf_ns_list(%struct.generic_list* %rrsl) #0 !dbg !2174 {
  %1 = alloca %struct.generic_list*, align 8
  %fn = alloca i8*, align 8
  %rrsp = alloca %struct.rr_set*, align 8
  %rrsp_tmp = alloca %struct.rr_set*, align 8
  %gl_tmp = alloca %struct.generic_list*, align 8
  store %struct.generic_list* %rrsl, %struct.generic_list** %1, align 8
  call void @llvm.dbg.declare(metadata %struct.generic_list** %1, metadata !15608, metadata !2279), !dbg !15609
  call void @llvm.dbg.declare(metadata i8** %fn, metadata !15610, metadata !2279), !dbg !15611
  store i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.11.528, i32 0, i32 0), i8** %fn, align 8, !dbg !15611
  call void @llvm.dbg.declare(metadata %struct.rr_set** %rrsp, metadata !15612, metadata !2279), !dbg !15613
  call void @llvm.dbg.declare(metadata %struct.rr_set** %rrsp_tmp, metadata !15614, metadata !2279), !dbg !15615
  call void @llvm.dbg.declare(metadata %struct.generic_list** %gl_tmp, metadata !15616, metadata !2279), !dbg !15617
  %2 = load i8*, i8** %fn, align 8, !dbg !15618
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1.518, i32 0, i32 0), i8* %2), !dbg !15619
  store %struct.rr_set* null, %struct.rr_set** %rrsp_tmp, align 8, !dbg !15620
  %3 = load %struct.generic_list*, %struct.generic_list** %1, align 8, !dbg !15621
  %4 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %3, i32 0, i32 2, !dbg !15622
  store i8* null, i8** %4, align 8, !dbg !15623
  %5 = load %struct.generic_list*, %struct.generic_list** %1, align 8, !dbg !15624
  %6 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %5, i32 0, i32 0, !dbg !15626
  %7 = load %struct.generic_list*, %struct.generic_list** %6, align 8, !dbg !15626
  store %struct.generic_list* %7, %struct.generic_list** %gl_tmp, align 8, !dbg !15627
  br label %8, !dbg !15628

; <label>:8                                       ; preds = %59, %0
  %9 = load %struct.generic_list*, %struct.generic_list** %gl_tmp, align 8, !dbg !15629
  %10 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %9, i32 0, i32 2, !dbg !15632
  %11 = load i8*, i8** %10, align 8, !dbg !15632
  %12 = icmp ne i8* %11, null, !dbg !15633
  br i1 %12, label %13, label %63, !dbg !15633

; <label>:13                                      ; preds = %8
  %14 = load %struct.generic_list*, %struct.generic_list** %gl_tmp, align 8, !dbg !15634
  %15 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %14, i32 0, i32 2, !dbg !15636
  %16 = load i8*, i8** %15, align 8, !dbg !15636
  %17 = bitcast i8* %16 to %struct.rr_set*, !dbg !15637
  store %struct.rr_set* %17, %struct.rr_set** %rrsp, align 8, !dbg !15638
  %18 = load i8*, i8** %fn, align 8, !dbg !15639
  %19 = load %struct.rr_set*, %struct.rr_set** %rrsp, align 8, !dbg !15640
  %20 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %19, i32 0, i32 2, !dbg !15641
  %21 = bitcast %union.u_key* %20 to %struct.key_info**, !dbg !15642
  %22 = load %struct.key_info*, %struct.key_info** %21, align 8, !dbg !15642
  %23 = getelementptr inbounds %struct.key_info, %struct.key_info* %22, i32 0, i32 0, !dbg !15643
  %24 = load i16, i16* %23, align 2, !dbg !15643
  %25 = call i8* @string_rtype(i16 zeroext %24), !dbg !15644
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.12.529, i32 0, i32 0), i8* %18, i8* %25), !dbg !15645
  %26 = load %struct.rr_set*, %struct.rr_set** %rrsp, align 8, !dbg !15646
  %27 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %26, i32 0, i32 2, !dbg !15648
  %28 = bitcast %union.u_key* %27 to %struct.key_info**, !dbg !15649
  %29 = load %struct.key_info*, %struct.key_info** %28, align 8, !dbg !15649
  %30 = getelementptr inbounds %struct.key_info, %struct.key_info* %29, i32 0, i32 0, !dbg !15650
  %31 = load i16, i16* %30, align 2, !dbg !15650
  %32 = zext i16 %31 to i32, !dbg !15646
  %33 = icmp eq i32 %32, 6, !dbg !15651
  br i1 %33, label %34, label %37, !dbg !15652

; <label>:34                                      ; preds = %13
  %35 = load %struct.rr_set*, %struct.rr_set** %rrsp, align 8, !dbg !15653
  %36 = call %struct.rr_set* @conv_stf_owner_rrset(%struct.rr_set* %35), !dbg !15654
  store %struct.rr_set* %36, %struct.rr_set** %rrsp_tmp, align 8, !dbg !15655
  br label %37, !dbg !15656

; <label>:37                                      ; preds = %34, %13
  %38 = load %struct.rr_set*, %struct.rr_set** %rrsp, align 8, !dbg !15657
  %39 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %38, i32 0, i32 2, !dbg !15659
  %40 = bitcast %union.u_key* %39 to %struct.key_info**, !dbg !15660
  %41 = load %struct.key_info*, %struct.key_info** %40, align 8, !dbg !15660
  %42 = getelementptr inbounds %struct.key_info, %struct.key_info* %41, i32 0, i32 0, !dbg !15661
  %43 = load i16, i16* %42, align 2, !dbg !15661
  %44 = zext i16 %43 to i32, !dbg !15657
  %45 = icmp eq i32 %44, 2, !dbg !15662
  br i1 %45, label %46, label %49, !dbg !15663

; <label>:46                                      ; preds = %37
  %47 = load %struct.rr_set*, %struct.rr_set** %rrsp, align 8, !dbg !15664
  %48 = call %struct.rr_set* @conv_stf_owner_rrset(%struct.rr_set* %47), !dbg !15665
  store %struct.rr_set* %48, %struct.rr_set** %rrsp_tmp, align 8, !dbg !15666
  br label %49, !dbg !15667

; <label>:49                                      ; preds = %46, %37
  %50 = load %struct.rr_set*, %struct.rr_set** %rrsp_tmp, align 8, !dbg !15668
  %51 = icmp ne %struct.rr_set* %50, null, !dbg !15668
  br i1 %51, label %52, label %58, !dbg !15670

; <label>:52                                      ; preds = %49
  %53 = load %struct.rr_set*, %struct.rr_set** %rrsp, align 8, !dbg !15671
  call void @rrset_free(%struct.rr_set* %53), !dbg !15673
  %54 = load %struct.rr_set*, %struct.rr_set** %rrsp_tmp, align 8, !dbg !15674
  %55 = bitcast %struct.rr_set* %54 to i8*, !dbg !15674
  %56 = load %struct.generic_list*, %struct.generic_list** %gl_tmp, align 8, !dbg !15675
  %57 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %56, i32 0, i32 2, !dbg !15676
  store i8* %55, i8** %57, align 8, !dbg !15677
  store %struct.rr_set* null, %struct.rr_set** %rrsp_tmp, align 8, !dbg !15678
  br label %58, !dbg !15679

; <label>:58                                      ; preds = %52, %49
  br label %59, !dbg !15680

; <label>:59                                      ; preds = %58
  %60 = load %struct.generic_list*, %struct.generic_list** %gl_tmp, align 8, !dbg !15681
  %61 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %60, i32 0, i32 0, !dbg !15683
  %62 = load %struct.generic_list*, %struct.generic_list** %61, align 8, !dbg !15683
  store %struct.generic_list* %62, %struct.generic_list** %gl_tmp, align 8, !dbg !15684
  br label %8, !dbg !15685

; <label>:63                                      ; preds = %8
  ret void, !dbg !15686
}

; Function Attrs: nounwind uwtable
define i32 @conv_stf_ptr(i8* %qname) #0 !dbg !2185 {
  %1 = alloca i32, align 4
  %2 = alloca i8*, align 8
  %fn = alloca i8*, align 8
  %off = alloca i32, align 4
  %qname4 = alloca [256 x i8], align 16
  %str = alloca [256 x i8], align 16
  %qn6 = alloca i8*, align 8
  %qn4 = alloca i8*, align 8
  %val = alloca i32, align 4
  %qname_len = alloca i32, align 4
  store i8* %qname, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !15687, metadata !2279), !dbg !15688
  call void @llvm.dbg.declare(metadata i8** %fn, metadata !15689, metadata !2279), !dbg !15690
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.13.530, i32 0, i32 0), i8** %fn, align 8, !dbg !15690
  call void @llvm.dbg.declare(metadata i32* %off, metadata !15691, metadata !2279), !dbg !15692
  store i32 6, i32* %off, align 4, !dbg !15692
  call void @llvm.dbg.declare(metadata [256 x i8]* %qname4, metadata !15693, metadata !2279), !dbg !15694
  call void @llvm.dbg.declare(metadata [256 x i8]* %str, metadata !15695, metadata !2279), !dbg !15696
  call void @llvm.dbg.declare(metadata i8** %qn6, metadata !15697, metadata !2279), !dbg !15698
  call void @llvm.dbg.declare(metadata i8** %qn4, metadata !15699, metadata !2279), !dbg !15700
  call void @llvm.dbg.declare(metadata i32* %val, metadata !15701, metadata !2279), !dbg !15702
  call void @llvm.dbg.declare(metadata i32* %qname_len, metadata !15703, metadata !2279), !dbg !15704
  %3 = load i8*, i8** %fn, align 8, !dbg !15705
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1.518, i32 0, i32 0), i8* %3), !dbg !15706
  %4 = load i8*, i8** %2, align 8, !dbg !15707
  %5 = call i64 @strlen(i8* %4) #9, !dbg !15709
  %6 = icmp ult i64 %5, 8, !dbg !15710
  br i1 %6, label %7, label %8, !dbg !15711

; <label>:7                                       ; preds = %0
  store i32 -1, i32* %1, align 4, !dbg !15712
  br label %186, !dbg !15712

; <label>:8                                       ; preds = %0
  %9 = getelementptr inbounds [256 x i8], [256 x i8]* %qname4, i32 0, i32 0, !dbg !15713
  store i8* %9, i8** %qn4, align 8, !dbg !15714
  %10 = load i8*, i8** %2, align 8, !dbg !15715
  %11 = call i64 @strlen(i8* %10) #9, !dbg !15716
  %12 = add i64 %11, 1, !dbg !15717
  %13 = trunc i64 %12 to i32, !dbg !15716
  store i32 %13, i32* %qname_len, align 4, !dbg !15718
  %14 = load i8*, i8** %2, align 8, !dbg !15719
  %15 = load i32, i32* %qname_len, align 4, !dbg !15720
  %16 = sext i32 %15 to i64, !dbg !15721
  %17 = getelementptr inbounds i8, i8* %14, i64 %16, !dbg !15721
  %18 = getelementptr inbounds i8, i8* %17, i64 -24, !dbg !15722
  %19 = getelementptr inbounds i8, i8* %18, i64 -8, !dbg !15723
  store i8* %19, i8** %qn6, align 8, !dbg !15724
  %20 = load i8*, i8** %qn6, align 8, !dbg !15725
  %21 = load i8*, i8** %2, align 8, !dbg !15727
  %22 = icmp ult i8* %20, %21, !dbg !15728
  br i1 %22, label %23, label %26, !dbg !15729

; <label>:23                                      ; preds = %8
  %24 = load i8*, i8** %2, align 8, !dbg !15730
  %25 = getelementptr inbounds i8, i8* %24, i64 1, !dbg !15731
  store i8* %25, i8** %qn6, align 8, !dbg !15732
  br label %26, !dbg !15733

; <label>:26                                      ; preds = %23, %8
  br label %27, !dbg !15734

; <label>:27                                      ; preds = %154, %26
  %28 = load i8*, i8** %qn6, align 8, !dbg !15735
  %29 = load i8*, i8** %2, align 8, !dbg !15737
  %30 = load i32, i32* %qname_len, align 4, !dbg !15738
  %31 = sext i32 %30 to i64, !dbg !15739
  %32 = getelementptr inbounds i8, i8* %29, i64 %31, !dbg !15739
  %33 = getelementptr inbounds i8, i8* %32, i64 -8, !dbg !15740
  %34 = getelementptr inbounds i8, i8* %33, i64 -8, !dbg !15741
  %35 = icmp ult i8* %28, %34, !dbg !15742
  br i1 %35, label %36, label %171, !dbg !15743

; <label>:36                                      ; preds = %27
  store i32 0, i32* %val, align 4, !dbg !15744
  %37 = load i8*, i8** %qn6, align 8, !dbg !15746
  %38 = load i8, i8* %37, align 1, !dbg !15746
  %39 = zext i8 %38 to i32, !dbg !15746
  %40 = sext i32 %39 to i64, !dbg !15746
  %41 = call i16** @__ctype_b_loc() #1, !dbg !15746
  %42 = load i16*, i16** %41, align 8, !dbg !15746
  %43 = getelementptr inbounds i16, i16* %42, i64 %40, !dbg !15746
  %44 = load i16, i16* %43, align 2, !dbg !15746
  %45 = zext i16 %44 to i32, !dbg !15746
  %46 = and i32 %45, 2048, !dbg !15746
  %47 = icmp ne i32 %46, 0, !dbg !15746
  br i1 %47, label %48, label %53, !dbg !15748

; <label>:48                                      ; preds = %36
  %49 = load i8*, i8** %qn6, align 8, !dbg !15749
  %50 = load i8, i8* %49, align 1, !dbg !15750
  %51 = zext i8 %50 to i32, !dbg !15750
  %52 = sub nsw i32 %51, 48, !dbg !15751
  store i32 %52, i32* %val, align 4, !dbg !15752
  br label %83, !dbg !15753

; <label>:53                                      ; preds = %36
  %54 = load i8*, i8** %qn6, align 8, !dbg !15754
  %55 = load i8, i8* %54, align 1, !dbg !15754
  %56 = zext i8 %55 to i32, !dbg !15754
  %57 = sext i32 %56 to i64, !dbg !15754
  %58 = call i16** @__ctype_b_loc() #1, !dbg !15754
  %59 = load i16*, i16** %58, align 8, !dbg !15754
  %60 = getelementptr inbounds i16, i16* %59, i64 %57, !dbg !15754
  %61 = load i16, i16* %60, align 2, !dbg !15754
  %62 = zext i16 %61 to i32, !dbg !15754
  %63 = and i32 %62, 1024, !dbg !15754
  %64 = icmp ne i32 %63, 0, !dbg !15754
  br i1 %64, label %65, label %82, !dbg !15756

; <label>:65                                      ; preds = %53
  %66 = load i8*, i8** %qn6, align 8, !dbg !15757
  %67 = load i8, i8* %66, align 1, !dbg !15758
  %68 = zext i8 %67 to i32, !dbg !15758
  %69 = load i8*, i8** %qn6, align 8, !dbg !15759
  %70 = load i8, i8* %69, align 1, !dbg !15759
  %71 = zext i8 %70 to i32, !dbg !15759
  %72 = sext i32 %71 to i64, !dbg !15759
  %73 = call i16** @__ctype_b_loc() #1, !dbg !15759
  %74 = load i16*, i16** %73, align 8, !dbg !15759
  %75 = getelementptr inbounds i16, i16* %74, i64 %72, !dbg !15759
  %76 = load i16, i16* %75, align 2, !dbg !15759
  %77 = zext i16 %76 to i32, !dbg !15759
  %78 = and i32 %77, 256, !dbg !15759
  %79 = icmp ne i32 %78, 0, !dbg !15759
  %80 = select i1 %79, i32 55, i32 87, !dbg !15759
  %81 = sub nsw i32 %68, %80, !dbg !15760
  store i32 %81, i32* %val, align 4, !dbg !15761
  br label %82, !dbg !15762

; <label>:82                                      ; preds = %65, %53
  br label %83

; <label>:83                                      ; preds = %82, %48
  %84 = load i8*, i8** %qn6, align 8, !dbg !15763
  %85 = getelementptr inbounds i8, i8* %84, i32 1, !dbg !15763
  store i8* %85, i8** %qn6, align 8, !dbg !15763
  %86 = load i8*, i8** %qn6, align 8, !dbg !15764
  %87 = load i8, i8* %86, align 1, !dbg !15766
  %88 = zext i8 %87 to i32, !dbg !15766
  %89 = icmp ne i32 %88, 1, !dbg !15767
  br i1 %89, label %90, label %91, !dbg !15768

; <label>:90                                      ; preds = %83
  store i32 -1, i32* %1, align 4, !dbg !15769
  br label %186, !dbg !15769

; <label>:91                                      ; preds = %83
  %92 = load i8*, i8** %qn6, align 8, !dbg !15771
  %93 = getelementptr inbounds i8, i8* %92, i32 1, !dbg !15771
  store i8* %93, i8** %qn6, align 8, !dbg !15771
  %94 = load i8*, i8** %qn6, align 8, !dbg !15772
  %95 = load i8, i8* %94, align 1, !dbg !15772
  %96 = zext i8 %95 to i32, !dbg !15772
  %97 = sext i32 %96 to i64, !dbg !15772
  %98 = call i16** @__ctype_b_loc() #1, !dbg !15772
  %99 = load i16*, i16** %98, align 8, !dbg !15772
  %100 = getelementptr inbounds i16, i16* %99, i64 %97, !dbg !15772
  %101 = load i16, i16* %100, align 2, !dbg !15772
  %102 = zext i16 %101 to i32, !dbg !15772
  %103 = and i32 %102, 2048, !dbg !15772
  %104 = icmp ne i32 %103, 0, !dbg !15772
  br i1 %104, label %105, label %113, !dbg !15774

; <label>:105                                     ; preds = %91
  %106 = load i8*, i8** %qn6, align 8, !dbg !15775
  %107 = load i8, i8* %106, align 1, !dbg !15776
  %108 = zext i8 %107 to i32, !dbg !15776
  %109 = sub nsw i32 %108, 48, !dbg !15777
  %110 = mul nsw i32 16, %109, !dbg !15778
  %111 = load i32, i32* %val, align 4, !dbg !15779
  %112 = add nsw i32 %111, %110, !dbg !15779
  store i32 %112, i32* %val, align 4, !dbg !15779
  br label %146, !dbg !15780

; <label>:113                                     ; preds = %91
  %114 = load i8*, i8** %qn6, align 8, !dbg !15781
  %115 = load i8, i8* %114, align 1, !dbg !15781
  %116 = zext i8 %115 to i32, !dbg !15781
  %117 = sext i32 %116 to i64, !dbg !15781
  %118 = call i16** @__ctype_b_loc() #1, !dbg !15781
  %119 = load i16*, i16** %118, align 8, !dbg !15781
  %120 = getelementptr inbounds i16, i16* %119, i64 %117, !dbg !15781
  %121 = load i16, i16* %120, align 2, !dbg !15781
  %122 = zext i16 %121 to i32, !dbg !15781
  %123 = and i32 %122, 1024, !dbg !15781
  %124 = icmp ne i32 %123, 0, !dbg !15781
  br i1 %124, label %125, label %145, !dbg !15783

; <label>:125                                     ; preds = %113
  %126 = load i8*, i8** %qn6, align 8, !dbg !15784
  %127 = load i8, i8* %126, align 1, !dbg !15785
  %128 = zext i8 %127 to i32, !dbg !15785
  %129 = load i8*, i8** %qn6, align 8, !dbg !15786
  %130 = load i8, i8* %129, align 1, !dbg !15786
  %131 = zext i8 %130 to i32, !dbg !15786
  %132 = sext i32 %131 to i64, !dbg !15786
  %133 = call i16** @__ctype_b_loc() #1, !dbg !15786
  %134 = load i16*, i16** %133, align 8, !dbg !15786
  %135 = getelementptr inbounds i16, i16* %134, i64 %132, !dbg !15786
  %136 = load i16, i16* %135, align 2, !dbg !15786
  %137 = zext i16 %136 to i32, !dbg !15786
  %138 = and i32 %137, 256, !dbg !15786
  %139 = icmp ne i32 %138, 0, !dbg !15786
  %140 = select i1 %139, i32 55, i32 87, !dbg !15786
  %141 = sub nsw i32 %128, %140, !dbg !15787
  %142 = mul nsw i32 16, %141, !dbg !15788
  %143 = load i32, i32* %val, align 4, !dbg !15789
  %144 = add nsw i32 %143, %142, !dbg !15789
  store i32 %144, i32* %val, align 4, !dbg !15789
  br label %145, !dbg !15790

; <label>:145                                     ; preds = %125, %113
  br label %146

; <label>:146                                     ; preds = %145, %105
  %147 = load i8*, i8** %qn6, align 8, !dbg !15791
  %148 = getelementptr inbounds i8, i8* %147, i32 1, !dbg !15791
  store i8* %148, i8** %qn6, align 8, !dbg !15791
  %149 = load i8*, i8** %qn6, align 8, !dbg !15792
  %150 = load i8, i8* %149, align 1, !dbg !15794
  %151 = zext i8 %150 to i32, !dbg !15794
  %152 = icmp ne i32 %151, 1, !dbg !15795
  br i1 %152, label %153, label %154, !dbg !15796

; <label>:153                                     ; preds = %146
  store i32 -1, i32* %1, align 4, !dbg !15797
  br label %186, !dbg !15797

; <label>:154                                     ; preds = %146
  %155 = load i8*, i8** %qn6, align 8, !dbg !15799
  %156 = getelementptr inbounds i8, i8* %155, i32 1, !dbg !15799
  store i8* %156, i8** %qn6, align 8, !dbg !15799
  %157 = load i8*, i8** %qn4, align 8, !dbg !15800
  %158 = getelementptr inbounds i8, i8* %157, i64 1, !dbg !15801
  %159 = load i32, i32* %val, align 4, !dbg !15802
  %160 = and i32 %159, 255, !dbg !15803
  %161 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %158, i64 4, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.522, i32 0, i32 0), i32 %160) #10, !dbg !15804
  %162 = trunc i32 %161 to i8, !dbg !15804
  %163 = load i8*, i8** %qn4, align 8, !dbg !15805
  store i8 %162, i8* %163, align 1, !dbg !15806
  %164 = load i8*, i8** %qn4, align 8, !dbg !15807
  %165 = load i8*, i8** %qn4, align 8, !dbg !15808
  %166 = load i8, i8* %165, align 1, !dbg !15809
  %167 = zext i8 %166 to i32, !dbg !15809
  %168 = sext i32 %167 to i64, !dbg !15810
  %169 = getelementptr inbounds i8, i8* %164, i64 %168, !dbg !15810
  %170 = getelementptr inbounds i8, i8* %169, i64 1, !dbg !15811
  store i8* %170, i8** %qn4, align 8, !dbg !15812
  br label %27, !dbg !15813

; <label>:171                                     ; preds = %27
  %172 = load i8*, i8** %qn4, align 8, !dbg !15815
  %173 = call i32 (i8*, i8*, ...) @sprintf(i8* %172, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7.524, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.520, i32 0, i32 0)) #10, !dbg !15816
  %174 = load i8*, i8** %2, align 8, !dbg !15817
  %175 = getelementptr inbounds [256 x i8], [256 x i8]* %qname4, i32 0, i32 0, !dbg !15818
  %176 = call i64 @strlcpy(i8* %174, i8* %175, i64 256), !dbg !15819
  %177 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 8), align 4, !dbg !15820
  %178 = icmp ne i32 %177, 0, !dbg !15822
  br i1 %178, label %179, label %185, !dbg !15823

; <label>:179                                     ; preds = %171
  %180 = getelementptr inbounds [256 x i8], [256 x i8]* %str, i32 0, i32 0, !dbg !15824
  %181 = load i8*, i8** %2, align 8, !dbg !15826
  %182 = call i8* @dname_decompress(i8* %180, i32 256, i8* %181, i8* null, i8* null, i32* null), !dbg !15827
  %183 = load i8*, i8** %fn, align 8, !dbg !15828
  %184 = getelementptr inbounds [256 x i8], [256 x i8]* %str, i32 0, i32 0, !dbg !15829
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.14.531, i32 0, i32 0), i8* %183, i8* %184), !dbg !15830
  br label %185, !dbg !15831

; <label>:185                                     ; preds = %179, %171
  store i32 0, i32* %1, align 4, !dbg !15832
  br label %186, !dbg !15832

; <label>:186                                     ; preds = %185, %153, %90, %7
  %187 = load i32, i32* %1, align 4, !dbg !15833
  ret i32 %187, !dbg !15833
}

; Function Attrs: nounwind uwtable
define i32 @conv_stf_is_stf_ptr(i8* %qname) #0 !dbg !2186 {
  %1 = alloca i32, align 4
  %2 = alloca i8*, align 8
  %qname6 = alloca i8*, align 8
  store i8* %qname, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !15834, metadata !2279), !dbg !15835
  call void @llvm.dbg.declare(metadata i8** %qname6, metadata !15836, metadata !2279), !dbg !15837
  %3 = load i8*, i8** %2, align 8, !dbg !15838
  %4 = call i8* @strstr(i8* %3, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.15.532, i32 0, i32 0)) #9, !dbg !15840
  %5 = icmp ne i8* %4, null, !dbg !15840
  br i1 %5, label %11, label %6, !dbg !15841

; <label>:6                                       ; preds = %0
  %7 = load i8*, i8** %2, align 8, !dbg !15842
  %8 = call i8* @strstr(i8* %7, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.16.533, i32 0, i32 0)) #9, !dbg !15844
  %9 = icmp ne i8* %8, null, !dbg !15844
  br i1 %9, label %11, label %10, !dbg !15845

; <label>:10                                      ; preds = %6
  store i32 0, i32* %1, align 4, !dbg !15846
  br label %82, !dbg !15846

; <label>:11                                      ; preds = %6, %0
  %12 = load i8*, i8** %2, align 8, !dbg !15847
  %13 = call i8* @strstr(i8* %12, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.17.534, i32 0, i32 0)) #9, !dbg !15848
  store i8* %13, i8** %qname6, align 8, !dbg !15849
  %14 = load i8*, i8** %qname6, align 8, !dbg !15850
  %15 = icmp ne i8* %14, null, !dbg !15850
  br i1 %15, label %19, label %16, !dbg !15852

; <label>:16                                      ; preds = %11
  %17 = load i8*, i8** %2, align 8, !dbg !15853
  %18 = call i8* @strstr(i8* %17, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.18.535, i32 0, i32 0)) #9, !dbg !15854
  store i8* %18, i8** %qname6, align 8, !dbg !15855
  br label %19, !dbg !15856

; <label>:19                                      ; preds = %16, %11
  %20 = load i8*, i8** %qname6, align 8, !dbg !15857
  %21 = icmp ne i8* %20, null, !dbg !15857
  br i1 %21, label %23, label %22, !dbg !15859

; <label>:22                                      ; preds = %19
  store i32 0, i32* %1, align 4, !dbg !15860
  br label %82, !dbg !15860

; <label>:23                                      ; preds = %19
  %24 = load i8*, i8** %qname6, align 8, !dbg !15861
  %25 = getelementptr inbounds i8, i8* %24, i64 -2, !dbg !15862
  store i8* %25, i8** %qname6, align 8, !dbg !15863
  %26 = load i8*, i8** %qname6, align 8, !dbg !15864
  %27 = getelementptr inbounds i8, i8* %26, i32 -1, !dbg !15864
  store i8* %27, i8** %qname6, align 8, !dbg !15864
  %28 = load i8, i8* %26, align 1, !dbg !15866
  %29 = zext i8 %28 to i32, !dbg !15866
  %30 = icmp ne i32 %29, 50, !dbg !15867
  br i1 %30, label %31, label %32, !dbg !15868

; <label>:31                                      ; preds = %23
  store i32 0, i32* %1, align 4, !dbg !15869
  br label %82, !dbg !15869

; <label>:32                                      ; preds = %23
  %33 = load i8*, i8** %qname6, align 8, !dbg !15870
  %34 = getelementptr inbounds i8, i8* %33, i32 -1, !dbg !15870
  store i8* %34, i8** %qname6, align 8, !dbg !15870
  %35 = load i8, i8* %33, align 1, !dbg !15872
  %36 = zext i8 %35 to i32, !dbg !15872
  %37 = icmp ne i32 %36, 1, !dbg !15873
  br i1 %37, label %38, label %39, !dbg !15874

; <label>:38                                      ; preds = %32
  store i32 0, i32* %1, align 4, !dbg !15875
  br label %82, !dbg !15875

; <label>:39                                      ; preds = %32
  %40 = load i8*, i8** %qname6, align 8, !dbg !15876
  %41 = getelementptr inbounds i8, i8* %40, i32 -1, !dbg !15876
  store i8* %41, i8** %qname6, align 8, !dbg !15876
  %42 = load i8, i8* %40, align 1, !dbg !15878
  %43 = zext i8 %42 to i32, !dbg !15878
  %44 = icmp ne i32 %43, 48, !dbg !15879
  br i1 %44, label %45, label %46, !dbg !15880

; <label>:45                                      ; preds = %39
  store i32 0, i32* %1, align 4, !dbg !15881
  br label %82, !dbg !15881

; <label>:46                                      ; preds = %39
  %47 = load i8*, i8** %qname6, align 8, !dbg !15882
  %48 = getelementptr inbounds i8, i8* %47, i32 -1, !dbg !15882
  store i8* %48, i8** %qname6, align 8, !dbg !15882
  %49 = load i8, i8* %47, align 1, !dbg !15884
  %50 = zext i8 %49 to i32, !dbg !15884
  %51 = icmp ne i32 %50, 1, !dbg !15885
  br i1 %51, label %52, label %53, !dbg !15886

; <label>:52                                      ; preds = %46
  store i32 0, i32* %1, align 4, !dbg !15887
  br label %82, !dbg !15887

; <label>:53                                      ; preds = %46
  %54 = load i8*, i8** %qname6, align 8, !dbg !15888
  %55 = getelementptr inbounds i8, i8* %54, i32 -1, !dbg !15888
  store i8* %55, i8** %qname6, align 8, !dbg !15888
  %56 = load i8, i8* %54, align 1, !dbg !15890
  %57 = zext i8 %56 to i32, !dbg !15890
  %58 = icmp ne i32 %57, 48, !dbg !15891
  br i1 %58, label %59, label %60, !dbg !15892

; <label>:59                                      ; preds = %53
  store i32 0, i32* %1, align 4, !dbg !15893
  br label %82, !dbg !15893

; <label>:60                                      ; preds = %53
  %61 = load i8*, i8** %qname6, align 8, !dbg !15894
  %62 = getelementptr inbounds i8, i8* %61, i32 -1, !dbg !15894
  store i8* %62, i8** %qname6, align 8, !dbg !15894
  %63 = load i8, i8* %61, align 1, !dbg !15896
  %64 = zext i8 %63 to i32, !dbg !15896
  %65 = icmp ne i32 %64, 1, !dbg !15897
  br i1 %65, label %66, label %67, !dbg !15898

; <label>:66                                      ; preds = %60
  store i32 0, i32* %1, align 4, !dbg !15899
  br label %82, !dbg !15899

; <label>:67                                      ; preds = %60
  %68 = load i8*, i8** %qname6, align 8, !dbg !15900
  %69 = getelementptr inbounds i8, i8* %68, i32 -1, !dbg !15900
  store i8* %69, i8** %qname6, align 8, !dbg !15900
  %70 = load i8, i8* %68, align 1, !dbg !15902
  %71 = zext i8 %70 to i32, !dbg !15902
  %72 = icmp ne i32 %71, 50, !dbg !15903
  br i1 %72, label %73, label %74, !dbg !15904

; <label>:73                                      ; preds = %67
  store i32 0, i32* %1, align 4, !dbg !15905
  br label %82, !dbg !15905

; <label>:74                                      ; preds = %67
  %75 = load i8*, i8** %qname6, align 8, !dbg !15906
  %76 = getelementptr inbounds i8, i8* %75, i32 -1, !dbg !15906
  store i8* %76, i8** %qname6, align 8, !dbg !15906
  %77 = load i8, i8* %75, align 1, !dbg !15908
  %78 = zext i8 %77 to i32, !dbg !15908
  %79 = icmp ne i32 %78, 1, !dbg !15909
  br i1 %79, label %80, label %81, !dbg !15910

; <label>:80                                      ; preds = %74
  store i32 0, i32* %1, align 4, !dbg !15911
  br label %82, !dbg !15911

; <label>:81                                      ; preds = %74
  store i32 1, i32* %1, align 4, !dbg !15912
  br label %82, !dbg !15912

; <label>:82                                      ; preds = %81, %80, %73, %66, %59, %52, %45, %38, %31, %22, %10
  %83 = load i32, i32* %1, align 4, !dbg !15913
  ret i32 %83, !dbg !15913
}

; Function Attrs: nounwind uwtable
define i64 @strlcpy(i8* %dst, i8* %src, i64 %siz) #0 !dbg !2190 {
  %1 = alloca i8*, align 8
  %2 = alloca i8*, align 8
  %3 = alloca i64, align 8
  %d = alloca i8*, align 8
  %s = alloca i8*, align 8
  %n = alloca i64, align 8
  store i8* %dst, i8** %1, align 8
  call void @llvm.dbg.declare(metadata i8** %1, metadata !15914, metadata !2279), !dbg !15915
  store i8* %src, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !15916, metadata !2279), !dbg !15917
  store i64 %siz, i64* %3, align 8
  call void @llvm.dbg.declare(metadata i64* %3, metadata !15918, metadata !2279), !dbg !15919
  call void @llvm.dbg.declare(metadata i8** %d, metadata !15920, metadata !2279), !dbg !15921
  %4 = load i8*, i8** %1, align 8, !dbg !15922
  store i8* %4, i8** %d, align 8, !dbg !15921
  call void @llvm.dbg.declare(metadata i8** %s, metadata !15923, metadata !2279), !dbg !15924
  %5 = load i8*, i8** %2, align 8, !dbg !15925
  store i8* %5, i8** %s, align 8, !dbg !15924
  call void @llvm.dbg.declare(metadata i64* %n, metadata !15926, metadata !2279), !dbg !15927
  %6 = load i64, i64* %3, align 8, !dbg !15928
  store i64 %6, i64* %n, align 8, !dbg !15927
  %7 = load i64, i64* %n, align 8, !dbg !15929
  %8 = icmp ne i64 %7, 0, !dbg !15931
  br i1 %8, label %9, label %29, !dbg !15932

; <label>:9                                       ; preds = %0
  %10 = load i64, i64* %n, align 8, !dbg !15933
  %11 = add i64 %10, -1, !dbg !15933
  store i64 %11, i64* %n, align 8, !dbg !15933
  %12 = icmp ne i64 %11, 0, !dbg !15935
  br i1 %12, label %13, label %29, !dbg !15936

; <label>:13                                      ; preds = %9
  br label %14, !dbg !15937

; <label>:14                                      ; preds = %24, %13
  %15 = load i8*, i8** %s, align 8, !dbg !15939
  %16 = getelementptr inbounds i8, i8* %15, i32 1, !dbg !15939
  store i8* %16, i8** %s, align 8, !dbg !15939
  %17 = load i8, i8* %15, align 1, !dbg !15942
  %18 = load i8*, i8** %d, align 8, !dbg !15943
  %19 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !15943
  store i8* %19, i8** %d, align 8, !dbg !15943
  store i8 %17, i8* %18, align 1, !dbg !15944
  %20 = sext i8 %17 to i32, !dbg !15945
  %21 = icmp eq i32 %20, 0, !dbg !15946
  br i1 %21, label %22, label %23, !dbg !15947

; <label>:22                                      ; preds = %14
  br label %28, !dbg !15948

; <label>:23                                      ; preds = %14
  br label %24, !dbg !15949

; <label>:24                                      ; preds = %23
  %25 = load i64, i64* %n, align 8, !dbg !15950
  %26 = add i64 %25, -1, !dbg !15950
  store i64 %26, i64* %n, align 8, !dbg !15950
  %27 = icmp ne i64 %26, 0, !dbg !15952
  br i1 %27, label %14, label %28, !dbg !15953

; <label>:28                                      ; preds = %24, %22
  br label %29, !dbg !15954

; <label>:29                                      ; preds = %28, %9, %0
  %30 = load i64, i64* %n, align 8, !dbg !15955
  %31 = icmp eq i64 %30, 0, !dbg !15957
  br i1 %31, label %32, label %45, !dbg !15958

; <label>:32                                      ; preds = %29
  %33 = load i64, i64* %3, align 8, !dbg !15959
  %34 = icmp ne i64 %33, 0, !dbg !15962
  br i1 %34, label %35, label %37, !dbg !15963

; <label>:35                                      ; preds = %32
  %36 = load i8*, i8** %d, align 8, !dbg !15964
  store i8 0, i8* %36, align 1, !dbg !15965
  br label %37, !dbg !15966

; <label>:37                                      ; preds = %35, %32
  br label %38, !dbg !15967

; <label>:38                                      ; preds = %43, %37
  %39 = load i8*, i8** %s, align 8, !dbg !15968
  %40 = getelementptr inbounds i8, i8* %39, i32 1, !dbg !15968
  store i8* %40, i8** %s, align 8, !dbg !15968
  %41 = load i8, i8* %39, align 1, !dbg !15970
  %42 = icmp ne i8 %41, 0, !dbg !15971
  br i1 %42, label %43, label %44, !dbg !15971

; <label>:43                                      ; preds = %38
  br label %38, !dbg !15972

; <label>:44                                      ; preds = %38
  br label %45, !dbg !15974

; <label>:45                                      ; preds = %44, %29
  %46 = load i8*, i8** %s, align 8, !dbg !15975
  %47 = load i8*, i8** %2, align 8, !dbg !15976
  %48 = ptrtoint i8* %46 to i64, !dbg !15977
  %49 = ptrtoint i8* %47 to i64, !dbg !15977
  %50 = sub i64 %48, %49, !dbg !15977
  %51 = sub nsw i64 %50, 1, !dbg !15978
  ret i64 %51, !dbg !15979
}

; Function Attrs: nounwind uwtable
define i64 @strlcat(i8* %dst, i8* %src, i64 %siz) #0 !dbg !2196 {
  %1 = alloca i64, align 8
  %2 = alloca i8*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i64, align 8
  %d = alloca i8*, align 8
  %s = alloca i8*, align 8
  %n = alloca i64, align 8
  %dlen = alloca i64, align 8
  store i8* %dst, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !15980, metadata !2279), !dbg !15981
  store i8* %src, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !15982, metadata !2279), !dbg !15983
  store i64 %siz, i64* %4, align 8
  call void @llvm.dbg.declare(metadata i64* %4, metadata !15984, metadata !2279), !dbg !15985
  call void @llvm.dbg.declare(metadata i8** %d, metadata !15986, metadata !2279), !dbg !15987
  %5 = load i8*, i8** %2, align 8, !dbg !15988
  store i8* %5, i8** %d, align 8, !dbg !15987
  call void @llvm.dbg.declare(metadata i8** %s, metadata !15989, metadata !2279), !dbg !15990
  %6 = load i8*, i8** %3, align 8, !dbg !15991
  store i8* %6, i8** %s, align 8, !dbg !15990
  call void @llvm.dbg.declare(metadata i64* %n, metadata !15992, metadata !2279), !dbg !15993
  %7 = load i64, i64* %4, align 8, !dbg !15994
  store i64 %7, i64* %n, align 8, !dbg !15993
  call void @llvm.dbg.declare(metadata i64* %dlen, metadata !15995, metadata !2279), !dbg !15996
  br label %8, !dbg !15997

; <label>:8                                       ; preds = %19, %0
  %9 = load i64, i64* %n, align 8, !dbg !15998
  %10 = add i64 %9, -1, !dbg !15998
  store i64 %10, i64* %n, align 8, !dbg !15998
  %11 = icmp ne i64 %9, 0, !dbg !16000
  br i1 %11, label %12, label %17, !dbg !16001

; <label>:12                                      ; preds = %8
  %13 = load i8*, i8** %d, align 8, !dbg !16002
  %14 = load i8, i8* %13, align 1, !dbg !16004
  %15 = sext i8 %14 to i32, !dbg !16004
  %16 = icmp ne i32 %15, 0, !dbg !16005
  br label %17

; <label>:17                                      ; preds = %12, %8
  %18 = phi i1 [ false, %8 ], [ %16, %12 ]
  br i1 %18, label %19, label %22, !dbg !16006

; <label>:19                                      ; preds = %17
  %20 = load i8*, i8** %d, align 8, !dbg !16008
  %21 = getelementptr inbounds i8, i8* %20, i32 1, !dbg !16008
  store i8* %21, i8** %d, align 8, !dbg !16008
  br label %8, !dbg !16009

; <label>:22                                      ; preds = %17
  %23 = load i8*, i8** %d, align 8, !dbg !16011
  %24 = load i8*, i8** %2, align 8, !dbg !16012
  %25 = ptrtoint i8* %23 to i64, !dbg !16013
  %26 = ptrtoint i8* %24 to i64, !dbg !16013
  %27 = sub i64 %25, %26, !dbg !16013
  store i64 %27, i64* %dlen, align 8, !dbg !16014
  %28 = load i64, i64* %4, align 8, !dbg !16015
  %29 = load i64, i64* %dlen, align 8, !dbg !16016
  %30 = sub i64 %28, %29, !dbg !16017
  store i64 %30, i64* %n, align 8, !dbg !16018
  %31 = load i64, i64* %n, align 8, !dbg !16019
  %32 = icmp eq i64 %31, 0, !dbg !16021
  br i1 %32, label %33, label %38, !dbg !16022

; <label>:33                                      ; preds = %22
  %34 = load i64, i64* %dlen, align 8, !dbg !16023
  %35 = load i8*, i8** %s, align 8, !dbg !16024
  %36 = call i64 @strlen(i8* %35) #9, !dbg !16025
  %37 = add i64 %34, %36, !dbg !16026
  store i64 %37, i64* %1, align 8, !dbg !16027
  br label %66, !dbg !16027

; <label>:38                                      ; preds = %22
  br label %39, !dbg !16028

; <label>:39                                      ; preds = %54, %38
  %40 = load i8*, i8** %s, align 8, !dbg !16029
  %41 = load i8, i8* %40, align 1, !dbg !16030
  %42 = sext i8 %41 to i32, !dbg !16030
  %43 = icmp ne i32 %42, 0, !dbg !16031
  br i1 %43, label %44, label %57, !dbg !16032

; <label>:44                                      ; preds = %39
  %45 = load i64, i64* %n, align 8, !dbg !16033
  %46 = icmp ne i64 %45, 1, !dbg !16036
  br i1 %46, label %47, label %54, !dbg !16037

; <label>:47                                      ; preds = %44
  %48 = load i8*, i8** %s, align 8, !dbg !16038
  %49 = load i8, i8* %48, align 1, !dbg !16040
  %50 = load i8*, i8** %d, align 8, !dbg !16041
  %51 = getelementptr inbounds i8, i8* %50, i32 1, !dbg !16041
  store i8* %51, i8** %d, align 8, !dbg !16041
  store i8 %49, i8* %50, align 1, !dbg !16042
  %52 = load i64, i64* %n, align 8, !dbg !16043
  %53 = add i64 %52, -1, !dbg !16043
  store i64 %53, i64* %n, align 8, !dbg !16043
  br label %54, !dbg !16044

; <label>:54                                      ; preds = %47, %44
  %55 = load i8*, i8** %s, align 8, !dbg !16045
  %56 = getelementptr inbounds i8, i8* %55, i32 1, !dbg !16045
  store i8* %56, i8** %s, align 8, !dbg !16045
  br label %39, !dbg !16046

; <label>:57                                      ; preds = %39
  %58 = load i8*, i8** %d, align 8, !dbg !16047
  store i8 0, i8* %58, align 1, !dbg !16048
  %59 = load i64, i64* %dlen, align 8, !dbg !16049
  %60 = load i8*, i8** %s, align 8, !dbg !16050
  %61 = load i8*, i8** %3, align 8, !dbg !16051
  %62 = ptrtoint i8* %60 to i64, !dbg !16052
  %63 = ptrtoint i8* %61 to i64, !dbg !16052
  %64 = sub i64 %62, %63, !dbg !16052
  %65 = add i64 %59, %64, !dbg !16053
  store i64 %65, i64* %1, align 8, !dbg !16054
  br label %66, !dbg !16054

; <label>:66                                      ; preds = %57, %33
  %67 = load i64, i64* %1, align 8, !dbg !16055
  ret i64 %67, !dbg !16055
}

; Function Attrs: nounwind uwtable
define i8* @dupStr(i8* %str) #0 !dbg !2209 {
  %1 = alloca i8*, align 8
  %newStr = alloca i8*, align 8
  store i8* %str, i8** %1, align 8
  call void @llvm.dbg.declare(metadata i8** %1, metadata !16056, metadata !2279), !dbg !16057
  call void @llvm.dbg.declare(metadata i8** %newStr, metadata !16058, metadata !2279), !dbg !16059
  %2 = call noalias i8* @malloc(i64 100) #10, !dbg !16060
  store i8* %2, i8** %newStr, align 8, !dbg !16059
  %3 = load i8*, i8** %newStr, align 8, !dbg !16061
  call void @llvm.memset.p0i8.i64(i8* %3, i8 0, i64 100, i32 1, i1 false), !dbg !16062
  %4 = load i8*, i8** %newStr, align 8, !dbg !16063
  %5 = load i8*, i8** %1, align 8, !dbg !16064
  %6 = load i8*, i8** %1, align 8, !dbg !16065
  %7 = call i64 @strlen(i8* %6) #9, !dbg !16066
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %4, i8* %5, i64 %7, i32 1, i1 false), !dbg !16067
  %8 = load i8*, i8** %newStr, align 8, !dbg !16069
  ret i8* %8, !dbg !16070
}

; Function Attrs: nounwind uwtable
define void @usage() #0 !dbg !2207 {
  %1 = load i8*, i8** @version, align 8, !dbg !16071
  %2 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 13), align 8, !dbg !16072
  %3 = icmp ne i32 %2, 0, !dbg !16073
  %4 = select i1 %3, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3.550, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4.551, i32 0, i32 0), !dbg !16073
  %5 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 12), align 4, !dbg !16074
  %6 = icmp ne i32 %5, 0, !dbg !16075
  %7 = select i1 %6, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3.550, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4.551, i32 0, i32 0), !dbg !16075
  %8 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([875 x i8], [875 x i8]* @.str.1.552, i32 0, i32 0), i8* %1, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.2.553, i32 0, i32 0), i8* %4, i8* %7, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.5.554, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.555, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.5.554, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.555, i32 0, i32 0)), !dbg !16076
  %9 = call i32 @totd_exit(i32 1), !dbg !16077
  ret void, !dbg !16078
}

declare i32 @printf(i8*, ...) #2

; Function Attrs: nounwind uwtable
define i32 @totd_exit(i32 %status) #0 !dbg !2221 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  store i32 %status, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !16079, metadata !2279), !dbg !16080
  call void @ev_tcp_out_finish(), !dbg !16081
  call void @ev_udp_in_finish(), !dbg !16082
  call void @ev_tcp_conn_in_finish(), !dbg !16083
  call void @ev_to_finish(), !dbg !16084
  call void @ev_signal_finish(), !dbg !16085
  %3 = load %struct.generic_list*, %struct.generic_list** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 21), align 8, !dbg !16086
  %4 = icmp ne %struct.generic_list* %3, null, !dbg !16088
  br i1 %4, label %5, label %7, !dbg !16089

; <label>:5                                       ; preds = %0
  %6 = load %struct.generic_list*, %struct.generic_list** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 21), align 8, !dbg !16090
  call void @list_destroy(%struct.generic_list* %6, void (i8*)* @fwd_freev), !dbg !16091
  br label %7, !dbg !16091

; <label>:7                                       ; preds = %5, %0
  %8 = load i8*, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 1), align 8, !dbg !16092
  %9 = icmp ne i8* %8, null, !dbg !16094
  br i1 %9, label %10, label %13, !dbg !16095

; <label>:10                                      ; preds = %7
  %11 = load i8*, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 1), align 8, !dbg !16096
  %12 = call i32 @unlink(i8* %11) #10, !dbg !16097
  br label %13, !dbg !16097

; <label>:13                                      ; preds = %10, %7
  %14 = load i32, i32* %2, align 4, !dbg !16098
  %15 = icmp ne i32 %14, 0, !dbg !16100
  br i1 %15, label %16, label %19, !dbg !16101

; <label>:16                                      ; preds = %13
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.96, i32 0, i32 0)), !dbg !16102
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !16104
  %18 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %17, i8* getelementptr inbounds ([86 x i8], [86 x i8]* @.str.97, i32 0, i32 0)), !dbg !16105
  br label %19, !dbg !16106

; <label>:19                                      ; preds = %16, %13
  %20 = load i32, i32* %2, align 4, !dbg !16107
  call void @exit(i32 %20) #11, !dbg !16108
  unreachable, !dbg !16108
                                                  ; No predecessors!
  %22 = load i32, i32* %1, align 4, !dbg !16109
  ret i32 %22, !dbg !16109
}

; Function Attrs: nounwind
declare i32 @unlink(i8*) #5

declare i32 @fprintf(%struct._IO_FILE*, i8*, ...) #2

; Function Attrs: noreturn nounwind
declare void @exit(i32) #7

; Function Attrs: noinline nounwind uwtable
define void @unroll_loop(i32 %count) #8 !dbg !2208 {
  %1 = alloca i32, align 4
  store i32 %count, i32* %1, align 4
  call void @llvm.dbg.declare(metadata i32* %1, metadata !16110, metadata !2279), !dbg !16111
  %2 = load i32, i32* %1, align 4, !dbg !16112
  %3 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.8.560, i32 0, i32 0), i32 %2), !dbg !16113
  ret void, !dbg !16114
}

; Function Attrs: nounwind uwtable
define void @__set_debug_level__(i32 %level) #0 !dbg !2212 {
  %1 = alloca i32, align 4
  store i32 %level, i32* %1, align 4
  call void @llvm.dbg.declare(metadata i32* %1, metadata !16115, metadata !2279), !dbg !16116
  %2 = load i32, i32* %1, align 4, !dbg !16117
  %3 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.12.561, i32 0, i32 0), i32 %2), !dbg !16118
  ret void, !dbg !16119
}

; Function Attrs: nounwind uwtable
define void @__print_debug_string__(i8* %str, ...) #0 !dbg !2213 {
  %1 = alloca i8*, align 8
  store i8* %str, i8** %1, align 8
  call void @llvm.dbg.declare(metadata i8** %1, metadata !16120, metadata !2279), !dbg !16121
  %2 = load i8*, i8** %1, align 8, !dbg !16122
  %3 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.13.564, i32 0, i32 0), i8* %2), !dbg !16123
  ret void, !dbg !16124
}

; Function Attrs: nounwind uwtable
define i32 @main(i32 %argc, i8** %argv) #0 !dbg !2216 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i8**, align 8
  %pwd_p = alloca %struct.passwd*, align 8
  %i = alloca i32, align 4
  %grp_p = alloca %struct.group*, align 8
  %pid_fp = alloca %struct._IO_FILE*, align 8
  %pid = alloca i32, align 4
  %4 = alloca %struct.ToT, align 8
  %pid_fp1 = alloca %struct._IO_FILE*, align 8
  store i32 0, i32* %1, align 4
  store i32 %argc, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !16125, metadata !2279), !dbg !16126
  store i8** %argv, i8*** %3, align 8
  call void @llvm.dbg.declare(metadata i8*** %3, metadata !16127, metadata !2279), !dbg !16128
  call void @llvm.dbg.declare(metadata %struct.passwd** %pwd_p, metadata !16129, metadata !2279), !dbg !16141
  call void @llvm.dbg.declare(metadata i32* %i, metadata !16142, metadata !2279), !dbg !16143
  %5 = call i32 @getuid() #10, !dbg !16144
  store i32 %5, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 5), align 8, !dbg !16145
  %6 = call i32 @getgid() #10, !dbg !16146
  store i32 %6, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 6), align 4, !dbg !16147
  store i8* null, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 2), align 8, !dbg !16148
  store i8* null, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 3), align 8, !dbg !16149
  store i8* null, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 4), align 8, !dbg !16150
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 12), align 4, !dbg !16151
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 13), align 8, !dbg !16152
  store i32 0, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 14), align 4, !dbg !16153
  store i32 0, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 7), align 8, !dbg !16154
  store i32 0, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 8), align 4, !dbg !16155
  store i32 0, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 19), align 8, !dbg !16156
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 18), align 4, !dbg !16157
  store i32 0, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 16), align 4, !dbg !16158
  store i32 300, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 10), align 4, !dbg !16159
  store i32 53, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 9), align 8, !dbg !16160
  store i32 0, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 11), align 8, !dbg !16161
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 15), align 8, !dbg !16162
  store %struct.generic_list* null, %struct.generic_list** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 21), align 8, !dbg !16163
  store i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14.565, i32 0, i32 0), i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 1), align 8, !dbg !16164
  %7 = load i8*, i8** @conf_file, align 8, !dbg !16165
  store i8* %7, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 0), align 8, !dbg !16166
  store %struct.generic_list* null, %struct.generic_list** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 22), align 8, !dbg !16167
  %8 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.15.566, i32 0, i32 0), i32 30), !dbg !16168
  store i32 0, i32* %i, align 4, !dbg !16169
  br label %9, !dbg !16171

; <label>:9                                       ; preds = %17, %0
  %10 = load i32, i32* %i, align 4, !dbg !16172
  %11 = icmp slt i32 %10, 30, !dbg !16175
  br i1 %11, label %12, label %20, !dbg !16176

; <label>:12                                      ; preds = %9
  call void @unroll_loop(i32 30), !dbg !16177
  %13 = load i32, i32* %i, align 4, !dbg !16179
  %14 = sext i32 %13 to i64, !dbg !16180
  %15 = getelementptr inbounds [30 x [25 x i8]], [30 x [25 x i8]]* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 20), i64 0, i64 %14, !dbg !16180
  %16 = getelementptr inbounds [25 x i8], [25 x i8]* %15, i64 0, i64 0, !dbg !16180
  store i8 0, i8* %16, align 1, !dbg !16181
  br label %17, !dbg !16182

; <label>:17                                      ; preds = %12
  %18 = load i32, i32* %i, align 4, !dbg !16183
  %19 = add nsw i32 %18, 1, !dbg !16183
  store i32 %19, i32* %i, align 4, !dbg !16183
  br label %9, !dbg !16185

; <label>:20                                      ; preds = %9
  %21 = call %struct.generic_list* @list_init(), !dbg !16186
  store %struct.generic_list* %21, %struct.generic_list** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 21), align 8, !dbg !16187
  %22 = load %struct.generic_list*, %struct.generic_list** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 21), align 8, !dbg !16188
  %23 = icmp ne %struct.generic_list* %22, null, !dbg !16190
  br i1 %23, label %25, label %24, !dbg !16191

; <label>:24                                      ; preds = %20
  call void @exit(i32 1) #11, !dbg !16192
  unreachable, !dbg !16192

; <label>:25                                      ; preds = %20
  store i32 1, i32* %i, align 4, !dbg !16193
  br label %26, !dbg !16195

; <label>:26                                      ; preds = %267, %25
  %27 = load i32, i32* %i, align 4, !dbg !16196
  %28 = icmp slt i32 %27, 10, !dbg !16199
  br i1 %28, label %29, label %270, !dbg !16200

; <label>:29                                      ; preds = %26
  call void @unroll_loop(i32 10), !dbg !16201
  %30 = load i32, i32* %i, align 4, !dbg !16203
  %31 = load i32, i32* %2, align 4, !dbg !16205
  %32 = icmp sge i32 %30, %31, !dbg !16206
  br i1 %32, label %33, label %34, !dbg !16207

; <label>:33                                      ; preds = %29
  br label %270, !dbg !16208

; <label>:34                                      ; preds = %29
  %35 = load i32, i32* %i, align 4, !dbg !16210
  %36 = sext i32 %35 to i64, !dbg !16212
  %37 = load i8**, i8*** %3, align 8, !dbg !16212
  %38 = getelementptr inbounds i8*, i8** %37, i64 %36, !dbg !16212
  %39 = load i8*, i8** %38, align 8, !dbg !16212
  %40 = call i32 @strncmp(i8* %39, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.16.567, i32 0, i32 0), i64 2) #9, !dbg !16213
  %41 = icmp ne i32 %40, 0, !dbg !16213
  br i1 %41, label %51, label %42, !dbg !16214

; <label>:42                                      ; preds = %34
  %43 = load i32, i32* %i, align 4, !dbg !16215
  %44 = sext i32 %43 to i64, !dbg !16217
  %45 = load i8**, i8*** %3, align 8, !dbg !16217
  %46 = getelementptr inbounds i8*, i8** %45, i64 %44, !dbg !16217
  %47 = load i8*, i8** %46, align 8, !dbg !16217
  %48 = getelementptr inbounds i8, i8* %47, i64 2, !dbg !16217
  %49 = call i32 @atoi(i8* %48) #9, !dbg !16218
  store i32 %49, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 8), align 4, !dbg !16219
  %50 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 8), align 4, !dbg !16220
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.568, i32 0, i32 0), i32 %50), !dbg !16221
  br label %266, !dbg !16222

; <label>:51                                      ; preds = %34
  %52 = load i32, i32* %i, align 4, !dbg !16223
  %53 = sext i32 %52 to i64, !dbg !16226
  %54 = load i8**, i8*** %3, align 8, !dbg !16226
  %55 = getelementptr inbounds i8*, i8** %54, i64 %53, !dbg !16226
  %56 = load i8*, i8** %55, align 8, !dbg !16226
  %57 = call i32 @strcmp(i8* %56, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18.569, i32 0, i32 0)) #9, !dbg !16227
  %58 = icmp ne i32 %57, 0, !dbg !16227
  br i1 %58, label %60, label %59, !dbg !16228

; <label>:59                                      ; preds = %51
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 13), align 8, !dbg !16229
  br label %265, !dbg !16230

; <label>:60                                      ; preds = %51
  %61 = load i32, i32* %i, align 4, !dbg !16231
  %62 = sext i32 %61 to i64, !dbg !16233
  %63 = load i8**, i8*** %3, align 8, !dbg !16233
  %64 = getelementptr inbounds i8*, i8** %63, i64 %62, !dbg !16233
  %65 = load i8*, i8** %64, align 8, !dbg !16233
  %66 = call i32 @strcmp(i8* %65, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.19.570, i32 0, i32 0)) #9, !dbg !16234
  %67 = icmp ne i32 %66, 0, !dbg !16234
  br i1 %67, label %69, label %68, !dbg !16235

; <label>:68                                      ; preds = %60
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 12), align 4, !dbg !16236
  br label %264, !dbg !16237

; <label>:69                                      ; preds = %60
  %70 = load i32, i32* %i, align 4, !dbg !16238
  %71 = sext i32 %70 to i64, !dbg !16240
  %72 = load i8**, i8*** %3, align 8, !dbg !16240
  %73 = getelementptr inbounds i8*, i8** %72, i64 %71, !dbg !16240
  %74 = load i8*, i8** %73, align 8, !dbg !16240
  %75 = call i32 @strcmp(i8* %74, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.20.571, i32 0, i32 0)) #9, !dbg !16241
  %76 = icmp ne i32 %75, 0, !dbg !16241
  br i1 %76, label %77, label %85, !dbg !16242

; <label>:77                                      ; preds = %69
  %78 = load i32, i32* %i, align 4, !dbg !16243
  %79 = sext i32 %78 to i64, !dbg !16245
  %80 = load i8**, i8*** %3, align 8, !dbg !16245
  %81 = getelementptr inbounds i8*, i8** %80, i64 %79, !dbg !16245
  %82 = load i8*, i8** %81, align 8, !dbg !16245
  %83 = call i32 @strcmp(i8* %82, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.21.572, i32 0, i32 0)) #9, !dbg !16246
  %84 = icmp ne i32 %83, 0, !dbg !16246
  br i1 %84, label %86, label %85, !dbg !16247

; <label>:85                                      ; preds = %77, %69
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 12), align 4, !dbg !16248
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 13), align 8, !dbg !16249
  br label %263, !dbg !16250

; <label>:86                                      ; preds = %77
  %87 = load i32, i32* %i, align 4, !dbg !16251
  %88 = sext i32 %87 to i64, !dbg !16253
  %89 = load i8**, i8*** %3, align 8, !dbg !16253
  %90 = getelementptr inbounds i8*, i8** %89, i64 %88, !dbg !16253
  %91 = load i8*, i8** %90, align 8, !dbg !16253
  %92 = call i32 @strcmp(i8* %91, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.22.573, i32 0, i32 0)) #9, !dbg !16254
  %93 = icmp ne i32 %92, 0, !dbg !16254
  br i1 %93, label %95, label %94, !dbg !16255

; <label>:94                                      ; preds = %86
  store i32 0, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 12), align 4, !dbg !16256
  br label %262, !dbg !16257

; <label>:95                                      ; preds = %86
  %96 = load i32, i32* %i, align 4, !dbg !16258
  %97 = sext i32 %96 to i64, !dbg !16260
  %98 = load i8**, i8*** %3, align 8, !dbg !16260
  %99 = getelementptr inbounds i8*, i8** %98, i64 %97, !dbg !16260
  %100 = load i8*, i8** %99, align 8, !dbg !16260
  %101 = call i32 @strcmp(i8* %100, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.23.574, i32 0, i32 0)) #9, !dbg !16261
  %102 = icmp ne i32 %101, 0, !dbg !16261
  br i1 %102, label %104, label %103, !dbg !16262

; <label>:103                                     ; preds = %95
  store i32 0, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 13), align 8, !dbg !16263
  br label %261, !dbg !16264

; <label>:104                                     ; preds = %95
  %105 = load i32, i32* %i, align 4, !dbg !16265
  %106 = sext i32 %105 to i64, !dbg !16267
  %107 = load i8**, i8*** %3, align 8, !dbg !16267
  %108 = getelementptr inbounds i8*, i8** %107, i64 %106, !dbg !16267
  %109 = load i8*, i8** %108, align 8, !dbg !16267
  %110 = call i32 @strcmp(i8* %109, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.24.575, i32 0, i32 0)) #9, !dbg !16268
  %111 = icmp ne i32 %110, 0, !dbg !16268
  br i1 %111, label %120, label %112, !dbg !16269

; <label>:112                                     ; preds = %104
  %113 = load i32, i32* %i, align 4, !dbg !16270
  %114 = add nsw i32 %113, 1, !dbg !16270
  store i32 %114, i32* %i, align 4, !dbg !16270
  %115 = sext i32 %114 to i64, !dbg !16271
  %116 = load i8**, i8*** %3, align 8, !dbg !16271
  %117 = getelementptr inbounds i8*, i8** %116, i64 %115, !dbg !16271
  %118 = load i8*, i8** %117, align 8, !dbg !16271
  %119 = call i8* @dupStr(i8* %118), !dbg !16272
  store i8* %119, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 0), align 8, !dbg !16273
  br label %260, !dbg !16274

; <label>:120                                     ; preds = %104
  %121 = load i32, i32* %i, align 4, !dbg !16275
  %122 = sext i32 %121 to i64, !dbg !16277
  %123 = load i8**, i8*** %3, align 8, !dbg !16277
  %124 = getelementptr inbounds i8*, i8** %123, i64 %122, !dbg !16277
  %125 = load i8*, i8** %124, align 8, !dbg !16277
  %126 = call i32 @strcmp(i8* %125, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.25.576, i32 0, i32 0)) #9, !dbg !16278
  %127 = icmp ne i32 %126, 0, !dbg !16278
  br i1 %127, label %145, label %128, !dbg !16279

; <label>:128                                     ; preds = %120
  %129 = load i32, i32* %i, align 4, !dbg !16280
  %130 = add nsw i32 %129, 1, !dbg !16280
  store i32 %130, i32* %i, align 4, !dbg !16280
  %131 = sext i32 %130 to i64, !dbg !16283
  %132 = load i8**, i8*** %3, align 8, !dbg !16283
  %133 = getelementptr inbounds i8*, i8** %132, i64 %131, !dbg !16283
  %134 = load i8*, i8** %133, align 8, !dbg !16283
  %135 = call i32 @conv_trick_conf(i8* %134), !dbg !16284
  %136 = icmp ne i32 %135, 0, !dbg !16284
  br i1 %136, label %137, label %144, !dbg !16285

; <label>:137                                     ; preds = %128
  %138 = load i32, i32* %i, align 4, !dbg !16286
  %139 = add nsw i32 %138, 1, !dbg !16286
  store i32 %139, i32* %i, align 4, !dbg !16286
  %140 = sext i32 %139 to i64, !dbg !16288
  %141 = load i8**, i8*** %3, align 8, !dbg !16288
  %142 = getelementptr inbounds i8*, i8** %141, i64 %140, !dbg !16288
  %143 = load i8*, i8** %142, align 8, !dbg !16288
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.26.577, i32 0, i32 0), i8* %143), !dbg !16289
  call void @usage(), !dbg !16290
  br label %144, !dbg !16291

; <label>:144                                     ; preds = %137, %128
  br label %259, !dbg !16292

; <label>:145                                     ; preds = %120
  %146 = load i32, i32* %i, align 4, !dbg !16293
  %147 = sext i32 %146 to i64, !dbg !16295
  %148 = load i8**, i8*** %3, align 8, !dbg !16295
  %149 = getelementptr inbounds i8*, i8** %148, i64 %147, !dbg !16295
  %150 = load i8*, i8** %149, align 8, !dbg !16295
  %151 = call i32 @strcmp(i8* %150, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.27.578, i32 0, i32 0)) #9, !dbg !16296
  %152 = icmp ne i32 %151, 0, !dbg !16296
  br i1 %152, label %171, label %153, !dbg !16297

; <label>:153                                     ; preds = %145
  %154 = load i32, i32* %i, align 4, !dbg !16298
  %155 = add nsw i32 %154, 1, !dbg !16298
  store i32 %155, i32* %i, align 4, !dbg !16298
  %156 = sext i32 %155 to i64, !dbg !16300
  %157 = load i8**, i8*** %3, align 8, !dbg !16300
  %158 = getelementptr inbounds i8*, i8** %157, i64 %156, !dbg !16300
  %159 = load i8*, i8** %158, align 8, !dbg !16300
  %160 = call i32 @atoi(i8* %159) #9, !dbg !16301
  store i32 %160, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 11), align 8, !dbg !16302
  %161 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 11), align 8, !dbg !16303
  %162 = icmp ne i32 %161, 0, !dbg !16305
  br i1 %162, label %170, label %163, !dbg !16306

; <label>:163                                     ; preds = %153
  %164 = load i32, i32* %i, align 4, !dbg !16307
  %165 = add nsw i32 %164, 1, !dbg !16307
  store i32 %165, i32* %i, align 4, !dbg !16307
  %166 = sext i32 %165 to i64, !dbg !16309
  %167 = load i8**, i8*** %3, align 8, !dbg !16309
  %168 = getelementptr inbounds i8*, i8** %167, i64 %166, !dbg !16309
  %169 = load i8*, i8** %168, align 8, !dbg !16309
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.28.579, i32 0, i32 0), i8* %169), !dbg !16310
  call void @usage(), !dbg !16311
  br label %170, !dbg !16312

; <label>:170                                     ; preds = %163, %153
  br label %258, !dbg !16313

; <label>:171                                     ; preds = %145
  %172 = load i32, i32* %i, align 4, !dbg !16314
  %173 = sext i32 %172 to i64, !dbg !16317
  %174 = load i8**, i8*** %3, align 8, !dbg !16317
  %175 = getelementptr inbounds i8*, i8** %174, i64 %173, !dbg !16317
  %176 = load i8*, i8** %175, align 8, !dbg !16317
  %177 = call i32 @strcmp(i8* %176, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.29.580, i32 0, i32 0)) #9, !dbg !16318
  %178 = icmp ne i32 %177, 0, !dbg !16318
  br i1 %178, label %187, label %179, !dbg !16319

; <label>:179                                     ; preds = %171
  %180 = load i32, i32* %i, align 4, !dbg !16320
  %181 = add nsw i32 %180, 1, !dbg !16320
  store i32 %181, i32* %i, align 4, !dbg !16320
  %182 = sext i32 %181 to i64, !dbg !16321
  %183 = load i8**, i8*** %3, align 8, !dbg !16321
  %184 = getelementptr inbounds i8*, i8** %183, i64 %182, !dbg !16321
  %185 = load i8*, i8** %184, align 8, !dbg !16321
  %186 = call noalias i8* @strdup(i8* %185) #10, !dbg !16322
  store i8* %186, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 2), align 8, !dbg !16323
  br label %257, !dbg !16324

; <label>:187                                     ; preds = %171
  %188 = load i32, i32* %i, align 4, !dbg !16325
  %189 = sext i32 %188 to i64, !dbg !16327
  %190 = load i8**, i8*** %3, align 8, !dbg !16327
  %191 = getelementptr inbounds i8*, i8** %190, i64 %189, !dbg !16327
  %192 = load i8*, i8** %191, align 8, !dbg !16327
  %193 = call i32 @strcmp(i8* %192, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.30.581, i32 0, i32 0)) #9, !dbg !16328
  %194 = icmp ne i32 %193, 0, !dbg !16328
  br i1 %194, label %203, label %195, !dbg !16329

; <label>:195                                     ; preds = %187
  %196 = load i32, i32* %i, align 4, !dbg !16330
  %197 = add nsw i32 %196, 1, !dbg !16330
  store i32 %197, i32* %i, align 4, !dbg !16330
  %198 = sext i32 %197 to i64, !dbg !16331
  %199 = load i8**, i8*** %3, align 8, !dbg !16331
  %200 = getelementptr inbounds i8*, i8** %199, i64 %198, !dbg !16331
  %201 = load i8*, i8** %200, align 8, !dbg !16331
  %202 = call noalias i8* @strdup(i8* %201) #10, !dbg !16332
  store i8* %202, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 3), align 8, !dbg !16333
  br label %256, !dbg !16334

; <label>:203                                     ; preds = %187
  %204 = load i32, i32* %i, align 4, !dbg !16335
  %205 = sext i32 %204 to i64, !dbg !16337
  %206 = load i8**, i8*** %3, align 8, !dbg !16337
  %207 = getelementptr inbounds i8*, i8** %206, i64 %205, !dbg !16337
  %208 = load i8*, i8** %207, align 8, !dbg !16337
  %209 = call i32 @strcmp(i8* %208, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.31.582, i32 0, i32 0)) #9, !dbg !16338
  %210 = icmp ne i32 %209, 0, !dbg !16338
  br i1 %210, label %219, label %211, !dbg !16339

; <label>:211                                     ; preds = %203
  %212 = load i32, i32* %i, align 4, !dbg !16340
  %213 = add nsw i32 %212, 1, !dbg !16340
  store i32 %213, i32* %i, align 4, !dbg !16340
  %214 = sext i32 %213 to i64, !dbg !16341
  %215 = load i8**, i8*** %3, align 8, !dbg !16341
  %216 = getelementptr inbounds i8*, i8** %215, i64 %214, !dbg !16341
  %217 = load i8*, i8** %216, align 8, !dbg !16341
  %218 = call noalias i8* @strdup(i8* %217) #10, !dbg !16342
  store i8* %218, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 4), align 8, !dbg !16343
  br label %255, !dbg !16344

; <label>:219                                     ; preds = %203
  %220 = load i32, i32* %i, align 4, !dbg !16345
  %221 = sext i32 %220 to i64, !dbg !16347
  %222 = load i8**, i8*** %3, align 8, !dbg !16347
  %223 = getelementptr inbounds i8*, i8** %222, i64 %221, !dbg !16347
  %224 = load i8*, i8** %223, align 8, !dbg !16347
  %225 = call i32 @strcmp(i8* %224, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.32.583, i32 0, i32 0)) #9, !dbg !16348
  %226 = icmp ne i32 %225, 0, !dbg !16348
  br i1 %226, label %228, label %227, !dbg !16349

; <label>:227                                     ; preds = %219
  call void @usage(), !dbg !16350
  br label %254, !dbg !16350

; <label>:228                                     ; preds = %219
  %229 = load i32, i32* %i, align 4, !dbg !16351
  %230 = sext i32 %229 to i64, !dbg !16353
  %231 = load i8**, i8*** %3, align 8, !dbg !16353
  %232 = getelementptr inbounds i8*, i8** %231, i64 %230, !dbg !16353
  %233 = load i8*, i8** %232, align 8, !dbg !16353
  %234 = call i32 @strcmp(i8* %233, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.33.584, i32 0, i32 0)) #9, !dbg !16354
  %235 = icmp ne i32 %234, 0, !dbg !16354
  br i1 %235, label %237, label %236, !dbg !16355

; <label>:236                                     ; preds = %228
  store i32 -1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 7), align 8, !dbg !16356
  br label %253, !dbg !16357

; <label>:237                                     ; preds = %228
  %238 = load i32, i32* %i, align 4, !dbg !16358
  %239 = sext i32 %238 to i64, !dbg !16360
  %240 = load i8**, i8*** %3, align 8, !dbg !16360
  %241 = getelementptr inbounds i8*, i8** %240, i64 %239, !dbg !16360
  %242 = load i8*, i8** %241, align 8, !dbg !16360
  %243 = call i32 @strcmp(i8* %242, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.34.585, i32 0, i32 0)) #9, !dbg !16361
  %244 = icmp ne i32 %243, 0, !dbg !16361
  br i1 %244, label %246, label %245, !dbg !16362

; <label>:245                                     ; preds = %237
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 7), align 8, !dbg !16363
  br label %252, !dbg !16364

; <label>:246                                     ; preds = %237
  %247 = load i32, i32* %i, align 4, !dbg !16365
  %248 = sext i32 %247 to i64, !dbg !16367
  %249 = load i8**, i8*** %3, align 8, !dbg !16367
  %250 = getelementptr inbounds i8*, i8** %249, i64 %248, !dbg !16367
  %251 = load i8*, i8** %250, align 8, !dbg !16367
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.35.586, i32 0, i32 0), i8* %251), !dbg !16368
  call void @usage(), !dbg !16369
  br label %252

; <label>:252                                     ; preds = %246, %245
  br label %253

; <label>:253                                     ; preds = %252, %236
  br label %254

; <label>:254                                     ; preds = %253, %227
  br label %255

; <label>:255                                     ; preds = %254, %211
  br label %256

; <label>:256                                     ; preds = %255, %195
  br label %257

; <label>:257                                     ; preds = %256, %179
  br label %258

; <label>:258                                     ; preds = %257, %170
  br label %259

; <label>:259                                     ; preds = %258, %144
  br label %260

; <label>:260                                     ; preds = %259, %112
  br label %261

; <label>:261                                     ; preds = %260, %103
  br label %262

; <label>:262                                     ; preds = %261, %94
  br label %263

; <label>:263                                     ; preds = %262, %85
  br label %264

; <label>:264                                     ; preds = %263, %68
  br label %265

; <label>:265                                     ; preds = %264, %59
  br label %266

; <label>:266                                     ; preds = %265, %42
  br label %267, !dbg !16370

; <label>:267                                     ; preds = %266
  %268 = load i32, i32* %i, align 4, !dbg !16371
  %269 = add nsw i32 %268, 1, !dbg !16371
  store i32 %269, i32* %i, align 4, !dbg !16371
  br label %26, !dbg !16373

; <label>:270                                     ; preds = %33, %26
  %271 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 8), align 4, !dbg !16374
  %272 = icmp sgt i32 %271, 0, !dbg !16376
  br i1 %272, label %273, label %274, !dbg !16377

; <label>:273                                     ; preds = %270
  call void @openlog(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.36.587, i32 0, i32 0), i32 43, i32 24), !dbg !16378
  br label %275, !dbg !16378

; <label>:274                                     ; preds = %270
  call void @openlog(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.36.587, i32 0, i32 0), i32 11, i32 24), !dbg !16379
  br label %275

; <label>:275                                     ; preds = %274, %273
  %276 = load i8*, i8** @version, align 8, !dbg !16380
  call void (i32, i8*, ...) @syslog(i32 5, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.13.564, i32 0, i32 0), i8* %276), !dbg !16381
  %277 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 8), align 4, !dbg !16382
  %278 = icmp ne i32 %277, 0, !dbg !16384
  br i1 %278, label %279, label %293, !dbg !16385

; <label>:279                                     ; preds = %275
  %280 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 7), align 8, !dbg !16386
  %281 = icmp sgt i32 %280, 0, !dbg !16389
  br i1 %281, label %282, label %284, !dbg !16390

; <label>:282                                     ; preds = %279
  %283 = call i32 @setlogmask(i32 15) #10, !dbg !16391
  br label %292, !dbg !16391

; <label>:284                                     ; preds = %279
  %285 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 7), align 8, !dbg !16392
  %286 = icmp ne i32 %285, 0, !dbg !16394
  br i1 %286, label %289, label %287, !dbg !16395

; <label>:287                                     ; preds = %284
  %288 = call i32 @setlogmask(i32 127) #10, !dbg !16396
  br label %291, !dbg !16396

; <label>:289                                     ; preds = %284
  %290 = call i32 @setlogmask(i32 255) #10, !dbg !16397
  br label %291

; <label>:291                                     ; preds = %289, %287
  br label %292

; <label>:292                                     ; preds = %291, %282
  br label %311, !dbg !16398

; <label>:293                                     ; preds = %275
  %294 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 7), align 8, !dbg !16399
  %295 = icmp sgt i32 %294, 0, !dbg !16402
  br i1 %295, label %296, label %298, !dbg !16403

; <label>:296                                     ; preds = %293
  %297 = call i32 @setlogmask(i32 15) #10, !dbg !16404
  br label %310, !dbg !16404

; <label>:298                                     ; preds = %293
  %299 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 7), align 8, !dbg !16405
  %300 = icmp ne i32 %299, 0, !dbg !16407
  br i1 %300, label %303, label %301, !dbg !16408

; <label>:301                                     ; preds = %298
  %302 = call i32 @setlogmask(i32 31) #10, !dbg !16409
  br label %309, !dbg !16409

; <label>:303                                     ; preds = %298
  %304 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 7), align 8, !dbg !16410
  %305 = icmp slt i32 %304, 0, !dbg !16412
  br i1 %305, label %306, label %308, !dbg !16413

; <label>:306                                     ; preds = %303
  %307 = call i32 @setlogmask(i32 127) #10, !dbg !16414
  br label %308, !dbg !16414

; <label>:308                                     ; preds = %306, %303
  br label %309

; <label>:309                                     ; preds = %308, %301
  br label %310

; <label>:310                                     ; preds = %309, %296
  br label %311

; <label>:311                                     ; preds = %310, %292
  %312 = load i8*, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 2), align 8, !dbg !16415
  %313 = icmp ne i8* %312, null, !dbg !16417
  br i1 %313, label %314, label %334, !dbg !16418

; <label>:314                                     ; preds = %311
  %315 = load i8*, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 2), align 8, !dbg !16419
  %316 = getelementptr inbounds i8, i8* %315, i64 0, !dbg !16419
  %317 = load i8, i8* %316, align 1, !dbg !16419
  %318 = zext i8 %317 to i32, !dbg !16419
  %319 = sext i32 %318 to i64, !dbg !16419
  %320 = call i16** @__ctype_b_loc() #1, !dbg !16419
  %321 = load i16*, i16** %320, align 8, !dbg !16419
  %322 = getelementptr inbounds i16, i16* %321, i64 %319, !dbg !16419
  %323 = load i16, i16* %322, align 2, !dbg !16419
  %324 = zext i16 %323 to i32, !dbg !16419
  %325 = and i32 %324, 2048, !dbg !16419
  %326 = icmp ne i32 %325, 0, !dbg !16419
  br i1 %326, label %327, label %330, !dbg !16422

; <label>:327                                     ; preds = %314
  %328 = load i8*, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 2), align 8, !dbg !16423
  %329 = call i32 @atoi(i8* %328) #9, !dbg !16425
  store i32 %329, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 5), align 8, !dbg !16426
  store %struct.passwd* null, %struct.passwd** %pwd_p, align 8, !dbg !16427
  br label %333, !dbg !16428

; <label>:330                                     ; preds = %314
  %331 = load i8*, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 2), align 8, !dbg !16429
  %332 = call %struct.passwd* @getpwnam(i8* %331), !dbg !16431
  store %struct.passwd* %332, %struct.passwd** %pwd_p, align 8, !dbg !16432
  br label %333

; <label>:333                                     ; preds = %330, %327
  br label %337, !dbg !16433

; <label>:334                                     ; preds = %311
  %335 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 5), align 8, !dbg !16434
  %336 = call %struct.passwd* @getpwuid(i32 %335), !dbg !16435
  store %struct.passwd* %336, %struct.passwd** %pwd_p, align 8, !dbg !16436
  br label %337

; <label>:337                                     ; preds = %334, %333
  %338 = load %struct.passwd*, %struct.passwd** %pwd_p, align 8, !dbg !16437
  %339 = icmp ne %struct.passwd* %338, null, !dbg !16437
  br i1 %339, label %340, label %366, !dbg !16439

; <label>:340                                     ; preds = %337
  %341 = load %struct.passwd*, %struct.passwd** %pwd_p, align 8, !dbg !16440
  %342 = getelementptr inbounds %struct.passwd, %struct.passwd* %341, i32 0, i32 0, !dbg !16442
  %343 = load i8*, i8** %342, align 8, !dbg !16442
  %344 = load %struct.passwd*, %struct.passwd** %pwd_p, align 8, !dbg !16443
  %345 = getelementptr inbounds %struct.passwd, %struct.passwd* %344, i32 0, i32 2, !dbg !16444
  %346 = load i32, i32* %345, align 8, !dbg !16444
  %347 = load %struct.passwd*, %struct.passwd** %pwd_p, align 8, !dbg !16445
  %348 = getelementptr inbounds %struct.passwd, %struct.passwd* %347, i32 0, i32 3, !dbg !16446
  %349 = load i32, i32* %348, align 4, !dbg !16446
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.37.588, i32 0, i32 0), i8* %343, i32 %346, i32 %349), !dbg !16447
  %350 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 5), align 8, !dbg !16448
  %351 = icmp ne i32 %350, 0, !dbg !16450
  br i1 %351, label %352, label %361, !dbg !16451

; <label>:352                                     ; preds = %340
  %353 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 5), align 8, !dbg !16452
  %354 = load %struct.passwd*, %struct.passwd** %pwd_p, align 8, !dbg !16454
  %355 = getelementptr inbounds %struct.passwd, %struct.passwd* %354, i32 0, i32 2, !dbg !16455
  %356 = load i32, i32* %355, align 8, !dbg !16455
  %357 = icmp ne i32 %353, %356, !dbg !16456
  br i1 %357, label %358, label %361, !dbg !16457

; <label>:358                                     ; preds = %352
  %359 = load i8*, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 2), align 8, !dbg !16458
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.38.589, i32 0, i32 0), i8* %359), !dbg !16460
  %360 = call i32 @totd_exit(i32 1), !dbg !16461
  br label %365, !dbg !16462

; <label>:361                                     ; preds = %352, %340
  %362 = load %struct.passwd*, %struct.passwd** %pwd_p, align 8, !dbg !16463
  %363 = getelementptr inbounds %struct.passwd, %struct.passwd* %362, i32 0, i32 2, !dbg !16465
  %364 = load i32, i32* %363, align 8, !dbg !16465
  store i32 %364, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 5), align 8, !dbg !16466
  br label %365

; <label>:365                                     ; preds = %361, %358
  br label %368, !dbg !16467

; <label>:366                                     ; preds = %337
  %367 = load i8*, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 2), align 8, !dbg !16468
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.39.590, i32 0, i32 0), i8* %367), !dbg !16470
  br label %368

; <label>:368                                     ; preds = %366, %365
  %369 = load i8*, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 3), align 8, !dbg !16471
  %370 = icmp ne i8* %369, null, !dbg !16473
  br i1 %370, label %371, label %400, !dbg !16474

; <label>:371                                     ; preds = %368
  %372 = load i8*, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 3), align 8, !dbg !16475
  %373 = getelementptr inbounds i8, i8* %372, i64 0, !dbg !16475
  %374 = load i8, i8* %373, align 1, !dbg !16475
  %375 = zext i8 %374 to i32, !dbg !16475
  %376 = sext i32 %375 to i64, !dbg !16475
  %377 = call i16** @__ctype_b_loc() #1, !dbg !16475
  %378 = load i16*, i16** %377, align 8, !dbg !16475
  %379 = getelementptr inbounds i16, i16* %378, i64 %376, !dbg !16475
  %380 = load i16, i16* %379, align 2, !dbg !16475
  %381 = zext i16 %380 to i32, !dbg !16475
  %382 = and i32 %381, 2048, !dbg !16475
  %383 = icmp ne i32 %382, 0, !dbg !16475
  br i1 %383, label %384, label %387, !dbg !16478

; <label>:384                                     ; preds = %371
  %385 = load i8*, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 3), align 8, !dbg !16479
  %386 = call i32 @atoi(i8* %385) #9, !dbg !16481
  store i32 %386, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 6), align 4, !dbg !16482
  br label %399, !dbg !16483

; <label>:387                                     ; preds = %371
  call void @llvm.dbg.declare(metadata %struct.group** %grp_p, metadata !16484, metadata !2279), !dbg !16494
  %388 = load i8*, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 3), align 8, !dbg !16495
  %389 = call %struct.group* @getgrnam(i8* %388), !dbg !16496
  store %struct.group* %389, %struct.group** %grp_p, align 8, !dbg !16497
  %390 = load %struct.group*, %struct.group** %grp_p, align 8, !dbg !16498
  %391 = icmp ne %struct.group* %390, null, !dbg !16498
  br i1 %391, label %395, label %392, !dbg !16500

; <label>:392                                     ; preds = %387
  %393 = load i8*, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 3), align 8, !dbg !16501
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.40.591, i32 0, i32 0), i8* %393), !dbg !16503
  %394 = call i32 @totd_exit(i32 1), !dbg !16504
  br label %395, !dbg !16505

; <label>:395                                     ; preds = %392, %387
  %396 = load %struct.group*, %struct.group** %grp_p, align 8, !dbg !16506
  %397 = getelementptr inbounds %struct.group, %struct.group* %396, i32 0, i32 2, !dbg !16507
  %398 = load i32, i32* %397, align 8, !dbg !16507
  store i32 %398, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 6), align 4, !dbg !16508
  br label %399

; <label>:399                                     ; preds = %395, %384
  br label %410, !dbg !16509

; <label>:400                                     ; preds = %368
  %401 = load %struct.passwd*, %struct.passwd** %pwd_p, align 8, !dbg !16510
  %402 = icmp ne %struct.passwd* %401, null, !dbg !16510
  br i1 %402, label %403, label %407, !dbg !16513

; <label>:403                                     ; preds = %400
  %404 = load %struct.passwd*, %struct.passwd** %pwd_p, align 8, !dbg !16514
  %405 = getelementptr inbounds %struct.passwd, %struct.passwd* %404, i32 0, i32 3, !dbg !16515
  %406 = load i32, i32* %405, align 4, !dbg !16515
  store i32 %406, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 6), align 4, !dbg !16516
  br label %409, !dbg !16517

; <label>:407                                     ; preds = %400
  %408 = call i32 @getgid() #10, !dbg !16518
  store i32 %408, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 6), align 4, !dbg !16519
  br label %409

; <label>:409                                     ; preds = %407, %403
  br label %410

; <label>:410                                     ; preds = %409, %399
  call void @endpwent(), !dbg !16520
  call void @endgrent(), !dbg !16521
  %411 = load i8*, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 4), align 8, !dbg !16522
  %412 = icmp ne i8* %411, null, !dbg !16524
  br i1 %412, label %413, label %427, !dbg !16525

; <label>:413                                     ; preds = %410
  %414 = load i8*, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 4), align 8, !dbg !16526
  %415 = call i32 @chroot(i8* %414) #10, !dbg !16529
  %416 = icmp slt i32 %415, 0, !dbg !16530
  br i1 %416, label %417, label %420, !dbg !16531

; <label>:417                                     ; preds = %413
  %418 = load i8*, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 4), align 8, !dbg !16532
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.41.592, i32 0, i32 0), i8* %418), !dbg !16534
  %419 = call i32 @totd_exit(i32 1), !dbg !16535
  br label %420, !dbg !16536

; <label>:420                                     ; preds = %417, %413
  %421 = load i8*, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 4), align 8, !dbg !16537
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.42.593, i32 0, i32 0), i8* %421), !dbg !16538
  %422 = call i32 @chdir(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.43.594, i32 0, i32 0)) #10, !dbg !16539
  %423 = icmp slt i32 %422, 0, !dbg !16541
  br i1 %423, label %424, label %426, !dbg !16542

; <label>:424                                     ; preds = %420
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.44.595, i32 0, i32 0)), !dbg !16543
  %425 = call i32 @totd_exit(i32 1), !dbg !16545
  br label %426, !dbg !16546

; <label>:426                                     ; preds = %424, %420
  br label %427, !dbg !16547

; <label>:427                                     ; preds = %426, %410
  %428 = load i8*, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 0), align 8, !dbg !16548
  %429 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.45.596, i32 0, i32 0), i8* %428), !dbg !16549
  %430 = load i8*, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 0), align 8, !dbg !16550
  %431 = call i32 @read_config(i8* %430), !dbg !16552
  %432 = icmp ne i32 %431, 0, !dbg !16552
  br i1 %432, label %433, label %435, !dbg !16553

; <label>:433                                     ; preds = %427
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.46.597, i32 0, i32 0)), !dbg !16554
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.47.598, i32 0, i32 0)), !dbg !16556
  %434 = call i32 @totd_exit(i32 1), !dbg !16557
  br label %435, !dbg !16558

; <label>:435                                     ; preds = %433, %427
  call void @__set_debug_level__(i32 2), !dbg !16559
  %436 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 18), align 4, !dbg !16560
  %437 = icmp eq i32 %436, 1, !dbg !16562
  br i1 %437, label %438, label %445, !dbg !16563

; <label>:438                                     ; preds = %435
  %439 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 5), align 8, !dbg !16564
  %440 = icmp ne i32 %439, 0, !dbg !16566
  br i1 %440, label %441, label %445, !dbg !16567

; <label>:441                                     ; preds = %438
  %442 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 9), align 8, !dbg !16568
  %443 = icmp slt i32 %442, 1024, !dbg !16570
  br i1 %443, label %444, label %445, !dbg !16571

; <label>:444                                     ; preds = %441
  call void (i32, i8*, ...) @syslog(i32 4, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.48.599, i32 0, i32 0)), !dbg !16572
  store i32 0, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 18), align 4, !dbg !16574
  br label %445, !dbg !16575

; <label>:445                                     ; preds = %444, %441, %438, %435
  %446 = load i8*, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 1), align 8, !dbg !16576
  %447 = icmp ne i8* %446, null, !dbg !16578
  br i1 %447, label %448, label %480, !dbg !16579

; <label>:448                                     ; preds = %445
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %pid_fp, metadata !16580, metadata !2279), !dbg !16622
  call void @llvm.dbg.declare(metadata i32* %pid, metadata !16623, metadata !2279), !dbg !16626
  %449 = load i8*, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 1), align 8, !dbg !16627
  %450 = call %struct._IO_FILE* @fopen(i8* %449, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.49.600, i32 0, i32 0)), !dbg !16628
  store %struct._IO_FILE* %450, %struct._IO_FILE** %pid_fp, align 8, !dbg !16629
  %451 = load %struct._IO_FILE*, %struct._IO_FILE** %pid_fp, align 8, !dbg !16630
  %452 = icmp ne %struct._IO_FILE* %451, null, !dbg !16630
  br i1 %452, label %453, label %479, !dbg !16632

; <label>:453                                     ; preds = %448
  %454 = load %struct._IO_FILE*, %struct._IO_FILE** %pid_fp, align 8, !dbg !16633
  %455 = call i32 (%struct._IO_FILE*, i8*, ...) @__isoc99_fscanf(%struct._IO_FILE* %454, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.50.601, i32 0, i32 0), i32* %pid), !dbg !16636
  %456 = icmp ne i32 %455, 1, !dbg !16637
  br i1 %456, label %457, label %460, !dbg !16638

; <label>:457                                     ; preds = %453
  call void (i32, i8*, ...) @syslog(i32 5, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.51.602, i32 0, i32 0)), !dbg !16639
  %458 = load i8*, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 1), align 8, !dbg !16641
  %459 = call i32 @unlink(i8* %458) #10, !dbg !16642
  br label %476, !dbg !16643

; <label>:460                                     ; preds = %453
  %461 = load i32, i32* %pid, align 4, !dbg !16644
  %462 = call i32 @kill(i32 %461, i32 0) #10, !dbg !16647
  %463 = icmp eq i32 %462, -1, !dbg !16648
  br i1 %463, label %464, label %469, !dbg !16649

; <label>:464                                     ; preds = %460
  %465 = load i8*, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 1), align 8, !dbg !16650
  %466 = call i32 @unlink(i8* %465) #10, !dbg !16652
  %467 = icmp ne i32 %466, 0, !dbg !16652
  br i1 %467, label %469, label %468, !dbg !16653

; <label>:468                                     ; preds = %464
  call void (i32, i8*, ...) @syslog(i32 5, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.52.603, i32 0, i32 0)), !dbg !16654
  br label %475, !dbg !16656

; <label>:469                                     ; preds = %464, %460
  %470 = load i8*, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 1), align 8, !dbg !16657
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.53.604, i32 0, i32 0), i8* %470), !dbg !16659
  %471 = load i8*, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 1), align 8, !dbg !16660
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([124 x i8], [124 x i8]* @.str.54.605, i32 0, i32 0), i8* %471), !dbg !16661
  %472 = load %struct._IO_FILE*, %struct._IO_FILE** %pid_fp, align 8, !dbg !16662
  %473 = call i32 @fclose(%struct._IO_FILE* %472), !dbg !16663
  %474 = call i32 @totd_exit(i32 1), !dbg !16664
  br label %475

; <label>:475                                     ; preds = %469, %468
  br label %476

; <label>:476                                     ; preds = %475, %457
  %477 = load %struct._IO_FILE*, %struct._IO_FILE** %pid_fp, align 8, !dbg !16665
  %478 = call i32 @fclose(%struct._IO_FILE* %477), !dbg !16666
  br label %479, !dbg !16667

; <label>:479                                     ; preds = %476, %448
  br label %480, !dbg !16668

; <label>:480                                     ; preds = %479, %445
  %481 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 12), align 4, !dbg !16669
  %482 = icmp ne i32 %481, 0, !dbg !16671
  br i1 %482, label %488, label %483, !dbg !16672

; <label>:483                                     ; preds = %480
  %484 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 13), align 8, !dbg !16673
  %485 = icmp ne i32 %484, 0, !dbg !16675
  br i1 %485, label %486, label %488, !dbg !16676

; <label>:486                                     ; preds = %483
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([81 x i8], [81 x i8]* @.str.55.606, i32 0, i32 0)), !dbg !16677
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([101 x i8], [101 x i8]* @.str.56.607, i32 0, i32 0)), !dbg !16679
  %487 = call i32 @totd_exit(i32 1), !dbg !16680
  br label %488, !dbg !16681

; <label>:488                                     ; preds = %486, %483, %480
  %489 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 12), align 4, !dbg !16682
  %490 = icmp ne i32 %489, 0, !dbg !16684
  br i1 %490, label %491, label %500, !dbg !16685

; <label>:491                                     ; preds = %488
  %492 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 13), align 8, !dbg !16686
  %493 = icmp ne i32 %492, 0, !dbg !16688
  br i1 %493, label %494, label %500, !dbg !16689

; <label>:494                                     ; preds = %491
  %495 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 15), align 8, !dbg !16690
  %496 = icmp ne i32 %495, 0, !dbg !16693
  br i1 %496, label %499, label %497, !dbg !16694

; <label>:497                                     ; preds = %494
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.57.608, i32 0, i32 0)), !dbg !16695
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.58.609, i32 0, i32 0)), !dbg !16697
  %498 = call i32 @totd_exit(i32 1), !dbg !16698
  br label %499, !dbg !16699

; <label>:499                                     ; preds = %497, %494
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.59.610, i32 0, i32 0)), !dbg !16700
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 14), align 4, !dbg !16701
  br label %500, !dbg !16702

; <label>:500                                     ; preds = %499, %491, %488
  %501 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 12), align 4, !dbg !16703
  %502 = icmp ne i32 %501, 0, !dbg !16705
  br i1 %502, label %503, label %504, !dbg !16706

; <label>:503                                     ; preds = %500
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.60.611, i32 0, i32 0)), !dbg !16707
  br label %504, !dbg !16709

; <label>:504                                     ; preds = %503, %500
  %505 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 13), align 8, !dbg !16710
  %506 = icmp ne i32 %505, 0, !dbg !16712
  br i1 %506, label %507, label %508, !dbg !16713

; <label>:507                                     ; preds = %504
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.61.612, i32 0, i32 0)), !dbg !16714
  br label %508, !dbg !16716

; <label>:508                                     ; preds = %507, %504
  %509 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 12), align 4, !dbg !16717
  %510 = icmp ne i32 %509, 0, !dbg !16719
  br i1 %510, label %516, label %511, !dbg !16720

; <label>:511                                     ; preds = %508
  %512 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 13), align 8, !dbg !16721
  %513 = icmp ne i32 %512, 0, !dbg !16723
  br i1 %513, label %516, label %514, !dbg !16724

; <label>:514                                     ; preds = %511
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.62.613, i32 0, i32 0)), !dbg !16725
  %515 = call i32 @totd_exit(i32 1), !dbg !16727
  br label %516, !dbg !16728

; <label>:516                                     ; preds = %514, %511, %508
  %517 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 15), align 8, !dbg !16729
  %518 = icmp ne i32 %517, 0, !dbg !16731
  br i1 %518, label %519, label %524, !dbg !16732

; <label>:519                                     ; preds = %516
  %520 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 25), align 8, !dbg !16733
  %521 = icmp ne i32 %520, 0, !dbg !16735
  br i1 %521, label %522, label %524, !dbg !16736

; <label>:522                                     ; preds = %519
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([162 x i8], [162 x i8]* @.str.63.614, i32 0, i32 0)), !dbg !16737
  %523 = call i32 @totd_exit(i32 1), !dbg !16739
  br label %524, !dbg !16740

; <label>:524                                     ; preds = %522, %519, %516
  call void @fwd_init(), !dbg !16741
  call void @fwd_select(%struct.ToT* sret %4, %struct.ToT* byval align 8 @T), !dbg !16742
  %525 = bitcast %struct.ToT* %4 to i8*, !dbg !16742
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* bitcast (%struct.ToT* @T to i8*), i8* %525, i64 2216, i32 8, i1 false), !dbg !16743
  %526 = load %struct.generic_list*, %struct.generic_list** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 22), align 8, !dbg !16745
  %527 = icmp ne %struct.generic_list* %526, null, !dbg !16747
  br i1 %527, label %529, label %528, !dbg !16748

; <label>:528                                     ; preds = %524
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.64, i32 0, i32 0)), !dbg !16749
  store i32 -1, i32* %1, align 4, !dbg !16751
  br label %624, !dbg !16751

; <label>:529                                     ; preds = %524
  call void @ev_dup_init(), !dbg !16752
  %530 = call i32 @ev_signal_init(), !dbg !16753
  %531 = icmp slt i32 %530, 0, !dbg !16755
  br i1 %531, label %532, label %534, !dbg !16756

; <label>:532                                     ; preds = %529
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.65.615, i32 0, i32 0)), !dbg !16757
  %533 = call i32 @totd_exit(i32 1), !dbg !16759
  br label %534, !dbg !16760

; <label>:534                                     ; preds = %532, %529
  %535 = call i32 @ev_to_init(), !dbg !16761
  %536 = icmp slt i32 %535, 0, !dbg !16763
  br i1 %536, label %537, label %539, !dbg !16764

; <label>:537                                     ; preds = %534
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.66, i32 0, i32 0)), !dbg !16765
  %538 = call i32 @totd_exit(i32 1), !dbg !16767
  br label %539, !dbg !16768

; <label>:539                                     ; preds = %537, %534
  %540 = call i32 @ev_tcp_conn_in_init(), !dbg !16769
  %541 = icmp slt i32 %540, 0, !dbg !16771
  br i1 %541, label %542, label %544, !dbg !16772

; <label>:542                                     ; preds = %539
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.67, i32 0, i32 0)), !dbg !16773
  %543 = call i32 @totd_exit(i32 1), !dbg !16775
  br label %544, !dbg !16776

; <label>:544                                     ; preds = %542, %539
  %545 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 9), align 8, !dbg !16777
  %546 = call i32 @net_init_socketlist(i32 %545), !dbg !16779
  %547 = icmp slt i32 %546, 0, !dbg !16780
  br i1 %547, label %548, label %550, !dbg !16781

; <label>:548                                     ; preds = %544
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.68, i32 0, i32 0)), !dbg !16782
  %549 = call i32 @totd_exit(i32 1), !dbg !16784
  br label %550, !dbg !16785

; <label>:550                                     ; preds = %548, %544
  %551 = call i32 @net_bind_socketlist(), !dbg !16786
  %552 = icmp sle i32 %551, 0, !dbg !16788
  br i1 %552, label %553, label %560, !dbg !16789

; <label>:553                                     ; preds = %550
  %554 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 18), align 4, !dbg !16790
  %555 = icmp ne i32 %554, 0, !dbg !16793
  br i1 %555, label %558, label %556, !dbg !16794

; <label>:556                                     ; preds = %553
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.69, i32 0, i32 0)), !dbg !16795
  %557 = call i32 @totd_exit(i32 1), !dbg !16797
  br label %559, !dbg !16798

; <label>:558                                     ; preds = %553
  call void (i32, i8*, ...) @syslog(i32 4, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.69, i32 0, i32 0)), !dbg !16799
  call void (i32, i8*, ...) @syslog(i32 4, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.70, i32 0, i32 0)), !dbg !16801
  br label %559

; <label>:559                                     ; preds = %558, %556
  br label %560, !dbg !16802

; <label>:560                                     ; preds = %559, %550
  %561 = call i32 @ev_udp_in_init(), !dbg !16803
  %562 = icmp slt i32 %561, 0, !dbg !16805
  br i1 %562, label %563, label %565, !dbg !16806

; <label>:563                                     ; preds = %560
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.71, i32 0, i32 0)), !dbg !16807
  %564 = call i32 @totd_exit(i32 1), !dbg !16809
  br label %565, !dbg !16810

; <label>:565                                     ; preds = %563, %560
  %566 = call i32 @ev_tcp_out_init(), !dbg !16811
  %567 = icmp slt i32 %566, 0, !dbg !16813
  br i1 %567, label %568, label %570, !dbg !16814

; <label>:568                                     ; preds = %565
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.72, i32 0, i32 0)), !dbg !16815
  %569 = call i32 @totd_exit(i32 1), !dbg !16817
  br label %570, !dbg !16818

; <label>:570                                     ; preds = %568, %565
  %571 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 6), align 4, !dbg !16819
  %572 = call i32 @setgid(i32 %571) #10, !dbg !16821
  %573 = icmp slt i32 %572, 0, !dbg !16822
  br i1 %573, label %574, label %577, !dbg !16823

; <label>:574                                     ; preds = %570
  %575 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 6), align 4, !dbg !16824
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.73, i32 0, i32 0), i32 %575), !dbg !16826
  %576 = call i32 @totd_exit(i32 1), !dbg !16827
  br label %577, !dbg !16828

; <label>:577                                     ; preds = %574, %570
  %578 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 5), align 8, !dbg !16829
  %579 = call i32 @setuid(i32 %578) #10, !dbg !16831
  %580 = icmp slt i32 %579, 0, !dbg !16832
  br i1 %580, label %581, label %584, !dbg !16833

; <label>:581                                     ; preds = %577
  %582 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 5), align 8, !dbg !16834
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.74, i32 0, i32 0), i32 %582), !dbg !16836
  %583 = call i32 @totd_exit(i32 1), !dbg !16837
  br label %584, !dbg !16838

; <label>:584                                     ; preds = %581, %577
  %585 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 18), align 4, !dbg !16839
  %586 = icmp ne i32 %585, 0, !dbg !16841
  br i1 %586, label %587, label %593, !dbg !16842

; <label>:587                                     ; preds = %584
  %588 = call i32 @ev_to_register_ifcheck(), !dbg !16843
  %589 = icmp slt i32 %588, 0, !dbg !16846
  br i1 %589, label %590, label %592, !dbg !16847

; <label>:590                                     ; preds = %587
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.75, i32 0, i32 0)), !dbg !16848
  %591 = call i32 @totd_exit(i32 1), !dbg !16850
  br label %592, !dbg !16851

; <label>:592                                     ; preds = %590, %587
  br label %593, !dbg !16852

; <label>:593                                     ; preds = %592, %584
  %594 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 8), align 4, !dbg !16853
  %595 = icmp ne i32 %594, 0, !dbg !16855
  br i1 %595, label %603, label %596, !dbg !16856

; <label>:596                                     ; preds = %593
  %597 = call i32 @daemon(i32 0, i32 0) #10, !dbg !16857
  %598 = icmp ne i32 %597, 0, !dbg !16857
  br i1 %598, label %599, label %601, !dbg !16860

; <label>:599                                     ; preds = %596
  %600 = call i32 @totd_exit(i32 1), !dbg !16861
  br label %602, !dbg !16861

; <label>:601                                     ; preds = %596
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.76, i32 0, i32 0)), !dbg !16862
  br label %602

; <label>:602                                     ; preds = %601, %599
  br label %603, !dbg !16863

; <label>:603                                     ; preds = %602, %593
  %604 = load i8*, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 1), align 8, !dbg !16864
  %605 = icmp ne i8* %604, null, !dbg !16866
  br i1 %605, label %606, label %622, !dbg !16867

; <label>:606                                     ; preds = %603
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %pid_fp1, metadata !16868, metadata !2279), !dbg !16870
  %607 = load i8*, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 1), align 8, !dbg !16871
  %608 = call %struct._IO_FILE* @fopen(i8* %607, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.77, i32 0, i32 0)), !dbg !16872
  store %struct._IO_FILE* %608, %struct._IO_FILE** %pid_fp1, align 8, !dbg !16873
  %609 = load %struct._IO_FILE*, %struct._IO_FILE** %pid_fp1, align 8, !dbg !16874
  %610 = icmp ne %struct._IO_FILE* %609, null, !dbg !16874
  br i1 %610, label %614, label %611, !dbg !16876

; <label>:611                                     ; preds = %606
  %612 = load i8*, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 1), align 8, !dbg !16877
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.78, i32 0, i32 0), i8* %612), !dbg !16879
  %613 = call i32 @totd_exit(i32 1), !dbg !16880
  br label %614, !dbg !16881

; <label>:614                                     ; preds = %611, %606
  %615 = load %struct._IO_FILE*, %struct._IO_FILE** %pid_fp1, align 8, !dbg !16882
  %616 = call i32 @getpid() #10, !dbg !16883
  %617 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %615, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.50.601, i32 0, i32 0), i32 %616), !dbg !16884
  %618 = call i32 @getpid() #10, !dbg !16886
  %619 = load i8*, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 1), align 8, !dbg !16887
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.79, i32 0, i32 0), i32 %618, i8* %619), !dbg !16888
  %620 = load %struct._IO_FILE*, %struct._IO_FILE** %pid_fp1, align 8, !dbg !16889
  %621 = call i32 @fclose(%struct._IO_FILE* %620), !dbg !16890
  br label %622, !dbg !16891

; <label>:622                                     ; preds = %614, %603
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.80, i32 0, i32 0)), !dbg !16892
  call void @totd_eventloop(), !dbg !16893
  %623 = call i32 @totd_exit(i32 0), !dbg !16894
  store i32 %623, i32* %1, align 4, !dbg !16895
  br label %624, !dbg !16895

; <label>:624                                     ; preds = %622, %528
  %625 = load i32, i32* %1, align 4, !dbg !16896
  ret i32 %625, !dbg !16896
}

; Function Attrs: nounwind
declare i32 @getuid() #5

; Function Attrs: nounwind
declare i32 @getgid() #5

; Function Attrs: nounwind readonly
declare i32 @strncmp(i8*, i8*, i64) #4

declare void @openlog(i8*, i32, i32) #2

; Function Attrs: nounwind
declare i32 @setlogmask(i32) #5

declare %struct.passwd* @getpwnam(i8*) #2

declare %struct.passwd* @getpwuid(i32) #2

declare %struct.group* @getgrnam(i8*) #2

declare void @endpwent() #2

declare void @endgrent() #2

; Function Attrs: nounwind
declare i32 @chroot(i8*) #5

; Function Attrs: nounwind
declare i32 @chdir(i8*) #5

declare %struct._IO_FILE* @fopen(i8*, i8*) #2

declare i32 @__isoc99_fscanf(%struct._IO_FILE*, i8*, ...) #2

; Function Attrs: nounwind
declare i32 @kill(i32, i32) #5

declare i32 @fclose(%struct._IO_FILE*) #2

; Function Attrs: nounwind
declare i32 @setgid(i32) #5

; Function Attrs: nounwind
declare i32 @setuid(i32) #5

; Function Attrs: nounwind
declare i32 @daemon(i32, i32) #5

; Function Attrs: nounwind
declare i32 @getpid() #5

; Function Attrs: nounwind uwtable
define void @totd_eventloop() #0 !dbg !2220 {
  %fn = alloca i8*, align 8
  %tv_out = alloca %struct.timeval, align 8
  %tvp = alloca %struct.timeval*, align 8
  %fd_read = alloca %struct.fd_set, align 8
  %fd_write = alloca %struct.fd_set, align 8
  %max_fd = alloca i32, align 4
  %fdnum = alloca i32, align 4
  %i = alloca i32, align 4
  %next_timeout = alloca i64, align 8
  %1 = alloca %struct.ToT, align 8
  %__d0 = alloca i32, align 4
  %__d1 = alloca i32, align 4
  %__d01 = alloca i32, align 4
  %__d12 = alloca i32, align 4
  %sock = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i8** %fn, metadata !16897, metadata !2279), !dbg !16898
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.81, i32 0, i32 0), i8** %fn, align 8, !dbg !16898
  call void @llvm.dbg.declare(metadata %struct.timeval* %tv_out, metadata !16899, metadata !2279), !dbg !16906
  call void @llvm.dbg.declare(metadata %struct.timeval** %tvp, metadata !16907, metadata !2279), !dbg !16909
  call void @llvm.dbg.declare(metadata %struct.fd_set* %fd_read, metadata !16910, metadata !2279), !dbg !16915
  call void @llvm.dbg.declare(metadata %struct.fd_set* %fd_write, metadata !16916, metadata !2279), !dbg !16917
  call void @llvm.dbg.declare(metadata i32* %max_fd, metadata !16918, metadata !2279), !dbg !16919
  call void @llvm.dbg.declare(metadata i32* %fdnum, metadata !16920, metadata !2279), !dbg !16921
  call void @llvm.dbg.declare(metadata i32* %i, metadata !16922, metadata !2279), !dbg !16923
  call void @llvm.dbg.declare(metadata i64* %next_timeout, metadata !16924, metadata !2279), !dbg !16925
  br label %2, !dbg !16926

; <label>:2                                       ; preds = %0, %100, %119, %125, %136
  %3 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 8), align 4, !dbg !16927
  %4 = icmp sgt i32 %3, 2, !dbg !16930
  br i1 %4, label %5, label %6, !dbg !16931

; <label>:5                                       ; preds = %2
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.82, i32 0, i32 0)), !dbg !16932
  br label %6, !dbg !16932

; <label>:6                                       ; preds = %5, %2
  call void @fwd_select(%struct.ToT* sret %1, %struct.ToT* byval align 8 @T), !dbg !16933
  call void @ev_signal_process(), !dbg !16934
  %7 = call i64 @ev_timeout_process(), !dbg !16935
  store i64 %7, i64* %next_timeout, align 8, !dbg !16937
  %8 = load i64, i64* %next_timeout, align 8, !dbg !16938
  %9 = icmp ne i64 %8, 0, !dbg !16938
  br i1 %9, label %15, label %10, !dbg !16940

; <label>:10                                      ; preds = %6
  %11 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 8), align 4, !dbg !16941
  %12 = icmp sgt i32 %11, 2, !dbg !16944
  br i1 %12, label %13, label %14, !dbg !16945

; <label>:13                                      ; preds = %10
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.83, i32 0, i32 0)), !dbg !16946
  br label %14, !dbg !16946

; <label>:14                                      ; preds = %13, %10
  store %struct.timeval* null, %struct.timeval** %tvp, align 8, !dbg !16947
  br label %27, !dbg !16948

; <label>:15                                      ; preds = %6
  %16 = getelementptr inbounds %struct.timeval, %struct.timeval* %tv_out, i32 0, i32 1, !dbg !16949
  store i64 0, i64* %16, align 8, !dbg !16951
  %17 = load i64, i64* %next_timeout, align 8, !dbg !16952
  %18 = call i64 @time(i64* null) #10, !dbg !16953
  %19 = sub nsw i64 %17, %18, !dbg !16954
  %20 = getelementptr inbounds %struct.timeval, %struct.timeval* %tv_out, i32 0, i32 0, !dbg !16955
  store i64 %19, i64* %20, align 8, !dbg !16956
  store %struct.timeval* %tv_out, %struct.timeval** %tvp, align 8, !dbg !16957
  %21 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 8), align 4, !dbg !16958
  %22 = icmp sgt i32 %21, 2, !dbg !16960
  br i1 %22, label %23, label %26, !dbg !16961

; <label>:23                                      ; preds = %15
  %24 = getelementptr inbounds %struct.timeval, %struct.timeval* %tv_out, i32 0, i32 0, !dbg !16962
  %25 = load i64, i64* %24, align 8, !dbg !16962
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.84, i32 0, i32 0), i64 %25), !dbg !16963
  br label %26, !dbg !16963

; <label>:26                                      ; preds = %23, %15
  br label %27

; <label>:27                                      ; preds = %26, %14
  store i32 0, i32* %max_fd, align 4, !dbg !16964
  br label %28, !dbg !16965

; <label>:28                                      ; preds = %27
  call void @llvm.dbg.declare(metadata i32* %__d0, metadata !16966, metadata !2279), !dbg !16968
  call void @llvm.dbg.declare(metadata i32* %__d1, metadata !16969, metadata !2279), !dbg !16968
  %29 = getelementptr inbounds %struct.fd_set, %struct.fd_set* %fd_read, i32 0, i32 0, !dbg !16970
  %30 = getelementptr inbounds [16 x i64], [16 x i64]* %29, i64 0, i64 0, !dbg !16970
  %31 = call { i64, i64* } asm sideeffect "cld; rep; stosq", "={cx},={di},{ax},0,1,~{memory},~{dirflag},~{fpsr},~{flags}"(i32 0, i64 16, i64* %30) #10, !dbg !16970, !srcloc !16972
  %32 = extractvalue { i64, i64* } %31, 0, !dbg !16970
  %33 = extractvalue { i64, i64* } %31, 1, !dbg !16970
  %34 = trunc i64 %32 to i32, !dbg !16970
  store i32 %34, i32* %__d0, align 4, !dbg !16970
  %35 = ptrtoint i64* %33 to i64, !dbg !16970
  %36 = trunc i64 %35 to i32, !dbg !16970
  store i32 %36, i32* %__d1, align 4, !dbg !16970
  br label %37, !dbg !16970

; <label>:37                                      ; preds = %28
  br label %38, !dbg !16973

; <label>:38                                      ; preds = %37
  call void @llvm.dbg.declare(metadata i32* %__d01, metadata !16974, metadata !2279), !dbg !16976
  call void @llvm.dbg.declare(metadata i32* %__d12, metadata !16977, metadata !2279), !dbg !16976
  %39 = getelementptr inbounds %struct.fd_set, %struct.fd_set* %fd_write, i32 0, i32 0, !dbg !16978
  %40 = getelementptr inbounds [16 x i64], [16 x i64]* %39, i64 0, i64 0, !dbg !16978
  %41 = call { i64, i64* } asm sideeffect "cld; rep; stosq", "={cx},={di},{ax},0,1,~{memory},~{dirflag},~{fpsr},~{flags}"(i32 0, i64 16, i64* %40) #10, !dbg !16978, !srcloc !16980
  %42 = extractvalue { i64, i64* } %41, 0, !dbg !16978
  %43 = extractvalue { i64, i64* } %41, 1, !dbg !16978
  %44 = trunc i64 %42 to i32, !dbg !16978
  store i32 %44, i32* %__d01, align 4, !dbg !16978
  %45 = ptrtoint i64* %43 to i64, !dbg !16978
  %46 = trunc i64 %45 to i32, !dbg !16978
  store i32 %46, i32* %__d12, align 4, !dbg !16978
  br label %47, !dbg !16978

; <label>:47                                      ; preds = %38
  %48 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 8), align 4, !dbg !16981
  %49 = icmp sgt i32 %48, 3, !dbg !16983
  br i1 %49, label %50, label %51, !dbg !16984

; <label>:50                                      ; preds = %47
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.85, i32 0, i32 0)), !dbg !16985
  br label %51, !dbg !16985

; <label>:51                                      ; preds = %50, %47
  call void @nia_fds_set(%struct.fd_set* %fd_read, i32* %max_fd), !dbg !16986
  %52 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 8), align 4, !dbg !16987
  %53 = icmp sgt i32 %52, 3, !dbg !16989
  br i1 %53, label %54, label %55, !dbg !16990

; <label>:54                                      ; preds = %51
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.86, i32 0, i32 0)), !dbg !16991
  br label %55, !dbg !16991

; <label>:55                                      ; preds = %54, %51
  %56 = call i32 @ev_tcp_conn_in_fds(%struct.fd_set* %fd_read), !dbg !16992
  store i32 %56, i32* %i, align 4, !dbg !16993
  %57 = load i32, i32* %i, align 4, !dbg !16994
  %58 = load i32, i32* %max_fd, align 4, !dbg !16994
  %59 = icmp sgt i32 %57, %58, !dbg !16994
  br i1 %59, label %60, label %62, !dbg !16994

; <label>:60                                      ; preds = %55
  %61 = load i32, i32* %i, align 4, !dbg !16995
  br label %64, !dbg !16995

; <label>:62                                      ; preds = %55
  %63 = load i32, i32* %max_fd, align 4, !dbg !16997
  br label %64, !dbg !16997

; <label>:64                                      ; preds = %62, %60
  %65 = phi i32 [ %61, %60 ], [ %63, %62 ], !dbg !16999
  store i32 %65, i32* %max_fd, align 4, !dbg !17001
  %66 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 8), align 4, !dbg !17002
  %67 = icmp sgt i32 %66, 3, !dbg !17004
  br i1 %67, label %68, label %69, !dbg !17005

; <label>:68                                      ; preds = %64
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.87, i32 0, i32 0)), !dbg !17006
  br label %69, !dbg !17006

; <label>:69                                      ; preds = %68, %64
  %70 = call i32 @ev_tcp_out_fds(%struct.fd_set* %fd_write), !dbg !17007
  store i32 %70, i32* %i, align 4, !dbg !17008
  %71 = load i32, i32* %i, align 4, !dbg !17009
  %72 = load i32, i32* %max_fd, align 4, !dbg !17009
  %73 = icmp sgt i32 %71, %72, !dbg !17009
  br i1 %73, label %74, label %76, !dbg !17009

; <label>:74                                      ; preds = %69
  %75 = load i32, i32* %i, align 4, !dbg !17010
  br label %78, !dbg !17010

; <label>:76                                      ; preds = %69
  %77 = load i32, i32* %max_fd, align 4, !dbg !17011
  br label %78, !dbg !17011

; <label>:78                                      ; preds = %76, %74
  %79 = phi i32 [ %75, %74 ], [ %77, %76 ], !dbg !17012
  store i32 %79, i32* %max_fd, align 4, !dbg !17013
  %80 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 8), align 4, !dbg !17014
  %81 = icmp sgt i32 %80, 3, !dbg !17016
  br i1 %81, label %82, label %85, !dbg !17017

; <label>:82                                      ; preds = %78
  %83 = load i8*, i8** %fn, align 8, !dbg !17018
  %84 = load i32, i32* %max_fd, align 4, !dbg !17019
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.88, i32 0, i32 0), i8* %83, i32 %84), !dbg !17020
  br label %85, !dbg !17020

; <label>:85                                      ; preds = %82, %78
  %86 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 8), align 4, !dbg !17021
  %87 = icmp sgt i32 %86, 2, !dbg !17023
  br i1 %87, label %88, label %89, !dbg !17024

; <label>:88                                      ; preds = %85
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.89, i32 0, i32 0)), !dbg !17025
  br label %89, !dbg !17025

; <label>:89                                      ; preds = %88, %85
  %90 = load i32, i32* %max_fd, align 4, !dbg !17026
  %91 = add nsw i32 %90, 1, !dbg !17027
  %92 = load %struct.timeval*, %struct.timeval** %tvp, align 8, !dbg !17028
  %93 = call i32 @select(i32 %91, %struct.fd_set* %fd_read, %struct.fd_set* %fd_write, %struct.fd_set* null, %struct.timeval* %92), !dbg !17029
  store i32 %93, i32* %fdnum, align 4, !dbg !17030
  %94 = load i32, i32* %fdnum, align 4, !dbg !17031
  %95 = icmp slt i32 %94, 0, !dbg !17033
  br i1 %95, label %96, label %112, !dbg !17034

; <label>:96                                      ; preds = %89
  %97 = call i32* @__errno_location() #1, !dbg !17035
  %98 = load i32, i32* %97, align 4, !dbg !17035
  %99 = icmp eq i32 %98, 4, !dbg !17038
  br i1 %99, label %100, label %102, !dbg !17039

; <label>:100                                     ; preds = %96
  %101 = load i8*, i8** %fn, align 8, !dbg !17040
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.90, i32 0, i32 0), i8* %101), !dbg !17042
  br label %2, !dbg !17043

; <label>:102                                     ; preds = %96
  %103 = load i8*, i8** %fn, align 8, !dbg !17044
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.91, i32 0, i32 0), i8* %103), !dbg !17046
  %104 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i32 0, i32 9), align 8, !dbg !17047
  %105 = call i32 @net_reinit_socketlist(i32 %104, i32 1), !dbg !17049
  %106 = icmp slt i32 %105, 0, !dbg !17050
  br i1 %106, label %107, label %109, !dbg !17051

; <label>:107                                     ; preds = %102
  %108 = call i32 @totd_exit(i32 1), !dbg !17052
  br label %109, !dbg !17052

; <label>:109                                     ; preds = %107, %102
  %110 = call i32 @sleep(i32 1), !dbg !17053
  br label %111

; <label>:111                                     ; preds = %109
  br label %136, !dbg !17054

; <label>:112                                     ; preds = %89
  call void @llvm.dbg.declare(metadata i32* %sock, metadata !17055, metadata !2279), !dbg !17057
  %113 = call i32 @nia_fds_isset(%struct.fd_set* %fd_read, i32* %sock), !dbg !17058
  switch i32 %113, label %126 [
    i32 0, label %114
    i32 1, label %120
  ], !dbg !17059

; <label>:114                                     ; preds = %112
  %115 = load i32, i32* %sock, align 4, !dbg !17060
  %116 = call i32 @ev_udp_in_read(i32 %115), !dbg !17063
  %117 = icmp slt i32 %116, 0, !dbg !17064
  br i1 %117, label %118, label %119, !dbg !17065

; <label>:118                                     ; preds = %114
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.92, i32 0, i32 0)), !dbg !17066
  br label %119, !dbg !17066

; <label>:119                                     ; preds = %118, %114
  br label %2, !dbg !17067

; <label>:120                                     ; preds = %112
  %121 = load i32, i32* %sock, align 4, !dbg !17068
  %122 = call i32 @ev_tcp_srv_accept(i32 %121), !dbg !17070
  %123 = icmp slt i32 %122, 0, !dbg !17071
  br i1 %123, label %124, label %125, !dbg !17072

; <label>:124                                     ; preds = %120
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.93, i32 0, i32 0)), !dbg !17073
  br label %125, !dbg !17073

; <label>:125                                     ; preds = %124, %120
  br label %2, !dbg !17074

; <label>:126                                     ; preds = %112
  %127 = call i32 @ev_tcp_out_fd_check(%struct.fd_set* %fd_write), !dbg !17075
  %128 = icmp slt i32 %127, 0, !dbg !17077
  br i1 %128, label %129, label %130, !dbg !17078

; <label>:129                                     ; preds = %126
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.94, i32 0, i32 0)), !dbg !17079
  br label %130, !dbg !17079

; <label>:130                                     ; preds = %129, %126
  %131 = call i32 @ev_tcp_conn_in_fd_check(%struct.fd_set* %fd_read), !dbg !17080
  %132 = icmp slt i32 %131, 0, !dbg !17082
  br i1 %132, label %133, label %134, !dbg !17083

; <label>:133                                     ; preds = %130
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.95, i32 0, i32 0)), !dbg !17084
  br label %134, !dbg !17084

; <label>:134                                     ; preds = %133, %130
  br label %135, !dbg !17085

; <label>:135                                     ; preds = %134
  br label %136

; <label>:136                                     ; preds = %135, %111
  br label %2, !dbg !17086
                                                  ; No predecessors!
  ret void, !dbg !17088
}

declare i32 @select(i32, %struct.fd_set*, %struct.fd_set*, %struct.fd_set*, %struct.timeval*) #2

declare i32 @sleep(i32) #2

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone }
attributes #2 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind readonly "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noinline nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readonly }
attributes #10 = { nounwind }
attributes #11 = { noreturn nounwind }

!llvm.dbg.cu = !{!0, !185, !283, !395, !536, !642, !789, !937, !971, !983, !1088, !1194, !1223, !1260, !1358, !1454, !1573, !1671, !1712, !1827, !1973, !2135, !2187, !2193, !2197, !2199, !2201, !2203}
!llvm.ident = !{!2275, !2275, !2275, !2275, !2275, !2275, !2275, !2275, !2275, !2275, !2275, !2275, !2275, !2275, !2275, !2275, !2275, !2275, !2275, !2275, !2275, !2275, !2275, !2275, !2275, !2275, !2275, !2275}
!llvm.module.flags = !{!2276, !2277}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.8.0-2ubuntu4 (tags/RELEASE_380/final)", isOptimized: false, runtimeVersion: 0, emissionKind: 1, enums: !2, retainedTypes: !3, subprograms: !75, globals: !180)
!1 = !DIFile(filename: "request.c", directory: "/home/muhammad/totd/totd")
!2 = !{}
!3 = !{!4, !7, !19, !20, !26, !27, !67, !65}
!4 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5, size: 64, align: 64)
!5 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6)
!6 = !DIBasicType(name: "char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!7 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8, size: 64, align: 64)
!8 = !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr", file: !9, line: 153, size: 128, align: 16, elements: !10)
!9 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/socket.h", directory: "/home/muhammad/totd/totd")
!10 = !{!11, !15}
!11 = !DIDerivedType(tag: DW_TAG_member, name: "sa_family", scope: !8, file: !9, line: 155, baseType: !12, size: 16, align: 16)
!12 = !DIDerivedType(tag: DW_TAG_typedef, name: "sa_family_t", file: !13, line: 28, baseType: !14)
!13 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/sockaddr.h", directory: "/home/muhammad/totd/totd")
!14 = !DIBasicType(name: "unsigned short", size: 16, align: 16, encoding: DW_ATE_unsigned)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "sa_data", scope: !8, file: !9, line: 156, baseType: !16, size: 112, align: 8, offset: 16)
!16 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6, size: 112, align: 8, elements: !17)
!17 = !{!18}
!18 = !DISubrange(count: 14)
!19 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6, size: 64, align: 64)
!20 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !21, size: 64, align: 64)
!21 = !DIDerivedType(tag: DW_TAG_typedef, name: "u_char", file: !22, line: 33, baseType: !23)
!22 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/types.h", directory: "/home/muhammad/totd/totd")
!23 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u_char", file: !24, line: 30, baseType: !25)
!24 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "/home/muhammad/totd/totd")
!25 = !DIBasicType(name: "unsigned char", size: 8, align: 8, encoding: DW_ATE_unsigned_char)
!26 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64, align: 64)
!27 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !28, size: 64, align: 64)
!28 = !DIDerivedType(tag: DW_TAG_typedef, name: "RRset", file: !29, line: 168, baseType: !30)
!29 = !DIFile(filename: "./tot_types.h", directory: "/home/muhammad/totd/totd")
!30 = !DICompositeType(tag: DW_TAG_structure_type, name: "rr_set", file: !29, line: 160, size: 320, align: 64, elements: !31)
!31 = !{!32, !34, !38, !53, !54}
!32 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !30, file: !29, line: 161, baseType: !33, size: 32, align: 32)
!33 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!34 = !DIDerivedType(tag: DW_TAG_member, name: "key_len", scope: !30, file: !29, line: 163, baseType: !35, size: 64, align: 64, offset: 64)
!35 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !36, line: 62, baseType: !37)
!36 = !DIFile(filename: "/usr/lib/llvm-3.8/bin/../lib/clang/3.8.0/include/stddef.h", directory: "/home/muhammad/totd/totd")
!37 = !DIBasicType(name: "long unsigned int", size: 64, align: 64, encoding: DW_ATE_unsigned)
!38 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !30, file: !29, line: 164, baseType: !39, size: 64, align: 64, offset: 128)
!39 = !DIDerivedType(tag: DW_TAG_typedef, name: "U_Key", file: !29, line: 143, baseType: !40)
!40 = !DICompositeType(tag: DW_TAG_union_type, name: "u_key", file: !29, line: 140, size: 64, align: 64, elements: !41)
!41 = !{!42, !52}
!42 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !40, file: !29, line: 141, baseType: !43, size: 64, align: 64)
!43 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !44, size: 64, align: 64)
!44 = !DIDerivedType(tag: DW_TAG_typedef, name: "Key_Info", file: !29, line: 138, baseType: !45)
!45 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_info", file: !29, line: 134, size: 48, align: 16, elements: !46)
!46 = !{!47, !50, !51}
!47 = !DIDerivedType(tag: DW_TAG_member, name: "r_type", scope: !45, file: !29, line: 135, baseType: !48, size: 16, align: 16)
!48 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !49, line: 49, baseType: !14)
!49 = !DIFile(filename: "/usr/include/stdint.h", directory: "/home/muhammad/totd/totd")
!50 = !DIDerivedType(tag: DW_TAG_member, name: "r_class", scope: !45, file: !29, line: 136, baseType: !48, size: 16, align: 16, offset: 16)
!51 = !DIDerivedType(tag: DW_TAG_member, name: "owner_len", scope: !45, file: !29, line: 137, baseType: !48, size: 16, align: 16, offset: 32)
!52 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !40, file: !29, line: 142, baseType: !20, size: 64, align: 64)
!53 = !DIDerivedType(tag: DW_TAG_member, name: "data_len", scope: !30, file: !29, line: 166, baseType: !35, size: 64, align: 64, offset: 192)
!54 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !30, file: !29, line: 167, baseType: !55, size: 64, align: 64, offset: 256)
!55 = !DIDerivedType(tag: DW_TAG_typedef, name: "U_Data", file: !29, line: 157, baseType: !56)
!56 = !DICompositeType(tag: DW_TAG_union_type, name: "u_data", file: !29, line: 153, size: 64, align: 64, elements: !57)
!57 = !{!58, !64, !66}
!58 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !56, file: !29, line: 154, baseType: !59, size: 64, align: 64)
!59 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !60, size: 64, align: 64)
!60 = !DIDerivedType(tag: DW_TAG_typedef, name: "Data_Data", file: !29, line: 151, baseType: !61)
!61 = !DICompositeType(tag: DW_TAG_structure_type, name: "data_data", file: !29, line: 149, size: 16, align: 16, elements: !62)
!62 = !{!63}
!63 = !DIDerivedType(tag: DW_TAG_member, name: "data_cnt", scope: !61, file: !29, line: 150, baseType: !48, size: 16, align: 16)
!64 = !DIDerivedType(tag: DW_TAG_member, name: "rt_list", scope: !56, file: !29, line: 155, baseType: !65, size: 64, align: 64)
!65 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !48, size: 64, align: 64)
!66 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !56, file: !29, line: 156, baseType: !20, size: 64, align: 64)
!67 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !68, size: 64, align: 64)
!68 = !DIDerivedType(tag: DW_TAG_typedef, name: "RR", file: !29, line: 120, baseType: !69)
!69 = !DICompositeType(tag: DW_TAG_structure_type, name: "rr", file: !29, line: 117, size: 64, align: 32, elements: !70)
!70 = !{!71, !74}
!71 = !DIDerivedType(tag: DW_TAG_member, name: "ttl", scope: !69, file: !29, line: 118, baseType: !72, size: 32, align: 32)
!72 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !49, line: 51, baseType: !73)
!73 = !DIBasicType(name: "unsigned int", size: 32, align: 32, encoding: DW_ATE_unsigned)
!74 = !DIDerivedType(tag: DW_TAG_member, name: "rd_len", scope: !69, file: !29, line: 119, baseType: !48, size: 16, align: 16, offset: 32)
!75 = !{!76, !168, !171, !174, !175, !176, !177}
!76 = distinct !DISubprogram(name: "request_start", scope: !1, file: !1, line: 31, type: !77, isLocal: false, isDefinition: true, scopeLine: 31, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!77 = !DISubroutineType(types: !78)
!78 = !{!33, !79, !33}
!79 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !80, size: 64, align: 64)
!80 = !DIDerivedType(tag: DW_TAG_typedef, name: "Context", file: !29, line: 228, baseType: !81)
!81 = !DICompositeType(tag: DW_TAG_structure_type, name: "context", file: !29, line: 180, size: 3264, align: 64, elements: !82)
!82 = !{!83, !85, !86, !87, !88, !97, !98, !117, !121, !122, !126, !127, !128, !129, !130, !131, !132, !154, !155, !156, !164, !165, !166, !167}
!83 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !81, file: !29, line: 181, baseType: !84, size: 64, align: 64)
!84 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !81, size: 64, align: 64)
!85 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !81, file: !29, line: 182, baseType: !84, size: 64, align: 64, offset: 64)
!86 = !DIDerivedType(tag: DW_TAG_member, name: "work_state", scope: !81, file: !29, line: 185, baseType: !33, size: 32, align: 32, offset: 128)
!87 = !DIDerivedType(tag: DW_TAG_member, name: "cname_links", scope: !81, file: !29, line: 191, baseType: !33, size: 32, align: 32, offset: 160)
!88 = !DIDerivedType(tag: DW_TAG_member, name: "nameservers", scope: !81, file: !29, line: 192, baseType: !89, size: 64, align: 64, offset: 192)
!89 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !90, size: 64, align: 64)
!90 = !DIDerivedType(tag: DW_TAG_typedef, name: "G_List", file: !29, line: 22, baseType: !91)
!91 = !DICompositeType(tag: DW_TAG_structure_type, name: "generic_list", file: !29, line: 18, size: 192, align: 64, elements: !92)
!92 = !{!93, !95, !96}
!93 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !91, file: !29, line: 19, baseType: !94, size: 64, align: 64)
!94 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !91, size: 64, align: 64)
!95 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !91, file: !29, line: 20, baseType: !94, size: 64, align: 64, offset: 64)
!96 = !DIDerivedType(tag: DW_TAG_member, name: "list_data", scope: !91, file: !29, line: 21, baseType: !26, size: 64, align: 64, offset: 128)
!97 = !DIDerivedType(tag: DW_TAG_member, name: "current_ns", scope: !81, file: !29, line: 193, baseType: !89, size: 64, align: 64, offset: 256)
!98 = !DIDerivedType(tag: DW_TAG_member, name: "tout", scope: !81, file: !29, line: 196, baseType: !99, size: 64, align: 64, offset: 320)
!99 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !100, size: 64, align: 64)
!100 = !DICompositeType(tag: DW_TAG_structure_type, name: "ev_to_data", file: !29, line: 244, size: 256, align: 64, elements: !101)
!101 = !{!102, !107, !111, !112}
!102 = !DIDerivedType(tag: DW_TAG_member, name: "at", scope: !100, file: !29, line: 245, baseType: !103, size: 64, align: 64)
!103 = !DIDerivedType(tag: DW_TAG_typedef, name: "time_t", file: !104, line: 75, baseType: !105)
!104 = !DIFile(filename: "/usr/include/time.h", directory: "/home/muhammad/totd/totd")
!105 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !24, line: 139, baseType: !106)
!106 = !DIBasicType(name: "long int", size: 64, align: 64, encoding: DW_ATE_signed)
!107 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !100, file: !29, line: 246, baseType: !108, size: 64, align: 64, offset: 64)
!108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !109, size: 64, align: 64)
!109 = !DISubroutineType(types: !110)
!110 = !{!33, !99}
!111 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !100, file: !29, line: 247, baseType: !33, size: 32, align: 32, offset: 128)
!112 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !100, file: !29, line: 251, baseType: !113, size: 64, align: 64, offset: 192)
!113 = !DICompositeType(tag: DW_TAG_union_type, scope: !100, file: !29, line: 248, size: 64, align: 64, elements: !114)
!114 = !{!115, !116}
!115 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !113, file: !29, line: 249, baseType: !26, size: 64, align: 64)
!116 = !DIDerivedType(tag: DW_TAG_member, name: "cont", scope: !113, file: !29, line: 250, baseType: !84, size: 64, align: 64)
!117 = !DIDerivedType(tag: DW_TAG_member, name: "process", scope: !81, file: !29, line: 197, baseType: !118, size: 64, align: 64, offset: 384)
!118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !119, size: 64, align: 64)
!119 = !DISubroutineType(types: !120)
!120 = !{!33, !84}
!121 = !DIDerivedType(tag: DW_TAG_member, name: "retry", scope: !81, file: !29, line: 198, baseType: !118, size: 64, align: 64, offset: 448)
!122 = !DIDerivedType(tag: DW_TAG_member, name: "qname", scope: !81, file: !29, line: 201, baseType: !123, size: 2048, align: 8, offset: 512)
!123 = !DICompositeType(tag: DW_TAG_array_type, baseType: !21, size: 2048, align: 8, elements: !124)
!124 = !{!125}
!125 = !DISubrange(count: 256)
!126 = !DIDerivedType(tag: DW_TAG_member, name: "q_id", scope: !81, file: !29, line: 202, baseType: !72, size: 32, align: 32, offset: 2560)
!127 = !DIDerivedType(tag: DW_TAG_member, name: "q_class", scope: !81, file: !29, line: 203, baseType: !48, size: 16, align: 16, offset: 2592)
!128 = !DIDerivedType(tag: DW_TAG_member, name: "q_type", scope: !81, file: !29, line: 204, baseType: !48, size: 16, align: 16, offset: 2608)
!129 = !DIDerivedType(tag: DW_TAG_member, name: "an_list", scope: !81, file: !29, line: 207, baseType: !89, size: 64, align: 64, offset: 2624)
!130 = !DIDerivedType(tag: DW_TAG_member, name: "ns_list", scope: !81, file: !29, line: 208, baseType: !89, size: 64, align: 64, offset: 2688)
!131 = !DIDerivedType(tag: DW_TAG_member, name: "ar_list", scope: !81, file: !29, line: 209, baseType: !89, size: 64, align: 64, offset: 2752)
!132 = !DIDerivedType(tag: DW_TAG_member, name: "mesg", scope: !81, file: !29, line: 215, baseType: !133, size: 64, align: 64, offset: 2816)
!133 = !DICompositeType(tag: DW_TAG_union_type, scope: !81, file: !29, line: 212, size: 64, align: 64, elements: !134)
!134 = !{!135, !153}
!135 = !DIDerivedType(tag: DW_TAG_member, name: "hdr", scope: !133, file: !29, line: 213, baseType: !136, size: 64, align: 64)
!136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !137, size: 64, align: 64)
!137 = !DIDerivedType(tag: DW_TAG_typedef, name: "Mesg_Hdr", file: !29, line: 102, baseType: !138)
!138 = !DICompositeType(tag: DW_TAG_structure_type, name: "mesg_hdr", file: !29, line: 71, size: 96, align: 16, elements: !139)
!139 = !{!140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152}
!140 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !138, file: !29, line: 72, baseType: !48, size: 16, align: 16)
!141 = !DIDerivedType(tag: DW_TAG_member, name: "rd", scope: !138, file: !29, line: 86, baseType: !21, size: 1, align: 8, offset: 16)
!142 = !DIDerivedType(tag: DW_TAG_member, name: "tc", scope: !138, file: !29, line: 87, baseType: !21, size: 1, align: 8, offset: 17)
!143 = !DIDerivedType(tag: DW_TAG_member, name: "aa", scope: !138, file: !29, line: 88, baseType: !21, size: 1, align: 8, offset: 18)
!144 = !DIDerivedType(tag: DW_TAG_member, name: "opcode", scope: !138, file: !29, line: 89, baseType: !21, size: 4, align: 8, offset: 19)
!145 = !DIDerivedType(tag: DW_TAG_member, name: "qr", scope: !138, file: !29, line: 90, baseType: !21, size: 1, align: 8, offset: 23)
!146 = !DIDerivedType(tag: DW_TAG_member, name: "rcode", scope: !138, file: !29, line: 92, baseType: !21, size: 4, align: 8, offset: 24)
!147 = !DIDerivedType(tag: DW_TAG_member, name: "zero", scope: !138, file: !29, line: 93, baseType: !21, size: 3, align: 8, offset: 28)
!148 = !DIDerivedType(tag: DW_TAG_member, name: "ra", scope: !138, file: !29, line: 94, baseType: !21, size: 1, align: 8, offset: 31)
!149 = !DIDerivedType(tag: DW_TAG_member, name: "qdcnt", scope: !138, file: !29, line: 98, baseType: !48, size: 16, align: 16, offset: 32)
!150 = !DIDerivedType(tag: DW_TAG_member, name: "ancnt", scope: !138, file: !29, line: 99, baseType: !48, size: 16, align: 16, offset: 48)
!151 = !DIDerivedType(tag: DW_TAG_member, name: "nscnt", scope: !138, file: !29, line: 100, baseType: !48, size: 16, align: 16, offset: 64)
!152 = !DIDerivedType(tag: DW_TAG_member, name: "arcnt", scope: !138, file: !29, line: 101, baseType: !48, size: 16, align: 16, offset: 80)
!153 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !133, file: !29, line: 214, baseType: !20, size: 64, align: 64)
!154 = !DIDerivedType(tag: DW_TAG_member, name: "mesg_len", scope: !81, file: !29, line: 216, baseType: !33, size: 32, align: 32, offset: 2880)
!155 = !DIDerivedType(tag: DW_TAG_member, name: "wp", scope: !81, file: !29, line: 217, baseType: !20, size: 64, align: 64, offset: 2944)
!156 = !DIDerivedType(tag: DW_TAG_member, name: "netifaddr", scope: !81, file: !29, line: 220, baseType: !157, size: 64, align: 64, offset: 3008)
!157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !158, size: 64, align: 64)
!158 = !DIDerivedType(tag: DW_TAG_typedef, name: "Nia", file: !29, line: 65, baseType: !159)
!159 = !DICompositeType(tag: DW_TAG_structure_type, name: "nia", file: !29, line: 61, size: 128, align: 64, elements: !160)
!160 = !{!161, !162, !163}
!161 = !DIDerivedType(tag: DW_TAG_member, name: "sa_p", scope: !159, file: !29, line: 62, baseType: !7, size: 64, align: 64)
!162 = !DIDerivedType(tag: DW_TAG_member, name: "udp_sock", scope: !159, file: !29, line: 63, baseType: !33, size: 32, align: 32, offset: 64)
!163 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_sock", scope: !159, file: !29, line: 64, baseType: !33, size: 32, align: 32, offset: 96)
!164 = !DIDerivedType(tag: DW_TAG_member, name: "retry_count", scope: !81, file: !29, line: 221, baseType: !48, size: 16, align: 16, offset: 3072)
!165 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !81, file: !29, line: 222, baseType: !48, size: 16, align: 16, offset: 3088)
!166 = !DIDerivedType(tag: DW_TAG_member, name: "peer", scope: !81, file: !29, line: 225, baseType: !7, size: 64, align: 64, offset: 3136)
!167 = !DIDerivedType(tag: DW_TAG_member, name: "conn_sock", scope: !81, file: !29, line: 227, baseType: !33, size: 32, align: 32, offset: 3200)
!168 = distinct !DISubprogram(name: "do_forward", scope: !1, file: !1, line: 155, type: !169, isLocal: false, isDefinition: true, scopeLine: 156, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!169 = !DISubroutineType(types: !170)
!170 = !{!33, !84, !20, !48, !48, !33}
!171 = distinct !DISubprogram(name: "request_retry", scope: !1, file: !1, line: 225, type: !172, isLocal: false, isDefinition: true, scopeLine: 225, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!172 = !DISubroutineType(types: !173)
!173 = !{!33, !79}
!174 = distinct !DISubprogram(name: "recursive_process", scope: !1, file: !1, line: 272, type: !172, isLocal: false, isDefinition: true, scopeLine: 272, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!175 = distinct !DISubprogram(name: "request_abort", scope: !1, file: !1, line: 682, type: !77, isLocal: false, isDefinition: true, scopeLine: 682, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!176 = distinct !DISubprogram(name: "request_finish", scope: !1, file: !1, line: 703, type: !172, isLocal: false, isDefinition: true, scopeLine: 703, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!177 = distinct !DISubprogram(name: "cname_without_crecord", scope: !1, file: !1, line: 918, type: !178, isLocal: true, isDefinition: true, scopeLine: 918, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!178 = !DISubroutineType(types: !179)
!179 = !{null, !89, !20}
!180 = !{!181}
!181 = !DIGlobalVariable(name: "buf", scope: !168, file: !1, line: 158, type: !182, isLocal: true, isDefinition: true, variable: [65535 x i8]* @do_forward.buf)
!182 = !DICompositeType(tag: DW_TAG_array_type, baseType: !21, size: 524280, align: 8, elements: !183)
!183 = !{!184}
!184 = !DISubrange(count: 65535)
!185 = distinct !DICompileUnit(language: DW_LANG_C99, file: !186, producer: "clang version 3.8.0-2ubuntu4 (tags/RELEASE_380/final)", isOptimized: false, runtimeVersion: 0, emissionKind: 1, enums: !2, subprograms: !187, globals: !281)
!186 = !DIFile(filename: "response.c", directory: "/home/muhammad/totd/totd")
!187 = !{!188, !278}
!188 = distinct !DISubprogram(name: "response_abort", scope: !186, file: !186, line: 16, type: !189, isLocal: false, isDefinition: true, scopeLine: 16, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!189 = !DISubroutineType(types: !190)
!190 = !{!33, !191, !33}
!191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !192, size: 64, align: 64)
!192 = !DIDerivedType(tag: DW_TAG_typedef, name: "Context", file: !29, line: 228, baseType: !193)
!193 = !DICompositeType(tag: DW_TAG_structure_type, name: "context", file: !29, line: 180, size: 3264, align: 64, elements: !194)
!194 = !{!195, !197, !198, !199, !200, !209, !210, !225, !229, !230, !231, !232, !233, !234, !235, !236, !237, !259, !260, !261, !274, !275, !276, !277}
!195 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !193, file: !29, line: 181, baseType: !196, size: 64, align: 64)
!196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !193, size: 64, align: 64)
!197 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !193, file: !29, line: 182, baseType: !196, size: 64, align: 64, offset: 64)
!198 = !DIDerivedType(tag: DW_TAG_member, name: "work_state", scope: !193, file: !29, line: 185, baseType: !33, size: 32, align: 32, offset: 128)
!199 = !DIDerivedType(tag: DW_TAG_member, name: "cname_links", scope: !193, file: !29, line: 191, baseType: !33, size: 32, align: 32, offset: 160)
!200 = !DIDerivedType(tag: DW_TAG_member, name: "nameservers", scope: !193, file: !29, line: 192, baseType: !201, size: 64, align: 64, offset: 192)
!201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !202, size: 64, align: 64)
!202 = !DIDerivedType(tag: DW_TAG_typedef, name: "G_List", file: !29, line: 22, baseType: !203)
!203 = !DICompositeType(tag: DW_TAG_structure_type, name: "generic_list", file: !29, line: 18, size: 192, align: 64, elements: !204)
!204 = !{!205, !207, !208}
!205 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !203, file: !29, line: 19, baseType: !206, size: 64, align: 64)
!206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !203, size: 64, align: 64)
!207 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !203, file: !29, line: 20, baseType: !206, size: 64, align: 64, offset: 64)
!208 = !DIDerivedType(tag: DW_TAG_member, name: "list_data", scope: !203, file: !29, line: 21, baseType: !26, size: 64, align: 64, offset: 128)
!209 = !DIDerivedType(tag: DW_TAG_member, name: "current_ns", scope: !193, file: !29, line: 193, baseType: !201, size: 64, align: 64, offset: 256)
!210 = !DIDerivedType(tag: DW_TAG_member, name: "tout", scope: !193, file: !29, line: 196, baseType: !211, size: 64, align: 64, offset: 320)
!211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !212, size: 64, align: 64)
!212 = !DICompositeType(tag: DW_TAG_structure_type, name: "ev_to_data", file: !29, line: 244, size: 256, align: 64, elements: !213)
!213 = !{!214, !215, !219, !220}
!214 = !DIDerivedType(tag: DW_TAG_member, name: "at", scope: !212, file: !29, line: 245, baseType: !103, size: 64, align: 64)
!215 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !212, file: !29, line: 246, baseType: !216, size: 64, align: 64, offset: 64)
!216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !217, size: 64, align: 64)
!217 = !DISubroutineType(types: !218)
!218 = !{!33, !211}
!219 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !212, file: !29, line: 247, baseType: !33, size: 32, align: 32, offset: 128)
!220 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !212, file: !29, line: 251, baseType: !221, size: 64, align: 64, offset: 192)
!221 = !DICompositeType(tag: DW_TAG_union_type, scope: !212, file: !29, line: 248, size: 64, align: 64, elements: !222)
!222 = !{!223, !224}
!223 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !221, file: !29, line: 249, baseType: !26, size: 64, align: 64)
!224 = !DIDerivedType(tag: DW_TAG_member, name: "cont", scope: !221, file: !29, line: 250, baseType: !196, size: 64, align: 64)
!225 = !DIDerivedType(tag: DW_TAG_member, name: "process", scope: !193, file: !29, line: 197, baseType: !226, size: 64, align: 64, offset: 384)
!226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !227, size: 64, align: 64)
!227 = !DISubroutineType(types: !228)
!228 = !{!33, !196}
!229 = !DIDerivedType(tag: DW_TAG_member, name: "retry", scope: !193, file: !29, line: 198, baseType: !226, size: 64, align: 64, offset: 448)
!230 = !DIDerivedType(tag: DW_TAG_member, name: "qname", scope: !193, file: !29, line: 201, baseType: !123, size: 2048, align: 8, offset: 512)
!231 = !DIDerivedType(tag: DW_TAG_member, name: "q_id", scope: !193, file: !29, line: 202, baseType: !72, size: 32, align: 32, offset: 2560)
!232 = !DIDerivedType(tag: DW_TAG_member, name: "q_class", scope: !193, file: !29, line: 203, baseType: !48, size: 16, align: 16, offset: 2592)
!233 = !DIDerivedType(tag: DW_TAG_member, name: "q_type", scope: !193, file: !29, line: 204, baseType: !48, size: 16, align: 16, offset: 2608)
!234 = !DIDerivedType(tag: DW_TAG_member, name: "an_list", scope: !193, file: !29, line: 207, baseType: !201, size: 64, align: 64, offset: 2624)
!235 = !DIDerivedType(tag: DW_TAG_member, name: "ns_list", scope: !193, file: !29, line: 208, baseType: !201, size: 64, align: 64, offset: 2688)
!236 = !DIDerivedType(tag: DW_TAG_member, name: "ar_list", scope: !193, file: !29, line: 209, baseType: !201, size: 64, align: 64, offset: 2752)
!237 = !DIDerivedType(tag: DW_TAG_member, name: "mesg", scope: !193, file: !29, line: 215, baseType: !238, size: 64, align: 64, offset: 2816)
!238 = !DICompositeType(tag: DW_TAG_union_type, scope: !193, file: !29, line: 212, size: 64, align: 64, elements: !239)
!239 = !{!240, !258}
!240 = !DIDerivedType(tag: DW_TAG_member, name: "hdr", scope: !238, file: !29, line: 213, baseType: !241, size: 64, align: 64)
!241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !242, size: 64, align: 64)
!242 = !DIDerivedType(tag: DW_TAG_typedef, name: "Mesg_Hdr", file: !29, line: 102, baseType: !243)
!243 = !DICompositeType(tag: DW_TAG_structure_type, name: "mesg_hdr", file: !29, line: 71, size: 96, align: 16, elements: !244)
!244 = !{!245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257}
!245 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !243, file: !29, line: 72, baseType: !48, size: 16, align: 16)
!246 = !DIDerivedType(tag: DW_TAG_member, name: "rd", scope: !243, file: !29, line: 86, baseType: !21, size: 1, align: 8, offset: 16)
!247 = !DIDerivedType(tag: DW_TAG_member, name: "tc", scope: !243, file: !29, line: 87, baseType: !21, size: 1, align: 8, offset: 17)
!248 = !DIDerivedType(tag: DW_TAG_member, name: "aa", scope: !243, file: !29, line: 88, baseType: !21, size: 1, align: 8, offset: 18)
!249 = !DIDerivedType(tag: DW_TAG_member, name: "opcode", scope: !243, file: !29, line: 89, baseType: !21, size: 4, align: 8, offset: 19)
!250 = !DIDerivedType(tag: DW_TAG_member, name: "qr", scope: !243, file: !29, line: 90, baseType: !21, size: 1, align: 8, offset: 23)
!251 = !DIDerivedType(tag: DW_TAG_member, name: "rcode", scope: !243, file: !29, line: 92, baseType: !21, size: 4, align: 8, offset: 24)
!252 = !DIDerivedType(tag: DW_TAG_member, name: "zero", scope: !243, file: !29, line: 93, baseType: !21, size: 3, align: 8, offset: 28)
!253 = !DIDerivedType(tag: DW_TAG_member, name: "ra", scope: !243, file: !29, line: 94, baseType: !21, size: 1, align: 8, offset: 31)
!254 = !DIDerivedType(tag: DW_TAG_member, name: "qdcnt", scope: !243, file: !29, line: 98, baseType: !48, size: 16, align: 16, offset: 32)
!255 = !DIDerivedType(tag: DW_TAG_member, name: "ancnt", scope: !243, file: !29, line: 99, baseType: !48, size: 16, align: 16, offset: 48)
!256 = !DIDerivedType(tag: DW_TAG_member, name: "nscnt", scope: !243, file: !29, line: 100, baseType: !48, size: 16, align: 16, offset: 64)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "arcnt", scope: !243, file: !29, line: 101, baseType: !48, size: 16, align: 16, offset: 80)
!258 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !238, file: !29, line: 214, baseType: !20, size: 64, align: 64)
!259 = !DIDerivedType(tag: DW_TAG_member, name: "mesg_len", scope: !193, file: !29, line: 216, baseType: !33, size: 32, align: 32, offset: 2880)
!260 = !DIDerivedType(tag: DW_TAG_member, name: "wp", scope: !193, file: !29, line: 217, baseType: !20, size: 64, align: 64, offset: 2944)
!261 = !DIDerivedType(tag: DW_TAG_member, name: "netifaddr", scope: !193, file: !29, line: 220, baseType: !262, size: 64, align: 64, offset: 3008)
!262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !263, size: 64, align: 64)
!263 = !DIDerivedType(tag: DW_TAG_typedef, name: "Nia", file: !29, line: 65, baseType: !264)
!264 = !DICompositeType(tag: DW_TAG_structure_type, name: "nia", file: !29, line: 61, size: 128, align: 64, elements: !265)
!265 = !{!266, !272, !273}
!266 = !DIDerivedType(tag: DW_TAG_member, name: "sa_p", scope: !264, file: !29, line: 62, baseType: !267, size: 64, align: 64)
!267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !268, size: 64, align: 64)
!268 = !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr", file: !9, line: 153, size: 128, align: 16, elements: !269)
!269 = !{!270, !271}
!270 = !DIDerivedType(tag: DW_TAG_member, name: "sa_family", scope: !268, file: !9, line: 155, baseType: !12, size: 16, align: 16)
!271 = !DIDerivedType(tag: DW_TAG_member, name: "sa_data", scope: !268, file: !9, line: 156, baseType: !16, size: 112, align: 8, offset: 16)
!272 = !DIDerivedType(tag: DW_TAG_member, name: "udp_sock", scope: !264, file: !29, line: 63, baseType: !33, size: 32, align: 32, offset: 64)
!273 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_sock", scope: !264, file: !29, line: 64, baseType: !33, size: 32, align: 32, offset: 96)
!274 = !DIDerivedType(tag: DW_TAG_member, name: "retry_count", scope: !193, file: !29, line: 221, baseType: !48, size: 16, align: 16, offset: 3072)
!275 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !193, file: !29, line: 222, baseType: !48, size: 16, align: 16, offset: 3088)
!276 = !DIDerivedType(tag: DW_TAG_member, name: "peer", scope: !193, file: !29, line: 225, baseType: !267, size: 64, align: 64, offset: 3136)
!277 = !DIDerivedType(tag: DW_TAG_member, name: "conn_sock", scope: !193, file: !29, line: 227, baseType: !33, size: 32, align: 32, offset: 3200)
!278 = distinct !DISubprogram(name: "assemble_response", scope: !186, file: !186, line: 25, type: !279, isLocal: false, isDefinition: true, scopeLine: 25, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!279 = !DISubroutineType(types: !280)
!280 = !{!33, !191}
!281 = !{!282}
!282 = !DIGlobalVariable(name: "buf", scope: !278, file: !186, line: 27, type: !182, isLocal: true, isDefinition: true, variable: [65535 x i8]* @assemble_response.buf)
!283 = distinct !DICompileUnit(language: DW_LANG_C99, file: !284, producer: "clang version 3.8.0-2ubuntu4 (tags/RELEASE_380/final)", isOptimized: false, runtimeVersion: 0, emissionKind: 1, enums: !285, retainedTypes: !292, subprograms: !293)
!284 = !DIFile(filename: "context.c", directory: "/home/muhammad/totd/totd")
!285 = !{!286}
!286 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !287, line: 52, size: 32, align: 32, elements: !288)
!287 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/socket.h", directory: "/home/muhammad/totd/totd")
!288 = !{!289, !290, !291}
!289 = !DIEnumerator(name: "SHUT_RD", value: 0)
!290 = !DIEnumerator(name: "SHUT_WR", value: 1)
!291 = !DIEnumerator(name: "SHUT_RDWR", value: 2)
!292 = !{!33, !26}
!293 = !{!294, !384, !389, !392}
!294 = distinct !DISubprogram(name: "context_timeout_handler", scope: !284, file: !284, line: 17, type: !295, isLocal: false, isDefinition: true, scopeLine: 17, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!295 = !DISubroutineType(types: !296)
!296 = !{!33, !297}
!297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !298, size: 64, align: 64)
!298 = !DIDerivedType(tag: DW_TAG_typedef, name: "Ev_TO_Data", file: !29, line: 252, baseType: !299)
!299 = !DICompositeType(tag: DW_TAG_structure_type, name: "ev_to_data", file: !29, line: 244, size: 256, align: 64, elements: !300)
!300 = !{!301, !302, !307, !308}
!301 = !DIDerivedType(tag: DW_TAG_member, name: "at", scope: !299, file: !29, line: 245, baseType: !103, size: 64, align: 64)
!302 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !299, file: !29, line: 246, baseType: !303, size: 64, align: 64, offset: 64)
!303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !304, size: 64, align: 64)
!304 = !DISubroutineType(types: !305)
!305 = !{!33, !306}
!306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !299, size: 64, align: 64)
!307 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !299, file: !29, line: 247, baseType: !33, size: 32, align: 32, offset: 128)
!308 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !299, file: !29, line: 251, baseType: !309, size: 64, align: 64, offset: 192)
!309 = !DICompositeType(tag: DW_TAG_union_type, scope: !299, file: !29, line: 248, size: 64, align: 64, elements: !310)
!310 = !{!311, !312}
!311 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !309, file: !29, line: 249, baseType: !26, size: 64, align: 64)
!312 = !DIDerivedType(tag: DW_TAG_member, name: "cont", scope: !309, file: !29, line: 250, baseType: !313, size: 64, align: 64)
!313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !314, size: 64, align: 64)
!314 = !DICompositeType(tag: DW_TAG_structure_type, name: "context", file: !29, line: 180, size: 3264, align: 64, elements: !315)
!315 = !{!316, !317, !318, !319, !320, !329, !330, !331, !335, !336, !337, !338, !339, !340, !341, !342, !343, !365, !366, !367, !380, !381, !382, !383}
!316 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !314, file: !29, line: 181, baseType: !313, size: 64, align: 64)
!317 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !314, file: !29, line: 182, baseType: !313, size: 64, align: 64, offset: 64)
!318 = !DIDerivedType(tag: DW_TAG_member, name: "work_state", scope: !314, file: !29, line: 185, baseType: !33, size: 32, align: 32, offset: 128)
!319 = !DIDerivedType(tag: DW_TAG_member, name: "cname_links", scope: !314, file: !29, line: 191, baseType: !33, size: 32, align: 32, offset: 160)
!320 = !DIDerivedType(tag: DW_TAG_member, name: "nameservers", scope: !314, file: !29, line: 192, baseType: !321, size: 64, align: 64, offset: 192)
!321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !322, size: 64, align: 64)
!322 = !DIDerivedType(tag: DW_TAG_typedef, name: "G_List", file: !29, line: 22, baseType: !323)
!323 = !DICompositeType(tag: DW_TAG_structure_type, name: "generic_list", file: !29, line: 18, size: 192, align: 64, elements: !324)
!324 = !{!325, !327, !328}
!325 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !323, file: !29, line: 19, baseType: !326, size: 64, align: 64)
!326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !323, size: 64, align: 64)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !323, file: !29, line: 20, baseType: !326, size: 64, align: 64, offset: 64)
!328 = !DIDerivedType(tag: DW_TAG_member, name: "list_data", scope: !323, file: !29, line: 21, baseType: !26, size: 64, align: 64, offset: 128)
!329 = !DIDerivedType(tag: DW_TAG_member, name: "current_ns", scope: !314, file: !29, line: 193, baseType: !321, size: 64, align: 64, offset: 256)
!330 = !DIDerivedType(tag: DW_TAG_member, name: "tout", scope: !314, file: !29, line: 196, baseType: !306, size: 64, align: 64, offset: 320)
!331 = !DIDerivedType(tag: DW_TAG_member, name: "process", scope: !314, file: !29, line: 197, baseType: !332, size: 64, align: 64, offset: 384)
!332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !333, size: 64, align: 64)
!333 = !DISubroutineType(types: !334)
!334 = !{!33, !313}
!335 = !DIDerivedType(tag: DW_TAG_member, name: "retry", scope: !314, file: !29, line: 198, baseType: !332, size: 64, align: 64, offset: 448)
!336 = !DIDerivedType(tag: DW_TAG_member, name: "qname", scope: !314, file: !29, line: 201, baseType: !123, size: 2048, align: 8, offset: 512)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "q_id", scope: !314, file: !29, line: 202, baseType: !72, size: 32, align: 32, offset: 2560)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "q_class", scope: !314, file: !29, line: 203, baseType: !48, size: 16, align: 16, offset: 2592)
!339 = !DIDerivedType(tag: DW_TAG_member, name: "q_type", scope: !314, file: !29, line: 204, baseType: !48, size: 16, align: 16, offset: 2608)
!340 = !DIDerivedType(tag: DW_TAG_member, name: "an_list", scope: !314, file: !29, line: 207, baseType: !321, size: 64, align: 64, offset: 2624)
!341 = !DIDerivedType(tag: DW_TAG_member, name: "ns_list", scope: !314, file: !29, line: 208, baseType: !321, size: 64, align: 64, offset: 2688)
!342 = !DIDerivedType(tag: DW_TAG_member, name: "ar_list", scope: !314, file: !29, line: 209, baseType: !321, size: 64, align: 64, offset: 2752)
!343 = !DIDerivedType(tag: DW_TAG_member, name: "mesg", scope: !314, file: !29, line: 215, baseType: !344, size: 64, align: 64, offset: 2816)
!344 = !DICompositeType(tag: DW_TAG_union_type, scope: !314, file: !29, line: 212, size: 64, align: 64, elements: !345)
!345 = !{!346, !364}
!346 = !DIDerivedType(tag: DW_TAG_member, name: "hdr", scope: !344, file: !29, line: 213, baseType: !347, size: 64, align: 64)
!347 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !348, size: 64, align: 64)
!348 = !DIDerivedType(tag: DW_TAG_typedef, name: "Mesg_Hdr", file: !29, line: 102, baseType: !349)
!349 = !DICompositeType(tag: DW_TAG_structure_type, name: "mesg_hdr", file: !29, line: 71, size: 96, align: 16, elements: !350)
!350 = !{!351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363}
!351 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !349, file: !29, line: 72, baseType: !48, size: 16, align: 16)
!352 = !DIDerivedType(tag: DW_TAG_member, name: "rd", scope: !349, file: !29, line: 86, baseType: !21, size: 1, align: 8, offset: 16)
!353 = !DIDerivedType(tag: DW_TAG_member, name: "tc", scope: !349, file: !29, line: 87, baseType: !21, size: 1, align: 8, offset: 17)
!354 = !DIDerivedType(tag: DW_TAG_member, name: "aa", scope: !349, file: !29, line: 88, baseType: !21, size: 1, align: 8, offset: 18)
!355 = !DIDerivedType(tag: DW_TAG_member, name: "opcode", scope: !349, file: !29, line: 89, baseType: !21, size: 4, align: 8, offset: 19)
!356 = !DIDerivedType(tag: DW_TAG_member, name: "qr", scope: !349, file: !29, line: 90, baseType: !21, size: 1, align: 8, offset: 23)
!357 = !DIDerivedType(tag: DW_TAG_member, name: "rcode", scope: !349, file: !29, line: 92, baseType: !21, size: 4, align: 8, offset: 24)
!358 = !DIDerivedType(tag: DW_TAG_member, name: "zero", scope: !349, file: !29, line: 93, baseType: !21, size: 3, align: 8, offset: 28)
!359 = !DIDerivedType(tag: DW_TAG_member, name: "ra", scope: !349, file: !29, line: 94, baseType: !21, size: 1, align: 8, offset: 31)
!360 = !DIDerivedType(tag: DW_TAG_member, name: "qdcnt", scope: !349, file: !29, line: 98, baseType: !48, size: 16, align: 16, offset: 32)
!361 = !DIDerivedType(tag: DW_TAG_member, name: "ancnt", scope: !349, file: !29, line: 99, baseType: !48, size: 16, align: 16, offset: 48)
!362 = !DIDerivedType(tag: DW_TAG_member, name: "nscnt", scope: !349, file: !29, line: 100, baseType: !48, size: 16, align: 16, offset: 64)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "arcnt", scope: !349, file: !29, line: 101, baseType: !48, size: 16, align: 16, offset: 80)
!364 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !344, file: !29, line: 214, baseType: !20, size: 64, align: 64)
!365 = !DIDerivedType(tag: DW_TAG_member, name: "mesg_len", scope: !314, file: !29, line: 216, baseType: !33, size: 32, align: 32, offset: 2880)
!366 = !DIDerivedType(tag: DW_TAG_member, name: "wp", scope: !314, file: !29, line: 217, baseType: !20, size: 64, align: 64, offset: 2944)
!367 = !DIDerivedType(tag: DW_TAG_member, name: "netifaddr", scope: !314, file: !29, line: 220, baseType: !368, size: 64, align: 64, offset: 3008)
!368 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !369, size: 64, align: 64)
!369 = !DIDerivedType(tag: DW_TAG_typedef, name: "Nia", file: !29, line: 65, baseType: !370)
!370 = !DICompositeType(tag: DW_TAG_structure_type, name: "nia", file: !29, line: 61, size: 128, align: 64, elements: !371)
!371 = !{!372, !378, !379}
!372 = !DIDerivedType(tag: DW_TAG_member, name: "sa_p", scope: !370, file: !29, line: 62, baseType: !373, size: 64, align: 64)
!373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !374, size: 64, align: 64)
!374 = !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr", file: !9, line: 153, size: 128, align: 16, elements: !375)
!375 = !{!376, !377}
!376 = !DIDerivedType(tag: DW_TAG_member, name: "sa_family", scope: !374, file: !9, line: 155, baseType: !12, size: 16, align: 16)
!377 = !DIDerivedType(tag: DW_TAG_member, name: "sa_data", scope: !374, file: !9, line: 156, baseType: !16, size: 112, align: 8, offset: 16)
!378 = !DIDerivedType(tag: DW_TAG_member, name: "udp_sock", scope: !370, file: !29, line: 63, baseType: !33, size: 32, align: 32, offset: 64)
!379 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_sock", scope: !370, file: !29, line: 64, baseType: !33, size: 32, align: 32, offset: 96)
!380 = !DIDerivedType(tag: DW_TAG_member, name: "retry_count", scope: !314, file: !29, line: 221, baseType: !48, size: 16, align: 16, offset: 3072)
!381 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !314, file: !29, line: 222, baseType: !48, size: 16, align: 16, offset: 3088)
!382 = !DIDerivedType(tag: DW_TAG_member, name: "peer", scope: !314, file: !29, line: 225, baseType: !373, size: 64, align: 64, offset: 3136)
!383 = !DIDerivedType(tag: DW_TAG_member, name: "conn_sock", scope: !314, file: !29, line: 227, baseType: !33, size: 32, align: 32, offset: 3200)
!384 = distinct !DISubprogram(name: "context_timeout_register", scope: !284, file: !284, line: 27, type: !385, isLocal: false, isDefinition: true, scopeLine: 27, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!385 = !DISubroutineType(types: !386)
!386 = !{!33, !387, !33}
!387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !388, size: 64, align: 64)
!388 = !DIDerivedType(tag: DW_TAG_typedef, name: "Context", file: !29, line: 228, baseType: !314)
!389 = distinct !DISubprogram(name: "context_create", scope: !284, file: !284, line: 60, type: !390, isLocal: false, isDefinition: true, scopeLine: 60, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!390 = !DISubroutineType(types: !391)
!391 = !{!387}
!392 = distinct !DISubprogram(name: "context_destroy", scope: !284, file: !284, line: 89, type: !393, isLocal: false, isDefinition: true, scopeLine: 89, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!393 = !DISubroutineType(types: !394)
!394 = !{!26, !387}
!395 = distinct !DICompileUnit(language: DW_LANG_C99, file: !396, producer: "clang version 3.8.0-2ubuntu4 (tags/RELEASE_380/final)", isOptimized: false, runtimeVersion: 0, emissionKind: 1, enums: !2, retainedTypes: !397, subprograms: !469, globals: !529)
!396 = !DIFile(filename: "ne_mesg.c", directory: "/home/muhammad/totd/totd")
!397 = !{!398, !399, !20, !35, !4, !416, !448, !65, !33, !48, !19, !454, !26}
!398 = !DIBasicType(name: "double", size: 64, align: 64, encoding: DW_ATE_float)
!399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !400, size: 64, align: 64)
!400 = !DIDerivedType(tag: DW_TAG_typedef, name: "Mesg_Hdr", file: !29, line: 102, baseType: !401)
!401 = !DICompositeType(tag: DW_TAG_structure_type, name: "mesg_hdr", file: !29, line: 71, size: 96, align: 16, elements: !402)
!402 = !{!403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415}
!403 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !401, file: !29, line: 72, baseType: !48, size: 16, align: 16)
!404 = !DIDerivedType(tag: DW_TAG_member, name: "rd", scope: !401, file: !29, line: 86, baseType: !21, size: 1, align: 8, offset: 16)
!405 = !DIDerivedType(tag: DW_TAG_member, name: "tc", scope: !401, file: !29, line: 87, baseType: !21, size: 1, align: 8, offset: 17)
!406 = !DIDerivedType(tag: DW_TAG_member, name: "aa", scope: !401, file: !29, line: 88, baseType: !21, size: 1, align: 8, offset: 18)
!407 = !DIDerivedType(tag: DW_TAG_member, name: "opcode", scope: !401, file: !29, line: 89, baseType: !21, size: 4, align: 8, offset: 19)
!408 = !DIDerivedType(tag: DW_TAG_member, name: "qr", scope: !401, file: !29, line: 90, baseType: !21, size: 1, align: 8, offset: 23)
!409 = !DIDerivedType(tag: DW_TAG_member, name: "rcode", scope: !401, file: !29, line: 92, baseType: !21, size: 4, align: 8, offset: 24)
!410 = !DIDerivedType(tag: DW_TAG_member, name: "zero", scope: !401, file: !29, line: 93, baseType: !21, size: 3, align: 8, offset: 28)
!411 = !DIDerivedType(tag: DW_TAG_member, name: "ra", scope: !401, file: !29, line: 94, baseType: !21, size: 1, align: 8, offset: 31)
!412 = !DIDerivedType(tag: DW_TAG_member, name: "qdcnt", scope: !401, file: !29, line: 98, baseType: !48, size: 16, align: 16, offset: 32)
!413 = !DIDerivedType(tag: DW_TAG_member, name: "ancnt", scope: !401, file: !29, line: 99, baseType: !48, size: 16, align: 16, offset: 48)
!414 = !DIDerivedType(tag: DW_TAG_member, name: "nscnt", scope: !401, file: !29, line: 100, baseType: !48, size: 16, align: 16, offset: 64)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "arcnt", scope: !401, file: !29, line: 101, baseType: !48, size: 16, align: 16, offset: 80)
!416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !417, size: 64, align: 64)
!417 = !DIDerivedType(tag: DW_TAG_typedef, name: "RRset", file: !29, line: 168, baseType: !418)
!418 = !DICompositeType(tag: DW_TAG_structure_type, name: "rr_set", file: !29, line: 160, size: 320, align: 64, elements: !419)
!419 = !{!420, !421, !422, !435, !436}
!420 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !418, file: !29, line: 161, baseType: !33, size: 32, align: 32)
!421 = !DIDerivedType(tag: DW_TAG_member, name: "key_len", scope: !418, file: !29, line: 163, baseType: !35, size: 64, align: 64, offset: 64)
!422 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !418, file: !29, line: 164, baseType: !423, size: 64, align: 64, offset: 128)
!423 = !DIDerivedType(tag: DW_TAG_typedef, name: "U_Key", file: !29, line: 143, baseType: !424)
!424 = !DICompositeType(tag: DW_TAG_union_type, name: "u_key", file: !29, line: 140, size: 64, align: 64, elements: !425)
!425 = !{!426, !434}
!426 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !424, file: !29, line: 141, baseType: !427, size: 64, align: 64)
!427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !428, size: 64, align: 64)
!428 = !DIDerivedType(tag: DW_TAG_typedef, name: "Key_Info", file: !29, line: 138, baseType: !429)
!429 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_info", file: !29, line: 134, size: 48, align: 16, elements: !430)
!430 = !{!431, !432, !433}
!431 = !DIDerivedType(tag: DW_TAG_member, name: "r_type", scope: !429, file: !29, line: 135, baseType: !48, size: 16, align: 16)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "r_class", scope: !429, file: !29, line: 136, baseType: !48, size: 16, align: 16, offset: 16)
!433 = !DIDerivedType(tag: DW_TAG_member, name: "owner_len", scope: !429, file: !29, line: 137, baseType: !48, size: 16, align: 16, offset: 32)
!434 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !424, file: !29, line: 142, baseType: !20, size: 64, align: 64)
!435 = !DIDerivedType(tag: DW_TAG_member, name: "data_len", scope: !418, file: !29, line: 166, baseType: !35, size: 64, align: 64, offset: 192)
!436 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !418, file: !29, line: 167, baseType: !437, size: 64, align: 64, offset: 256)
!437 = !DIDerivedType(tag: DW_TAG_typedef, name: "U_Data", file: !29, line: 157, baseType: !438)
!438 = !DICompositeType(tag: DW_TAG_union_type, name: "u_data", file: !29, line: 153, size: 64, align: 64, elements: !439)
!439 = !{!440, !446, !447}
!440 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !438, file: !29, line: 154, baseType: !441, size: 64, align: 64)
!441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !442, size: 64, align: 64)
!442 = !DIDerivedType(tag: DW_TAG_typedef, name: "Data_Data", file: !29, line: 151, baseType: !443)
!443 = !DICompositeType(tag: DW_TAG_structure_type, name: "data_data", file: !29, line: 149, size: 16, align: 16, elements: !444)
!444 = !{!445}
!445 = !DIDerivedType(tag: DW_TAG_member, name: "data_cnt", scope: !443, file: !29, line: 150, baseType: !48, size: 16, align: 16)
!446 = !DIDerivedType(tag: DW_TAG_member, name: "rt_list", scope: !438, file: !29, line: 155, baseType: !65, size: 64, align: 64)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !438, file: !29, line: 156, baseType: !20, size: 64, align: 64)
!448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !449, size: 64, align: 64)
!449 = !DIDerivedType(tag: DW_TAG_typedef, name: "RR", file: !29, line: 120, baseType: !450)
!450 = !DICompositeType(tag: DW_TAG_structure_type, name: "rr", file: !29, line: 117, size: 64, align: 32, elements: !451)
!451 = !{!452, !453}
!452 = !DIDerivedType(tag: DW_TAG_member, name: "ttl", scope: !450, file: !29, line: 118, baseType: !72, size: 32, align: 32)
!453 = !DIDerivedType(tag: DW_TAG_member, name: "rd_len", scope: !450, file: !29, line: 119, baseType: !48, size: 16, align: 16, offset: 32)
!454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !455, size: 64, align: 64)
!455 = !DIDerivedType(tag: DW_TAG_typedef, name: "RRset_Couple", file: !29, line: 174, baseType: !456)
!456 = !DICompositeType(tag: DW_TAG_structure_type, file: !29, line: 171, size: 128, align: 64, elements: !457)
!457 = !{!458, !459}
!458 = !DIDerivedType(tag: DW_TAG_member, name: "rrs", scope: !456, file: !29, line: 172, baseType: !416, size: 64, align: 64)
!459 = !DIDerivedType(tag: DW_TAG_member, name: "rrl", scope: !456, file: !29, line: 173, baseType: !460, size: 64, align: 64, offset: 64)
!460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !461, size: 64, align: 64)
!461 = !DIDerivedType(tag: DW_TAG_typedef, name: "RR_List", file: !29, line: 128, baseType: !462)
!462 = !DICompositeType(tag: DW_TAG_structure_type, name: "rr_list", file: !29, line: 123, size: 192, align: 64, elements: !463)
!463 = !{!464, !466, !467, !468}
!464 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !462, file: !29, line: 124, baseType: !465, size: 64, align: 64)
!465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !462, size: 64, align: 64)
!466 = !DIDerivedType(tag: DW_TAG_member, name: "cnt", scope: !462, file: !29, line: 125, baseType: !33, size: 32, align: 32, offset: 64)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !462, file: !29, line: 126, baseType: !33, size: 32, align: 32, offset: 96)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "rrp", scope: !462, file: !29, line: 127, baseType: !448, size: 64, align: 64, offset: 128)
!469 = !{!470, !473, !476, !479, !484, !487, !490, !502, !505, !508, !511, !515, !518, !519, !522, !523, !526}
!470 = distinct !DISubprogram(name: "make_random_permutation", scope: !396, file: !396, line: 36, type: !471, isLocal: false, isDefinition: true, scopeLine: 36, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!471 = !DISubroutineType(types: !472)
!472 = !{null, !33}
!473 = distinct !DISubprogram(name: "mesg_id", scope: !396, file: !396, line: 51, type: !474, isLocal: false, isDefinition: true, scopeLine: 51, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!474 = !DISubroutineType(types: !475)
!475 = !{!48}
!476 = distinct !DISubprogram(name: "mesg_make_query", scope: !396, file: !396, line: 79, type: !477, isLocal: false, isDefinition: true, scopeLine: 80, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!477 = !DISubroutineType(types: !478)
!478 = !{!33, !20, !48, !48, !72, !33, !20, !33}
!479 = distinct !DISubprogram(name: "labellen", scope: !396, file: !396, line: 130, type: !480, isLocal: false, isDefinition: true, scopeLine: 130, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!480 = !DISubroutineType(types: !481)
!481 = !{!33, !482}
!482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !483, size: 64, align: 64)
!483 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !21)
!484 = distinct !DISubprogram(name: "mesg_skip_dname", scope: !396, file: !396, line: 151, type: !485, isLocal: false, isDefinition: true, scopeLine: 151, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!485 = !DISubroutineType(types: !486)
!486 = !{!20, !20, !20}
!487 = distinct !DISubprogram(name: "mesg_dname_cmp", scope: !396, file: !396, line: 177, type: !488, isLocal: false, isDefinition: true, scopeLine: 177, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!488 = !DISubroutineType(types: !489)
!489 = !{!33, !20, !20, !20}
!490 = distinct !DISubprogram(name: "mesg_write_rrset_list", scope: !396, file: !396, line: 209, type: !491, isLocal: false, isDefinition: true, scopeLine: 211, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!491 = !DISubroutineType(types: !492)
!492 = !{!33, !493, !20, !20, !65, !33, !501, !65}
!493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !494, size: 64, align: 64)
!494 = !DIDerivedType(tag: DW_TAG_typedef, name: "G_List", file: !29, line: 22, baseType: !495)
!495 = !DICompositeType(tag: DW_TAG_structure_type, name: "generic_list", file: !29, line: 18, size: 192, align: 64, elements: !496)
!496 = !{!497, !499, !500}
!497 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !495, file: !29, line: 19, baseType: !498, size: 64, align: 64)
!498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !495, size: 64, align: 64)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !495, file: !29, line: 20, baseType: !498, size: 64, align: 64, offset: 64)
!500 = !DIDerivedType(tag: DW_TAG_member, name: "list_data", scope: !495, file: !29, line: 21, baseType: !26, size: 64, align: 64, offset: 128)
!501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !20, size: 64, align: 64)
!502 = distinct !DISubprogram(name: "mesg_assemble", scope: !396, file: !396, line: 285, type: !503, isLocal: false, isDefinition: true, scopeLine: 286, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!503 = !DISubroutineType(types: !504)
!504 = !{!33, !493, !493, !493, !20, !48, !20, !33}
!505 = distinct !DISubprogram(name: "mesg_extract_rr", scope: !396, file: !396, line: 380, type: !506, isLocal: false, isDefinition: true, scopeLine: 381, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!506 = !DISubroutineType(types: !507)
!507 = !{!33, !20, !20, !48, !48, !20, !20, !33}
!508 = distinct !DISubprogram(name: "mesg_parse", scope: !396, file: !396, line: 470, type: !509, isLocal: false, isDefinition: true, scopeLine: 471, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!509 = !DISubroutineType(types: !510)
!510 = !{!33, !20, !33, !493, !493, !493}
!511 = distinct !DISubprogram(name: "dname_decompress", scope: !396, file: !396, line: 508, type: !512, isLocal: false, isDefinition: true, scopeLine: 509, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!512 = !DISubroutineType(types: !513)
!513 = !{!20, !20, !33, !20, !20, !20, !514}
!514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !33, size: 64, align: 64)
!515 = distinct !DISubprogram(name: "string_rclass", scope: !396, file: !396, line: 605, type: !516, isLocal: false, isDefinition: true, scopeLine: 605, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!516 = !DISubroutineType(types: !517)
!517 = !{!19, !48}
!518 = distinct !DISubprogram(name: "string_rtype", scope: !396, file: !396, line: 619, type: !516, isLocal: false, isDefinition: true, scopeLine: 619, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!519 = distinct !DISubprogram(name: "dname_copy", scope: !396, file: !396, line: 679, type: !520, isLocal: true, isDefinition: true, scopeLine: 679, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!520 = !DISubroutineType(types: !521)
!521 = !{!33, !20, !20, !33}
!522 = distinct !DISubprogram(name: "dname_redirect", scope: !396, file: !396, line: 702, type: !485, isLocal: true, isDefinition: true, scopeLine: 702, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!523 = distinct !DISubprogram(name: "write_dname", scope: !396, file: !396, line: 713, type: !524, isLocal: true, isDefinition: true, scopeLine: 714, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!524 = !DISubroutineType(types: !525)
!525 = !{!33, !20, !20, !65, !33, !20, !20}
!526 = distinct !DISubprogram(name: "mesg_read_sec", scope: !396, file: !396, line: 864, type: !527, isLocal: true, isDefinition: true, scopeLine: 865, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!527 = !DISubroutineType(types: !528)
!528 = !{!20, !493, !20, !33, !20, !33}
!529 = !{!530, !531, !532}
!530 = !DIGlobalVariable(name: "range", scope: !473, file: !396, line: 52, type: !33, isLocal: true, isDefinition: true, variable: i32* @mesg_id.range)
!531 = !DIGlobalVariable(name: "index", scope: !473, file: !396, line: 53, type: !33, isLocal: true, isDefinition: true, variable: i32* @mesg_id.index)
!532 = !DIGlobalVariable(name: "permutation", scope: !395, file: !396, line: 32, type: !533, isLocal: true, isDefinition: true, variable: [32768 x i16]* @permutation)
!533 = !DICompositeType(tag: DW_TAG_array_type, baseType: !48, size: 524288, align: 16, elements: !534)
!534 = !{!535}
!535 = !DISubrange(count: 32768)
!536 = distinct !DICompileUnit(language: DW_LANG_C99, file: !537, producer: "clang version 3.8.0-2ubuntu4 (tags/RELEASE_380/final)", isOptimized: false, runtimeVersion: 0, emissionKind: 1, enums: !538, retainedTypes: !554, subprograms: !587)
!537 = !DIFile(filename: "conv_trick.c", directory: "/home/muhammad/totd/totd")
!538 = !{!539}
!539 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !540, line: 46, size: 32, align: 32, elements: !541)
!540 = !DIFile(filename: "/usr/include/ctype.h", directory: "/home/muhammad/totd/totd")
!541 = !{!542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553}
!542 = !DIEnumerator(name: "_ISupper", value: 256)
!543 = !DIEnumerator(name: "_ISlower", value: 512)
!544 = !DIEnumerator(name: "_ISalpha", value: 1024)
!545 = !DIEnumerator(name: "_ISdigit", value: 2048)
!546 = !DIEnumerator(name: "_ISxdigit", value: 4096)
!547 = !DIEnumerator(name: "_ISspace", value: 8192)
!548 = !DIEnumerator(name: "_ISprint", value: 16384)
!549 = !DIEnumerator(name: "_ISgraph", value: 32768)
!550 = !DIEnumerator(name: "_ISblank", value: 1)
!551 = !DIEnumerator(name: "_IScntrl", value: 2)
!552 = !DIEnumerator(name: "_ISpunct", value: 4)
!553 = !DIEnumerator(name: "_ISalnum", value: 8)
!554 = !{!26, !555, !19, !20, !4, !33, !14}
!555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !556, size: 64, align: 64)
!556 = !DIDerivedType(tag: DW_TAG_typedef, name: "RRset", file: !29, line: 168, baseType: !557)
!557 = !DICompositeType(tag: DW_TAG_structure_type, name: "rr_set", file: !29, line: 160, size: 320, align: 64, elements: !558)
!558 = !{!559, !560, !561, !574, !575}
!559 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !557, file: !29, line: 161, baseType: !33, size: 32, align: 32)
!560 = !DIDerivedType(tag: DW_TAG_member, name: "key_len", scope: !557, file: !29, line: 163, baseType: !35, size: 64, align: 64, offset: 64)
!561 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !557, file: !29, line: 164, baseType: !562, size: 64, align: 64, offset: 128)
!562 = !DIDerivedType(tag: DW_TAG_typedef, name: "U_Key", file: !29, line: 143, baseType: !563)
!563 = !DICompositeType(tag: DW_TAG_union_type, name: "u_key", file: !29, line: 140, size: 64, align: 64, elements: !564)
!564 = !{!565, !573}
!565 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !563, file: !29, line: 141, baseType: !566, size: 64, align: 64)
!566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !567, size: 64, align: 64)
!567 = !DIDerivedType(tag: DW_TAG_typedef, name: "Key_Info", file: !29, line: 138, baseType: !568)
!568 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_info", file: !29, line: 134, size: 48, align: 16, elements: !569)
!569 = !{!570, !571, !572}
!570 = !DIDerivedType(tag: DW_TAG_member, name: "r_type", scope: !568, file: !29, line: 135, baseType: !48, size: 16, align: 16)
!571 = !DIDerivedType(tag: DW_TAG_member, name: "r_class", scope: !568, file: !29, line: 136, baseType: !48, size: 16, align: 16, offset: 16)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "owner_len", scope: !568, file: !29, line: 137, baseType: !48, size: 16, align: 16, offset: 32)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !563, file: !29, line: 142, baseType: !20, size: 64, align: 64)
!574 = !DIDerivedType(tag: DW_TAG_member, name: "data_len", scope: !557, file: !29, line: 166, baseType: !35, size: 64, align: 64, offset: 192)
!575 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !557, file: !29, line: 167, baseType: !576, size: 64, align: 64, offset: 256)
!576 = !DIDerivedType(tag: DW_TAG_typedef, name: "U_Data", file: !29, line: 157, baseType: !577)
!577 = !DICompositeType(tag: DW_TAG_union_type, name: "u_data", file: !29, line: 153, size: 64, align: 64, elements: !578)
!578 = !{!579, !585, !586}
!579 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !577, file: !29, line: 154, baseType: !580, size: 64, align: 64)
!580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !581, size: 64, align: 64)
!581 = !DIDerivedType(tag: DW_TAG_typedef, name: "Data_Data", file: !29, line: 151, baseType: !582)
!582 = !DICompositeType(tag: DW_TAG_structure_type, name: "data_data", file: !29, line: 149, size: 16, align: 16, elements: !583)
!583 = !{!584}
!584 = !DIDerivedType(tag: DW_TAG_member, name: "data_cnt", scope: !582, file: !29, line: 150, baseType: !48, size: 16, align: 16)
!585 = !DIDerivedType(tag: DW_TAG_member, name: "rt_list", scope: !577, file: !29, line: 155, baseType: !65, size: 64, align: 64)
!586 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !577, file: !29, line: 156, baseType: !20, size: 64, align: 64)
!587 = !{!588, !599, !602, !603, !606, !607, !610, !633, !636, !639}
!588 = distinct !DISubprogram(name: "conv_trick_list", scope: !537, file: !537, line: 90, type: !589, isLocal: false, isDefinition: true, scopeLine: 90, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!589 = !DISubroutineType(types: !590)
!590 = !{null, !591, !33, !33}
!591 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !592, size: 64, align: 64)
!592 = !DIDerivedType(tag: DW_TAG_typedef, name: "G_List", file: !29, line: 22, baseType: !593)
!593 = !DICompositeType(tag: DW_TAG_structure_type, name: "generic_list", file: !29, line: 18, size: 192, align: 64, elements: !594)
!594 = !{!595, !597, !598}
!595 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !593, file: !29, line: 19, baseType: !596, size: 64, align: 64)
!596 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !593, size: 64, align: 64)
!597 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !593, file: !29, line: 20, baseType: !596, size: 64, align: 64, offset: 64)
!598 = !DIDerivedType(tag: DW_TAG_member, name: "list_data", scope: !593, file: !29, line: 21, baseType: !26, size: 64, align: 64, offset: 128)
!599 = distinct !DISubprogram(name: "conv_trick_ptr", scope: !537, file: !537, line: 150, type: !600, isLocal: false, isDefinition: true, scopeLine: 150, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!600 = !DISubroutineType(types: !601)
!601 = !{null, !591, !20}
!602 = distinct !DISubprogram(name: "conv_trick_newptr", scope: !537, file: !537, line: 182, type: !600, isLocal: false, isDefinition: true, scopeLine: 182, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!603 = distinct !DISubprogram(name: "conv_trick_conf", scope: !537, file: !537, line: 218, type: !604, isLocal: false, isDefinition: true, scopeLine: 218, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!604 = !DISubroutineType(types: !605)
!605 = !{!33, !20}
!606 = distinct !DISubprogram(name: "conv_trick_is_tot_ptr", scope: !537, file: !537, line: 242, type: !604, isLocal: false, isDefinition: true, scopeLine: 242, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!607 = distinct !DISubprogram(name: "conv_trick_ptr_rq", scope: !537, file: !537, line: 289, type: !608, isLocal: false, isDefinition: true, scopeLine: 289, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!608 = !DISubroutineType(types: !609)
!609 = !{null, !20}
!610 = distinct !DISubprogram(name: "conv_trick_is_tot_newptr", scope: !537, file: !537, line: 325, type: !611, isLocal: false, isDefinition: true, scopeLine: 325, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!611 = !DISubroutineType(types: !612)
!612 = !{!33, !20, !613}
!613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !614, size: 64, align: 64)
!614 = !DICompositeType(tag: DW_TAG_structure_type, name: "in6_addr", file: !615, line: 211, size: 128, align: 32, elements: !616)
!615 = !DIFile(filename: "/usr/include/netinet/in.h", directory: "/home/muhammad/totd/totd")
!616 = !{!617}
!617 = !DIDerivedType(tag: DW_TAG_member, name: "__in6_u", scope: !614, file: !615, line: 220, baseType: !618, size: 128, align: 32)
!618 = !DICompositeType(tag: DW_TAG_union_type, scope: !614, file: !615, line: 213, size: 128, align: 32, elements: !619)
!619 = !{!620, !625, !629}
!620 = !DIDerivedType(tag: DW_TAG_member, name: "__u6_addr8", scope: !618, file: !615, line: 215, baseType: !621, size: 128, align: 8)
!621 = !DICompositeType(tag: DW_TAG_array_type, baseType: !622, size: 128, align: 8, elements: !623)
!622 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !49, line: 48, baseType: !25)
!623 = !{!624}
!624 = !DISubrange(count: 16)
!625 = !DIDerivedType(tag: DW_TAG_member, name: "__u6_addr16", scope: !618, file: !615, line: 217, baseType: !626, size: 128, align: 16)
!626 = !DICompositeType(tag: DW_TAG_array_type, baseType: !48, size: 128, align: 16, elements: !627)
!627 = !{!628}
!628 = !DISubrange(count: 8)
!629 = !DIDerivedType(tag: DW_TAG_member, name: "__u6_addr32", scope: !618, file: !615, line: 218, baseType: !630, size: 128, align: 32)
!630 = !DICompositeType(tag: DW_TAG_array_type, baseType: !72, size: 128, align: 32, elements: !631)
!631 = !{!632}
!632 = !DISubrange(count: 4)
!633 = distinct !DISubprogram(name: "conv_trick_newptr_rq", scope: !537, file: !537, line: 372, type: !634, isLocal: false, isDefinition: true, scopeLine: 372, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!634 = !DISubroutineType(types: !635)
!635 = !{null, !20, !613}
!636 = distinct !DISubprogram(name: "search_name", scope: !537, file: !537, line: 396, type: !637, isLocal: false, isDefinition: true, scopeLine: 396, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!637 = !DISubroutineType(types: !638)
!638 = !{!555, !591, !19, !33, !33}
!639 = distinct !DISubprogram(name: "conv_trick_rrset", scope: !537, file: !537, line: 18, type: !640, isLocal: true, isDefinition: true, scopeLine: 18, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!640 = !DISubroutineType(types: !641)
!641 = !{!555, !555, !48, !33}
!642 = distinct !DICompileUnit(language: DW_LANG_C99, file: !643, producer: "clang version 3.8.0-2ubuntu4 (tags/RELEASE_380/final)", isOptimized: false, runtimeVersion: 0, emissionKind: 1, enums: !2, retainedTypes: !644, subprograms: !740, globals: !786)
!643 = !DIFile(filename: "ev_tcp.c", directory: "/home/muhammad/totd/totd")
!644 = !{!645, !26, !650, !738, !33}
!645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !646, size: 64, align: 64)
!646 = !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr", file: !9, line: 153, size: 128, align: 16, elements: !647)
!647 = !{!648, !649}
!648 = !DIDerivedType(tag: DW_TAG_member, name: "sa_family", scope: !646, file: !9, line: 155, baseType: !12, size: 16, align: 16)
!649 = !DIDerivedType(tag: DW_TAG_member, name: "sa_data", scope: !646, file: !9, line: 156, baseType: !16, size: 112, align: 8, offset: 16)
!650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !651, size: 64, align: 64)
!651 = !DIDerivedType(tag: DW_TAG_typedef, name: "Ev_TCP_Common_Data", file: !29, line: 241, baseType: !652)
!652 = !DICompositeType(tag: DW_TAG_structure_type, name: "ev_tcp_common_data", file: !29, line: 238, size: 128, align: 64, elements: !653)
!653 = !{!654, !655}
!654 = !DIDerivedType(tag: DW_TAG_member, name: "sock", scope: !652, file: !29, line: 239, baseType: !33, size: 32, align: 32)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "cptr", scope: !652, file: !29, line: 240, baseType: !656, size: 64, align: 64, offset: 64)
!656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !657, size: 64, align: 64)
!657 = !DIDerivedType(tag: DW_TAG_typedef, name: "Context", file: !29, line: 228, baseType: !658)
!658 = !DICompositeType(tag: DW_TAG_structure_type, name: "context", file: !29, line: 180, size: 3264, align: 64, elements: !659)
!659 = !{!660, !662, !663, !664, !665, !674, !675, !690, !694, !695, !696, !697, !698, !699, !700, !701, !702, !724, !725, !726, !734, !735, !736, !737}
!660 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !658, file: !29, line: 181, baseType: !661, size: 64, align: 64)
!661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !658, size: 64, align: 64)
!662 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !658, file: !29, line: 182, baseType: !661, size: 64, align: 64, offset: 64)
!663 = !DIDerivedType(tag: DW_TAG_member, name: "work_state", scope: !658, file: !29, line: 185, baseType: !33, size: 32, align: 32, offset: 128)
!664 = !DIDerivedType(tag: DW_TAG_member, name: "cname_links", scope: !658, file: !29, line: 191, baseType: !33, size: 32, align: 32, offset: 160)
!665 = !DIDerivedType(tag: DW_TAG_member, name: "nameservers", scope: !658, file: !29, line: 192, baseType: !666, size: 64, align: 64, offset: 192)
!666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !667, size: 64, align: 64)
!667 = !DIDerivedType(tag: DW_TAG_typedef, name: "G_List", file: !29, line: 22, baseType: !668)
!668 = !DICompositeType(tag: DW_TAG_structure_type, name: "generic_list", file: !29, line: 18, size: 192, align: 64, elements: !669)
!669 = !{!670, !672, !673}
!670 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !668, file: !29, line: 19, baseType: !671, size: 64, align: 64)
!671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !668, size: 64, align: 64)
!672 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !668, file: !29, line: 20, baseType: !671, size: 64, align: 64, offset: 64)
!673 = !DIDerivedType(tag: DW_TAG_member, name: "list_data", scope: !668, file: !29, line: 21, baseType: !26, size: 64, align: 64, offset: 128)
!674 = !DIDerivedType(tag: DW_TAG_member, name: "current_ns", scope: !658, file: !29, line: 193, baseType: !666, size: 64, align: 64, offset: 256)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "tout", scope: !658, file: !29, line: 196, baseType: !676, size: 64, align: 64, offset: 320)
!676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !677, size: 64, align: 64)
!677 = !DICompositeType(tag: DW_TAG_structure_type, name: "ev_to_data", file: !29, line: 244, size: 256, align: 64, elements: !678)
!678 = !{!679, !680, !684, !685}
!679 = !DIDerivedType(tag: DW_TAG_member, name: "at", scope: !677, file: !29, line: 245, baseType: !103, size: 64, align: 64)
!680 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !677, file: !29, line: 246, baseType: !681, size: 64, align: 64, offset: 64)
!681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !682, size: 64, align: 64)
!682 = !DISubroutineType(types: !683)
!683 = !{!33, !676}
!684 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !677, file: !29, line: 247, baseType: !33, size: 32, align: 32, offset: 128)
!685 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !677, file: !29, line: 251, baseType: !686, size: 64, align: 64, offset: 192)
!686 = !DICompositeType(tag: DW_TAG_union_type, scope: !677, file: !29, line: 248, size: 64, align: 64, elements: !687)
!687 = !{!688, !689}
!688 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !686, file: !29, line: 249, baseType: !26, size: 64, align: 64)
!689 = !DIDerivedType(tag: DW_TAG_member, name: "cont", scope: !686, file: !29, line: 250, baseType: !661, size: 64, align: 64)
!690 = !DIDerivedType(tag: DW_TAG_member, name: "process", scope: !658, file: !29, line: 197, baseType: !691, size: 64, align: 64, offset: 384)
!691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !692, size: 64, align: 64)
!692 = !DISubroutineType(types: !693)
!693 = !{!33, !661}
!694 = !DIDerivedType(tag: DW_TAG_member, name: "retry", scope: !658, file: !29, line: 198, baseType: !691, size: 64, align: 64, offset: 448)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "qname", scope: !658, file: !29, line: 201, baseType: !123, size: 2048, align: 8, offset: 512)
!696 = !DIDerivedType(tag: DW_TAG_member, name: "q_id", scope: !658, file: !29, line: 202, baseType: !72, size: 32, align: 32, offset: 2560)
!697 = !DIDerivedType(tag: DW_TAG_member, name: "q_class", scope: !658, file: !29, line: 203, baseType: !48, size: 16, align: 16, offset: 2592)
!698 = !DIDerivedType(tag: DW_TAG_member, name: "q_type", scope: !658, file: !29, line: 204, baseType: !48, size: 16, align: 16, offset: 2608)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "an_list", scope: !658, file: !29, line: 207, baseType: !666, size: 64, align: 64, offset: 2624)
!700 = !DIDerivedType(tag: DW_TAG_member, name: "ns_list", scope: !658, file: !29, line: 208, baseType: !666, size: 64, align: 64, offset: 2688)
!701 = !DIDerivedType(tag: DW_TAG_member, name: "ar_list", scope: !658, file: !29, line: 209, baseType: !666, size: 64, align: 64, offset: 2752)
!702 = !DIDerivedType(tag: DW_TAG_member, name: "mesg", scope: !658, file: !29, line: 215, baseType: !703, size: 64, align: 64, offset: 2816)
!703 = !DICompositeType(tag: DW_TAG_union_type, scope: !658, file: !29, line: 212, size: 64, align: 64, elements: !704)
!704 = !{!705, !723}
!705 = !DIDerivedType(tag: DW_TAG_member, name: "hdr", scope: !703, file: !29, line: 213, baseType: !706, size: 64, align: 64)
!706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !707, size: 64, align: 64)
!707 = !DIDerivedType(tag: DW_TAG_typedef, name: "Mesg_Hdr", file: !29, line: 102, baseType: !708)
!708 = !DICompositeType(tag: DW_TAG_structure_type, name: "mesg_hdr", file: !29, line: 71, size: 96, align: 16, elements: !709)
!709 = !{!710, !711, !712, !713, !714, !715, !716, !717, !718, !719, !720, !721, !722}
!710 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !708, file: !29, line: 72, baseType: !48, size: 16, align: 16)
!711 = !DIDerivedType(tag: DW_TAG_member, name: "rd", scope: !708, file: !29, line: 86, baseType: !21, size: 1, align: 8, offset: 16)
!712 = !DIDerivedType(tag: DW_TAG_member, name: "tc", scope: !708, file: !29, line: 87, baseType: !21, size: 1, align: 8, offset: 17)
!713 = !DIDerivedType(tag: DW_TAG_member, name: "aa", scope: !708, file: !29, line: 88, baseType: !21, size: 1, align: 8, offset: 18)
!714 = !DIDerivedType(tag: DW_TAG_member, name: "opcode", scope: !708, file: !29, line: 89, baseType: !21, size: 4, align: 8, offset: 19)
!715 = !DIDerivedType(tag: DW_TAG_member, name: "qr", scope: !708, file: !29, line: 90, baseType: !21, size: 1, align: 8, offset: 23)
!716 = !DIDerivedType(tag: DW_TAG_member, name: "rcode", scope: !708, file: !29, line: 92, baseType: !21, size: 4, align: 8, offset: 24)
!717 = !DIDerivedType(tag: DW_TAG_member, name: "zero", scope: !708, file: !29, line: 93, baseType: !21, size: 3, align: 8, offset: 28)
!718 = !DIDerivedType(tag: DW_TAG_member, name: "ra", scope: !708, file: !29, line: 94, baseType: !21, size: 1, align: 8, offset: 31)
!719 = !DIDerivedType(tag: DW_TAG_member, name: "qdcnt", scope: !708, file: !29, line: 98, baseType: !48, size: 16, align: 16, offset: 32)
!720 = !DIDerivedType(tag: DW_TAG_member, name: "ancnt", scope: !708, file: !29, line: 99, baseType: !48, size: 16, align: 16, offset: 48)
!721 = !DIDerivedType(tag: DW_TAG_member, name: "nscnt", scope: !708, file: !29, line: 100, baseType: !48, size: 16, align: 16, offset: 64)
!722 = !DIDerivedType(tag: DW_TAG_member, name: "arcnt", scope: !708, file: !29, line: 101, baseType: !48, size: 16, align: 16, offset: 80)
!723 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !703, file: !29, line: 214, baseType: !20, size: 64, align: 64)
!724 = !DIDerivedType(tag: DW_TAG_member, name: "mesg_len", scope: !658, file: !29, line: 216, baseType: !33, size: 32, align: 32, offset: 2880)
!725 = !DIDerivedType(tag: DW_TAG_member, name: "wp", scope: !658, file: !29, line: 217, baseType: !20, size: 64, align: 64, offset: 2944)
!726 = !DIDerivedType(tag: DW_TAG_member, name: "netifaddr", scope: !658, file: !29, line: 220, baseType: !727, size: 64, align: 64, offset: 3008)
!727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !728, size: 64, align: 64)
!728 = !DIDerivedType(tag: DW_TAG_typedef, name: "Nia", file: !29, line: 65, baseType: !729)
!729 = !DICompositeType(tag: DW_TAG_structure_type, name: "nia", file: !29, line: 61, size: 128, align: 64, elements: !730)
!730 = !{!731, !732, !733}
!731 = !DIDerivedType(tag: DW_TAG_member, name: "sa_p", scope: !729, file: !29, line: 62, baseType: !645, size: 64, align: 64)
!732 = !DIDerivedType(tag: DW_TAG_member, name: "udp_sock", scope: !729, file: !29, line: 63, baseType: !33, size: 32, align: 32, offset: 64)
!733 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_sock", scope: !729, file: !29, line: 64, baseType: !33, size: 32, align: 32, offset: 96)
!734 = !DIDerivedType(tag: DW_TAG_member, name: "retry_count", scope: !658, file: !29, line: 221, baseType: !48, size: 16, align: 16, offset: 3072)
!735 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !658, file: !29, line: 222, baseType: !48, size: 16, align: 16, offset: 3088)
!736 = !DIDerivedType(tag: DW_TAG_member, name: "peer", scope: !658, file: !29, line: 225, baseType: !645, size: 64, align: 64, offset: 3136)
!737 = !DIDerivedType(tag: DW_TAG_member, name: "conn_sock", scope: !658, file: !29, line: 227, baseType: !33, size: 32, align: 32, offset: 3200)
!738 = !DIDerivedType(tag: DW_TAG_typedef, name: "__fd_mask", file: !739, line: 54, baseType: !106)
!739 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/select.h", directory: "/home/muhammad/totd/totd")
!740 = !{!741, !744, !747, !750, !753, !756, !765, !766, !769, !772, !775, !776, !779, !780, !781, !782, !783, !784, !785}
!741 = distinct !DISubprogram(name: "ev_tcp_srv_accept", scope: !643, file: !643, line: 24, type: !742, isLocal: false, isDefinition: true, scopeLine: 24, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!742 = !DISubroutineType(types: !743)
!743 = !{!33, !33}
!744 = distinct !DISubprogram(name: "ev_tcp_common_eq", scope: !643, file: !643, line: 46, type: !745, isLocal: false, isDefinition: true, scopeLine: 46, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!745 = !DISubroutineType(types: !746)
!746 = !{!33, !26, !26}
!747 = distinct !DISubprogram(name: "ev_tcp_common_init", scope: !643, file: !643, line: 59, type: !748, isLocal: false, isDefinition: true, scopeLine: 59, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!748 = !DISubroutineType(types: !749)
!749 = !{!666}
!750 = distinct !DISubprogram(name: "ev_tcp_common_register", scope: !643, file: !643, line: 70, type: !751, isLocal: false, isDefinition: true, scopeLine: 70, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!751 = !DISubroutineType(types: !752)
!752 = !{!33, !666, !33, !656}
!753 = distinct !DISubprogram(name: "ev_tcp_common_remove", scope: !643, file: !643, line: 90, type: !754, isLocal: false, isDefinition: true, scopeLine: 90, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!754 = !DISubroutineType(types: !755)
!755 = !{!33, !666, !33}
!756 = distinct !DISubprogram(name: "ev_tcp_common_fds", scope: !643, file: !643, line: 112, type: !757, isLocal: false, isDefinition: true, scopeLine: 112, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!757 = !DISubroutineType(types: !758)
!758 = !{!33, !666, !759}
!759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !760, size: 64, align: 64)
!760 = !DIDerivedType(tag: DW_TAG_typedef, name: "fd_set", file: !739, line: 75, baseType: !761)
!761 = !DICompositeType(tag: DW_TAG_structure_type, file: !739, line: 64, size: 1024, align: 64, elements: !762)
!762 = !{!763}
!763 = !DIDerivedType(tag: DW_TAG_member, name: "__fds_bits", scope: !761, file: !739, line: 72, baseType: !764, size: 1024, align: 64)
!764 = !DICompositeType(tag: DW_TAG_array_type, baseType: !738, size: 1024, align: 64, elements: !623)
!765 = distinct !DISubprogram(name: "ev_tcp_common_fd_check", scope: !643, file: !643, line: 130, type: !757, isLocal: false, isDefinition: true, scopeLine: 130, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!766 = distinct !DISubprogram(name: "ev_tcp_conn_in_init", scope: !643, file: !643, line: 160, type: !767, isLocal: false, isDefinition: true, scopeLine: 160, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!767 = !DISubroutineType(types: !768)
!768 = !{!33}
!769 = distinct !DISubprogram(name: "ev_tcp_conn_in_finish", scope: !643, file: !643, line: 170, type: !770, isLocal: false, isDefinition: true, scopeLine: 170, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!770 = !DISubroutineType(types: !771)
!771 = !{null}
!772 = distinct !DISubprogram(name: "ev_tcp_conn_in_register", scope: !643, file: !643, line: 174, type: !773, isLocal: false, isDefinition: true, scopeLine: 174, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!773 = !DISubroutineType(types: !774)
!774 = !{!33, !33, !656}
!775 = distinct !DISubprogram(name: "ev_tcp_conn_in_remove", scope: !643, file: !643, line: 180, type: !742, isLocal: false, isDefinition: true, scopeLine: 180, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!776 = distinct !DISubprogram(name: "ev_tcp_conn_in_fds", scope: !643, file: !643, line: 186, type: !777, isLocal: false, isDefinition: true, scopeLine: 186, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!777 = !DISubroutineType(types: !778)
!778 = !{!33, !759}
!779 = distinct !DISubprogram(name: "ev_tcp_conn_in_fd_check", scope: !643, file: !643, line: 192, type: !777, isLocal: false, isDefinition: true, scopeLine: 192, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!780 = distinct !DISubprogram(name: "ev_tcp_out_init", scope: !643, file: !643, line: 202, type: !767, isLocal: false, isDefinition: true, scopeLine: 202, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!781 = distinct !DISubprogram(name: "ev_tcp_out_finish", scope: !643, file: !643, line: 214, type: !770, isLocal: false, isDefinition: true, scopeLine: 214, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!782 = distinct !DISubprogram(name: "ev_tcp_out_register", scope: !643, file: !643, line: 218, type: !773, isLocal: false, isDefinition: true, scopeLine: 218, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!783 = distinct !DISubprogram(name: "ev_tcp_out_remove", scope: !643, file: !643, line: 224, type: !742, isLocal: false, isDefinition: true, scopeLine: 224, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!784 = distinct !DISubprogram(name: "ev_tcp_out_fds", scope: !643, file: !643, line: 230, type: !777, isLocal: false, isDefinition: true, scopeLine: 230, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!785 = distinct !DISubprogram(name: "ev_tcp_out_fd_check", scope: !643, file: !643, line: 236, type: !777, isLocal: false, isDefinition: true, scopeLine: 236, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!786 = !{!787, !788}
!787 = !DIGlobalVariable(name: "ConnL_head", scope: !642, file: !643, line: 17, type: !666, isLocal: true, isDefinition: true, variable: %struct.generic_list** @ConnL_head)
!788 = !DIGlobalVariable(name: "ETOL_head", scope: !642, file: !643, line: 18, type: !666, isLocal: true, isDefinition: true, variable: %struct.generic_list** @ETOL_head)
!789 = distinct !DICompileUnit(language: DW_LANG_C99, file: !790, producer: "clang version 3.8.0-2ubuntu4 (tags/RELEASE_380/final)", isOptimized: false, runtimeVersion: 0, emissionKind: 1, enums: !791, retainedTypes: !804, subprograms: !854)
!790 = !DIFile(filename: "forward.c", directory: "/home/muhammad/totd/totd")
!791 = !{!792}
!792 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "__socket_type", file: !793, line: 24, size: 32, align: 32, elements: !794)
!793 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/socket_type.h", directory: "/home/muhammad/totd/totd")
!794 = !{!795, !796, !797, !798, !799, !800, !801, !802, !803}
!795 = !DIEnumerator(name: "SOCK_STREAM", value: 1)
!796 = !DIEnumerator(name: "SOCK_DGRAM", value: 2)
!797 = !DIEnumerator(name: "SOCK_RAW", value: 3)
!798 = !DIEnumerator(name: "SOCK_RDM", value: 4)
!799 = !DIEnumerator(name: "SOCK_SEQPACKET", value: 5)
!800 = !DIEnumerator(name: "SOCK_DCCP", value: 6)
!801 = !DIEnumerator(name: "SOCK_PACKET", value: 10)
!802 = !DIEnumerator(name: "SOCK_CLOEXEC", value: 524288)
!803 = !DIEnumerator(name: "SOCK_NONBLOCK", value: 2048)
!804 = !{!805, !26, !818, !834, !103, !852}
!805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !806, size: 64, align: 64)
!806 = !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr_in", file: !615, line: 239, size: 128, align: 32, elements: !807)
!807 = !{!808, !809, !811, !816}
!808 = !DIDerivedType(tag: DW_TAG_member, name: "sin_family", scope: !806, file: !615, line: 241, baseType: !12, size: 16, align: 16)
!809 = !DIDerivedType(tag: DW_TAG_member, name: "sin_port", scope: !806, file: !615, line: 242, baseType: !810, size: 16, align: 16, offset: 16)
!810 = !DIDerivedType(tag: DW_TAG_typedef, name: "in_port_t", file: !615, line: 119, baseType: !48)
!811 = !DIDerivedType(tag: DW_TAG_member, name: "sin_addr", scope: !806, file: !615, line: 243, baseType: !812, size: 32, align: 32, offset: 32)
!812 = !DICompositeType(tag: DW_TAG_structure_type, name: "in_addr", file: !615, line: 31, size: 32, align: 32, elements: !813)
!813 = !{!814}
!814 = !DIDerivedType(tag: DW_TAG_member, name: "s_addr", scope: !812, file: !615, line: 33, baseType: !815, size: 32, align: 32)
!815 = !DIDerivedType(tag: DW_TAG_typedef, name: "in_addr_t", file: !615, line: 30, baseType: !72)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "sin_zero", scope: !806, file: !615, line: 246, baseType: !817, size: 64, align: 8, offset: 64)
!817 = !DICompositeType(tag: DW_TAG_array_type, baseType: !25, size: 64, align: 8, elements: !627)
!818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !819, size: 64, align: 64)
!819 = !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr_in6", file: !615, line: 254, size: 224, align: 32, elements: !820)
!820 = !{!821, !822, !823, !824, !833}
!821 = !DIDerivedType(tag: DW_TAG_member, name: "sin6_family", scope: !819, file: !615, line: 256, baseType: !12, size: 16, align: 16)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "sin6_port", scope: !819, file: !615, line: 257, baseType: !810, size: 16, align: 16, offset: 16)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "sin6_flowinfo", scope: !819, file: !615, line: 258, baseType: !72, size: 32, align: 32, offset: 32)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "sin6_addr", scope: !819, file: !615, line: 259, baseType: !825, size: 128, align: 32, offset: 64)
!825 = !DICompositeType(tag: DW_TAG_structure_type, name: "in6_addr", file: !615, line: 211, size: 128, align: 32, elements: !826)
!826 = !{!827}
!827 = !DIDerivedType(tag: DW_TAG_member, name: "__in6_u", scope: !825, file: !615, line: 220, baseType: !828, size: 128, align: 32)
!828 = !DICompositeType(tag: DW_TAG_union_type, scope: !825, file: !615, line: 213, size: 128, align: 32, elements: !829)
!829 = !{!830, !831, !832}
!830 = !DIDerivedType(tag: DW_TAG_member, name: "__u6_addr8", scope: !828, file: !615, line: 215, baseType: !621, size: 128, align: 8)
!831 = !DIDerivedType(tag: DW_TAG_member, name: "__u6_addr16", scope: !828, file: !615, line: 217, baseType: !626, size: 128, align: 16)
!832 = !DIDerivedType(tag: DW_TAG_member, name: "__u6_addr32", scope: !828, file: !615, line: 218, baseType: !630, size: 128, align: 32)
!833 = !DIDerivedType(tag: DW_TAG_member, name: "sin6_scope_id", scope: !819, file: !615, line: 260, baseType: !72, size: 32, align: 32, offset: 192)
!834 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !835, size: 64, align: 64)
!835 = !DIDerivedType(tag: DW_TAG_typedef, name: "Fwd", file: !29, line: 55, baseType: !836)
!836 = !DICompositeType(tag: DW_TAG_structure_type, name: "fwd", file: !29, line: 44, size: 2368, align: 64, elements: !837)
!837 = !{!838, !842, !843, !849, !850, !851}
!838 = !DIDerivedType(tag: DW_TAG_member, name: "hostname", scope: !836, file: !29, line: 45, baseType: !839, size: 2056, align: 8)
!839 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6, size: 2056, align: 8, elements: !840)
!840 = !{!841}
!841 = !DISubrange(count: 257)
!842 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !836, file: !29, line: 46, baseType: !33, size: 32, align: 32, offset: 2080)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "sa", scope: !836, file: !29, line: 47, baseType: !844, size: 64, align: 64, offset: 2112)
!844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !845, size: 64, align: 64)
!845 = !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr", file: !9, line: 153, size: 128, align: 16, elements: !846)
!846 = !{!847, !848}
!847 = !DIDerivedType(tag: DW_TAG_member, name: "sa_family", scope: !845, file: !9, line: 155, baseType: !12, size: 16, align: 16)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "sa_data", scope: !845, file: !9, line: 156, baseType: !16, size: 112, align: 8, offset: 16)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "sa_len", scope: !836, file: !29, line: 48, baseType: !33, size: 32, align: 32, offset: 2176)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "went_down_at", scope: !836, file: !29, line: 53, baseType: !103, size: 64, align: 64, offset: 2240)
!851 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !836, file: !29, line: 54, baseType: !33, size: 32, align: 32, offset: 2304)
!852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !853, size: 64, align: 64)
!853 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !825)
!854 = !{!855, !858, !861, !864, !867, !870, !871, !874, !931, !934}
!855 = distinct !DISubprogram(name: "sprint_inet", scope: !790, file: !790, line: 16, type: !856, isLocal: false, isDefinition: true, scopeLine: 16, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!856 = !DISubroutineType(types: !857)
!857 = !{!19, !844, !19}
!858 = distinct !DISubprogram(name: "parse_and_alloc_addr", scope: !790, file: !790, line: 41, type: !859, isLocal: false, isDefinition: true, scopeLine: 41, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!859 = !DISubroutineType(types: !860)
!860 = !{!844, !19, !33, !514}
!861 = distinct !DISubprogram(name: "fwd_free", scope: !790, file: !790, line: 123, type: !862, isLocal: false, isDefinition: true, scopeLine: 123, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!862 = !DISubroutineType(types: !863)
!863 = !{null, !834}
!864 = distinct !DISubprogram(name: "fwd_freev", scope: !790, file: !790, line: 133, type: !865, isLocal: false, isDefinition: true, scopeLine: 133, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!865 = !DISubroutineType(types: !866)
!866 = !{null, !26}
!867 = distinct !DISubprogram(name: "fwd_alloc", scope: !790, file: !790, line: 138, type: !868, isLocal: false, isDefinition: true, scopeLine: 138, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!868 = !DISubroutineType(types: !869)
!869 = !{!834}
!870 = distinct !DISubprogram(name: "fwd_init", scope: !790, file: !790, line: 160, type: !770, isLocal: false, isDefinition: true, scopeLine: 160, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!871 = distinct !DISubprogram(name: "fwd_add", scope: !790, file: !790, line: 190, type: !872, isLocal: false, isDefinition: true, scopeLine: 190, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!872 = !DISubroutineType(types: !873)
!873 = !{!33, !19, !33}
!874 = distinct !DISubprogram(name: "fwd_select", scope: !790, file: !790, line: 215, type: !875, isLocal: false, isDefinition: true, scopeLine: 215, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!875 = !DISubroutineType(types: !876)
!876 = !{!877, !877}
!877 = !DICompositeType(tag: DW_TAG_structure_type, name: "ToT", file: !878, line: 95, size: 17728, align: 64, elements: !879)
!878 = !DIFile(filename: "./totd.h", directory: "/home/muhammad/totd/totd")
!879 = !{!880, !881, !882, !883, !884, !885, !888, !891, !892, !893, !894, !895, !896, !897, !898, !899, !900, !901, !902, !903, !904, !909, !918, !919, !920, !924, !925, !928, !929}
!880 = !DIDerivedType(tag: DW_TAG_member, name: "configfile", scope: !877, file: !878, line: 97, baseType: !19, size: 64, align: 64)
!881 = !DIDerivedType(tag: DW_TAG_member, name: "pidfile", scope: !877, file: !878, line: 98, baseType: !19, size: 64, align: 64, offset: 64)
!882 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !877, file: !878, line: 100, baseType: !19, size: 64, align: 64, offset: 128)
!883 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !877, file: !878, line: 101, baseType: !19, size: 64, align: 64, offset: 192)
!884 = !DIDerivedType(tag: DW_TAG_member, name: "rootdir", scope: !877, file: !878, line: 102, baseType: !19, size: 64, align: 64, offset: 256)
!885 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !877, file: !878, line: 103, baseType: !886, size: 32, align: 32, offset: 320)
!886 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !22, line: 80, baseType: !887)
!887 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !24, line: 125, baseType: !73)
!888 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !877, file: !878, line: 104, baseType: !889, size: 32, align: 32, offset: 352)
!889 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !22, line: 65, baseType: !890)
!890 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !24, line: 126, baseType: !73)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "quiet", scope: !877, file: !878, line: 106, baseType: !33, size: 32, align: 32, offset: 384)
!892 = !DIDerivedType(tag: DW_TAG_member, name: "debug", scope: !877, file: !878, line: 107, baseType: !33, size: 32, align: 32, offset: 416)
!893 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !877, file: !878, line: 108, baseType: !33, size: 32, align: 32, offset: 448)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "retry_interval", scope: !877, file: !878, line: 109, baseType: !33, size: 32, align: 32, offset: 480)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "http_port", scope: !877, file: !878, line: 110, baseType: !33, size: 32, align: 32, offset: 512)
!896 = !DIDerivedType(tag: DW_TAG_member, name: "ip4", scope: !877, file: !878, line: 112, baseType: !33, size: 32, align: 32, offset: 544)
!897 = !DIDerivedType(tag: DW_TAG_member, name: "ip6", scope: !877, file: !878, line: 113, baseType: !33, size: 32, align: 32, offset: 576)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "use_mapped", scope: !877, file: !878, line: 114, baseType: !33, size: 32, align: 32, offset: 608)
!899 = !DIDerivedType(tag: DW_TAG_member, name: "wildcard", scope: !877, file: !878, line: 115, baseType: !33, size: 32, align: 32, offset: 640)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "stf", scope: !877, file: !878, line: 116, baseType: !33, size: 32, align: 32, offset: 672)
!901 = !DIDerivedType(tag: DW_TAG_member, name: "tcp", scope: !877, file: !878, line: 117, baseType: !33, size: 32, align: 32, offset: 704)
!902 = !DIDerivedType(tag: DW_TAG_member, name: "rescan_iflist", scope: !877, file: !878, line: 118, baseType: !33, size: 32, align: 32, offset: 736)
!903 = !DIDerivedType(tag: DW_TAG_member, name: "prefixnum", scope: !877, file: !878, line: 120, baseType: !33, size: 32, align: 32, offset: 768)
!904 = !DIDerivedType(tag: DW_TAG_member, name: "prefix", scope: !877, file: !878, line: 121, baseType: !905, size: 6000, align: 8, offset: 800)
!905 = !DICompositeType(tag: DW_TAG_array_type, baseType: !21, size: 6000, align: 8, elements: !906)
!906 = !{!907, !908}
!907 = !DISubrange(count: 30)
!908 = !DISubrange(count: 25)
!909 = !DIDerivedType(tag: DW_TAG_member, name: "Fwd_list", scope: !877, file: !878, line: 123, baseType: !910, size: 64, align: 64, offset: 6848)
!910 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !911, size: 64, align: 64)
!911 = !DIDerivedType(tag: DW_TAG_typedef, name: "G_List", file: !29, line: 22, baseType: !912)
!912 = !DICompositeType(tag: DW_TAG_structure_type, name: "generic_list", file: !29, line: 18, size: 192, align: 64, elements: !913)
!913 = !{!914, !916, !917}
!914 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !912, file: !29, line: 19, baseType: !915, size: 64, align: 64)
!915 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !912, size: 64, align: 64)
!916 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !912, file: !29, line: 20, baseType: !915, size: 64, align: 64, offset: 64)
!917 = !DIDerivedType(tag: DW_TAG_member, name: "list_data", scope: !912, file: !29, line: 21, baseType: !26, size: 64, align: 64, offset: 128)
!918 = !DIDerivedType(tag: DW_TAG_member, name: "current_fwd", scope: !877, file: !878, line: 125, baseType: !910, size: 64, align: 64, offset: 6912)
!919 = !DIDerivedType(tag: DW_TAG_member, name: "current_prefix", scope: !877, file: !878, line: 126, baseType: !33, size: 32, align: 32, offset: 6976)
!920 = !DIDerivedType(tag: DW_TAG_member, name: "iflist", scope: !877, file: !878, line: 127, baseType: !921, size: 1984, align: 64, offset: 7040)
!921 = !DICompositeType(tag: DW_TAG_array_type, baseType: !19, size: 1984, align: 64, elements: !922)
!922 = !{!923}
!923 = !DISubrange(count: 31)
!924 = !DIDerivedType(tag: DW_TAG_member, name: "scoped_prefixes", scope: !877, file: !878, line: 130, baseType: !33, size: 32, align: 32, offset: 9024)
!925 = !DIDerivedType(tag: DW_TAG_member, name: "scoped_from", scope: !877, file: !878, line: 131, baseType: !926, size: 3840, align: 32, offset: 9056)
!926 = !DICompositeType(tag: DW_TAG_array_type, baseType: !825, size: 3840, align: 32, elements: !927)
!927 = !{!907}
!928 = !DIDerivedType(tag: DW_TAG_member, name: "scoped_to", scope: !877, file: !878, line: 132, baseType: !926, size: 3840, align: 32, offset: 12896)
!929 = !DIDerivedType(tag: DW_TAG_member, name: "scoped_plen", scope: !877, file: !878, line: 133, baseType: !930, size: 960, align: 32, offset: 16736)
!930 = !DICompositeType(tag: DW_TAG_array_type, baseType: !33, size: 960, align: 32, elements: !927)
!931 = distinct !DISubprogram(name: "fwd_mark", scope: !790, file: !790, line: 294, type: !932, isLocal: false, isDefinition: true, scopeLine: 294, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!932 = !DISubroutineType(types: !933)
!933 = !{null, !844, !33}
!934 = distinct !DISubprogram(name: "fwd_socketlist", scope: !790, file: !790, line: 403, type: !935, isLocal: false, isDefinition: true, scopeLine: 403, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!935 = !DISubroutineType(types: !936)
!936 = !{!910}
!937 = distinct !DICompileUnit(language: DW_LANG_C99, file: !938, producer: "clang version 3.8.0-2ubuntu4 (tags/RELEASE_380/final)", isOptimized: false, runtimeVersion: 0, emissionKind: 1, enums: !2, retainedTypes: !939, subprograms: !940)
!938 = !DIFile(filename: "queue.c", directory: "/home/muhammad/totd/totd")
!939 = !{!26}
!940 = !{!941, !955, !958, !961, !962, !967}
!941 = distinct !DISubprogram(name: "queue_create", scope: !938, file: !938, line: 15, type: !942, isLocal: false, isDefinition: true, scopeLine: 15, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!942 = !DISubroutineType(types: !943)
!943 = !{!944}
!944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !945, size: 64, align: 64)
!945 = !DIDerivedType(tag: DW_TAG_typedef, name: "Q_Set", file: !29, line: 38, baseType: !946)
!946 = !DICompositeType(tag: DW_TAG_structure_type, name: "qset", file: !29, line: 35, size: 128, align: 64, elements: !947)
!947 = !{!948, !954}
!948 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !946, file: !29, line: 36, baseType: !949, size: 64, align: 64)
!949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !950, size: 64, align: 64)
!950 = !DICompositeType(tag: DW_TAG_structure_type, name: "gqueue", file: !29, line: 29, size: 128, align: 64, elements: !951)
!951 = !{!952, !953}
!952 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !950, file: !29, line: 30, baseType: !949, size: 64, align: 64)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !950, file: !29, line: 31, baseType: !26, size: 64, align: 64, offset: 64)
!954 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !946, file: !29, line: 37, baseType: !949, size: 64, align: 64, offset: 64)
!955 = distinct !DISubprogram(name: "enqueue", scope: !938, file: !938, line: 36, type: !956, isLocal: false, isDefinition: true, scopeLine: 36, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!956 = !DISubroutineType(types: !957)
!957 = !{!33, !944, !26}
!958 = distinct !DISubprogram(name: "dequeue", scope: !938, file: !938, line: 58, type: !959, isLocal: false, isDefinition: true, scopeLine: 58, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!959 = !DISubroutineType(types: !960)
!960 = !{!26, !944}
!961 = distinct !DISubprogram(name: "queue_peek", scope: !938, file: !938, line: 75, type: !959, isLocal: false, isDefinition: true, scopeLine: 75, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!962 = distinct !DISubprogram(name: "queue_disable", scope: !938, file: !938, line: 83, type: !963, isLocal: false, isDefinition: true, scopeLine: 83, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!963 = !DISubroutineType(types: !964)
!964 = !{!26, !965}
!965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !966, size: 64, align: 64)
!966 = !DIDerivedType(tag: DW_TAG_typedef, name: "G_Queue", file: !29, line: 32, baseType: !950)
!967 = distinct !DISubprogram(name: "queue_destroy", scope: !938, file: !938, line: 91, type: !968, isLocal: false, isDefinition: true, scopeLine: 91, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!968 = !DISubroutineType(types: !969)
!969 = !{null, !944, !970}
!970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !865, size: 64, align: 64)
!971 = distinct !DICompileUnit(language: DW_LANG_C99, file: !972, producer: "clang version 3.8.0-2ubuntu4 (tags/RELEASE_380/final)", isOptimized: false, runtimeVersion: 0, emissionKind: 1, enums: !2, retainedTypes: !973, subprograms: !974, globals: !978)
!972 = !DIFile(filename: "read_config.c", directory: "/home/muhammad/totd/totd")
!973 = !{!20}
!974 = !{!975}
!975 = distinct !DISubprogram(name: "read_config", scope: !972, file: !972, line: 40, type: !976, isLocal: false, isDefinition: true, scopeLine: 40, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!976 = !DISubroutineType(types: !977)
!977 = !{!33, !19}
!978 = !{!979}
!979 = !DIGlobalVariable(name: "lines", scope: !971, file: !972, line: 21, type: !980, isLocal: false, isDefinition: true, variable: [17 x i8*]* @lines)
!980 = !DICompositeType(tag: DW_TAG_array_type, baseType: !19, size: 1088, align: 64, elements: !981)
!981 = !{!982}
!982 = !DISubrange(count: 17)
!983 = distinct !DICompileUnit(language: DW_LANG_C99, file: !984, producer: "clang version 3.8.0-2ubuntu4 (tags/RELEASE_380/final)", isOptimized: false, runtimeVersion: 0, emissionKind: 1, enums: !791, retainedTypes: !985, subprograms: !991)
!984 = !DIFile(filename: "tcp_request.c", directory: "/home/muhammad/totd/totd")
!985 = !{!986, !19, !26, !20}
!986 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !987, size: 64, align: 64)
!987 = !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr", file: !9, line: 153, size: 128, align: 16, elements: !988)
!988 = !{!989, !990}
!989 = !DIDerivedType(tag: DW_TAG_member, name: "sa_family", scope: !987, file: !9, line: 155, baseType: !12, size: 16, align: 16)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "sa_data", scope: !987, file: !9, line: 156, baseType: !16, size: 112, align: 8, offset: 16)
!991 = !{!992, !1073, !1078, !1079, !1080, !1081, !1082, !1083, !1084, !1085}
!992 = distinct !DISubprogram(name: "tcp_request_start", scope: !984, file: !984, line: 16, type: !993, isLocal: false, isDefinition: true, scopeLine: 16, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!993 = !DISubroutineType(types: !994)
!994 = !{!33, !995}
!995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !996, size: 64, align: 64)
!996 = !DICompositeType(tag: DW_TAG_structure_type, name: "context", file: !29, line: 180, size: 3264, align: 64, elements: !997)
!997 = !{!998, !999, !1000, !1001, !1002, !1011, !1012, !1027, !1029, !1030, !1031, !1032, !1033, !1034, !1035, !1036, !1037, !1059, !1060, !1061, !1069, !1070, !1071, !1072}
!998 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !996, file: !29, line: 181, baseType: !995, size: 64, align: 64)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !996, file: !29, line: 182, baseType: !995, size: 64, align: 64, offset: 64)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "work_state", scope: !996, file: !29, line: 185, baseType: !33, size: 32, align: 32, offset: 128)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "cname_links", scope: !996, file: !29, line: 191, baseType: !33, size: 32, align: 32, offset: 160)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "nameservers", scope: !996, file: !29, line: 192, baseType: !1003, size: 64, align: 64, offset: 192)
!1003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1004, size: 64, align: 64)
!1004 = !DIDerivedType(tag: DW_TAG_typedef, name: "G_List", file: !29, line: 22, baseType: !1005)
!1005 = !DICompositeType(tag: DW_TAG_structure_type, name: "generic_list", file: !29, line: 18, size: 192, align: 64, elements: !1006)
!1006 = !{!1007, !1009, !1010}
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1005, file: !29, line: 19, baseType: !1008, size: 64, align: 64)
!1008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1005, size: 64, align: 64)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1005, file: !29, line: 20, baseType: !1008, size: 64, align: 64, offset: 64)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "list_data", scope: !1005, file: !29, line: 21, baseType: !26, size: 64, align: 64, offset: 128)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "current_ns", scope: !996, file: !29, line: 193, baseType: !1003, size: 64, align: 64, offset: 256)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "tout", scope: !996, file: !29, line: 196, baseType: !1013, size: 64, align: 64, offset: 320)
!1013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1014, size: 64, align: 64)
!1014 = !DICompositeType(tag: DW_TAG_structure_type, name: "ev_to_data", file: !29, line: 244, size: 256, align: 64, elements: !1015)
!1015 = !{!1016, !1017, !1021, !1022}
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "at", scope: !1014, file: !29, line: 245, baseType: !103, size: 64, align: 64)
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1014, file: !29, line: 246, baseType: !1018, size: 64, align: 64, offset: 64)
!1018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1019, size: 64, align: 64)
!1019 = !DISubroutineType(types: !1020)
!1020 = !{!33, !1013}
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1014, file: !29, line: 247, baseType: !33, size: 32, align: 32, offset: 128)
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1014, file: !29, line: 251, baseType: !1023, size: 64, align: 64, offset: 192)
!1023 = !DICompositeType(tag: DW_TAG_union_type, scope: !1014, file: !29, line: 248, size: 64, align: 64, elements: !1024)
!1024 = !{!1025, !1026}
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !1023, file: !29, line: 249, baseType: !26, size: 64, align: 64)
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "cont", scope: !1023, file: !29, line: 250, baseType: !995, size: 64, align: 64)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "process", scope: !996, file: !29, line: 197, baseType: !1028, size: 64, align: 64, offset: 384)
!1028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !993, size: 64, align: 64)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "retry", scope: !996, file: !29, line: 198, baseType: !1028, size: 64, align: 64, offset: 448)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "qname", scope: !996, file: !29, line: 201, baseType: !123, size: 2048, align: 8, offset: 512)
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "q_id", scope: !996, file: !29, line: 202, baseType: !72, size: 32, align: 32, offset: 2560)
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "q_class", scope: !996, file: !29, line: 203, baseType: !48, size: 16, align: 16, offset: 2592)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "q_type", scope: !996, file: !29, line: 204, baseType: !48, size: 16, align: 16, offset: 2608)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "an_list", scope: !996, file: !29, line: 207, baseType: !1003, size: 64, align: 64, offset: 2624)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "ns_list", scope: !996, file: !29, line: 208, baseType: !1003, size: 64, align: 64, offset: 2688)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "ar_list", scope: !996, file: !29, line: 209, baseType: !1003, size: 64, align: 64, offset: 2752)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "mesg", scope: !996, file: !29, line: 215, baseType: !1038, size: 64, align: 64, offset: 2816)
!1038 = !DICompositeType(tag: DW_TAG_union_type, scope: !996, file: !29, line: 212, size: 64, align: 64, elements: !1039)
!1039 = !{!1040, !1058}
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "hdr", scope: !1038, file: !29, line: 213, baseType: !1041, size: 64, align: 64)
!1041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1042, size: 64, align: 64)
!1042 = !DIDerivedType(tag: DW_TAG_typedef, name: "Mesg_Hdr", file: !29, line: 102, baseType: !1043)
!1043 = !DICompositeType(tag: DW_TAG_structure_type, name: "mesg_hdr", file: !29, line: 71, size: 96, align: 16, elements: !1044)
!1044 = !{!1045, !1046, !1047, !1048, !1049, !1050, !1051, !1052, !1053, !1054, !1055, !1056, !1057}
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1043, file: !29, line: 72, baseType: !48, size: 16, align: 16)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "rd", scope: !1043, file: !29, line: 86, baseType: !21, size: 1, align: 8, offset: 16)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "tc", scope: !1043, file: !29, line: 87, baseType: !21, size: 1, align: 8, offset: 17)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "aa", scope: !1043, file: !29, line: 88, baseType: !21, size: 1, align: 8, offset: 18)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "opcode", scope: !1043, file: !29, line: 89, baseType: !21, size: 4, align: 8, offset: 19)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "qr", scope: !1043, file: !29, line: 90, baseType: !21, size: 1, align: 8, offset: 23)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "rcode", scope: !1043, file: !29, line: 92, baseType: !21, size: 4, align: 8, offset: 24)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "zero", scope: !1043, file: !29, line: 93, baseType: !21, size: 3, align: 8, offset: 28)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "ra", scope: !1043, file: !29, line: 94, baseType: !21, size: 1, align: 8, offset: 31)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "qdcnt", scope: !1043, file: !29, line: 98, baseType: !48, size: 16, align: 16, offset: 32)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "ancnt", scope: !1043, file: !29, line: 99, baseType: !48, size: 16, align: 16, offset: 48)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "nscnt", scope: !1043, file: !29, line: 100, baseType: !48, size: 16, align: 16, offset: 64)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "arcnt", scope: !1043, file: !29, line: 101, baseType: !48, size: 16, align: 16, offset: 80)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !1038, file: !29, line: 214, baseType: !20, size: 64, align: 64)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "mesg_len", scope: !996, file: !29, line: 216, baseType: !33, size: 32, align: 32, offset: 2880)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "wp", scope: !996, file: !29, line: 217, baseType: !20, size: 64, align: 64, offset: 2944)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "netifaddr", scope: !996, file: !29, line: 220, baseType: !1062, size: 64, align: 64, offset: 3008)
!1062 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1063, size: 64, align: 64)
!1063 = !DIDerivedType(tag: DW_TAG_typedef, name: "Nia", file: !29, line: 65, baseType: !1064)
!1064 = !DICompositeType(tag: DW_TAG_structure_type, name: "nia", file: !29, line: 61, size: 128, align: 64, elements: !1065)
!1065 = !{!1066, !1067, !1068}
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "sa_p", scope: !1064, file: !29, line: 62, baseType: !986, size: 64, align: 64)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "udp_sock", scope: !1064, file: !29, line: 63, baseType: !33, size: 32, align: 32, offset: 64)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_sock", scope: !1064, file: !29, line: 64, baseType: !33, size: 32, align: 32, offset: 96)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "retry_count", scope: !996, file: !29, line: 221, baseType: !48, size: 16, align: 16, offset: 3072)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !996, file: !29, line: 222, baseType: !48, size: 16, align: 16, offset: 3088)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "peer", scope: !996, file: !29, line: 225, baseType: !986, size: 64, align: 64, offset: 3136)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "conn_sock", scope: !996, file: !29, line: 227, baseType: !33, size: 32, align: 32, offset: 3200)
!1073 = distinct !DISubprogram(name: "tcp_request_wait_connect_process", scope: !984, file: !984, line: 68, type: !1074, isLocal: false, isDefinition: true, scopeLine: 68, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!1074 = !DISubroutineType(types: !1075)
!1075 = !{!33, !1076}
!1076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1077, size: 64, align: 64)
!1077 = !DIDerivedType(tag: DW_TAG_typedef, name: "Context", file: !29, line: 228, baseType: !996)
!1078 = distinct !DISubprogram(name: "tcp_request_wait_connect_retry", scope: !984, file: !984, line: 120, type: !1074, isLocal: false, isDefinition: true, scopeLine: 120, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!1079 = distinct !DISubprogram(name: "tcp_request_writing_process", scope: !984, file: !984, line: 186, type: !1074, isLocal: false, isDefinition: true, scopeLine: 186, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!1080 = distinct !DISubprogram(name: "tcp_request_writing_retry", scope: !984, file: !984, line: 224, type: !1074, isLocal: false, isDefinition: true, scopeLine: 224, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!1081 = distinct !DISubprogram(name: "tcp_request_readlen_process", scope: !984, file: !984, line: 229, type: !1074, isLocal: false, isDefinition: true, scopeLine: 229, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!1082 = distinct !DISubprogram(name: "tcp_request_readlen_retry", scope: !984, file: !984, line: 269, type: !1074, isLocal: false, isDefinition: true, scopeLine: 269, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!1083 = distinct !DISubprogram(name: "tcp_request_reading_process", scope: !984, file: !984, line: 316, type: !1074, isLocal: false, isDefinition: true, scopeLine: 316, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!1084 = distinct !DISubprogram(name: "tcp_request_reading_retry", scope: !984, file: !984, line: 346, type: !1074, isLocal: false, isDefinition: true, scopeLine: 346, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!1085 = distinct !DISubprogram(name: "tcp_writemesg", scope: !984, file: !984, line: 351, type: !1086, isLocal: false, isDefinition: true, scopeLine: 351, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!1086 = !DISubroutineType(types: !1087)
!1087 = !{!33, !1076, !33}
!1088 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1089, producer: "clang version 3.8.0-2ubuntu4 (tags/RELEASE_380/final)", isOptimized: false, runtimeVersion: 0, emissionKind: 1, enums: !2, retainedTypes: !973, subprograms: !1090)
!1089 = !DIFile(filename: "tcp_response.c", directory: "/home/muhammad/totd/totd")
!1090 = !{!1091, !1099, !1184, !1185, !1186, !1187, !1188, !1189, !1190, !1191, !1192, !1193}
!1091 = distinct !DISubprogram(name: "tcp_response_start", scope: !1089, file: !1089, line: 17, type: !1092, isLocal: false, isDefinition: true, scopeLine: 17, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!1092 = !DISubroutineType(types: !1093)
!1093 = !{!33, !33, !1094}
!1094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1095, size: 64, align: 64)
!1095 = !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr", file: !9, line: 153, size: 128, align: 16, elements: !1096)
!1096 = !{!1097, !1098}
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "sa_family", scope: !1095, file: !9, line: 155, baseType: !12, size: 16, align: 16)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "sa_data", scope: !1095, file: !9, line: 156, baseType: !16, size: 112, align: 8, offset: 16)
!1099 = distinct !DISubprogram(name: "tcp_response_readlen_process", scope: !1089, file: !1089, line: 41, type: !1100, isLocal: false, isDefinition: true, scopeLine: 41, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!1100 = !DISubroutineType(types: !1101)
!1101 = !{!33, !1102}
!1102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1103, size: 64, align: 64)
!1103 = !DIDerivedType(tag: DW_TAG_typedef, name: "Context", file: !29, line: 228, baseType: !1104)
!1104 = !DICompositeType(tag: DW_TAG_structure_type, name: "context", file: !29, line: 180, size: 3264, align: 64, elements: !1105)
!1105 = !{!1106, !1108, !1109, !1110, !1111, !1120, !1121, !1136, !1140, !1141, !1142, !1143, !1144, !1145, !1146, !1147, !1148, !1170, !1171, !1172, !1180, !1181, !1182, !1183}
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1104, file: !29, line: 181, baseType: !1107, size: 64, align: 64)
!1107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1104, size: 64, align: 64)
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !1104, file: !29, line: 182, baseType: !1107, size: 64, align: 64, offset: 64)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "work_state", scope: !1104, file: !29, line: 185, baseType: !33, size: 32, align: 32, offset: 128)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "cname_links", scope: !1104, file: !29, line: 191, baseType: !33, size: 32, align: 32, offset: 160)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "nameservers", scope: !1104, file: !29, line: 192, baseType: !1112, size: 64, align: 64, offset: 192)
!1112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1113, size: 64, align: 64)
!1113 = !DIDerivedType(tag: DW_TAG_typedef, name: "G_List", file: !29, line: 22, baseType: !1114)
!1114 = !DICompositeType(tag: DW_TAG_structure_type, name: "generic_list", file: !29, line: 18, size: 192, align: 64, elements: !1115)
!1115 = !{!1116, !1118, !1119}
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1114, file: !29, line: 19, baseType: !1117, size: 64, align: 64)
!1117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1114, size: 64, align: 64)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1114, file: !29, line: 20, baseType: !1117, size: 64, align: 64, offset: 64)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "list_data", scope: !1114, file: !29, line: 21, baseType: !26, size: 64, align: 64, offset: 128)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "current_ns", scope: !1104, file: !29, line: 193, baseType: !1112, size: 64, align: 64, offset: 256)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "tout", scope: !1104, file: !29, line: 196, baseType: !1122, size: 64, align: 64, offset: 320)
!1122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1123, size: 64, align: 64)
!1123 = !DICompositeType(tag: DW_TAG_structure_type, name: "ev_to_data", file: !29, line: 244, size: 256, align: 64, elements: !1124)
!1124 = !{!1125, !1126, !1130, !1131}
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "at", scope: !1123, file: !29, line: 245, baseType: !103, size: 64, align: 64)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1123, file: !29, line: 246, baseType: !1127, size: 64, align: 64, offset: 64)
!1127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1128, size: 64, align: 64)
!1128 = !DISubroutineType(types: !1129)
!1129 = !{!33, !1122}
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1123, file: !29, line: 247, baseType: !33, size: 32, align: 32, offset: 128)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1123, file: !29, line: 251, baseType: !1132, size: 64, align: 64, offset: 192)
!1132 = !DICompositeType(tag: DW_TAG_union_type, scope: !1123, file: !29, line: 248, size: 64, align: 64, elements: !1133)
!1133 = !{!1134, !1135}
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !1132, file: !29, line: 249, baseType: !26, size: 64, align: 64)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "cont", scope: !1132, file: !29, line: 250, baseType: !1107, size: 64, align: 64)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "process", scope: !1104, file: !29, line: 197, baseType: !1137, size: 64, align: 64, offset: 384)
!1137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1138, size: 64, align: 64)
!1138 = !DISubroutineType(types: !1139)
!1139 = !{!33, !1107}
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "retry", scope: !1104, file: !29, line: 198, baseType: !1137, size: 64, align: 64, offset: 448)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "qname", scope: !1104, file: !29, line: 201, baseType: !123, size: 2048, align: 8, offset: 512)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "q_id", scope: !1104, file: !29, line: 202, baseType: !72, size: 32, align: 32, offset: 2560)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "q_class", scope: !1104, file: !29, line: 203, baseType: !48, size: 16, align: 16, offset: 2592)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "q_type", scope: !1104, file: !29, line: 204, baseType: !48, size: 16, align: 16, offset: 2608)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "an_list", scope: !1104, file: !29, line: 207, baseType: !1112, size: 64, align: 64, offset: 2624)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "ns_list", scope: !1104, file: !29, line: 208, baseType: !1112, size: 64, align: 64, offset: 2688)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "ar_list", scope: !1104, file: !29, line: 209, baseType: !1112, size: 64, align: 64, offset: 2752)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "mesg", scope: !1104, file: !29, line: 215, baseType: !1149, size: 64, align: 64, offset: 2816)
!1149 = !DICompositeType(tag: DW_TAG_union_type, scope: !1104, file: !29, line: 212, size: 64, align: 64, elements: !1150)
!1150 = !{!1151, !1169}
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "hdr", scope: !1149, file: !29, line: 213, baseType: !1152, size: 64, align: 64)
!1152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1153, size: 64, align: 64)
!1153 = !DIDerivedType(tag: DW_TAG_typedef, name: "Mesg_Hdr", file: !29, line: 102, baseType: !1154)
!1154 = !DICompositeType(tag: DW_TAG_structure_type, name: "mesg_hdr", file: !29, line: 71, size: 96, align: 16, elements: !1155)
!1155 = !{!1156, !1157, !1158, !1159, !1160, !1161, !1162, !1163, !1164, !1165, !1166, !1167, !1168}
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1154, file: !29, line: 72, baseType: !48, size: 16, align: 16)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "rd", scope: !1154, file: !29, line: 86, baseType: !21, size: 1, align: 8, offset: 16)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "tc", scope: !1154, file: !29, line: 87, baseType: !21, size: 1, align: 8, offset: 17)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "aa", scope: !1154, file: !29, line: 88, baseType: !21, size: 1, align: 8, offset: 18)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "opcode", scope: !1154, file: !29, line: 89, baseType: !21, size: 4, align: 8, offset: 19)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "qr", scope: !1154, file: !29, line: 90, baseType: !21, size: 1, align: 8, offset: 23)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "rcode", scope: !1154, file: !29, line: 92, baseType: !21, size: 4, align: 8, offset: 24)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "zero", scope: !1154, file: !29, line: 93, baseType: !21, size: 3, align: 8, offset: 28)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "ra", scope: !1154, file: !29, line: 94, baseType: !21, size: 1, align: 8, offset: 31)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "qdcnt", scope: !1154, file: !29, line: 98, baseType: !48, size: 16, align: 16, offset: 32)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "ancnt", scope: !1154, file: !29, line: 99, baseType: !48, size: 16, align: 16, offset: 48)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "nscnt", scope: !1154, file: !29, line: 100, baseType: !48, size: 16, align: 16, offset: 64)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "arcnt", scope: !1154, file: !29, line: 101, baseType: !48, size: 16, align: 16, offset: 80)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !1149, file: !29, line: 214, baseType: !20, size: 64, align: 64)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "mesg_len", scope: !1104, file: !29, line: 216, baseType: !33, size: 32, align: 32, offset: 2880)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "wp", scope: !1104, file: !29, line: 217, baseType: !20, size: 64, align: 64, offset: 2944)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "netifaddr", scope: !1104, file: !29, line: 220, baseType: !1173, size: 64, align: 64, offset: 3008)
!1173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1174, size: 64, align: 64)
!1174 = !DIDerivedType(tag: DW_TAG_typedef, name: "Nia", file: !29, line: 65, baseType: !1175)
!1175 = !DICompositeType(tag: DW_TAG_structure_type, name: "nia", file: !29, line: 61, size: 128, align: 64, elements: !1176)
!1176 = !{!1177, !1178, !1179}
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "sa_p", scope: !1175, file: !29, line: 62, baseType: !1094, size: 64, align: 64)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "udp_sock", scope: !1175, file: !29, line: 63, baseType: !33, size: 32, align: 32, offset: 64)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_sock", scope: !1175, file: !29, line: 64, baseType: !33, size: 32, align: 32, offset: 96)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "retry_count", scope: !1104, file: !29, line: 221, baseType: !48, size: 16, align: 16, offset: 3072)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1104, file: !29, line: 222, baseType: !48, size: 16, align: 16, offset: 3088)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "peer", scope: !1104, file: !29, line: 225, baseType: !1094, size: 64, align: 64, offset: 3136)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "conn_sock", scope: !1104, file: !29, line: 227, baseType: !33, size: 32, align: 32, offset: 3200)
!1184 = distinct !DISubprogram(name: "tcp_response_readlen_retry", scope: !1089, file: !1089, line: 86, type: !1100, isLocal: false, isDefinition: true, scopeLine: 86, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!1185 = distinct !DISubprogram(name: "tcp_response_reading_process", scope: !1089, file: !1089, line: 93, type: !1100, isLocal: false, isDefinition: true, scopeLine: 93, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!1186 = distinct !DISubprogram(name: "tcp_response_reading_retry", scope: !1089, file: !1089, line: 184, type: !1100, isLocal: false, isDefinition: true, scopeLine: 184, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!1187 = distinct !DISubprogram(name: "tcp_response_recursive_process", scope: !1089, file: !1089, line: 188, type: !1100, isLocal: false, isDefinition: true, scopeLine: 188, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!1188 = distinct !DISubprogram(name: "tcp_response_recursive_retry", scope: !1089, file: !1089, line: 231, type: !1100, isLocal: false, isDefinition: true, scopeLine: 231, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!1189 = distinct !DISubprogram(name: "tcp_response_writing_process", scope: !1089, file: !1089, line: 235, type: !1100, isLocal: false, isDefinition: true, scopeLine: 235, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!1190 = distinct !DISubprogram(name: "tcp_response_writing_retry", scope: !1089, file: !1089, line: 273, type: !1100, isLocal: false, isDefinition: true, scopeLine: 273, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!1191 = distinct !DISubprogram(name: "tcp_response_waiting_client_close_process", scope: !1089, file: !1089, line: 277, type: !1100, isLocal: false, isDefinition: true, scopeLine: 277, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!1192 = distinct !DISubprogram(name: "tcp_response_waiting_client_close_retry", scope: !1089, file: !1089, line: 335, type: !1100, isLocal: false, isDefinition: true, scopeLine: 335, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!1193 = distinct !DISubprogram(name: "tcp_response_finish", scope: !1089, file: !1089, line: 339, type: !1100, isLocal: false, isDefinition: true, scopeLine: 339, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!1194 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1195, producer: "clang version 3.8.0-2ubuntu4 (tags/RELEASE_380/final)", isOptimized: false, runtimeVersion: 0, emissionKind: 1, enums: !2, retainedTypes: !973, subprograms: !1196, globals: !1207)
!1195 = !DIFile(filename: "ev_dup.c", directory: "/home/muhammad/totd/totd")
!1196 = !{!1197, !1198, !1206}
!1197 = distinct !DISubprogram(name: "ev_dup_init", scope: !1195, file: !1195, line: 44, type: !770, isLocal: false, isDefinition: true, scopeLine: 44, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!1198 = distinct !DISubprogram(name: "ev_dup", scope: !1195, file: !1195, line: 58, type: !1199, isLocal: false, isDefinition: true, scopeLine: 58, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!1199 = !DISubroutineType(types: !1200)
!1200 = !{!33, !1201, !48, !48}
!1201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1202, size: 64, align: 64)
!1202 = !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr", file: !9, line: 153, size: 128, align: 16, elements: !1203)
!1203 = !{!1204, !1205}
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "sa_family", scope: !1202, file: !9, line: 155, baseType: !12, size: 16, align: 16)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "sa_data", scope: !1202, file: !9, line: 156, baseType: !16, size: 112, align: 8, offset: 16)
!1206 = distinct !DISubprogram(name: "ev_dup_hashval", scope: !1195, file: !1195, line: 28, type: !1199, isLocal: true, isDefinition: true, scopeLine: 28, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!1207 = !{!1208}
!1208 = !DIGlobalVariable(name: "Ev_dup_table", scope: !1194, file: !1195, line: 25, type: !1209, isLocal: true, isDefinition: true, variable: [1000 x %struct.anon]* @Ev_dup_table)
!1209 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1210, size: 256000, align: 64, elements: !1221)
!1210 = !DICompositeType(tag: DW_TAG_structure_type, file: !1195, line: 17, size: 256, align: 64, elements: !1211)
!1211 = !{!1212, !1218, !1219, !1220}
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1210, file: !1195, line: 21, baseType: !1213, size: 128, align: 16)
!1213 = !DICompositeType(tag: DW_TAG_union_type, scope: !1210, file: !1195, line: 18, size: 128, align: 16, elements: !1214)
!1214 = !{!1215, !1217}
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !1213, file: !1195, line: 19, baseType: !1216, size: 128, align: 8)
!1216 = !DICompositeType(tag: DW_TAG_array_type, baseType: !21, size: 128, align: 8, elements: !623)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "sa", scope: !1213, file: !1195, line: 20, baseType: !1202, size: 128, align: 16)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "data_len", scope: !1210, file: !1195, line: 22, baseType: !48, size: 16, align: 16, offset: 128)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1210, file: !1195, line: 23, baseType: !48, size: 16, align: 16, offset: 144)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "expire", scope: !1210, file: !1195, line: 24, baseType: !103, size: 64, align: 64, offset: 192)
!1221 = !{!1222}
!1222 = !DISubrange(count: 1000)
!1223 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1224, producer: "clang version 3.8.0-2ubuntu4 (tags/RELEASE_380/final)", isOptimized: false, runtimeVersion: 0, emissionKind: 1, enums: !2, retainedTypes: !939, subprograms: !1225)
!1224 = !DIFile(filename: "list.c", directory: "/home/muhammad/totd/totd")
!1225 = !{!1226, !1237, !1240, !1241, !1245, !1248, !1251, !1257}
!1226 = distinct !DISubprogram(name: "list_init", scope: !1224, file: !1224, line: 16, type: !1227, isLocal: false, isDefinition: true, scopeLine: 16, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!1227 = !DISubroutineType(types: !1228)
!1228 = !{!1229}
!1229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1230, size: 64, align: 64)
!1230 = !DIDerivedType(tag: DW_TAG_typedef, name: "G_List", file: !29, line: 22, baseType: !1231)
!1231 = !DICompositeType(tag: DW_TAG_structure_type, name: "generic_list", file: !29, line: 18, size: 192, align: 64, elements: !1232)
!1232 = !{!1233, !1235, !1236}
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1231, file: !29, line: 19, baseType: !1234, size: 64, align: 64)
!1234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1231, size: 64, align: 64)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1231, file: !29, line: 20, baseType: !1234, size: 64, align: 64, offset: 64)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "list_data", scope: !1231, file: !29, line: 21, baseType: !26, size: 64, align: 64, offset: 128)
!1237 = distinct !DISubprogram(name: "list_add", scope: !1224, file: !1224, line: 33, type: !1238, isLocal: false, isDefinition: true, scopeLine: 33, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!1238 = !DISubroutineType(types: !1239)
!1239 = !{!33, !1229, !26}
!1240 = distinct !DISubprogram(name: "list_add_tail", scope: !1224, file: !1224, line: 51, type: !1238, isLocal: false, isDefinition: true, scopeLine: 51, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!1241 = distinct !DISubprogram(name: "list_search", scope: !1224, file: !1224, line: 69, type: !1242, isLocal: false, isDefinition: true, scopeLine: 70, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!1242 = !DISubroutineType(types: !1243)
!1243 = !{!1229, !1229, !26, !1244}
!1244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !745, size: 64, align: 64)
!1245 = distinct !DISubprogram(name: "list_delete", scope: !1224, file: !1224, line: 83, type: !1246, isLocal: false, isDefinition: true, scopeLine: 83, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!1246 = !DISubroutineType(types: !1247)
!1247 = !{!26, !1229}
!1248 = distinct !DISubprogram(name: "list_destroy", scope: !1224, file: !1224, line: 95, type: !1249, isLocal: false, isDefinition: true, scopeLine: 95, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!1249 = !DISubroutineType(types: !1250)
!1250 = !{null, !1229, !970}
!1251 = distinct !DISubprogram(name: "list_dup", scope: !1224, file: !1224, line: 118, type: !1252, isLocal: false, isDefinition: true, scopeLine: 119, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!1252 = !DISubroutineType(types: !1253)
!1253 = !{!1229, !1229, !970, !1254}
!1254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1255, size: 64, align: 64)
!1255 = !DISubroutineType(types: !1256)
!1256 = !{!26, !26}
!1257 = distinct !DISubprogram(name: "list_cat", scope: !1224, file: !1224, line: 144, type: !1258, isLocal: false, isDefinition: true, scopeLine: 144, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!1258 = !DISubroutineType(types: !1259)
!1259 = !{null, !1229, !1229}
!1260 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1261, producer: "clang version 3.8.0-2ubuntu4 (tags/RELEASE_380/final)", isOptimized: false, runtimeVersion: 0, emissionKind: 1, enums: !2, retainedTypes: !1262, subprograms: !1316)
!1261 = !DIFile(filename: "res_record.c", directory: "/home/muhammad/totd/totd")
!1262 = !{!1263, !20, !1269, !65, !1278, !26, !1310}
!1263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1264, size: 64, align: 64)
!1264 = !DIDerivedType(tag: DW_TAG_typedef, name: "RR", file: !29, line: 120, baseType: !1265)
!1265 = !DICompositeType(tag: DW_TAG_structure_type, name: "rr", file: !29, line: 117, size: 64, align: 32, elements: !1266)
!1266 = !{!1267, !1268}
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "ttl", scope: !1265, file: !29, line: 118, baseType: !72, size: 32, align: 32)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "rd_len", scope: !1265, file: !29, line: 119, baseType: !48, size: 16, align: 16, offset: 32)
!1269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1270, size: 64, align: 64)
!1270 = !DIDerivedType(tag: DW_TAG_typedef, name: "RR_List", file: !29, line: 128, baseType: !1271)
!1271 = !DICompositeType(tag: DW_TAG_structure_type, name: "rr_list", file: !29, line: 123, size: 192, align: 64, elements: !1272)
!1272 = !{!1273, !1275, !1276, !1277}
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1271, file: !29, line: 124, baseType: !1274, size: 64, align: 64)
!1274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1271, size: 64, align: 64)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "cnt", scope: !1271, file: !29, line: 125, baseType: !33, size: 32, align: 32, offset: 64)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1271, file: !29, line: 126, baseType: !33, size: 32, align: 32, offset: 96)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "rrp", scope: !1271, file: !29, line: 127, baseType: !1263, size: 64, align: 64, offset: 128)
!1278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1279, size: 64, align: 64)
!1279 = !DIDerivedType(tag: DW_TAG_typedef, name: "RRset", file: !29, line: 168, baseType: !1280)
!1280 = !DICompositeType(tag: DW_TAG_structure_type, name: "rr_set", file: !29, line: 160, size: 320, align: 64, elements: !1281)
!1281 = !{!1282, !1283, !1284, !1297, !1298}
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !1280, file: !29, line: 161, baseType: !33, size: 32, align: 32)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "key_len", scope: !1280, file: !29, line: 163, baseType: !35, size: 64, align: 64, offset: 64)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1280, file: !29, line: 164, baseType: !1285, size: 64, align: 64, offset: 128)
!1285 = !DIDerivedType(tag: DW_TAG_typedef, name: "U_Key", file: !29, line: 143, baseType: !1286)
!1286 = !DICompositeType(tag: DW_TAG_union_type, name: "u_key", file: !29, line: 140, size: 64, align: 64, elements: !1287)
!1287 = !{!1288, !1296}
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !1286, file: !29, line: 141, baseType: !1289, size: 64, align: 64)
!1289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1290, size: 64, align: 64)
!1290 = !DIDerivedType(tag: DW_TAG_typedef, name: "Key_Info", file: !29, line: 138, baseType: !1291)
!1291 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_info", file: !29, line: 134, size: 48, align: 16, elements: !1292)
!1292 = !{!1293, !1294, !1295}
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "r_type", scope: !1291, file: !29, line: 135, baseType: !48, size: 16, align: 16)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "r_class", scope: !1291, file: !29, line: 136, baseType: !48, size: 16, align: 16, offset: 16)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "owner_len", scope: !1291, file: !29, line: 137, baseType: !48, size: 16, align: 16, offset: 32)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !1286, file: !29, line: 142, baseType: !20, size: 64, align: 64)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "data_len", scope: !1280, file: !29, line: 166, baseType: !35, size: 64, align: 64, offset: 192)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1280, file: !29, line: 167, baseType: !1299, size: 64, align: 64, offset: 256)
!1299 = !DIDerivedType(tag: DW_TAG_typedef, name: "U_Data", file: !29, line: 157, baseType: !1300)
!1300 = !DICompositeType(tag: DW_TAG_union_type, name: "u_data", file: !29, line: 153, size: 64, align: 64, elements: !1301)
!1301 = !{!1302, !1308, !1309}
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !1300, file: !29, line: 154, baseType: !1303, size: 64, align: 64)
!1303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1304, size: 64, align: 64)
!1304 = !DIDerivedType(tag: DW_TAG_typedef, name: "Data_Data", file: !29, line: 151, baseType: !1305)
!1305 = !DICompositeType(tag: DW_TAG_structure_type, name: "data_data", file: !29, line: 149, size: 16, align: 16, elements: !1306)
!1306 = !{!1307}
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "data_cnt", scope: !1305, file: !29, line: 150, baseType: !48, size: 16, align: 16)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "rt_list", scope: !1300, file: !29, line: 155, baseType: !65, size: 64, align: 64)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !1300, file: !29, line: 156, baseType: !20, size: 64, align: 64)
!1310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1311, size: 64, align: 64)
!1311 = !DIDerivedType(tag: DW_TAG_typedef, name: "RRset_Couple", file: !29, line: 174, baseType: !1312)
!1312 = !DICompositeType(tag: DW_TAG_structure_type, file: !29, line: 171, size: 128, align: 64, elements: !1313)
!1313 = !{!1314, !1315}
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "rrs", scope: !1312, file: !29, line: 172, baseType: !1278, size: 64, align: 64)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "rrl", scope: !1312, file: !29, line: 173, baseType: !1269, size: 64, align: 64, offset: 64)
!1316 = !{!1317, !1320, !1323, !1326, !1329, !1332, !1335, !1338, !1341, !1344, !1345, !1348, !1351, !1352, !1353, !1354, !1357}
!1317 = distinct !DISubprogram(name: "rr_alloc", scope: !1261, file: !1261, line: 16, type: !1318, isLocal: false, isDefinition: true, scopeLine: 16, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!1318 = !DISubroutineType(types: !1319)
!1319 = !{!1263, !72, !33, !20}
!1320 = distinct !DISubprogram(name: "rr_list_alloc", scope: !1261, file: !1261, line: 35, type: !1321, isLocal: false, isDefinition: true, scopeLine: 35, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!1321 = !DISubroutineType(types: !1322)
!1322 = !{!1269}
!1323 = distinct !DISubprogram(name: "rr_list_free", scope: !1261, file: !1261, line: 52, type: !1324, isLocal: false, isDefinition: true, scopeLine: 52, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!1324 = !DISubroutineType(types: !1325)
!1325 = !{null, !1269}
!1326 = distinct !DISubprogram(name: "rr_list_add", scope: !1261, file: !1261, line: 79, type: !1327, isLocal: false, isDefinition: true, scopeLine: 79, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!1327 = !DISubroutineType(types: !1328)
!1328 = !{!1269, !1269, !72, !33, !20}
!1329 = distinct !DISubprogram(name: "rrset_get_rr_f", scope: !1261, file: !1261, line: 100, type: !1330, isLocal: false, isDefinition: true, scopeLine: 100, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!1330 = !DISubroutineType(types: !1331)
!1331 = !{!1263, !33, !1278}
!1332 = distinct !DISubprogram(name: "rr_list_of_rrset", scope: !1261, file: !1261, line: 108, type: !1333, isLocal: false, isDefinition: true, scopeLine: 108, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!1333 = !DISubroutineType(types: !1334)
!1334 = !{!1269, !1278}
!1335 = distinct !DISubprogram(name: "rrset_alloc", scope: !1261, file: !1261, line: 133, type: !1336, isLocal: false, isDefinition: true, scopeLine: 133, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!1336 = !DISubroutineType(types: !1337)
!1337 = !{!1278}
!1338 = distinct !DISubprogram(name: "rrset_create", scope: !1261, file: !1261, line: 154, type: !1339, isLocal: false, isDefinition: true, scopeLine: 155, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!1339 = !DISubroutineType(types: !1340)
!1340 = !{!1278, !48, !48, !48, !20, !1269}
!1341 = distinct !DISubprogram(name: "rrset_create_single", scope: !1261, file: !1261, line: 216, type: !1342, isLocal: false, isDefinition: true, scopeLine: 218, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!1342 = !DISubroutineType(types: !1343)
!1343 = !{!1278, !20, !33, !48, !48, !72, !48, !20}
!1344 = distinct !DISubprogram(name: "rrset_freev", scope: !1261, file: !1261, line: 243, type: !865, isLocal: false, isDefinition: true, scopeLine: 243, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!1345 = distinct !DISubprogram(name: "rrset_free", scope: !1261, file: !1261, line: 248, type: !1346, isLocal: false, isDefinition: true, scopeLine: 248, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!1346 = !DISubroutineType(types: !1347)
!1347 = !{null, !1278}
!1348 = distinct !DISubprogram(name: "rrset_copy", scope: !1261, file: !1261, line: 270, type: !1349, isLocal: false, isDefinition: true, scopeLine: 270, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!1349 = !DISubroutineType(types: !1350)
!1350 = !{!1278, !1278}
!1351 = distinct !DISubprogram(name: "rrset_copyv", scope: !1261, file: !1261, line: 279, type: !1255, isLocal: false, isDefinition: true, scopeLine: 279, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!1352 = distinct !DISubprogram(name: "rrset_dupv", scope: !1261, file: !1261, line: 283, type: !1255, isLocal: false, isDefinition: true, scopeLine: 283, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!1353 = distinct !DISubprogram(name: "rrset_dup", scope: !1261, file: !1261, line: 287, type: !1349, isLocal: false, isDefinition: true, scopeLine: 287, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!1354 = distinct !DISubprogram(name: "rrset_couple_free", scope: !1261, file: !1261, line: 322, type: !1355, isLocal: false, isDefinition: true, scopeLine: 322, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!1355 = !DISubroutineType(types: !1356)
!1356 = !{null, !1310}
!1357 = distinct !DISubprogram(name: "rrset_couple_freev", scope: !1261, file: !1261, line: 332, type: !865, isLocal: false, isDefinition: true, scopeLine: 332, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!1358 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1359, producer: "clang version 3.8.0-2ubuntu4 (tags/RELEASE_380/final)", isOptimized: false, runtimeVersion: 0, emissionKind: 1, enums: !2, retainedTypes: !1360, subprograms: !1366)
!1359 = !DIFile(filename: "udp_request.c", directory: "/home/muhammad/totd/totd")
!1360 = !{!1361}
!1361 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1362, size: 64, align: 64)
!1362 = !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr", file: !9, line: 153, size: 128, align: 16, elements: !1363)
!1363 = !{!1364, !1365}
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "sa_family", scope: !1362, file: !9, line: 155, baseType: !12, size: 16, align: 16)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "sa_data", scope: !1362, file: !9, line: 156, baseType: !16, size: 112, align: 8, offset: 16)
!1366 = !{!1367, !1448, !1453}
!1367 = distinct !DISubprogram(name: "udp_request_start", scope: !1359, file: !1359, line: 25, type: !1368, isLocal: false, isDefinition: true, scopeLine: 25, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!1368 = !DISubroutineType(types: !1369)
!1369 = !{!33, !1370}
!1370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1371, size: 64, align: 64)
!1371 = !DICompositeType(tag: DW_TAG_structure_type, name: "context", file: !29, line: 180, size: 3264, align: 64, elements: !1372)
!1372 = !{!1373, !1374, !1375, !1376, !1377, !1386, !1387, !1402, !1404, !1405, !1406, !1407, !1408, !1409, !1410, !1411, !1412, !1434, !1435, !1436, !1444, !1445, !1446, !1447}
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1371, file: !29, line: 181, baseType: !1370, size: 64, align: 64)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !1371, file: !29, line: 182, baseType: !1370, size: 64, align: 64, offset: 64)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "work_state", scope: !1371, file: !29, line: 185, baseType: !33, size: 32, align: 32, offset: 128)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "cname_links", scope: !1371, file: !29, line: 191, baseType: !33, size: 32, align: 32, offset: 160)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "nameservers", scope: !1371, file: !29, line: 192, baseType: !1378, size: 64, align: 64, offset: 192)
!1378 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1379, size: 64, align: 64)
!1379 = !DIDerivedType(tag: DW_TAG_typedef, name: "G_List", file: !29, line: 22, baseType: !1380)
!1380 = !DICompositeType(tag: DW_TAG_structure_type, name: "generic_list", file: !29, line: 18, size: 192, align: 64, elements: !1381)
!1381 = !{!1382, !1384, !1385}
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1380, file: !29, line: 19, baseType: !1383, size: 64, align: 64)
!1383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1380, size: 64, align: 64)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1380, file: !29, line: 20, baseType: !1383, size: 64, align: 64, offset: 64)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "list_data", scope: !1380, file: !29, line: 21, baseType: !26, size: 64, align: 64, offset: 128)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "current_ns", scope: !1371, file: !29, line: 193, baseType: !1378, size: 64, align: 64, offset: 256)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "tout", scope: !1371, file: !29, line: 196, baseType: !1388, size: 64, align: 64, offset: 320)
!1388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1389, size: 64, align: 64)
!1389 = !DICompositeType(tag: DW_TAG_structure_type, name: "ev_to_data", file: !29, line: 244, size: 256, align: 64, elements: !1390)
!1390 = !{!1391, !1392, !1396, !1397}
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "at", scope: !1389, file: !29, line: 245, baseType: !103, size: 64, align: 64)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1389, file: !29, line: 246, baseType: !1393, size: 64, align: 64, offset: 64)
!1393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1394, size: 64, align: 64)
!1394 = !DISubroutineType(types: !1395)
!1395 = !{!33, !1388}
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1389, file: !29, line: 247, baseType: !33, size: 32, align: 32, offset: 128)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1389, file: !29, line: 251, baseType: !1398, size: 64, align: 64, offset: 192)
!1398 = !DICompositeType(tag: DW_TAG_union_type, scope: !1389, file: !29, line: 248, size: 64, align: 64, elements: !1399)
!1399 = !{!1400, !1401}
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !1398, file: !29, line: 249, baseType: !26, size: 64, align: 64)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "cont", scope: !1398, file: !29, line: 250, baseType: !1370, size: 64, align: 64)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "process", scope: !1371, file: !29, line: 197, baseType: !1403, size: 64, align: 64, offset: 384)
!1403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1368, size: 64, align: 64)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "retry", scope: !1371, file: !29, line: 198, baseType: !1403, size: 64, align: 64, offset: 448)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "qname", scope: !1371, file: !29, line: 201, baseType: !123, size: 2048, align: 8, offset: 512)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "q_id", scope: !1371, file: !29, line: 202, baseType: !72, size: 32, align: 32, offset: 2560)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "q_class", scope: !1371, file: !29, line: 203, baseType: !48, size: 16, align: 16, offset: 2592)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "q_type", scope: !1371, file: !29, line: 204, baseType: !48, size: 16, align: 16, offset: 2608)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "an_list", scope: !1371, file: !29, line: 207, baseType: !1378, size: 64, align: 64, offset: 2624)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "ns_list", scope: !1371, file: !29, line: 208, baseType: !1378, size: 64, align: 64, offset: 2688)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "ar_list", scope: !1371, file: !29, line: 209, baseType: !1378, size: 64, align: 64, offset: 2752)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "mesg", scope: !1371, file: !29, line: 215, baseType: !1413, size: 64, align: 64, offset: 2816)
!1413 = !DICompositeType(tag: DW_TAG_union_type, scope: !1371, file: !29, line: 212, size: 64, align: 64, elements: !1414)
!1414 = !{!1415, !1433}
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "hdr", scope: !1413, file: !29, line: 213, baseType: !1416, size: 64, align: 64)
!1416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1417, size: 64, align: 64)
!1417 = !DIDerivedType(tag: DW_TAG_typedef, name: "Mesg_Hdr", file: !29, line: 102, baseType: !1418)
!1418 = !DICompositeType(tag: DW_TAG_structure_type, name: "mesg_hdr", file: !29, line: 71, size: 96, align: 16, elements: !1419)
!1419 = !{!1420, !1421, !1422, !1423, !1424, !1425, !1426, !1427, !1428, !1429, !1430, !1431, !1432}
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1418, file: !29, line: 72, baseType: !48, size: 16, align: 16)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "rd", scope: !1418, file: !29, line: 86, baseType: !21, size: 1, align: 8, offset: 16)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "tc", scope: !1418, file: !29, line: 87, baseType: !21, size: 1, align: 8, offset: 17)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "aa", scope: !1418, file: !29, line: 88, baseType: !21, size: 1, align: 8, offset: 18)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "opcode", scope: !1418, file: !29, line: 89, baseType: !21, size: 4, align: 8, offset: 19)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "qr", scope: !1418, file: !29, line: 90, baseType: !21, size: 1, align: 8, offset: 23)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "rcode", scope: !1418, file: !29, line: 92, baseType: !21, size: 4, align: 8, offset: 24)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "zero", scope: !1418, file: !29, line: 93, baseType: !21, size: 3, align: 8, offset: 28)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "ra", scope: !1418, file: !29, line: 94, baseType: !21, size: 1, align: 8, offset: 31)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "qdcnt", scope: !1418, file: !29, line: 98, baseType: !48, size: 16, align: 16, offset: 32)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "ancnt", scope: !1418, file: !29, line: 99, baseType: !48, size: 16, align: 16, offset: 48)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "nscnt", scope: !1418, file: !29, line: 100, baseType: !48, size: 16, align: 16, offset: 64)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "arcnt", scope: !1418, file: !29, line: 101, baseType: !48, size: 16, align: 16, offset: 80)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !1413, file: !29, line: 214, baseType: !20, size: 64, align: 64)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "mesg_len", scope: !1371, file: !29, line: 216, baseType: !33, size: 32, align: 32, offset: 2880)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "wp", scope: !1371, file: !29, line: 217, baseType: !20, size: 64, align: 64, offset: 2944)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "netifaddr", scope: !1371, file: !29, line: 220, baseType: !1437, size: 64, align: 64, offset: 3008)
!1437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1438, size: 64, align: 64)
!1438 = !DIDerivedType(tag: DW_TAG_typedef, name: "Nia", file: !29, line: 65, baseType: !1439)
!1439 = !DICompositeType(tag: DW_TAG_structure_type, name: "nia", file: !29, line: 61, size: 128, align: 64, elements: !1440)
!1440 = !{!1441, !1442, !1443}
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "sa_p", scope: !1439, file: !29, line: 62, baseType: !1361, size: 64, align: 64)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "udp_sock", scope: !1439, file: !29, line: 63, baseType: !33, size: 32, align: 32, offset: 64)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_sock", scope: !1439, file: !29, line: 64, baseType: !33, size: 32, align: 32, offset: 96)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "retry_count", scope: !1371, file: !29, line: 221, baseType: !48, size: 16, align: 16, offset: 3072)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1371, file: !29, line: 222, baseType: !48, size: 16, align: 16, offset: 3088)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "peer", scope: !1371, file: !29, line: 225, baseType: !1361, size: 64, align: 64, offset: 3136)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "conn_sock", scope: !1371, file: !29, line: 227, baseType: !33, size: 32, align: 32, offset: 3200)
!1448 = distinct !DISubprogram(name: "udp_request_process", scope: !1359, file: !1359, line: 66, type: !1449, isLocal: false, isDefinition: true, scopeLine: 66, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!1449 = !DISubroutineType(types: !1450)
!1450 = !{!33, !1451}
!1451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1452, size: 64, align: 64)
!1452 = !DIDerivedType(tag: DW_TAG_typedef, name: "Context", file: !29, line: 228, baseType: !1371)
!1453 = distinct !DISubprogram(name: "udp_request_retry", scope: !1359, file: !1359, line: 93, type: !1449, isLocal: false, isDefinition: true, scopeLine: 93, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!1454 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1455, producer: "clang version 3.8.0-2ubuntu4 (tags/RELEASE_380/final)", isOptimized: false, runtimeVersion: 0, emissionKind: 1, enums: !2, retainedTypes: !1456, subprograms: !1544, globals: !1560)
!1455 = !DIFile(filename: "ev_timeout.c", directory: "/home/muhammad/totd/totd")
!1456 = !{!1457, !26}
!1457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1458, size: 64, align: 64)
!1458 = !DIDerivedType(tag: DW_TAG_typedef, name: "Ev_TO_Data", file: !29, line: 252, baseType: !1459)
!1459 = !DICompositeType(tag: DW_TAG_structure_type, name: "ev_to_data", file: !29, line: 244, size: 256, align: 64, elements: !1460)
!1460 = !{!1461, !1462, !1467, !1468}
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "at", scope: !1459, file: !29, line: 245, baseType: !103, size: 64, align: 64)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1459, file: !29, line: 246, baseType: !1463, size: 64, align: 64, offset: 64)
!1463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1464, size: 64, align: 64)
!1464 = !DISubroutineType(types: !1465)
!1465 = !{!33, !1466}
!1466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1459, size: 64, align: 64)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1459, file: !29, line: 247, baseType: !33, size: 32, align: 32, offset: 128)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1459, file: !29, line: 251, baseType: !1469, size: 64, align: 64, offset: 192)
!1469 = !DICompositeType(tag: DW_TAG_union_type, scope: !1459, file: !29, line: 248, size: 64, align: 64, elements: !1470)
!1470 = !{!1471, !1472}
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !1469, file: !29, line: 249, baseType: !26, size: 64, align: 64)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "cont", scope: !1469, file: !29, line: 250, baseType: !1473, size: 64, align: 64)
!1473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1474, size: 64, align: 64)
!1474 = !DICompositeType(tag: DW_TAG_structure_type, name: "context", file: !29, line: 180, size: 3264, align: 64, elements: !1475)
!1475 = !{!1476, !1477, !1478, !1479, !1480, !1489, !1490, !1491, !1495, !1496, !1497, !1498, !1499, !1500, !1501, !1502, !1503, !1525, !1526, !1527, !1540, !1541, !1542, !1543}
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1474, file: !29, line: 181, baseType: !1473, size: 64, align: 64)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !1474, file: !29, line: 182, baseType: !1473, size: 64, align: 64, offset: 64)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "work_state", scope: !1474, file: !29, line: 185, baseType: !33, size: 32, align: 32, offset: 128)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "cname_links", scope: !1474, file: !29, line: 191, baseType: !33, size: 32, align: 32, offset: 160)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "nameservers", scope: !1474, file: !29, line: 192, baseType: !1481, size: 64, align: 64, offset: 192)
!1481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1482, size: 64, align: 64)
!1482 = !DIDerivedType(tag: DW_TAG_typedef, name: "G_List", file: !29, line: 22, baseType: !1483)
!1483 = !DICompositeType(tag: DW_TAG_structure_type, name: "generic_list", file: !29, line: 18, size: 192, align: 64, elements: !1484)
!1484 = !{!1485, !1487, !1488}
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1483, file: !29, line: 19, baseType: !1486, size: 64, align: 64)
!1486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1483, size: 64, align: 64)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1483, file: !29, line: 20, baseType: !1486, size: 64, align: 64, offset: 64)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "list_data", scope: !1483, file: !29, line: 21, baseType: !26, size: 64, align: 64, offset: 128)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "current_ns", scope: !1474, file: !29, line: 193, baseType: !1481, size: 64, align: 64, offset: 256)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "tout", scope: !1474, file: !29, line: 196, baseType: !1466, size: 64, align: 64, offset: 320)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "process", scope: !1474, file: !29, line: 197, baseType: !1492, size: 64, align: 64, offset: 384)
!1492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1493, size: 64, align: 64)
!1493 = !DISubroutineType(types: !1494)
!1494 = !{!33, !1473}
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "retry", scope: !1474, file: !29, line: 198, baseType: !1492, size: 64, align: 64, offset: 448)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "qname", scope: !1474, file: !29, line: 201, baseType: !123, size: 2048, align: 8, offset: 512)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "q_id", scope: !1474, file: !29, line: 202, baseType: !72, size: 32, align: 32, offset: 2560)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "q_class", scope: !1474, file: !29, line: 203, baseType: !48, size: 16, align: 16, offset: 2592)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "q_type", scope: !1474, file: !29, line: 204, baseType: !48, size: 16, align: 16, offset: 2608)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "an_list", scope: !1474, file: !29, line: 207, baseType: !1481, size: 64, align: 64, offset: 2624)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "ns_list", scope: !1474, file: !29, line: 208, baseType: !1481, size: 64, align: 64, offset: 2688)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "ar_list", scope: !1474, file: !29, line: 209, baseType: !1481, size: 64, align: 64, offset: 2752)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "mesg", scope: !1474, file: !29, line: 215, baseType: !1504, size: 64, align: 64, offset: 2816)
!1504 = !DICompositeType(tag: DW_TAG_union_type, scope: !1474, file: !29, line: 212, size: 64, align: 64, elements: !1505)
!1505 = !{!1506, !1524}
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "hdr", scope: !1504, file: !29, line: 213, baseType: !1507, size: 64, align: 64)
!1507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1508, size: 64, align: 64)
!1508 = !DIDerivedType(tag: DW_TAG_typedef, name: "Mesg_Hdr", file: !29, line: 102, baseType: !1509)
!1509 = !DICompositeType(tag: DW_TAG_structure_type, name: "mesg_hdr", file: !29, line: 71, size: 96, align: 16, elements: !1510)
!1510 = !{!1511, !1512, !1513, !1514, !1515, !1516, !1517, !1518, !1519, !1520, !1521, !1522, !1523}
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1509, file: !29, line: 72, baseType: !48, size: 16, align: 16)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "rd", scope: !1509, file: !29, line: 86, baseType: !21, size: 1, align: 8, offset: 16)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "tc", scope: !1509, file: !29, line: 87, baseType: !21, size: 1, align: 8, offset: 17)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "aa", scope: !1509, file: !29, line: 88, baseType: !21, size: 1, align: 8, offset: 18)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "opcode", scope: !1509, file: !29, line: 89, baseType: !21, size: 4, align: 8, offset: 19)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "qr", scope: !1509, file: !29, line: 90, baseType: !21, size: 1, align: 8, offset: 23)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "rcode", scope: !1509, file: !29, line: 92, baseType: !21, size: 4, align: 8, offset: 24)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "zero", scope: !1509, file: !29, line: 93, baseType: !21, size: 3, align: 8, offset: 28)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "ra", scope: !1509, file: !29, line: 94, baseType: !21, size: 1, align: 8, offset: 31)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "qdcnt", scope: !1509, file: !29, line: 98, baseType: !48, size: 16, align: 16, offset: 32)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "ancnt", scope: !1509, file: !29, line: 99, baseType: !48, size: 16, align: 16, offset: 48)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "nscnt", scope: !1509, file: !29, line: 100, baseType: !48, size: 16, align: 16, offset: 64)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "arcnt", scope: !1509, file: !29, line: 101, baseType: !48, size: 16, align: 16, offset: 80)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !1504, file: !29, line: 214, baseType: !20, size: 64, align: 64)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "mesg_len", scope: !1474, file: !29, line: 216, baseType: !33, size: 32, align: 32, offset: 2880)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "wp", scope: !1474, file: !29, line: 217, baseType: !20, size: 64, align: 64, offset: 2944)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "netifaddr", scope: !1474, file: !29, line: 220, baseType: !1528, size: 64, align: 64, offset: 3008)
!1528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1529, size: 64, align: 64)
!1529 = !DIDerivedType(tag: DW_TAG_typedef, name: "Nia", file: !29, line: 65, baseType: !1530)
!1530 = !DICompositeType(tag: DW_TAG_structure_type, name: "nia", file: !29, line: 61, size: 128, align: 64, elements: !1531)
!1531 = !{!1532, !1538, !1539}
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "sa_p", scope: !1530, file: !29, line: 62, baseType: !1533, size: 64, align: 64)
!1533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1534, size: 64, align: 64)
!1534 = !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr", file: !9, line: 153, size: 128, align: 16, elements: !1535)
!1535 = !{!1536, !1537}
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "sa_family", scope: !1534, file: !9, line: 155, baseType: !12, size: 16, align: 16)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "sa_data", scope: !1534, file: !9, line: 156, baseType: !16, size: 112, align: 8, offset: 16)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "udp_sock", scope: !1530, file: !29, line: 63, baseType: !33, size: 32, align: 32, offset: 64)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_sock", scope: !1530, file: !29, line: 64, baseType: !33, size: 32, align: 32, offset: 96)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "retry_count", scope: !1474, file: !29, line: 221, baseType: !48, size: 16, align: 16, offset: 3072)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1474, file: !29, line: 222, baseType: !48, size: 16, align: 16, offset: 3088)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "peer", scope: !1474, file: !29, line: 225, baseType: !1533, size: 64, align: 64, offset: 3136)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "conn_sock", scope: !1474, file: !29, line: 227, baseType: !33, size: 32, align: 32, offset: 3200)
!1544 = !{!1545, !1546, !1549, !1552, !1555, !1556, !1557, !1558, !1559}
!1545 = distinct !DISubprogram(name: "ev_to_init", scope: !1455, file: !1455, line: 18, type: !767, isLocal: false, isDefinition: true, scopeLine: 18, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!1546 = distinct !DISubprogram(name: "ev_to_register", scope: !1455, file: !1455, line: 30, type: !1547, isLocal: false, isDefinition: true, scopeLine: 30, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!1547 = !DISubroutineType(types: !1548)
!1548 = !{!33, !1457}
!1549 = distinct !DISubprogram(name: "ev_timeout_process", scope: !1455, file: !1455, line: 84, type: !1550, isLocal: false, isDefinition: true, scopeLine: 84, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!1550 = !DISubroutineType(types: !1551)
!1551 = !{!103}
!1552 = distinct !DISubprogram(name: "ev_to_data_free", scope: !1455, file: !1455, line: 112, type: !1553, isLocal: false, isDefinition: true, scopeLine: 112, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!1553 = !DISubroutineType(types: !1554)
!1554 = !{null, !1457}
!1555 = distinct !DISubprogram(name: "ev_to_data_free_v", scope: !1455, file: !1455, line: 134, type: !865, isLocal: false, isDefinition: true, scopeLine: 134, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!1556 = distinct !DISubprogram(name: "ev_to_finish", scope: !1455, file: !1455, line: 138, type: !770, isLocal: false, isDefinition: true, scopeLine: 138, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!1557 = distinct !DISubprogram(name: "ev_to_flush", scope: !1455, file: !1455, line: 142, type: !471, isLocal: false, isDefinition: true, scopeLine: 142, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!1558 = distinct !DISubprogram(name: "ev_to_register_ifcheck", scope: !1455, file: !1455, line: 160, type: !767, isLocal: false, isDefinition: true, scopeLine: 160, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!1559 = distinct !DISubprogram(name: "ev_to_handler_ifcheck", scope: !1455, file: !1455, line: 184, type: !1547, isLocal: false, isDefinition: true, scopeLine: 184, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!1560 = !{!1561}
!1561 = !DIGlobalVariable(name: "ev_to_queue", scope: !1454, file: !1455, line: 16, type: !1562, isLocal: true, isDefinition: true, variable: %struct.qset** @ev_to_queue)
!1562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1563, size: 64, align: 64)
!1563 = !DIDerivedType(tag: DW_TAG_typedef, name: "Q_Set", file: !29, line: 38, baseType: !1564)
!1564 = !DICompositeType(tag: DW_TAG_structure_type, name: "qset", file: !29, line: 35, size: 128, align: 64, elements: !1565)
!1565 = !{!1566, !1572}
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1564, file: !29, line: 36, baseType: !1567, size: 64, align: 64)
!1567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1568, size: 64, align: 64)
!1568 = !DICompositeType(tag: DW_TAG_structure_type, name: "gqueue", file: !29, line: 29, size: 128, align: 64, elements: !1569)
!1569 = !{!1570, !1571}
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1568, file: !29, line: 30, baseType: !1567, size: 64, align: 64)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !1568, file: !29, line: 31, baseType: !26, size: 64, align: 64, offset: 64)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1564, file: !29, line: 37, baseType: !1567, size: 64, align: 64, offset: 64)
!1573 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1574, producer: "clang version 3.8.0-2ubuntu4 (tags/RELEASE_380/final)", isOptimized: false, runtimeVersion: 0, emissionKind: 1, enums: !2, subprograms: !1575)
!1574 = !DIFile(filename: "udp_response.c", directory: "/home/muhammad/totd/totd")
!1575 = !{!1576, !1591, !1669, !1670}
!1576 = distinct !DISubprogram(name: "udp_response_start", scope: !1574, file: !1574, line: 31, type: !1577, isLocal: false, isDefinition: true, scopeLine: 32, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!1577 = !DISubroutineType(types: !1578)
!1578 = !{!33, !20, !33, !1579, !1584}
!1579 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1580, size: 64, align: 64)
!1580 = !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr", file: !9, line: 153, size: 128, align: 16, elements: !1581)
!1581 = !{!1582, !1583}
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "sa_family", scope: !1580, file: !9, line: 155, baseType: !12, size: 16, align: 16)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "sa_data", scope: !1580, file: !9, line: 156, baseType: !16, size: 112, align: 8, offset: 16)
!1584 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1585, size: 64, align: 64)
!1585 = !DIDerivedType(tag: DW_TAG_typedef, name: "Nia", file: !29, line: 65, baseType: !1586)
!1586 = !DICompositeType(tag: DW_TAG_structure_type, name: "nia", file: !29, line: 61, size: 128, align: 64, elements: !1587)
!1587 = !{!1588, !1589, !1590}
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "sa_p", scope: !1586, file: !29, line: 62, baseType: !1579, size: 64, align: 64)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "udp_sock", scope: !1586, file: !29, line: 63, baseType: !33, size: 32, align: 32, offset: 64)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_sock", scope: !1586, file: !29, line: 64, baseType: !33, size: 32, align: 32, offset: 96)
!1591 = distinct !DISubprogram(name: "udp_response_recursive_process", scope: !1574, file: !1574, line: 85, type: !1592, isLocal: false, isDefinition: true, scopeLine: 85, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!1592 = !DISubroutineType(types: !1593)
!1593 = !{!33, !1594}
!1594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1595, size: 64, align: 64)
!1595 = !DIDerivedType(tag: DW_TAG_typedef, name: "Context", file: !29, line: 228, baseType: !1596)
!1596 = !DICompositeType(tag: DW_TAG_structure_type, name: "context", file: !29, line: 180, size: 3264, align: 64, elements: !1597)
!1597 = !{!1598, !1600, !1601, !1602, !1603, !1612, !1613, !1628, !1632, !1633, !1634, !1635, !1636, !1637, !1638, !1639, !1640, !1662, !1663, !1664, !1665, !1666, !1667, !1668}
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1596, file: !29, line: 181, baseType: !1599, size: 64, align: 64)
!1599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1596, size: 64, align: 64)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !1596, file: !29, line: 182, baseType: !1599, size: 64, align: 64, offset: 64)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "work_state", scope: !1596, file: !29, line: 185, baseType: !33, size: 32, align: 32, offset: 128)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "cname_links", scope: !1596, file: !29, line: 191, baseType: !33, size: 32, align: 32, offset: 160)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "nameservers", scope: !1596, file: !29, line: 192, baseType: !1604, size: 64, align: 64, offset: 192)
!1604 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1605, size: 64, align: 64)
!1605 = !DIDerivedType(tag: DW_TAG_typedef, name: "G_List", file: !29, line: 22, baseType: !1606)
!1606 = !DICompositeType(tag: DW_TAG_structure_type, name: "generic_list", file: !29, line: 18, size: 192, align: 64, elements: !1607)
!1607 = !{!1608, !1610, !1611}
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1606, file: !29, line: 19, baseType: !1609, size: 64, align: 64)
!1609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1606, size: 64, align: 64)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1606, file: !29, line: 20, baseType: !1609, size: 64, align: 64, offset: 64)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "list_data", scope: !1606, file: !29, line: 21, baseType: !26, size: 64, align: 64, offset: 128)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "current_ns", scope: !1596, file: !29, line: 193, baseType: !1604, size: 64, align: 64, offset: 256)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "tout", scope: !1596, file: !29, line: 196, baseType: !1614, size: 64, align: 64, offset: 320)
!1614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1615, size: 64, align: 64)
!1615 = !DICompositeType(tag: DW_TAG_structure_type, name: "ev_to_data", file: !29, line: 244, size: 256, align: 64, elements: !1616)
!1616 = !{!1617, !1618, !1622, !1623}
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "at", scope: !1615, file: !29, line: 245, baseType: !103, size: 64, align: 64)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1615, file: !29, line: 246, baseType: !1619, size: 64, align: 64, offset: 64)
!1619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1620, size: 64, align: 64)
!1620 = !DISubroutineType(types: !1621)
!1621 = !{!33, !1614}
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1615, file: !29, line: 247, baseType: !33, size: 32, align: 32, offset: 128)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1615, file: !29, line: 251, baseType: !1624, size: 64, align: 64, offset: 192)
!1624 = !DICompositeType(tag: DW_TAG_union_type, scope: !1615, file: !29, line: 248, size: 64, align: 64, elements: !1625)
!1625 = !{!1626, !1627}
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !1624, file: !29, line: 249, baseType: !26, size: 64, align: 64)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "cont", scope: !1624, file: !29, line: 250, baseType: !1599, size: 64, align: 64)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "process", scope: !1596, file: !29, line: 197, baseType: !1629, size: 64, align: 64, offset: 384)
!1629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1630, size: 64, align: 64)
!1630 = !DISubroutineType(types: !1631)
!1631 = !{!33, !1599}
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "retry", scope: !1596, file: !29, line: 198, baseType: !1629, size: 64, align: 64, offset: 448)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "qname", scope: !1596, file: !29, line: 201, baseType: !123, size: 2048, align: 8, offset: 512)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "q_id", scope: !1596, file: !29, line: 202, baseType: !72, size: 32, align: 32, offset: 2560)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "q_class", scope: !1596, file: !29, line: 203, baseType: !48, size: 16, align: 16, offset: 2592)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "q_type", scope: !1596, file: !29, line: 204, baseType: !48, size: 16, align: 16, offset: 2608)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "an_list", scope: !1596, file: !29, line: 207, baseType: !1604, size: 64, align: 64, offset: 2624)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "ns_list", scope: !1596, file: !29, line: 208, baseType: !1604, size: 64, align: 64, offset: 2688)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "ar_list", scope: !1596, file: !29, line: 209, baseType: !1604, size: 64, align: 64, offset: 2752)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "mesg", scope: !1596, file: !29, line: 215, baseType: !1641, size: 64, align: 64, offset: 2816)
!1641 = !DICompositeType(tag: DW_TAG_union_type, scope: !1596, file: !29, line: 212, size: 64, align: 64, elements: !1642)
!1642 = !{!1643, !1661}
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "hdr", scope: !1641, file: !29, line: 213, baseType: !1644, size: 64, align: 64)
!1644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1645, size: 64, align: 64)
!1645 = !DIDerivedType(tag: DW_TAG_typedef, name: "Mesg_Hdr", file: !29, line: 102, baseType: !1646)
!1646 = !DICompositeType(tag: DW_TAG_structure_type, name: "mesg_hdr", file: !29, line: 71, size: 96, align: 16, elements: !1647)
!1647 = !{!1648, !1649, !1650, !1651, !1652, !1653, !1654, !1655, !1656, !1657, !1658, !1659, !1660}
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1646, file: !29, line: 72, baseType: !48, size: 16, align: 16)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "rd", scope: !1646, file: !29, line: 86, baseType: !21, size: 1, align: 8, offset: 16)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "tc", scope: !1646, file: !29, line: 87, baseType: !21, size: 1, align: 8, offset: 17)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "aa", scope: !1646, file: !29, line: 88, baseType: !21, size: 1, align: 8, offset: 18)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "opcode", scope: !1646, file: !29, line: 89, baseType: !21, size: 4, align: 8, offset: 19)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "qr", scope: !1646, file: !29, line: 90, baseType: !21, size: 1, align: 8, offset: 23)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "rcode", scope: !1646, file: !29, line: 92, baseType: !21, size: 4, align: 8, offset: 24)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "zero", scope: !1646, file: !29, line: 93, baseType: !21, size: 3, align: 8, offset: 28)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "ra", scope: !1646, file: !29, line: 94, baseType: !21, size: 1, align: 8, offset: 31)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "qdcnt", scope: !1646, file: !29, line: 98, baseType: !48, size: 16, align: 16, offset: 32)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "ancnt", scope: !1646, file: !29, line: 99, baseType: !48, size: 16, align: 16, offset: 48)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "nscnt", scope: !1646, file: !29, line: 100, baseType: !48, size: 16, align: 16, offset: 64)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "arcnt", scope: !1646, file: !29, line: 101, baseType: !48, size: 16, align: 16, offset: 80)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !1641, file: !29, line: 214, baseType: !20, size: 64, align: 64)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "mesg_len", scope: !1596, file: !29, line: 216, baseType: !33, size: 32, align: 32, offset: 2880)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "wp", scope: !1596, file: !29, line: 217, baseType: !20, size: 64, align: 64, offset: 2944)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "netifaddr", scope: !1596, file: !29, line: 220, baseType: !1584, size: 64, align: 64, offset: 3008)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "retry_count", scope: !1596, file: !29, line: 221, baseType: !48, size: 16, align: 16, offset: 3072)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1596, file: !29, line: 222, baseType: !48, size: 16, align: 16, offset: 3088)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "peer", scope: !1596, file: !29, line: 225, baseType: !1579, size: 64, align: 64, offset: 3136)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "conn_sock", scope: !1596, file: !29, line: 227, baseType: !33, size: 32, align: 32, offset: 3200)
!1669 = distinct !DISubprogram(name: "udp_response_recursive_retry", scope: !1574, file: !1574, line: 100, type: !1592, isLocal: false, isDefinition: true, scopeLine: 100, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!1670 = distinct !DISubprogram(name: "udp_response_finish", scope: !1574, file: !1574, line: 105, type: !1592, isLocal: false, isDefinition: true, scopeLine: 105, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!1671 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1672, producer: "clang version 3.8.0-2ubuntu4 (tags/RELEASE_380/final)", isOptimized: false, runtimeVersion: 0, emissionKind: 1, enums: !2, retainedTypes: !1673, subprograms: !1680, globals: !1688)
!1672 = !DIFile(filename: "ev_signal.c", directory: "/home/muhammad/totd/totd")
!1673 = !{!1674, !26}
!1674 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1675, size: 64, align: 64)
!1675 = !DIDerivedType(tag: DW_TAG_typedef, name: "Ev_Sig_Data", file: !29, line: 236, baseType: !1676)
!1676 = !DICompositeType(tag: DW_TAG_structure_type, name: "ev_sig_data", file: !29, line: 234, size: 64, align: 64, elements: !1677)
!1677 = !{!1678}
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1676, file: !29, line: 235, baseType: !1679, size: 64, align: 64)
!1679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !770, size: 64, align: 64)
!1680 = !{!1681, !1682, !1683, !1684, !1685, !1686, !1687}
!1681 = distinct !DISubprogram(name: "ev_signal_init", scope: !1672, file: !1672, line: 100, type: !767, isLocal: false, isDefinition: true, scopeLine: 100, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!1682 = distinct !DISubprogram(name: "ev_signal_process", scope: !1672, file: !1672, line: 118, type: !770, isLocal: false, isDefinition: true, scopeLine: 118, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!1683 = distinct !DISubprogram(name: "ev_signal_finish", scope: !1672, file: !1672, line: 133, type: !770, isLocal: false, isDefinition: true, scopeLine: 133, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!1684 = distinct !DISubprogram(name: "ev_signal_initiator_generic", scope: !1672, file: !1672, line: 53, type: !471, isLocal: true, isDefinition: true, scopeLine: 53, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!1685 = distinct !DISubprogram(name: "ev_handler_sigusr1", scope: !1672, file: !1672, line: 83, type: !770, isLocal: true, isDefinition: true, scopeLine: 83, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!1686 = distinct !DISubprogram(name: "ev_handler_sigusr2", scope: !1672, file: !1672, line: 87, type: !770, isLocal: true, isDefinition: true, scopeLine: 87, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!1687 = distinct !DISubprogram(name: "ev_handler_cleanup", scope: !1672, file: !1672, line: 91, type: !770, isLocal: true, isDefinition: true, scopeLine: 91, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!1688 = !{!1689, !1700}
!1689 = !DIGlobalVariable(name: "Ev_matrix", scope: !1671, file: !1672, line: 26, type: !1690, isLocal: false, isDefinition: true, variable: [6 x %struct.anon.124]* @Ev_matrix)
!1690 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1691, size: 1152, align: 64, elements: !1698)
!1691 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1692)
!1692 = !DICompositeType(tag: DW_TAG_structure_type, file: !1672, line: 22, size: 192, align: 64, elements: !1693)
!1693 = !{!1694, !1695, !1697}
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "signal_id", scope: !1692, file: !1672, line: 23, baseType: !33, size: 32, align: 32)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "initiator", scope: !1692, file: !1672, line: 24, baseType: !1696, size: 64, align: 64, offset: 64)
!1696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !471, size: 64, align: 64)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1692, file: !1672, line: 25, baseType: !1679, size: 64, align: 64, offset: 128)
!1698 = !{!1699}
!1699 = !DISubrange(count: 6)
!1700 = !DIGlobalVariable(name: "Ev_signal_queue", scope: !1671, file: !1672, line: 48, type: !1701, isLocal: true, isDefinition: true, variable: %struct.qset** @Ev_signal_queue)
!1701 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1702, size: 64, align: 64)
!1702 = !DIDerivedType(tag: DW_TAG_typedef, name: "Q_Set", file: !29, line: 38, baseType: !1703)
!1703 = !DICompositeType(tag: DW_TAG_structure_type, name: "qset", file: !29, line: 35, size: 128, align: 64, elements: !1704)
!1704 = !{!1705, !1711}
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1703, file: !29, line: 36, baseType: !1706, size: 64, align: 64)
!1706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1707, size: 64, align: 64)
!1707 = !DICompositeType(tag: DW_TAG_structure_type, name: "gqueue", file: !29, line: 29, size: 128, align: 64, elements: !1708)
!1708 = !{!1709, !1710}
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1707, file: !29, line: 30, baseType: !1706, size: 64, align: 64)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !1707, file: !29, line: 31, baseType: !26, size: 64, align: 64, offset: 64)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1703, file: !29, line: 37, baseType: !1706, size: 64, align: 64, offset: 64)
!1712 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1713, producer: "clang version 3.8.0-2ubuntu4 (tags/RELEASE_380/final)", isOptimized: false, runtimeVersion: 0, emissionKind: 1, enums: !2, retainedTypes: !1714, subprograms: !1809, globals: !1824)
!1713 = !DIFile(filename: "ev_udp_in.c", directory: "/home/muhammad/totd/totd")
!1714 = !{!1715, !26, !1770, !1796}
!1715 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1716, size: 64, align: 64)
!1716 = !DIDerivedType(tag: DW_TAG_typedef, name: "Ev_UDP_In_Data", file: !29, line: 258, baseType: !1717)
!1717 = !DICompositeType(tag: DW_TAG_structure_type, name: "ev_udp_in_data", file: !29, line: 254, size: 192, align: 64, elements: !1718)
!1718 = !{!1719, !1807, !1808}
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "cptr", scope: !1717, file: !29, line: 255, baseType: !1720, size: 64, align: 64)
!1720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1721, size: 64, align: 64)
!1721 = !DIDerivedType(tag: DW_TAG_typedef, name: "Context", file: !29, line: 228, baseType: !1722)
!1722 = !DICompositeType(tag: DW_TAG_structure_type, name: "context", file: !29, line: 180, size: 3264, align: 64, elements: !1723)
!1723 = !{!1724, !1726, !1727, !1728, !1729, !1738, !1739, !1754, !1758, !1759, !1760, !1761, !1762, !1763, !1764, !1765, !1766, !1788, !1789, !1790, !1803, !1804, !1805, !1806}
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1722, file: !29, line: 181, baseType: !1725, size: 64, align: 64)
!1725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1722, size: 64, align: 64)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !1722, file: !29, line: 182, baseType: !1725, size: 64, align: 64, offset: 64)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "work_state", scope: !1722, file: !29, line: 185, baseType: !33, size: 32, align: 32, offset: 128)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "cname_links", scope: !1722, file: !29, line: 191, baseType: !33, size: 32, align: 32, offset: 160)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "nameservers", scope: !1722, file: !29, line: 192, baseType: !1730, size: 64, align: 64, offset: 192)
!1730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1731, size: 64, align: 64)
!1731 = !DIDerivedType(tag: DW_TAG_typedef, name: "G_List", file: !29, line: 22, baseType: !1732)
!1732 = !DICompositeType(tag: DW_TAG_structure_type, name: "generic_list", file: !29, line: 18, size: 192, align: 64, elements: !1733)
!1733 = !{!1734, !1736, !1737}
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1732, file: !29, line: 19, baseType: !1735, size: 64, align: 64)
!1735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1732, size: 64, align: 64)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1732, file: !29, line: 20, baseType: !1735, size: 64, align: 64, offset: 64)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "list_data", scope: !1732, file: !29, line: 21, baseType: !26, size: 64, align: 64, offset: 128)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "current_ns", scope: !1722, file: !29, line: 193, baseType: !1730, size: 64, align: 64, offset: 256)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "tout", scope: !1722, file: !29, line: 196, baseType: !1740, size: 64, align: 64, offset: 320)
!1740 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1741, size: 64, align: 64)
!1741 = !DICompositeType(tag: DW_TAG_structure_type, name: "ev_to_data", file: !29, line: 244, size: 256, align: 64, elements: !1742)
!1742 = !{!1743, !1744, !1748, !1749}
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "at", scope: !1741, file: !29, line: 245, baseType: !103, size: 64, align: 64)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1741, file: !29, line: 246, baseType: !1745, size: 64, align: 64, offset: 64)
!1745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1746, size: 64, align: 64)
!1746 = !DISubroutineType(types: !1747)
!1747 = !{!33, !1740}
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1741, file: !29, line: 247, baseType: !33, size: 32, align: 32, offset: 128)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1741, file: !29, line: 251, baseType: !1750, size: 64, align: 64, offset: 192)
!1750 = !DICompositeType(tag: DW_TAG_union_type, scope: !1741, file: !29, line: 248, size: 64, align: 64, elements: !1751)
!1751 = !{!1752, !1753}
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !1750, file: !29, line: 249, baseType: !26, size: 64, align: 64)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "cont", scope: !1750, file: !29, line: 250, baseType: !1725, size: 64, align: 64)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "process", scope: !1722, file: !29, line: 197, baseType: !1755, size: 64, align: 64, offset: 384)
!1755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1756, size: 64, align: 64)
!1756 = !DISubroutineType(types: !1757)
!1757 = !{!33, !1725}
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "retry", scope: !1722, file: !29, line: 198, baseType: !1755, size: 64, align: 64, offset: 448)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "qname", scope: !1722, file: !29, line: 201, baseType: !123, size: 2048, align: 8, offset: 512)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "q_id", scope: !1722, file: !29, line: 202, baseType: !72, size: 32, align: 32, offset: 2560)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "q_class", scope: !1722, file: !29, line: 203, baseType: !48, size: 16, align: 16, offset: 2592)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "q_type", scope: !1722, file: !29, line: 204, baseType: !48, size: 16, align: 16, offset: 2608)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "an_list", scope: !1722, file: !29, line: 207, baseType: !1730, size: 64, align: 64, offset: 2624)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "ns_list", scope: !1722, file: !29, line: 208, baseType: !1730, size: 64, align: 64, offset: 2688)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "ar_list", scope: !1722, file: !29, line: 209, baseType: !1730, size: 64, align: 64, offset: 2752)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "mesg", scope: !1722, file: !29, line: 215, baseType: !1767, size: 64, align: 64, offset: 2816)
!1767 = !DICompositeType(tag: DW_TAG_union_type, scope: !1722, file: !29, line: 212, size: 64, align: 64, elements: !1768)
!1768 = !{!1769, !1787}
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "hdr", scope: !1767, file: !29, line: 213, baseType: !1770, size: 64, align: 64)
!1770 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1771, size: 64, align: 64)
!1771 = !DIDerivedType(tag: DW_TAG_typedef, name: "Mesg_Hdr", file: !29, line: 102, baseType: !1772)
!1772 = !DICompositeType(tag: DW_TAG_structure_type, name: "mesg_hdr", file: !29, line: 71, size: 96, align: 16, elements: !1773)
!1773 = !{!1774, !1775, !1776, !1777, !1778, !1779, !1780, !1781, !1782, !1783, !1784, !1785, !1786}
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1772, file: !29, line: 72, baseType: !48, size: 16, align: 16)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "rd", scope: !1772, file: !29, line: 86, baseType: !21, size: 1, align: 8, offset: 16)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "tc", scope: !1772, file: !29, line: 87, baseType: !21, size: 1, align: 8, offset: 17)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "aa", scope: !1772, file: !29, line: 88, baseType: !21, size: 1, align: 8, offset: 18)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "opcode", scope: !1772, file: !29, line: 89, baseType: !21, size: 4, align: 8, offset: 19)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "qr", scope: !1772, file: !29, line: 90, baseType: !21, size: 1, align: 8, offset: 23)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "rcode", scope: !1772, file: !29, line: 92, baseType: !21, size: 4, align: 8, offset: 24)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "zero", scope: !1772, file: !29, line: 93, baseType: !21, size: 3, align: 8, offset: 28)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "ra", scope: !1772, file: !29, line: 94, baseType: !21, size: 1, align: 8, offset: 31)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "qdcnt", scope: !1772, file: !29, line: 98, baseType: !48, size: 16, align: 16, offset: 32)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "ancnt", scope: !1772, file: !29, line: 99, baseType: !48, size: 16, align: 16, offset: 48)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "nscnt", scope: !1772, file: !29, line: 100, baseType: !48, size: 16, align: 16, offset: 64)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "arcnt", scope: !1772, file: !29, line: 101, baseType: !48, size: 16, align: 16, offset: 80)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !1767, file: !29, line: 214, baseType: !20, size: 64, align: 64)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "mesg_len", scope: !1722, file: !29, line: 216, baseType: !33, size: 32, align: 32, offset: 2880)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "wp", scope: !1722, file: !29, line: 217, baseType: !20, size: 64, align: 64, offset: 2944)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "netifaddr", scope: !1722, file: !29, line: 220, baseType: !1791, size: 64, align: 64, offset: 3008)
!1791 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1792, size: 64, align: 64)
!1792 = !DIDerivedType(tag: DW_TAG_typedef, name: "Nia", file: !29, line: 65, baseType: !1793)
!1793 = !DICompositeType(tag: DW_TAG_structure_type, name: "nia", file: !29, line: 61, size: 128, align: 64, elements: !1794)
!1794 = !{!1795, !1801, !1802}
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "sa_p", scope: !1793, file: !29, line: 62, baseType: !1796, size: 64, align: 64)
!1796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1797, size: 64, align: 64)
!1797 = !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr", file: !9, line: 153, size: 128, align: 16, elements: !1798)
!1798 = !{!1799, !1800}
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "sa_family", scope: !1797, file: !9, line: 155, baseType: !12, size: 16, align: 16)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "sa_data", scope: !1797, file: !9, line: 156, baseType: !16, size: 112, align: 8, offset: 16)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "udp_sock", scope: !1793, file: !29, line: 63, baseType: !33, size: 32, align: 32, offset: 64)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_sock", scope: !1793, file: !29, line: 64, baseType: !33, size: 32, align: 32, offset: 96)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "retry_count", scope: !1722, file: !29, line: 221, baseType: !48, size: 16, align: 16, offset: 3072)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1722, file: !29, line: 222, baseType: !48, size: 16, align: 16, offset: 3088)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "peer", scope: !1722, file: !29, line: 225, baseType: !1796, size: 64, align: 64, offset: 3136)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "conn_sock", scope: !1722, file: !29, line: 227, baseType: !33, size: 32, align: 32, offset: 3200)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "sa_p", scope: !1717, file: !29, line: 256, baseType: !1796, size: 64, align: 64, offset: 64)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1717, file: !29, line: 257, baseType: !48, size: 16, align: 16, offset: 128)
!1809 = !{!1810, !1811, !1814, !1815, !1816, !1817, !1820, !1823}
!1810 = distinct !DISubprogram(name: "ev_udp_in_eq", scope: !1713, file: !1713, line: 18, type: !745, isLocal: false, isDefinition: true, scopeLine: 18, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!1811 = distinct !DISubprogram(name: "ev_udp_in_data_free", scope: !1713, file: !1713, line: 39, type: !1812, isLocal: false, isDefinition: true, scopeLine: 39, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!1812 = !DISubroutineType(types: !1813)
!1813 = !{null, !1715}
!1814 = distinct !DISubprogram(name: "ev_udp_in_data_free_v", scope: !1713, file: !1713, line: 49, type: !865, isLocal: false, isDefinition: true, scopeLine: 49, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!1815 = distinct !DISubprogram(name: "ev_udp_in_init", scope: !1713, file: !1713, line: 55, type: !767, isLocal: false, isDefinition: true, scopeLine: 55, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!1816 = distinct !DISubprogram(name: "ev_udp_in_finish", scope: !1713, file: !1713, line: 70, type: !770, isLocal: false, isDefinition: true, scopeLine: 70, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!1817 = distinct !DISubprogram(name: "ev_udp_in_register", scope: !1713, file: !1713, line: 75, type: !1818, isLocal: false, isDefinition: true, scopeLine: 76, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!1818 = !DISubroutineType(types: !1819)
!1819 = !{!33, !1720, !1796, !33, !48}
!1820 = distinct !DISubprogram(name: "ev_udp_in_remove", scope: !1713, file: !1713, line: 108, type: !1821, isLocal: false, isDefinition: true, scopeLine: 108, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!1821 = !DISubroutineType(types: !1822)
!1822 = !{!33, !1796, !33}
!1823 = distinct !DISubprogram(name: "ev_udp_in_read", scope: !1713, file: !1713, line: 133, type: !742, isLocal: false, isDefinition: true, scopeLine: 133, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!1824 = !{!1825, !1826}
!1825 = !DIGlobalVariable(name: "UDPL_head", scope: !1712, file: !1713, line: 15, type: !1730, isLocal: true, isDefinition: true, variable: %struct.generic_list** @UDPL_head)
!1826 = !DIGlobalVariable(name: "UDPL_tail", scope: !1712, file: !1713, line: 16, type: !1730, isLocal: true, isDefinition: true, variable: %struct.generic_list** @UDPL_tail)
!1827 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1828, producer: "clang version 3.8.0-2ubuntu4 (tags/RELEASE_380/final)", isOptimized: false, runtimeVersion: 0, emissionKind: 1, enums: !791, retainedTypes: !1829, subprograms: !1902, globals: !1968)
!1828 = !DIFile(filename: "ne_io.c", directory: "/home/muhammad/totd/totd")
!1829 = !{!1830, !738, !33, !19, !1842, !1835, !815, !1852, !1886, !20}
!1830 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1831, size: 64, align: 64)
!1831 = !DIDerivedType(tag: DW_TAG_typedef, name: "Nia", file: !29, line: 65, baseType: !1832)
!1832 = !DICompositeType(tag: DW_TAG_structure_type, name: "nia", file: !29, line: 61, size: 128, align: 64, elements: !1833)
!1833 = !{!1834, !1840, !1841}
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "sa_p", scope: !1832, file: !29, line: 62, baseType: !1835, size: 64, align: 64)
!1835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1836, size: 64, align: 64)
!1836 = !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr", file: !9, line: 153, size: 128, align: 16, elements: !1837)
!1837 = !{!1838, !1839}
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "sa_family", scope: !1836, file: !9, line: 155, baseType: !12, size: 16, align: 16)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "sa_data", scope: !1836, file: !9, line: 156, baseType: !16, size: 112, align: 8, offset: 16)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "udp_sock", scope: !1832, file: !29, line: 63, baseType: !33, size: 32, align: 32, offset: 64)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_sock", scope: !1832, file: !29, line: 64, baseType: !33, size: 32, align: 32, offset: 96)
!1842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1843, size: 64, align: 64)
!1843 = !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr_in", file: !615, line: 239, size: 128, align: 32, elements: !1844)
!1844 = !{!1845, !1846, !1847, !1851}
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "sin_family", scope: !1843, file: !615, line: 241, baseType: !12, size: 16, align: 16)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "sin_port", scope: !1843, file: !615, line: 242, baseType: !810, size: 16, align: 16, offset: 16)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "sin_addr", scope: !1843, file: !615, line: 243, baseType: !1848, size: 32, align: 32, offset: 32)
!1848 = !DICompositeType(tag: DW_TAG_structure_type, name: "in_addr", file: !615, line: 31, size: 32, align: 32, elements: !1849)
!1849 = !{!1850}
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "s_addr", scope: !1848, file: !615, line: 33, baseType: !815, size: 32, align: 32)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "sin_zero", scope: !1843, file: !615, line: 246, baseType: !817, size: 64, align: 8, offset: 64)
!1852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1853, size: 64, align: 64)
!1853 = !DICompositeType(tag: DW_TAG_structure_type, name: "ifreq", file: !1854, line: 126, size: 320, align: 64, elements: !1855)
!1854 = !DIFile(filename: "/usr/include/net/if.h", directory: "/home/muhammad/totd/totd")
!1855 = !{!1856, !1861}
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "ifr_ifrn", scope: !1853, file: !1854, line: 133, baseType: !1857, size: 128, align: 8)
!1857 = !DICompositeType(tag: DW_TAG_union_type, scope: !1853, file: !1854, line: 130, size: 128, align: 8, elements: !1858)
!1858 = !{!1859}
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "ifrn_name", scope: !1857, file: !1854, line: 132, baseType: !1860, size: 128, align: 8)
!1860 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6, size: 128, align: 8, elements: !623)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "ifr_ifru", scope: !1853, file: !1854, line: 149, baseType: !1862, size: 192, align: 64, offset: 128)
!1862 = !DICompositeType(tag: DW_TAG_union_type, scope: !1853, file: !1854, line: 135, size: 192, align: 64, elements: !1863)
!1863 = !{!1864, !1865, !1866, !1867, !1868, !1869, !1871, !1872, !1873, !1882, !1883, !1884}
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_addr", scope: !1862, file: !1854, line: 137, baseType: !1836, size: 128, align: 16)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_dstaddr", scope: !1862, file: !1854, line: 138, baseType: !1836, size: 128, align: 16)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_broadaddr", scope: !1862, file: !1854, line: 139, baseType: !1836, size: 128, align: 16)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_netmask", scope: !1862, file: !1854, line: 140, baseType: !1836, size: 128, align: 16)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_hwaddr", scope: !1862, file: !1854, line: 141, baseType: !1836, size: 128, align: 16)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_flags", scope: !1862, file: !1854, line: 142, baseType: !1870, size: 16, align: 16)
!1870 = !DIBasicType(name: "short", size: 16, align: 16, encoding: DW_ATE_signed)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_ivalue", scope: !1862, file: !1854, line: 143, baseType: !33, size: 32, align: 32)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_mtu", scope: !1862, file: !1854, line: 144, baseType: !33, size: 32, align: 32)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_map", scope: !1862, file: !1854, line: 145, baseType: !1874, size: 192, align: 64)
!1874 = !DICompositeType(tag: DW_TAG_structure_type, name: "ifmap", file: !1854, line: 111, size: 192, align: 64, elements: !1875)
!1875 = !{!1876, !1877, !1878, !1879, !1880, !1881}
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "mem_start", scope: !1874, file: !1854, line: 113, baseType: !37, size: 64, align: 64)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "mem_end", scope: !1874, file: !1854, line: 114, baseType: !37, size: 64, align: 64, offset: 64)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "base_addr", scope: !1874, file: !1854, line: 115, baseType: !14, size: 16, align: 16, offset: 128)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !1874, file: !1854, line: 116, baseType: !25, size: 8, align: 8, offset: 144)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "dma", scope: !1874, file: !1854, line: 117, baseType: !25, size: 8, align: 8, offset: 152)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !1874, file: !1854, line: 118, baseType: !25, size: 8, align: 8, offset: 160)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_slave", scope: !1862, file: !1854, line: 146, baseType: !1860, size: 128, align: 8)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_newname", scope: !1862, file: !1854, line: 147, baseType: !1860, size: 128, align: 8)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_data", scope: !1862, file: !1854, line: 148, baseType: !1885, size: 64, align: 64)
!1885 = !DIDerivedType(tag: DW_TAG_typedef, name: "__caddr_t", file: !24, line: 183, baseType: !19)
!1886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1887, size: 64, align: 64)
!1887 = !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr_in6", file: !615, line: 254, size: 224, align: 32, elements: !1888)
!1888 = !{!1889, !1890, !1891, !1892, !1901}
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "sin6_family", scope: !1887, file: !615, line: 256, baseType: !12, size: 16, align: 16)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "sin6_port", scope: !1887, file: !615, line: 257, baseType: !810, size: 16, align: 16, offset: 16)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "sin6_flowinfo", scope: !1887, file: !615, line: 258, baseType: !72, size: 32, align: 32, offset: 32)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "sin6_addr", scope: !1887, file: !615, line: 259, baseType: !1893, size: 128, align: 32, offset: 64)
!1893 = !DICompositeType(tag: DW_TAG_structure_type, name: "in6_addr", file: !615, line: 211, size: 128, align: 32, elements: !1894)
!1894 = !{!1895}
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "__in6_u", scope: !1893, file: !615, line: 220, baseType: !1896, size: 128, align: 32)
!1896 = !DICompositeType(tag: DW_TAG_union_type, scope: !1893, file: !615, line: 213, size: 128, align: 32, elements: !1897)
!1897 = !{!1898, !1899, !1900}
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "__u6_addr8", scope: !1896, file: !615, line: 215, baseType: !621, size: 128, align: 8)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "__u6_addr16", scope: !1896, file: !615, line: 217, baseType: !626, size: 128, align: 16)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "__u6_addr32", scope: !1896, file: !615, line: 218, baseType: !630, size: 128, align: 32)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "sin6_scope_id", scope: !1887, file: !615, line: 260, baseType: !72, size: 32, align: 32, offset: 192)
!1902 = !{!1903, !1904, !1907, !1910, !1913, !1921, !1924, !1925, !1928, !1929, !1930, !1933, !1936, !1937, !1940, !1951, !1954, !1955, !1967}
!1903 = distinct !DISubprogram(name: "nia_free_closev", scope: !1828, file: !1828, line: 147, type: !865, isLocal: false, isDefinition: true, scopeLine: 147, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!1904 = distinct !DISubprogram(name: "nia_free", scope: !1828, file: !1828, line: 151, type: !1905, isLocal: false, isDefinition: true, scopeLine: 151, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!1905 = !DISubroutineType(types: !1906)
!1906 = !{null, !1830, !33}
!1907 = distinct !DISubprogram(name: "nia_copy", scope: !1828, file: !1828, line: 174, type: !1908, isLocal: false, isDefinition: true, scopeLine: 174, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!1908 = !DISubroutineType(types: !1909)
!1909 = !{!1830, !1830}
!1910 = distinct !DISubprogram(name: "nia_find_by_sock", scope: !1828, file: !1828, line: 181, type: !1911, isLocal: false, isDefinition: true, scopeLine: 181, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!1911 = !DISubroutineType(types: !1912)
!1912 = !{!1830, !33}
!1913 = distinct !DISubprogram(name: "nia_fds_set", scope: !1828, file: !1828, line: 200, type: !1914, isLocal: false, isDefinition: true, scopeLine: 200, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!1914 = !DISubroutineType(types: !1915)
!1915 = !{null, !1916, !514}
!1916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1917, size: 64, align: 64)
!1917 = !DIDerivedType(tag: DW_TAG_typedef, name: "fd_set", file: !739, line: 75, baseType: !1918)
!1918 = !DICompositeType(tag: DW_TAG_structure_type, file: !739, line: 64, size: 1024, align: 64, elements: !1919)
!1919 = !{!1920}
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "__fds_bits", scope: !1918, file: !739, line: 72, baseType: !764, size: 1024, align: 64)
!1921 = distinct !DISubprogram(name: "nia_fds_isset", scope: !1828, file: !1828, line: 236, type: !1922, isLocal: false, isDefinition: true, scopeLine: 236, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!1922 = !DISubroutineType(types: !1923)
!1923 = !{!33, !1916, !514}
!1924 = distinct !DISubprogram(name: "net_init_socketlist", scope: !1828, file: !1828, line: 331, type: !742, isLocal: false, isDefinition: true, scopeLine: 331, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!1925 = distinct !DISubprogram(name: "net_reinit_socketlist", scope: !1828, file: !1828, line: 349, type: !1926, isLocal: false, isDefinition: true, scopeLine: 349, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!1926 = !DISubroutineType(types: !1927)
!1927 = !{!33, !33, !33}
!1928 = distinct !DISubprogram(name: "net_bind_socketlist", scope: !1828, file: !1828, line: 390, type: !767, isLocal: false, isDefinition: true, scopeLine: 390, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!1929 = distinct !DISubprogram(name: "net_delete_socketlist", scope: !1828, file: !1828, line: 414, type: !767, isLocal: false, isDefinition: true, scopeLine: 414, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!1930 = distinct !DISubprogram(name: "net_mesg_send", scope: !1828, file: !1828, line: 544, type: !1931, isLocal: false, isDefinition: true, scopeLine: 545, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!1931 = !DISubroutineType(types: !1932)
!1932 = !{!33, !1830, !20, !33, !1835}
!1933 = distinct !DISubprogram(name: "net_mesg_socket", scope: !1828, file: !1828, line: 579, type: !1934, isLocal: false, isDefinition: true, scopeLine: 579, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!1934 = !DISubroutineType(types: !1935)
!1935 = !{!33, !1830}
!1936 = distinct !DISubprogram(name: "net_stream_socket", scope: !1828, file: !1828, line: 628, type: !1934, isLocal: false, isDefinition: true, scopeLine: 628, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!1937 = distinct !DISubprogram(name: "nia_alloc", scope: !1828, file: !1828, line: 118, type: !1938, isLocal: true, isDefinition: true, scopeLine: 118, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!1938 = !DISubroutineType(types: !1939)
!1939 = !{!1830, !1835, !33, !33}
!1940 = distinct !DISubprogram(name: "nia_set_wildsock", scope: !1828, file: !1828, line: 274, type: !1941, isLocal: true, isDefinition: true, scopeLine: 274, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!1941 = !DISubroutineType(types: !1942)
!1942 = !{!33, !1943, !33}
!1943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1944, size: 64, align: 64)
!1944 = !DIDerivedType(tag: DW_TAG_typedef, name: "G_List", file: !29, line: 22, baseType: !1945)
!1945 = !DICompositeType(tag: DW_TAG_structure_type, name: "generic_list", file: !29, line: 18, size: 192, align: 64, elements: !1946)
!1946 = !{!1947, !1949, !1950}
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1945, file: !29, line: 19, baseType: !1948, size: 64, align: 64)
!1948 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1945, size: 64, align: 64)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1945, file: !29, line: 20, baseType: !1948, size: 64, align: 64, offset: 64)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "list_data", scope: !1945, file: !29, line: 21, baseType: !26, size: 64, align: 64, offset: 128)
!1951 = distinct !DISubprogram(name: "nia_list_destroy", scope: !1828, file: !1828, line: 141, type: !1952, isLocal: true, isDefinition: true, scopeLine: 141, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!1952 = !DISubroutineType(types: !1953)
!1953 = !{null, !1943}
!1954 = distinct !DISubprogram(name: "net_get_ifaddrs", scope: !1828, file: !1828, line: 423, type: !1941, isLocal: true, isDefinition: true, scopeLine: 423, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!1955 = distinct !DISubprogram(name: "net_ifc_cmp", scope: !1828, file: !1828, line: 60, type: !1956, isLocal: true, isDefinition: true, scopeLine: 60, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!1956 = !DISubroutineType(types: !1957)
!1957 = !{!33, !1958, !1958}
!1958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1959, size: 64, align: 64)
!1959 = !DICompositeType(tag: DW_TAG_structure_type, name: "ifconf", file: !1854, line: 176, size: 128, align: 64, elements: !1960)
!1960 = !{!1961, !1962}
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "ifc_len", scope: !1959, file: !1854, line: 178, baseType: !33, size: 32, align: 32)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "ifc_ifcu", scope: !1959, file: !1854, line: 183, baseType: !1963, size: 64, align: 64, offset: 64)
!1963 = !DICompositeType(tag: DW_TAG_union_type, scope: !1959, file: !1854, line: 179, size: 64, align: 64, elements: !1964)
!1964 = !{!1965, !1966}
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "ifcu_buf", scope: !1963, file: !1854, line: 181, baseType: !1885, size: 64, align: 64)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "ifcu_req", scope: !1963, file: !1854, line: 182, baseType: !1852, size: 64, align: 64)
!1967 = distinct !DISubprogram(name: "nia_is_in_totd_iflist", scope: !1828, file: !1828, line: 44, type: !976, isLocal: true, isDefinition: true, scopeLine: 44, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!1968 = !{!1969, !1970, !1971, !1972}
!1969 = !DIGlobalVariable(name: "NI_head", scope: !1827, file: !1828, line: 16, type: !1943, isLocal: true, isDefinition: true, variable: %struct.generic_list** @NI_head)
!1970 = !DIGlobalVariable(name: "NI_wildcard6", scope: !1827, file: !1828, line: 18, type: !1943, isLocal: true, isDefinition: true, variable: %struct.generic_list** @NI_wildcard6)
!1971 = !DIGlobalVariable(name: "NI_wildcard", scope: !1827, file: !1828, line: 17, type: !1943, isLocal: true, isDefinition: true, variable: %struct.generic_list** @NI_wildcard)
!1972 = !DIGlobalVariable(name: "ifc_old", scope: !1954, file: !1828, line: 425, type: !1959, isLocal: true, isDefinition: true, variable: %struct.ifconf* @net_get_ifaddrs.ifc_old)
!1973 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1974, producer: "clang version 3.8.0-2ubuntu4 (tags/RELEASE_380/final)", isOptimized: false, runtimeVersion: 0, emissionKind: 1, enums: !2, retainedTypes: !1975, subprograms: !2026, globals: !2133)
!1974 = !DIFile(filename: "conv_scoped.c", directory: "/home/muhammad/totd/totd")
!1975 = !{!1976, !1992, !26, !1994, !19, !20}
!1976 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1977, size: 64, align: 64)
!1977 = !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr_in6", file: !615, line: 254, size: 224, align: 32, elements: !1978)
!1978 = !{!1979, !1980, !1981, !1982, !1991}
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "sin6_family", scope: !1977, file: !615, line: 256, baseType: !12, size: 16, align: 16)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "sin6_port", scope: !1977, file: !615, line: 257, baseType: !810, size: 16, align: 16, offset: 16)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "sin6_flowinfo", scope: !1977, file: !615, line: 258, baseType: !72, size: 32, align: 32, offset: 32)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "sin6_addr", scope: !1977, file: !615, line: 259, baseType: !1983, size: 128, align: 32, offset: 64)
!1983 = !DICompositeType(tag: DW_TAG_structure_type, name: "in6_addr", file: !615, line: 211, size: 128, align: 32, elements: !1984)
!1984 = !{!1985}
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "__in6_u", scope: !1983, file: !615, line: 220, baseType: !1986, size: 128, align: 32)
!1986 = !DICompositeType(tag: DW_TAG_union_type, scope: !1983, file: !615, line: 213, size: 128, align: 32, elements: !1987)
!1987 = !{!1988, !1989, !1990}
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "__u6_addr8", scope: !1986, file: !615, line: 215, baseType: !621, size: 128, align: 8)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "__u6_addr16", scope: !1986, file: !615, line: 217, baseType: !626, size: 128, align: 16)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "__u6_addr32", scope: !1986, file: !615, line: 218, baseType: !630, size: 128, align: 32)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "sin6_scope_id", scope: !1977, file: !615, line: 260, baseType: !72, size: 32, align: 32, offset: 192)
!1992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1993, size: 64, align: 64)
!1993 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1983)
!1994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1995, size: 64, align: 64)
!1995 = !DIDerivedType(tag: DW_TAG_typedef, name: "RRset", file: !29, line: 168, baseType: !1996)
!1996 = !DICompositeType(tag: DW_TAG_structure_type, name: "rr_set", file: !29, line: 160, size: 320, align: 64, elements: !1997)
!1997 = !{!1998, !1999, !2000, !2013, !2014}
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !1996, file: !29, line: 161, baseType: !33, size: 32, align: 32)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "key_len", scope: !1996, file: !29, line: 163, baseType: !35, size: 64, align: 64, offset: 64)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1996, file: !29, line: 164, baseType: !2001, size: 64, align: 64, offset: 128)
!2001 = !DIDerivedType(tag: DW_TAG_typedef, name: "U_Key", file: !29, line: 143, baseType: !2002)
!2002 = !DICompositeType(tag: DW_TAG_union_type, name: "u_key", file: !29, line: 140, size: 64, align: 64, elements: !2003)
!2003 = !{!2004, !2012}
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !2002, file: !29, line: 141, baseType: !2005, size: 64, align: 64)
!2005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2006, size: 64, align: 64)
!2006 = !DIDerivedType(tag: DW_TAG_typedef, name: "Key_Info", file: !29, line: 138, baseType: !2007)
!2007 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_info", file: !29, line: 134, size: 48, align: 16, elements: !2008)
!2008 = !{!2009, !2010, !2011}
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "r_type", scope: !2007, file: !29, line: 135, baseType: !48, size: 16, align: 16)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "r_class", scope: !2007, file: !29, line: 136, baseType: !48, size: 16, align: 16, offset: 16)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "owner_len", scope: !2007, file: !29, line: 137, baseType: !48, size: 16, align: 16, offset: 32)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !2002, file: !29, line: 142, baseType: !20, size: 64, align: 64)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "data_len", scope: !1996, file: !29, line: 166, baseType: !35, size: 64, align: 64, offset: 192)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1996, file: !29, line: 167, baseType: !2015, size: 64, align: 64, offset: 256)
!2015 = !DIDerivedType(tag: DW_TAG_typedef, name: "U_Data", file: !29, line: 157, baseType: !2016)
!2016 = !DICompositeType(tag: DW_TAG_union_type, name: "u_data", file: !29, line: 153, size: 64, align: 64, elements: !2017)
!2017 = !{!2018, !2024, !2025}
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !2016, file: !29, line: 154, baseType: !2019, size: 64, align: 64)
!2019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2020, size: 64, align: 64)
!2020 = !DIDerivedType(tag: DW_TAG_typedef, name: "Data_Data", file: !29, line: 151, baseType: !2021)
!2021 = !DICompositeType(tag: DW_TAG_structure_type, name: "data_data", file: !29, line: 149, size: 16, align: 16, elements: !2022)
!2022 = !{!2023}
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "data_cnt", scope: !2021, file: !29, line: 150, baseType: !48, size: 16, align: 16)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "rt_list", scope: !2016, file: !29, line: 155, baseType: !65, size: 64, align: 64)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !2016, file: !29, line: 156, baseType: !20, size: 64, align: 64)
!2026 = !{!2027, !2117, !2120, !2123, !2126, !2129, !2130}
!2027 = distinct !DISubprogram(name: "conv_scoped_query", scope: !1974, file: !1974, line: 21, type: !2028, isLocal: false, isDefinition: true, scopeLine: 21, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!2028 = !DISubroutineType(types: !2029)
!2029 = !{!33, !2030}
!2030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2031, size: 64, align: 64)
!2031 = !DIDerivedType(tag: DW_TAG_typedef, name: "Context", file: !29, line: 228, baseType: !2032)
!2032 = !DICompositeType(tag: DW_TAG_structure_type, name: "context", file: !29, line: 180, size: 3264, align: 64, elements: !2033)
!2033 = !{!2034, !2036, !2037, !2038, !2039, !2048, !2049, !2064, !2068, !2069, !2070, !2071, !2072, !2073, !2074, !2075, !2076, !2098, !2099, !2100, !2113, !2114, !2115, !2116}
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !2032, file: !29, line: 181, baseType: !2035, size: 64, align: 64)
!2035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2032, size: 64, align: 64)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !2032, file: !29, line: 182, baseType: !2035, size: 64, align: 64, offset: 64)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "work_state", scope: !2032, file: !29, line: 185, baseType: !33, size: 32, align: 32, offset: 128)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "cname_links", scope: !2032, file: !29, line: 191, baseType: !33, size: 32, align: 32, offset: 160)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "nameservers", scope: !2032, file: !29, line: 192, baseType: !2040, size: 64, align: 64, offset: 192)
!2040 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2041, size: 64, align: 64)
!2041 = !DIDerivedType(tag: DW_TAG_typedef, name: "G_List", file: !29, line: 22, baseType: !2042)
!2042 = !DICompositeType(tag: DW_TAG_structure_type, name: "generic_list", file: !29, line: 18, size: 192, align: 64, elements: !2043)
!2043 = !{!2044, !2046, !2047}
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2042, file: !29, line: 19, baseType: !2045, size: 64, align: 64)
!2045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2042, size: 64, align: 64)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2042, file: !29, line: 20, baseType: !2045, size: 64, align: 64, offset: 64)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "list_data", scope: !2042, file: !29, line: 21, baseType: !26, size: 64, align: 64, offset: 128)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "current_ns", scope: !2032, file: !29, line: 193, baseType: !2040, size: 64, align: 64, offset: 256)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "tout", scope: !2032, file: !29, line: 196, baseType: !2050, size: 64, align: 64, offset: 320)
!2050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2051, size: 64, align: 64)
!2051 = !DICompositeType(tag: DW_TAG_structure_type, name: "ev_to_data", file: !29, line: 244, size: 256, align: 64, elements: !2052)
!2052 = !{!2053, !2054, !2058, !2059}
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "at", scope: !2051, file: !29, line: 245, baseType: !103, size: 64, align: 64)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !2051, file: !29, line: 246, baseType: !2055, size: 64, align: 64, offset: 64)
!2055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2056, size: 64, align: 64)
!2056 = !DISubroutineType(types: !2057)
!2057 = !{!33, !2050}
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2051, file: !29, line: 247, baseType: !33, size: 32, align: 32, offset: 128)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2051, file: !29, line: 251, baseType: !2060, size: 64, align: 64, offset: 192)
!2060 = !DICompositeType(tag: DW_TAG_union_type, scope: !2051, file: !29, line: 248, size: 64, align: 64, elements: !2061)
!2061 = !{!2062, !2063}
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !2060, file: !29, line: 249, baseType: !26, size: 64, align: 64)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "cont", scope: !2060, file: !29, line: 250, baseType: !2035, size: 64, align: 64)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "process", scope: !2032, file: !29, line: 197, baseType: !2065, size: 64, align: 64, offset: 384)
!2065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2066, size: 64, align: 64)
!2066 = !DISubroutineType(types: !2067)
!2067 = !{!33, !2035}
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "retry", scope: !2032, file: !29, line: 198, baseType: !2065, size: 64, align: 64, offset: 448)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "qname", scope: !2032, file: !29, line: 201, baseType: !123, size: 2048, align: 8, offset: 512)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "q_id", scope: !2032, file: !29, line: 202, baseType: !72, size: 32, align: 32, offset: 2560)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "q_class", scope: !2032, file: !29, line: 203, baseType: !48, size: 16, align: 16, offset: 2592)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "q_type", scope: !2032, file: !29, line: 204, baseType: !48, size: 16, align: 16, offset: 2608)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "an_list", scope: !2032, file: !29, line: 207, baseType: !2040, size: 64, align: 64, offset: 2624)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "ns_list", scope: !2032, file: !29, line: 208, baseType: !2040, size: 64, align: 64, offset: 2688)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "ar_list", scope: !2032, file: !29, line: 209, baseType: !2040, size: 64, align: 64, offset: 2752)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "mesg", scope: !2032, file: !29, line: 215, baseType: !2077, size: 64, align: 64, offset: 2816)
!2077 = !DICompositeType(tag: DW_TAG_union_type, scope: !2032, file: !29, line: 212, size: 64, align: 64, elements: !2078)
!2078 = !{!2079, !2097}
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "hdr", scope: !2077, file: !29, line: 213, baseType: !2080, size: 64, align: 64)
!2080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2081, size: 64, align: 64)
!2081 = !DIDerivedType(tag: DW_TAG_typedef, name: "Mesg_Hdr", file: !29, line: 102, baseType: !2082)
!2082 = !DICompositeType(tag: DW_TAG_structure_type, name: "mesg_hdr", file: !29, line: 71, size: 96, align: 16, elements: !2083)
!2083 = !{!2084, !2085, !2086, !2087, !2088, !2089, !2090, !2091, !2092, !2093, !2094, !2095, !2096}
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2082, file: !29, line: 72, baseType: !48, size: 16, align: 16)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "rd", scope: !2082, file: !29, line: 86, baseType: !21, size: 1, align: 8, offset: 16)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "tc", scope: !2082, file: !29, line: 87, baseType: !21, size: 1, align: 8, offset: 17)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "aa", scope: !2082, file: !29, line: 88, baseType: !21, size: 1, align: 8, offset: 18)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "opcode", scope: !2082, file: !29, line: 89, baseType: !21, size: 4, align: 8, offset: 19)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "qr", scope: !2082, file: !29, line: 90, baseType: !21, size: 1, align: 8, offset: 23)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "rcode", scope: !2082, file: !29, line: 92, baseType: !21, size: 4, align: 8, offset: 24)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "zero", scope: !2082, file: !29, line: 93, baseType: !21, size: 3, align: 8, offset: 28)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "ra", scope: !2082, file: !29, line: 94, baseType: !21, size: 1, align: 8, offset: 31)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "qdcnt", scope: !2082, file: !29, line: 98, baseType: !48, size: 16, align: 16, offset: 32)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "ancnt", scope: !2082, file: !29, line: 99, baseType: !48, size: 16, align: 16, offset: 48)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "nscnt", scope: !2082, file: !29, line: 100, baseType: !48, size: 16, align: 16, offset: 64)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "arcnt", scope: !2082, file: !29, line: 101, baseType: !48, size: 16, align: 16, offset: 80)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !2077, file: !29, line: 214, baseType: !20, size: 64, align: 64)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "mesg_len", scope: !2032, file: !29, line: 216, baseType: !33, size: 32, align: 32, offset: 2880)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "wp", scope: !2032, file: !29, line: 217, baseType: !20, size: 64, align: 64, offset: 2944)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "netifaddr", scope: !2032, file: !29, line: 220, baseType: !2101, size: 64, align: 64, offset: 3008)
!2101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2102, size: 64, align: 64)
!2102 = !DIDerivedType(tag: DW_TAG_typedef, name: "Nia", file: !29, line: 65, baseType: !2103)
!2103 = !DICompositeType(tag: DW_TAG_structure_type, name: "nia", file: !29, line: 61, size: 128, align: 64, elements: !2104)
!2104 = !{!2105, !2111, !2112}
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "sa_p", scope: !2103, file: !29, line: 62, baseType: !2106, size: 64, align: 64)
!2106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2107, size: 64, align: 64)
!2107 = !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr", file: !9, line: 153, size: 128, align: 16, elements: !2108)
!2108 = !{!2109, !2110}
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "sa_family", scope: !2107, file: !9, line: 155, baseType: !12, size: 16, align: 16)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "sa_data", scope: !2107, file: !9, line: 156, baseType: !16, size: 112, align: 8, offset: 16)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "udp_sock", scope: !2103, file: !29, line: 63, baseType: !33, size: 32, align: 32, offset: 64)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_sock", scope: !2103, file: !29, line: 64, baseType: !33, size: 32, align: 32, offset: 96)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "retry_count", scope: !2032, file: !29, line: 221, baseType: !48, size: 16, align: 16, offset: 3072)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2032, file: !29, line: 222, baseType: !48, size: 16, align: 16, offset: 3088)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "peer", scope: !2032, file: !29, line: 225, baseType: !2106, size: 64, align: 64, offset: 3136)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "conn_sock", scope: !2032, file: !29, line: 227, baseType: !33, size: 32, align: 32, offset: 3200)
!2117 = distinct !DISubprogram(name: "conv_scoped_list", scope: !1974, file: !1974, line: 216, type: !2118, isLocal: false, isDefinition: true, scopeLine: 216, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!2118 = !DISubroutineType(types: !2119)
!2119 = !{null, !2040}
!2120 = distinct !DISubprogram(name: "conv_scoped_conf", scope: !1974, file: !1974, line: 244, type: !2121, isLocal: false, isDefinition: true, scopeLine: 244, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!2121 = !DISubroutineType(types: !2122)
!2122 = !{!33, !4, !4, !33}
!2123 = distinct !DISubprogram(name: "conv_scoped_ptr", scope: !1974, file: !1974, line: 274, type: !2124, isLocal: false, isDefinition: true, scopeLine: 274, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!2124 = !DISubroutineType(types: !2125)
!2125 = !{null, !2040, !20}
!2126 = distinct !DISubprogram(name: "conv_is_scoped_ptr", scope: !1974, file: !1974, line: 317, type: !2127, isLocal: false, isDefinition: true, scopeLine: 317, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!2127 = !DISubroutineType(types: !2128)
!2128 = !{!33, !20, !33}
!2129 = distinct !DISubprogram(name: "conv_scoped_ptr_rq", scope: !1974, file: !1974, line: 365, type: !608, isLocal: false, isDefinition: true, scopeLine: 365, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!2130 = distinct !DISubprogram(name: "conv_scoped_rrset", scope: !1974, file: !1974, line: 109, type: !2131, isLocal: true, isDefinition: true, scopeLine: 109, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!2131 = !DISubroutineType(types: !2132)
!2132 = !{!1994, !1994}
!2133 = !{!2134}
!2134 = !DIGlobalVariable(name: "warned", scope: !2027, file: !1974, line: 24, type: !33, isLocal: true, isDefinition: true, variable: i32* @conv_scoped_query.warned)
!2135 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2136, producer: "clang version 3.8.0-2ubuntu4 (tags/RELEASE_380/final)", isOptimized: false, runtimeVersion: 0, emissionKind: 1, enums: !538, retainedTypes: !2137, subprograms: !2170)
!2136 = !DIFile(filename: "conv_stf.c", directory: "/home/muhammad/totd/totd")
!2137 = !{!20, !19, !26, !2138, !33, !14}
!2138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2139, size: 64, align: 64)
!2139 = !DIDerivedType(tag: DW_TAG_typedef, name: "RRset", file: !29, line: 168, baseType: !2140)
!2140 = !DICompositeType(tag: DW_TAG_structure_type, name: "rr_set", file: !29, line: 160, size: 320, align: 64, elements: !2141)
!2141 = !{!2142, !2143, !2144, !2157, !2158}
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !2140, file: !29, line: 161, baseType: !33, size: 32, align: 32)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "key_len", scope: !2140, file: !29, line: 163, baseType: !35, size: 64, align: 64, offset: 64)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !2140, file: !29, line: 164, baseType: !2145, size: 64, align: 64, offset: 128)
!2145 = !DIDerivedType(tag: DW_TAG_typedef, name: "U_Key", file: !29, line: 143, baseType: !2146)
!2146 = !DICompositeType(tag: DW_TAG_union_type, name: "u_key", file: !29, line: 140, size: 64, align: 64, elements: !2147)
!2147 = !{!2148, !2156}
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !2146, file: !29, line: 141, baseType: !2149, size: 64, align: 64)
!2149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2150, size: 64, align: 64)
!2150 = !DIDerivedType(tag: DW_TAG_typedef, name: "Key_Info", file: !29, line: 138, baseType: !2151)
!2151 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_info", file: !29, line: 134, size: 48, align: 16, elements: !2152)
!2152 = !{!2153, !2154, !2155}
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "r_type", scope: !2151, file: !29, line: 135, baseType: !48, size: 16, align: 16)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "r_class", scope: !2151, file: !29, line: 136, baseType: !48, size: 16, align: 16, offset: 16)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "owner_len", scope: !2151, file: !29, line: 137, baseType: !48, size: 16, align: 16, offset: 32)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !2146, file: !29, line: 142, baseType: !20, size: 64, align: 64)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "data_len", scope: !2140, file: !29, line: 166, baseType: !35, size: 64, align: 64, offset: 192)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2140, file: !29, line: 167, baseType: !2159, size: 64, align: 64, offset: 256)
!2159 = !DIDerivedType(tag: DW_TAG_typedef, name: "U_Data", file: !29, line: 157, baseType: !2160)
!2160 = !DICompositeType(tag: DW_TAG_union_type, name: "u_data", file: !29, line: 153, size: 64, align: 64, elements: !2161)
!2161 = !{!2162, !2168, !2169}
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !2160, file: !29, line: 154, baseType: !2163, size: 64, align: 64)
!2163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2164, size: 64, align: 64)
!2164 = !DIDerivedType(tag: DW_TAG_typedef, name: "Data_Data", file: !29, line: 151, baseType: !2165)
!2165 = !DICompositeType(tag: DW_TAG_structure_type, name: "data_data", file: !29, line: 149, size: 16, align: 16, elements: !2166)
!2166 = !{!2167}
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "data_cnt", scope: !2165, file: !29, line: 150, baseType: !48, size: 16, align: 16)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "rt_list", scope: !2160, file: !29, line: 155, baseType: !65, size: 64, align: 64)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !2160, file: !29, line: 156, baseType: !20, size: 64, align: 64)
!2170 = !{!2171, !2174, !2185, !2186}
!2171 = distinct !DISubprogram(name: "conv_stf_owner_rrset", scope: !2136, file: !2136, line: 20, type: !2172, isLocal: false, isDefinition: true, scopeLine: 20, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!2172 = !DISubroutineType(types: !2173)
!2173 = !{!2138, !2138}
!2174 = distinct !DISubprogram(name: "conv_stf_ns_list", scope: !2136, file: !2136, line: 101, type: !2175, isLocal: false, isDefinition: true, scopeLine: 101, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!2175 = !DISubroutineType(types: !2176)
!2176 = !{null, !2177}
!2177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2178, size: 64, align: 64)
!2178 = !DIDerivedType(tag: DW_TAG_typedef, name: "G_List", file: !29, line: 22, baseType: !2179)
!2179 = !DICompositeType(tag: DW_TAG_structure_type, name: "generic_list", file: !29, line: 18, size: 192, align: 64, elements: !2180)
!2180 = !{!2181, !2183, !2184}
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2179, file: !29, line: 19, baseType: !2182, size: 64, align: 64)
!2182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2179, size: 64, align: 64)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2179, file: !29, line: 20, baseType: !2182, size: 64, align: 64, offset: 64)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "list_data", scope: !2179, file: !29, line: 21, baseType: !26, size: 64, align: 64, offset: 128)
!2185 = distinct !DISubprogram(name: "conv_stf_ptr", scope: !2136, file: !2136, line: 129, type: !604, isLocal: false, isDefinition: true, scopeLine: 129, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!2186 = distinct !DISubprogram(name: "conv_stf_is_stf_ptr", scope: !2136, file: !2136, line: 185, type: !604, isLocal: false, isDefinition: true, scopeLine: 185, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!2187 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2188, producer: "clang version 3.8.0-2ubuntu4 (tags/RELEASE_380/final)", isOptimized: false, runtimeVersion: 0, emissionKind: 1, enums: !2, subprograms: !2189)
!2188 = !DIFile(filename: "strlcpy.c", directory: "/home/muhammad/totd/totd")
!2189 = !{!2190}
!2190 = distinct !DISubprogram(name: "strlcpy", scope: !2188, file: !2188, line: 41, type: !2191, isLocal: false, isDefinition: true, scopeLine: 45, isOptimized: false, variables: !2)
!2191 = !DISubroutineType(types: !2192)
!2192 = !{!35, !19, !4, !35}
!2193 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2194, producer: "clang version 3.8.0-2ubuntu4 (tags/RELEASE_380/final)", isOptimized: false, runtimeVersion: 0, emissionKind: 1, enums: !2, subprograms: !2195)
!2194 = !DIFile(filename: "strlcat.c", directory: "/home/muhammad/totd/totd")
!2195 = !{!2196}
!2196 = distinct !DISubprogram(name: "strlcat", scope: !2194, file: !2194, line: 43, type: !2191, isLocal: false, isDefinition: true, scopeLine: 47, isOptimized: false, variables: !2)
!2197 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2198, producer: "clang version 3.8.0-2ubuntu4 (tags/RELEASE_380/final)", isOptimized: false, runtimeVersion: 0, emissionKind: 1, enums: !2)
!2198 = !DIFile(filename: "daemon.c", directory: "/home/muhammad/totd/totd")
!2199 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2200, producer: "clang version 3.8.0-2ubuntu4 (tags/RELEASE_380/final)", isOptimized: false, runtimeVersion: 0, emissionKind: 1, enums: !2)
!2200 = !DIFile(filename: "inet_aton.c", directory: "/home/muhammad/totd/totd")
!2201 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2202, producer: "clang version 3.8.0-2ubuntu4 (tags/RELEASE_380/final)", isOptimized: false, runtimeVersion: 0, emissionKind: 1, enums: !2)
!2202 = !DIFile(filename: "html.c", directory: "/home/muhammad/totd/totd")
!2203 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2204, producer: "clang version 3.8.0-2ubuntu4 (tags/RELEASE_380/final)", isOptimized: false, runtimeVersion: 0, emissionKind: 1, enums: !538, retainedTypes: !2205, subprograms: !2206, globals: !2222)
!2204 = !DIFile(filename: "totd.c", directory: "/home/muhammad/totd/totd")
!2205 = !{!20, !33, !25, !14}
!2206 = !{!2207, !2208, !2209, !2212, !2213, !2216, !2220, !2221}
!2207 = distinct !DISubprogram(name: "usage", scope: !2204, file: !2204, line: 19, type: !770, isLocal: false, isDefinition: true, scopeLine: 19, isOptimized: false, variables: !2)
!2208 = distinct !DISubprogram(name: "unroll_loop", scope: !2204, file: !2204, line: 54, type: !471, isLocal: false, isDefinition: true, scopeLine: 54, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!2209 = distinct !DISubprogram(name: "dupStr", scope: !2204, file: !2204, line: 61, type: !2210, isLocal: false, isDefinition: true, scopeLine: 61, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!2210 = !DISubroutineType(types: !2211)
!2211 = !{!19, !19}
!2212 = distinct !DISubprogram(name: "__set_debug_level__", scope: !2204, file: !2204, line: 68, type: !471, isLocal: false, isDefinition: true, scopeLine: 68, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!2213 = distinct !DISubprogram(name: "__print_debug_string__", scope: !2204, file: !2204, line: 72, type: !2214, isLocal: false, isDefinition: true, scopeLine: 72, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!2214 = !DISubroutineType(types: !2215)
!2215 = !{null, !19, null}
!2216 = distinct !DISubprogram(name: "main", scope: !2204, file: !2204, line: 76, type: !2217, isLocal: false, isDefinition: true, scopeLine: 76, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!2217 = !DISubroutineType(types: !2218)
!2218 = !{!33, !33, !2219}
!2219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !19, size: 64, align: 64)
!2220 = distinct !DISubprogram(name: "totd_eventloop", scope: !2204, file: !2204, line: 473, type: !770, isLocal: false, isDefinition: true, scopeLine: 473, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!2221 = distinct !DISubprogram(name: "totd_exit", scope: !2204, file: !2204, line: 601, type: !742, isLocal: false, isDefinition: true, scopeLine: 601, flags: DIFlagPrototyped, isOptimized: false, variables: !2)
!2222 = !{!2223, !2224, !2225, !2226}
!2223 = !DIGlobalVariable(name: "version", scope: !2203, file: !2204, line: 17, type: !19, isLocal: false, isDefinition: true, variable: i8** @version)
!2224 = !DIGlobalVariable(name: "hex", scope: !2203, file: !2204, line: 52, type: !4, isLocal: false, isDefinition: true, variable: i8** @hex)
!2225 = !DIGlobalVariable(name: "conf_file", scope: !2203, file: !2204, line: 58, type: !19, isLocal: false, isDefinition: true, variable: i8** @conf_file)
!2226 = !DIGlobalVariable(name: "T", scope: !2203, file: !2204, line: 16, type: !2227, isLocal: false, isDefinition: true, variable: %struct.ToT* @T)
!2227 = !DICompositeType(tag: DW_TAG_structure_type, name: "ToT", file: !878, line: 95, size: 17728, align: 64, elements: !2228)
!2228 = !{!2229, !2230, !2231, !2232, !2233, !2234, !2235, !2236, !2237, !2238, !2239, !2240, !2241, !2242, !2243, !2244, !2245, !2246, !2247, !2248, !2249, !2250, !2259, !2260, !2261, !2262, !2263, !2273, !2274}
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "configfile", scope: !2227, file: !878, line: 97, baseType: !19, size: 64, align: 64)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "pidfile", scope: !2227, file: !878, line: 98, baseType: !19, size: 64, align: 64, offset: 64)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !2227, file: !878, line: 100, baseType: !19, size: 64, align: 64, offset: 128)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !2227, file: !878, line: 101, baseType: !19, size: 64, align: 64, offset: 192)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "rootdir", scope: !2227, file: !878, line: 102, baseType: !19, size: 64, align: 64, offset: 256)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2227, file: !878, line: 103, baseType: !886, size: 32, align: 32, offset: 320)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !2227, file: !878, line: 104, baseType: !889, size: 32, align: 32, offset: 352)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "quiet", scope: !2227, file: !878, line: 106, baseType: !33, size: 32, align: 32, offset: 384)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "debug", scope: !2227, file: !878, line: 107, baseType: !33, size: 32, align: 32, offset: 416)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !2227, file: !878, line: 108, baseType: !33, size: 32, align: 32, offset: 448)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "retry_interval", scope: !2227, file: !878, line: 109, baseType: !33, size: 32, align: 32, offset: 480)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "http_port", scope: !2227, file: !878, line: 110, baseType: !33, size: 32, align: 32, offset: 512)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "ip4", scope: !2227, file: !878, line: 112, baseType: !33, size: 32, align: 32, offset: 544)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "ip6", scope: !2227, file: !878, line: 113, baseType: !33, size: 32, align: 32, offset: 576)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "use_mapped", scope: !2227, file: !878, line: 114, baseType: !33, size: 32, align: 32, offset: 608)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "wildcard", scope: !2227, file: !878, line: 115, baseType: !33, size: 32, align: 32, offset: 640)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "stf", scope: !2227, file: !878, line: 116, baseType: !33, size: 32, align: 32, offset: 672)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "tcp", scope: !2227, file: !878, line: 117, baseType: !33, size: 32, align: 32, offset: 704)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "rescan_iflist", scope: !2227, file: !878, line: 118, baseType: !33, size: 32, align: 32, offset: 736)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "prefixnum", scope: !2227, file: !878, line: 120, baseType: !33, size: 32, align: 32, offset: 768)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "prefix", scope: !2227, file: !878, line: 121, baseType: !905, size: 6000, align: 8, offset: 800)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "Fwd_list", scope: !2227, file: !878, line: 123, baseType: !2251, size: 64, align: 64, offset: 6848)
!2251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2252, size: 64, align: 64)
!2252 = !DIDerivedType(tag: DW_TAG_typedef, name: "G_List", file: !29, line: 22, baseType: !2253)
!2253 = !DICompositeType(tag: DW_TAG_structure_type, name: "generic_list", file: !29, line: 18, size: 192, align: 64, elements: !2254)
!2254 = !{!2255, !2257, !2258}
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2253, file: !29, line: 19, baseType: !2256, size: 64, align: 64)
!2256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2253, size: 64, align: 64)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2253, file: !29, line: 20, baseType: !2256, size: 64, align: 64, offset: 64)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "list_data", scope: !2253, file: !29, line: 21, baseType: !26, size: 64, align: 64, offset: 128)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "current_fwd", scope: !2227, file: !878, line: 125, baseType: !2251, size: 64, align: 64, offset: 6912)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "current_prefix", scope: !2227, file: !878, line: 126, baseType: !33, size: 32, align: 32, offset: 6976)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "iflist", scope: !2227, file: !878, line: 127, baseType: !921, size: 1984, align: 64, offset: 7040)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "scoped_prefixes", scope: !2227, file: !878, line: 130, baseType: !33, size: 32, align: 32, offset: 9024)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "scoped_from", scope: !2227, file: !878, line: 131, baseType: !2264, size: 3840, align: 32, offset: 9056)
!2264 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2265, size: 3840, align: 32, elements: !927)
!2265 = !DICompositeType(tag: DW_TAG_structure_type, name: "in6_addr", file: !615, line: 211, size: 128, align: 32, elements: !2266)
!2266 = !{!2267}
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "__in6_u", scope: !2265, file: !615, line: 220, baseType: !2268, size: 128, align: 32)
!2268 = !DICompositeType(tag: DW_TAG_union_type, scope: !2265, file: !615, line: 213, size: 128, align: 32, elements: !2269)
!2269 = !{!2270, !2271, !2272}
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "__u6_addr8", scope: !2268, file: !615, line: 215, baseType: !621, size: 128, align: 8)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "__u6_addr16", scope: !2268, file: !615, line: 217, baseType: !626, size: 128, align: 16)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "__u6_addr32", scope: !2268, file: !615, line: 218, baseType: !630, size: 128, align: 32)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "scoped_to", scope: !2227, file: !878, line: 132, baseType: !2264, size: 3840, align: 32, offset: 12896)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "scoped_plen", scope: !2227, file: !878, line: 133, baseType: !930, size: 960, align: 32, offset: 16736)
!2275 = !{!"clang version 3.8.0-2ubuntu4 (tags/RELEASE_380/final)"}
!2276 = !{i32 2, !"Dwarf Version", i32 4}
!2277 = !{i32 2, !"Debug Info Version", i32 3}
!2278 = !DILocalVariable(name: "cont", arg: 1, scope: !76, file: !1, line: 31, type: !79)
!2279 = !DIExpression()
!2280 = !DILocation(line: 31, column: 29, scope: !76)
!2281 = !DILocalVariable(name: "tcp", arg: 2, scope: !76, file: !1, line: 31, type: !33)
!2282 = !DILocation(line: 31, column: 39, scope: !76)
!2283 = !DILocalVariable(name: "fn", scope: !76, file: !1, line: 32, type: !4)
!2284 = !DILocation(line: 32, column: 14, scope: !76)
!2285 = !DILocalVariable(name: "qclass", scope: !76, file: !1, line: 33, type: !48)
!2286 = !DILocation(line: 33, column: 11, scope: !76)
!2287 = !DILocalVariable(name: "qtype", scope: !76, file: !1, line: 33, type: !48)
!2288 = !DILocation(line: 33, column: 19, scope: !76)
!2289 = !DILocalVariable(name: "cp", scope: !76, file: !1, line: 34, type: !20)
!2290 = !DILocation(line: 34, column: 10, scope: !76)
!2291 = !DILocalVariable(name: "qname", scope: !76, file: !1, line: 34, type: !123)
!2292 = !DILocation(line: 34, column: 14, scope: !76)
!2293 = !DILocalVariable(name: "str", scope: !76, file: !1, line: 34, type: !123)
!2294 = !DILocation(line: 34, column: 32, scope: !76)
!2295 = !DILocalVariable(name: "a6", scope: !76, file: !1, line: 35, type: !2296)
!2296 = !DICompositeType(tag: DW_TAG_structure_type, name: "in6_addr", file: !615, line: 211, size: 128, align: 32, elements: !2297)
!2297 = !{!2298}
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "__in6_u", scope: !2296, file: !615, line: 220, baseType: !2299, size: 128, align: 32)
!2299 = !DICompositeType(tag: DW_TAG_union_type, scope: !2296, file: !615, line: 213, size: 128, align: 32, elements: !2300)
!2300 = !{!2301, !2302, !2303}
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "__u6_addr8", scope: !2299, file: !615, line: 215, baseType: !621, size: 128, align: 8)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "__u6_addr16", scope: !2299, file: !615, line: 217, baseType: !626, size: 128, align: 16)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "__u6_addr32", scope: !2299, file: !615, line: 218, baseType: !630, size: 128, align: 32)
!2304 = !DILocation(line: 35, column: 18, scope: !76)
!2305 = !DILocalVariable(name: "len", scope: !76, file: !1, line: 36, type: !33)
!2306 = !DILocation(line: 36, column: 6, scope: !76)
!2307 = !DILocation(line: 38, column: 34, scope: !76)
!2308 = !DILocation(line: 38, column: 2, scope: !76)
!2309 = !DILocation(line: 44, column: 24, scope: !76)
!2310 = !DILocation(line: 44, column: 31, scope: !76)
!2311 = !DILocation(line: 44, column: 37, scope: !76)
!2312 = !DILocation(line: 44, column: 42, scope: !76)
!2313 = !DILocation(line: 44, column: 46, scope: !76)
!2314 = !DILocation(line: 44, column: 52, scope: !76)
!2315 = !DILocation(line: 44, column: 44, scope: !76)
!2316 = !DILocation(line: 44, column: 7, scope: !76)
!2317 = !DILocation(line: 44, column: 5, scope: !76)
!2318 = !DILocation(line: 45, column: 7, scope: !2319)
!2319 = distinct !DILexicalBlock(scope: !76, file: !1, line: 45, column: 6)
!2320 = !DILocation(line: 45, column: 6, scope: !76)
!2321 = !DILocation(line: 46, column: 46, scope: !2322)
!2322 = distinct !DILexicalBlock(scope: !2319, file: !1, line: 45, column: 11)
!2323 = !DILocation(line: 46, column: 3, scope: !2322)
!2324 = !DILocation(line: 47, column: 3, scope: !2322)
!2325 = !DILocation(line: 50, column: 8, scope: !76)
!2326 = !DILocation(line: 50, column: 13, scope: !76)
!2327 = !DILocation(line: 50, column: 11, scope: !76)
!2328 = !DILocation(line: 50, column: 6, scope: !76)
!2329 = !DILocation(line: 51, column: 6, scope: !2330)
!2330 = distinct !DILexicalBlock(scope: !76, file: !1, line: 51, column: 6)
!2331 = !DILocation(line: 51, column: 10, scope: !2330)
!2332 = !DILocation(line: 51, column: 6, scope: !76)
!2333 = !DILocation(line: 52, column: 47, scope: !2334)
!2334 = distinct !DILexicalBlock(scope: !2330, file: !1, line: 51, column: 24)
!2335 = !DILocation(line: 52, column: 3, scope: !2334)
!2336 = !DILocation(line: 53, column: 3, scope: !2334)
!2337 = !DILocation(line: 56, column: 2, scope: !2338)
!2338 = distinct !DILexicalBlock(scope: !76, file: !1, line: 56, column: 2)
!2339 = !DILocation(line: 57, column: 17, scope: !76)
!2340 = !DILocation(line: 57, column: 2, scope: !76)
!2341 = !DILocation(line: 57, column: 8, scope: !76)
!2342 = !DILocation(line: 57, column: 15, scope: !76)
!2343 = !DILocation(line: 59, column: 2, scope: !2344)
!2344 = distinct !DILexicalBlock(scope: !76, file: !1, line: 59, column: 2)
!2345 = !DILocation(line: 60, column: 18, scope: !76)
!2346 = !DILocation(line: 60, column: 2, scope: !76)
!2347 = !DILocation(line: 60, column: 8, scope: !76)
!2348 = !DILocation(line: 60, column: 16, scope: !76)
!2349 = !DILocation(line: 62, column: 10, scope: !76)
!2350 = !DILocation(line: 62, column: 16, scope: !76)
!2351 = !DILocation(line: 62, column: 2, scope: !76)
!2352 = !DILocation(line: 62, column: 23, scope: !76)
!2353 = !DILocation(line: 62, column: 30, scope: !76)
!2354 = !DILocation(line: 63, column: 2, scope: !76)
!2355 = !DILocation(line: 63, column: 17, scope: !76)
!2356 = !DILocation(line: 63, column: 24, scope: !76)
!2357 = !DILocation(line: 65, column: 8, scope: !76)
!2358 = !DILocation(line: 65, column: 2, scope: !76)
!2359 = !DILocation(line: 65, column: 13, scope: !76)
!2360 = !DILocation(line: 67, column: 20, scope: !76)
!2361 = !DILocation(line: 67, column: 36, scope: !76)
!2362 = !DILocation(line: 67, column: 2, scope: !76)
!2363 = !DILocation(line: 68, column: 47, scope: !76)
!2364 = !DILocation(line: 68, column: 65, scope: !76)
!2365 = !DILocation(line: 68, column: 52, scope: !76)
!2366 = !DILocation(line: 68, column: 2, scope: !2367)
!2367 = !DILexicalBlockFile(scope: !76, file: !1, discriminator: 1)
!2368 = !DILocation(line: 70, column: 13, scope: !2369)
!2369 = distinct !DILexicalBlock(scope: !76, file: !1, line: 70, column: 13)
!2370 = !DILocation(line: 70, column: 20, scope: !2369)
!2371 = !DILocation(line: 70, column: 13, scope: !76)
!2372 = !DILocation(line: 72, column: 3, scope: !2373)
!2373 = distinct !DILexicalBlock(scope: !2369, file: !1, line: 70, column: 43)
!2374 = !DILocation(line: 72, column: 12, scope: !2373)
!2375 = !DILocation(line: 73, column: 2, scope: !2373)
!2376 = !DILocation(line: 73, column: 13, scope: !2377)
!2377 = !DILexicalBlockFile(scope: !2378, file: !1, discriminator: 1)
!2378 = distinct !DILexicalBlock(scope: !2369, file: !1, line: 73, column: 13)
!2379 = !DILocation(line: 73, column: 41, scope: !2377)
!2380 = !DILocation(line: 73, column: 20, scope: !2377)
!2381 = !DILocation(line: 73, column: 48, scope: !2377)
!2382 = !DILocation(line: 73, column: 17, scope: !2377)
!2383 = !DILocation(line: 75, column: 3, scope: !2384)
!2384 = distinct !DILexicalBlock(scope: !2378, file: !1, line: 73, column: 53)
!2385 = !DILocation(line: 75, column: 12, scope: !2384)
!2386 = !DILocation(line: 76, column: 2, scope: !2384)
!2387 = !DILocation(line: 83, column: 2, scope: !76)
!2388 = !DILocation(line: 83, column: 8, scope: !76)
!2389 = !DILocation(line: 83, column: 19, scope: !76)
!2390 = !DILocation(line: 91, column: 6, scope: !2391)
!2391 = distinct !DILexicalBlock(scope: !76, file: !1, line: 91, column: 6)
!2392 = !DILocation(line: 91, column: 12, scope: !2391)
!2393 = !DILocation(line: 91, column: 22, scope: !2391)
!2394 = !DILocation(line: 91, column: 51, scope: !2395)
!2395 = !DILexicalBlockFile(scope: !2391, file: !1, discriminator: 1)
!2396 = !DILocation(line: 91, column: 25, scope: !2395)
!2397 = !DILocation(line: 91, column: 6, scope: !2395)
!2398 = !DILocation(line: 92, column: 3, scope: !2399)
!2399 = distinct !DILexicalBlock(scope: !2391, file: !1, line: 91, column: 64)
!2400 = !DILocation(line: 92, column: 9, scope: !2399)
!2401 = !DILocation(line: 92, column: 20, scope: !2399)
!2402 = !DILocation(line: 93, column: 24, scope: !2399)
!2403 = !DILocation(line: 93, column: 3, scope: !2399)
!2404 = !DILocation(line: 94, column: 9, scope: !2405)
!2405 = distinct !DILexicalBlock(scope: !2399, file: !1, line: 94, column: 7)
!2406 = !DILocation(line: 94, column: 7, scope: !2405)
!2407 = !DILocation(line: 94, column: 7, scope: !2399)
!2408 = !DILocation(line: 95, column: 22, scope: !2409)
!2409 = distinct !DILexicalBlock(scope: !2405, file: !1, line: 94, column: 16)
!2410 = !DILocation(line: 95, column: 38, scope: !2409)
!2411 = !DILocation(line: 95, column: 4, scope: !2409)
!2412 = !DILocation(line: 97, column: 5, scope: !2409)
!2413 = !DILocation(line: 97, column: 9, scope: !2409)
!2414 = !DILocation(line: 96, column: 4, scope: !2409)
!2415 = !DILocation(line: 98, column: 3, scope: !2409)
!2416 = !DILocation(line: 99, column: 2, scope: !2399)
!2417 = !DILocation(line: 101, column: 6, scope: !2418)
!2418 = distinct !DILexicalBlock(scope: !76, file: !1, line: 101, column: 6)
!2419 = !DILocation(line: 101, column: 12, scope: !2418)
!2420 = !DILocation(line: 101, column: 22, scope: !2418)
!2421 = !DILocation(line: 101, column: 48, scope: !2422)
!2422 = !DILexicalBlockFile(scope: !2418, file: !1, discriminator: 1)
!2423 = !DILocation(line: 101, column: 25, scope: !2422)
!2424 = !DILocation(line: 101, column: 6, scope: !2422)
!2425 = !DILocation(line: 102, column: 3, scope: !2426)
!2426 = distinct !DILexicalBlock(scope: !2418, file: !1, line: 101, column: 56)
!2427 = !DILocation(line: 102, column: 9, scope: !2426)
!2428 = !DILocation(line: 102, column: 20, scope: !2426)
!2429 = !DILocation(line: 103, column: 21, scope: !2426)
!2430 = !DILocation(line: 103, column: 3, scope: !2426)
!2431 = !DILocation(line: 104, column: 9, scope: !2432)
!2432 = distinct !DILexicalBlock(scope: !2426, file: !1, line: 104, column: 7)
!2433 = !DILocation(line: 104, column: 7, scope: !2432)
!2434 = !DILocation(line: 104, column: 7, scope: !2426)
!2435 = !DILocation(line: 105, column: 22, scope: !2436)
!2436 = distinct !DILexicalBlock(scope: !2432, file: !1, line: 104, column: 16)
!2437 = !DILocation(line: 105, column: 38, scope: !2436)
!2438 = !DILocation(line: 105, column: 4, scope: !2436)
!2439 = !DILocation(line: 107, column: 5, scope: !2436)
!2440 = !DILocation(line: 107, column: 9, scope: !2436)
!2441 = !DILocation(line: 106, column: 4, scope: !2436)
!2442 = !DILocation(line: 108, column: 3, scope: !2436)
!2443 = !DILocation(line: 109, column: 2, scope: !2426)
!2444 = !DILocation(line: 112, column: 8, scope: !2445)
!2445 = distinct !DILexicalBlock(scope: !76, file: !1, line: 112, column: 6)
!2446 = !DILocation(line: 112, column: 6, scope: !2445)
!2447 = !DILocation(line: 112, column: 24, scope: !2445)
!2448 = !DILocation(line: 112, column: 47, scope: !2449)
!2449 = !DILexicalBlockFile(scope: !2445, file: !1, discriminator: 1)
!2450 = !DILocation(line: 112, column: 27, scope: !2449)
!2451 = !DILocation(line: 112, column: 57, scope: !2449)
!2452 = !DILocation(line: 112, column: 6, scope: !2449)
!2453 = !DILocation(line: 113, column: 3, scope: !2454)
!2454 = distinct !DILexicalBlock(scope: !2445, file: !1, line: 112, column: 64)
!2455 = !DILocation(line: 113, column: 9, scope: !2454)
!2456 = !DILocation(line: 113, column: 20, scope: !2454)
!2457 = !DILocation(line: 114, column: 22, scope: !2454)
!2458 = !DILocation(line: 114, column: 3, scope: !2454)
!2459 = !DILocation(line: 115, column: 9, scope: !2460)
!2460 = distinct !DILexicalBlock(scope: !2454, file: !1, line: 115, column: 7)
!2461 = !DILocation(line: 115, column: 7, scope: !2460)
!2462 = !DILocation(line: 115, column: 7, scope: !2454)
!2463 = !DILocation(line: 116, column: 22, scope: !2464)
!2464 = distinct !DILexicalBlock(scope: !2460, file: !1, line: 115, column: 16)
!2465 = !DILocation(line: 116, column: 38, scope: !2464)
!2466 = !DILocation(line: 116, column: 4, scope: !2464)
!2467 = !DILocation(line: 118, column: 4, scope: !2464)
!2468 = !DILocation(line: 118, column: 8, scope: !2464)
!2469 = !DILocation(line: 117, column: 4, scope: !2464)
!2470 = !DILocation(line: 119, column: 3, scope: !2464)
!2471 = !DILocation(line: 120, column: 2, scope: !2454)
!2472 = !DILocation(line: 139, column: 22, scope: !76)
!2473 = !DILocation(line: 139, column: 2, scope: !76)
!2474 = !DILocation(line: 139, column: 8, scope: !76)
!2475 = !DILocation(line: 139, column: 20, scope: !76)
!2476 = !DILocation(line: 140, column: 21, scope: !76)
!2477 = !DILocation(line: 140, column: 27, scope: !76)
!2478 = !DILocation(line: 140, column: 40, scope: !76)
!2479 = !DILocation(line: 140, column: 2, scope: !76)
!2480 = !DILocation(line: 140, column: 8, scope: !76)
!2481 = !DILocation(line: 140, column: 19, scope: !76)
!2482 = !DILocation(line: 141, column: 7, scope: !2483)
!2483 = distinct !DILexicalBlock(scope: !76, file: !1, line: 141, column: 6)
!2484 = !DILocation(line: 141, column: 13, scope: !2483)
!2485 = !DILocation(line: 141, column: 24, scope: !2483)
!2486 = !DILocation(line: 141, column: 28, scope: !2487)
!2487 = !DILexicalBlockFile(scope: !2483, file: !1, discriminator: 1)
!2488 = !DILocation(line: 141, column: 34, scope: !2487)
!2489 = !DILocation(line: 141, column: 46, scope: !2487)
!2490 = !DILocation(line: 141, column: 6, scope: !2487)
!2491 = !DILocation(line: 142, column: 52, scope: !2492)
!2492 = distinct !DILexicalBlock(scope: !2483, file: !1, line: 141, column: 57)
!2493 = !DILocation(line: 142, column: 3, scope: !2492)
!2494 = !DILocation(line: 143, column: 3, scope: !2492)
!2495 = !DILocation(line: 148, column: 5, scope: !76)
!2496 = !DILocation(line: 148, column: 11, scope: !76)
!2497 = !DILocation(line: 148, column: 23, scope: !76)
!2498 = !DILocation(line: 147, column: 15, scope: !76)
!2499 = !DILocation(line: 148, column: 43, scope: !76)
!2500 = !DILocation(line: 147, column: 3, scope: !76)
!2501 = !DILocation(line: 146, column: 9, scope: !76)
!2502 = !DILocation(line: 151, column: 22, scope: !76)
!2503 = !DILocation(line: 151, column: 28, scope: !76)
!2504 = !DILocation(line: 151, column: 35, scope: !76)
!2505 = !DILocation(line: 151, column: 43, scope: !76)
!2506 = !DILocation(line: 151, column: 50, scope: !76)
!2507 = !DILocation(line: 151, column: 10, scope: !76)
!2508 = !DILocation(line: 151, column: 2, scope: !76)
!2509 = !DILocation(line: 152, column: 1, scope: !76)
!2510 = !DILocalVariable(name: "parent", arg: 1, scope: !168, file: !1, line: 155, type: !84)
!2511 = !DILocation(line: 155, column: 32, scope: !168)
!2512 = !DILocalVariable(name: "qname", arg: 2, scope: !168, file: !1, line: 155, type: !20)
!2513 = !DILocation(line: 155, column: 48, scope: !168)
!2514 = !DILocalVariable(name: "qclass", arg: 3, scope: !168, file: !1, line: 155, type: !48)
!2515 = !DILocation(line: 155, column: 64, scope: !168)
!2516 = !DILocalVariable(name: "qtype", arg: 4, scope: !168, file: !1, line: 156, type: !48)
!2517 = !DILocation(line: 156, column: 18, scope: !168)
!2518 = !DILocalVariable(name: "tcp", arg: 5, scope: !168, file: !1, line: 156, type: !33)
!2519 = !DILocation(line: 156, column: 29, scope: !168)
!2520 = !DILocalVariable(name: "fn", scope: !168, file: !1, line: 157, type: !4)
!2521 = !DILocation(line: 157, column: 14, scope: !168)
!2522 = !DILocalVariable(name: "str", scope: !168, file: !1, line: 159, type: !123)
!2523 = !DILocation(line: 159, column: 9, scope: !168)
!2524 = !DILocalVariable(name: "cont", scope: !168, file: !1, line: 160, type: !79)
!2525 = !DILocation(line: 160, column: 11, scope: !168)
!2526 = !DILocation(line: 162, column: 34, scope: !168)
!2527 = !DILocation(line: 162, column: 2, scope: !168)
!2528 = !DILocation(line: 165, column: 9, scope: !168)
!2529 = !DILocation(line: 165, column: 7, scope: !168)
!2530 = !DILocation(line: 166, column: 7, scope: !2531)
!2531 = distinct !DILexicalBlock(scope: !168, file: !1, line: 166, column: 6)
!2532 = !DILocation(line: 166, column: 6, scope: !168)
!2533 = !DILocation(line: 167, column: 26, scope: !2531)
!2534 = !DILocation(line: 167, column: 11, scope: !2531)
!2535 = !DILocation(line: 167, column: 3, scope: !2531)
!2536 = !DILocation(line: 170, column: 17, scope: !168)
!2537 = !DILocation(line: 170, column: 2, scope: !168)
!2538 = !DILocation(line: 170, column: 8, scope: !168)
!2539 = !DILocation(line: 170, column: 15, scope: !168)
!2540 = !DILocation(line: 171, column: 24, scope: !168)
!2541 = !DILocation(line: 171, column: 2, scope: !168)
!2542 = !DILocation(line: 171, column: 8, scope: !168)
!2543 = !DILocation(line: 171, column: 16, scope: !168)
!2544 = !DILocation(line: 171, column: 22, scope: !168)
!2545 = !DILocation(line: 172, column: 2, scope: !168)
!2546 = !DILocation(line: 172, column: 8, scope: !168)
!2547 = !DILocation(line: 172, column: 16, scope: !168)
!2548 = !DILocation(line: 173, column: 21, scope: !168)
!2549 = !DILocation(line: 173, column: 27, scope: !168)
!2550 = !DILocation(line: 173, column: 35, scope: !168)
!2551 = !DILocation(line: 173, column: 2, scope: !168)
!2552 = !DILocation(line: 173, column: 8, scope: !168)
!2553 = !DILocation(line: 173, column: 19, scope: !168)
!2554 = !DILocation(line: 175, column: 19, scope: !168)
!2555 = !DILocation(line: 175, column: 25, scope: !168)
!2556 = !DILocation(line: 175, column: 46, scope: !168)
!2557 = !DILocation(line: 175, column: 2, scope: !168)
!2558 = !DILocation(line: 176, column: 18, scope: !168)
!2559 = !DILocation(line: 176, column: 2, scope: !168)
!2560 = !DILocation(line: 176, column: 8, scope: !168)
!2561 = !DILocation(line: 176, column: 16, scope: !168)
!2562 = !DILocation(line: 177, column: 17, scope: !168)
!2563 = !DILocation(line: 177, column: 2, scope: !168)
!2564 = !DILocation(line: 177, column: 8, scope: !168)
!2565 = !DILocation(line: 177, column: 15, scope: !168)
!2566 = !DILocation(line: 178, column: 15, scope: !168)
!2567 = !DILocation(line: 178, column: 2, scope: !168)
!2568 = !DILocation(line: 178, column: 8, scope: !168)
!2569 = !DILocation(line: 178, column: 13, scope: !168)
!2570 = !DILocation(line: 180, column: 47, scope: !168)
!2571 = !DILocation(line: 180, column: 2, scope: !168)
!2572 = !DILocation(line: 187, column: 7, scope: !2573)
!2573 = distinct !DILexicalBlock(scope: !168, file: !1, line: 187, column: 6)
!2574 = !DILocation(line: 187, column: 6, scope: !2573)
!2575 = !DILocation(line: 187, column: 13, scope: !2573)
!2576 = !DILocation(line: 187, column: 6, scope: !168)
!2577 = !DILocation(line: 188, column: 12, scope: !2573)
!2578 = !DILocation(line: 188, column: 20, scope: !2573)
!2579 = !DILocation(line: 188, column: 25, scope: !2573)
!2580 = !DILocation(line: 188, column: 27, scope: !2573)
!2581 = !DILocation(line: 188, column: 9, scope: !2573)
!2582 = !DILocation(line: 188, column: 3, scope: !2573)
!2583 = !DILocation(line: 190, column: 36, scope: !168)
!2584 = !DILocation(line: 190, column: 43, scope: !168)
!2585 = !DILocation(line: 190, column: 50, scope: !168)
!2586 = !DILocation(line: 190, column: 58, scope: !168)
!2587 = !DILocation(line: 190, column: 64, scope: !168)
!2588 = !DILocation(line: 190, column: 19, scope: !168)
!2589 = !DILocation(line: 190, column: 2, scope: !168)
!2590 = !DILocation(line: 190, column: 8, scope: !168)
!2591 = !DILocation(line: 190, column: 17, scope: !168)
!2592 = !DILocation(line: 193, column: 6, scope: !2593)
!2593 = distinct !DILexicalBlock(scope: !168, file: !1, line: 193, column: 6)
!2594 = !DILocation(line: 193, column: 12, scope: !2593)
!2595 = !DILocation(line: 193, column: 21, scope: !2593)
!2596 = !DILocation(line: 193, column: 6, scope: !168)
!2597 = !DILocation(line: 195, column: 4, scope: !2598)
!2598 = distinct !DILexicalBlock(scope: !2593, file: !1, line: 193, column: 26)
!2599 = !DILocation(line: 194, column: 17, scope: !2598)
!2600 = !DILocation(line: 196, column: 26, scope: !2598)
!2601 = !DILocation(line: 196, column: 11, scope: !2598)
!2602 = !DILocation(line: 196, column: 3, scope: !2598)
!2603 = !DILocation(line: 199, column: 32, scope: !168)
!2604 = !DILocation(line: 199, column: 38, scope: !168)
!2605 = !DILocation(line: 199, column: 24, scope: !168)
!2606 = !DILocation(line: 199, column: 9, scope: !168)
!2607 = !DILocation(line: 199, column: 15, scope: !168)
!2608 = !DILocation(line: 199, column: 20, scope: !168)
!2609 = !DILocation(line: 199, column: 22, scope: !168)
!2610 = !DILocation(line: 200, column: 7, scope: !2611)
!2611 = distinct !DILexicalBlock(scope: !168, file: !1, line: 200, column: 6)
!2612 = !DILocation(line: 200, column: 13, scope: !2611)
!2613 = !DILocation(line: 200, column: 18, scope: !2611)
!2614 = !DILocation(line: 200, column: 6, scope: !168)
!2615 = !DILocation(line: 201, column: 50, scope: !2616)
!2616 = distinct !DILexicalBlock(scope: !2611, file: !1, line: 200, column: 21)
!2617 = !DILocation(line: 201, column: 3, scope: !2616)
!2618 = !DILocation(line: 202, column: 26, scope: !2616)
!2619 = !DILocation(line: 202, column: 11, scope: !2616)
!2620 = !DILocation(line: 202, column: 3, scope: !2616)
!2621 = !DILocation(line: 205, column: 10, scope: !168)
!2622 = !DILocation(line: 205, column: 16, scope: !168)
!2623 = !DILocation(line: 205, column: 21, scope: !168)
!2624 = !DILocation(line: 205, column: 29, scope: !168)
!2625 = !DILocation(line: 205, column: 35, scope: !168)
!2626 = !DILocation(line: 205, column: 2, scope: !168)
!2627 = !DILocation(line: 206, column: 20, scope: !168)
!2628 = !DILocation(line: 206, column: 26, scope: !168)
!2629 = !DILocation(line: 206, column: 31, scope: !168)
!2630 = !DILocation(line: 206, column: 9, scope: !168)
!2631 = !DILocation(line: 206, column: 15, scope: !168)
!2632 = !DILocation(line: 206, column: 18, scope: !168)
!2633 = !DILocation(line: 208, column: 6, scope: !2634)
!2634 = distinct !DILexicalBlock(scope: !168, file: !1, line: 208, column: 6)
!2635 = !DILocation(line: 208, column: 10, scope: !2634)
!2636 = !DILocation(line: 208, column: 6, scope: !168)
!2637 = !DILocation(line: 209, column: 21, scope: !2638)
!2638 = distinct !DILexicalBlock(scope: !2634, file: !1, line: 208, column: 16)
!2639 = !DILocation(line: 209, column: 37, scope: !2638)
!2640 = !DILocation(line: 209, column: 43, scope: !2638)
!2641 = !DILocation(line: 209, column: 3, scope: !2638)
!2642 = !DILocation(line: 211, column: 17, scope: !2638)
!2643 = !DILocation(line: 211, column: 23, scope: !2638)
!2644 = !DILocation(line: 211, column: 4, scope: !2638)
!2645 = !DILocation(line: 211, column: 32, scope: !2638)
!2646 = !DILocation(line: 210, column: 3, scope: !2638)
!2647 = !DILocation(line: 212, column: 28, scope: !2638)
!2648 = !DILocation(line: 212, column: 9, scope: !2638)
!2649 = !DILocation(line: 212, column: 7, scope: !2638)
!2650 = !DILocation(line: 213, column: 2, scope: !2638)
!2651 = !DILocation(line: 215, column: 6, scope: !2652)
!2652 = distinct !DILexicalBlock(scope: !168, file: !1, line: 215, column: 6)
!2653 = !DILocation(line: 215, column: 10, scope: !2652)
!2654 = !DILocation(line: 215, column: 6, scope: !168)
!2655 = !DILocation(line: 216, column: 21, scope: !2656)
!2656 = distinct !DILexicalBlock(scope: !2652, file: !1, line: 215, column: 16)
!2657 = !DILocation(line: 216, column: 37, scope: !2656)
!2658 = !DILocation(line: 216, column: 43, scope: !2656)
!2659 = !DILocation(line: 216, column: 3, scope: !2656)
!2660 = !DILocation(line: 218, column: 17, scope: !2656)
!2661 = !DILocation(line: 218, column: 23, scope: !2656)
!2662 = !DILocation(line: 218, column: 4, scope: !2656)
!2663 = !DILocation(line: 218, column: 32, scope: !2656)
!2664 = !DILocation(line: 217, column: 3, scope: !2656)
!2665 = !DILocation(line: 219, column: 28, scope: !2656)
!2666 = !DILocation(line: 219, column: 9, scope: !2656)
!2667 = !DILocation(line: 219, column: 7, scope: !2656)
!2668 = !DILocation(line: 220, column: 2, scope: !2656)
!2669 = !DILocation(line: 222, column: 9, scope: !168)
!2670 = !DILocation(line: 222, column: 2, scope: !168)
!2671 = !DILocation(line: 223, column: 1, scope: !168)
!2672 = !DILocalVariable(name: "cont", arg: 1, scope: !175, file: !1, line: 682, type: !79)
!2673 = !DILocation(line: 682, column: 29, scope: !175)
!2674 = !DILocalVariable(name: "status", arg: 2, scope: !175, file: !1, line: 682, type: !33)
!2675 = !DILocation(line: 682, column: 39, scope: !175)
!2676 = !DILocation(line: 684, column: 6, scope: !2677)
!2677 = distinct !DILexicalBlock(scope: !175, file: !1, line: 684, column: 6)
!2678 = !DILocation(line: 684, column: 11, scope: !2677)
!2679 = !DILocation(line: 684, column: 14, scope: !2680)
!2680 = !DILexicalBlockFile(scope: !2677, file: !1, discriminator: 1)
!2681 = !DILocation(line: 684, column: 21, scope: !2680)
!2682 = !DILocation(line: 684, column: 6, scope: !2680)
!2683 = !DILocation(line: 686, column: 3, scope: !2684)
!2684 = distinct !DILexicalBlock(scope: !2677, file: !1, line: 684, column: 28)
!2685 = !DILocation(line: 686, column: 9, scope: !2684)
!2686 = !DILocation(line: 686, column: 17, scope: !2684)
!2687 = !DILocation(line: 686, column: 23, scope: !2684)
!2688 = !DILocation(line: 687, column: 18, scope: !2684)
!2689 = !DILocation(line: 687, column: 24, scope: !2684)
!2690 = !DILocation(line: 687, column: 3, scope: !2684)
!2691 = !DILocation(line: 688, column: 3, scope: !2684)
!2692 = !DILocation(line: 688, column: 9, scope: !2684)
!2693 = !DILocation(line: 688, column: 16, scope: !2684)
!2694 = !DILocation(line: 689, column: 2, scope: !2684)
!2695 = !DILocation(line: 692, column: 6, scope: !2696)
!2696 = distinct !DILexicalBlock(scope: !175, file: !1, line: 692, column: 6)
!2697 = !DILocation(line: 692, column: 11, scope: !2696)
!2698 = !DILocation(line: 692, column: 14, scope: !2699)
!2699 = !DILexicalBlockFile(scope: !2696, file: !1, discriminator: 1)
!2700 = !DILocation(line: 692, column: 20, scope: !2699)
!2701 = !DILocation(line: 692, column: 6, scope: !2699)
!2702 = !DILocation(line: 693, column: 3, scope: !2703)
!2703 = distinct !DILexicalBlock(scope: !2696, file: !1, line: 692, column: 28)
!2704 = !DILocation(line: 693, column: 9, scope: !2703)
!2705 = !DILocation(line: 693, column: 17, scope: !2703)
!2706 = !DILocation(line: 693, column: 23, scope: !2703)
!2707 = !DILocation(line: 694, column: 3, scope: !2703)
!2708 = !DILocation(line: 694, column: 9, scope: !2703)
!2709 = !DILocation(line: 694, column: 17, scope: !2703)
!2710 = !DILocation(line: 694, column: 26, scope: !2703)
!2711 = !DILocation(line: 694, column: 32, scope: !2703)
!2712 = !DILocation(line: 695, column: 3, scope: !2703)
!2713 = !DILocation(line: 695, column: 9, scope: !2703)
!2714 = !DILocation(line: 695, column: 16, scope: !2703)
!2715 = !DILocation(line: 696, column: 2, scope: !2703)
!2716 = !DILocation(line: 698, column: 19, scope: !175)
!2717 = !DILocation(line: 698, column: 2, scope: !175)
!2718 = !DILocation(line: 700, column: 10, scope: !175)
!2719 = !DILocation(line: 700, column: 2, scope: !175)
!2720 = !DILocalVariable(name: "cont", arg: 1, scope: !171, file: !1, line: 225, type: !79)
!2721 = !DILocation(line: 225, column: 29, scope: !171)
!2722 = !DILocalVariable(name: "astr", scope: !171, file: !1, line: 226, type: !2723)
!2723 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6, size: 2048, align: 8, elements: !124)
!2724 = !DILocation(line: 226, column: 7, scope: !171)
!2725 = !DILocalVariable(name: "bstr", scope: !171, file: !1, line: 226, type: !2723)
!2726 = !DILocation(line: 226, column: 24, scope: !171)
!2727 = !DILocation(line: 228, column: 2, scope: !171)
!2728 = !DILocation(line: 228, column: 8, scope: !171)
!2729 = !DILocation(line: 228, column: 19, scope: !171)
!2730 = !DILocation(line: 229, column: 18, scope: !171)
!2731 = !DILocation(line: 229, column: 24, scope: !171)
!2732 = !DILocation(line: 229, column: 32, scope: !171)
!2733 = !DILocation(line: 229, column: 2, scope: !171)
!2734 = !DILocation(line: 229, column: 8, scope: !171)
!2735 = !DILocation(line: 229, column: 16, scope: !171)
!2736 = !DILocation(line: 232, column: 12, scope: !171)
!2737 = !DILocation(line: 232, column: 18, scope: !171)
!2738 = !DILocation(line: 232, column: 30, scope: !171)
!2739 = !DILocation(line: 232, column: 2, scope: !171)
!2740 = !DILocation(line: 234, column: 6, scope: !2741)
!2741 = distinct !DILexicalBlock(scope: !171, file: !1, line: 234, column: 6)
!2742 = !DILocation(line: 234, column: 12, scope: !2741)
!2743 = !DILocation(line: 234, column: 24, scope: !2741)
!2744 = !DILocation(line: 234, column: 6, scope: !171)
!2745 = !DILocation(line: 235, column: 3, scope: !2746)
!2746 = distinct !DILexicalBlock(scope: !2741, file: !1, line: 234, column: 47)
!2747 = !DILocation(line: 236, column: 3, scope: !2746)
!2748 = !DILocation(line: 240, column: 7, scope: !2749)
!2749 = distinct !DILexicalBlock(scope: !171, file: !1, line: 240, column: 6)
!2750 = !DILocation(line: 240, column: 13, scope: !2749)
!2751 = !DILocation(line: 240, column: 25, scope: !2749)
!2752 = !DILocation(line: 240, column: 30, scope: !2749)
!2753 = !DILocation(line: 240, column: 34, scope: !2754)
!2754 = !DILexicalBlockFile(scope: !2749, file: !1, discriminator: 1)
!2755 = !DILocation(line: 240, column: 40, scope: !2754)
!2756 = !DILocation(line: 240, column: 52, scope: !2754)
!2757 = !DILocation(line: 240, column: 58, scope: !2754)
!2758 = !DILocation(line: 240, column: 6, scope: !2754)
!2759 = !DILocation(line: 241, column: 3, scope: !2749)
!2760 = !DILocation(line: 243, column: 22, scope: !2749)
!2761 = !DILocation(line: 243, column: 28, scope: !2749)
!2762 = !DILocation(line: 243, column: 40, scope: !2749)
!2763 = !DILocation(line: 243, column: 3, scope: !2749)
!2764 = !DILocation(line: 243, column: 9, scope: !2749)
!2765 = !DILocation(line: 243, column: 20, scope: !2749)
!2766 = !DILocation(line: 245, column: 30, scope: !171)
!2767 = !DILocation(line: 245, column: 47, scope: !171)
!2768 = !DILocation(line: 245, column: 53, scope: !171)
!2769 = !DILocation(line: 245, column: 2, scope: !171)
!2770 = !DILocation(line: 246, column: 70, scope: !171)
!2771 = !DILocation(line: 247, column: 36, scope: !171)
!2772 = !DILocation(line: 247, column: 42, scope: !171)
!2773 = !DILocation(line: 247, column: 54, scope: !171)
!2774 = !DILocation(line: 247, column: 15, scope: !171)
!2775 = !DILocation(line: 248, column: 8, scope: !171)
!2776 = !DILocation(line: 247, column: 3, scope: !171)
!2777 = !DILocation(line: 246, column: 9, scope: !171)
!2778 = !DILocation(line: 256, column: 3, scope: !171)
!2779 = !DILocation(line: 256, column: 9, scope: !171)
!2780 = !DILocation(line: 257, column: 3, scope: !171)
!2781 = !DILocation(line: 257, column: 9, scope: !171)
!2782 = !DILocation(line: 255, column: 2, scope: !171)
!2783 = !DILocation(line: 259, column: 2, scope: !171)
!2784 = !DILocation(line: 260, column: 1, scope: !171)
!2785 = !DILocalVariable(name: "cont", arg: 1, scope: !174, file: !1, line: 272, type: !79)
!2786 = !DILocation(line: 272, column: 33, scope: !174)
!2787 = !DILocalVariable(name: "fn", scope: !174, file: !1, line: 273, type: !4)
!2788 = !DILocation(line: 273, column: 21, scope: !174)
!2789 = !DILocalVariable(name: "qname", scope: !174, file: !1, line: 274, type: !123)
!2790 = !DILocation(line: 274, column: 9, scope: !174)
!2791 = !DILocalVariable(name: "astr", scope: !174, file: !1, line: 274, type: !123)
!2792 = !DILocation(line: 274, column: 27, scope: !174)
!2793 = !DILocalVariable(name: "qclass", scope: !174, file: !1, line: 275, type: !48)
!2794 = !DILocation(line: 275, column: 11, scope: !174)
!2795 = !DILocalVariable(name: "qtype", scope: !174, file: !1, line: 275, type: !48)
!2796 = !DILocation(line: 275, column: 19, scope: !174)
!2797 = !DILocalVariable(name: "switch_to_tcp", scope: !174, file: !1, line: 276, type: !33)
!2798 = !DILocation(line: 276, column: 6, scope: !174)
!2799 = !DILocalVariable(name: "rtype", scope: !174, file: !1, line: 277, type: !48)
!2800 = !DILocation(line: 277, column: 11, scope: !174)
!2801 = !DILocation(line: 279, column: 34, scope: !174)
!2802 = !DILocation(line: 279, column: 2, scope: !174)
!2803 = !DILocation(line: 288, column: 6, scope: !2804)
!2804 = distinct !DILexicalBlock(scope: !174, file: !1, line: 288, column: 6)
!2805 = !DILocation(line: 288, column: 12, scope: !2804)
!2806 = !DILocation(line: 288, column: 6, scope: !174)
!2807 = !DILocalVariable(name: "cp", scope: !2808, file: !1, line: 289, type: !20)
!2808 = distinct !DILexicalBlock(scope: !2804, file: !1, line: 288, column: 19)
!2809 = !DILocation(line: 289, column: 11, scope: !2808)
!2810 = !DILocation(line: 291, column: 7, scope: !2811)
!2811 = distinct !DILexicalBlock(scope: !2808, file: !1, line: 291, column: 7)
!2812 = !DILocation(line: 291, column: 13, scope: !2811)
!2813 = !DILocation(line: 291, column: 20, scope: !2811)
!2814 = !DILocation(line: 291, column: 25, scope: !2811)
!2815 = !DILocation(line: 291, column: 30, scope: !2811)
!2816 = !DILocation(line: 291, column: 36, scope: !2811)
!2817 = !DILocation(line: 291, column: 45, scope: !2811)
!2818 = !DILocation(line: 292, column: 11, scope: !2811)
!2819 = !DILocation(line: 292, column: 17, scope: !2811)
!2820 = !DILocation(line: 292, column: 24, scope: !2811)
!2821 = !DILocation(line: 292, column: 29, scope: !2811)
!2822 = !DILocation(line: 292, column: 34, scope: !2811)
!2823 = !DILocation(line: 292, column: 40, scope: !2811)
!2824 = !DILocation(line: 292, column: 55, scope: !2811)
!2825 = !DILocation(line: 293, column: 7, scope: !2811)
!2826 = !DILocation(line: 293, column: 13, scope: !2811)
!2827 = !DILocation(line: 293, column: 20, scope: !2811)
!2828 = !DILocation(line: 293, column: 25, scope: !2811)
!2829 = !DILocation(line: 293, column: 30, scope: !2811)
!2830 = !DILocation(line: 293, column: 36, scope: !2811)
!2831 = !DILocation(line: 291, column: 7, scope: !2832)
!2832 = !DILexicalBlockFile(scope: !2808, file: !1, discriminator: 1)
!2833 = !DILocation(line: 295, column: 28, scope: !2834)
!2834 = distinct !DILexicalBlock(scope: !2811, file: !1, line: 293, column: 53)
!2835 = !DILocation(line: 295, column: 34, scope: !2834)
!2836 = !DILocation(line: 295, column: 41, scope: !2834)
!2837 = !DILocation(line: 295, column: 46, scope: !2834)
!2838 = !DILocation(line: 295, column: 51, scope: !2834)
!2839 = !DILocation(line: 295, column: 4, scope: !2834)
!2840 = !DILocation(line: 295, column: 10, scope: !2834)
!2841 = !DILocation(line: 295, column: 15, scope: !2834)
!2842 = !DILocation(line: 295, column: 20, scope: !2834)
!2843 = !DILocation(line: 295, column: 26, scope: !2834)
!2844 = !DILocation(line: 296, column: 4, scope: !2834)
!2845 = !DILocation(line: 299, column: 25, scope: !2808)
!2846 = !DILocation(line: 299, column: 31, scope: !2808)
!2847 = !DILocation(line: 299, column: 38, scope: !2808)
!2848 = !DILocation(line: 299, column: 43, scope: !2808)
!2849 = !DILocation(line: 299, column: 45, scope: !2808)
!2850 = !DILocation(line: 300, column: 4, scope: !2808)
!2851 = !DILocation(line: 300, column: 10, scope: !2808)
!2852 = !DILocation(line: 300, column: 17, scope: !2808)
!2853 = !DILocation(line: 300, column: 22, scope: !2808)
!2854 = !DILocation(line: 300, column: 26, scope: !2808)
!2855 = !DILocation(line: 300, column: 32, scope: !2808)
!2856 = !DILocation(line: 300, column: 39, scope: !2808)
!2857 = !DILocation(line: 300, column: 24, scope: !2808)
!2858 = !DILocation(line: 299, column: 8, scope: !2808)
!2859 = !DILocation(line: 299, column: 6, scope: !2808)
!2860 = !DILocation(line: 301, column: 7, scope: !2861)
!2861 = distinct !DILexicalBlock(scope: !2808, file: !1, line: 301, column: 7)
!2862 = !DILocation(line: 301, column: 7, scope: !2808)
!2863 = !DILocation(line: 305, column: 4, scope: !2864)
!2864 = distinct !DILexicalBlock(scope: !2865, file: !1, line: 305, column: 4)
!2865 = distinct !DILexicalBlock(scope: !2861, file: !1, line: 301, column: 11)
!2866 = !DILocation(line: 306, column: 3, scope: !2865)
!2867 = !DILocation(line: 307, column: 46, scope: !2868)
!2868 = distinct !DILexicalBlock(scope: !2861, file: !1, line: 306, column: 10)
!2869 = !DILocation(line: 307, column: 4, scope: !2868)
!2870 = !DILocation(line: 308, column: 4, scope: !2868)
!2871 = !DILocation(line: 310, column: 2, scope: !2808)
!2872 = !DILocation(line: 311, column: 40, scope: !2873)
!2873 = distinct !DILexicalBlock(scope: !2804, file: !1, line: 310, column: 9)
!2874 = !DILocation(line: 311, column: 3, scope: !2873)
!2875 = !DILocation(line: 312, column: 3, scope: !2873)
!2876 = !DILocation(line: 316, column: 11, scope: !174)
!2877 = !DILocation(line: 316, column: 17, scope: !174)
!2878 = !DILocation(line: 316, column: 9, scope: !174)
!2879 = !DILocation(line: 317, column: 10, scope: !174)
!2880 = !DILocation(line: 317, column: 16, scope: !174)
!2881 = !DILocation(line: 317, column: 8, scope: !174)
!2882 = !DILocation(line: 318, column: 18, scope: !174)
!2883 = !DILocation(line: 318, column: 39, scope: !174)
!2884 = !DILocation(line: 318, column: 45, scope: !174)
!2885 = !DILocation(line: 318, column: 2, scope: !174)
!2886 = !DILocation(line: 320, column: 43, scope: !174)
!2887 = !DILocation(line: 320, column: 47, scope: !174)
!2888 = !DILocation(line: 320, column: 53, scope: !174)
!2889 = !DILocation(line: 320, column: 2, scope: !174)
!2890 = !DILocation(line: 326, column: 16, scope: !174)
!2891 = !DILocation(line: 327, column: 6, scope: !2892)
!2892 = distinct !DILexicalBlock(scope: !174, file: !1, line: 327, column: 6)
!2893 = !DILocation(line: 327, column: 12, scope: !2892)
!2894 = !DILocation(line: 327, column: 19, scope: !2892)
!2895 = !DILocation(line: 327, column: 24, scope: !2892)
!2896 = !DILocation(line: 327, column: 29, scope: !2892)
!2897 = !DILocation(line: 327, column: 32, scope: !2892)
!2898 = !DILocation(line: 327, column: 6, scope: !174)
!2899 = !DILocation(line: 328, column: 47, scope: !2900)
!2900 = distinct !DILexicalBlock(scope: !2892, file: !1, line: 327, column: 38)
!2901 = !DILocation(line: 328, column: 3, scope: !2900)
!2902 = !DILocation(line: 329, column: 7, scope: !2903)
!2903 = distinct !DILexicalBlock(scope: !2900, file: !1, line: 329, column: 7)
!2904 = !DILocation(line: 329, column: 13, scope: !2903)
!2905 = !DILocation(line: 329, column: 20, scope: !2903)
!2906 = !DILocation(line: 329, column: 30, scope: !2903)
!2907 = !DILocation(line: 329, column: 7, scope: !2900)
!2908 = !DILocation(line: 330, column: 18, scope: !2909)
!2909 = distinct !DILexicalBlock(scope: !2903, file: !1, line: 329, column: 35)
!2910 = !DILocation(line: 331, column: 44, scope: !2909)
!2911 = !DILocation(line: 331, column: 4, scope: !2909)
!2912 = !DILocation(line: 333, column: 4, scope: !2909)
!2913 = !DILocation(line: 336, column: 50, scope: !2914)
!2914 = distinct !DILexicalBlock(scope: !2903, file: !1, line: 334, column: 10)
!2915 = !DILocation(line: 336, column: 4, scope: !2914)
!2916 = !DILocation(line: 337, column: 4, scope: !2914)
!2917 = !DILocation(line: 347, column: 6, scope: !2918)
!2918 = distinct !DILexicalBlock(scope: !174, file: !1, line: 347, column: 6)
!2919 = !DILocation(line: 347, column: 12, scope: !2918)
!2920 = !DILocation(line: 347, column: 19, scope: !2918)
!2921 = !DILocation(line: 347, column: 24, scope: !2918)
!2922 = !DILocation(line: 347, column: 29, scope: !2918)
!2923 = !DILocation(line: 347, column: 35, scope: !2918)
!2924 = !DILocation(line: 347, column: 6, scope: !174)
!2925 = !DILocation(line: 348, column: 11, scope: !2926)
!2926 = distinct !DILexicalBlock(scope: !2927, file: !1, line: 348, column: 11)
!2927 = distinct !DILexicalBlock(scope: !2918, file: !1, line: 347, column: 52)
!2928 = !DILocation(line: 348, column: 17, scope: !2926)
!2929 = !DILocation(line: 348, column: 28, scope: !2926)
!2930 = !DILocation(line: 348, column: 47, scope: !2926)
!2931 = !DILocation(line: 349, column: 8, scope: !2926)
!2932 = !DILocation(line: 349, column: 14, scope: !2926)
!2933 = !DILocation(line: 349, column: 25, scope: !2926)
!2934 = !DILocation(line: 349, column: 28, scope: !2935)
!2935 = !DILexicalBlockFile(scope: !2926, file: !1, discriminator: 1)
!2936 = !DILocation(line: 349, column: 34, scope: !2935)
!2937 = !DILocation(line: 348, column: 11, scope: !2938)
!2938 = !DILexicalBlockFile(scope: !2927, file: !1, discriminator: 1)
!2939 = !DILocation(line: 350, column: 4, scope: !2940)
!2940 = distinct !DILexicalBlock(scope: !2926, file: !1, line: 349, column: 45)
!2941 = !DILocation(line: 350, column: 10, scope: !2940)
!2942 = !DILocation(line: 350, column: 17, scope: !2940)
!2943 = !DILocation(line: 350, column: 22, scope: !2940)
!2944 = !DILocation(line: 350, column: 27, scope: !2940)
!2945 = !DILocation(line: 350, column: 33, scope: !2940)
!2946 = !DILocation(line: 351, column: 3, scope: !2940)
!2947 = !DILocation(line: 353, column: 49, scope: !2948)
!2948 = distinct !DILexicalBlock(scope: !2926, file: !1, line: 351, column: 10)
!2949 = !DILocation(line: 353, column: 55, scope: !2948)
!2950 = !DILocation(line: 353, column: 62, scope: !2948)
!2951 = !DILocation(line: 353, column: 67, scope: !2948)
!2952 = !DILocation(line: 353, column: 72, scope: !2948)
!2953 = !DILocation(line: 353, column: 25, scope: !2948)
!2954 = !DILocation(line: 353, column: 31, scope: !2948)
!2955 = !DILocation(line: 353, column: 36, scope: !2948)
!2956 = !DILocation(line: 353, column: 41, scope: !2948)
!2957 = !DILocation(line: 353, column: 47, scope: !2948)
!2958 = !DILocation(line: 354, column: 25, scope: !2948)
!2959 = !DILocation(line: 356, column: 2, scope: !2927)
!2960 = !DILocation(line: 362, column: 6, scope: !2961)
!2961 = distinct !DILexicalBlock(scope: !174, file: !1, line: 362, column: 6)
!2962 = !DILocation(line: 362, column: 12, scope: !2961)
!2963 = !DILocation(line: 362, column: 23, scope: !2961)
!2964 = !DILocation(line: 362, column: 6, scope: !174)
!2965 = !DILocation(line: 363, column: 9, scope: !2966)
!2966 = distinct !DILexicalBlock(scope: !2967, file: !1, line: 363, column: 7)
!2967 = distinct !DILexicalBlock(scope: !2961, file: !1, line: 362, column: 41)
!2968 = !DILocation(line: 363, column: 7, scope: !2966)
!2969 = !DILocation(line: 363, column: 19, scope: !2966)
!2970 = !DILocation(line: 363, column: 22, scope: !2971)
!2971 = !DILexicalBlockFile(scope: !2966, file: !1, discriminator: 1)
!2972 = !DILocation(line: 363, column: 28, scope: !2971)
!2973 = !DILocation(line: 363, column: 36, scope: !2971)
!2974 = !DILocation(line: 364, column: 8, scope: !2966)
!2975 = !DILocation(line: 364, column: 14, scope: !2966)
!2976 = !DILocation(line: 364, column: 25, scope: !2966)
!2977 = !DILocation(line: 364, column: 28, scope: !2971)
!2978 = !DILocation(line: 364, column: 34, scope: !2971)
!2979 = !DILocation(line: 363, column: 7, scope: !2980)
!2980 = !DILexicalBlockFile(scope: !2967, file: !1, discriminator: 2)
!2981 = !DILocation(line: 365, column: 21, scope: !2982)
!2982 = distinct !DILexicalBlock(scope: !2966, file: !1, line: 364, column: 45)
!2983 = !DILocation(line: 365, column: 27, scope: !2982)
!2984 = !DILocation(line: 365, column: 34, scope: !2982)
!2985 = !DILocation(line: 365, column: 43, scope: !2982)
!2986 = !DILocation(line: 365, column: 4, scope: !2982)
!2987 = !DILocation(line: 366, column: 21, scope: !2982)
!2988 = !DILocation(line: 366, column: 27, scope: !2982)
!2989 = !DILocation(line: 366, column: 34, scope: !2982)
!2990 = !DILocation(line: 366, column: 43, scope: !2982)
!2991 = !DILocation(line: 366, column: 4, scope: !2982)
!2992 = !DILocation(line: 368, column: 47, scope: !2982)
!2993 = !DILocation(line: 368, column: 62, scope: !2982)
!2994 = !DILocation(line: 368, column: 71, scope: !2982)
!2995 = !DILocation(line: 368, column: 67, scope: !2982)
!2996 = !DILocation(line: 368, column: 42, scope: !2982)
!2997 = !DILocation(line: 370, column: 5, scope: !2982)
!2998 = !DILocation(line: 370, column: 9, scope: !2982)
!2999 = !DILocation(line: 370, column: 15, scope: !2982)
!3000 = !DILocation(line: 369, column: 4, scope: !2982)
!3001 = !DILocation(line: 371, column: 3, scope: !2982)
!3002 = !DILocation(line: 372, column: 3, scope: !2967)
!3003 = !DILocation(line: 372, column: 9, scope: !2967)
!3004 = !DILocation(line: 372, column: 20, scope: !2967)
!3005 = !DILocation(line: 373, column: 2, scope: !2967)
!3006 = !DILocation(line: 375, column: 6, scope: !3007)
!3007 = distinct !DILexicalBlock(scope: !174, file: !1, line: 375, column: 6)
!3008 = !DILocation(line: 375, column: 12, scope: !3007)
!3009 = !DILocation(line: 375, column: 23, scope: !3007)
!3010 = !DILocation(line: 375, column: 6, scope: !174)
!3011 = !DILocation(line: 376, column: 19, scope: !3012)
!3012 = distinct !DILexicalBlock(scope: !3007, file: !1, line: 375, column: 45)
!3013 = !DILocation(line: 376, column: 25, scope: !3012)
!3014 = !DILocation(line: 376, column: 32, scope: !3012)
!3015 = !DILocation(line: 376, column: 41, scope: !3012)
!3016 = !DILocation(line: 376, column: 47, scope: !3012)
!3017 = !DILocation(line: 376, column: 3, scope: !3012)
!3018 = !DILocation(line: 377, column: 9, scope: !3019)
!3019 = distinct !DILexicalBlock(scope: !3012, file: !1, line: 377, column: 7)
!3020 = !DILocation(line: 377, column: 7, scope: !3019)
!3021 = !DILocation(line: 377, column: 7, scope: !3012)
!3022 = !DILocation(line: 378, column: 22, scope: !3023)
!3023 = distinct !DILexicalBlock(scope: !3019, file: !1, line: 377, column: 16)
!3024 = !DILocation(line: 378, column: 39, scope: !3023)
!3025 = !DILocation(line: 378, column: 45, scope: !3023)
!3026 = !DILocation(line: 378, column: 4, scope: !3023)
!3027 = !DILocation(line: 380, column: 5, scope: !3023)
!3028 = !DILocation(line: 380, column: 9, scope: !3023)
!3029 = !DILocation(line: 379, column: 4, scope: !3023)
!3030 = !DILocation(line: 381, column: 3, scope: !3023)
!3031 = !DILocation(line: 382, column: 3, scope: !3012)
!3032 = !DILocation(line: 382, column: 9, scope: !3012)
!3033 = !DILocation(line: 382, column: 20, scope: !3012)
!3034 = !DILocation(line: 383, column: 2, scope: !3012)
!3035 = !DILocation(line: 385, column: 6, scope: !3036)
!3036 = distinct !DILexicalBlock(scope: !174, file: !1, line: 385, column: 6)
!3037 = !DILocation(line: 385, column: 12, scope: !3036)
!3038 = !DILocation(line: 385, column: 23, scope: !3036)
!3039 = !DILocation(line: 385, column: 6, scope: !174)
!3040 = !DILocation(line: 386, column: 21, scope: !3041)
!3041 = distinct !DILexicalBlock(scope: !3036, file: !1, line: 385, column: 48)
!3042 = !DILocation(line: 386, column: 27, scope: !3041)
!3043 = !DILocation(line: 386, column: 34, scope: !3041)
!3044 = !DILocation(line: 386, column: 43, scope: !3041)
!3045 = !DILocation(line: 386, column: 49, scope: !3041)
!3046 = !DILocation(line: 386, column: 3, scope: !3041)
!3047 = !DILocation(line: 387, column: 9, scope: !3048)
!3048 = distinct !DILexicalBlock(scope: !3041, file: !1, line: 387, column: 7)
!3049 = !DILocation(line: 387, column: 7, scope: !3048)
!3050 = !DILocation(line: 387, column: 7, scope: !3041)
!3051 = !DILocation(line: 388, column: 22, scope: !3052)
!3052 = distinct !DILexicalBlock(scope: !3048, file: !1, line: 387, column: 16)
!3053 = !DILocation(line: 388, column: 39, scope: !3052)
!3054 = !DILocation(line: 388, column: 45, scope: !3052)
!3055 = !DILocation(line: 388, column: 4, scope: !3052)
!3056 = !DILocation(line: 390, column: 5, scope: !3052)
!3057 = !DILocation(line: 390, column: 9, scope: !3052)
!3058 = !DILocation(line: 389, column: 4, scope: !3052)
!3059 = !DILocation(line: 391, column: 3, scope: !3052)
!3060 = !DILocation(line: 392, column: 3, scope: !3041)
!3061 = !DILocation(line: 392, column: 9, scope: !3041)
!3062 = !DILocation(line: 392, column: 20, scope: !3041)
!3063 = !DILocation(line: 393, column: 2, scope: !3041)
!3064 = !DILocation(line: 400, column: 6, scope: !3065)
!3065 = distinct !DILexicalBlock(scope: !174, file: !1, line: 400, column: 6)
!3066 = !DILocation(line: 400, column: 12, scope: !3065)
!3067 = !DILocation(line: 400, column: 23, scope: !3065)
!3068 = !DILocation(line: 400, column: 6, scope: !174)
!3069 = !DILocation(line: 401, column: 9, scope: !3070)
!3070 = distinct !DILexicalBlock(scope: !3071, file: !1, line: 401, column: 7)
!3071 = distinct !DILexicalBlock(scope: !3065, file: !1, line: 400, column: 43)
!3072 = !DILocation(line: 401, column: 7, scope: !3070)
!3073 = !DILocation(line: 401, column: 19, scope: !3070)
!3074 = !DILocation(line: 401, column: 23, scope: !3075)
!3075 = !DILexicalBlockFile(scope: !3070, file: !1, discriminator: 1)
!3076 = !DILocation(line: 401, column: 29, scope: !3075)
!3077 = !DILocation(line: 401, column: 36, scope: !3075)
!3078 = !DILocation(line: 401, column: 41, scope: !3075)
!3079 = !DILocation(line: 401, column: 46, scope: !3075)
!3080 = !DILocation(line: 401, column: 52, scope: !3075)
!3081 = !DILocation(line: 401, column: 67, scope: !3075)
!3082 = !DILocation(line: 402, column: 8, scope: !3070)
!3083 = !DILocation(line: 402, column: 14, scope: !3070)
!3084 = !DILocation(line: 402, column: 21, scope: !3070)
!3085 = !DILocation(line: 402, column: 26, scope: !3070)
!3086 = !DILocation(line: 402, column: 31, scope: !3070)
!3087 = !DILocation(line: 402, column: 37, scope: !3070)
!3088 = !DILocation(line: 402, column: 46, scope: !3070)
!3089 = !DILocation(line: 402, column: 51, scope: !3075)
!3090 = !DILocation(line: 402, column: 57, scope: !3075)
!3091 = !DILocation(line: 402, column: 64, scope: !3075)
!3092 = !DILocation(line: 402, column: 69, scope: !3075)
!3093 = !DILocation(line: 402, column: 73, scope: !3075)
!3094 = !DILocation(line: 403, column: 26, scope: !3070)
!3095 = !DILocation(line: 403, column: 32, scope: !3070)
!3096 = !DILocation(line: 403, column: 39, scope: !3070)
!3097 = !DILocation(line: 403, column: 44, scope: !3070)
!3098 = !DILocation(line: 403, column: 49, scope: !3070)
!3099 = !DILocation(line: 403, column: 58, scope: !3070)
!3100 = !DILocation(line: 403, column: 55, scope: !3070)
!3101 = !DILocation(line: 401, column: 7, scope: !3102)
!3102 = !DILexicalBlockFile(scope: !3071, file: !1, discriminator: 2)
!3103 = !DILocation(line: 409, column: 8, scope: !3104)
!3104 = distinct !DILexicalBlock(scope: !3105, file: !1, line: 409, column: 8)
!3105 = distinct !DILexicalBlock(scope: !3070, file: !1, line: 403, column: 71)
!3106 = !DILocation(line: 409, column: 14, scope: !3104)
!3107 = !DILocation(line: 409, column: 25, scope: !3104)
!3108 = !DILocation(line: 409, column: 28, scope: !3109)
!3109 = !DILexicalBlockFile(scope: !3104, file: !1, discriminator: 1)
!3110 = !DILocation(line: 409, column: 34, scope: !3109)
!3111 = !DILocation(line: 409, column: 8, scope: !3109)
!3112 = !DILocation(line: 410, column: 5, scope: !3113)
!3113 = distinct !DILexicalBlock(scope: !3104, file: !1, line: 409, column: 44)
!3114 = !DILocation(line: 413, column: 21, scope: !3113)
!3115 = !DILocation(line: 413, column: 36, scope: !3113)
!3116 = !DILocation(line: 413, column: 42, scope: !3113)
!3117 = !DILocation(line: 413, column: 5, scope: !3113)
!3118 = !DILocation(line: 414, column: 11, scope: !3113)
!3119 = !DILocation(line: 416, column: 5, scope: !3113)
!3120 = !DILocation(line: 416, column: 11, scope: !3113)
!3121 = !DILocation(line: 416, column: 22, scope: !3113)
!3122 = !DILocation(line: 417, column: 4, scope: !3113)
!3123 = !DILocation(line: 418, column: 3, scope: !3105)
!3124 = !DILocation(line: 419, column: 2, scope: !3071)
!3125 = !DILocation(line: 422, column: 6, scope: !3126)
!3126 = distinct !DILexicalBlock(scope: !174, file: !1, line: 422, column: 6)
!3127 = !DILocation(line: 422, column: 12, scope: !3126)
!3128 = !DILocation(line: 422, column: 23, scope: !3126)
!3129 = !DILocation(line: 422, column: 6, scope: !174)
!3130 = !DILocation(line: 423, column: 3, scope: !3126)
!3131 = !DILocation(line: 423, column: 9, scope: !3126)
!3132 = !DILocation(line: 423, column: 20, scope: !3126)
!3133 = !DILocation(line: 551, column: 51, scope: !174)
!3134 = !DILocation(line: 551, column: 55, scope: !174)
!3135 = !DILocation(line: 551, column: 61, scope: !174)
!3136 = !DILocation(line: 551, column: 2, scope: !174)
!3137 = !DILocation(line: 553, column: 6, scope: !3138)
!3138 = distinct !DILexicalBlock(scope: !174, file: !1, line: 553, column: 6)
!3139 = !DILocation(line: 553, column: 12, scope: !3138)
!3140 = !DILocation(line: 553, column: 23, scope: !3138)
!3141 = !DILocation(line: 553, column: 6, scope: !174)
!3142 = !DILocation(line: 566, column: 26, scope: !3143)
!3143 = distinct !DILexicalBlock(scope: !3138, file: !1, line: 553, column: 37)
!3144 = !DILocation(line: 566, column: 32, scope: !3143)
!3145 = !DILocation(line: 566, column: 39, scope: !3143)
!3146 = !DILocation(line: 566, column: 48, scope: !3143)
!3147 = !DILocation(line: 566, column: 3, scope: !3143)
!3148 = !DILocation(line: 567, column: 7, scope: !3149)
!3149 = distinct !DILexicalBlock(scope: !3143, file: !1, line: 567, column: 7)
!3150 = !DILocation(line: 567, column: 7, scope: !3143)
!3151 = !DILocation(line: 574, column: 8, scope: !3152)
!3152 = distinct !DILexicalBlock(scope: !3153, file: !1, line: 574, column: 8)
!3153 = distinct !DILexicalBlock(scope: !3149, file: !1, line: 567, column: 15)
!3154 = !DILocation(line: 574, column: 14, scope: !3152)
!3155 = !DILocation(line: 574, column: 25, scope: !3152)
!3156 = !DILocation(line: 574, column: 28, scope: !3152)
!3157 = !DILocation(line: 574, column: 8, scope: !3153)
!3158 = !DILocation(line: 576, column: 45, scope: !3159)
!3159 = distinct !DILexicalBlock(scope: !3152, file: !1, line: 574, column: 50)
!3160 = !DILocation(line: 576, column: 49, scope: !3159)
!3161 = !DILocation(line: 576, column: 55, scope: !3159)
!3162 = !DILocation(line: 575, column: 5, scope: !3159)
!3163 = !DILocation(line: 577, column: 5, scope: !3159)
!3164 = !DILocation(line: 581, column: 4, scope: !3153)
!3165 = !DILocation(line: 582, column: 4, scope: !3153)
!3166 = !DILocation(line: 582, column: 10, scope: !3153)
!3167 = !DILocation(line: 582, column: 21, scope: !3153)
!3168 = !DILocation(line: 583, column: 3, scope: !3153)
!3169 = !DILocation(line: 584, column: 2, scope: !3143)
!3170 = !DILocation(line: 553, column: 26, scope: !3171)
!3171 = !DILexicalBlockFile(scope: !3138, file: !1, discriminator: 1)
!3172 = !DILocation(line: 591, column: 6, scope: !3173)
!3173 = distinct !DILexicalBlock(scope: !174, file: !1, line: 591, column: 6)
!3174 = !DILocation(line: 591, column: 12, scope: !3173)
!3175 = !DILocation(line: 591, column: 23, scope: !3173)
!3176 = !DILocation(line: 591, column: 6, scope: !174)
!3177 = !DILocalVariable(name: "astr", scope: !3178, file: !1, line: 592, type: !2723)
!3178 = distinct !DILexicalBlock(scope: !3173, file: !1, line: 591, column: 37)
!3179 = !DILocation(line: 592, column: 15, scope: !3178)
!3180 = !DILocation(line: 595, column: 3, scope: !3178)
!3181 = !DILocation(line: 595, column: 9, scope: !3178)
!3182 = !DILocation(line: 595, column: 16, scope: !3178)
!3183 = !DILocation(line: 595, column: 23, scope: !3178)
!3184 = !DILocation(line: 596, column: 3, scope: !3178)
!3185 = !DILocation(line: 596, column: 9, scope: !3178)
!3186 = !DILocation(line: 596, column: 15, scope: !3178)
!3187 = !DILocation(line: 598, column: 7, scope: !3188)
!3188 = distinct !DILexicalBlock(scope: !3178, file: !1, line: 598, column: 7)
!3189 = !DILocation(line: 598, column: 13, scope: !3188)
!3190 = !DILocation(line: 598, column: 25, scope: !3188)
!3191 = !DILocation(line: 598, column: 7, scope: !3178)
!3192 = !DILocation(line: 601, column: 7, scope: !3188)
!3193 = !DILocation(line: 601, column: 13, scope: !3188)
!3194 = !DILocation(line: 601, column: 25, scope: !3188)
!3195 = !DILocation(line: 600, column: 35, scope: !3188)
!3196 = !DILocation(line: 601, column: 37, scope: !3188)
!3197 = !DILocation(line: 600, column: 23, scope: !3188)
!3198 = !DILocation(line: 599, column: 11, scope: !3188)
!3199 = !DILocation(line: 607, column: 7, scope: !3200)
!3200 = distinct !DILexicalBlock(scope: !3178, file: !1, line: 607, column: 7)
!3201 = !DILocation(line: 607, column: 13, scope: !3200)
!3202 = !DILocation(line: 607, column: 23, scope: !3200)
!3203 = !DILocation(line: 607, column: 27, scope: !3200)
!3204 = !DILocation(line: 607, column: 31, scope: !3205)
!3205 = !DILexicalBlockFile(scope: !3200, file: !1, discriminator: 1)
!3206 = !DILocation(line: 607, column: 7, scope: !3205)
!3207 = !DILocation(line: 608, column: 23, scope: !3200)
!3208 = !DILocation(line: 608, column: 29, scope: !3200)
!3209 = !DILocation(line: 608, column: 36, scope: !3200)
!3210 = !DILocation(line: 608, column: 44, scope: !3200)
!3211 = !DILocation(line: 608, column: 11, scope: !3200)
!3212 = !DILocation(line: 608, column: 4, scope: !3200)
!3213 = !DILocation(line: 610, column: 23, scope: !3200)
!3214 = !DILocation(line: 610, column: 29, scope: !3200)
!3215 = !DILocation(line: 610, column: 36, scope: !3200)
!3216 = !DILocation(line: 610, column: 44, scope: !3200)
!3217 = !DILocation(line: 610, column: 11, scope: !3200)
!3218 = !DILocation(line: 610, column: 4, scope: !3200)
!3219 = !DILocation(line: 619, column: 8, scope: !3220)
!3220 = distinct !DILexicalBlock(scope: !174, file: !1, line: 619, column: 6)
!3221 = !DILocation(line: 619, column: 6, scope: !3220)
!3222 = !DILocation(line: 619, column: 6, scope: !174)
!3223 = !DILocation(line: 620, column: 7, scope: !3224)
!3224 = distinct !DILexicalBlock(scope: !3225, file: !1, line: 620, column: 7)
!3225 = distinct !DILexicalBlock(scope: !3220, file: !1, line: 619, column: 19)
!3226 = !DILocation(line: 620, column: 13, scope: !3224)
!3227 = !DILocation(line: 620, column: 20, scope: !3224)
!3228 = !DILocation(line: 620, column: 7, scope: !3225)
!3229 = !DILocation(line: 621, column: 4, scope: !3230)
!3230 = distinct !DILexicalBlock(scope: !3224, file: !1, line: 620, column: 31)
!3231 = !DILocation(line: 622, column: 20, scope: !3230)
!3232 = !DILocation(line: 622, column: 26, scope: !3230)
!3233 = !DILocation(line: 622, column: 33, scope: !3230)
!3234 = !DILocation(line: 622, column: 4, scope: !3230)
!3235 = !DILocation(line: 623, column: 3, scope: !3230)
!3236 = !DILocation(line: 625, column: 3, scope: !3225)
!3237 = !DILocation(line: 626, column: 19, scope: !3225)
!3238 = !DILocation(line: 626, column: 25, scope: !3225)
!3239 = !DILocation(line: 626, column: 32, scope: !3225)
!3240 = !DILocation(line: 626, column: 3, scope: !3225)
!3241 = !DILocation(line: 631, column: 7, scope: !3225)
!3242 = !DILocation(line: 631, column: 22, scope: !3225)
!3243 = !DILocation(line: 631, column: 31, scope: !3225)
!3244 = !DILocation(line: 631, column: 27, scope: !3225)
!3245 = !DILocation(line: 630, column: 20, scope: !3225)
!3246 = !DILocation(line: 632, column: 2, scope: !3225)
!3247 = !DILocation(line: 635, column: 6, scope: !3248)
!3248 = distinct !DILexicalBlock(scope: !174, file: !1, line: 635, column: 6)
!3249 = !DILocation(line: 635, column: 12, scope: !3248)
!3250 = !DILocation(line: 635, column: 23, scope: !3248)
!3251 = !DILocation(line: 635, column: 28, scope: !3252)
!3252 = !DILexicalBlockFile(scope: !3248, file: !1, discriminator: 1)
!3253 = !DILocation(line: 635, column: 26, scope: !3252)
!3254 = !DILocation(line: 635, column: 44, scope: !3252)
!3255 = !DILocation(line: 635, column: 65, scope: !3256)
!3256 = !DILexicalBlockFile(scope: !3248, file: !1, discriminator: 2)
!3257 = !DILocation(line: 635, column: 47, scope: !3256)
!3258 = !DILocation(line: 635, column: 6, scope: !3256)
!3259 = !DILocation(line: 636, column: 20, scope: !3260)
!3260 = distinct !DILexicalBlock(scope: !3248, file: !1, line: 635, column: 72)
!3261 = !DILocation(line: 636, column: 26, scope: !3260)
!3262 = !DILocation(line: 636, column: 33, scope: !3260)
!3263 = !DILocation(line: 636, column: 3, scope: !3260)
!3264 = !DILocation(line: 637, column: 20, scope: !3260)
!3265 = !DILocation(line: 637, column: 26, scope: !3260)
!3266 = !DILocation(line: 637, column: 33, scope: !3260)
!3267 = !DILocation(line: 637, column: 3, scope: !3260)
!3268 = !DILocation(line: 638, column: 20, scope: !3260)
!3269 = !DILocation(line: 638, column: 26, scope: !3260)
!3270 = !DILocation(line: 638, column: 33, scope: !3260)
!3271 = !DILocation(line: 638, column: 3, scope: !3260)
!3272 = !DILocation(line: 640, column: 23, scope: !3260)
!3273 = !DILocation(line: 639, column: 10, scope: !3260)
!3274 = !DILocation(line: 641, column: 2, scope: !3260)
!3275 = !DILocation(line: 643, column: 6, scope: !3276)
!3276 = distinct !DILexicalBlock(scope: !174, file: !1, line: 643, column: 6)
!3277 = !DILocation(line: 643, column: 12, scope: !3276)
!3278 = !DILocation(line: 643, column: 23, scope: !3276)
!3279 = !DILocation(line: 643, column: 6, scope: !174)
!3280 = !DILocation(line: 644, column: 25, scope: !3281)
!3281 = distinct !DILexicalBlock(scope: !3282, file: !1, line: 644, column: 7)
!3282 = distinct !DILexicalBlock(scope: !3276, file: !1, line: 643, column: 52)
!3283 = !DILocation(line: 644, column: 7, scope: !3281)
!3284 = !DILocation(line: 644, column: 7, scope: !3282)
!3285 = !DILocation(line: 645, column: 20, scope: !3286)
!3286 = distinct !DILexicalBlock(scope: !3281, file: !1, line: 644, column: 32)
!3287 = !DILocation(line: 645, column: 26, scope: !3286)
!3288 = !DILocation(line: 645, column: 33, scope: !3286)
!3289 = !DILocation(line: 646, column: 6, scope: !3286)
!3290 = !DILocation(line: 646, column: 12, scope: !3286)
!3291 = !DILocation(line: 646, column: 19, scope: !3286)
!3292 = !DILocation(line: 645, column: 4, scope: !3286)
!3293 = !DILocation(line: 647, column: 10, scope: !3294)
!3294 = distinct !DILexicalBlock(scope: !3286, file: !1, line: 647, column: 8)
!3295 = !DILocation(line: 647, column: 8, scope: !3294)
!3296 = !DILocation(line: 647, column: 8, scope: !3286)
!3297 = !DILocation(line: 648, column: 22, scope: !3298)
!3298 = distinct !DILexicalBlock(scope: !3294, file: !1, line: 647, column: 17)
!3299 = !DILocation(line: 649, column: 8, scope: !3298)
!3300 = !DILocation(line: 649, column: 14, scope: !3298)
!3301 = !DILocation(line: 649, column: 21, scope: !3298)
!3302 = !DILocation(line: 648, column: 5, scope: !3298)
!3303 = !DILocation(line: 651, column: 6, scope: !3298)
!3304 = !DILocation(line: 650, column: 5, scope: !3298)
!3305 = !DILocation(line: 652, column: 4, scope: !3298)
!3306 = !DILocation(line: 653, column: 3, scope: !3286)
!3307 = !DILocation(line: 654, column: 2, scope: !3282)
!3308 = !DILocation(line: 666, column: 16, scope: !174)
!3309 = !DILocation(line: 666, column: 22, scope: !174)
!3310 = !DILocation(line: 666, column: 2, scope: !174)
!3311 = !DILocation(line: 667, column: 18, scope: !174)
!3312 = !DILocation(line: 667, column: 24, scope: !174)
!3313 = !DILocation(line: 667, column: 31, scope: !174)
!3314 = !DILocation(line: 667, column: 2, scope: !174)
!3315 = !DILocation(line: 667, column: 8, scope: !174)
!3316 = !DILocation(line: 667, column: 16, scope: !174)
!3317 = !DILocation(line: 668, column: 2, scope: !174)
!3318 = !DILocation(line: 668, column: 8, scope: !174)
!3319 = !DILocation(line: 668, column: 15, scope: !174)
!3320 = !DILocation(line: 668, column: 23, scope: !174)
!3321 = !DILocation(line: 670, column: 16, scope: !174)
!3322 = !DILocation(line: 670, column: 22, scope: !174)
!3323 = !DILocation(line: 670, column: 2, scope: !174)
!3324 = !DILocation(line: 671, column: 18, scope: !174)
!3325 = !DILocation(line: 671, column: 24, scope: !174)
!3326 = !DILocation(line: 671, column: 31, scope: !174)
!3327 = !DILocation(line: 671, column: 2, scope: !174)
!3328 = !DILocation(line: 671, column: 8, scope: !174)
!3329 = !DILocation(line: 671, column: 16, scope: !174)
!3330 = !DILocation(line: 672, column: 2, scope: !174)
!3331 = !DILocation(line: 672, column: 8, scope: !174)
!3332 = !DILocation(line: 672, column: 15, scope: !174)
!3333 = !DILocation(line: 672, column: 23, scope: !174)
!3334 = !DILocation(line: 674, column: 16, scope: !174)
!3335 = !DILocation(line: 674, column: 22, scope: !174)
!3336 = !DILocation(line: 674, column: 2, scope: !174)
!3337 = !DILocation(line: 675, column: 18, scope: !174)
!3338 = !DILocation(line: 675, column: 24, scope: !174)
!3339 = !DILocation(line: 675, column: 31, scope: !174)
!3340 = !DILocation(line: 675, column: 2, scope: !174)
!3341 = !DILocation(line: 675, column: 8, scope: !174)
!3342 = !DILocation(line: 675, column: 16, scope: !174)
!3343 = !DILocation(line: 676, column: 2, scope: !174)
!3344 = !DILocation(line: 676, column: 8, scope: !174)
!3345 = !DILocation(line: 676, column: 15, scope: !174)
!3346 = !DILocation(line: 676, column: 23, scope: !174)
!3347 = !DILocation(line: 678, column: 35, scope: !174)
!3348 = !DILocation(line: 678, column: 2, scope: !174)
!3349 = !DILocation(line: 679, column: 2, scope: !174)
!3350 = !DILocation(line: 680, column: 1, scope: !174)
!3351 = !DILocalVariable(name: "an_list", arg: 1, scope: !177, file: !1, line: 918, type: !89)
!3352 = !DILocation(line: 918, column: 37, scope: !177)
!3353 = !DILocalVariable(name: "cname", arg: 2, scope: !177, file: !1, line: 918, type: !20)
!3354 = !DILocation(line: 918, column: 54, scope: !177)
!3355 = !DILocalVariable(name: "fn", scope: !177, file: !1, line: 919, type: !19)
!3356 = !DILocation(line: 919, column: 15, scope: !177)
!3357 = !DILocalVariable(name: "canonical_domain", scope: !177, file: !1, line: 920, type: !20)
!3358 = !DILocation(line: 920, column: 10, scope: !177)
!3359 = !DILocalVariable(name: "domain", scope: !177, file: !1, line: 920, type: !20)
!3360 = !DILocation(line: 920, column: 29, scope: !177)
!3361 = !DILocalVariable(name: "canonical_domain_len", scope: !177, file: !1, line: 921, type: !33)
!3362 = !DILocation(line: 921, column: 6, scope: !177)
!3363 = !DILocalVariable(name: "rrs_tmp", scope: !177, file: !1, line: 922, type: !27)
!3364 = !DILocation(line: 922, column: 9, scope: !177)
!3365 = !DILocalVariable(name: "rr_tmp", scope: !177, file: !1, line: 923, type: !67)
!3366 = !DILocation(line: 923, column: 6, scope: !177)
!3367 = !DILocalVariable(name: "gl", scope: !177, file: !1, line: 924, type: !89)
!3368 = !DILocation(line: 924, column: 10, scope: !177)
!3369 = !DILocation(line: 926, column: 59, scope: !177)
!3370 = !DILocation(line: 926, column: 2, scope: !177)
!3371 = !DILocation(line: 929, column: 3, scope: !177)
!3372 = !DILocation(line: 929, column: 9, scope: !177)
!3373 = !DILocation(line: 930, column: 19, scope: !177)
!3374 = !DILocation(line: 931, column: 23, scope: !177)
!3375 = !DILocation(line: 933, column: 2, scope: !177)
!3376 = !DILocation(line: 933, column: 11, scope: !177)
!3377 = !DILocation(line: 933, column: 21, scope: !177)
!3378 = !DILocation(line: 934, column: 12, scope: !3379)
!3379 = distinct !DILexicalBlock(scope: !177, file: !1, line: 934, column: 2)
!3380 = !DILocation(line: 934, column: 21, scope: !3379)
!3381 = !DILocation(line: 934, column: 10, scope: !3379)
!3382 = !DILocation(line: 934, column: 7, scope: !3379)
!3383 = !DILocation(line: 934, column: 27, scope: !3384)
!3384 = !DILexicalBlockFile(scope: !3385, file: !1, discriminator: 1)
!3385 = distinct !DILexicalBlock(scope: !3379, file: !1, line: 934, column: 2)
!3386 = !DILocation(line: 934, column: 31, scope: !3384)
!3387 = !DILocation(line: 934, column: 2, scope: !3384)
!3388 = !DILocation(line: 935, column: 23, scope: !3389)
!3389 = distinct !DILexicalBlock(scope: !3385, file: !1, line: 934, column: 57)
!3390 = !DILocation(line: 935, column: 27, scope: !3389)
!3391 = !DILocation(line: 935, column: 13, scope: !3389)
!3392 = !DILocation(line: 935, column: 11, scope: !3389)
!3393 = !DILocation(line: 936, column: 7, scope: !3394)
!3394 = distinct !DILexicalBlock(scope: !3389, file: !1, line: 936, column: 7)
!3395 = !DILocation(line: 936, column: 16, scope: !3394)
!3396 = !DILocation(line: 936, column: 20, scope: !3394)
!3397 = !DILocation(line: 936, column: 26, scope: !3394)
!3398 = !DILocation(line: 936, column: 33, scope: !3394)
!3399 = !DILocation(line: 936, column: 7, scope: !3389)
!3400 = !DILocation(line: 937, column: 21, scope: !3401)
!3401 = distinct !DILexicalBlock(scope: !3394, file: !1, line: 936, column: 46)
!3402 = !DILocation(line: 937, column: 30, scope: !3401)
!3403 = !DILocation(line: 937, column: 35, scope: !3401)
!3404 = !DILocation(line: 938, column: 6, scope: !3401)
!3405 = !DILocation(line: 937, column: 37, scope: !3401)
!3406 = !DILocation(line: 937, column: 13, scope: !3401)
!3407 = !DILocation(line: 937, column: 11, scope: !3401)
!3408 = !DILocation(line: 939, column: 23, scope: !3401)
!3409 = !DILocation(line: 939, column: 21, scope: !3401)
!3410 = !DILocation(line: 940, column: 27, scope: !3401)
!3411 = !DILocation(line: 940, column: 35, scope: !3401)
!3412 = !DILocation(line: 940, column: 25, scope: !3401)
!3413 = !DILocation(line: 941, column: 3, scope: !3401)
!3414 = !DILocation(line: 942, column: 2, scope: !3389)
!3415 = !DILocation(line: 934, column: 47, scope: !3416)
!3416 = !DILexicalBlockFile(scope: !3385, file: !1, discriminator: 2)
!3417 = !DILocation(line: 934, column: 51, scope: !3416)
!3418 = !DILocation(line: 934, column: 45, scope: !3416)
!3419 = !DILocation(line: 934, column: 2, scope: !3416)
!3420 = !DILocation(line: 944, column: 7, scope: !3421)
!3421 = distinct !DILexicalBlock(scope: !177, file: !1, line: 944, column: 6)
!3422 = !DILocation(line: 944, column: 6, scope: !177)
!3423 = !DILocation(line: 945, column: 3, scope: !3421)
!3424 = !DILocation(line: 947, column: 2, scope: !177)
!3425 = !DILocation(line: 947, column: 11, scope: !177)
!3426 = !DILocation(line: 947, column: 21, scope: !177)
!3427 = !DILocation(line: 948, column: 12, scope: !3428)
!3428 = distinct !DILexicalBlock(scope: !177, file: !1, line: 948, column: 2)
!3429 = !DILocation(line: 948, column: 21, scope: !3428)
!3430 = !DILocation(line: 948, column: 10, scope: !3428)
!3431 = !DILocation(line: 948, column: 7, scope: !3428)
!3432 = !DILocation(line: 948, column: 27, scope: !3433)
!3433 = !DILexicalBlockFile(scope: !3434, file: !1, discriminator: 1)
!3434 = distinct !DILexicalBlock(scope: !3428, file: !1, line: 948, column: 2)
!3435 = !DILocation(line: 948, column: 31, scope: !3433)
!3436 = !DILocation(line: 948, column: 2, scope: !3433)
!3437 = !DILocation(line: 949, column: 23, scope: !3438)
!3438 = distinct !DILexicalBlock(scope: !3434, file: !1, line: 948, column: 57)
!3439 = !DILocation(line: 949, column: 27, scope: !3438)
!3440 = !DILocation(line: 949, column: 13, scope: !3438)
!3441 = !DILocation(line: 949, column: 11, scope: !3438)
!3442 = !DILocation(line: 950, column: 12, scope: !3438)
!3443 = !DILocation(line: 950, column: 10, scope: !3438)
!3444 = !DILocation(line: 952, column: 8, scope: !3445)
!3445 = distinct !DILexicalBlock(scope: !3438, file: !1, line: 952, column: 7)
!3446 = !DILocation(line: 952, column: 17, scope: !3445)
!3447 = !DILocation(line: 952, column: 21, scope: !3445)
!3448 = !DILocation(line: 952, column: 27, scope: !3445)
!3449 = !DILocation(line: 952, column: 40, scope: !3445)
!3450 = !DILocation(line: 952, column: 37, scope: !3445)
!3451 = !DILocation(line: 953, column: 7, scope: !3445)
!3452 = !DILocation(line: 953, column: 33, scope: !3453)
!3453 = !DILexicalBlockFile(scope: !3445, file: !1, discriminator: 1)
!3454 = !DILocation(line: 953, column: 41, scope: !3453)
!3455 = !DILocation(line: 953, column: 11, scope: !3453)
!3456 = !DILocation(line: 952, column: 7, scope: !3457)
!3457 = !DILexicalBlockFile(scope: !3438, file: !1, discriminator: 1)
!3458 = !DILocation(line: 954, column: 4, scope: !3445)
!3459 = !DILocation(line: 955, column: 2, scope: !3438)
!3460 = !DILocation(line: 948, column: 47, scope: !3461)
!3461 = !DILexicalBlockFile(scope: !3434, file: !1, discriminator: 2)
!3462 = !DILocation(line: 948, column: 51, scope: !3461)
!3463 = !DILocation(line: 948, column: 45, scope: !3461)
!3464 = !DILocation(line: 948, column: 2, scope: !3461)
!3465 = !DILocation(line: 957, column: 68, scope: !177)
!3466 = !DILocation(line: 957, column: 2, scope: !177)
!3467 = !DILocation(line: 959, column: 6, scope: !3468)
!3468 = distinct !DILexicalBlock(scope: !177, file: !1, line: 959, column: 6)
!3469 = !DILocation(line: 959, column: 27, scope: !3468)
!3470 = !DILocation(line: 959, column: 6, scope: !177)
!3471 = !DILocation(line: 960, column: 47, scope: !3472)
!3472 = distinct !DILexicalBlock(scope: !3468, file: !1, line: 959, column: 41)
!3473 = !DILocation(line: 960, column: 3, scope: !3472)
!3474 = !DILocation(line: 961, column: 3, scope: !3472)
!3475 = !DILocation(line: 964, column: 9, scope: !177)
!3476 = !DILocation(line: 964, column: 16, scope: !177)
!3477 = !DILocation(line: 964, column: 34, scope: !177)
!3478 = !DILocation(line: 964, column: 2, scope: !177)
!3479 = !DILocation(line: 965, column: 8, scope: !177)
!3480 = !DILocation(line: 965, column: 2, scope: !177)
!3481 = !DILocation(line: 965, column: 30, scope: !177)
!3482 = !DILocation(line: 967, column: 2, scope: !177)
!3483 = !DILocation(line: 968, column: 1, scope: !177)
!3484 = !DILocalVariable(name: "cont", arg: 1, scope: !176, file: !1, line: 703, type: !79)
!3485 = !DILocation(line: 703, column: 30, scope: !176)
!3486 = !DILocalVariable(name: "fn", scope: !176, file: !1, line: 704, type: !19)
!3487 = !DILocation(line: 704, column: 8, scope: !176)
!3488 = !DILocation(line: 712, column: 34, scope: !176)
!3489 = !DILocation(line: 712, column: 2, scope: !176)
!3490 = !DILocation(line: 715, column: 16, scope: !176)
!3491 = !DILocation(line: 715, column: 22, scope: !176)
!3492 = !DILocation(line: 715, column: 2, scope: !176)
!3493 = !DILocation(line: 716, column: 16, scope: !176)
!3494 = !DILocation(line: 716, column: 22, scope: !176)
!3495 = !DILocation(line: 716, column: 2, scope: !176)
!3496 = !DILocation(line: 717, column: 16, scope: !176)
!3497 = !DILocation(line: 717, column: 22, scope: !176)
!3498 = !DILocation(line: 717, column: 2, scope: !176)
!3499 = !DILocation(line: 718, column: 18, scope: !176)
!3500 = !DILocation(line: 718, column: 2, scope: !176)
!3501 = !DILocation(line: 718, column: 8, scope: !176)
!3502 = !DILocation(line: 718, column: 16, scope: !176)
!3503 = !DILocation(line: 719, column: 18, scope: !176)
!3504 = !DILocation(line: 719, column: 2, scope: !176)
!3505 = !DILocation(line: 719, column: 8, scope: !176)
!3506 = !DILocation(line: 719, column: 16, scope: !176)
!3507 = !DILocation(line: 720, column: 18, scope: !176)
!3508 = !DILocation(line: 720, column: 2, scope: !176)
!3509 = !DILocation(line: 720, column: 8, scope: !176)
!3510 = !DILocation(line: 720, column: 16, scope: !176)
!3511 = !DILocation(line: 721, column: 7, scope: !3512)
!3512 = distinct !DILexicalBlock(scope: !176, file: !1, line: 721, column: 6)
!3513 = !DILocation(line: 721, column: 13, scope: !3512)
!3514 = !DILocation(line: 721, column: 21, scope: !3512)
!3515 = !DILocation(line: 721, column: 25, scope: !3516)
!3516 = !DILexicalBlockFile(scope: !3512, file: !1, discriminator: 1)
!3517 = !DILocation(line: 721, column: 31, scope: !3516)
!3518 = !DILocation(line: 721, column: 39, scope: !3516)
!3519 = !DILocation(line: 721, column: 43, scope: !3520)
!3520 = !DILexicalBlockFile(scope: !3512, file: !1, discriminator: 2)
!3521 = !DILocation(line: 721, column: 49, scope: !3520)
!3522 = !DILocation(line: 721, column: 6, scope: !3520)
!3523 = !DILocation(line: 722, column: 25, scope: !3512)
!3524 = !DILocation(line: 722, column: 10, scope: !3512)
!3525 = !DILocation(line: 722, column: 3, scope: !3512)
!3526 = !DILocation(line: 725, column: 6, scope: !3527)
!3527 = distinct !DILexicalBlock(scope: !176, file: !1, line: 725, column: 6)
!3528 = !DILocation(line: 725, column: 12, scope: !3527)
!3529 = !DILocation(line: 725, column: 17, scope: !3527)
!3530 = !DILocation(line: 725, column: 22, scope: !3527)
!3531 = !DILocation(line: 725, column: 25, scope: !3527)
!3532 = !DILocation(line: 725, column: 6, scope: !176)
!3533 = !DILocation(line: 726, column: 19, scope: !3534)
!3534 = distinct !DILexicalBlock(scope: !3535, file: !1, line: 726, column: 7)
!3535 = distinct !DILexicalBlock(scope: !3527, file: !1, line: 725, column: 31)
!3536 = !DILocation(line: 726, column: 25, scope: !3534)
!3537 = !DILocation(line: 726, column: 30, scope: !3534)
!3538 = !DILocation(line: 726, column: 33, scope: !3534)
!3539 = !DILocation(line: 726, column: 39, scope: !3534)
!3540 = !DILocation(line: 726, column: 49, scope: !3534)
!3541 = !DILocation(line: 726, column: 55, scope: !3534)
!3542 = !DILocation(line: 727, column: 9, scope: !3534)
!3543 = !DILocation(line: 727, column: 15, scope: !3534)
!3544 = !DILocation(line: 727, column: 24, scope: !3534)
!3545 = !DILocation(line: 727, column: 30, scope: !3534)
!3546 = !DILocation(line: 726, column: 7, scope: !3534)
!3547 = !DILocation(line: 726, column: 7, scope: !3535)
!3548 = !DILocation(line: 728, column: 56, scope: !3549)
!3549 = distinct !DILexicalBlock(scope: !3534, file: !1, line: 727, column: 40)
!3550 = !DILocation(line: 728, column: 4, scope: !3549)
!3551 = !DILocation(line: 729, column: 26, scope: !3549)
!3552 = !DILocation(line: 729, column: 11, scope: !3549)
!3553 = !DILocation(line: 729, column: 4, scope: !3549)
!3554 = !DILocation(line: 731, column: 2, scope: !3535)
!3555 = !DILocation(line: 734, column: 12, scope: !176)
!3556 = !DILocation(line: 734, column: 18, scope: !176)
!3557 = !DILocation(line: 734, column: 30, scope: !176)
!3558 = !DILocation(line: 734, column: 2, scope: !176)
!3559 = !DILocation(line: 741, column: 6, scope: !3560)
!3560 = distinct !DILexicalBlock(scope: !176, file: !1, line: 741, column: 6)
!3561 = !DILocation(line: 741, column: 12, scope: !3560)
!3562 = !DILocation(line: 741, column: 6, scope: !176)
!3563 = !DILocation(line: 742, column: 52, scope: !3564)
!3564 = distinct !DILexicalBlock(scope: !3560, file: !1, line: 741, column: 20)
!3565 = !DILocation(line: 742, column: 3, scope: !3564)
!3566 = !DILocation(line: 743, column: 3, scope: !3564)
!3567 = !DILocation(line: 743, column: 9, scope: !3564)
!3568 = !DILocation(line: 743, column: 17, scope: !3564)
!3569 = !DILocation(line: 743, column: 26, scope: !3564)
!3570 = !DILocation(line: 743, column: 32, scope: !3564)
!3571 = !DILocation(line: 744, column: 2, scope: !3564)
!3572 = !DILocation(line: 747, column: 19, scope: !176)
!3573 = !DILocation(line: 747, column: 2, scope: !176)
!3574 = !DILocation(line: 749, column: 43, scope: !176)
!3575 = !DILocation(line: 749, column: 2, scope: !176)
!3576 = !DILocation(line: 750, column: 2, scope: !176)
!3577 = !DILocation(line: 751, column: 1, scope: !176)
!3578 = !DILocalVariable(name: "cont", arg: 1, scope: !188, file: !186, line: 16, type: !191)
!3579 = !DILocation(line: 16, column: 30, scope: !188)
!3580 = !DILocalVariable(name: "status", arg: 2, scope: !188, file: !186, line: 16, type: !33)
!3581 = !DILocation(line: 16, column: 40, scope: !188)
!3582 = !DILocalVariable(name: "fn", scope: !188, file: !186, line: 17, type: !4)
!3583 = !DILocation(line: 17, column: 21, scope: !188)
!3584 = !DILocation(line: 19, column: 27, scope: !188)
!3585 = !DILocation(line: 19, column: 2, scope: !188)
!3586 = !DILocation(line: 21, column: 19, scope: !188)
!3587 = !DILocation(line: 21, column: 2, scope: !188)
!3588 = !DILocation(line: 22, column: 9, scope: !188)
!3589 = !DILocation(line: 22, column: 2, scope: !188)
!3590 = !DILocalVariable(name: "cont", arg: 1, scope: !278, file: !186, line: 25, type: !191)
!3591 = !DILocation(line: 25, column: 33, scope: !278)
!3592 = !DILocalVariable(name: "fn", scope: !278, file: !186, line: 26, type: !4)
!3593 = !DILocation(line: 26, column: 14, scope: !278)
!3594 = !DILocalVariable(name: "len", scope: !278, file: !186, line: 28, type: !33)
!3595 = !DILocation(line: 28, column: 6, scope: !278)
!3596 = !DILocation(line: 30, column: 34, scope: !278)
!3597 = !DILocation(line: 30, column: 2, scope: !278)
!3598 = !DILocation(line: 32, column: 6, scope: !3599)
!3599 = distinct !DILexicalBlock(scope: !278, file: !186, line: 32, column: 6)
!3600 = !DILocation(line: 32, column: 12, scope: !3599)
!3601 = !DILocation(line: 32, column: 17, scope: !3599)
!3602 = !DILocation(line: 32, column: 22, scope: !3599)
!3603 = !DILocation(line: 32, column: 28, scope: !3599)
!3604 = !DILocation(line: 32, column: 6, scope: !278)
!3605 = !DILocation(line: 38, column: 24, scope: !3606)
!3606 = distinct !DILexicalBlock(scope: !3599, file: !186, line: 32, column: 38)
!3607 = !DILocation(line: 38, column: 30, scope: !3606)
!3608 = !DILocation(line: 38, column: 39, scope: !3606)
!3609 = !DILocation(line: 38, column: 45, scope: !3606)
!3610 = !DILocation(line: 38, column: 54, scope: !3606)
!3611 = !DILocation(line: 38, column: 60, scope: !3606)
!3612 = !DILocation(line: 39, column: 29, scope: !3606)
!3613 = !DILocation(line: 39, column: 35, scope: !3606)
!3614 = !DILocation(line: 39, column: 40, scope: !3606)
!3615 = !DILocation(line: 39, column: 43, scope: !3606)
!3616 = !DILocation(line: 39, column: 49, scope: !3606)
!3617 = !DILocation(line: 38, column: 9, scope: !3606)
!3618 = !DILocation(line: 38, column: 7, scope: !3606)
!3619 = !DILocation(line: 40, column: 7, scope: !3620)
!3620 = distinct !DILexicalBlock(scope: !3606, file: !186, line: 40, column: 7)
!3621 = !DILocation(line: 40, column: 11, scope: !3620)
!3622 = !DILocation(line: 40, column: 7, scope: !3606)
!3623 = !DILocation(line: 41, column: 4, scope: !3620)
!3624 = !DILocation(line: 44, column: 7, scope: !3625)
!3625 = distinct !DILexicalBlock(scope: !3606, file: !186, line: 44, column: 7)
!3626 = !DILocation(line: 44, column: 13, scope: !3625)
!3627 = !DILocation(line: 44, column: 18, scope: !3625)
!3628 = !DILocation(line: 44, column: 7, scope: !3606)
!3629 = !DILocation(line: 45, column: 10, scope: !3625)
!3630 = !DILocation(line: 45, column: 16, scope: !3625)
!3631 = !DILocation(line: 45, column: 21, scope: !3625)
!3632 = !DILocation(line: 45, column: 4, scope: !3625)
!3633 = !DILocation(line: 48, column: 26, scope: !3606)
!3634 = !DILocation(line: 48, column: 18, scope: !3606)
!3635 = !DILocation(line: 48, column: 3, scope: !3606)
!3636 = !DILocation(line: 48, column: 9, scope: !3606)
!3637 = !DILocation(line: 48, column: 14, scope: !3606)
!3638 = !DILocation(line: 48, column: 16, scope: !3606)
!3639 = !DILocation(line: 49, column: 8, scope: !3640)
!3640 = distinct !DILexicalBlock(scope: !3606, file: !186, line: 49, column: 7)
!3641 = !DILocation(line: 49, column: 14, scope: !3640)
!3642 = !DILocation(line: 49, column: 19, scope: !3640)
!3643 = !DILocation(line: 49, column: 7, scope: !3606)
!3644 = !DILocation(line: 50, column: 4, scope: !3640)
!3645 = !DILocation(line: 52, column: 11, scope: !3606)
!3646 = !DILocation(line: 52, column: 17, scope: !3606)
!3647 = !DILocation(line: 52, column: 22, scope: !3606)
!3648 = !DILocation(line: 52, column: 30, scope: !3606)
!3649 = !DILocation(line: 52, column: 3, scope: !3606)
!3650 = !DILocation(line: 53, column: 20, scope: !3606)
!3651 = !DILocation(line: 53, column: 3, scope: !3606)
!3652 = !DILocation(line: 53, column: 9, scope: !3606)
!3653 = !DILocation(line: 53, column: 18, scope: !3606)
!3654 = !DILocation(line: 56, column: 7, scope: !3655)
!3655 = distinct !DILexicalBlock(scope: !3606, file: !186, line: 56, column: 7)
!3656 = !DILocation(line: 56, column: 13, scope: !3655)
!3657 = !DILocation(line: 56, column: 7, scope: !3606)
!3658 = !DILocation(line: 57, column: 28, scope: !3659)
!3659 = distinct !DILexicalBlock(scope: !3655, file: !186, line: 56, column: 20)
!3660 = !DILocation(line: 57, column: 34, scope: !3659)
!3661 = !DILocation(line: 57, column: 41, scope: !3659)
!3662 = !DILocation(line: 57, column: 46, scope: !3659)
!3663 = !DILocation(line: 57, column: 51, scope: !3659)
!3664 = !DILocation(line: 57, column: 4, scope: !3659)
!3665 = !DILocation(line: 57, column: 10, scope: !3659)
!3666 = !DILocation(line: 57, column: 15, scope: !3659)
!3667 = !DILocation(line: 57, column: 20, scope: !3659)
!3668 = !DILocation(line: 57, column: 26, scope: !3659)
!3669 = !DILocation(line: 58, column: 25, scope: !3659)
!3670 = !DILocation(line: 58, column: 31, scope: !3659)
!3671 = !DILocation(line: 58, column: 38, scope: !3659)
!3672 = !DILocation(line: 58, column: 43, scope: !3659)
!3673 = !DILocation(line: 58, column: 48, scope: !3659)
!3674 = !DILocation(line: 58, column: 4, scope: !3659)
!3675 = !DILocation(line: 58, column: 10, scope: !3659)
!3676 = !DILocation(line: 58, column: 15, scope: !3659)
!3677 = !DILocation(line: 58, column: 20, scope: !3659)
!3678 = !DILocation(line: 58, column: 23, scope: !3659)
!3679 = !DILocation(line: 59, column: 25, scope: !3659)
!3680 = !DILocation(line: 59, column: 31, scope: !3659)
!3681 = !DILocation(line: 59, column: 38, scope: !3659)
!3682 = !DILocation(line: 59, column: 43, scope: !3659)
!3683 = !DILocation(line: 59, column: 48, scope: !3659)
!3684 = !DILocation(line: 59, column: 4, scope: !3659)
!3685 = !DILocation(line: 59, column: 10, scope: !3659)
!3686 = !DILocation(line: 59, column: 15, scope: !3659)
!3687 = !DILocation(line: 59, column: 20, scope: !3659)
!3688 = !DILocation(line: 59, column: 23, scope: !3659)
!3689 = !DILocation(line: 60, column: 3, scope: !3659)
!3690 = !DILocation(line: 61, column: 2, scope: !3606)
!3691 = !DILocation(line: 62, column: 3, scope: !3692)
!3692 = distinct !DILexicalBlock(scope: !3599, file: !186, line: 61, column: 9)
!3693 = !DILocation(line: 62, column: 9, scope: !3692)
!3694 = !DILocation(line: 62, column: 14, scope: !3692)
!3695 = !DILocation(line: 62, column: 19, scope: !3692)
!3696 = !DILocation(line: 62, column: 22, scope: !3692)
!3697 = !DILocation(line: 63, column: 3, scope: !3692)
!3698 = !DILocation(line: 63, column: 9, scope: !3692)
!3699 = !DILocation(line: 63, column: 14, scope: !3692)
!3700 = !DILocation(line: 63, column: 19, scope: !3692)
!3701 = !DILocation(line: 63, column: 22, scope: !3692)
!3702 = !DILocation(line: 64, column: 10, scope: !3692)
!3703 = !DILocation(line: 64, column: 16, scope: !3692)
!3704 = !DILocation(line: 64, column: 21, scope: !3692)
!3705 = !DILocation(line: 64, column: 26, scope: !3692)
!3706 = !DILocation(line: 64, column: 32, scope: !3692)
!3707 = !DILocation(line: 65, column: 10, scope: !3692)
!3708 = !DILocation(line: 65, column: 16, scope: !3692)
!3709 = !DILocation(line: 65, column: 21, scope: !3692)
!3710 = !DILocation(line: 65, column: 26, scope: !3692)
!3711 = !DILocation(line: 65, column: 32, scope: !3692)
!3712 = !DILocation(line: 66, column: 10, scope: !3692)
!3713 = !DILocation(line: 66, column: 16, scope: !3692)
!3714 = !DILocation(line: 66, column: 21, scope: !3692)
!3715 = !DILocation(line: 66, column: 26, scope: !3692)
!3716 = !DILocation(line: 66, column: 32, scope: !3692)
!3717 = !DILocation(line: 70, column: 10, scope: !278)
!3718 = !DILocation(line: 70, column: 16, scope: !278)
!3719 = !DILocation(line: 70, column: 2, scope: !278)
!3720 = !DILocation(line: 71, column: 1, scope: !278)
!3721 = !DILocalVariable(name: "td", arg: 1, scope: !294, file: !284, line: 17, type: !297)
!3722 = !DILocation(line: 17, column: 42, scope: !294)
!3723 = !DILocation(line: 19, column: 6, scope: !3724)
!3724 = distinct !DILexicalBlock(scope: !294, file: !284, line: 19, column: 6)
!3725 = !DILocation(line: 19, column: 10, scope: !3724)
!3726 = !DILocation(line: 19, column: 15, scope: !3724)
!3727 = !DILocation(line: 19, column: 6, scope: !294)
!3728 = !DILocation(line: 20, column: 3, scope: !3724)
!3729 = !DILocation(line: 22, column: 2, scope: !294)
!3730 = !DILocation(line: 22, column: 6, scope: !294)
!3731 = !DILocation(line: 22, column: 11, scope: !294)
!3732 = !DILocation(line: 22, column: 17, scope: !294)
!3733 = !DILocation(line: 22, column: 22, scope: !294)
!3734 = !DILocation(line: 24, column: 9, scope: !294)
!3735 = !DILocation(line: 24, column: 13, scope: !294)
!3736 = !DILocation(line: 24, column: 18, scope: !294)
!3737 = !DILocation(line: 24, column: 24, scope: !294)
!3738 = !DILocation(line: 24, column: 31, scope: !294)
!3739 = !DILocation(line: 24, column: 35, scope: !294)
!3740 = !DILocation(line: 24, column: 40, scope: !294)
!3741 = !DILocation(line: 24, column: 2, scope: !294)
!3742 = !DILocation(line: 25, column: 1, scope: !294)
!3743 = !DILocalVariable(name: "cont", arg: 1, scope: !384, file: !284, line: 27, type: !387)
!3744 = !DILocation(line: 27, column: 40, scope: !384)
!3745 = !DILocalVariable(name: "timeout", arg: 2, scope: !384, file: !284, line: 27, type: !33)
!3746 = !DILocation(line: 27, column: 50, scope: !384)
!3747 = !DILocalVariable(name: "fn", scope: !384, file: !284, line: 28, type: !4)
!3748 = !DILocation(line: 28, column: 14, scope: !384)
!3749 = !DILocalVariable(name: "edtp", scope: !384, file: !284, line: 29, type: !297)
!3750 = !DILocation(line: 29, column: 14, scope: !384)
!3751 = !DILocation(line: 31, column: 8, scope: !3752)
!3752 = distinct !DILexicalBlock(scope: !384, file: !284, line: 31, column: 6)
!3753 = !DILocation(line: 31, column: 14, scope: !3752)
!3754 = !DILocation(line: 31, column: 6, scope: !384)
!3755 = !DILocation(line: 32, column: 35, scope: !3752)
!3756 = !DILocation(line: 32, column: 3, scope: !3752)
!3757 = !DILocation(line: 34, column: 6, scope: !3758)
!3758 = distinct !DILexicalBlock(scope: !384, file: !284, line: 34, column: 6)
!3759 = !DILocation(line: 34, column: 12, scope: !3758)
!3760 = !DILocation(line: 34, column: 17, scope: !3758)
!3761 = !DILocation(line: 34, column: 20, scope: !3762)
!3762 = !DILexicalBlockFile(scope: !3758, file: !284, discriminator: 1)
!3763 = !DILocation(line: 34, column: 26, scope: !3762)
!3764 = !DILocation(line: 34, column: 32, scope: !3762)
!3765 = !DILocation(line: 34, column: 6, scope: !3762)
!3766 = !DILocation(line: 35, column: 56, scope: !3767)
!3767 = distinct !DILexicalBlock(scope: !3758, file: !284, line: 34, column: 41)
!3768 = !DILocation(line: 35, column: 3, scope: !3767)
!3769 = !DILocation(line: 36, column: 3, scope: !3767)
!3770 = !DILocation(line: 39, column: 9, scope: !384)
!3771 = !DILocation(line: 39, column: 7, scope: !384)
!3772 = !DILocation(line: 40, column: 7, scope: !3773)
!3773 = distinct !DILexicalBlock(scope: !384, file: !284, line: 40, column: 6)
!3774 = !DILocation(line: 40, column: 6, scope: !384)
!3775 = !DILocation(line: 41, column: 3, scope: !3773)
!3776 = !DILocation(line: 43, column: 13, scope: !384)
!3777 = !DILocation(line: 43, column: 27, scope: !384)
!3778 = !DILocation(line: 43, column: 25, scope: !384)
!3779 = !DILocation(line: 43, column: 2, scope: !384)
!3780 = !DILocation(line: 43, column: 8, scope: !384)
!3781 = !DILocation(line: 43, column: 11, scope: !384)
!3782 = !DILocation(line: 44, column: 2, scope: !384)
!3783 = !DILocation(line: 44, column: 8, scope: !384)
!3784 = !DILocation(line: 44, column: 16, scope: !384)
!3785 = !DILocation(line: 45, column: 2, scope: !384)
!3786 = !DILocation(line: 45, column: 8, scope: !384)
!3787 = !DILocation(line: 45, column: 13, scope: !384)
!3788 = !DILocation(line: 46, column: 20, scope: !384)
!3789 = !DILocation(line: 46, column: 2, scope: !384)
!3790 = !DILocation(line: 46, column: 8, scope: !384)
!3791 = !DILocation(line: 46, column: 13, scope: !384)
!3792 = !DILocation(line: 46, column: 18, scope: !384)
!3793 = !DILocation(line: 47, column: 22, scope: !3794)
!3794 = distinct !DILexicalBlock(scope: !384, file: !284, line: 47, column: 6)
!3795 = !DILocation(line: 47, column: 6, scope: !3794)
!3796 = !DILocation(line: 47, column: 28, scope: !3794)
!3797 = !DILocation(line: 47, column: 6, scope: !384)
!3798 = !DILocation(line: 48, column: 9, scope: !3799)
!3799 = distinct !DILexicalBlock(scope: !3794, file: !284, line: 47, column: 33)
!3800 = !DILocation(line: 48, column: 3, scope: !3799)
!3801 = !DILocation(line: 49, column: 3, scope: !3799)
!3802 = !DILocation(line: 52, column: 15, scope: !384)
!3803 = !DILocation(line: 52, column: 2, scope: !384)
!3804 = !DILocation(line: 52, column: 8, scope: !384)
!3805 = !DILocation(line: 52, column: 13, scope: !384)
!3806 = !DILocation(line: 53, column: 8, scope: !3807)
!3807 = distinct !DILexicalBlock(scope: !384, file: !284, line: 53, column: 6)
!3808 = !DILocation(line: 53, column: 14, scope: !3807)
!3809 = !DILocation(line: 53, column: 6, scope: !384)
!3810 = !DILocation(line: 54, column: 45, scope: !3807)
!3811 = !DILocation(line: 54, column: 55, scope: !3807)
!3812 = !DILocation(line: 54, column: 61, scope: !3807)
!3813 = !DILocation(line: 54, column: 49, scope: !3807)
!3814 = !DILocation(line: 54, column: 3, scope: !3807)
!3815 = !DILocation(line: 57, column: 2, scope: !384)
!3816 = !DILocation(line: 58, column: 1, scope: !384)
!3817 = !DILocalVariable(name: "fn", scope: !389, file: !284, line: 61, type: !4)
!3818 = !DILocation(line: 61, column: 14, scope: !389)
!3819 = !DILocalVariable(name: "cont", scope: !389, file: !284, line: 62, type: !387)
!3820 = !DILocation(line: 62, column: 11, scope: !389)
!3821 = !DILocation(line: 64, column: 9, scope: !389)
!3822 = !DILocation(line: 64, column: 7, scope: !389)
!3823 = !DILocation(line: 65, column: 7, scope: !3824)
!3824 = distinct !DILexicalBlock(scope: !389, file: !284, line: 65, column: 6)
!3825 = !DILocation(line: 65, column: 6, scope: !389)
!3826 = !DILocation(line: 66, column: 3, scope: !3824)
!3827 = !DILocation(line: 68, column: 31, scope: !389)
!3828 = !DILocation(line: 68, column: 44, scope: !389)
!3829 = !DILocation(line: 68, column: 35, scope: !389)
!3830 = !DILocation(line: 68, column: 2, scope: !389)
!3831 = !DILocation(line: 70, column: 10, scope: !389)
!3832 = !DILocation(line: 70, column: 2, scope: !389)
!3833 = !DILocation(line: 71, column: 2, scope: !389)
!3834 = !DILocation(line: 71, column: 8, scope: !389)
!3835 = !DILocation(line: 71, column: 19, scope: !389)
!3836 = !DILocation(line: 72, column: 2, scope: !389)
!3837 = !DILocation(line: 72, column: 8, scope: !389)
!3838 = !DILocation(line: 72, column: 18, scope: !389)
!3839 = !DILocation(line: 74, column: 18, scope: !389)
!3840 = !DILocation(line: 74, column: 2, scope: !389)
!3841 = !DILocation(line: 74, column: 8, scope: !389)
!3842 = !DILocation(line: 74, column: 16, scope: !389)
!3843 = !DILocation(line: 75, column: 18, scope: !389)
!3844 = !DILocation(line: 75, column: 2, scope: !389)
!3845 = !DILocation(line: 75, column: 8, scope: !389)
!3846 = !DILocation(line: 75, column: 16, scope: !389)
!3847 = !DILocation(line: 76, column: 18, scope: !389)
!3848 = !DILocation(line: 76, column: 2, scope: !389)
!3849 = !DILocation(line: 76, column: 8, scope: !389)
!3850 = !DILocation(line: 76, column: 16, scope: !389)
!3851 = !DILocation(line: 78, column: 7, scope: !3852)
!3852 = distinct !DILexicalBlock(scope: !389, file: !284, line: 78, column: 6)
!3853 = !DILocation(line: 78, column: 13, scope: !3852)
!3854 = !DILocation(line: 78, column: 21, scope: !3852)
!3855 = !DILocation(line: 78, column: 25, scope: !3856)
!3856 = !DILexicalBlockFile(scope: !3852, file: !284, discriminator: 1)
!3857 = !DILocation(line: 78, column: 31, scope: !3856)
!3858 = !DILocation(line: 78, column: 39, scope: !3856)
!3859 = !DILocation(line: 78, column: 43, scope: !3860)
!3860 = !DILexicalBlockFile(scope: !3852, file: !284, discriminator: 2)
!3861 = !DILocation(line: 78, column: 49, scope: !3860)
!3862 = !DILocation(line: 78, column: 6, scope: !3860)
!3863 = !DILocation(line: 79, column: 26, scope: !3852)
!3864 = !DILocation(line: 79, column: 10, scope: !3852)
!3865 = !DILocation(line: 79, column: 3, scope: !3852)
!3866 = !DILocation(line: 81, column: 15, scope: !389)
!3867 = !DILocation(line: 81, column: 2, scope: !389)
!3868 = !DILocation(line: 81, column: 8, scope: !389)
!3869 = !DILocation(line: 81, column: 13, scope: !389)
!3870 = !DILocation(line: 82, column: 7, scope: !3871)
!3871 = distinct !DILexicalBlock(scope: !389, file: !284, line: 82, column: 6)
!3872 = !DILocation(line: 82, column: 13, scope: !3871)
!3873 = !DILocation(line: 82, column: 6, scope: !389)
!3874 = !DILocation(line: 83, column: 26, scope: !3871)
!3875 = !DILocation(line: 83, column: 10, scope: !3871)
!3876 = !DILocation(line: 83, column: 3, scope: !3871)
!3877 = !DILocation(line: 85, column: 10, scope: !389)
!3878 = !DILocation(line: 85, column: 16, scope: !389)
!3879 = !DILocation(line: 85, column: 2, scope: !389)
!3880 = !DILocation(line: 86, column: 9, scope: !389)
!3881 = !DILocation(line: 86, column: 2, scope: !389)
!3882 = !DILocation(line: 87, column: 1, scope: !389)
!3883 = !DILocalVariable(name: "cont", arg: 1, scope: !392, file: !284, line: 89, type: !387)
!3884 = !DILocation(line: 89, column: 33, scope: !392)
!3885 = !DILocalVariable(name: "fn", scope: !392, file: !284, line: 90, type: !4)
!3886 = !DILocation(line: 90, column: 14, scope: !392)
!3887 = !DILocation(line: 92, column: 31, scope: !392)
!3888 = !DILocation(line: 92, column: 44, scope: !392)
!3889 = !DILocation(line: 92, column: 35, scope: !392)
!3890 = !DILocation(line: 92, column: 2, scope: !392)
!3891 = !DILocation(line: 94, column: 7, scope: !3892)
!3892 = distinct !DILexicalBlock(scope: !392, file: !284, line: 94, column: 6)
!3893 = !DILocation(line: 94, column: 6, scope: !392)
!3894 = !DILocation(line: 95, column: 3, scope: !3892)
!3895 = !DILocation(line: 98, column: 6, scope: !3896)
!3896 = distinct !DILexicalBlock(scope: !392, file: !284, line: 98, column: 6)
!3897 = !DILocation(line: 98, column: 12, scope: !3896)
!3898 = !DILocation(line: 98, column: 6, scope: !392)
!3899 = !DILocation(line: 99, column: 3, scope: !3896)
!3900 = !DILocation(line: 99, column: 9, scope: !3896)
!3901 = !DILocation(line: 99, column: 17, scope: !3896)
!3902 = !DILocation(line: 99, column: 23, scope: !3896)
!3903 = !DILocation(line: 100, column: 6, scope: !3904)
!3904 = distinct !DILexicalBlock(scope: !392, file: !284, line: 100, column: 6)
!3905 = !DILocation(line: 100, column: 12, scope: !3904)
!3906 = !DILocation(line: 100, column: 6, scope: !392)
!3907 = !DILocation(line: 101, column: 3, scope: !3904)
!3908 = !DILocation(line: 101, column: 9, scope: !3904)
!3909 = !DILocation(line: 101, column: 16, scope: !3904)
!3910 = !DILocation(line: 101, column: 23, scope: !3904)
!3911 = !DILocation(line: 103, column: 6, scope: !3912)
!3912 = distinct !DILexicalBlock(scope: !392, file: !284, line: 103, column: 6)
!3913 = !DILocation(line: 103, column: 12, scope: !3912)
!3914 = !DILocation(line: 103, column: 6, scope: !392)
!3915 = !DILocation(line: 104, column: 17, scope: !3912)
!3916 = !DILocation(line: 104, column: 23, scope: !3912)
!3917 = !DILocation(line: 104, column: 3, scope: !3912)
!3918 = !DILocation(line: 105, column: 6, scope: !3919)
!3919 = distinct !DILexicalBlock(scope: !392, file: !284, line: 105, column: 6)
!3920 = !DILocation(line: 105, column: 12, scope: !3919)
!3921 = !DILocation(line: 105, column: 6, scope: !392)
!3922 = !DILocation(line: 106, column: 17, scope: !3919)
!3923 = !DILocation(line: 106, column: 23, scope: !3919)
!3924 = !DILocation(line: 106, column: 3, scope: !3919)
!3925 = !DILocation(line: 107, column: 6, scope: !3926)
!3926 = distinct !DILexicalBlock(scope: !392, file: !284, line: 107, column: 6)
!3927 = !DILocation(line: 107, column: 12, scope: !3926)
!3928 = !DILocation(line: 107, column: 6, scope: !392)
!3929 = !DILocation(line: 108, column: 17, scope: !3926)
!3930 = !DILocation(line: 108, column: 23, scope: !3926)
!3931 = !DILocation(line: 108, column: 3, scope: !3926)
!3932 = !DILocation(line: 110, column: 6, scope: !3933)
!3933 = distinct !DILexicalBlock(scope: !392, file: !284, line: 110, column: 6)
!3934 = !DILocation(line: 110, column: 12, scope: !3933)
!3935 = !DILocation(line: 110, column: 6, scope: !392)
!3936 = !DILocation(line: 111, column: 16, scope: !3933)
!3937 = !DILocation(line: 111, column: 22, scope: !3933)
!3938 = !DILocation(line: 111, column: 3, scope: !3933)
!3939 = !DILocation(line: 113, column: 6, scope: !3940)
!3940 = distinct !DILexicalBlock(scope: !392, file: !284, line: 113, column: 6)
!3941 = !DILocation(line: 113, column: 12, scope: !3940)
!3942 = !DILocation(line: 113, column: 17, scope: !3940)
!3943 = !DILocation(line: 113, column: 6, scope: !392)
!3944 = !DILocation(line: 114, column: 9, scope: !3940)
!3945 = !DILocation(line: 114, column: 15, scope: !3940)
!3946 = !DILocation(line: 114, column: 20, scope: !3940)
!3947 = !DILocation(line: 114, column: 3, scope: !3940)
!3948 = !DILocation(line: 116, column: 6, scope: !3949)
!3949 = distinct !DILexicalBlock(scope: !392, file: !284, line: 116, column: 6)
!3950 = !DILocation(line: 116, column: 12, scope: !3949)
!3951 = !DILocation(line: 116, column: 6, scope: !392)
!3952 = !DILocation(line: 117, column: 3, scope: !3949)
!3953 = !DILocation(line: 117, column: 9, scope: !3949)
!3954 = !DILocation(line: 117, column: 15, scope: !3949)
!3955 = !DILocation(line: 117, column: 23, scope: !3949)
!3956 = !DILocation(line: 120, column: 6, scope: !3957)
!3957 = distinct !DILexicalBlock(scope: !392, file: !284, line: 120, column: 6)
!3958 = !DILocation(line: 120, column: 12, scope: !3957)
!3959 = !DILocation(line: 120, column: 22, scope: !3957)
!3960 = !DILocation(line: 120, column: 6, scope: !392)
!3961 = !DILocation(line: 122, column: 13, scope: !3962)
!3962 = distinct !DILexicalBlock(scope: !3957, file: !284, line: 120, column: 28)
!3963 = !DILocation(line: 122, column: 19, scope: !3962)
!3964 = !DILocation(line: 122, column: 3, scope: !3962)
!3965 = !DILocation(line: 123, column: 10, scope: !3962)
!3966 = !DILocation(line: 123, column: 16, scope: !3962)
!3967 = !DILocation(line: 123, column: 3, scope: !3962)
!3968 = !DILocation(line: 126, column: 22, scope: !3962)
!3969 = !DILocation(line: 126, column: 28, scope: !3962)
!3970 = !DILocation(line: 126, column: 3, scope: !3962)
!3971 = !DILocation(line: 127, column: 26, scope: !3962)
!3972 = !DILocation(line: 127, column: 32, scope: !3962)
!3973 = !DILocation(line: 127, column: 3, scope: !3962)
!3974 = !DILocation(line: 128, column: 9, scope: !3962)
!3975 = !DILocation(line: 131, column: 6, scope: !3976)
!3976 = distinct !DILexicalBlock(scope: !392, file: !284, line: 131, column: 6)
!3977 = !DILocation(line: 131, column: 12, scope: !3976)
!3978 = !DILocation(line: 131, column: 22, scope: !3976)
!3979 = !DILocation(line: 131, column: 26, scope: !3976)
!3980 = !DILocation(line: 131, column: 29, scope: !3981)
!3981 = !DILexicalBlockFile(scope: !3976, file: !284, discriminator: 1)
!3982 = !DILocation(line: 131, column: 35, scope: !3981)
!3983 = !DILocation(line: 131, column: 40, scope: !3981)
!3984 = !DILocation(line: 131, column: 43, scope: !3985)
!3985 = !DILexicalBlockFile(scope: !3976, file: !284, discriminator: 2)
!3986 = !DILocation(line: 131, column: 49, scope: !3985)
!3987 = !DILocation(line: 131, column: 55, scope: !3985)
!3988 = !DILocation(line: 131, column: 6, scope: !3985)
!3989 = !DILocation(line: 132, column: 21, scope: !3976)
!3990 = !DILocation(line: 132, column: 27, scope: !3976)
!3991 = !DILocation(line: 132, column: 33, scope: !3976)
!3992 = !DILocation(line: 132, column: 39, scope: !3976)
!3993 = !DILocation(line: 132, column: 3, scope: !3976)
!3994 = !DILocation(line: 133, column: 6, scope: !3995)
!3995 = distinct !DILexicalBlock(scope: !392, file: !284, line: 133, column: 6)
!3996 = !DILocation(line: 133, column: 12, scope: !3995)
!3997 = !DILocation(line: 133, column: 6, scope: !392)
!3998 = !DILocation(line: 134, column: 9, scope: !3995)
!3999 = !DILocation(line: 134, column: 15, scope: !3995)
!4000 = !DILocation(line: 134, column: 3, scope: !3995)
!4001 = !DILocation(line: 137, column: 6, scope: !4002)
!4002 = distinct !DILexicalBlock(scope: !392, file: !284, line: 137, column: 6)
!4003 = !DILocation(line: 137, column: 12, scope: !4002)
!4004 = !DILocation(line: 137, column: 6, scope: !392)
!4005 = !DILocation(line: 138, column: 13, scope: !4002)
!4006 = !DILocation(line: 138, column: 19, scope: !4002)
!4007 = !DILocation(line: 138, column: 3, scope: !4002)
!4008 = !DILocation(line: 140, column: 8, scope: !392)
!4009 = !DILocation(line: 140, column: 2, scope: !392)
!4010 = !DILocation(line: 141, column: 2, scope: !392)
!4011 = !DILocation(line: 142, column: 1, scope: !392)
!4012 = !DILocalVariable(name: "start", arg: 1, scope: !470, file: !396, line: 36, type: !33)
!4013 = !DILocation(line: 36, column: 34, scope: !470)
!4014 = !DILocalVariable(name: "i", scope: !470, file: !396, line: 37, type: !33)
!4015 = !DILocation(line: 37, column: 13, scope: !470)
!4016 = !DILocalVariable(name: "j", scope: !470, file: !396, line: 37, type: !33)
!4017 = !DILocation(line: 37, column: 16, scope: !470)
!4018 = !DILocation(line: 39, column: 26, scope: !470)
!4019 = !DILocation(line: 39, column: 24, scope: !470)
!4020 = !DILocation(line: 40, column: 16, scope: !4021)
!4021 = distinct !DILexicalBlock(scope: !470, file: !396, line: 40, column: 9)
!4022 = !DILocation(line: 40, column: 14, scope: !4021)
!4023 = !DILocation(line: 40, column: 21, scope: !4024)
!4024 = !DILexicalBlockFile(scope: !4025, file: !396, discriminator: 1)
!4025 = distinct !DILexicalBlock(scope: !4021, file: !396, line: 40, column: 9)
!4026 = !DILocation(line: 40, column: 23, scope: !4024)
!4027 = !DILocation(line: 40, column: 9, scope: !4024)
!4028 = !DILocation(line: 41, column: 21, scope: !4029)
!4029 = distinct !DILexicalBlock(scope: !4025, file: !396, line: 40, column: 42)
!4030 = !DILocation(line: 41, column: 41, scope: !4029)
!4031 = !DILocation(line: 41, column: 43, scope: !4029)
!4032 = !DILocation(line: 41, column: 32, scope: !4029)
!4033 = !DILocation(line: 41, column: 30, scope: !4029)
!4034 = !DILocation(line: 41, column: 48, scope: !4029)
!4035 = !DILocation(line: 41, column: 19, scope: !4029)
!4036 = !DILocation(line: 42, column: 21, scope: !4037)
!4037 = distinct !DILexicalBlock(scope: !4029, file: !396, line: 42, column: 21)
!4038 = !DILocation(line: 42, column: 26, scope: !4037)
!4039 = !DILocation(line: 42, column: 23, scope: !4037)
!4040 = !DILocation(line: 42, column: 21, scope: !4029)
!4041 = !DILocation(line: 43, column: 48, scope: !4042)
!4042 = distinct !DILexicalBlock(scope: !4037, file: !396, line: 42, column: 29)
!4043 = !DILocation(line: 43, column: 36, scope: !4042)
!4044 = !DILocation(line: 43, column: 31, scope: !4042)
!4045 = !DILocation(line: 43, column: 19, scope: !4042)
!4046 = !DILocation(line: 43, column: 34, scope: !4042)
!4047 = !DILocation(line: 44, column: 17, scope: !4042)
!4048 = !DILocation(line: 45, column: 34, scope: !4029)
!4049 = !DILocation(line: 45, column: 42, scope: !4029)
!4050 = !DILocation(line: 45, column: 40, scope: !4029)
!4051 = !DILocation(line: 45, column: 29, scope: !4029)
!4052 = !DILocation(line: 45, column: 17, scope: !4029)
!4053 = !DILocation(line: 45, column: 32, scope: !4029)
!4054 = !DILocation(line: 46, column: 9, scope: !4029)
!4055 = !DILocation(line: 40, column: 38, scope: !4056)
!4056 = !DILexicalBlockFile(scope: !4025, file: !396, discriminator: 2)
!4057 = !DILocation(line: 40, column: 9, scope: !4056)
!4058 = !DILocation(line: 47, column: 1, scope: !470)
!4059 = !DILocation(line: 55, column: 14, scope: !4060)
!4060 = distinct !DILexicalBlock(scope: !473, file: !396, line: 55, column: 13)
!4061 = !DILocation(line: 55, column: 13, scope: !473)
!4062 = !DILocation(line: 56, column: 25, scope: !4063)
!4063 = distinct !DILexicalBlock(scope: !4060, file: !396, line: 55, column: 21)
!4064 = !DILocation(line: 56, column: 17, scope: !4065)
!4065 = !DILexicalBlockFile(scope: !4063, file: !396, discriminator: 1)
!4066 = !DILocation(line: 57, column: 23, scope: !4063)
!4067 = !DILocation(line: 58, column: 17, scope: !4063)
!4068 = !DILocation(line: 59, column: 23, scope: !4063)
!4069 = !DILocation(line: 60, column: 9, scope: !4063)
!4070 = !DILocation(line: 61, column: 14, scope: !4071)
!4071 = distinct !DILexicalBlock(scope: !473, file: !396, line: 61, column: 14)
!4072 = !DILocation(line: 61, column: 20, scope: !4071)
!4073 = !DILocation(line: 61, column: 14, scope: !473)
!4074 = !DILocation(line: 62, column: 21, scope: !4075)
!4075 = distinct !DILexicalBlock(scope: !4076, file: !396, line: 62, column: 21)
!4076 = distinct !DILexicalBlock(scope: !4071, file: !396, line: 61, column: 33)
!4077 = !DILocation(line: 62, column: 27, scope: !4075)
!4078 = !DILocation(line: 62, column: 21, scope: !4076)
!4079 = !DILocation(line: 63, column: 31, scope: !4080)
!4080 = distinct !DILexicalBlock(scope: !4075, file: !396, line: 62, column: 33)
!4081 = !DILocation(line: 64, column: 25, scope: !4080)
!4082 = !DILocation(line: 65, column: 17, scope: !4080)
!4083 = !DILocation(line: 67, column: 31, scope: !4084)
!4084 = distinct !DILexicalBlock(scope: !4075, file: !396, line: 66, column: 22)
!4085 = !DILocation(line: 68, column: 25, scope: !4084)
!4086 = !DILocation(line: 70, column: 23, scope: !4076)
!4087 = !DILocation(line: 71, column: 9, scope: !4076)
!4088 = !DILocation(line: 72, column: 8, scope: !4089)
!4089 = distinct !DILexicalBlock(scope: !473, file: !396, line: 72, column: 6)
!4090 = !DILocation(line: 72, column: 14, scope: !4089)
!4091 = !DILocation(line: 72, column: 6, scope: !473)
!4092 = !DILocation(line: 73, column: 52, scope: !4093)
!4093 = distinct !DILexicalBlock(scope: !4089, file: !396, line: 72, column: 19)
!4094 = !DILocation(line: 73, column: 40, scope: !4093)
!4095 = !DILocation(line: 73, column: 3, scope: !4093)
!4096 = !DILocation(line: 74, column: 9, scope: !4093)
!4097 = !DILocation(line: 75, column: 33, scope: !473)
!4098 = !DILocation(line: 75, column: 16, scope: !473)
!4099 = !DILocation(line: 75, column: 9, scope: !473)
!4100 = !DILocalVariable(name: "qname", arg: 1, scope: !476, file: !396, line: 79, type: !20)
!4101 = !DILocation(line: 79, column: 30, scope: !476)
!4102 = !DILocalVariable(name: "qtype", arg: 2, scope: !476, file: !396, line: 79, type: !48)
!4103 = !DILocation(line: 79, column: 46, scope: !476)
!4104 = !DILocalVariable(name: "qclass", arg: 3, scope: !476, file: !396, line: 79, type: !48)
!4105 = !DILocation(line: 79, column: 62, scope: !476)
!4106 = !DILocalVariable(name: "id", arg: 4, scope: !476, file: !396, line: 80, type: !72)
!4107 = !DILocation(line: 80, column: 17, scope: !476)
!4108 = !DILocalVariable(name: "rd", arg: 5, scope: !476, file: !396, line: 80, type: !33)
!4109 = !DILocation(line: 80, column: 25, scope: !476)
!4110 = !DILocalVariable(name: "buf", arg: 6, scope: !476, file: !396, line: 80, type: !20)
!4111 = !DILocation(line: 80, column: 37, scope: !476)
!4112 = !DILocalVariable(name: "buflen", arg: 7, scope: !476, file: !396, line: 80, type: !33)
!4113 = !DILocation(line: 80, column: 46, scope: !476)
!4114 = !DILocalVariable(name: "fn", scope: !476, file: !396, line: 81, type: !19)
!4115 = !DILocation(line: 81, column: 8, scope: !476)
!4116 = !DILocalVariable(name: "ucp", scope: !476, file: !396, line: 82, type: !20)
!4117 = !DILocation(line: 82, column: 10, scope: !476)
!4118 = !DILocalVariable(name: "i", scope: !476, file: !396, line: 83, type: !33)
!4119 = !DILocation(line: 83, column: 6, scope: !476)
!4120 = !DILocalVariable(name: "written_len", scope: !476, file: !396, line: 83, type: !33)
!4121 = !DILocation(line: 83, column: 9, scope: !476)
!4122 = !DILocalVariable(name: "hdr", scope: !476, file: !396, line: 84, type: !399)
!4123 = !DILocation(line: 84, column: 12, scope: !476)
!4124 = !DILocation(line: 86, column: 8, scope: !4125)
!4125 = distinct !DILexicalBlock(scope: !476, file: !396, line: 86, column: 6)
!4126 = !DILocation(line: 86, column: 14, scope: !4125)
!4127 = !DILocation(line: 86, column: 6, scope: !476)
!4128 = !DILocation(line: 87, column: 56, scope: !4129)
!4129 = distinct !DILexicalBlock(scope: !4125, file: !396, line: 86, column: 19)
!4130 = !DILocation(line: 88, column: 18, scope: !4129)
!4131 = !DILocation(line: 88, column: 4, scope: !4129)
!4132 = !DILocation(line: 88, column: 26, scope: !4129)
!4133 = !DILocation(line: 87, column: 3, scope: !4129)
!4134 = !DILocation(line: 89, column: 9, scope: !4129)
!4135 = !DILocation(line: 90, column: 21, scope: !476)
!4136 = !DILocation(line: 90, column: 8, scope: !476)
!4137 = !DILocation(line: 90, column: 6, scope: !476)
!4138 = !DILocation(line: 93, column: 12, scope: !476)
!4139 = !DILocation(line: 93, column: 2, scope: !476)
!4140 = !DILocation(line: 93, column: 7, scope: !476)
!4141 = !DILocation(line: 93, column: 10, scope: !476)
!4142 = !DILocation(line: 94, column: 2, scope: !476)
!4143 = !DILocation(line: 94, column: 7, scope: !476)
!4144 = !DILocation(line: 94, column: 14, scope: !476)
!4145 = !DILocation(line: 95, column: 2, scope: !476)
!4146 = !DILocation(line: 95, column: 7, scope: !476)
!4147 = !DILocation(line: 95, column: 13, scope: !476)
!4148 = !DILocation(line: 96, column: 12, scope: !476)
!4149 = !DILocation(line: 96, column: 2, scope: !476)
!4150 = !DILocation(line: 96, column: 7, scope: !476)
!4151 = !DILocation(line: 96, column: 10, scope: !476)
!4152 = !DILocation(line: 97, column: 42, scope: !476)
!4153 = !DILocation(line: 97, column: 47, scope: !476)
!4154 = !DILocation(line: 97, column: 52, scope: !476)
!4155 = !DILocation(line: 97, column: 32, scope: !476)
!4156 = !DILocation(line: 97, column: 37, scope: !476)
!4157 = !DILocation(line: 97, column: 40, scope: !476)
!4158 = !DILocation(line: 97, column: 22, scope: !476)
!4159 = !DILocation(line: 97, column: 27, scope: !476)
!4160 = !DILocation(line: 97, column: 30, scope: !476)
!4161 = !DILocation(line: 97, column: 12, scope: !476)
!4162 = !DILocation(line: 97, column: 17, scope: !476)
!4163 = !DILocation(line: 97, column: 20, scope: !476)
!4164 = !DILocation(line: 97, column: 2, scope: !476)
!4165 = !DILocation(line: 97, column: 7, scope: !476)
!4166 = !DILocation(line: 97, column: 10, scope: !476)
!4167 = !DILocation(line: 98, column: 15, scope: !476)
!4168 = !DILocation(line: 98, column: 2, scope: !476)
!4169 = !DILocation(line: 98, column: 7, scope: !476)
!4170 = !DILocation(line: 98, column: 13, scope: !476)
!4171 = !DILocation(line: 99, column: 41, scope: !476)
!4172 = !DILocation(line: 99, column: 28, scope: !476)
!4173 = !DILocation(line: 99, column: 33, scope: !476)
!4174 = !DILocation(line: 99, column: 39, scope: !476)
!4175 = !DILocation(line: 99, column: 15, scope: !476)
!4176 = !DILocation(line: 99, column: 20, scope: !476)
!4177 = !DILocation(line: 99, column: 26, scope: !476)
!4178 = !DILocation(line: 99, column: 2, scope: !476)
!4179 = !DILocation(line: 99, column: 7, scope: !476)
!4180 = !DILocation(line: 99, column: 13, scope: !476)
!4181 = !DILocation(line: 101, column: 14, scope: !476)
!4182 = !DILocation(line: 102, column: 20, scope: !476)
!4183 = !DILocation(line: 102, column: 24, scope: !476)
!4184 = !DILocation(line: 102, column: 8, scope: !476)
!4185 = !DILocation(line: 102, column: 6, scope: !476)
!4186 = !DILocation(line: 105, column: 8, scope: !4187)
!4187 = distinct !DILexicalBlock(scope: !476, file: !396, line: 105, column: 6)
!4188 = !DILocation(line: 105, column: 14, scope: !4187)
!4189 = !DILocation(line: 105, column: 6, scope: !476)
!4190 = !DILocation(line: 106, column: 48, scope: !4187)
!4191 = !DILocation(line: 106, column: 52, scope: !4187)
!4192 = !DILocation(line: 106, column: 58, scope: !4187)
!4193 = !DILocation(line: 106, column: 56, scope: !4187)
!4194 = !DILocation(line: 106, column: 3, scope: !4187)
!4195 = !DILocation(line: 108, column: 18, scope: !476)
!4196 = !DILocation(line: 108, column: 25, scope: !476)
!4197 = !DILocation(line: 108, column: 30, scope: !476)
!4198 = !DILocation(line: 108, column: 39, scope: !476)
!4199 = !DILocation(line: 108, column: 37, scope: !476)
!4200 = !DILocation(line: 108, column: 6, scope: !476)
!4201 = !DILocation(line: 108, column: 4, scope: !476)
!4202 = !DILocation(line: 109, column: 6, scope: !4203)
!4203 = distinct !DILexicalBlock(scope: !476, file: !396, line: 109, column: 6)
!4204 = !DILocation(line: 109, column: 8, scope: !4203)
!4205 = !DILocation(line: 109, column: 6, scope: !476)
!4206 = !DILocation(line: 110, column: 3, scope: !4203)
!4207 = !DILocation(line: 112, column: 17, scope: !476)
!4208 = !DILocation(line: 112, column: 14, scope: !476)
!4209 = !DILocation(line: 113, column: 9, scope: !476)
!4210 = !DILocation(line: 113, column: 6, scope: !476)
!4211 = !DILocation(line: 116, column: 8, scope: !4212)
!4212 = distinct !DILexicalBlock(scope: !476, file: !396, line: 116, column: 6)
!4213 = !DILocation(line: 116, column: 14, scope: !4212)
!4214 = !DILocation(line: 116, column: 6, scope: !476)
!4215 = !DILocation(line: 118, column: 4, scope: !4212)
!4216 = !DILocation(line: 118, column: 8, scope: !4212)
!4217 = !DILocation(line: 118, column: 14, scope: !4212)
!4218 = !DILocation(line: 118, column: 12, scope: !4212)
!4219 = !DILocation(line: 117, column: 3, scope: !4212)
!4220 = !DILocation(line: 120, column: 14, scope: !476)
!4221 = !DILocation(line: 121, column: 6, scope: !4222)
!4222 = distinct !DILexicalBlock(scope: !476, file: !396, line: 121, column: 6)
!4223 = !DILocation(line: 121, column: 20, scope: !4222)
!4224 = !DILocation(line: 121, column: 18, scope: !4222)
!4225 = !DILocation(line: 121, column: 6, scope: !476)
!4226 = !DILocation(line: 122, column: 3, scope: !4222)
!4227 = !DILocation(line: 124, column: 2, scope: !4228)
!4228 = distinct !DILexicalBlock(scope: !476, file: !396, line: 124, column: 2)
!4229 = !DILocation(line: 125, column: 2, scope: !4230)
!4230 = distinct !DILexicalBlock(scope: !476, file: !396, line: 125, column: 2)
!4231 = !DILocation(line: 127, column: 9, scope: !476)
!4232 = !DILocation(line: 127, column: 2, scope: !476)
!4233 = !DILocation(line: 128, column: 1, scope: !476)
!4234 = !DILocalVariable(name: "rtype", arg: 1, scope: !518, file: !396, line: 619, type: !48)
!4235 = !DILocation(line: 619, column: 30, scope: !518)
!4236 = !DILocation(line: 620, column: 10, scope: !518)
!4237 = !DILocation(line: 620, column: 2, scope: !518)
!4238 = !DILocation(line: 622, column: 3, scope: !4239)
!4239 = distinct !DILexicalBlock(scope: !518, file: !396, line: 620, column: 17)
!4240 = !DILocation(line: 624, column: 3, scope: !4239)
!4241 = !DILocation(line: 626, column: 3, scope: !4239)
!4242 = !DILocation(line: 628, column: 3, scope: !4239)
!4243 = !DILocation(line: 630, column: 3, scope: !4239)
!4244 = !DILocation(line: 632, column: 3, scope: !4239)
!4245 = !DILocation(line: 634, column: 3, scope: !4239)
!4246 = !DILocation(line: 636, column: 3, scope: !4239)
!4247 = !DILocation(line: 638, column: 3, scope: !4239)
!4248 = !DILocation(line: 640, column: 3, scope: !4239)
!4249 = !DILocation(line: 642, column: 3, scope: !4239)
!4250 = !DILocation(line: 644, column: 3, scope: !4239)
!4251 = !DILocation(line: 646, column: 3, scope: !4239)
!4252 = !DILocation(line: 648, column: 3, scope: !4239)
!4253 = !DILocation(line: 650, column: 3, scope: !4239)
!4254 = !DILocation(line: 652, column: 3, scope: !4239)
!4255 = !DILocation(line: 654, column: 3, scope: !4239)
!4256 = !DILocation(line: 656, column: 3, scope: !4239)
!4257 = !DILocation(line: 658, column: 3, scope: !4239)
!4258 = !DILocation(line: 660, column: 3, scope: !4239)
!4259 = !DILocation(line: 662, column: 3, scope: !4239)
!4260 = !DILocation(line: 664, column: 3, scope: !4239)
!4261 = !DILocation(line: 666, column: 3, scope: !4239)
!4262 = !DILocation(line: 668, column: 3, scope: !4239)
!4263 = !DILocation(line: 670, column: 3, scope: !4239)
!4264 = !DILocation(line: 672, column: 3, scope: !4239)
!4265 = !DILocation(line: 674, column: 52, scope: !4239)
!4266 = !DILocation(line: 674, column: 3, scope: !4239)
!4267 = !DILocation(line: 675, column: 3, scope: !4239)
!4268 = !DILocation(line: 677, column: 1, scope: !518)
!4269 = !DILocalVariable(name: "from", arg: 1, scope: !519, file: !396, line: 679, type: !20)
!4270 = !DILocation(line: 679, column: 32, scope: !519)
!4271 = !DILocalVariable(name: "to", arg: 2, scope: !519, file: !396, line: 679, type: !20)
!4272 = !DILocation(line: 679, column: 46, scope: !519)
!4273 = !DILocalVariable(name: "tolen", arg: 3, scope: !519, file: !396, line: 679, type: !33)
!4274 = !DILocation(line: 679, column: 54, scope: !519)
!4275 = !DILocalVariable(name: "skip", scope: !519, file: !396, line: 680, type: !33)
!4276 = !DILocation(line: 680, column: 6, scope: !519)
!4277 = !DILocalVariable(name: "llen", scope: !519, file: !396, line: 680, type: !33)
!4278 = !DILocation(line: 680, column: 12, scope: !519)
!4279 = !DILocalVariable(name: "written_len", scope: !519, file: !396, line: 680, type: !33)
!4280 = !DILocation(line: 680, column: 18, scope: !519)
!4281 = !DILocation(line: 682, column: 14, scope: !519)
!4282 = !DILocation(line: 683, column: 2, scope: !519)
!4283 = !DILocation(line: 683, column: 10, scope: !4284)
!4284 = !DILexicalBlockFile(scope: !519, file: !396, discriminator: 1)
!4285 = !DILocation(line: 683, column: 9, scope: !4284)
!4286 = !DILocation(line: 683, column: 2, scope: !4284)
!4287 = !DILocation(line: 684, column: 19, scope: !4288)
!4288 = distinct !DILexicalBlock(scope: !519, file: !396, line: 683, column: 16)
!4289 = !DILocation(line: 684, column: 10, scope: !4288)
!4290 = !DILocation(line: 684, column: 8, scope: !4288)
!4291 = !DILocation(line: 685, column: 7, scope: !4292)
!4292 = distinct !DILexicalBlock(scope: !4288, file: !396, line: 685, column: 7)
!4293 = !DILocation(line: 685, column: 12, scope: !4292)
!4294 = !DILocation(line: 685, column: 7, scope: !4288)
!4295 = !DILocation(line: 686, column: 4, scope: !4292)
!4296 = !DILocation(line: 687, column: 10, scope: !4288)
!4297 = !DILocation(line: 687, column: 15, scope: !4288)
!4298 = !DILocation(line: 687, column: 8, scope: !4288)
!4299 = !DILocation(line: 688, column: 18, scope: !4288)
!4300 = !DILocation(line: 688, column: 15, scope: !4288)
!4301 = !DILocation(line: 689, column: 7, scope: !4302)
!4302 = distinct !DILexicalBlock(scope: !4288, file: !396, line: 689, column: 7)
!4303 = !DILocation(line: 689, column: 22, scope: !4302)
!4304 = !DILocation(line: 689, column: 19, scope: !4302)
!4305 = !DILocation(line: 689, column: 7, scope: !4288)
!4306 = !DILocation(line: 690, column: 4, scope: !4302)
!4307 = !DILocation(line: 692, column: 11, scope: !4288)
!4308 = !DILocation(line: 692, column: 15, scope: !4288)
!4309 = !DILocation(line: 692, column: 21, scope: !4288)
!4310 = !DILocation(line: 692, column: 3, scope: !4288)
!4311 = !DILocation(line: 693, column: 11, scope: !4288)
!4312 = !DILocation(line: 693, column: 8, scope: !4288)
!4313 = !DILocation(line: 694, column: 9, scope: !4288)
!4314 = !DILocation(line: 694, column: 6, scope: !4288)
!4315 = !DILocation(line: 683, column: 2, scope: !4316)
!4316 = !DILexicalBlockFile(scope: !519, file: !396, discriminator: 2)
!4317 = !DILocation(line: 696, column: 3, scope: !519)
!4318 = !DILocation(line: 696, column: 6, scope: !519)
!4319 = !DILocation(line: 697, column: 13, scope: !519)
!4320 = !DILocation(line: 699, column: 9, scope: !519)
!4321 = !DILocation(line: 699, column: 2, scope: !519)
!4322 = !DILocation(line: 700, column: 1, scope: !519)
!4323 = !DILocalVariable(name: "cp", arg: 1, scope: !479, file: !396, line: 130, type: !482)
!4324 = !DILocation(line: 130, column: 29, scope: !479)
!4325 = !DILocalVariable(name: "i", scope: !479, file: !396, line: 131, type: !4326)
!4326 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint", file: !22, line: 152, baseType: !73)
!4327 = !DILocation(line: 131, column: 7, scope: !479)
!4328 = !DILocation(line: 133, column: 7, scope: !479)
!4329 = !DILocation(line: 133, column: 6, scope: !479)
!4330 = !DILocation(line: 133, column: 4, scope: !479)
!4331 = !DILocation(line: 134, column: 7, scope: !4332)
!4332 = distinct !DILexicalBlock(scope: !479, file: !396, line: 134, column: 6)
!4333 = !DILocation(line: 134, column: 9, scope: !4332)
!4334 = !DILocation(line: 134, column: 23, scope: !4332)
!4335 = !DILocation(line: 134, column: 6, scope: !479)
!4336 = !DILocation(line: 135, column: 10, scope: !4332)
!4337 = !DILocation(line: 135, column: 3, scope: !4332)
!4338 = !DILocation(line: 136, column: 12, scope: !4339)
!4339 = distinct !DILexicalBlock(scope: !4332, file: !396, line: 136, column: 11)
!4340 = !DILocation(line: 136, column: 14, scope: !4339)
!4341 = !DILocation(line: 136, column: 28, scope: !4339)
!4342 = !DILocation(line: 136, column: 11, scope: !4332)
!4343 = !DILocalVariable(name: "bitlen", scope: !4344, file: !396, line: 137, type: !4326)
!4344 = distinct !DILexicalBlock(scope: !4339, file: !396, line: 136, column: 43)
!4345 = !DILocation(line: 137, column: 8, scope: !4344)
!4346 = !DILocation(line: 139, column: 7, scope: !4347)
!4347 = distinct !DILexicalBlock(scope: !4344, file: !396, line: 139, column: 7)
!4348 = !DILocation(line: 139, column: 9, scope: !4347)
!4349 = !DILocation(line: 139, column: 7, scope: !4344)
!4350 = !DILocation(line: 140, column: 4, scope: !4347)
!4351 = !DILocation(line: 142, column: 14, scope: !4344)
!4352 = !DILocation(line: 142, column: 17, scope: !4344)
!4353 = !DILocation(line: 142, column: 12, scope: !4344)
!4354 = !DILocation(line: 142, column: 10, scope: !4344)
!4355 = !DILocation(line: 143, column: 7, scope: !4356)
!4356 = distinct !DILexicalBlock(scope: !4344, file: !396, line: 143, column: 7)
!4357 = !DILocation(line: 143, column: 14, scope: !4356)
!4358 = !DILocation(line: 143, column: 7, scope: !4344)
!4359 = !DILocation(line: 144, column: 11, scope: !4356)
!4360 = !DILocation(line: 144, column: 4, scope: !4356)
!4361 = !DILocation(line: 146, column: 13, scope: !4344)
!4362 = !DILocation(line: 146, column: 20, scope: !4344)
!4363 = !DILocation(line: 146, column: 25, scope: !4344)
!4364 = !DILocation(line: 146, column: 30, scope: !4344)
!4365 = !DILocation(line: 146, column: 3, scope: !4344)
!4366 = !DILocation(line: 148, column: 3, scope: !4339)
!4367 = !DILocation(line: 149, column: 1, scope: !479)
!4368 = !DILocalVariable(name: "dname", arg: 1, scope: !484, file: !396, line: 151, type: !20)
!4369 = !DILocation(line: 151, column: 34, scope: !484)
!4370 = !DILocalVariable(name: "end", arg: 2, scope: !484, file: !396, line: 151, type: !20)
!4371 = !DILocation(line: 151, column: 49, scope: !484)
!4372 = !DILocalVariable(name: "l", scope: !484, file: !396, line: 152, type: !33)
!4373 = !DILocation(line: 152, column: 6, scope: !484)
!4374 = !DILocation(line: 154, column: 6, scope: !4375)
!4375 = distinct !DILexicalBlock(scope: !484, file: !396, line: 154, column: 6)
!4376 = !DILocation(line: 154, column: 15, scope: !4375)
!4377 = !DILocation(line: 154, column: 12, scope: !4375)
!4378 = !DILocation(line: 154, column: 6, scope: !484)
!4379 = !DILocation(line: 155, column: 3, scope: !4375)
!4380 = !DILocation(line: 157, column: 2, scope: !484)
!4381 = !DILocation(line: 157, column: 9, scope: !4382)
!4382 = !DILexicalBlockFile(scope: !484, file: !396, discriminator: 1)
!4383 = !DILocation(line: 157, column: 8, scope: !4382)
!4384 = !DILocation(line: 157, column: 2, scope: !4382)
!4385 = !DILocation(line: 158, column: 9, scope: !4386)
!4386 = distinct !DILexicalBlock(scope: !4387, file: !396, line: 158, column: 7)
!4387 = distinct !DILexicalBlock(scope: !484, file: !396, line: 157, column: 16)
!4388 = !DILocation(line: 158, column: 8, scope: !4386)
!4389 = !DILocation(line: 158, column: 15, scope: !4386)
!4390 = !DILocation(line: 158, column: 29, scope: !4386)
!4391 = !DILocation(line: 158, column: 7, scope: !4387)
!4392 = !DILocation(line: 159, column: 10, scope: !4393)
!4393 = distinct !DILexicalBlock(scope: !4386, file: !396, line: 158, column: 44)
!4394 = !DILocation(line: 160, column: 11, scope: !4393)
!4395 = !DILocation(line: 160, column: 4, scope: !4393)
!4396 = !DILocation(line: 162, column: 7, scope: !4397)
!4397 = distinct !DILexicalBlock(scope: !4387, file: !396, line: 162, column: 7)
!4398 = !DILocation(line: 162, column: 13, scope: !4397)
!4399 = !DILocation(line: 162, column: 19, scope: !4397)
!4400 = !DILocation(line: 162, column: 17, scope: !4397)
!4401 = !DILocation(line: 162, column: 7, scope: !4387)
!4402 = !DILocation(line: 163, column: 4, scope: !4397)
!4403 = !DILocation(line: 165, column: 16, scope: !4387)
!4404 = !DILocation(line: 165, column: 7, scope: !4387)
!4405 = !DILocation(line: 165, column: 5, scope: !4387)
!4406 = !DILocation(line: 166, column: 7, scope: !4407)
!4407 = distinct !DILexicalBlock(scope: !4387, file: !396, line: 166, column: 7)
!4408 = !DILocation(line: 166, column: 9, scope: !4407)
!4409 = !DILocation(line: 166, column: 7, scope: !4387)
!4410 = !DILocation(line: 167, column: 4, scope: !4407)
!4411 = !DILocation(line: 168, column: 12, scope: !4387)
!4412 = !DILocation(line: 168, column: 14, scope: !4387)
!4413 = !DILocation(line: 168, column: 9, scope: !4387)
!4414 = !DILocation(line: 170, column: 7, scope: !4415)
!4415 = distinct !DILexicalBlock(scope: !4387, file: !396, line: 170, column: 7)
!4416 = !DILocation(line: 170, column: 16, scope: !4415)
!4417 = !DILocation(line: 170, column: 13, scope: !4415)
!4418 = !DILocation(line: 170, column: 7, scope: !4387)
!4419 = !DILocation(line: 171, column: 4, scope: !4415)
!4420 = !DILocation(line: 157, column: 2, scope: !4421)
!4421 = !DILexicalBlockFile(scope: !484, file: !396, discriminator: 2)
!4422 = !DILocation(line: 173, column: 7, scope: !484)
!4423 = !DILocation(line: 174, column: 9, scope: !484)
!4424 = !DILocation(line: 174, column: 2, scope: !484)
!4425 = !DILocation(line: 175, column: 1, scope: !484)
!4426 = !DILocalVariable(name: "msg", arg: 1, scope: !487, file: !396, line: 177, type: !20)
!4427 = !DILocation(line: 177, column: 29, scope: !487)
!4428 = !DILocalVariable(name: "dname_mesg", arg: 2, scope: !487, file: !396, line: 177, type: !20)
!4429 = !DILocation(line: 177, column: 42, scope: !487)
!4430 = !DILocalVariable(name: "dname", arg: 3, scope: !487, file: !396, line: 177, type: !20)
!4431 = !DILocation(line: 177, column: 62, scope: !487)
!4432 = !DILocation(line: 183, column: 31, scope: !487)
!4433 = !DILocation(line: 183, column: 43, scope: !487)
!4434 = !DILocation(line: 183, column: 15, scope: !487)
!4435 = !DILocation(line: 183, column: 13, scope: !487)
!4436 = !DILocation(line: 184, column: 2, scope: !487)
!4437 = !DILocation(line: 184, column: 10, scope: !4438)
!4438 = !DILexicalBlockFile(scope: !487, file: !396, discriminator: 1)
!4439 = !DILocation(line: 184, column: 9, scope: !4438)
!4440 = !DILocation(line: 184, column: 21, scope: !4438)
!4441 = !DILocation(line: 184, column: 29, scope: !4438)
!4442 = !DILocation(line: 184, column: 34, scope: !4443)
!4443 = !DILexicalBlockFile(scope: !487, file: !396, discriminator: 2)
!4444 = !DILocation(line: 184, column: 33, scope: !4443)
!4445 = !DILocation(line: 184, column: 44, scope: !4443)
!4446 = !DILocation(line: 184, column: 43, scope: !4443)
!4447 = !DILocation(line: 184, column: 40, scope: !4443)
!4448 = !DILocation(line: 184, column: 2, scope: !4449)
!4449 = !DILexicalBlockFile(scope: !487, file: !396, discriminator: 3)
!4450 = !DILocalVariable(name: "len", scope: !4451, file: !396, line: 185, type: !33)
!4451 = distinct !DILexicalBlock(scope: !487, file: !396, line: 184, column: 57)
!4452 = !DILocation(line: 185, column: 7, scope: !4451)
!4453 = !DILocation(line: 187, column: 19, scope: !4451)
!4454 = !DILocation(line: 187, column: 10, scope: !4451)
!4455 = !DILocation(line: 187, column: 8, scope: !4451)
!4456 = !DILocation(line: 188, column: 7, scope: !4457)
!4457 = distinct !DILexicalBlock(scope: !4451, file: !396, line: 188, column: 7)
!4458 = !DILocation(line: 188, column: 23, scope: !4457)
!4459 = !DILocation(line: 188, column: 14, scope: !4457)
!4460 = !DILocation(line: 188, column: 11, scope: !4457)
!4461 = !DILocation(line: 188, column: 7, scope: !4451)
!4462 = !DILocation(line: 189, column: 4, scope: !4457)
!4463 = !DILocation(line: 191, column: 8, scope: !4464)
!4464 = distinct !DILexicalBlock(scope: !4451, file: !396, line: 191, column: 7)
!4465 = !DILocation(line: 191, column: 7, scope: !4464)
!4466 = !DILocation(line: 191, column: 14, scope: !4464)
!4467 = !DILocation(line: 191, column: 7, scope: !4451)
!4468 = !DILocation(line: 192, column: 16, scope: !4469)
!4469 = distinct !DILexicalBlock(scope: !4470, file: !396, line: 192, column: 8)
!4470 = distinct !DILexicalBlock(scope: !4464, file: !396, line: 191, column: 37)
!4471 = !DILocation(line: 192, column: 27, scope: !4469)
!4472 = !DILocation(line: 192, column: 32, scope: !4469)
!4473 = !DILocation(line: 192, column: 38, scope: !4469)
!4474 = !DILocation(line: 192, column: 52, scope: !4469)
!4475 = !DILocation(line: 192, column: 44, scope: !4469)
!4476 = !DILocation(line: 192, column: 8, scope: !4469)
!4477 = !DILocation(line: 192, column: 8, scope: !4470)
!4478 = !DILocation(line: 193, column: 5, scope: !4469)
!4479 = !DILocation(line: 194, column: 3, scope: !4470)
!4480 = !DILocation(line: 194, column: 41, scope: !4481)
!4481 = !DILexicalBlockFile(scope: !4482, file: !396, discriminator: 1)
!4482 = distinct !DILexicalBlock(scope: !4464, file: !396, line: 194, column: 14)
!4483 = !DILocation(line: 194, column: 52, scope: !4481)
!4484 = !DILocation(line: 195, column: 55, scope: !4482)
!4485 = !DILocation(line: 195, column: 61, scope: !4482)
!4486 = !DILocation(line: 195, column: 74, scope: !4482)
!4487 = !DILocation(line: 195, column: 66, scope: !4482)
!4488 = !DILocation(line: 194, column: 14, scope: !4481)
!4489 = !DILocation(line: 196, column: 5, scope: !4482)
!4490 = !DILocation(line: 198, column: 12, scope: !4451)
!4491 = !DILocation(line: 198, column: 16, scope: !4451)
!4492 = !DILocation(line: 198, column: 9, scope: !4451)
!4493 = !DILocation(line: 199, column: 17, scope: !4451)
!4494 = !DILocation(line: 199, column: 21, scope: !4451)
!4495 = !DILocation(line: 199, column: 14, scope: !4451)
!4496 = !DILocation(line: 200, column: 32, scope: !4451)
!4497 = !DILocation(line: 200, column: 44, scope: !4451)
!4498 = !DILocation(line: 200, column: 16, scope: !4451)
!4499 = !DILocation(line: 200, column: 14, scope: !4451)
!4500 = !DILocation(line: 184, column: 2, scope: !4501)
!4501 = !DILexicalBlockFile(scope: !487, file: !396, discriminator: 4)
!4502 = !DILocation(line: 203, column: 7, scope: !4503)
!4503 = distinct !DILexicalBlock(scope: !487, file: !396, line: 203, column: 6)
!4504 = !DILocation(line: 203, column: 6, scope: !4503)
!4505 = !DILocation(line: 203, column: 17, scope: !4503)
!4506 = !DILocation(line: 203, column: 16, scope: !4503)
!4507 = !DILocation(line: 203, column: 13, scope: !4503)
!4508 = !DILocation(line: 203, column: 6, scope: !487)
!4509 = !DILocation(line: 204, column: 3, scope: !4503)
!4510 = !DILocation(line: 206, column: 3, scope: !4503)
!4511 = !DILocation(line: 207, column: 1, scope: !487)
!4512 = !DILocalVariable(name: "label", arg: 1, scope: !522, file: !396, line: 702, type: !20)
!4513 = !DILocation(line: 702, column: 40, scope: !522)
!4514 = !DILocalVariable(name: "msg", arg: 2, scope: !522, file: !396, line: 702, type: !20)
!4515 = !DILocation(line: 702, column: 55, scope: !522)
!4516 = !DILocalVariable(name: "us", scope: !522, file: !396, line: 703, type: !48)
!4517 = !DILocation(line: 703, column: 11, scope: !522)
!4518 = !DILocation(line: 705, column: 6, scope: !4519)
!4519 = distinct !DILexicalBlock(scope: !522, file: !396, line: 705, column: 6)
!4520 = !DILocation(line: 705, column: 10, scope: !4519)
!4521 = !DILocation(line: 705, column: 15, scope: !4522)
!4522 = !DILexicalBlockFile(scope: !4519, file: !396, discriminator: 1)
!4523 = !DILocation(line: 705, column: 14, scope: !4522)
!4524 = !DILocation(line: 705, column: 21, scope: !4522)
!4525 = !DILocation(line: 705, column: 35, scope: !4522)
!4526 = !DILocation(line: 705, column: 6, scope: !4522)
!4527 = !DILocation(line: 706, column: 3, scope: !4528)
!4528 = distinct !DILexicalBlock(scope: !4529, file: !396, line: 706, column: 3)
!4529 = distinct !DILexicalBlock(scope: !4519, file: !396, line: 705, column: 50)
!4530 = !DILocation(line: 707, column: 8, scope: !4529)
!4531 = !DILocation(line: 707, column: 11, scope: !4529)
!4532 = !DILocation(line: 707, column: 6, scope: !4529)
!4533 = !DILocation(line: 708, column: 11, scope: !4529)
!4534 = !DILocation(line: 708, column: 17, scope: !4529)
!4535 = !DILocation(line: 708, column: 15, scope: !4529)
!4536 = !DILocation(line: 708, column: 9, scope: !4529)
!4537 = !DILocation(line: 709, column: 2, scope: !4529)
!4538 = !DILocation(line: 710, column: 9, scope: !522)
!4539 = !DILocation(line: 710, column: 2, scope: !522)
!4540 = !DILocalVariable(name: "rrls", arg: 1, scope: !490, file: !396, line: 209, type: !493)
!4541 = !DILocation(line: 209, column: 36, scope: !490)
!4542 = !DILocalVariable(name: "msg", arg: 2, scope: !490, file: !396, line: 209, type: !20)
!4543 = !DILocation(line: 209, column: 50, scope: !490)
!4544 = !DILocalVariable(name: "msg_tail", arg: 3, scope: !490, file: !396, line: 209, type: !20)
!4545 = !DILocation(line: 209, column: 63, scope: !490)
!4546 = !DILocalVariable(name: "dnames", arg: 4, scope: !490, file: !396, line: 210, type: !65)
!4547 = !DILocation(line: 210, column: 17, scope: !490)
!4548 = !DILocalVariable(name: "dnames_len", arg: 5, scope: !490, file: !396, line: 210, type: !33)
!4549 = !DILocation(line: 210, column: 29, scope: !490)
!4550 = !DILocalVariable(name: "wp", arg: 6, scope: !490, file: !396, line: 210, type: !501)
!4551 = !DILocation(line: 210, column: 50, scope: !490)
!4552 = !DILocalVariable(name: "cnt", arg: 7, scope: !490, file: !396, line: 211, type: !65)
!4553 = !DILocation(line: 211, column: 17, scope: !490)
!4554 = !DILocalVariable(name: "fn", scope: !490, file: !396, line: 212, type: !19)
!4555 = !DILocation(line: 212, column: 8, scope: !490)
!4556 = !DILocalVariable(name: "wp_start", scope: !490, file: !396, line: 213, type: !20)
!4557 = !DILocation(line: 213, column: 10, scope: !490)
!4558 = !DILocalVariable(name: "wp_period", scope: !490, file: !396, line: 213, type: !20)
!4559 = !DILocation(line: 213, column: 21, scope: !490)
!4560 = !DILocalVariable(name: "us", scope: !490, file: !396, line: 214, type: !48)
!4561 = !DILocation(line: 214, column: 11, scope: !490)
!4562 = !DILocalVariable(name: "ul", scope: !490, file: !396, line: 215, type: !72)
!4563 = !DILocation(line: 215, column: 11, scope: !490)
!4564 = !DILocalVariable(name: "rrsp", scope: !490, file: !396, line: 216, type: !416)
!4565 = !DILocation(line: 216, column: 9, scope: !490)
!4566 = !DILocalVariable(name: "rrp", scope: !490, file: !396, line: 217, type: !448)
!4567 = !DILocation(line: 217, column: 6, scope: !490)
!4568 = !DILocalVariable(name: "i", scope: !490, file: !396, line: 218, type: !33)
!4569 = !DILocation(line: 218, column: 6, scope: !490)
!4570 = !DILocalVariable(name: "ret", scope: !490, file: !396, line: 218, type: !33)
!4571 = !DILocation(line: 218, column: 9, scope: !490)
!4572 = !DILocation(line: 220, column: 8, scope: !4573)
!4573 = distinct !DILexicalBlock(scope: !490, file: !396, line: 220, column: 6)
!4574 = !DILocation(line: 220, column: 14, scope: !4573)
!4575 = !DILocation(line: 220, column: 6, scope: !490)
!4576 = !DILocation(line: 221, column: 36, scope: !4573)
!4577 = !DILocation(line: 221, column: 3, scope: !4573)
!4578 = !DILocation(line: 223, column: 7, scope: !4579)
!4579 = distinct !DILexicalBlock(scope: !490, file: !396, line: 223, column: 6)
!4580 = !DILocation(line: 223, column: 6, scope: !490)
!4581 = !DILocation(line: 224, column: 3, scope: !4579)
!4582 = !DILocation(line: 226, column: 14, scope: !490)
!4583 = !DILocation(line: 226, column: 13, scope: !490)
!4584 = !DILocation(line: 226, column: 11, scope: !490)
!4585 = !DILocation(line: 228, column: 14, scope: !4586)
!4586 = distinct !DILexicalBlock(scope: !490, file: !396, line: 228, column: 2)
!4587 = !DILocation(line: 228, column: 20, scope: !4586)
!4588 = !DILocation(line: 228, column: 12, scope: !4586)
!4589 = !DILocation(line: 228, column: 7, scope: !4586)
!4590 = !DILocation(line: 228, column: 26, scope: !4591)
!4591 = !DILexicalBlockFile(scope: !4592, file: !396, discriminator: 1)
!4592 = distinct !DILexicalBlock(scope: !4586, file: !396, line: 228, column: 2)
!4593 = !DILocation(line: 228, column: 32, scope: !4591)
!4594 = !DILocation(line: 228, column: 2, scope: !4591)
!4595 = !DILocation(line: 229, column: 9, scope: !4596)
!4596 = distinct !DILexicalBlock(scope: !4597, file: !396, line: 229, column: 7)
!4597 = distinct !DILexicalBlock(scope: !4592, file: !396, line: 228, column: 62)
!4598 = !DILocation(line: 229, column: 15, scope: !4596)
!4599 = !DILocation(line: 229, column: 7, scope: !4597)
!4600 = !DILocation(line: 230, column: 45, scope: !4596)
!4601 = !DILocation(line: 230, column: 4, scope: !4596)
!4602 = !DILocation(line: 232, column: 20, scope: !4597)
!4603 = !DILocation(line: 232, column: 26, scope: !4597)
!4604 = !DILocation(line: 232, column: 10, scope: !4597)
!4605 = !DILocation(line: 232, column: 8, scope: !4597)
!4606 = !DILocation(line: 233, column: 10, scope: !4607)
!4607 = distinct !DILexicalBlock(scope: !4597, file: !396, line: 233, column: 3)
!4608 = !DILocation(line: 233, column: 8, scope: !4607)
!4609 = !DILocation(line: 233, column: 15, scope: !4610)
!4610 = !DILexicalBlockFile(scope: !4611, file: !396, discriminator: 1)
!4611 = distinct !DILexicalBlock(scope: !4607, file: !396, line: 233, column: 3)
!4612 = !DILocation(line: 233, column: 19, scope: !4610)
!4613 = !DILocation(line: 233, column: 25, scope: !4610)
!4614 = !DILocation(line: 233, column: 30, scope: !4610)
!4615 = !DILocation(line: 233, column: 33, scope: !4610)
!4616 = !DILocation(line: 233, column: 17, scope: !4610)
!4617 = !DILocation(line: 233, column: 3, scope: !4610)
!4618 = !DILocation(line: 234, column: 17, scope: !4619)
!4619 = distinct !DILexicalBlock(scope: !4611, file: !396, line: 233, column: 48)
!4620 = !DILocation(line: 234, column: 16, scope: !4619)
!4621 = !DILocation(line: 234, column: 14, scope: !4619)
!4622 = !DILocation(line: 237, column: 23, scope: !4619)
!4623 = !DILocation(line: 237, column: 28, scope: !4619)
!4624 = !DILocation(line: 237, column: 38, scope: !4619)
!4625 = !DILocation(line: 238, column: 5, scope: !4619)
!4626 = !DILocation(line: 238, column: 17, scope: !4619)
!4627 = !DILocation(line: 238, column: 38, scope: !4619)
!4628 = !DILocation(line: 238, column: 37, scope: !4619)
!4629 = !DILocation(line: 237, column: 10, scope: !4619)
!4630 = !DILocation(line: 237, column: 8, scope: !4619)
!4631 = !DILocation(line: 239, column: 8, scope: !4632)
!4632 = distinct !DILexicalBlock(scope: !4619, file: !396, line: 239, column: 8)
!4633 = !DILocation(line: 239, column: 12, scope: !4632)
!4634 = !DILocation(line: 239, column: 8, scope: !4619)
!4635 = !DILocation(line: 240, column: 5, scope: !4636)
!4636 = distinct !DILexicalBlock(scope: !4632, file: !396, line: 239, column: 17)
!4637 = !DILocation(line: 241, column: 11, scope: !4636)
!4638 = !DILocation(line: 241, column: 6, scope: !4636)
!4639 = !DILocation(line: 241, column: 9, scope: !4636)
!4640 = !DILocation(line: 242, column: 12, scope: !4636)
!4641 = !DILocation(line: 242, column: 24, scope: !4636)
!4642 = !DILocation(line: 242, column: 22, scope: !4636)
!4643 = !DILocation(line: 242, column: 5, scope: !4636)
!4644 = !DILocation(line: 244, column: 11, scope: !4619)
!4645 = !DILocation(line: 244, column: 5, scope: !4619)
!4646 = !DILocation(line: 244, column: 8, scope: !4619)
!4647 = !DILocation(line: 247, column: 18, scope: !4619)
!4648 = !DILocation(line: 247, column: 24, scope: !4619)
!4649 = !DILocation(line: 247, column: 29, scope: !4619)
!4650 = !DILocation(line: 248, column: 11, scope: !4619)
!4651 = !DILocation(line: 247, column: 31, scope: !4619)
!4652 = !DILocation(line: 247, column: 10, scope: !4619)
!4653 = !DILocation(line: 247, column: 8, scope: !4619)
!4654 = !DILocation(line: 249, column: 9, scope: !4655)
!4655 = distinct !DILexicalBlock(scope: !4619, file: !396, line: 249, column: 8)
!4656 = !DILocation(line: 249, column: 8, scope: !4655)
!4657 = !DILocation(line: 249, column: 12, scope: !4655)
!4658 = !DILocation(line: 249, column: 36, scope: !4655)
!4659 = !DILocation(line: 250, column: 10, scope: !4655)
!4660 = !DILocation(line: 250, column: 15, scope: !4655)
!4661 = !DILocation(line: 250, column: 8, scope: !4655)
!4662 = !DILocation(line: 250, column: 24, scope: !4655)
!4663 = !DILocation(line: 250, column: 22, scope: !4655)
!4664 = !DILocation(line: 249, column: 8, scope: !4619)
!4665 = !DILocation(line: 251, column: 5, scope: !4666)
!4666 = distinct !DILexicalBlock(scope: !4655, file: !396, line: 250, column: 34)
!4667 = !DILocation(line: 252, column: 11, scope: !4666)
!4668 = !DILocation(line: 252, column: 6, scope: !4666)
!4669 = !DILocation(line: 252, column: 9, scope: !4666)
!4670 = !DILocation(line: 253, column: 12, scope: !4666)
!4671 = !DILocation(line: 253, column: 24, scope: !4666)
!4672 = !DILocation(line: 253, column: 22, scope: !4666)
!4673 = !DILocation(line: 253, column: 5, scope: !4666)
!4674 = !DILocation(line: 256, column: 4, scope: !4675)
!4675 = distinct !DILexicalBlock(scope: !4619, file: !396, line: 256, column: 4)
!4676 = !DILocation(line: 257, column: 4, scope: !4677)
!4677 = distinct !DILexicalBlock(scope: !4619, file: !396, line: 257, column: 4)
!4678 = !DILocation(line: 258, column: 9, scope: !4619)
!4679 = !DILocation(line: 258, column: 14, scope: !4619)
!4680 = !DILocation(line: 258, column: 7, scope: !4619)
!4681 = !DILocation(line: 259, column: 4, scope: !4682)
!4682 = distinct !DILexicalBlock(scope: !4619, file: !396, line: 259, column: 4)
!4683 = !DILocation(line: 262, column: 4, scope: !4684)
!4684 = distinct !DILexicalBlock(scope: !4619, file: !396, line: 262, column: 4)
!4685 = !DILocation(line: 263, column: 13, scope: !4619)
!4686 = !DILocation(line: 263, column: 12, scope: !4619)
!4687 = !DILocation(line: 263, column: 17, scope: !4619)
!4688 = !DILocation(line: 263, column: 33, scope: !4619)
!4689 = !DILocation(line: 263, column: 38, scope: !4619)
!4690 = !DILocation(line: 263, column: 4, scope: !4619)
!4691 = !DILocation(line: 264, column: 11, scope: !4619)
!4692 = !DILocation(line: 264, column: 16, scope: !4619)
!4693 = !DILocation(line: 264, column: 5, scope: !4619)
!4694 = !DILocation(line: 264, column: 8, scope: !4619)
!4695 = !DILocation(line: 267, column: 17, scope: !4619)
!4696 = !DILocation(line: 267, column: 16, scope: !4619)
!4697 = !DILocation(line: 267, column: 9, scope: !4619)
!4698 = !DILocation(line: 267, column: 22, scope: !4619)
!4699 = !DILocation(line: 267, column: 7, scope: !4619)
!4700 = !DILocation(line: 269, column: 18, scope: !4619)
!4701 = !DILocation(line: 269, column: 11, scope: !4619)
!4702 = !DILocation(line: 269, column: 5, scope: !4619)
!4703 = !DILocation(line: 269, column: 9, scope: !4619)
!4704 = !DILocation(line: 271, column: 10, scope: !4705)
!4705 = distinct !DILexicalBlock(scope: !4619, file: !396, line: 271, column: 8)
!4706 = !DILocation(line: 271, column: 16, scope: !4705)
!4707 = !DILocation(line: 271, column: 8, scope: !4619)
!4708 = !DILocation(line: 273, column: 6, scope: !4705)
!4709 = !DILocation(line: 273, column: 18, scope: !4705)
!4710 = !DILocation(line: 273, column: 10, scope: !4705)
!4711 = !DILocation(line: 272, column: 5, scope: !4705)
!4712 = !DILocation(line: 274, column: 3, scope: !4619)
!4713 = !DILocation(line: 233, column: 44, scope: !4714)
!4714 = !DILexicalBlockFile(scope: !4611, file: !396, discriminator: 2)
!4715 = !DILocation(line: 233, column: 3, scope: !4714)
!4716 = !DILocation(line: 275, column: 2, scope: !4597)
!4717 = !DILocation(line: 228, column: 50, scope: !4718)
!4718 = !DILexicalBlockFile(scope: !4592, file: !396, discriminator: 2)
!4719 = !DILocation(line: 228, column: 56, scope: !4718)
!4720 = !DILocation(line: 228, column: 48, scope: !4718)
!4721 = !DILocation(line: 228, column: 2, scope: !4718)
!4722 = !DILocation(line: 277, column: 8, scope: !4723)
!4723 = distinct !DILexicalBlock(scope: !490, file: !396, line: 277, column: 6)
!4724 = !DILocation(line: 277, column: 14, scope: !4723)
!4725 = !DILocation(line: 277, column: 6, scope: !490)
!4726 = !DILocation(line: 278, column: 39, scope: !4723)
!4727 = !DILocation(line: 278, column: 50, scope: !4723)
!4728 = !DILocation(line: 278, column: 49, scope: !4723)
!4729 = !DILocation(line: 278, column: 55, scope: !4723)
!4730 = !DILocation(line: 278, column: 53, scope: !4723)
!4731 = !DILocation(line: 278, column: 43, scope: !4723)
!4732 = !DILocation(line: 278, column: 3, scope: !4723)
!4733 = !DILocation(line: 280, column: 11, scope: !490)
!4734 = !DILocation(line: 280, column: 10, scope: !490)
!4735 = !DILocation(line: 280, column: 16, scope: !490)
!4736 = !DILocation(line: 280, column: 14, scope: !490)
!4737 = !DILocation(line: 280, column: 9, scope: !490)
!4738 = !DILocation(line: 280, column: 2, scope: !490)
!4739 = !DILocation(line: 281, column: 1, scope: !490)
!4740 = !DILocalVariable(name: "msg", arg: 1, scope: !523, file: !396, line: 713, type: !20)
!4741 = !DILocation(line: 713, column: 33, scope: !523)
!4742 = !DILocalVariable(name: "msg_tail", arg: 2, scope: !523, file: !396, line: 713, type: !20)
!4743 = !DILocation(line: 713, column: 46, scope: !523)
!4744 = !DILocalVariable(name: "dnames", arg: 3, scope: !523, file: !396, line: 713, type: !65)
!4745 = !DILocation(line: 713, column: 66, scope: !523)
!4746 = !DILocalVariable(name: "dnames_len", arg: 4, scope: !523, file: !396, line: 714, type: !33)
!4747 = !DILocation(line: 714, column: 13, scope: !523)
!4748 = !DILocalVariable(name: "dname", arg: 5, scope: !523, file: !396, line: 714, type: !20)
!4749 = !DILocation(line: 714, column: 33, scope: !523)
!4750 = !DILocalVariable(name: "wp", arg: 6, scope: !523, file: !396, line: 714, type: !20)
!4751 = !DILocation(line: 714, column: 48, scope: !523)
!4752 = !DILocalVariable(name: "fn", scope: !523, file: !396, line: 715, type: !19)
!4753 = !DILocation(line: 715, column: 8, scope: !523)
!4754 = !DILocalVariable(name: "bestmatch_rpd", scope: !523, file: !396, line: 716, type: !20)
!4755 = !DILocation(line: 716, column: 10, scope: !523)
!4756 = !DILocalVariable(name: "bestmatch_rpm", scope: !523, file: !396, line: 717, type: !20)
!4757 = !DILocation(line: 717, column: 10, scope: !523)
!4758 = !DILocalVariable(name: "bestmatch_len", scope: !523, file: !396, line: 718, type: !33)
!4759 = !DILocation(line: 718, column: 6, scope: !523)
!4760 = !DILocalVariable(name: "rpd", scope: !523, file: !396, line: 719, type: !20)
!4761 = !DILocation(line: 719, column: 10, scope: !523)
!4762 = !DILocalVariable(name: "rpm", scope: !523, file: !396, line: 719, type: !20)
!4763 = !DILocation(line: 719, column: 16, scope: !523)
!4764 = !DILocalVariable(name: "written_len", scope: !523, file: !396, line: 720, type: !33)
!4765 = !DILocation(line: 720, column: 6, scope: !523)
!4766 = !DILocation(line: 722, column: 8, scope: !4767)
!4767 = distinct !DILexicalBlock(scope: !523, file: !396, line: 722, column: 6)
!4768 = !DILocation(line: 722, column: 14, scope: !4767)
!4769 = !DILocation(line: 722, column: 6, scope: !523)
!4770 = !DILocation(line: 723, column: 35, scope: !4767)
!4771 = !DILocation(line: 723, column: 3, scope: !4767)
!4772 = !DILocation(line: 731, column: 16, scope: !523)
!4773 = !DILocation(line: 732, column: 13, scope: !4774)
!4774 = distinct !DILexicalBlock(scope: !523, file: !396, line: 732, column: 2)
!4775 = !DILocation(line: 732, column: 11, scope: !4774)
!4776 = !DILocation(line: 732, column: 7, scope: !4774)
!4777 = !DILocation(line: 732, column: 21, scope: !4778)
!4778 = !DILexicalBlockFile(scope: !4779, file: !396, discriminator: 1)
!4779 = distinct !DILexicalBlock(scope: !4774, file: !396, line: 732, column: 2)
!4780 = !DILocation(line: 732, column: 20, scope: !4778)
!4781 = !DILocation(line: 732, column: 25, scope: !4778)
!4782 = !DILocation(line: 732, column: 29, scope: !4783)
!4783 = !DILexicalBlockFile(scope: !4779, file: !396, discriminator: 2)
!4784 = !DILocation(line: 732, column: 28, scope: !4783)
!4785 = !DILocation(line: 732, column: 2, scope: !4786)
!4786 = !DILexicalBlockFile(scope: !4774, file: !396, discriminator: 3)
!4787 = !DILocalVariable(name: "i", scope: !4788, file: !396, line: 733, type: !33)
!4788 = distinct !DILexicalBlock(scope: !4779, file: !396, line: 732, column: 70)
!4789 = !DILocation(line: 733, column: 7, scope: !4788)
!4790 = !DILocation(line: 739, column: 10, scope: !4791)
!4791 = distinct !DILexicalBlock(scope: !4788, file: !396, line: 739, column: 3)
!4792 = !DILocation(line: 739, column: 8, scope: !4791)
!4793 = !DILocation(line: 739, column: 22, scope: !4794)
!4794 = !DILexicalBlockFile(scope: !4795, file: !396, discriminator: 1)
!4795 = distinct !DILexicalBlock(scope: !4791, file: !396, line: 739, column: 3)
!4796 = !DILocation(line: 739, column: 15, scope: !4794)
!4797 = !DILocation(line: 739, column: 25, scope: !4794)
!4798 = !DILocation(line: 739, column: 30, scope: !4794)
!4799 = !DILocation(line: 739, column: 33, scope: !4800)
!4800 = !DILexicalBlockFile(scope: !4795, file: !396, discriminator: 2)
!4801 = !DILocation(line: 739, column: 37, scope: !4800)
!4802 = !DILocation(line: 739, column: 35, scope: !4800)
!4803 = !DILocation(line: 739, column: 3, scope: !4804)
!4804 = !DILexicalBlockFile(scope: !4791, file: !396, discriminator: 3)
!4805 = !DILocation(line: 745, column: 31, scope: !4806)
!4806 = distinct !DILexicalBlock(scope: !4807, file: !396, line: 745, column: 4)
!4807 = distinct !DILexicalBlock(scope: !4795, file: !396, line: 739, column: 54)
!4808 = !DILocation(line: 745, column: 44, scope: !4806)
!4809 = !DILocation(line: 745, column: 37, scope: !4806)
!4810 = !DILocation(line: 745, column: 35, scope: !4806)
!4811 = !DILocation(line: 745, column: 48, scope: !4806)
!4812 = !DILocation(line: 745, column: 15, scope: !4806)
!4813 = !DILocation(line: 745, column: 13, scope: !4806)
!4814 = !DILocation(line: 745, column: 9, scope: !4806)
!4815 = !DILocation(line: 745, column: 55, scope: !4816)
!4816 = !DILexicalBlockFile(scope: !4817, file: !396, discriminator: 1)
!4817 = distinct !DILexicalBlock(scope: !4806, file: !396, line: 745, column: 4)
!4818 = !DILocation(line: 745, column: 54, scope: !4816)
!4819 = !DILocation(line: 745, column: 4, scope: !4816)
!4820 = !DILocalVariable(name: "cpd", scope: !4821, file: !396, line: 747, type: !20)
!4821 = distinct !DILexicalBlock(scope: !4817, file: !396, line: 746, column: 58)
!4822 = !DILocation(line: 747, column: 13, scope: !4821)
!4823 = !DILocalVariable(name: "cpm", scope: !4821, file: !396, line: 747, type: !20)
!4824 = !DILocation(line: 747, column: 19, scope: !4821)
!4825 = !DILocalVariable(name: "match_len", scope: !4821, file: !396, line: 748, type: !33)
!4826 = !DILocation(line: 748, column: 9, scope: !4821)
!4827 = !DILocation(line: 750, column: 9, scope: !4828)
!4828 = distinct !DILexicalBlock(scope: !4821, file: !396, line: 750, column: 9)
!4829 = !DILocation(line: 750, column: 15, scope: !4828)
!4830 = !DILocation(line: 750, column: 13, scope: !4828)
!4831 = !DILocation(line: 750, column: 19, scope: !4828)
!4832 = !DILocation(line: 750, column: 22, scope: !4833)
!4833 = !DILexicalBlockFile(scope: !4828, file: !396, discriminator: 1)
!4834 = !DILocation(line: 750, column: 33, scope: !4833)
!4835 = !DILocation(line: 750, column: 31, scope: !4833)
!4836 = !DILocation(line: 750, column: 9, scope: !4833)
!4837 = !DILocation(line: 751, column: 6, scope: !4828)
!4838 = !DILocation(line: 754, column: 11, scope: !4821)
!4839 = !DILocation(line: 754, column: 9, scope: !4821)
!4840 = !DILocation(line: 755, column: 11, scope: !4821)
!4841 = !DILocation(line: 755, column: 9, scope: !4821)
!4842 = !DILocation(line: 757, column: 15, scope: !4821)
!4843 = !DILocation(line: 758, column: 5, scope: !4821)
!4844 = !DILocation(line: 758, column: 13, scope: !4845)
!4845 = !DILexicalBlockFile(scope: !4821, file: !396, discriminator: 1)
!4846 = !DILocation(line: 758, column: 12, scope: !4845)
!4847 = !DILocation(line: 758, column: 17, scope: !4845)
!4848 = !DILocation(line: 758, column: 21, scope: !4849)
!4849 = !DILexicalBlockFile(scope: !4821, file: !396, discriminator: 2)
!4850 = !DILocation(line: 758, column: 20, scope: !4849)
!4851 = !DILocation(line: 758, column: 29, scope: !4849)
!4852 = !DILocation(line: 758, column: 28, scope: !4849)
!4853 = !DILocation(line: 758, column: 25, scope: !4849)
!4854 = !DILocation(line: 758, column: 5, scope: !4855)
!4855 = !DILexicalBlockFile(scope: !4821, file: !396, discriminator: 3)
!4856 = !DILocalVariable(name: "mlen", scope: !4857, file: !396, line: 759, type: !33)
!4857 = distinct !DILexicalBlock(scope: !4821, file: !396, line: 758, column: 34)
!4858 = !DILocation(line: 759, column: 10, scope: !4857)
!4859 = !DILocation(line: 761, column: 22, scope: !4857)
!4860 = !DILocation(line: 761, column: 13, scope: !4857)
!4861 = !DILocation(line: 761, column: 11, scope: !4857)
!4862 = !DILocation(line: 762, column: 10, scope: !4863)
!4863 = distinct !DILexicalBlock(scope: !4857, file: !396, line: 762, column: 10)
!4864 = !DILocation(line: 762, column: 27, scope: !4863)
!4865 = !DILocation(line: 762, column: 18, scope: !4863)
!4866 = !DILocation(line: 762, column: 15, scope: !4863)
!4867 = !DILocation(line: 762, column: 10, scope: !4857)
!4868 = !DILocation(line: 763, column: 7, scope: !4863)
!4869 = !DILocation(line: 766, column: 11, scope: !4870)
!4870 = distinct !DILexicalBlock(scope: !4857, file: !396, line: 766, column: 10)
!4871 = !DILocation(line: 766, column: 10, scope: !4870)
!4872 = !DILocation(line: 766, column: 15, scope: !4870)
!4873 = !DILocation(line: 766, column: 37, scope: !4870)
!4874 = !DILocation(line: 767, column: 18, scope: !4870)
!4875 = !DILocation(line: 767, column: 21, scope: !4870)
!4876 = !DILocation(line: 767, column: 25, scope: !4870)
!4877 = !DILocation(line: 767, column: 28, scope: !4870)
!4878 = !DILocation(line: 767, column: 32, scope: !4870)
!4879 = !DILocation(line: 767, column: 10, scope: !4870)
!4880 = !DILocation(line: 766, column: 10, scope: !4881)
!4881 = !DILexicalBlockFile(scope: !4857, file: !396, discriminator: 1)
!4882 = !DILocation(line: 768, column: 8, scope: !4870)
!4883 = !DILocation(line: 771, column: 11, scope: !4884)
!4884 = distinct !DILexicalBlock(scope: !4857, file: !396, line: 771, column: 10)
!4885 = !DILocation(line: 771, column: 10, scope: !4884)
!4886 = !DILocation(line: 771, column: 15, scope: !4884)
!4887 = !DILocation(line: 771, column: 37, scope: !4884)
!4888 = !DILocation(line: 772, column: 37, scope: !4884)
!4889 = !DILocation(line: 772, column: 40, scope: !4884)
!4890 = !DILocation(line: 773, column: 72, scope: !4884)
!4891 = !DILocation(line: 773, column: 75, scope: !4884)
!4892 = !DILocation(line: 774, column: 59, scope: !4884)
!4893 = !DILocation(line: 774, column: 58, scope: !4884)
!4894 = !DILocation(line: 772, column: 10, scope: !4884)
!4895 = !DILocation(line: 771, column: 10, scope: !4881)
!4896 = !DILocation(line: 775, column: 7, scope: !4884)
!4897 = !DILocation(line: 778, column: 13, scope: !4857)
!4898 = !DILocation(line: 778, column: 18, scope: !4857)
!4899 = !DILocation(line: 778, column: 10, scope: !4857)
!4900 = !DILocation(line: 779, column: 13, scope: !4857)
!4901 = !DILocation(line: 779, column: 18, scope: !4857)
!4902 = !DILocation(line: 779, column: 10, scope: !4857)
!4903 = !DILocation(line: 782, column: 28, scope: !4857)
!4904 = !DILocation(line: 782, column: 33, scope: !4857)
!4905 = !DILocation(line: 782, column: 12, scope: !4857)
!4906 = !DILocation(line: 782, column: 10, scope: !4857)
!4907 = !DILocation(line: 783, column: 10, scope: !4908)
!4908 = distinct !DILexicalBlock(scope: !4857, file: !396, line: 783, column: 10)
!4909 = !DILocation(line: 783, column: 16, scope: !4908)
!4910 = !DILocation(line: 783, column: 14, scope: !4908)
!4911 = !DILocation(line: 783, column: 20, scope: !4908)
!4912 = !DILocation(line: 783, column: 23, scope: !4913)
!4913 = !DILexicalBlockFile(scope: !4908, file: !396, discriminator: 1)
!4914 = !DILocation(line: 783, column: 34, scope: !4913)
!4915 = !DILocation(line: 783, column: 32, scope: !4913)
!4916 = !DILocation(line: 783, column: 10, scope: !4913)
!4917 = !DILocation(line: 784, column: 7, scope: !4908)
!4918 = !DILocation(line: 786, column: 15, scope: !4857)
!4919 = !DILocation(line: 758, column: 5, scope: !4920)
!4920 = !DILexicalBlockFile(scope: !4821, file: !396, discriminator: 4)
!4921 = !DILocation(line: 795, column: 10, scope: !4922)
!4922 = distinct !DILexicalBlock(scope: !4821, file: !396, line: 795, column: 9)
!4923 = !DILocation(line: 795, column: 9, scope: !4922)
!4924 = !DILocation(line: 795, column: 14, scope: !4922)
!4925 = !DILocation(line: 795, column: 22, scope: !4922)
!4926 = !DILocation(line: 795, column: 26, scope: !4927)
!4927 = !DILexicalBlockFile(scope: !4922, file: !396, discriminator: 1)
!4928 = !DILocation(line: 795, column: 25, scope: !4927)
!4929 = !DILocation(line: 795, column: 30, scope: !4927)
!4930 = !DILocation(line: 795, column: 38, scope: !4927)
!4931 = !DILocation(line: 796, column: 9, scope: !4922)
!4932 = !DILocation(line: 796, column: 21, scope: !4922)
!4933 = !DILocation(line: 796, column: 19, scope: !4922)
!4934 = !DILocation(line: 795, column: 9, scope: !4849)
!4935 = !DILocation(line: 797, column: 22, scope: !4936)
!4936 = distinct !DILexicalBlock(scope: !4922, file: !396, line: 796, column: 36)
!4937 = !DILocation(line: 797, column: 20, scope: !4936)
!4938 = !DILocation(line: 798, column: 22, scope: !4936)
!4939 = !DILocation(line: 798, column: 20, scope: !4936)
!4940 = !DILocation(line: 799, column: 22, scope: !4936)
!4941 = !DILocation(line: 799, column: 20, scope: !4936)
!4942 = !DILocation(line: 800, column: 5, scope: !4936)
!4943 = !DILocation(line: 801, column: 4, scope: !4821)
!4944 = !DILocation(line: 746, column: 40, scope: !4817)
!4945 = !DILocation(line: 746, column: 31, scope: !4817)
!4946 = !DILocation(line: 746, column: 45, scope: !4817)
!4947 = !DILocation(line: 746, column: 44, scope: !4817)
!4948 = !DILocation(line: 746, column: 48, scope: !4817)
!4949 = !DILocation(line: 746, column: 52, scope: !4817)
!4950 = !DILocation(line: 746, column: 15, scope: !4816)
!4951 = !DILocation(line: 746, column: 13, scope: !4817)
!4952 = !DILocation(line: 745, column: 4, scope: !4953)
!4953 = !DILexicalBlockFile(scope: !4817, file: !396, discriminator: 2)
!4954 = !DILocation(line: 802, column: 3, scope: !4807)
!4955 = !DILocation(line: 739, column: 50, scope: !4956)
!4956 = !DILexicalBlockFile(scope: !4795, file: !396, discriminator: 4)
!4957 = !DILocation(line: 739, column: 3, scope: !4956)
!4958 = !DILocation(line: 803, column: 2, scope: !4788)
!4959 = !DILocation(line: 732, column: 60, scope: !4960)
!4960 = !DILexicalBlockFile(scope: !4779, file: !396, discriminator: 4)
!4961 = !DILocation(line: 732, column: 51, scope: !4960)
!4962 = !DILocation(line: 732, column: 65, scope: !4960)
!4963 = !DILocation(line: 732, column: 48, scope: !4960)
!4964 = !DILocation(line: 732, column: 2, scope: !4960)
!4965 = !DILocation(line: 806, column: 6, scope: !4966)
!4966 = distinct !DILexicalBlock(scope: !523, file: !396, line: 806, column: 6)
!4967 = !DILocation(line: 806, column: 23, scope: !4966)
!4968 = !DILocation(line: 806, column: 20, scope: !4966)
!4969 = !DILocation(line: 806, column: 6, scope: !523)
!4970 = !DILocalVariable(name: "i", scope: !4971, file: !396, line: 807, type: !33)
!4971 = distinct !DILexicalBlock(scope: !4966, file: !396, line: 806, column: 30)
!4972 = !DILocation(line: 807, column: 7, scope: !4971)
!4973 = !DILocation(line: 809, column: 10, scope: !4974)
!4974 = distinct !DILexicalBlock(scope: !4971, file: !396, line: 809, column: 3)
!4975 = !DILocation(line: 809, column: 8, scope: !4974)
!4976 = !DILocation(line: 809, column: 22, scope: !4977)
!4977 = !DILexicalBlockFile(scope: !4978, file: !396, discriminator: 1)
!4978 = distinct !DILexicalBlock(scope: !4974, file: !396, line: 809, column: 3)
!4979 = !DILocation(line: 809, column: 15, scope: !4977)
!4980 = !DILocation(line: 809, column: 25, scope: !4977)
!4981 = !DILocation(line: 809, column: 3, scope: !4977)
!4982 = !DILocation(line: 809, column: 3, scope: !4983)
!4983 = !DILexicalBlockFile(scope: !4974, file: !396, discriminator: 2)
!4984 = !DILocation(line: 809, column: 32, scope: !4985)
!4985 = !DILexicalBlockFile(scope: !4978, file: !396, discriminator: 3)
!4986 = !DILocation(line: 809, column: 3, scope: !4985)
!4987 = !DILocation(line: 811, column: 7, scope: !4988)
!4988 = distinct !DILexicalBlock(scope: !4971, file: !396, line: 811, column: 7)
!4989 = !DILocation(line: 811, column: 9, scope: !4988)
!4990 = !DILocation(line: 811, column: 15, scope: !4988)
!4991 = !DILocation(line: 811, column: 13, scope: !4988)
!4992 = !DILocation(line: 811, column: 7, scope: !4971)
!4993 = !DILocation(line: 813, column: 21, scope: !4994)
!4994 = distinct !DILexicalBlock(scope: !4995, file: !396, line: 813, column: 8)
!4995 = distinct !DILexicalBlock(scope: !4988, file: !396, line: 811, column: 27)
!4996 = !DILocation(line: 813, column: 37, scope: !4994)
!4997 = !DILocation(line: 813, column: 35, scope: !4994)
!4998 = !DILocation(line: 813, column: 9, scope: !4994)
!4999 = !DILocation(line: 814, column: 8, scope: !4994)
!5000 = !DILocation(line: 813, column: 8, scope: !4995)
!5001 = !DILocation(line: 817, column: 29, scope: !5002)
!5002 = distinct !DILexicalBlock(scope: !4994, file: !396, line: 814, column: 33)
!5003 = !DILocation(line: 817, column: 34, scope: !5002)
!5004 = !DILocation(line: 817, column: 32, scope: !5002)
!5005 = !DILocation(line: 817, column: 17, scope: !5002)
!5006 = !DILocation(line: 817, column: 12, scope: !5002)
!5007 = !DILocation(line: 817, column: 5, scope: !5002)
!5008 = !DILocation(line: 817, column: 15, scope: !5002)
!5009 = !DILocation(line: 818, column: 12, scope: !5002)
!5010 = !DILocation(line: 818, column: 14, scope: !5002)
!5011 = !DILocation(line: 818, column: 5, scope: !5002)
!5012 = !DILocation(line: 818, column: 19, scope: !5002)
!5013 = !DILocation(line: 819, column: 4, scope: !5002)
!5014 = !DILocation(line: 820, column: 3, scope: !4995)
!5015 = !DILocation(line: 821, column: 2, scope: !4971)
!5016 = !DILocation(line: 824, column: 14, scope: !523)
!5017 = !DILocation(line: 825, column: 8, scope: !523)
!5018 = !DILocation(line: 825, column: 6, scope: !523)
!5019 = !DILocation(line: 828, column: 2, scope: !523)
!5020 = !DILocation(line: 828, column: 10, scope: !5021)
!5021 = !DILexicalBlockFile(scope: !523, file: !396, discriminator: 1)
!5022 = !DILocation(line: 828, column: 9, scope: !5021)
!5023 = !DILocation(line: 828, column: 14, scope: !5021)
!5024 = !DILocation(line: 828, column: 17, scope: !5025)
!5025 = !DILexicalBlockFile(scope: !523, file: !396, discriminator: 2)
!5026 = !DILocation(line: 828, column: 24, scope: !5025)
!5027 = !DILocation(line: 828, column: 21, scope: !5025)
!5028 = !DILocation(line: 828, column: 2, scope: !5029)
!5029 = !DILexicalBlockFile(scope: !523, file: !396, discriminator: 3)
!5030 = !DILocalVariable(name: "i", scope: !5031, file: !396, line: 829, type: !33)
!5031 = distinct !DILexicalBlock(scope: !523, file: !396, line: 828, column: 39)
!5032 = !DILocation(line: 829, column: 7, scope: !5031)
!5033 = !DILocation(line: 831, column: 16, scope: !5031)
!5034 = !DILocation(line: 831, column: 7, scope: !5031)
!5035 = !DILocation(line: 831, column: 21, scope: !5031)
!5036 = !DILocation(line: 831, column: 5, scope: !5031)
!5037 = !DILocation(line: 832, column: 7, scope: !5038)
!5038 = distinct !DILexicalBlock(scope: !5031, file: !396, line: 832, column: 7)
!5039 = !DILocation(line: 832, column: 12, scope: !5038)
!5040 = !DILocation(line: 832, column: 10, scope: !5038)
!5041 = !DILocation(line: 832, column: 16, scope: !5038)
!5042 = !DILocation(line: 832, column: 14, scope: !5038)
!5043 = !DILocation(line: 832, column: 7, scope: !5031)
!5044 = !DILocation(line: 833, column: 4, scope: !5038)
!5045 = !DILocation(line: 835, column: 11, scope: !5031)
!5046 = !DILocation(line: 835, column: 15, scope: !5031)
!5047 = !DILocation(line: 835, column: 20, scope: !5031)
!5048 = !DILocation(line: 835, column: 3, scope: !5031)
!5049 = !DILocation(line: 836, column: 18, scope: !5031)
!5050 = !DILocation(line: 836, column: 15, scope: !5031)
!5051 = !DILocation(line: 837, column: 10, scope: !5031)
!5052 = !DILocation(line: 837, column: 7, scope: !5031)
!5053 = !DILocation(line: 838, column: 9, scope: !5031)
!5054 = !DILocation(line: 838, column: 6, scope: !5031)
!5055 = !DILocation(line: 828, column: 2, scope: !5056)
!5056 = !DILexicalBlockFile(scope: !523, file: !396, discriminator: 4)
!5057 = !DILocation(line: 842, column: 6, scope: !5058)
!5058 = distinct !DILexicalBlock(scope: !523, file: !396, line: 842, column: 6)
!5059 = !DILocation(line: 842, column: 13, scope: !5058)
!5060 = !DILocation(line: 842, column: 10, scope: !5058)
!5061 = !DILocation(line: 842, column: 6, scope: !523)
!5062 = !DILocalVariable(name: "us", scope: !5063, file: !396, line: 843, type: !48)
!5063 = distinct !DILexicalBlock(scope: !5058, file: !396, line: 842, column: 28)
!5064 = !DILocation(line: 843, column: 12, scope: !5063)
!5065 = !DILocation(line: 846, column: 7, scope: !5066)
!5066 = distinct !DILexicalBlock(scope: !5063, file: !396, line: 846, column: 7)
!5067 = !DILocation(line: 846, column: 10, scope: !5066)
!5068 = !DILocation(line: 846, column: 32, scope: !5066)
!5069 = !DILocation(line: 846, column: 30, scope: !5066)
!5070 = !DILocation(line: 846, column: 7, scope: !5063)
!5071 = !DILocation(line: 847, column: 4, scope: !5066)
!5072 = !DILocation(line: 849, column: 20, scope: !5063)
!5073 = !DILocation(line: 849, column: 36, scope: !5063)
!5074 = !DILocation(line: 849, column: 34, scope: !5063)
!5075 = !DILocation(line: 849, column: 8, scope: !5063)
!5076 = !DILocation(line: 849, column: 41, scope: !5063)
!5077 = !DILocation(line: 849, column: 6, scope: !5063)
!5078 = !DILocation(line: 850, column: 3, scope: !5079)
!5079 = distinct !DILexicalBlock(scope: !5063, file: !396, line: 850, column: 3)
!5080 = !DILocation(line: 851, column: 15, scope: !5063)
!5081 = !DILocation(line: 852, column: 2, scope: !5063)
!5082 = !DILocation(line: 853, column: 4, scope: !5083)
!5083 = distinct !DILexicalBlock(scope: !5058, file: !396, line: 852, column: 9)
!5084 = !DILocation(line: 853, column: 7, scope: !5083)
!5085 = !DILocation(line: 854, column: 14, scope: !5083)
!5086 = !DILocation(line: 857, column: 8, scope: !5087)
!5087 = distinct !DILexicalBlock(scope: !523, file: !396, line: 857, column: 6)
!5088 = !DILocation(line: 857, column: 14, scope: !5087)
!5089 = !DILocation(line: 857, column: 6, scope: !523)
!5090 = !DILocation(line: 859, column: 4, scope: !5087)
!5091 = !DILocation(line: 859, column: 8, scope: !5087)
!5092 = !DILocation(line: 858, column: 3, scope: !5087)
!5093 = !DILocation(line: 861, column: 9, scope: !523)
!5094 = !DILocation(line: 861, column: 2, scope: !523)
!5095 = !DILocation(line: 862, column: 1, scope: !523)
!5096 = !DILocalVariable(name: "an_list", arg: 1, scope: !502, file: !396, line: 285, type: !493)
!5097 = !DILocation(line: 285, column: 28, scope: !502)
!5098 = !DILocalVariable(name: "ns_list", arg: 2, scope: !502, file: !396, line: 285, type: !493)
!5099 = !DILocation(line: 285, column: 45, scope: !502)
!5100 = !DILocalVariable(name: "ar_list", arg: 3, scope: !502, file: !396, line: 285, type: !493)
!5101 = !DILocation(line: 285, column: 62, scope: !502)
!5102 = !DILocalVariable(name: "buf", arg: 4, scope: !502, file: !396, line: 286, type: !20)
!5103 = !DILocation(line: 286, column: 14, scope: !502)
!5104 = !DILocalVariable(name: "buflen", arg: 5, scope: !502, file: !396, line: 286, type: !48)
!5105 = !DILocation(line: 286, column: 28, scope: !502)
!5106 = !DILocalVariable(name: "mesg", arg: 6, scope: !502, file: !396, line: 286, type: !20)
!5107 = !DILocation(line: 286, column: 44, scope: !502)
!5108 = !DILocalVariable(name: "mesg_len", arg: 7, scope: !502, file: !396, line: 286, type: !33)
!5109 = !DILocation(line: 286, column: 54, scope: !502)
!5110 = !DILocalVariable(name: "dnames", scope: !502, file: !396, line: 287, type: !5111)
!5111 = !DICompositeType(tag: DW_TAG_array_type, baseType: !48, size: 1024, align: 16, elements: !5112)
!5112 = !{!5113}
!5113 = !DISubrange(count: 64)
!5114 = !DILocation(line: 287, column: 11, scope: !502)
!5115 = !DILocalVariable(name: "ucp", scope: !502, file: !396, line: 288, type: !20)
!5116 = !DILocation(line: 288, column: 10, scope: !502)
!5117 = !DILocalVariable(name: "ucp_tmp", scope: !502, file: !396, line: 288, type: !20)
!5118 = !DILocation(line: 288, column: 16, scope: !502)
!5119 = !DILocalVariable(name: "written_len", scope: !502, file: !396, line: 289, type: !33)
!5120 = !DILocation(line: 289, column: 6, scope: !502)
!5121 = !DILocalVariable(name: "ret", scope: !502, file: !396, line: 289, type: !33)
!5122 = !DILocation(line: 289, column: 19, scope: !502)
!5123 = !DILocalVariable(name: "hdr", scope: !502, file: !396, line: 290, type: !399)
!5124 = !DILocation(line: 290, column: 12, scope: !502)
!5125 = !DILocation(line: 293, column: 6, scope: !5126)
!5126 = distinct !DILexicalBlock(scope: !502, file: !396, line: 293, column: 6)
!5127 = !DILocation(line: 293, column: 6, scope: !502)
!5128 = !DILocation(line: 294, column: 11, scope: !5126)
!5129 = !DILocation(line: 294, column: 16, scope: !5126)
!5130 = !DILocation(line: 294, column: 22, scope: !5126)
!5131 = !DILocation(line: 294, column: 3, scope: !5126)
!5132 = !DILocation(line: 296, column: 11, scope: !5126)
!5133 = !DILocation(line: 296, column: 19, scope: !5126)
!5134 = !DILocation(line: 296, column: 3, scope: !5126)
!5135 = !DILocation(line: 298, column: 21, scope: !502)
!5136 = !DILocation(line: 298, column: 8, scope: !502)
!5137 = !DILocation(line: 298, column: 6, scope: !502)
!5138 = !DILocation(line: 300, column: 14, scope: !502)
!5139 = !DILocation(line: 303, column: 2, scope: !502)
!5140 = !DILocation(line: 303, column: 7, scope: !502)
!5141 = !DILocation(line: 303, column: 10, scope: !502)
!5142 = !DILocation(line: 304, column: 2, scope: !502)
!5143 = !DILocation(line: 304, column: 7, scope: !502)
!5144 = !DILocation(line: 304, column: 13, scope: !502)
!5145 = !DILocation(line: 305, column: 2, scope: !502)
!5146 = !DILocation(line: 305, column: 7, scope: !502)
!5147 = !DILocation(line: 305, column: 13, scope: !502)
!5148 = !DILocation(line: 306, column: 2, scope: !502)
!5149 = !DILocation(line: 306, column: 7, scope: !502)
!5150 = !DILocation(line: 306, column: 13, scope: !502)
!5151 = !DILocation(line: 308, column: 6, scope: !5152)
!5152 = distinct !DILexicalBlock(scope: !502, file: !396, line: 308, column: 6)
!5153 = !DILocation(line: 308, column: 11, scope: !5152)
!5154 = !DILocation(line: 308, column: 6, scope: !502)
!5155 = !DILocalVariable(name: "qdcnt", scope: !5156, file: !396, line: 309, type: !33)
!5156 = distinct !DILexicalBlock(scope: !5152, file: !396, line: 308, column: 18)
!5157 = !DILocation(line: 309, column: 7, scope: !5156)
!5158 = !DILocation(line: 309, column: 21, scope: !5156)
!5159 = !DILocation(line: 309, column: 26, scope: !5156)
!5160 = !DILocation(line: 309, column: 15, scope: !5156)
!5161 = !DILocation(line: 316, column: 3, scope: !5156)
!5162 = !DILocation(line: 316, column: 13, scope: !5156)
!5163 = !DILocation(line: 317, column: 3, scope: !5156)
!5164 = !DILocation(line: 317, column: 13, scope: !5156)
!5165 = !DILocation(line: 322, column: 9, scope: !5156)
!5166 = !DILocation(line: 322, column: 13, scope: !5156)
!5167 = !DILocation(line: 322, column: 7, scope: !5156)
!5168 = !DILocation(line: 323, column: 3, scope: !5156)
!5169 = !DILocation(line: 323, column: 15, scope: !5170)
!5170 = !DILexicalBlockFile(scope: !5156, file: !396, discriminator: 1)
!5171 = !DILocation(line: 323, column: 3, scope: !5170)
!5172 = !DILocation(line: 325, column: 32, scope: !5173)
!5173 = distinct !DILexicalBlock(scope: !5174, file: !396, line: 325, column: 8)
!5174 = distinct !DILexicalBlock(scope: !5156, file: !396, line: 323, column: 19)
!5175 = !DILocation(line: 325, column: 37, scope: !5173)
!5176 = !DILocation(line: 325, column: 43, scope: !5173)
!5177 = !DILocation(line: 325, column: 41, scope: !5173)
!5178 = !DILocation(line: 325, column: 16, scope: !5173)
!5179 = !DILocation(line: 325, column: 14, scope: !5173)
!5180 = !DILocation(line: 325, column: 54, scope: !5173)
!5181 = !DILocation(line: 326, column: 8, scope: !5173)
!5182 = !DILocation(line: 326, column: 12, scope: !5173)
!5183 = !DILocation(line: 326, column: 37, scope: !5173)
!5184 = !DILocation(line: 326, column: 43, scope: !5173)
!5185 = !DILocation(line: 326, column: 41, scope: !5173)
!5186 = !DILocation(line: 326, column: 35, scope: !5173)
!5187 = !DILocation(line: 325, column: 8, scope: !5188)
!5188 = !DILexicalBlockFile(scope: !5174, file: !396, discriminator: 1)
!5189 = !DILocation(line: 327, column: 5, scope: !5190)
!5190 = distinct !DILexicalBlock(scope: !5173, file: !396, line: 326, column: 53)
!5191 = !DILocation(line: 328, column: 5, scope: !5190)
!5192 = !DILocation(line: 331, column: 8, scope: !5174)
!5193 = !DILocation(line: 323, column: 3, scope: !5194)
!5194 = !DILexicalBlockFile(scope: !5156, file: !396, discriminator: 2)
!5195 = !DILocation(line: 333, column: 17, scope: !5156)
!5196 = !DILocation(line: 333, column: 23, scope: !5156)
!5197 = !DILocation(line: 333, column: 21, scope: !5156)
!5198 = !DILocation(line: 333, column: 15, scope: !5156)
!5199 = !DILocation(line: 334, column: 2, scope: !5156)
!5200 = !DILocation(line: 336, column: 15, scope: !5201)
!5201 = distinct !DILexicalBlock(scope: !5152, file: !396, line: 334, column: 9)
!5202 = !DILocation(line: 337, column: 9, scope: !5201)
!5203 = !DILocation(line: 337, column: 15, scope: !5201)
!5204 = !DILocation(line: 337, column: 13, scope: !5201)
!5205 = !DILocation(line: 337, column: 7, scope: !5201)
!5206 = !DILocation(line: 338, column: 3, scope: !5201)
!5207 = !DILocation(line: 338, column: 13, scope: !5201)
!5208 = !DILocation(line: 342, column: 12, scope: !502)
!5209 = !DILocation(line: 342, column: 10, scope: !502)
!5210 = !DILocation(line: 343, column: 31, scope: !502)
!5211 = !DILocation(line: 343, column: 40, scope: !502)
!5212 = !DILocation(line: 343, column: 45, scope: !502)
!5213 = !DILocation(line: 343, column: 51, scope: !502)
!5214 = !DILocation(line: 343, column: 49, scope: !502)
!5215 = !DILocation(line: 343, column: 59, scope: !502)
!5216 = !DILocation(line: 345, column: 12, scope: !502)
!5217 = !DILocation(line: 345, column: 17, scope: !502)
!5218 = !DILocation(line: 343, column: 8, scope: !502)
!5219 = !DILocation(line: 343, column: 6, scope: !502)
!5220 = !DILocation(line: 346, column: 6, scope: !5221)
!5221 = distinct !DILexicalBlock(scope: !502, file: !396, line: 346, column: 6)
!5222 = !DILocation(line: 346, column: 10, scope: !5221)
!5223 = !DILocation(line: 346, column: 6, scope: !502)
!5224 = !DILocation(line: 348, column: 3, scope: !5225)
!5225 = distinct !DILexicalBlock(scope: !5221, file: !396, line: 346, column: 15)
!5226 = !DILocation(line: 348, column: 8, scope: !5225)
!5227 = !DILocation(line: 348, column: 11, scope: !5225)
!5228 = !DILocation(line: 349, column: 10, scope: !5225)
!5229 = !DILocation(line: 349, column: 20, scope: !5225)
!5230 = !DILocation(line: 349, column: 18, scope: !5225)
!5231 = !DILocation(line: 349, column: 3, scope: !5225)
!5232 = !DILocation(line: 351, column: 17, scope: !502)
!5233 = !DILocation(line: 351, column: 14, scope: !502)
!5234 = !DILocation(line: 354, column: 12, scope: !502)
!5235 = !DILocation(line: 354, column: 10, scope: !502)
!5236 = !DILocation(line: 355, column: 31, scope: !502)
!5237 = !DILocation(line: 355, column: 40, scope: !502)
!5238 = !DILocation(line: 355, column: 45, scope: !502)
!5239 = !DILocation(line: 355, column: 51, scope: !502)
!5240 = !DILocation(line: 355, column: 49, scope: !502)
!5241 = !DILocation(line: 355, column: 59, scope: !502)
!5242 = !DILocation(line: 357, column: 12, scope: !502)
!5243 = !DILocation(line: 357, column: 17, scope: !502)
!5244 = !DILocation(line: 355, column: 8, scope: !502)
!5245 = !DILocation(line: 355, column: 6, scope: !502)
!5246 = !DILocation(line: 358, column: 6, scope: !5247)
!5247 = distinct !DILexicalBlock(scope: !502, file: !396, line: 358, column: 6)
!5248 = !DILocation(line: 358, column: 10, scope: !5247)
!5249 = !DILocation(line: 358, column: 6, scope: !502)
!5250 = !DILocation(line: 360, column: 3, scope: !5251)
!5251 = distinct !DILexicalBlock(scope: !5247, file: !396, line: 358, column: 15)
!5252 = !DILocation(line: 360, column: 8, scope: !5251)
!5253 = !DILocation(line: 360, column: 11, scope: !5251)
!5254 = !DILocation(line: 361, column: 10, scope: !5251)
!5255 = !DILocation(line: 361, column: 20, scope: !5251)
!5256 = !DILocation(line: 361, column: 18, scope: !5251)
!5257 = !DILocation(line: 361, column: 3, scope: !5251)
!5258 = !DILocation(line: 363, column: 17, scope: !502)
!5259 = !DILocation(line: 363, column: 14, scope: !502)
!5260 = !DILocation(line: 366, column: 12, scope: !502)
!5261 = !DILocation(line: 366, column: 10, scope: !502)
!5262 = !DILocation(line: 367, column: 31, scope: !502)
!5263 = !DILocation(line: 367, column: 40, scope: !502)
!5264 = !DILocation(line: 367, column: 45, scope: !502)
!5265 = !DILocation(line: 367, column: 51, scope: !502)
!5266 = !DILocation(line: 367, column: 49, scope: !502)
!5267 = !DILocation(line: 367, column: 59, scope: !502)
!5268 = !DILocation(line: 369, column: 12, scope: !502)
!5269 = !DILocation(line: 369, column: 17, scope: !502)
!5270 = !DILocation(line: 367, column: 8, scope: !502)
!5271 = !DILocation(line: 367, column: 6, scope: !502)
!5272 = !DILocation(line: 374, column: 6, scope: !5273)
!5273 = distinct !DILexicalBlock(scope: !502, file: !396, line: 374, column: 6)
!5274 = !DILocation(line: 374, column: 10, scope: !5273)
!5275 = !DILocation(line: 374, column: 6, scope: !502)
!5276 = !DILocation(line: 375, column: 10, scope: !5273)
!5277 = !DILocation(line: 375, column: 20, scope: !5273)
!5278 = !DILocation(line: 375, column: 18, scope: !5273)
!5279 = !DILocation(line: 375, column: 3, scope: !5273)
!5280 = !DILocation(line: 377, column: 10, scope: !5273)
!5281 = !DILocation(line: 377, column: 24, scope: !5273)
!5282 = !DILocation(line: 377, column: 22, scope: !5273)
!5283 = !DILocation(line: 377, column: 3, scope: !5273)
!5284 = !DILocation(line: 378, column: 1, scope: !502)
!5285 = !DILocalVariable(name: "mesg", arg: 1, scope: !505, file: !396, line: 380, type: !20)
!5286 = !DILocation(line: 380, column: 30, scope: !505)
!5287 = !DILocalVariable(name: "msg_end", arg: 2, scope: !505, file: !396, line: 380, type: !20)
!5288 = !DILocation(line: 380, column: 44, scope: !505)
!5289 = !DILocalVariable(name: "r_type", arg: 3, scope: !505, file: !396, line: 380, type: !48)
!5290 = !DILocation(line: 380, column: 62, scope: !505)
!5291 = !DILocalVariable(name: "r_class", arg: 4, scope: !505, file: !396, line: 381, type: !48)
!5292 = !DILocation(line: 381, column: 11, scope: !505)
!5293 = !DILocalVariable(name: "rrp", arg: 5, scope: !505, file: !396, line: 381, type: !20)
!5294 = !DILocation(line: 381, column: 28, scope: !505)
!5295 = !DILocalVariable(name: "buf", arg: 6, scope: !505, file: !396, line: 381, type: !20)
!5296 = !DILocation(line: 381, column: 41, scope: !505)
!5297 = !DILocalVariable(name: "buflen", arg: 7, scope: !505, file: !396, line: 381, type: !33)
!5298 = !DILocation(line: 381, column: 50, scope: !505)
!5299 = !DILocalVariable(name: "i", scope: !505, file: !396, line: 382, type: !33)
!5300 = !DILocation(line: 382, column: 6, scope: !505)
!5301 = !DILocalVariable(name: "written_len", scope: !505, file: !396, line: 382, type: !33)
!5302 = !DILocation(line: 382, column: 9, scope: !505)
!5303 = !DILocalVariable(name: "rp", scope: !505, file: !396, line: 383, type: !20)
!5304 = !DILocation(line: 383, column: 10, scope: !505)
!5305 = !DILocalVariable(name: "wp", scope: !505, file: !396, line: 383, type: !20)
!5306 = !DILocation(line: 383, column: 15, scope: !505)
!5307 = !DILocation(line: 385, column: 14, scope: !505)
!5308 = !DILocation(line: 387, column: 10, scope: !505)
!5309 = !DILocation(line: 387, column: 2, scope: !505)
!5310 = !DILocation(line: 392, column: 26, scope: !5311)
!5311 = distinct !DILexicalBlock(scope: !5312, file: !396, line: 392, column: 7)
!5312 = distinct !DILexicalBlock(scope: !505, file: !396, line: 387, column: 18)
!5313 = !DILocation(line: 392, column: 31, scope: !5311)
!5314 = !DILocation(line: 392, column: 39, scope: !5311)
!5315 = !DILocation(line: 392, column: 44, scope: !5311)
!5316 = !DILocation(line: 392, column: 50, scope: !5311)
!5317 = !DILocation(line: 392, column: 8, scope: !5311)
!5318 = !DILocation(line: 392, column: 7, scope: !5312)
!5319 = !DILocation(line: 395, column: 19, scope: !5320)
!5320 = distinct !DILexicalBlock(scope: !5311, file: !396, line: 393, column: 25)
!5321 = !DILocation(line: 395, column: 5, scope: !5320)
!5322 = !DILocation(line: 394, column: 4, scope: !5320)
!5323 = !DILocation(line: 396, column: 4, scope: !5320)
!5324 = !DILocation(line: 398, column: 3, scope: !5312)
!5325 = !DILocation(line: 400, column: 8, scope: !5312)
!5326 = !DILocation(line: 400, column: 6, scope: !5312)
!5327 = !DILocation(line: 401, column: 8, scope: !5312)
!5328 = !DILocation(line: 401, column: 6, scope: !5312)
!5329 = !DILocation(line: 402, column: 26, scope: !5312)
!5330 = !DILocation(line: 402, column: 30, scope: !5312)
!5331 = !DILocation(line: 402, column: 38, scope: !5312)
!5332 = !DILocation(line: 402, column: 42, scope: !5312)
!5333 = !DILocation(line: 402, column: 48, scope: !5312)
!5334 = !DILocation(line: 402, column: 8, scope: !5312)
!5335 = !DILocation(line: 402, column: 6, scope: !5312)
!5336 = !DILocation(line: 403, column: 8, scope: !5337)
!5337 = distinct !DILexicalBlock(scope: !5312, file: !396, line: 403, column: 7)
!5338 = !DILocation(line: 403, column: 7, scope: !5312)
!5339 = !DILocation(line: 404, column: 4, scope: !5340)
!5340 = distinct !DILexicalBlock(scope: !5337, file: !396, line: 403, column: 12)
!5341 = !DILocation(line: 405, column: 4, scope: !5340)
!5342 = !DILocation(line: 408, column: 9, scope: !5312)
!5343 = !DILocation(line: 408, column: 6, scope: !5312)
!5344 = !DILocation(line: 409, column: 26, scope: !5312)
!5345 = !DILocation(line: 409, column: 30, scope: !5312)
!5346 = !DILocation(line: 409, column: 40, scope: !5312)
!5347 = !DILocation(line: 409, column: 45, scope: !5312)
!5348 = !DILocation(line: 409, column: 43, scope: !5312)
!5349 = !DILocation(line: 409, column: 37, scope: !5312)
!5350 = !DILocation(line: 409, column: 51, scope: !5312)
!5351 = !DILocation(line: 410, column: 10, scope: !5312)
!5352 = !DILocation(line: 410, column: 16, scope: !5312)
!5353 = !DILocation(line: 409, column: 8, scope: !5312)
!5354 = !DILocation(line: 409, column: 6, scope: !5312)
!5355 = !DILocation(line: 411, column: 8, scope: !5356)
!5356 = distinct !DILexicalBlock(scope: !5312, file: !396, line: 411, column: 7)
!5357 = !DILocation(line: 411, column: 7, scope: !5312)
!5358 = !DILocation(line: 412, column: 4, scope: !5359)
!5359 = distinct !DILexicalBlock(scope: !5356, file: !396, line: 411, column: 12)
!5360 = !DILocation(line: 413, column: 4, scope: !5359)
!5361 = !DILocation(line: 416, column: 9, scope: !5312)
!5362 = !DILocation(line: 416, column: 6, scope: !5312)
!5363 = !DILocation(line: 417, column: 11, scope: !5312)
!5364 = !DILocation(line: 417, column: 15, scope: !5312)
!5365 = !DILocation(line: 417, column: 22, scope: !5312)
!5366 = !DILocation(line: 417, column: 3, scope: !5312)
!5367 = !DILocation(line: 418, column: 9, scope: !5312)
!5368 = !DILocation(line: 418, column: 6, scope: !5312)
!5369 = !DILocation(line: 419, column: 17, scope: !5312)
!5370 = !DILocation(line: 419, column: 22, scope: !5312)
!5371 = !DILocation(line: 419, column: 20, scope: !5312)
!5372 = !DILocation(line: 419, column: 15, scope: !5312)
!5373 = !DILocation(line: 420, column: 3, scope: !5312)
!5374 = !DILocation(line: 422, column: 8, scope: !5312)
!5375 = !DILocation(line: 422, column: 6, scope: !5312)
!5376 = !DILocation(line: 423, column: 8, scope: !5312)
!5377 = !DILocation(line: 423, column: 6, scope: !5312)
!5378 = !DILocation(line: 424, column: 11, scope: !5312)
!5379 = !DILocation(line: 424, column: 15, scope: !5312)
!5380 = !DILocation(line: 424, column: 22, scope: !5312)
!5381 = !DILocation(line: 424, column: 3, scope: !5312)
!5382 = !DILocation(line: 425, column: 9, scope: !5312)
!5383 = !DILocation(line: 425, column: 6, scope: !5312)
!5384 = !DILocation(line: 426, column: 9, scope: !5312)
!5385 = !DILocation(line: 426, column: 6, scope: !5312)
!5386 = !DILocation(line: 427, column: 26, scope: !5387)
!5387 = distinct !DILexicalBlock(scope: !5312, file: !396, line: 427, column: 7)
!5388 = !DILocation(line: 427, column: 30, scope: !5387)
!5389 = !DILocation(line: 427, column: 40, scope: !5387)
!5390 = !DILocation(line: 427, column: 45, scope: !5387)
!5391 = !DILocation(line: 427, column: 43, scope: !5387)
!5392 = !DILocation(line: 427, column: 37, scope: !5387)
!5393 = !DILocation(line: 427, column: 51, scope: !5387)
!5394 = !DILocation(line: 428, column: 10, scope: !5387)
!5395 = !DILocation(line: 428, column: 16, scope: !5387)
!5396 = !DILocation(line: 427, column: 8, scope: !5387)
!5397 = !DILocation(line: 427, column: 7, scope: !5312)
!5398 = !DILocation(line: 429, column: 4, scope: !5399)
!5399 = distinct !DILexicalBlock(scope: !5387, file: !396, line: 428, column: 30)
!5400 = !DILocation(line: 430, column: 4, scope: !5399)
!5401 = !DILocation(line: 432, column: 9, scope: !5312)
!5402 = !DILocation(line: 432, column: 6, scope: !5312)
!5403 = !DILocation(line: 433, column: 17, scope: !5312)
!5404 = !DILocation(line: 433, column: 22, scope: !5312)
!5405 = !DILocation(line: 433, column: 20, scope: !5312)
!5406 = !DILocation(line: 433, column: 15, scope: !5312)
!5407 = !DILocation(line: 434, column: 3, scope: !5312)
!5408 = !DILocation(line: 437, column: 8, scope: !5312)
!5409 = !DILocation(line: 437, column: 6, scope: !5312)
!5410 = !DILocation(line: 438, column: 8, scope: !5312)
!5411 = !DILocation(line: 438, column: 6, scope: !5312)
!5412 = !DILocation(line: 439, column: 26, scope: !5312)
!5413 = !DILocation(line: 439, column: 30, scope: !5312)
!5414 = !DILocation(line: 439, column: 38, scope: !5312)
!5415 = !DILocation(line: 439, column: 42, scope: !5312)
!5416 = !DILocation(line: 439, column: 48, scope: !5312)
!5417 = !DILocation(line: 439, column: 8, scope: !5312)
!5418 = !DILocation(line: 439, column: 6, scope: !5312)
!5419 = !DILocation(line: 440, column: 8, scope: !5420)
!5420 = distinct !DILexicalBlock(scope: !5312, file: !396, line: 440, column: 7)
!5421 = !DILocation(line: 440, column: 7, scope: !5312)
!5422 = !DILocation(line: 441, column: 4, scope: !5423)
!5423 = distinct !DILexicalBlock(scope: !5420, file: !396, line: 440, column: 12)
!5424 = !DILocation(line: 442, column: 4, scope: !5423)
!5425 = !DILocation(line: 444, column: 9, scope: !5312)
!5426 = !DILocation(line: 444, column: 6, scope: !5312)
!5427 = !DILocation(line: 445, column: 26, scope: !5312)
!5428 = !DILocation(line: 445, column: 30, scope: !5312)
!5429 = !DILocation(line: 445, column: 40, scope: !5312)
!5430 = !DILocation(line: 445, column: 45, scope: !5312)
!5431 = !DILocation(line: 445, column: 43, scope: !5312)
!5432 = !DILocation(line: 445, column: 37, scope: !5312)
!5433 = !DILocation(line: 445, column: 51, scope: !5312)
!5434 = !DILocation(line: 446, column: 10, scope: !5312)
!5435 = !DILocation(line: 446, column: 16, scope: !5312)
!5436 = !DILocation(line: 445, column: 8, scope: !5312)
!5437 = !DILocation(line: 445, column: 6, scope: !5312)
!5438 = !DILocation(line: 447, column: 8, scope: !5439)
!5439 = distinct !DILexicalBlock(scope: !5312, file: !396, line: 447, column: 7)
!5440 = !DILocation(line: 447, column: 7, scope: !5312)
!5441 = !DILocation(line: 448, column: 4, scope: !5442)
!5442 = distinct !DILexicalBlock(scope: !5439, file: !396, line: 447, column: 12)
!5443 = !DILocation(line: 449, column: 4, scope: !5442)
!5444 = !DILocation(line: 451, column: 9, scope: !5312)
!5445 = !DILocation(line: 451, column: 6, scope: !5312)
!5446 = !DILocation(line: 452, column: 17, scope: !5312)
!5447 = !DILocation(line: 452, column: 22, scope: !5312)
!5448 = !DILocation(line: 452, column: 20, scope: !5312)
!5449 = !DILocation(line: 452, column: 15, scope: !5312)
!5450 = !DILocation(line: 453, column: 3, scope: !5312)
!5451 = !DILocation(line: 461, column: 3, scope: !5312)
!5452 = !DILocation(line: 463, column: 49, scope: !5312)
!5453 = !DILocation(line: 463, column: 3, scope: !5312)
!5454 = !DILocation(line: 464, column: 3, scope: !5312)
!5455 = !DILocation(line: 467, column: 9, scope: !505)
!5456 = !DILocation(line: 467, column: 2, scope: !505)
!5457 = !DILocation(line: 468, column: 1, scope: !505)
!5458 = !DILocalVariable(name: "buf", arg: 1, scope: !511, file: !396, line: 508, type: !20)
!5459 = !DILocation(line: 508, column: 35, scope: !511)
!5460 = !DILocalVariable(name: "buflen", arg: 2, scope: !511, file: !396, line: 508, type: !33)
!5461 = !DILocation(line: 508, column: 44, scope: !511)
!5462 = !DILocalVariable(name: "dname", arg: 3, scope: !511, file: !396, line: 508, type: !20)
!5463 = !DILocation(line: 508, column: 60, scope: !511)
!5464 = !DILocalVariable(name: "m_head", arg: 4, scope: !511, file: !396, line: 509, type: !20)
!5465 = !DILocation(line: 509, column: 14, scope: !511)
!5466 = !DILocalVariable(name: "m_tail", arg: 5, scope: !511, file: !396, line: 509, type: !20)
!5467 = !DILocation(line: 509, column: 30, scope: !511)
!5468 = !DILocalVariable(name: "written", arg: 6, scope: !511, file: !396, line: 509, type: !514)
!5469 = !DILocation(line: 509, column: 43, scope: !511)
!5470 = !DILocalVariable(name: "token_len", scope: !511, file: !396, line: 510, type: !33)
!5471 = !DILocation(line: 510, column: 6, scope: !511)
!5472 = !DILocalVariable(name: "written_len", scope: !511, file: !396, line: 510, type: !33)
!5473 = !DILocation(line: 510, column: 17, scope: !511)
!5474 = !DILocalVariable(name: "iter", scope: !511, file: !396, line: 510, type: !33)
!5475 = !DILocation(line: 510, column: 30, scope: !511)
!5476 = !DILocalVariable(name: "cp", scope: !511, file: !396, line: 511, type: !20)
!5477 = !DILocation(line: 511, column: 10, scope: !511)
!5478 = !DILocalVariable(name: "next", scope: !511, file: !396, line: 511, type: !20)
!5479 = !DILocation(line: 511, column: 15, scope: !511)
!5480 = !DILocalVariable(name: "pktsiz", scope: !511, file: !396, line: 512, type: !33)
!5481 = !DILocation(line: 512, column: 6, scope: !511)
!5482 = !DILocation(line: 512, column: 15, scope: !511)
!5483 = !DILocation(line: 512, column: 24, scope: !511)
!5484 = !DILocation(line: 512, column: 22, scope: !511)
!5485 = !DILocation(line: 514, column: 7, scope: !511)
!5486 = !DILocation(line: 515, column: 26, scope: !511)
!5487 = !DILocation(line: 515, column: 14, scope: !511)
!5488 = !DILocation(line: 516, column: 12, scope: !5489)
!5489 = distinct !DILexicalBlock(scope: !511, file: !396, line: 516, column: 2)
!5490 = !DILocation(line: 516, column: 10, scope: !5489)
!5491 = !DILocation(line: 516, column: 7, scope: !5489)
!5492 = !DILocation(line: 516, column: 20, scope: !5493)
!5493 = !DILexicalBlockFile(scope: !5494, file: !396, discriminator: 1)
!5494 = distinct !DILexicalBlock(scope: !5489, file: !396, line: 516, column: 2)
!5495 = !DILocation(line: 516, column: 19, scope: !5493)
!5496 = !DILocation(line: 516, column: 2, scope: !5493)
!5497 = !DILocation(line: 517, column: 8, scope: !5498)
!5498 = distinct !DILexicalBlock(scope: !5494, file: !396, line: 516, column: 41)
!5499 = !DILocation(line: 517, column: 3, scope: !5498)
!5500 = !DILocation(line: 519, column: 9, scope: !5501)
!5501 = distinct !DILexicalBlock(scope: !5498, file: !396, line: 519, column: 7)
!5502 = !DILocation(line: 519, column: 8, scope: !5501)
!5503 = !DILocation(line: 519, column: 12, scope: !5501)
!5504 = !DILocation(line: 519, column: 26, scope: !5501)
!5505 = !DILocation(line: 519, column: 7, scope: !5498)
!5506 = !DILocalVariable(name: "ui", scope: !5507, file: !396, line: 520, type: !48)
!5507 = distinct !DILexicalBlock(scope: !5501, file: !396, line: 519, column: 41)
!5508 = !DILocation(line: 520, column: 13, scope: !5507)
!5509 = !DILocation(line: 522, column: 12, scope: !5510)
!5510 = distinct !DILexicalBlock(scope: !5507, file: !396, line: 522, column: 8)
!5511 = !DILocation(line: 522, column: 18, scope: !5510)
!5512 = !DILocation(line: 522, column: 15, scope: !5510)
!5513 = !DILocation(line: 522, column: 8, scope: !5507)
!5514 = !DILocation(line: 523, column: 5, scope: !5510)
!5515 = !DILocation(line: 525, column: 9, scope: !5516)
!5516 = distinct !DILexicalBlock(scope: !5507, file: !396, line: 525, column: 8)
!5517 = !DILocation(line: 525, column: 16, scope: !5516)
!5518 = !DILocation(line: 525, column: 20, scope: !5519)
!5519 = !DILexicalBlockFile(scope: !5516, file: !396, discriminator: 1)
!5520 = !DILocation(line: 525, column: 8, scope: !5519)
!5521 = !DILocation(line: 526, column: 5, scope: !5516)
!5522 = !DILocation(line: 529, column: 11, scope: !5507)
!5523 = !DILocation(line: 529, column: 14, scope: !5507)
!5524 = !DILocation(line: 529, column: 9, scope: !5507)
!5525 = !DILocation(line: 530, column: 4, scope: !5526)
!5526 = distinct !DILexicalBlock(scope: !5507, file: !396, line: 530, column: 4)
!5527 = !DILocation(line: 531, column: 9, scope: !5507)
!5528 = !DILocation(line: 531, column: 12, scope: !5507)
!5529 = !DILocation(line: 531, column: 7, scope: !5507)
!5530 = !DILocation(line: 533, column: 9, scope: !5507)
!5531 = !DILocation(line: 533, column: 18, scope: !5507)
!5532 = !DILocation(line: 533, column: 16, scope: !5507)
!5533 = !DILocation(line: 533, column: 7, scope: !5507)
!5534 = !DILocation(line: 534, column: 8, scope: !5535)
!5535 = distinct !DILexicalBlock(scope: !5507, file: !396, line: 534, column: 8)
!5536 = !DILocation(line: 534, column: 13, scope: !5535)
!5537 = !DILocation(line: 534, column: 11, scope: !5535)
!5538 = !DILocation(line: 534, column: 20, scope: !5535)
!5539 = !DILocation(line: 534, column: 23, scope: !5540)
!5540 = !DILexicalBlockFile(scope: !5535, file: !396, discriminator: 1)
!5541 = !DILocation(line: 534, column: 32, scope: !5540)
!5542 = !DILocation(line: 534, column: 30, scope: !5540)
!5543 = !DILocation(line: 534, column: 8, scope: !5540)
!5544 = !DILocation(line: 535, column: 5, scope: !5535)
!5545 = !DILocation(line: 537, column: 4, scope: !5507)
!5546 = !DILocation(line: 540, column: 24, scope: !5498)
!5547 = !DILocation(line: 540, column: 15, scope: !5498)
!5548 = !DILocation(line: 540, column: 13, scope: !5498)
!5549 = !DILocation(line: 541, column: 7, scope: !5550)
!5550 = distinct !DILexicalBlock(scope: !5498, file: !396, line: 541, column: 7)
!5551 = !DILocation(line: 541, column: 17, scope: !5550)
!5552 = !DILocation(line: 541, column: 7, scope: !5498)
!5553 = !DILocation(line: 542, column: 4, scope: !5550)
!5554 = !DILocation(line: 544, column: 13, scope: !5550)
!5555 = !DILocation(line: 546, column: 9, scope: !5556)
!5556 = distinct !DILexicalBlock(scope: !5498, file: !396, line: 546, column: 7)
!5557 = !DILocation(line: 546, column: 15, scope: !5556)
!5558 = !DILocation(line: 546, column: 7, scope: !5498)
!5559 = !DILocation(line: 547, column: 40, scope: !5556)
!5560 = !DILocation(line: 547, column: 4, scope: !5556)
!5561 = !DILocation(line: 549, column: 7, scope: !5562)
!5562 = distinct !DILexicalBlock(scope: !5498, file: !396, line: 549, column: 7)
!5563 = !DILocation(line: 549, column: 21, scope: !5562)
!5564 = !DILocation(line: 549, column: 19, scope: !5562)
!5565 = !DILocation(line: 549, column: 34, scope: !5562)
!5566 = !DILocation(line: 549, column: 31, scope: !5562)
!5567 = !DILocation(line: 549, column: 7, scope: !5498)
!5568 = !DILocation(line: 550, column: 4, scope: !5562)
!5569 = !DILocation(line: 551, column: 7, scope: !5570)
!5570 = distinct !DILexicalBlock(scope: !5498, file: !396, line: 551, column: 7)
!5571 = !DILocation(line: 551, column: 14, scope: !5570)
!5572 = !DILocation(line: 551, column: 17, scope: !5573)
!5573 = !DILexicalBlockFile(scope: !5570, file: !396, discriminator: 1)
!5574 = !DILocation(line: 551, column: 22, scope: !5573)
!5575 = !DILocation(line: 551, column: 20, scope: !5573)
!5576 = !DILocation(line: 551, column: 34, scope: !5573)
!5577 = !DILocation(line: 551, column: 32, scope: !5573)
!5578 = !DILocation(line: 551, column: 7, scope: !5573)
!5579 = !DILocation(line: 552, column: 4, scope: !5570)
!5580 = !DILocation(line: 554, column: 7, scope: !5581)
!5581 = distinct !DILexicalBlock(scope: !5498, file: !396, line: 554, column: 7)
!5582 = !DILocation(line: 554, column: 7, scope: !5498)
!5583 = !DILocation(line: 556, column: 12, scope: !5584)
!5584 = distinct !DILexicalBlock(scope: !5581, file: !396, line: 554, column: 16)
!5585 = !DILocation(line: 556, column: 17, scope: !5584)
!5586 = !DILocation(line: 556, column: 21, scope: !5584)
!5587 = !DILocation(line: 556, column: 4, scope: !5584)
!5588 = !DILocation(line: 557, column: 19, scope: !5584)
!5589 = !DILocation(line: 557, column: 16, scope: !5584)
!5590 = !DILocation(line: 558, column: 11, scope: !5584)
!5591 = !DILocation(line: 558, column: 8, scope: !5584)
!5592 = !DILocation(line: 559, column: 3, scope: !5584)
!5593 = !DILocation(line: 561, column: 10, scope: !5594)
!5594 = distinct !DILexicalBlock(scope: !5595, file: !396, line: 561, column: 8)
!5595 = distinct !DILexicalBlock(scope: !5581, file: !396, line: 559, column: 10)
!5596 = !DILocation(line: 561, column: 9, scope: !5594)
!5597 = !DILocation(line: 561, column: 13, scope: !5594)
!5598 = !DILocation(line: 561, column: 27, scope: !5594)
!5599 = !DILocation(line: 561, column: 8, scope: !5595)
!5600 = !DILocation(line: 562, column: 13, scope: !5601)
!5601 = distinct !DILexicalBlock(scope: !5594, file: !396, line: 561, column: 42)
!5602 = !DILocation(line: 562, column: 18, scope: !5601)
!5603 = !DILocation(line: 562, column: 21, scope: !5601)
!5604 = !DILocation(line: 562, column: 26, scope: !5601)
!5605 = !DILocation(line: 562, column: 36, scope: !5601)
!5606 = !DILocation(line: 562, column: 5, scope: !5601)
!5607 = !DILocation(line: 563, column: 7, scope: !5601)
!5608 = !DILocation(line: 563, column: 14, scope: !5601)
!5609 = !DILocation(line: 563, column: 24, scope: !5601)
!5610 = !DILocation(line: 563, column: 11, scope: !5601)
!5611 = !DILocation(line: 563, column: 30, scope: !5601)
!5612 = !DILocation(line: 564, column: 20, scope: !5601)
!5613 = !DILocation(line: 564, column: 17, scope: !5601)
!5614 = !DILocation(line: 565, column: 12, scope: !5601)
!5615 = !DILocation(line: 565, column: 9, scope: !5601)
!5616 = !DILocation(line: 566, column: 4, scope: !5601)
!5617 = !DILocation(line: 566, column: 16, scope: !5618)
!5618 = !DILexicalBlockFile(scope: !5619, file: !396, discriminator: 1)
!5619 = distinct !DILexicalBlock(scope: !5594, file: !396, line: 566, column: 15)
!5620 = !DILocation(line: 566, column: 15, scope: !5618)
!5621 = !DILocation(line: 566, column: 19, scope: !5618)
!5622 = !DILocalVariable(name: "bitlength", scope: !5623, file: !396, line: 567, type: !33)
!5623 = distinct !DILexicalBlock(scope: !5619, file: !396, line: 566, column: 42)
!5624 = !DILocation(line: 567, column: 9, scope: !5623)
!5625 = !DILocalVariable(name: "i", scope: !5623, file: !396, line: 567, type: !33)
!5626 = !DILocation(line: 567, column: 20, scope: !5623)
!5627 = !DILocalVariable(name: "wp", scope: !5623, file: !396, line: 568, type: !20)
!5628 = !DILocation(line: 568, column: 13, scope: !5623)
!5629 = !DILocation(line: 571, column: 9, scope: !5630)
!5630 = distinct !DILexicalBlock(scope: !5623, file: !396, line: 571, column: 9)
!5631 = !DILocation(line: 571, column: 23, scope: !5630)
!5632 = !DILocation(line: 571, column: 32, scope: !5630)
!5633 = !DILocation(line: 571, column: 21, scope: !5630)
!5634 = !DILocation(line: 571, column: 35, scope: !5630)
!5635 = !DILocation(line: 571, column: 42, scope: !5630)
!5636 = !DILocation(line: 571, column: 39, scope: !5630)
!5637 = !DILocation(line: 571, column: 9, scope: !5623)
!5638 = !DILocation(line: 572, column: 6, scope: !5630)
!5639 = !DILocation(line: 574, column: 10, scope: !5623)
!5640 = !DILocation(line: 574, column: 8, scope: !5623)
!5641 = !DILocation(line: 575, column: 27, scope: !5623)
!5642 = !DILocation(line: 575, column: 11, scope: !5623)
!5643 = !DILocation(line: 575, column: 8, scope: !5623)
!5644 = !DILocation(line: 576, column: 12, scope: !5645)
!5645 = distinct !DILexicalBlock(scope: !5623, file: !396, line: 576, column: 5)
!5646 = !DILocation(line: 576, column: 10, scope: !5645)
!5647 = !DILocation(line: 576, column: 17, scope: !5648)
!5648 = !DILexicalBlockFile(scope: !5649, file: !396, discriminator: 1)
!5649 = distinct !DILexicalBlock(scope: !5645, file: !396, line: 576, column: 5)
!5650 = !DILocation(line: 576, column: 21, scope: !5648)
!5651 = !DILocation(line: 576, column: 30, scope: !5648)
!5652 = !DILocation(line: 576, column: 19, scope: !5648)
!5653 = !DILocation(line: 576, column: 5, scope: !5648)
!5654 = !DILocalVariable(name: "d1", scope: !5655, file: !396, line: 577, type: !21)
!5655 = distinct !DILexicalBlock(scope: !5649, file: !396, line: 576, column: 39)
!5656 = !DILocation(line: 577, column: 13, scope: !5655)
!5657 = !DILocalVariable(name: "d2", scope: !5655, file: !396, line: 577, type: !21)
!5658 = !DILocation(line: 577, column: 17, scope: !5655)
!5659 = !DILocalVariable(name: "b", scope: !5655, file: !396, line: 578, type: !4326)
!5660 = !DILocation(line: 578, column: 11, scope: !5655)
!5661 = !DILocation(line: 580, column: 18, scope: !5655)
!5662 = !DILocation(line: 580, column: 21, scope: !5655)
!5663 = !DILocation(line: 580, column: 27, scope: !5655)
!5664 = !DILocation(line: 580, column: 25, scope: !5655)
!5665 = !DILocation(line: 580, column: 16, scope: !5655)
!5666 = !DILocation(line: 580, column: 10, scope: !5655)
!5667 = !DILocation(line: 580, column: 8, scope: !5655)
!5668 = !DILocation(line: 581, column: 16, scope: !5655)
!5669 = !DILocation(line: 581, column: 18, scope: !5655)
!5670 = !DILocation(line: 581, column: 24, scope: !5655)
!5671 = !DILocation(line: 581, column: 11, scope: !5655)
!5672 = !DILocation(line: 581, column: 9, scope: !5655)
!5673 = !DILocation(line: 582, column: 15, scope: !5655)
!5674 = !DILocation(line: 582, column: 17, scope: !5655)
!5675 = !DILocation(line: 582, column: 11, scope: !5655)
!5676 = !DILocation(line: 582, column: 9, scope: !5655)
!5677 = !DILocation(line: 583, column: 28, scope: !5655)
!5678 = !DILocation(line: 583, column: 40, scope: !5655)
!5679 = !DILocation(line: 583, column: 44, scope: !5655)
!5680 = !DILocation(line: 583, column: 12, scope: !5655)
!5681 = !DILocation(line: 583, column: 9, scope: !5655)
!5682 = !DILocation(line: 584, column: 5, scope: !5655)
!5683 = !DILocation(line: 576, column: 35, scope: !5684)
!5684 = !DILexicalBlockFile(scope: !5649, file: !396, discriminator: 2)
!5685 = !DILocation(line: 576, column: 5, scope: !5684)
!5686 = !DILocation(line: 585, column: 19, scope: !5623)
!5687 = !DILocation(line: 585, column: 22, scope: !5623)
!5688 = !DILocation(line: 585, column: 17, scope: !5623)
!5689 = !DILocation(line: 585, column: 31, scope: !5690)
!5690 = !DILexicalBlockFile(scope: !5623, file: !396, discriminator: 1)
!5691 = !DILocation(line: 585, column: 34, scope: !5690)
!5692 = !DILocation(line: 585, column: 29, scope: !5690)
!5693 = !DILocation(line: 585, column: 17, scope: !5690)
!5694 = !DILocation(line: 585, column: 17, scope: !5695)
!5695 = !DILexicalBlockFile(scope: !5623, file: !396, discriminator: 2)
!5696 = !DILocation(line: 585, column: 17, scope: !5697)
!5697 = !DILexicalBlockFile(scope: !5623, file: !396, discriminator: 3)
!5698 = !DILocation(line: 585, column: 15, scope: !5697)
!5699 = !DILocation(line: 586, column: 27, scope: !5623)
!5700 = !DILocation(line: 586, column: 40, scope: !5623)
!5701 = !DILocation(line: 586, column: 11, scope: !5623)
!5702 = !DILocation(line: 586, column: 8, scope: !5623)
!5703 = !DILocation(line: 588, column: 21, scope: !5623)
!5704 = !DILocation(line: 588, column: 26, scope: !5623)
!5705 = !DILocation(line: 588, column: 24, scope: !5623)
!5706 = !DILocation(line: 588, column: 17, scope: !5623)
!5707 = !DILocation(line: 589, column: 12, scope: !5623)
!5708 = !DILocation(line: 589, column: 9, scope: !5623)
!5709 = !DILocation(line: 590, column: 4, scope: !5623)
!5710 = !DILocation(line: 592, column: 2, scope: !5498)
!5711 = !DILocation(line: 516, column: 30, scope: !5712)
!5712 = !DILexicalBlockFile(scope: !5494, file: !396, discriminator: 2)
!5713 = !DILocation(line: 516, column: 27, scope: !5712)
!5714 = !DILocation(line: 516, column: 2, scope: !5712)
!5715 = !DILocation(line: 594, column: 3, scope: !511)
!5716 = !DILocation(line: 594, column: 7, scope: !511)
!5717 = !DILocation(line: 595, column: 6, scope: !5718)
!5718 = distinct !DILexicalBlock(scope: !511, file: !396, line: 595, column: 6)
!5719 = !DILocation(line: 595, column: 6, scope: !511)
!5720 = !DILocation(line: 596, column: 14, scope: !5718)
!5721 = !DILocation(line: 596, column: 26, scope: !5718)
!5722 = !DILocation(line: 596, column: 4, scope: !5718)
!5723 = !DILocation(line: 596, column: 12, scope: !5718)
!5724 = !DILocation(line: 596, column: 3, scope: !5718)
!5725 = !DILocation(line: 598, column: 7, scope: !5726)
!5726 = distinct !DILexicalBlock(scope: !511, file: !396, line: 598, column: 6)
!5727 = !DILocation(line: 598, column: 6, scope: !511)
!5728 = !DILocation(line: 599, column: 10, scope: !5726)
!5729 = !DILocation(line: 599, column: 12, scope: !5726)
!5730 = !DILocation(line: 599, column: 8, scope: !5726)
!5731 = !DILocation(line: 599, column: 3, scope: !5726)
!5732 = !DILocation(line: 601, column: 9, scope: !511)
!5733 = !DILocation(line: 601, column: 2, scope: !511)
!5734 = !DILocation(line: 602, column: 1, scope: !511)
!5735 = !DILocalVariable(name: "msg", arg: 1, scope: !508, file: !396, line: 470, type: !20)
!5736 = !DILocation(line: 470, column: 25, scope: !508)
!5737 = !DILocalVariable(name: "msg_len", arg: 2, scope: !508, file: !396, line: 470, type: !33)
!5738 = !DILocation(line: 470, column: 34, scope: !508)
!5739 = !DILocalVariable(name: "an_list", arg: 3, scope: !508, file: !396, line: 470, type: !493)
!5740 = !DILocation(line: 470, column: 51, scope: !508)
!5741 = !DILocalVariable(name: "ns_list", arg: 4, scope: !508, file: !396, line: 470, type: !493)
!5742 = !DILocation(line: 470, column: 68, scope: !508)
!5743 = !DILocalVariable(name: "ar_list", arg: 5, scope: !508, file: !396, line: 471, type: !493)
!5744 = !DILocation(line: 471, column: 11, scope: !508)
!5745 = !DILocalVariable(name: "fn", scope: !508, file: !396, line: 472, type: !19)
!5746 = !DILocation(line: 472, column: 8, scope: !508)
!5747 = !DILocalVariable(name: "hdr", scope: !508, file: !396, line: 473, type: !399)
!5748 = !DILocation(line: 473, column: 12, scope: !508)
!5749 = !DILocalVariable(name: "rp", scope: !508, file: !396, line: 474, type: !20)
!5750 = !DILocation(line: 474, column: 10, scope: !508)
!5751 = !DILocation(line: 476, column: 8, scope: !5752)
!5752 = distinct !DILexicalBlock(scope: !508, file: !396, line: 476, column: 6)
!5753 = !DILocation(line: 476, column: 14, scope: !5752)
!5754 = !DILocation(line: 476, column: 6, scope: !508)
!5755 = !DILocation(line: 477, column: 35, scope: !5752)
!5756 = !DILocation(line: 477, column: 3, scope: !5752)
!5757 = !DILocation(line: 479, column: 6, scope: !5758)
!5758 = distinct !DILexicalBlock(scope: !508, file: !396, line: 479, column: 6)
!5759 = !DILocation(line: 479, column: 14, scope: !5758)
!5760 = !DILocation(line: 479, column: 6, scope: !508)
!5761 = !DILocation(line: 480, column: 3, scope: !5758)
!5762 = !DILocation(line: 482, column: 21, scope: !508)
!5763 = !DILocation(line: 482, column: 8, scope: !508)
!5764 = !DILocation(line: 482, column: 6, scope: !508)
!5765 = !DILocation(line: 483, column: 19, scope: !508)
!5766 = !DILocation(line: 483, column: 23, scope: !508)
!5767 = !DILocation(line: 483, column: 7, scope: !508)
!5768 = !DILocation(line: 483, column: 5, scope: !508)
!5769 = !DILocation(line: 485, column: 6, scope: !5770)
!5770 = distinct !DILexicalBlock(scope: !508, file: !396, line: 485, column: 6)
!5771 = !DILocation(line: 485, column: 11, scope: !5770)
!5772 = !DILocation(line: 485, column: 6, scope: !508)
!5773 = !DILocation(line: 487, column: 25, scope: !5774)
!5774 = distinct !DILexicalBlock(scope: !5770, file: !396, line: 485, column: 18)
!5775 = !DILocation(line: 487, column: 29, scope: !5774)
!5776 = !DILocation(line: 487, column: 35, scope: !5774)
!5777 = !DILocation(line: 487, column: 33, scope: !5774)
!5778 = !DILocation(line: 487, column: 8, scope: !5774)
!5779 = !DILocation(line: 487, column: 6, scope: !5774)
!5780 = !DILocation(line: 488, column: 6, scope: !5774)
!5781 = !DILocation(line: 489, column: 7, scope: !5782)
!5782 = distinct !DILexicalBlock(scope: !5774, file: !396, line: 489, column: 7)
!5783 = !DILocation(line: 489, column: 12, scope: !5782)
!5784 = !DILocation(line: 489, column: 18, scope: !5782)
!5785 = !DILocation(line: 489, column: 16, scope: !5782)
!5786 = !DILocation(line: 489, column: 10, scope: !5782)
!5787 = !DILocation(line: 489, column: 7, scope: !5774)
!5788 = !DILocation(line: 490, column: 4, scope: !5782)
!5789 = !DILocation(line: 491, column: 2, scope: !5774)
!5790 = !DILocation(line: 493, column: 22, scope: !508)
!5791 = !DILocation(line: 493, column: 31, scope: !508)
!5792 = !DILocation(line: 493, column: 41, scope: !508)
!5793 = !DILocation(line: 493, column: 46, scope: !508)
!5794 = !DILocation(line: 493, column: 35, scope: !508)
!5795 = !DILocation(line: 493, column: 54, scope: !508)
!5796 = !DILocation(line: 493, column: 59, scope: !508)
!5797 = !DILocation(line: 493, column: 7, scope: !5798)
!5798 = !DILexicalBlockFile(scope: !508, file: !396, discriminator: 1)
!5799 = !DILocation(line: 493, column: 5, scope: !508)
!5800 = !DILocation(line: 494, column: 7, scope: !5801)
!5801 = distinct !DILexicalBlock(scope: !508, file: !396, line: 494, column: 6)
!5802 = !DILocation(line: 494, column: 6, scope: !508)
!5803 = !DILocation(line: 495, column: 3, scope: !5801)
!5804 = !DILocation(line: 497, column: 22, scope: !508)
!5805 = !DILocation(line: 497, column: 31, scope: !508)
!5806 = !DILocation(line: 497, column: 41, scope: !508)
!5807 = !DILocation(line: 497, column: 46, scope: !508)
!5808 = !DILocation(line: 497, column: 35, scope: !508)
!5809 = !DILocation(line: 497, column: 54, scope: !508)
!5810 = !DILocation(line: 497, column: 59, scope: !508)
!5811 = !DILocation(line: 497, column: 7, scope: !5798)
!5812 = !DILocation(line: 497, column: 5, scope: !508)
!5813 = !DILocation(line: 498, column: 7, scope: !5814)
!5814 = distinct !DILexicalBlock(scope: !508, file: !396, line: 498, column: 6)
!5815 = !DILocation(line: 498, column: 6, scope: !508)
!5816 = !DILocation(line: 499, column: 3, scope: !5814)
!5817 = !DILocation(line: 501, column: 22, scope: !508)
!5818 = !DILocation(line: 501, column: 31, scope: !508)
!5819 = !DILocation(line: 501, column: 41, scope: !508)
!5820 = !DILocation(line: 501, column: 46, scope: !508)
!5821 = !DILocation(line: 501, column: 35, scope: !508)
!5822 = !DILocation(line: 501, column: 54, scope: !508)
!5823 = !DILocation(line: 501, column: 59, scope: !508)
!5824 = !DILocation(line: 501, column: 7, scope: !5798)
!5825 = !DILocation(line: 501, column: 5, scope: !508)
!5826 = !DILocation(line: 502, column: 7, scope: !5827)
!5827 = distinct !DILexicalBlock(scope: !508, file: !396, line: 502, column: 6)
!5828 = !DILocation(line: 502, column: 6, scope: !508)
!5829 = !DILocation(line: 503, column: 3, scope: !5827)
!5830 = !DILocation(line: 505, column: 2, scope: !508)
!5831 = !DILocation(line: 506, column: 1, scope: !508)
!5832 = !DILocalVariable(name: "target_list", arg: 1, scope: !526, file: !396, line: 864, type: !493)
!5833 = !DILocation(line: 864, column: 39, scope: !526)
!5834 = !DILocalVariable(name: "section", arg: 2, scope: !526, file: !396, line: 864, type: !20)
!5835 = !DILocation(line: 864, column: 60, scope: !526)
!5836 = !DILocalVariable(name: "count", arg: 3, scope: !526, file: !396, line: 864, type: !33)
!5837 = !DILocation(line: 864, column: 73, scope: !526)
!5838 = !DILocalVariable(name: "mesg", arg: 4, scope: !526, file: !396, line: 865, type: !20)
!5839 = !DILocation(line: 865, column: 18, scope: !526)
!5840 = !DILocalVariable(name: "mesg_len", arg: 5, scope: !526, file: !396, line: 865, type: !33)
!5841 = !DILocation(line: 865, column: 28, scope: !526)
!5842 = !DILocalVariable(name: "fn", scope: !526, file: !396, line: 866, type: !19)
!5843 = !DILocation(line: 866, column: 8, scope: !526)
!5844 = !DILocalVariable(name: "rc_list", scope: !526, file: !396, line: 867, type: !493)
!5845 = !DILocation(line: 867, column: 10, scope: !526)
!5846 = !DILocalVariable(name: "gl", scope: !526, file: !396, line: 867, type: !493)
!5847 = !DILocation(line: 867, column: 20, scope: !526)
!5848 = !DILocalVariable(name: "buf", scope: !526, file: !396, line: 868, type: !5849)
!5849 = !DICompositeType(tag: DW_TAG_array_type, baseType: !21, size: 4096, align: 8, elements: !5850)
!5850 = !{!5851}
!5851 = !DISubrange(count: 512)
!5852 = !DILocation(line: 868, column: 9, scope: !526)
!5853 = !DILocalVariable(name: "msg_end", scope: !526, file: !396, line: 869, type: !20)
!5854 = !DILocation(line: 869, column: 10, scope: !526)
!5855 = !DILocalVariable(name: "rp", scope: !526, file: !396, line: 869, type: !20)
!5856 = !DILocation(line: 869, column: 20, scope: !526)
!5857 = !DILocalVariable(name: "i", scope: !526, file: !396, line: 870, type: !33)
!5858 = !DILocation(line: 870, column: 6, scope: !526)
!5859 = !DILocation(line: 872, column: 8, scope: !5860)
!5860 = distinct !DILexicalBlock(scope: !526, file: !396, line: 872, column: 6)
!5861 = !DILocation(line: 872, column: 14, scope: !5860)
!5862 = !DILocation(line: 872, column: 6, scope: !526)
!5863 = !DILocation(line: 873, column: 35, scope: !5860)
!5864 = !DILocation(line: 873, column: 3, scope: !5860)
!5865 = !DILocation(line: 876, column: 12, scope: !526)
!5866 = !DILocation(line: 876, column: 10, scope: !526)
!5867 = !DILocation(line: 877, column: 7, scope: !5868)
!5868 = distinct !DILexicalBlock(scope: !526, file: !396, line: 877, column: 6)
!5869 = !DILocation(line: 877, column: 6, scope: !526)
!5870 = !DILocation(line: 878, column: 3, scope: !5868)
!5871 = !DILocation(line: 880, column: 7, scope: !526)
!5872 = !DILocation(line: 880, column: 5, scope: !526)
!5873 = !DILocation(line: 881, column: 12, scope: !526)
!5874 = !DILocation(line: 881, column: 19, scope: !526)
!5875 = !DILocation(line: 881, column: 17, scope: !526)
!5876 = !DILocation(line: 881, column: 10, scope: !526)
!5877 = !DILocation(line: 882, column: 9, scope: !5878)
!5878 = distinct !DILexicalBlock(scope: !526, file: !396, line: 882, column: 2)
!5879 = !DILocation(line: 882, column: 7, scope: !5878)
!5880 = !DILocation(line: 882, column: 14, scope: !5881)
!5881 = !DILexicalBlockFile(scope: !5882, file: !396, discriminator: 1)
!5882 = distinct !DILexicalBlock(scope: !5878, file: !396, line: 882, column: 2)
!5883 = !DILocation(line: 882, column: 18, scope: !5881)
!5884 = !DILocation(line: 882, column: 16, scope: !5881)
!5885 = !DILocation(line: 882, column: 2, scope: !5881)
!5886 = !DILocalVariable(name: "rname", scope: !5887, file: !396, line: 883, type: !20)
!5887 = distinct !DILexicalBlock(scope: !5882, file: !396, line: 882, column: 30)
!5888 = !DILocation(line: 883, column: 11, scope: !5887)
!5889 = !DILocalVariable(name: "rp_ex", scope: !5887, file: !396, line: 883, type: !20)
!5890 = !DILocation(line: 883, column: 19, scope: !5887)
!5891 = !DILocalVariable(name: "rdp", scope: !5887, file: !396, line: 883, type: !20)
!5892 = !DILocation(line: 883, column: 27, scope: !5887)
!5893 = !DILocalVariable(name: "r_type", scope: !5887, file: !396, line: 884, type: !48)
!5894 = !DILocation(line: 884, column: 12, scope: !5887)
!5895 = !DILocalVariable(name: "r_class", scope: !5887, file: !396, line: 884, type: !48)
!5896 = !DILocation(line: 884, column: 20, scope: !5887)
!5897 = !DILocalVariable(name: "rdlen", scope: !5887, file: !396, line: 885, type: !48)
!5898 = !DILocation(line: 885, column: 12, scope: !5887)
!5899 = !DILocalVariable(name: "rdlen_ex", scope: !5887, file: !396, line: 885, type: !48)
!5900 = !DILocation(line: 885, column: 19, scope: !5887)
!5901 = !DILocalVariable(name: "r_ttl", scope: !5887, file: !396, line: 886, type: !72)
!5902 = !DILocation(line: 886, column: 12, scope: !5887)
!5903 = !DILocalVariable(name: "rrl", scope: !5887, file: !396, line: 887, type: !460)
!5904 = !DILocation(line: 887, column: 12, scope: !5887)
!5905 = !DILocation(line: 890, column: 11, scope: !5887)
!5906 = !DILocation(line: 890, column: 9, scope: !5887)
!5907 = !DILocation(line: 891, column: 25, scope: !5887)
!5908 = !DILocation(line: 891, column: 29, scope: !5887)
!5909 = !DILocation(line: 891, column: 8, scope: !5887)
!5910 = !DILocation(line: 891, column: 6, scope: !5887)
!5911 = !DILocation(line: 892, column: 8, scope: !5912)
!5912 = distinct !DILexicalBlock(scope: !5887, file: !396, line: 892, column: 7)
!5913 = !DILocation(line: 892, column: 7, scope: !5887)
!5914 = !DILocation(line: 893, column: 4, scope: !5912)
!5915 = !DILocation(line: 895, column: 7, scope: !5916)
!5916 = distinct !DILexicalBlock(scope: !5887, file: !396, line: 895, column: 7)
!5917 = !DILocation(line: 895, column: 10, scope: !5916)
!5918 = !DILocation(line: 895, column: 31, scope: !5916)
!5919 = !DILocation(line: 895, column: 52, scope: !5916)
!5920 = !DILocation(line: 895, column: 50, scope: !5916)
!5921 = !DILocation(line: 895, column: 7, scope: !5887)
!5922 = !DILocation(line: 896, column: 4, scope: !5916)
!5923 = !DILocation(line: 898, column: 3, scope: !5924)
!5924 = distinct !DILexicalBlock(scope: !5887, file: !396, line: 898, column: 3)
!5925 = !DILocation(line: 899, column: 3, scope: !5926)
!5926 = distinct !DILexicalBlock(scope: !5887, file: !396, line: 899, column: 3)
!5927 = !DILocation(line: 900, column: 3, scope: !5928)
!5928 = distinct !DILexicalBlock(scope: !5887, file: !396, line: 900, column: 3)
!5929 = !DILocation(line: 901, column: 3, scope: !5930)
!5930 = distinct !DILexicalBlock(scope: !5887, file: !396, line: 901, column: 3)
!5931 = !DILocation(line: 903, column: 9, scope: !5887)
!5932 = !DILocation(line: 903, column: 7, scope: !5887)
!5933 = !DILocation(line: 904, column: 9, scope: !5887)
!5934 = !DILocation(line: 904, column: 6, scope: !5887)
!5935 = !DILocation(line: 905, column: 7, scope: !5936)
!5936 = distinct !DILexicalBlock(scope: !5887, file: !396, line: 905, column: 7)
!5937 = !DILocation(line: 905, column: 12, scope: !5936)
!5938 = !DILocation(line: 905, column: 10, scope: !5936)
!5939 = !DILocation(line: 905, column: 7, scope: !5887)
!5940 = !DILocation(line: 906, column: 4, scope: !5936)
!5941 = !DILocation(line: 909, column: 13, scope: !5942)
!5942 = distinct !DILexicalBlock(scope: !5887, file: !396, line: 909, column: 3)
!5943 = !DILocation(line: 909, column: 22, scope: !5942)
!5944 = !DILocation(line: 909, column: 11, scope: !5942)
!5945 = !DILocation(line: 909, column: 8, scope: !5942)
!5946 = !DILocation(line: 909, column: 28, scope: !5947)
!5947 = !DILexicalBlockFile(scope: !5948, file: !396, discriminator: 1)
!5948 = distinct !DILexicalBlock(scope: !5942, file: !396, line: 909, column: 3)
!5949 = !DILocation(line: 909, column: 32, scope: !5947)
!5950 = !DILocation(line: 909, column: 3, scope: !5947)
!5951 = !DILocalVariable(name: "rc", scope: !5952, file: !396, line: 910, type: !454)
!5952 = distinct !DILexicalBlock(scope: !5948, file: !396, line: 909, column: 58)
!5953 = !DILocation(line: 910, column: 18, scope: !5952)
!5954 = !DILocation(line: 912, column: 27, scope: !5952)
!5955 = !DILocation(line: 912, column: 31, scope: !5952)
!5956 = !DILocation(line: 912, column: 9, scope: !5952)
!5957 = !DILocation(line: 912, column: 7, scope: !5952)
!5958 = !DILocation(line: 913, column: 9, scope: !5959)
!5959 = distinct !DILexicalBlock(scope: !5952, file: !396, line: 913, column: 8)
!5960 = !DILocation(line: 913, column: 13, scope: !5959)
!5961 = !DILocation(line: 913, column: 18, scope: !5959)
!5962 = !DILocation(line: 913, column: 22, scope: !5959)
!5963 = !DILocation(line: 913, column: 28, scope: !5959)
!5964 = !DILocation(line: 913, column: 38, scope: !5959)
!5965 = !DILocation(line: 913, column: 35, scope: !5959)
!5966 = !DILocation(line: 913, column: 46, scope: !5959)
!5967 = !DILocation(line: 914, column: 9, scope: !5959)
!5968 = !DILocation(line: 914, column: 13, scope: !5959)
!5969 = !DILocation(line: 914, column: 18, scope: !5959)
!5970 = !DILocation(line: 914, column: 22, scope: !5959)
!5971 = !DILocation(line: 914, column: 28, scope: !5959)
!5972 = !DILocation(line: 914, column: 39, scope: !5959)
!5973 = !DILocation(line: 914, column: 36, scope: !5959)
!5974 = !DILocation(line: 914, column: 48, scope: !5959)
!5975 = !DILocation(line: 915, column: 25, scope: !5959)
!5976 = !DILocation(line: 915, column: 31, scope: !5959)
!5977 = !DILocation(line: 915, column: 38, scope: !5959)
!5978 = !DILocation(line: 915, column: 9, scope: !5959)
!5979 = !DILocation(line: 913, column: 8, scope: !5980)
!5980 = !DILexicalBlockFile(scope: !5952, file: !396, discriminator: 1)
!5981 = !DILocation(line: 916, column: 11, scope: !5982)
!5982 = distinct !DILexicalBlock(scope: !5983, file: !396, line: 916, column: 9)
!5983 = distinct !DILexicalBlock(scope: !5959, file: !396, line: 915, column: 62)
!5984 = !DILocation(line: 916, column: 17, scope: !5982)
!5985 = !DILocation(line: 916, column: 9, scope: !5983)
!5986 = !DILocation(line: 918, column: 38, scope: !5982)
!5987 = !DILocation(line: 918, column: 42, scope: !5982)
!5988 = !DILocation(line: 918, column: 65, scope: !5982)
!5989 = !DILocation(line: 917, column: 6, scope: !5982)
!5990 = !DILocation(line: 919, column: 5, scope: !5983)
!5991 = !DILocation(line: 921, column: 3, scope: !5952)
!5992 = !DILocation(line: 909, column: 48, scope: !5993)
!5993 = !DILexicalBlockFile(scope: !5948, file: !396, discriminator: 2)
!5994 = !DILocation(line: 909, column: 52, scope: !5993)
!5995 = !DILocation(line: 909, column: 46, scope: !5993)
!5996 = !DILocation(line: 909, column: 3, scope: !5993)
!5997 = !DILocation(line: 924, column: 8, scope: !5998)
!5998 = distinct !DILexicalBlock(scope: !5887, file: !396, line: 924, column: 7)
!5999 = !DILocation(line: 924, column: 12, scope: !5998)
!6000 = !DILocation(line: 924, column: 7, scope: !5887)
!6001 = !DILocalVariable(name: "rc", scope: !6002, file: !396, line: 925, type: !454)
!6002 = distinct !DILexicalBlock(scope: !5998, file: !396, line: 924, column: 23)
!6003 = !DILocation(line: 925, column: 18, scope: !6002)
!6004 = !DILocalVariable(name: "dname_len", scope: !6002, file: !396, line: 926, type: !33)
!6005 = !DILocation(line: 926, column: 8, scope: !6002)
!6006 = !DILocation(line: 928, column: 27, scope: !6007)
!6007 = distinct !DILexicalBlock(scope: !6002, file: !396, line: 928, column: 8)
!6008 = !DILocation(line: 928, column: 46, scope: !6007)
!6009 = !DILocation(line: 928, column: 53, scope: !6007)
!6010 = !DILocation(line: 929, column: 13, scope: !6007)
!6011 = !DILocation(line: 928, column: 9, scope: !6007)
!6012 = !DILocation(line: 928, column: 8, scope: !6002)
!6013 = !DILocation(line: 930, column: 5, scope: !6007)
!6014 = !DILocation(line: 932, column: 9, scope: !6002)
!6015 = !DILocation(line: 932, column: 7, scope: !6002)
!6016 = !DILocation(line: 933, column: 9, scope: !6017)
!6017 = distinct !DILexicalBlock(scope: !6002, file: !396, line: 933, column: 8)
!6018 = !DILocation(line: 933, column: 8, scope: !6002)
!6019 = !DILocation(line: 934, column: 5, scope: !6017)
!6020 = !DILocation(line: 936, column: 14, scope: !6002)
!6021 = !DILocation(line: 936, column: 4, scope: !6002)
!6022 = !DILocation(line: 936, column: 8, scope: !6002)
!6023 = !DILocation(line: 936, column: 12, scope: !6002)
!6024 = !DILocation(line: 937, column: 28, scope: !6002)
!6025 = !DILocation(line: 937, column: 36, scope: !6002)
!6026 = !DILocation(line: 937, column: 45, scope: !6002)
!6027 = !DILocation(line: 937, column: 56, scope: !6002)
!6028 = !DILocation(line: 937, column: 14, scope: !6002)
!6029 = !DILocation(line: 937, column: 4, scope: !6002)
!6030 = !DILocation(line: 937, column: 8, scope: !6002)
!6031 = !DILocation(line: 937, column: 12, scope: !6002)
!6032 = !DILocation(line: 940, column: 9, scope: !6033)
!6033 = distinct !DILexicalBlock(scope: !6002, file: !396, line: 940, column: 8)
!6034 = !DILocation(line: 940, column: 13, scope: !6033)
!6035 = !DILocation(line: 940, column: 17, scope: !6033)
!6036 = !DILocation(line: 940, column: 21, scope: !6037)
!6037 = !DILexicalBlockFile(scope: !6033, file: !396, discriminator: 1)
!6038 = !DILocation(line: 940, column: 25, scope: !6037)
!6039 = !DILocation(line: 940, column: 29, scope: !6037)
!6040 = !DILocation(line: 940, column: 42, scope: !6041)
!6041 = !DILexicalBlockFile(scope: !6033, file: !396, discriminator: 2)
!6042 = !DILocation(line: 940, column: 51, scope: !6041)
!6043 = !DILocation(line: 940, column: 32, scope: !6041)
!6044 = !DILocation(line: 940, column: 8, scope: !6041)
!6045 = !DILocation(line: 941, column: 23, scope: !6046)
!6046 = distinct !DILexicalBlock(scope: !6033, file: !396, line: 940, column: 56)
!6047 = !DILocation(line: 941, column: 5, scope: !6046)
!6048 = !DILocation(line: 942, column: 5, scope: !6046)
!6049 = !DILocation(line: 946, column: 9, scope: !6002)
!6050 = !DILocation(line: 946, column: 18, scope: !6002)
!6051 = !DILocation(line: 946, column: 7, scope: !6002)
!6052 = !DILocation(line: 947, column: 3, scope: !6002)
!6053 = !DILocation(line: 950, column: 7, scope: !6054)
!6054 = distinct !DILexicalBlock(scope: !5887, file: !396, line: 950, column: 7)
!6055 = !DILocation(line: 950, column: 7, scope: !5887)
!6056 = !DILocalVariable(name: "ret", scope: !6057, file: !396, line: 951, type: !33)
!6057 = distinct !DILexicalBlock(scope: !6054, file: !396, line: 950, column: 14)
!6058 = !DILocation(line: 951, column: 8, scope: !6057)
!6059 = !DILocation(line: 953, column: 27, scope: !6057)
!6060 = !DILocation(line: 953, column: 33, scope: !6057)
!6061 = !DILocation(line: 953, column: 42, scope: !6057)
!6062 = !DILocation(line: 953, column: 50, scope: !6057)
!6063 = !DILocation(line: 954, column: 13, scope: !6057)
!6064 = !DILocation(line: 954, column: 18, scope: !6057)
!6065 = !DILocation(line: 953, column: 10, scope: !6057)
!6066 = !DILocation(line: 953, column: 8, scope: !6057)
!6067 = !DILocation(line: 955, column: 8, scope: !6068)
!6068 = distinct !DILexicalBlock(scope: !6057, file: !396, line: 955, column: 8)
!6069 = !DILocation(line: 955, column: 12, scope: !6068)
!6070 = !DILocation(line: 955, column: 8, scope: !6057)
!6071 = !DILocation(line: 956, column: 5, scope: !6068)
!6072 = !DILocation(line: 958, column: 9, scope: !6073)
!6073 = distinct !DILexicalBlock(scope: !6057, file: !396, line: 958, column: 8)
!6074 = !DILocation(line: 958, column: 8, scope: !6057)
!6075 = !DILocation(line: 959, column: 13, scope: !6076)
!6076 = distinct !DILexicalBlock(scope: !6073, file: !396, line: 958, column: 14)
!6077 = !DILocation(line: 959, column: 11, scope: !6076)
!6078 = !DILocation(line: 960, column: 16, scope: !6076)
!6079 = !DILocation(line: 960, column: 14, scope: !6076)
!6080 = !DILocation(line: 961, column: 4, scope: !6076)
!6081 = !DILocation(line: 962, column: 13, scope: !6082)
!6082 = distinct !DILexicalBlock(scope: !6073, file: !396, line: 961, column: 11)
!6083 = !DILocation(line: 962, column: 11, scope: !6082)
!6084 = !DILocation(line: 963, column: 16, scope: !6082)
!6085 = !DILocation(line: 963, column: 14, scope: !6082)
!6086 = !DILocation(line: 965, column: 3, scope: !6057)
!6087 = !DILocation(line: 966, column: 10, scope: !6088)
!6088 = distinct !DILexicalBlock(scope: !6054, file: !396, line: 965, column: 10)
!6089 = !DILocation(line: 967, column: 13, scope: !6088)
!6090 = !DILocation(line: 971, column: 41, scope: !5887)
!6091 = !DILocation(line: 971, column: 45, scope: !5887)
!6092 = !DILocation(line: 971, column: 23, scope: !5887)
!6093 = !DILocation(line: 971, column: 58, scope: !5887)
!6094 = !DILocation(line: 972, column: 8, scope: !5887)
!6095 = !DILocation(line: 972, column: 15, scope: !5887)
!6096 = !DILocation(line: 972, column: 25, scope: !5887)
!6097 = !DILocation(line: 971, column: 9, scope: !5887)
!6098 = !DILocation(line: 971, column: 7, scope: !5887)
!6099 = !DILocation(line: 973, column: 8, scope: !6100)
!6100 = distinct !DILexicalBlock(scope: !5887, file: !396, line: 973, column: 7)
!6101 = !DILocation(line: 973, column: 7, scope: !5887)
!6102 = !DILocation(line: 974, column: 4, scope: !6100)
!6103 = !DILocation(line: 976, column: 45, scope: !5887)
!6104 = !DILocation(line: 976, column: 22, scope: !5887)
!6105 = !DILocation(line: 976, column: 26, scope: !5887)
!6106 = !DILocation(line: 976, column: 4, scope: !5887)
!6107 = !DILocation(line: 976, column: 39, scope: !5887)
!6108 = !DILocation(line: 976, column: 43, scope: !5887)
!6109 = !DILocation(line: 977, column: 2, scope: !5887)
!6110 = !DILocation(line: 882, column: 26, scope: !6111)
!6111 = !DILexicalBlockFile(scope: !5882, file: !396, discriminator: 2)
!6112 = !DILocation(line: 882, column: 2, scope: !6111)
!6113 = !DILocation(line: 979, column: 8, scope: !6114)
!6114 = distinct !DILexicalBlock(scope: !526, file: !396, line: 979, column: 6)
!6115 = !DILocation(line: 979, column: 14, scope: !6114)
!6116 = !DILocation(line: 979, column: 6, scope: !526)
!6117 = !DILocation(line: 980, column: 56, scope: !6114)
!6118 = !DILocation(line: 980, column: 3, scope: !6114)
!6119 = !DILocation(line: 982, column: 2, scope: !526)
!6120 = !DILocation(line: 982, column: 11, scope: !526)
!6121 = !DILocation(line: 982, column: 21, scope: !526)
!6122 = !DILocation(line: 983, column: 12, scope: !6123)
!6123 = distinct !DILexicalBlock(scope: !526, file: !396, line: 983, column: 2)
!6124 = !DILocation(line: 983, column: 21, scope: !6123)
!6125 = !DILocation(line: 983, column: 10, scope: !6123)
!6126 = !DILocation(line: 983, column: 7, scope: !6123)
!6127 = !DILocation(line: 983, column: 27, scope: !6128)
!6128 = !DILexicalBlockFile(scope: !6129, file: !396, discriminator: 1)
!6129 = distinct !DILexicalBlock(scope: !6123, file: !396, line: 983, column: 2)
!6130 = !DILocation(line: 983, column: 31, scope: !6128)
!6131 = !DILocation(line: 983, column: 2, scope: !6128)
!6132 = !DILocalVariable(name: "rc", scope: !6133, file: !396, line: 984, type: !454)
!6133 = distinct !DILexicalBlock(scope: !6129, file: !396, line: 983, column: 57)
!6134 = !DILocation(line: 984, column: 17, scope: !6133)
!6135 = !DILocalVariable(name: "rrs", scope: !6133, file: !396, line: 985, type: !416)
!6136 = !DILocation(line: 985, column: 10, scope: !6133)
!6137 = !DILocation(line: 988, column: 26, scope: !6133)
!6138 = !DILocation(line: 988, column: 30, scope: !6133)
!6139 = !DILocation(line: 988, column: 8, scope: !6133)
!6140 = !DILocation(line: 988, column: 6, scope: !6133)
!6141 = !DILocation(line: 989, column: 23, scope: !6133)
!6142 = !DILocation(line: 989, column: 27, scope: !6133)
!6143 = !DILocation(line: 989, column: 32, scope: !6133)
!6144 = !DILocation(line: 989, column: 36, scope: !6133)
!6145 = !DILocation(line: 989, column: 42, scope: !6133)
!6146 = !DILocation(line: 990, column: 9, scope: !6133)
!6147 = !DILocation(line: 990, column: 13, scope: !6133)
!6148 = !DILocation(line: 990, column: 18, scope: !6133)
!6149 = !DILocation(line: 990, column: 22, scope: !6133)
!6150 = !DILocation(line: 990, column: 28, scope: !6133)
!6151 = !DILocation(line: 991, column: 9, scope: !6133)
!6152 = !DILocation(line: 991, column: 13, scope: !6133)
!6153 = !DILocation(line: 991, column: 18, scope: !6133)
!6154 = !DILocation(line: 991, column: 22, scope: !6133)
!6155 = !DILocation(line: 991, column: 28, scope: !6133)
!6156 = !DILocation(line: 992, column: 9, scope: !6133)
!6157 = !DILocation(line: 992, column: 32, scope: !6133)
!6158 = !DILocation(line: 992, column: 36, scope: !6133)
!6159 = !DILocation(line: 989, column: 9, scope: !6133)
!6160 = !DILocation(line: 989, column: 7, scope: !6133)
!6161 = !DILocation(line: 993, column: 8, scope: !6162)
!6162 = distinct !DILexicalBlock(scope: !6133, file: !396, line: 993, column: 7)
!6163 = !DILocation(line: 993, column: 7, scope: !6133)
!6164 = !DILocation(line: 994, column: 4, scope: !6162)
!6165 = !DILocation(line: 996, column: 7, scope: !6166)
!6166 = distinct !DILexicalBlock(scope: !6133, file: !396, line: 996, column: 7)
!6167 = !DILocation(line: 996, column: 7, scope: !6133)
!6168 = !DILocation(line: 997, column: 18, scope: !6169)
!6169 = distinct !DILexicalBlock(scope: !6170, file: !396, line: 997, column: 8)
!6170 = distinct !DILexicalBlock(scope: !6166, file: !396, line: 996, column: 20)
!6171 = !DILocation(line: 997, column: 43, scope: !6169)
!6172 = !DILocation(line: 997, column: 31, scope: !6169)
!6173 = !DILocation(line: 997, column: 8, scope: !6174)
!6174 = !DILexicalBlockFile(scope: !6169, file: !396, discriminator: 1)
!6175 = !DILocation(line: 997, column: 49, scope: !6169)
!6176 = !DILocation(line: 997, column: 8, scope: !6170)
!6177 = !DILocation(line: 998, column: 17, scope: !6178)
!6178 = distinct !DILexicalBlock(scope: !6169, file: !396, line: 997, column: 54)
!6179 = !DILocation(line: 998, column: 5, scope: !6178)
!6180 = !DILocation(line: 999, column: 5, scope: !6178)
!6181 = !DILocation(line: 1001, column: 3, scope: !6170)
!6182 = !DILocation(line: 1003, column: 15, scope: !6133)
!6183 = !DILocation(line: 1003, column: 3, scope: !6133)
!6184 = !DILocation(line: 1004, column: 2, scope: !6133)
!6185 = !DILocation(line: 983, column: 47, scope: !6186)
!6186 = !DILexicalBlockFile(scope: !6129, file: !396, discriminator: 2)
!6187 = !DILocation(line: 983, column: 51, scope: !6186)
!6188 = !DILocation(line: 983, column: 45, scope: !6186)
!6189 = !DILocation(line: 983, column: 2, scope: !6186)
!6190 = !DILocation(line: 1007, column: 16, scope: !526)
!6191 = !DILocation(line: 1007, column: 2, scope: !526)
!6192 = !DILocation(line: 1009, column: 8, scope: !6193)
!6193 = distinct !DILexicalBlock(scope: !526, file: !396, line: 1009, column: 6)
!6194 = !DILocation(line: 1009, column: 14, scope: !6193)
!6195 = !DILocation(line: 1009, column: 6, scope: !526)
!6196 = !DILocation(line: 1010, column: 33, scope: !6193)
!6197 = !DILocation(line: 1010, column: 3, scope: !6193)
!6198 = !DILocation(line: 1012, column: 9, scope: !526)
!6199 = !DILocation(line: 1012, column: 2, scope: !526)
!6200 = !DILocation(line: 1015, column: 53, scope: !526)
!6201 = !DILocation(line: 1015, column: 2, scope: !526)
!6202 = !DILocation(line: 1016, column: 16, scope: !526)
!6203 = !DILocation(line: 1016, column: 2, scope: !526)
!6204 = !DILocation(line: 1017, column: 2, scope: !526)
!6205 = !DILocation(line: 1018, column: 1, scope: !526)
!6206 = !DILocalVariable(name: "rclass", arg: 1, scope: !515, file: !396, line: 605, type: !48)
!6207 = !DILocation(line: 605, column: 31, scope: !515)
!6208 = !DILocation(line: 606, column: 10, scope: !515)
!6209 = !DILocation(line: 606, column: 2, scope: !515)
!6210 = !DILocation(line: 608, column: 3, scope: !6211)
!6211 = distinct !DILexicalBlock(scope: !515, file: !396, line: 606, column: 18)
!6212 = !DILocation(line: 610, column: 3, scope: !6211)
!6213 = !DILocation(line: 612, column: 3, scope: !6211)
!6214 = !DILocation(line: 614, column: 53, scope: !6211)
!6215 = !DILocation(line: 614, column: 3, scope: !6211)
!6216 = !DILocation(line: 615, column: 3, scope: !6211)
!6217 = !DILocation(line: 617, column: 1, scope: !515)
!6218 = !DILocalVariable(name: "rrsl", arg: 1, scope: !588, file: !537, line: 90, type: !591)
!6219 = !DILocation(line: 90, column: 31, scope: !588)
!6220 = !DILocalVariable(name: "target_rtype", arg: 2, scope: !588, file: !537, line: 90, type: !33)
!6221 = !DILocation(line: 90, column: 41, scope: !588)
!6222 = !DILocalVariable(name: "add", arg: 3, scope: !588, file: !537, line: 90, type: !33)
!6223 = !DILocation(line: 90, column: 59, scope: !588)
!6224 = !DILocalVariable(name: "fn", scope: !588, file: !537, line: 91, type: !4)
!6225 = !DILocation(line: 91, column: 14, scope: !588)
!6226 = !DILocalVariable(name: "rrsp", scope: !588, file: !537, line: 92, type: !555)
!6227 = !DILocation(line: 92, column: 9, scope: !588)
!6228 = !DILocalVariable(name: "rrsp_aaaa", scope: !588, file: !537, line: 92, type: !555)
!6229 = !DILocation(line: 92, column: 16, scope: !588)
!6230 = !DILocalVariable(name: "str", scope: !588, file: !537, line: 93, type: !123)
!6231 = !DILocation(line: 93, column: 9, scope: !588)
!6232 = !DILocalVariable(name: "gl", scope: !588, file: !537, line: 94, type: !591)
!6233 = !DILocation(line: 94, column: 10, scope: !588)
!6234 = !DILocation(line: 96, column: 34, scope: !588)
!6235 = !DILocation(line: 96, column: 2, scope: !588)
!6236 = !DILocation(line: 98, column: 2, scope: !588)
!6237 = !DILocation(line: 98, column: 8, scope: !588)
!6238 = !DILocation(line: 98, column: 18, scope: !588)
!6239 = !DILocation(line: 99, column: 12, scope: !6240)
!6240 = distinct !DILexicalBlock(scope: !588, file: !537, line: 99, column: 2)
!6241 = !DILocation(line: 99, column: 18, scope: !6240)
!6242 = !DILocation(line: 99, column: 10, scope: !6240)
!6243 = !DILocation(line: 99, column: 7, scope: !6240)
!6244 = !DILocation(line: 99, column: 24, scope: !6245)
!6245 = !DILexicalBlockFile(scope: !6246, file: !537, discriminator: 1)
!6246 = distinct !DILexicalBlock(scope: !6240, file: !537, line: 99, column: 2)
!6247 = !DILocation(line: 99, column: 28, scope: !6245)
!6248 = !DILocation(line: 99, column: 2, scope: !6245)
!6249 = !DILocalVariable(name: "dup", scope: !6250, file: !537, line: 100, type: !555)
!6250 = distinct !DILexicalBlock(scope: !6246, file: !537, line: 99, column: 54)
!6251 = !DILocation(line: 100, column: 10, scope: !6250)
!6252 = !DILocalVariable(name: "name", scope: !6250, file: !537, line: 101, type: !19)
!6253 = !DILocation(line: 101, column: 9, scope: !6250)
!6254 = !DILocalVariable(name: "len", scope: !6250, file: !537, line: 102, type: !33)
!6255 = !DILocation(line: 102, column: 7, scope: !6250)
!6256 = !DILocation(line: 104, column: 20, scope: !6250)
!6257 = !DILocation(line: 104, column: 24, scope: !6250)
!6258 = !DILocation(line: 104, column: 10, scope: !6250)
!6259 = !DILocation(line: 104, column: 8, scope: !6250)
!6260 = !DILocation(line: 105, column: 7, scope: !6261)
!6261 = distinct !DILexicalBlock(scope: !6250, file: !537, line: 105, column: 7)
!6262 = !DILocation(line: 105, column: 13, scope: !6261)
!6263 = !DILocation(line: 105, column: 17, scope: !6261)
!6264 = !DILocation(line: 105, column: 23, scope: !6261)
!6265 = !DILocation(line: 105, column: 30, scope: !6261)
!6266 = !DILocation(line: 105, column: 7, scope: !6250)
!6267 = !DILocation(line: 106, column: 4, scope: !6261)
!6268 = !DILocation(line: 108, column: 18, scope: !6250)
!6269 = !DILocation(line: 108, column: 8, scope: !6250)
!6270 = !DILocation(line: 109, column: 9, scope: !6250)
!6271 = !DILocation(line: 109, column: 15, scope: !6250)
!6272 = !DILocation(line: 109, column: 19, scope: !6250)
!6273 = !DILocation(line: 109, column: 25, scope: !6250)
!6274 = !DILocation(line: 109, column: 7, scope: !6250)
!6275 = !DILocation(line: 111, column: 21, scope: !6250)
!6276 = !DILocation(line: 111, column: 27, scope: !6250)
!6277 = !DILocation(line: 111, column: 33, scope: !6250)
!6278 = !DILocation(line: 111, column: 38, scope: !6250)
!6279 = !DILocation(line: 111, column: 9, scope: !6250)
!6280 = !DILocation(line: 111, column: 7, scope: !6250)
!6281 = !DILocation(line: 112, column: 7, scope: !6282)
!6282 = distinct !DILexicalBlock(scope: !6250, file: !537, line: 112, column: 7)
!6283 = !DILocation(line: 112, column: 7, scope: !6250)
!6284 = !DILocation(line: 113, column: 10, scope: !6285)
!6285 = distinct !DILexicalBlock(scope: !6286, file: !537, line: 113, column: 8)
!6286 = distinct !DILexicalBlock(scope: !6282, file: !537, line: 112, column: 12)
!6287 = !DILocation(line: 113, column: 16, scope: !6285)
!6288 = !DILocation(line: 113, column: 8, scope: !6286)
!6289 = !DILocation(line: 114, column: 23, scope: !6290)
!6290 = distinct !DILexicalBlock(scope: !6285, file: !537, line: 113, column: 21)
!6291 = !DILocation(line: 114, column: 49, scope: !6290)
!6292 = !DILocation(line: 114, column: 5, scope: !6290)
!6293 = !DILocation(line: 115, column: 44, scope: !6290)
!6294 = !DILocation(line: 115, column: 48, scope: !6290)
!6295 = !DILocation(line: 115, column: 5, scope: !6290)
!6296 = !DILocation(line: 116, column: 4, scope: !6290)
!6297 = !DILocation(line: 117, column: 15, scope: !6286)
!6298 = !DILocation(line: 117, column: 4, scope: !6286)
!6299 = !DILocation(line: 118, column: 4, scope: !6286)
!6300 = !DILocation(line: 122, column: 9, scope: !6301)
!6301 = distinct !DILexicalBlock(scope: !6250, file: !537, line: 122, column: 7)
!6302 = !DILocation(line: 122, column: 15, scope: !6301)
!6303 = !DILocation(line: 122, column: 7, scope: !6250)
!6304 = !DILocation(line: 123, column: 22, scope: !6305)
!6305 = distinct !DILexicalBlock(scope: !6301, file: !537, line: 122, column: 20)
!6306 = !DILocation(line: 123, column: 48, scope: !6305)
!6307 = !DILocation(line: 123, column: 4, scope: !6305)
!6308 = !DILocation(line: 124, column: 45, scope: !6305)
!6309 = !DILocation(line: 124, column: 49, scope: !6305)
!6310 = !DILocation(line: 124, column: 4, scope: !6305)
!6311 = !DILocation(line: 125, column: 3, scope: !6305)
!6312 = !DILocation(line: 126, column: 32, scope: !6250)
!6313 = !DILocation(line: 126, column: 38, scope: !6250)
!6314 = !DILocation(line: 127, column: 13, scope: !6250)
!6315 = !DILocation(line: 126, column: 15, scope: !6250)
!6316 = !DILocation(line: 126, column: 13, scope: !6250)
!6317 = !DILocation(line: 128, column: 8, scope: !6318)
!6318 = distinct !DILexicalBlock(scope: !6250, file: !537, line: 128, column: 7)
!6319 = !DILocation(line: 128, column: 7, scope: !6250)
!6320 = !DILocation(line: 129, column: 52, scope: !6321)
!6321 = distinct !DILexicalBlock(scope: !6318, file: !537, line: 128, column: 19)
!6322 = !DILocation(line: 129, column: 4, scope: !6321)
!6323 = !DILocation(line: 130, column: 4, scope: !6321)
!6324 = !DILocation(line: 133, column: 9, scope: !6325)
!6325 = distinct !DILexicalBlock(scope: !6250, file: !537, line: 133, column: 7)
!6326 = !DILocation(line: 133, column: 7, scope: !6325)
!6327 = !DILocation(line: 133, column: 7, scope: !6250)
!6328 = !DILocation(line: 134, column: 22, scope: !6329)
!6329 = distinct !DILexicalBlock(scope: !6325, file: !537, line: 133, column: 16)
!6330 = !DILocation(line: 134, column: 48, scope: !6329)
!6331 = !DILocation(line: 134, column: 4, scope: !6329)
!6332 = !DILocation(line: 135, column: 36, scope: !6329)
!6333 = !DILocation(line: 136, column: 5, scope: !6329)
!6334 = !DILocation(line: 136, column: 33, scope: !6329)
!6335 = !DILocation(line: 135, column: 4, scope: !6329)
!6336 = !DILocation(line: 137, column: 3, scope: !6329)
!6337 = !DILocation(line: 139, column: 7, scope: !6338)
!6338 = distinct !DILexicalBlock(scope: !6250, file: !537, line: 139, column: 7)
!6339 = !DILocation(line: 139, column: 7, scope: !6250)
!6340 = !DILocation(line: 140, column: 14, scope: !6341)
!6341 = distinct !DILexicalBlock(scope: !6338, file: !537, line: 139, column: 12)
!6342 = !DILocation(line: 140, column: 20, scope: !6341)
!6343 = !DILocation(line: 140, column: 4, scope: !6341)
!6344 = !DILocation(line: 141, column: 3, scope: !6341)
!6345 = !DILocation(line: 142, column: 16, scope: !6346)
!6346 = distinct !DILexicalBlock(scope: !6338, file: !537, line: 141, column: 10)
!6347 = !DILocation(line: 142, column: 4, scope: !6346)
!6348 = !DILocation(line: 143, column: 20, scope: !6346)
!6349 = !DILocation(line: 143, column: 4, scope: !6346)
!6350 = !DILocation(line: 143, column: 8, scope: !6346)
!6351 = !DILocation(line: 143, column: 18, scope: !6346)
!6352 = !DILocation(line: 145, column: 2, scope: !6250)
!6353 = !DILocation(line: 99, column: 44, scope: !6354)
!6354 = !DILexicalBlockFile(scope: !6246, file: !537, discriminator: 2)
!6355 = !DILocation(line: 99, column: 48, scope: !6354)
!6356 = !DILocation(line: 99, column: 42, scope: !6354)
!6357 = !DILocation(line: 99, column: 2, scope: !6354)
!6358 = !DILocation(line: 147, column: 2, scope: !588)
!6359 = !DILocalVariable(name: "rr_list", arg: 1, scope: !636, file: !537, line: 396, type: !591)
!6360 = !DILocation(line: 396, column: 29, scope: !636)
!6361 = !DILocalVariable(name: "name", arg: 2, scope: !636, file: !537, line: 396, type: !19)
!6362 = !DILocation(line: 396, column: 44, scope: !636)
!6363 = !DILocalVariable(name: "len", arg: 3, scope: !636, file: !537, line: 396, type: !33)
!6364 = !DILocation(line: 396, column: 54, scope: !636)
!6365 = !DILocalVariable(name: "r_type_search", arg: 4, scope: !636, file: !537, line: 396, type: !33)
!6366 = !DILocation(line: 396, column: 63, scope: !636)
!6367 = !DILocalVariable(name: "fn", scope: !636, file: !537, line: 397, type: !4)
!6368 = !DILocation(line: 397, column: 21, scope: !636)
!6369 = !DILocalVariable(name: "tmp_domain", scope: !636, file: !537, line: 398, type: !20)
!6370 = !DILocation(line: 398, column: 10, scope: !636)
!6371 = !DILocalVariable(name: "gl", scope: !636, file: !537, line: 399, type: !591)
!6372 = !DILocation(line: 399, column: 10, scope: !636)
!6373 = !DILocalVariable(name: "rrs", scope: !636, file: !537, line: 400, type: !555)
!6374 = !DILocation(line: 400, column: 9, scope: !636)
!6375 = !DILocation(line: 402, column: 34, scope: !636)
!6376 = !DILocation(line: 402, column: 2, scope: !636)
!6377 = !DILocation(line: 408, column: 2, scope: !636)
!6378 = !DILocation(line: 408, column: 11, scope: !636)
!6379 = !DILocation(line: 408, column: 21, scope: !636)
!6380 = !DILocation(line: 409, column: 12, scope: !6381)
!6381 = distinct !DILexicalBlock(scope: !636, file: !537, line: 409, column: 2)
!6382 = !DILocation(line: 409, column: 21, scope: !6381)
!6383 = !DILocation(line: 409, column: 10, scope: !6381)
!6384 = !DILocation(line: 409, column: 7, scope: !6381)
!6385 = !DILocation(line: 409, column: 27, scope: !6386)
!6386 = !DILexicalBlockFile(scope: !6387, file: !537, discriminator: 1)
!6387 = distinct !DILexicalBlock(scope: !6381, file: !537, line: 409, column: 2)
!6388 = !DILocation(line: 409, column: 31, scope: !6386)
!6389 = !DILocation(line: 409, column: 2, scope: !6386)
!6390 = !DILocation(line: 410, column: 17, scope: !6391)
!6391 = distinct !DILexicalBlock(scope: !6387, file: !537, line: 409, column: 57)
!6392 = !DILocation(line: 410, column: 21, scope: !6391)
!6393 = !DILocation(line: 410, column: 9, scope: !6391)
!6394 = !DILocation(line: 410, column: 7, scope: !6391)
!6395 = !DILocation(line: 411, column: 17, scope: !6391)
!6396 = !DILocation(line: 411, column: 14, scope: !6391)
!6397 = !DILocation(line: 412, column: 7, scope: !6398)
!6398 = distinct !DILexicalBlock(scope: !6391, file: !537, line: 412, column: 7)
!6399 = !DILocation(line: 412, column: 12, scope: !6398)
!6400 = !DILocation(line: 412, column: 16, scope: !6398)
!6401 = !DILocation(line: 412, column: 22, scope: !6398)
!6402 = !DILocation(line: 412, column: 32, scope: !6398)
!6403 = !DILocation(line: 412, column: 29, scope: !6398)
!6404 = !DILocation(line: 412, column: 46, scope: !6398)
!6405 = !DILocation(line: 413, column: 7, scope: !6398)
!6406 = !DILocation(line: 413, column: 12, scope: !6398)
!6407 = !DILocation(line: 413, column: 16, scope: !6398)
!6408 = !DILocation(line: 413, column: 22, scope: !6398)
!6409 = !DILocation(line: 413, column: 35, scope: !6398)
!6410 = !DILocation(line: 413, column: 32, scope: !6398)
!6411 = !DILocation(line: 413, column: 39, scope: !6398)
!6412 = !DILocation(line: 414, column: 29, scope: !6398)
!6413 = !DILocation(line: 414, column: 51, scope: !6398)
!6414 = !DILocation(line: 414, column: 8, scope: !6398)
!6415 = !DILocation(line: 412, column: 7, scope: !6416)
!6416 = !DILexicalBlockFile(scope: !6391, file: !537, discriminator: 1)
!6417 = !DILocation(line: 415, column: 22, scope: !6398)
!6418 = !DILocation(line: 415, column: 11, scope: !6398)
!6419 = !DILocation(line: 415, column: 4, scope: !6398)
!6420 = !DILocation(line: 416, column: 2, scope: !6391)
!6421 = !DILocation(line: 409, column: 47, scope: !6422)
!6422 = !DILexicalBlockFile(scope: !6387, file: !537, discriminator: 2)
!6423 = !DILocation(line: 409, column: 51, scope: !6422)
!6424 = !DILocation(line: 409, column: 45, scope: !6422)
!6425 = !DILocation(line: 409, column: 2, scope: !6422)
!6426 = !DILocation(line: 419, column: 2, scope: !636)
!6427 = !DILocation(line: 420, column: 1, scope: !636)
!6428 = !DILocalVariable(name: "rrs_a", arg: 1, scope: !639, file: !537, line: 18, type: !555)
!6429 = !DILocation(line: 18, column: 40, scope: !639)
!6430 = !DILocalVariable(name: "qtype", arg: 2, scope: !639, file: !537, line: 18, type: !48)
!6431 = !DILocation(line: 18, column: 56, scope: !639)
!6432 = !DILocalVariable(name: "pref", arg: 3, scope: !639, file: !537, line: 18, type: !33)
!6433 = !DILocation(line: 18, column: 67, scope: !639)
!6434 = !DILocalVariable(name: "fn", scope: !639, file: !537, line: 19, type: !4)
!6435 = !DILocation(line: 19, column: 21, scope: !639)
!6436 = !DILocalVariable(name: "rrl", scope: !639, file: !537, line: 20, type: !6437)
!6437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6438, size: 64, align: 64)
!6438 = !DIDerivedType(tag: DW_TAG_typedef, name: "RR_List", file: !29, line: 128, baseType: !6439)
!6439 = !DICompositeType(tag: DW_TAG_structure_type, name: "rr_list", file: !29, line: 123, size: 192, align: 64, elements: !6440)
!6440 = !{!6441, !6443, !6444, !6445}
!6441 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6439, file: !29, line: 124, baseType: !6442, size: 64, align: 64)
!6442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6439, size: 64, align: 64)
!6443 = !DIDerivedType(tag: DW_TAG_member, name: "cnt", scope: !6439, file: !29, line: 125, baseType: !33, size: 32, align: 32, offset: 64)
!6444 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !6439, file: !29, line: 126, baseType: !33, size: 32, align: 32, offset: 96)
!6445 = !DIDerivedType(tag: DW_TAG_member, name: "rrp", scope: !6439, file: !29, line: 127, baseType: !6446, size: 64, align: 64, offset: 128)
!6446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6447, size: 64, align: 64)
!6447 = !DIDerivedType(tag: DW_TAG_typedef, name: "RR", file: !29, line: 120, baseType: !6448)
!6448 = !DICompositeType(tag: DW_TAG_structure_type, name: "rr", file: !29, line: 117, size: 64, align: 32, elements: !6449)
!6449 = !{!6450, !6451}
!6450 = !DIDerivedType(tag: DW_TAG_member, name: "ttl", scope: !6448, file: !29, line: 118, baseType: !72, size: 32, align: 32)
!6451 = !DIDerivedType(tag: DW_TAG_member, name: "rd_len", scope: !6448, file: !29, line: 119, baseType: !48, size: 16, align: 16, offset: 32)
!6452 = !DILocation(line: 20, column: 11, scope: !639)
!6453 = !DILocalVariable(name: "rrl_tmp", scope: !639, file: !537, line: 20, type: !6437)
!6454 = !DILocation(line: 20, column: 24, scope: !639)
!6455 = !DILocalVariable(name: "rrs_new", scope: !639, file: !537, line: 21, type: !555)
!6456 = !DILocation(line: 21, column: 9, scope: !639)
!6457 = !DILocalVariable(name: "rr_a", scope: !639, file: !537, line: 22, type: !6446)
!6458 = !DILocation(line: 22, column: 6, scope: !639)
!6459 = !DILocalVariable(name: "rr_new", scope: !639, file: !537, line: 22, type: !6446)
!6460 = !DILocation(line: 22, column: 20, scope: !639)
!6461 = !DILocalVariable(name: "rd", scope: !639, file: !537, line: 23, type: !20)
!6462 = !DILocation(line: 23, column: 10, scope: !639)
!6463 = !DILocalVariable(name: "rd_new", scope: !639, file: !537, line: 23, type: !20)
!6464 = !DILocation(line: 23, column: 15, scope: !639)
!6465 = !DILocation(line: 25, column: 34, scope: !639)
!6466 = !DILocation(line: 25, column: 2, scope: !639)
!6467 = !DILocation(line: 28, column: 26, scope: !639)
!6468 = !DILocation(line: 28, column: 8, scope: !639)
!6469 = !DILocation(line: 28, column: 6, scope: !639)
!6470 = !DILocation(line: 29, column: 7, scope: !6471)
!6471 = distinct !DILexicalBlock(scope: !639, file: !537, line: 29, column: 6)
!6472 = !DILocation(line: 29, column: 6, scope: !639)
!6473 = !DILocation(line: 30, column: 3, scope: !6471)
!6474 = !DILocation(line: 34, column: 17, scope: !6475)
!6475 = distinct !DILexicalBlock(scope: !639, file: !537, line: 34, column: 2)
!6476 = !DILocation(line: 34, column: 15, scope: !6475)
!6477 = !DILocation(line: 34, column: 7, scope: !6475)
!6478 = !DILocation(line: 34, column: 22, scope: !6479)
!6479 = !DILexicalBlockFile(scope: !6480, file: !537, discriminator: 1)
!6480 = distinct !DILexicalBlock(scope: !6475, file: !537, line: 34, column: 2)
!6481 = !DILocation(line: 34, column: 31, scope: !6479)
!6482 = !DILocation(line: 34, column: 2, scope: !6479)
!6483 = !DILocalVariable(name: "rdlen", scope: !6484, file: !537, line: 35, type: !33)
!6484 = distinct !DILexicalBlock(scope: !6480, file: !537, line: 34, column: 62)
!6485 = !DILocation(line: 35, column: 7, scope: !6484)
!6486 = !DILocalVariable(name: "rd_addr", scope: !6484, file: !537, line: 36, type: !20)
!6487 = !DILocation(line: 36, column: 11, scope: !6484)
!6488 = !DILocation(line: 38, column: 10, scope: !6484)
!6489 = !DILocation(line: 38, column: 19, scope: !6484)
!6490 = !DILocation(line: 38, column: 8, scope: !6484)
!6491 = !DILocation(line: 39, column: 3, scope: !6484)
!6492 = !DILocation(line: 39, column: 12, scope: !6484)
!6493 = !DILocation(line: 39, column: 16, scope: !6484)
!6494 = !DILocation(line: 40, column: 8, scope: !6484)
!6495 = !DILocation(line: 40, column: 6, scope: !6484)
!6496 = !DILocation(line: 42, column: 9, scope: !6484)
!6497 = !DILocation(line: 43, column: 7, scope: !6498)
!6498 = distinct !DILexicalBlock(scope: !6484, file: !537, line: 43, column: 7)
!6499 = !DILocation(line: 43, column: 13, scope: !6498)
!6500 = !DILocation(line: 43, column: 7, scope: !6484)
!6501 = !DILocation(line: 44, column: 9, scope: !6498)
!6502 = !DILocation(line: 44, column: 4, scope: !6498)
!6503 = !DILocation(line: 46, column: 20, scope: !6484)
!6504 = !DILocation(line: 46, column: 12, scope: !6484)
!6505 = !DILocation(line: 46, column: 10, scope: !6484)
!6506 = !DILocation(line: 47, column: 8, scope: !6507)
!6507 = distinct !DILexicalBlock(scope: !6484, file: !537, line: 47, column: 7)
!6508 = !DILocation(line: 47, column: 7, scope: !6484)
!6509 = !DILocation(line: 48, column: 4, scope: !6507)
!6510 = !DILocation(line: 50, column: 14, scope: !6484)
!6511 = !DILocation(line: 50, column: 20, scope: !6484)
!6512 = !DILocation(line: 50, column: 13, scope: !6484)
!6513 = !DILocation(line: 50, column: 34, scope: !6514)
!6514 = !DILexicalBlockFile(scope: !6484, file: !537, discriminator: 1)
!6515 = !DILocation(line: 50, column: 13, scope: !6514)
!6516 = !DILocation(line: 50, column: 44, scope: !6517)
!6517 = !DILexicalBlockFile(scope: !6484, file: !537, discriminator: 2)
!6518 = !DILocation(line: 50, column: 51, scope: !6517)
!6519 = !DILocation(line: 50, column: 13, scope: !6517)
!6520 = !DILocation(line: 50, column: 13, scope: !6521)
!6521 = !DILexicalBlockFile(scope: !6484, file: !537, discriminator: 3)
!6522 = !DILocation(line: 50, column: 11, scope: !6521)
!6523 = !DILocation(line: 52, column: 11, scope: !6484)
!6524 = !DILocation(line: 52, column: 29, scope: !6484)
!6525 = !DILocation(line: 52, column: 20, scope: !6484)
!6526 = !DILocation(line: 52, column: 3, scope: !6484)
!6527 = !DILocation(line: 53, column: 11, scope: !6484)
!6528 = !DILocation(line: 53, column: 19, scope: !6484)
!6529 = !DILocation(line: 53, column: 25, scope: !6484)
!6530 = !DILocation(line: 53, column: 3, scope: !6484)
!6531 = !DILocation(line: 55, column: 7, scope: !6532)
!6532 = distinct !DILexicalBlock(scope: !6484, file: !537, line: 55, column: 7)
!6533 = !DILocation(line: 55, column: 13, scope: !6532)
!6534 = !DILocation(line: 55, column: 7, scope: !6484)
!6535 = !DILocation(line: 56, column: 5, scope: !6532)
!6536 = !DILocation(line: 56, column: 12, scope: !6532)
!6537 = !DILocation(line: 56, column: 4, scope: !6532)
!6538 = !DILocation(line: 58, column: 22, scope: !6484)
!6539 = !DILocation(line: 58, column: 28, scope: !6484)
!6540 = !DILocation(line: 58, column: 33, scope: !6484)
!6541 = !DILocation(line: 58, column: 40, scope: !6484)
!6542 = !DILocation(line: 58, column: 12, scope: !6484)
!6543 = !DILocation(line: 58, column: 10, scope: !6484)
!6544 = !DILocation(line: 59, column: 8, scope: !6545)
!6545 = distinct !DILexicalBlock(scope: !6484, file: !537, line: 59, column: 7)
!6546 = !DILocation(line: 59, column: 7, scope: !6484)
!6547 = !DILocation(line: 60, column: 4, scope: !6545)
!6548 = !DILocation(line: 62, column: 9, scope: !6484)
!6549 = !DILocation(line: 62, column: 3, scope: !6484)
!6550 = !DILocation(line: 63, column: 10, scope: !6484)
!6551 = !DILocation(line: 64, column: 18, scope: !6484)
!6552 = !DILocation(line: 64, column: 3, scope: !6484)
!6553 = !DILocation(line: 64, column: 12, scope: !6484)
!6554 = !DILocation(line: 64, column: 16, scope: !6484)
!6555 = !DILocation(line: 65, column: 10, scope: !6484)
!6556 = !DILocation(line: 67, column: 9, scope: !6484)
!6557 = !DILocation(line: 67, column: 3, scope: !6484)
!6558 = !DILocation(line: 68, column: 8, scope: !6484)
!6559 = !DILocation(line: 69, column: 2, scope: !6484)
!6560 = !DILocation(line: 34, column: 47, scope: !6561)
!6561 = !DILexicalBlockFile(scope: !6480, file: !537, discriminator: 2)
!6562 = !DILocation(line: 34, column: 56, scope: !6561)
!6563 = !DILocation(line: 34, column: 45, scope: !6561)
!6564 = !DILocation(line: 34, column: 2, scope: !6561)
!6565 = !DILocation(line: 72, column: 26, scope: !639)
!6566 = !DILocation(line: 72, column: 33, scope: !639)
!6567 = !DILocation(line: 72, column: 40, scope: !639)
!6568 = !DILocation(line: 72, column: 44, scope: !639)
!6569 = !DILocation(line: 72, column: 50, scope: !639)
!6570 = !DILocation(line: 73, column: 5, scope: !639)
!6571 = !DILocation(line: 73, column: 12, scope: !639)
!6572 = !DILocation(line: 73, column: 16, scope: !639)
!6573 = !DILocation(line: 73, column: 22, scope: !639)
!6574 = !DILocation(line: 74, column: 5, scope: !639)
!6575 = !DILocation(line: 74, column: 26, scope: !639)
!6576 = !DILocation(line: 72, column: 12, scope: !639)
!6577 = !DILocation(line: 72, column: 10, scope: !639)
!6578 = !DILocation(line: 77, column: 6, scope: !6579)
!6579 = distinct !DILexicalBlock(scope: !639, file: !537, line: 77, column: 6)
!6580 = !DILocation(line: 77, column: 6, scope: !639)
!6581 = !DILocation(line: 78, column: 9, scope: !6579)
!6582 = !DILocation(line: 78, column: 3, scope: !6579)
!6583 = !DILocation(line: 79, column: 6, scope: !6584)
!6584 = distinct !DILexicalBlock(scope: !639, file: !537, line: 79, column: 6)
!6585 = !DILocation(line: 79, column: 6, scope: !639)
!6586 = !DILocation(line: 80, column: 9, scope: !6584)
!6587 = !DILocation(line: 80, column: 3, scope: !6584)
!6588 = !DILocation(line: 81, column: 6, scope: !6589)
!6589 = distinct !DILexicalBlock(scope: !639, file: !537, line: 81, column: 6)
!6590 = !DILocation(line: 81, column: 6, scope: !639)
!6591 = !DILocation(line: 82, column: 17, scope: !6589)
!6592 = !DILocation(line: 82, column: 3, scope: !6589)
!6593 = !DILocation(line: 83, column: 6, scope: !6594)
!6594 = distinct !DILexicalBlock(scope: !639, file: !537, line: 83, column: 6)
!6595 = !DILocation(line: 83, column: 6, scope: !639)
!6596 = !DILocation(line: 84, column: 9, scope: !6594)
!6597 = !DILocation(line: 84, column: 3, scope: !6594)
!6598 = !DILocation(line: 86, column: 9, scope: !639)
!6599 = !DILocation(line: 86, column: 2, scope: !639)
!6600 = !DILocation(line: 87, column: 1, scope: !639)
!6601 = !DILocalVariable(name: "rrsl", arg: 1, scope: !599, file: !537, line: 150, type: !591)
!6602 = !DILocation(line: 150, column: 30, scope: !599)
!6603 = !DILocalVariable(name: "qname", arg: 2, scope: !599, file: !537, line: 150, type: !20)
!6604 = !DILocation(line: 150, column: 44, scope: !599)
!6605 = !DILocalVariable(name: "fn", scope: !599, file: !537, line: 151, type: !4)
!6606 = !DILocation(line: 151, column: 21, scope: !599)
!6607 = !DILocalVariable(name: "rk", scope: !599, file: !537, line: 152, type: !562)
!6608 = !DILocation(line: 152, column: 8, scope: !599)
!6609 = !DILocalVariable(name: "rk_new", scope: !599, file: !537, line: 152, type: !562)
!6610 = !DILocation(line: 152, column: 12, scope: !599)
!6611 = !DILocalVariable(name: "gl", scope: !599, file: !537, line: 153, type: !591)
!6612 = !DILocation(line: 153, column: 10, scope: !599)
!6613 = !DILocation(line: 155, column: 34, scope: !599)
!6614 = !DILocation(line: 155, column: 2, scope: !599)
!6615 = !DILocation(line: 157, column: 7, scope: !6616)
!6616 = distinct !DILexicalBlock(scope: !599, file: !537, line: 157, column: 6)
!6617 = !DILocation(line: 157, column: 6, scope: !6616)
!6618 = !DILocation(line: 157, column: 13, scope: !6616)
!6619 = !DILocation(line: 157, column: 6, scope: !599)
!6620 = !DILocation(line: 158, column: 3, scope: !6616)
!6621 = !DILocation(line: 160, column: 2, scope: !599)
!6622 = !DILocation(line: 160, column: 8, scope: !599)
!6623 = !DILocation(line: 160, column: 18, scope: !599)
!6624 = !DILocation(line: 161, column: 12, scope: !6625)
!6625 = distinct !DILexicalBlock(scope: !599, file: !537, line: 161, column: 2)
!6626 = !DILocation(line: 161, column: 18, scope: !6625)
!6627 = !DILocation(line: 161, column: 10, scope: !6625)
!6628 = !DILocation(line: 161, column: 7, scope: !6625)
!6629 = !DILocation(line: 161, column: 24, scope: !6630)
!6630 = !DILexicalBlockFile(scope: !6631, file: !537, discriminator: 1)
!6631 = distinct !DILexicalBlock(scope: !6625, file: !537, line: 161, column: 2)
!6632 = !DILocation(line: 161, column: 28, scope: !6630)
!6633 = !DILocation(line: 161, column: 2, scope: !6630)
!6634 = !DILocation(line: 162, column: 19, scope: !6635)
!6635 = distinct !DILexicalBlock(scope: !6631, file: !537, line: 161, column: 54)
!6636 = !DILocation(line: 162, column: 23, scope: !6635)
!6637 = !DILocation(line: 162, column: 9, scope: !6635)
!6638 = !DILocation(line: 162, column: 35, scope: !6635)
!6639 = !DILocation(line: 163, column: 10, scope: !6640)
!6640 = distinct !DILexicalBlock(scope: !6635, file: !537, line: 163, column: 7)
!6641 = !DILocation(line: 163, column: 16, scope: !6640)
!6642 = !DILocation(line: 163, column: 7, scope: !6640)
!6643 = !DILocation(line: 163, column: 23, scope: !6640)
!6644 = !DILocation(line: 163, column: 7, scope: !6635)
!6645 = !DILocation(line: 166, column: 24, scope: !6646)
!6646 = distinct !DILexicalBlock(scope: !6640, file: !537, line: 163, column: 34)
!6647 = !DILocation(line: 166, column: 9, scope: !6646)
!6648 = !DILocation(line: 165, column: 40, scope: !6646)
!6649 = !DILocation(line: 166, column: 31, scope: !6646)
!6650 = !DILocation(line: 165, column: 15, scope: !6646)
!6651 = !DILocation(line: 165, column: 11, scope: !6646)
!6652 = !DILocation(line: 165, column: 13, scope: !6646)
!6653 = !DILocation(line: 167, column: 15, scope: !6654)
!6654 = distinct !DILexicalBlock(scope: !6646, file: !537, line: 167, column: 8)
!6655 = !DILocation(line: 167, column: 8, scope: !6654)
!6656 = !DILocation(line: 167, column: 8, scope: !6646)
!6657 = !DILocation(line: 168, column: 12, scope: !6658)
!6658 = distinct !DILexicalBlock(scope: !6654, file: !537, line: 167, column: 18)
!6659 = !DILocation(line: 168, column: 18, scope: !6658)
!6660 = !DILocation(line: 168, column: 25, scope: !6658)
!6661 = !DILocation(line: 169, column: 12, scope: !6658)
!6662 = !DILocation(line: 169, column: 18, scope: !6658)
!6663 = !DILocation(line: 169, column: 26, scope: !6658)
!6664 = !DILocation(line: 170, column: 28, scope: !6658)
!6665 = !DILocation(line: 170, column: 30, scope: !6658)
!6666 = !DILocation(line: 171, column: 20, scope: !6658)
!6667 = !DILocation(line: 170, column: 5, scope: !6658)
!6668 = !DILocation(line: 172, column: 14, scope: !6658)
!6669 = !DILocation(line: 172, column: 5, scope: !6658)
!6670 = !DILocation(line: 173, column: 16, scope: !6658)
!6671 = !DILocation(line: 173, column: 20, scope: !6658)
!6672 = !DILocation(line: 173, column: 6, scope: !6658)
!6673 = !DILocation(line: 173, column: 32, scope: !6658)
!6674 = !DILocation(line: 173, column: 38, scope: !6658)
!6675 = !DILocation(line: 174, column: 4, scope: !6658)
!6676 = !DILocation(line: 175, column: 5, scope: !6654)
!6677 = !DILocation(line: 176, column: 3, scope: !6646)
!6678 = !DILocation(line: 177, column: 2, scope: !6635)
!6679 = !DILocation(line: 161, column: 44, scope: !6680)
!6680 = !DILexicalBlockFile(scope: !6631, file: !537, discriminator: 2)
!6681 = !DILocation(line: 161, column: 48, scope: !6680)
!6682 = !DILocation(line: 161, column: 42, scope: !6680)
!6683 = !DILocation(line: 161, column: 2, scope: !6680)
!6684 = !DILocation(line: 179, column: 2, scope: !599)
!6685 = !DILocation(line: 180, column: 1, scope: !599)
!6686 = !DILocalVariable(name: "rrsl", arg: 1, scope: !602, file: !537, line: 182, type: !591)
!6687 = !DILocation(line: 182, column: 33, scope: !602)
!6688 = !DILocalVariable(name: "qname", arg: 2, scope: !602, file: !537, line: 182, type: !20)
!6689 = !DILocation(line: 182, column: 47, scope: !602)
!6690 = !DILocalVariable(name: "fn", scope: !602, file: !537, line: 183, type: !4)
!6691 = !DILocation(line: 183, column: 21, scope: !602)
!6692 = !DILocalVariable(name: "gl", scope: !602, file: !537, line: 184, type: !591)
!6693 = !DILocation(line: 184, column: 10, scope: !602)
!6694 = !DILocalVariable(name: "rk", scope: !602, file: !537, line: 185, type: !562)
!6695 = !DILocation(line: 185, column: 8, scope: !602)
!6696 = !DILocalVariable(name: "rk_new", scope: !602, file: !537, line: 185, type: !562)
!6697 = !DILocation(line: 185, column: 12, scope: !602)
!6698 = !DILocalVariable(name: "qlen", scope: !602, file: !537, line: 186, type: !35)
!6699 = !DILocation(line: 186, column: 9, scope: !602)
!6700 = !DILocation(line: 188, column: 34, scope: !602)
!6701 = !DILocation(line: 188, column: 2, scope: !602)
!6702 = !DILocation(line: 190, column: 7, scope: !6703)
!6703 = distinct !DILexicalBlock(scope: !602, file: !537, line: 190, column: 6)
!6704 = !DILocation(line: 190, column: 6, scope: !6703)
!6705 = !DILocation(line: 190, column: 13, scope: !6703)
!6706 = !DILocation(line: 190, column: 6, scope: !602)
!6707 = !DILocation(line: 191, column: 3, scope: !6703)
!6708 = !DILocation(line: 193, column: 2, scope: !602)
!6709 = !DILocation(line: 193, column: 8, scope: !602)
!6710 = !DILocation(line: 193, column: 18, scope: !602)
!6711 = !DILocation(line: 194, column: 12, scope: !6712)
!6712 = distinct !DILexicalBlock(scope: !602, file: !537, line: 194, column: 2)
!6713 = !DILocation(line: 194, column: 18, scope: !6712)
!6714 = !DILocation(line: 194, column: 10, scope: !6712)
!6715 = !DILocation(line: 194, column: 7, scope: !6712)
!6716 = !DILocation(line: 194, column: 24, scope: !6717)
!6717 = !DILexicalBlockFile(scope: !6718, file: !537, discriminator: 1)
!6718 = distinct !DILexicalBlock(scope: !6712, file: !537, line: 194, column: 2)
!6719 = !DILocation(line: 194, column: 28, scope: !6717)
!6720 = !DILocation(line: 194, column: 2, scope: !6717)
!6721 = !DILocation(line: 196, column: 19, scope: !6722)
!6722 = distinct !DILexicalBlock(scope: !6718, file: !537, line: 195, column: 22)
!6723 = !DILocation(line: 196, column: 23, scope: !6722)
!6724 = !DILocation(line: 196, column: 9, scope: !6722)
!6725 = !DILocation(line: 196, column: 35, scope: !6722)
!6726 = !DILocation(line: 197, column: 10, scope: !6727)
!6727 = distinct !DILexicalBlock(scope: !6722, file: !537, line: 197, column: 7)
!6728 = !DILocation(line: 197, column: 16, scope: !6727)
!6729 = !DILocation(line: 197, column: 7, scope: !6727)
!6730 = !DILocation(line: 197, column: 23, scope: !6727)
!6731 = !DILocation(line: 197, column: 7, scope: !6722)
!6732 = !DILocation(line: 202, column: 32, scope: !6733)
!6733 = distinct !DILexicalBlock(scope: !6727, file: !537, line: 197, column: 34)
!6734 = !DILocation(line: 202, column: 11, scope: !6733)
!6735 = !DILocation(line: 202, column: 39, scope: !6733)
!6736 = !DILocation(line: 202, column: 9, scope: !6733)
!6737 = !DILocation(line: 203, column: 42, scope: !6733)
!6738 = !DILocation(line: 203, column: 40, scope: !6733)
!6739 = !DILocation(line: 203, column: 15, scope: !6733)
!6740 = !DILocation(line: 203, column: 11, scope: !6733)
!6741 = !DILocation(line: 203, column: 13, scope: !6733)
!6742 = !DILocation(line: 204, column: 15, scope: !6743)
!6743 = distinct !DILexicalBlock(scope: !6733, file: !537, line: 204, column: 8)
!6744 = !DILocation(line: 204, column: 8, scope: !6743)
!6745 = !DILocation(line: 204, column: 8, scope: !6733)
!6746 = !DILocation(line: 205, column: 12, scope: !6747)
!6747 = distinct !DILexicalBlock(scope: !6743, file: !537, line: 204, column: 18)
!6748 = !DILocation(line: 205, column: 18, scope: !6747)
!6749 = !DILocation(line: 205, column: 25, scope: !6747)
!6750 = !DILocation(line: 206, column: 12, scope: !6747)
!6751 = !DILocation(line: 206, column: 18, scope: !6747)
!6752 = !DILocation(line: 206, column: 26, scope: !6747)
!6753 = !DILocation(line: 207, column: 19, scope: !6747)
!6754 = !DILocation(line: 207, column: 20, scope: !6747)
!6755 = !DILocation(line: 207, column: 39, scope: !6747)
!6756 = !DILocation(line: 207, column: 46, scope: !6747)
!6757 = !DILocation(line: 207, column: 5, scope: !6747)
!6758 = !DILocation(line: 208, column: 14, scope: !6747)
!6759 = !DILocation(line: 208, column: 5, scope: !6747)
!6760 = !DILocation(line: 209, column: 16, scope: !6747)
!6761 = !DILocation(line: 209, column: 20, scope: !6747)
!6762 = !DILocation(line: 209, column: 6, scope: !6747)
!6763 = !DILocation(line: 209, column: 32, scope: !6747)
!6764 = !DILocation(line: 209, column: 38, scope: !6747)
!6765 = !DILocation(line: 210, column: 4, scope: !6747)
!6766 = !DILocation(line: 211, column: 5, scope: !6743)
!6767 = !DILocation(line: 212, column: 3, scope: !6733)
!6768 = !DILocation(line: 213, column: 2, scope: !6722)
!6769 = !DILocation(line: 195, column: 12, scope: !6718)
!6770 = !DILocation(line: 195, column: 16, scope: !6718)
!6771 = !DILocation(line: 195, column: 10, scope: !6718)
!6772 = !DILocation(line: 194, column: 2, scope: !6773)
!6773 = !DILexicalBlockFile(scope: !6718, file: !537, discriminator: 2)
!6774 = !DILocation(line: 215, column: 2, scope: !602)
!6775 = !DILocation(line: 216, column: 1, scope: !602)
!6776 = !DILocalVariable(name: "v6addr", arg: 1, scope: !603, file: !537, line: 218, type: !20)
!6777 = !DILocation(line: 218, column: 30, scope: !603)
!6778 = !DILocalVariable(name: "fn", scope: !603, file: !537, line: 219, type: !4)
!6779 = !DILocation(line: 219, column: 21, scope: !603)
!6780 = !DILocation(line: 221, column: 8, scope: !6781)
!6781 = distinct !DILexicalBlock(scope: !603, file: !537, line: 221, column: 6)
!6782 = !DILocation(line: 221, column: 18, scope: !6781)
!6783 = !DILocation(line: 221, column: 6, scope: !603)
!6784 = !DILocation(line: 223, column: 4, scope: !6781)
!6785 = !DILocation(line: 222, column: 3, scope: !6781)
!6786 = !DILocation(line: 225, column: 35, scope: !6787)
!6787 = distinct !DILexicalBlock(scope: !603, file: !537, line: 225, column: 6)
!6788 = !DILocation(line: 226, column: 29, scope: !6787)
!6789 = !DILocation(line: 226, column: 18, scope: !6787)
!6790 = !DILocation(line: 225, column: 6, scope: !6787)
!6791 = !DILocation(line: 226, column: 41, scope: !6787)
!6792 = !DILocation(line: 225, column: 6, scope: !603)
!6793 = !DILocation(line: 227, column: 32, scope: !6794)
!6794 = distinct !DILexicalBlock(scope: !6787, file: !537, line: 226, column: 47)
!6795 = !DILocation(line: 227, column: 36, scope: !6794)
!6796 = !DILocation(line: 227, column: 3, scope: !6794)
!6797 = !DILocation(line: 230, column: 14, scope: !6794)
!6798 = !DILocation(line: 231, column: 3, scope: !6794)
!6799 = !DILocation(line: 233, column: 58, scope: !6787)
!6800 = !DILocation(line: 233, column: 62, scope: !6787)
!6801 = !DILocation(line: 233, column: 10, scope: !6787)
!6802 = !DILocation(line: 236, column: 2, scope: !603)
!6803 = !DILocation(line: 237, column: 1, scope: !603)
!6804 = !DILocalVariable(name: "qname", arg: 1, scope: !606, file: !537, line: 242, type: !20)
!6805 = !DILocation(line: 242, column: 36, scope: !606)
!6806 = !DILocalVariable(name: "a6", scope: !606, file: !537, line: 243, type: !614)
!6807 = !DILocation(line: 243, column: 18, scope: !606)
!6808 = !DILocalVariable(name: "qname6", scope: !606, file: !537, line: 244, type: !20)
!6809 = !DILocation(line: 244, column: 10, scope: !606)
!6810 = !DILocalVariable(name: "q6", scope: !606, file: !537, line: 244, type: !20)
!6811 = !DILocation(line: 244, column: 19, scope: !606)
!6812 = !DILocalVariable(name: "p", scope: !606, file: !537, line: 245, type: !20)
!6813 = !DILocation(line: 245, column: 10, scope: !606)
!6814 = !DILocalVariable(name: "buf", scope: !606, file: !537, line: 245, type: !6815)
!6815 = !DICompositeType(tag: DW_TAG_array_type, baseType: !21, size: 24, align: 8, elements: !6816)
!6816 = !{!6817}
!6817 = !DISubrange(count: 3)
!6818 = !DILocation(line: 245, column: 13, scope: !606)
!6819 = !DILocalVariable(name: "val", scope: !606, file: !537, line: 246, type: !73)
!6820 = !DILocation(line: 246, column: 15, scope: !606)
!6821 = !DILocalVariable(name: "i", scope: !606, file: !537, line: 247, type: !33)
!6822 = !DILocation(line: 247, column: 6, scope: !606)
!6823 = !DILocalVariable(name: "cmpsiz", scope: !606, file: !537, line: 248, type: !6824)
!6824 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !33)
!6825 = !DILocation(line: 248, column: 12, scope: !606)
!6826 = !DILocation(line: 250, column: 9, scope: !6827)
!6827 = distinct !DILexicalBlock(scope: !606, file: !537, line: 250, column: 6)
!6828 = !DILocation(line: 250, column: 7, scope: !6827)
!6829 = !DILocation(line: 250, column: 19, scope: !6827)
!6830 = !DILocation(line: 250, column: 23, scope: !6831)
!6831 = !DILexicalBlockFile(scope: !6827, file: !537, discriminator: 1)
!6832 = !DILocation(line: 250, column: 22, scope: !6831)
!6833 = !DILocation(line: 250, column: 29, scope: !6831)
!6834 = !DILocation(line: 250, column: 6, scope: !6831)
!6835 = !DILocation(line: 251, column: 3, scope: !6827)
!6836 = !DILocation(line: 253, column: 23, scope: !6837)
!6837 = distinct !DILexicalBlock(scope: !606, file: !537, line: 253, column: 6)
!6838 = !DILocation(line: 253, column: 8, scope: !6837)
!6839 = !DILocation(line: 253, column: 37, scope: !6837)
!6840 = !DILocation(line: 253, column: 55, scope: !6841)
!6841 = !DILexicalBlockFile(scope: !6837, file: !537, discriminator: 1)
!6842 = !DILocation(line: 253, column: 40, scope: !6841)
!6843 = !DILocation(line: 253, column: 6, scope: !6841)
!6844 = !DILocation(line: 254, column: 3, scope: !6837)
!6845 = !DILocation(line: 256, column: 37, scope: !606)
!6846 = !DILocation(line: 256, column: 22, scope: !606)
!6847 = !DILocation(line: 256, column: 9, scope: !606)
!6848 = !DILocation(line: 257, column: 7, scope: !6849)
!6849 = distinct !DILexicalBlock(scope: !606, file: !537, line: 257, column: 6)
!6850 = !DILocation(line: 257, column: 6, scope: !606)
!6851 = !DILocation(line: 258, column: 38, scope: !6849)
!6852 = !DILocation(line: 258, column: 23, scope: !6849)
!6853 = !DILocation(line: 258, column: 10, scope: !6849)
!6854 = !DILocation(line: 258, column: 3, scope: !6849)
!6855 = !DILocation(line: 259, column: 7, scope: !6856)
!6856 = distinct !DILexicalBlock(scope: !606, file: !537, line: 259, column: 6)
!6857 = !DILocation(line: 259, column: 6, scope: !606)
!6858 = !DILocation(line: 260, column: 3, scope: !6856)
!6859 = !DILocation(line: 262, column: 2, scope: !606)
!6860 = !DILocation(line: 263, column: 8, scope: !606)
!6861 = !DILocation(line: 264, column: 6, scope: !6862)
!6862 = distinct !DILexicalBlock(scope: !606, file: !537, line: 264, column: 6)
!6863 = !DILocation(line: 264, column: 15, scope: !6862)
!6864 = !DILocation(line: 264, column: 13, scope: !6862)
!6865 = !DILocation(line: 264, column: 21, scope: !6862)
!6866 = !DILocation(line: 264, column: 6, scope: !606)
!6867 = !DILocation(line: 265, column: 3, scope: !6862)
!6868 = !DILocation(line: 266, column: 8, scope: !606)
!6869 = !DILocation(line: 267, column: 7, scope: !606)
!6870 = !DILocation(line: 267, column: 5, scope: !606)
!6871 = !DILocation(line: 268, column: 10, scope: !606)
!6872 = !DILocation(line: 268, column: 7, scope: !606)
!6873 = !DILocation(line: 268, column: 4, scope: !606)
!6874 = !DILocation(line: 269, column: 2, scope: !606)
!6875 = !DILocation(line: 269, column: 9, scope: !6876)
!6876 = !DILexicalBlockFile(scope: !606, file: !537, discriminator: 1)
!6877 = !DILocation(line: 269, column: 12, scope: !6876)
!6878 = !DILocation(line: 269, column: 19, scope: !6876)
!6879 = !DILocation(line: 269, column: 16, scope: !6876)
!6880 = !DILocation(line: 269, column: 2, scope: !6876)
!6881 = !DILocation(line: 270, column: 15, scope: !6882)
!6882 = distinct !DILexicalBlock(scope: !606, file: !537, line: 269, column: 26)
!6883 = !DILocation(line: 270, column: 12, scope: !6882)
!6884 = !DILocation(line: 270, column: 3, scope: !6882)
!6885 = !DILocation(line: 270, column: 10, scope: !6882)
!6886 = !DILocation(line: 271, column: 10, scope: !6887)
!6887 = distinct !DILexicalBlock(scope: !6882, file: !537, line: 271, column: 7)
!6888 = !DILocation(line: 271, column: 7, scope: !6887)
!6889 = !DILocation(line: 271, column: 13, scope: !6887)
!6890 = !DILocation(line: 271, column: 7, scope: !6882)
!6891 = !DILocation(line: 272, column: 4, scope: !6887)
!6892 = !DILocation(line: 273, column: 15, scope: !6882)
!6893 = !DILocation(line: 273, column: 12, scope: !6882)
!6894 = !DILocation(line: 273, column: 3, scope: !6882)
!6895 = !DILocation(line: 273, column: 10, scope: !6882)
!6896 = !DILocation(line: 274, column: 10, scope: !6897)
!6897 = distinct !DILexicalBlock(scope: !6882, file: !537, line: 274, column: 7)
!6898 = !DILocation(line: 274, column: 7, scope: !6897)
!6899 = !DILocation(line: 274, column: 13, scope: !6897)
!6900 = !DILocation(line: 274, column: 7, scope: !6882)
!6901 = !DILocation(line: 275, column: 4, scope: !6897)
!6902 = !DILocation(line: 276, column: 3, scope: !6882)
!6903 = !DILocation(line: 276, column: 10, scope: !6882)
!6904 = !DILocation(line: 277, column: 18, scope: !6882)
!6905 = !DILocation(line: 277, column: 3, scope: !6882)
!6906 = !DILocation(line: 278, column: 10, scope: !6882)
!6907 = !DILocation(line: 278, column: 14, scope: !6882)
!6908 = !DILocation(line: 278, column: 5, scope: !6882)
!6909 = !DILocation(line: 278, column: 8, scope: !6882)
!6910 = !DILocation(line: 269, column: 2, scope: !6911)
!6911 = !DILexicalBlockFile(scope: !606, file: !537, discriminator: 2)
!6912 = !DILocation(line: 281, column: 9, scope: !6913)
!6913 = distinct !DILexicalBlock(scope: !606, file: !537, line: 281, column: 2)
!6914 = !DILocation(line: 281, column: 7, scope: !6913)
!6915 = !DILocation(line: 281, column: 14, scope: !6916)
!6916 = !DILexicalBlockFile(scope: !6917, file: !537, discriminator: 1)
!6917 = distinct !DILexicalBlock(scope: !6913, file: !537, line: 281, column: 2)
!6918 = !DILocation(line: 281, column: 20, scope: !6916)
!6919 = !DILocation(line: 281, column: 16, scope: !6916)
!6920 = !DILocation(line: 281, column: 2, scope: !6916)
!6921 = !DILocation(line: 282, column: 14, scope: !6922)
!6922 = distinct !DILexicalBlock(scope: !6923, file: !537, line: 282, column: 7)
!6923 = distinct !DILexicalBlock(scope: !6917, file: !537, line: 281, column: 36)
!6924 = !DILocation(line: 282, column: 29, scope: !6922)
!6925 = !DILocation(line: 282, column: 20, scope: !6922)
!6926 = !DILocation(line: 282, column: 19, scope: !6922)
!6927 = !DILocation(line: 282, column: 7, scope: !6922)
!6928 = !DILocation(line: 282, column: 41, scope: !6922)
!6929 = !DILocation(line: 282, column: 7, scope: !6923)
!6930 = !DILocation(line: 283, column: 4, scope: !6922)
!6931 = !DILocation(line: 284, column: 2, scope: !6923)
!6932 = !DILocation(line: 281, column: 32, scope: !6933)
!6933 = !DILexicalBlockFile(scope: !6917, file: !537, discriminator: 2)
!6934 = !DILocation(line: 281, column: 2, scope: !6933)
!6935 = !DILocation(line: 285, column: 2, scope: !606)
!6936 = !DILocation(line: 286, column: 1, scope: !606)
!6937 = !DILocalVariable(name: "qname", arg: 1, scope: !607, file: !537, line: 289, type: !20)
!6938 = !DILocation(line: 289, column: 33, scope: !607)
!6939 = !DILocalVariable(name: "qname6", scope: !607, file: !537, line: 290, type: !20)
!6940 = !DILocation(line: 290, column: 13, scope: !607)
!6941 = !DILocalVariable(name: "tmpaddr", scope: !607, file: !537, line: 290, type: !6942)
!6942 = !DICompositeType(tag: DW_TAG_array_type, baseType: !21, size: 64, align: 8, elements: !627)
!6943 = !DILocation(line: 290, column: 21, scope: !607)
!6944 = !DILocalVariable(name: "len", scope: !607, file: !537, line: 291, type: !33)
!6945 = !DILocation(line: 291, column: 9, scope: !607)
!6946 = !DILocalVariable(name: "i", scope: !607, file: !537, line: 291, type: !33)
!6947 = !DILocation(line: 291, column: 14, scope: !607)
!6948 = !DILocalVariable(name: "tmp", scope: !607, file: !537, line: 291, type: !33)
!6949 = !DILocation(line: 291, column: 17, scope: !607)
!6950 = !DILocation(line: 293, column: 10, scope: !6951)
!6951 = distinct !DILexicalBlock(scope: !607, file: !537, line: 293, column: 9)
!6952 = !DILocation(line: 293, column: 9, scope: !6951)
!6953 = !DILocation(line: 293, column: 16, scope: !6951)
!6954 = !DILocation(line: 293, column: 9, scope: !607)
!6955 = !DILocation(line: 294, column: 2, scope: !6951)
!6956 = !DILocation(line: 296, column: 9, scope: !607)
!6957 = !DILocation(line: 297, column: 14, scope: !607)
!6958 = !DILocation(line: 297, column: 12, scope: !607)
!6959 = !DILocation(line: 298, column: 5, scope: !607)
!6960 = !DILocation(line: 298, column: 12, scope: !6961)
!6961 = !DILexicalBlockFile(scope: !607, file: !537, discriminator: 1)
!6962 = !DILocation(line: 298, column: 16, scope: !6961)
!6963 = !DILocation(line: 298, column: 5, scope: !6961)
!6964 = !DILocation(line: 299, column: 20, scope: !6965)
!6965 = distinct !DILexicalBlock(scope: !607, file: !537, line: 298, column: 21)
!6966 = !DILocation(line: 299, column: 30, scope: !6965)
!6967 = !DILocation(line: 299, column: 28, scope: !6965)
!6968 = !DILocation(line: 299, column: 44, scope: !6965)
!6969 = !DILocation(line: 299, column: 51, scope: !6965)
!6970 = !DILocation(line: 299, column: 63, scope: !6965)
!6971 = !DILocation(line: 299, column: 62, scope: !6965)
!6972 = !DILocation(line: 299, column: 56, scope: !6965)
!6973 = !DILocation(line: 299, column: 2, scope: !6965)
!6974 = !DILocation(line: 300, column: 16, scope: !6965)
!6975 = !DILocation(line: 300, column: 15, scope: !6965)
!6976 = !DILocation(line: 300, column: 9, scope: !6965)
!6977 = !DILocation(line: 300, column: 6, scope: !6965)
!6978 = !DILocation(line: 301, column: 20, scope: !6965)
!6979 = !DILocation(line: 301, column: 19, scope: !6965)
!6980 = !DILocation(line: 301, column: 13, scope: !6965)
!6981 = !DILocation(line: 301, column: 28, scope: !6965)
!6982 = !DILocation(line: 301, column: 9, scope: !6965)
!6983 = !DILocation(line: 298, column: 5, scope: !6984)
!6984 = !DILexicalBlockFile(scope: !607, file: !537, discriminator: 2)
!6985 = !DILocation(line: 303, column: 12, scope: !6986)
!6986 = distinct !DILexicalBlock(scope: !607, file: !537, line: 303, column: 5)
!6987 = !DILocation(line: 303, column: 10, scope: !6986)
!6988 = !DILocation(line: 303, column: 17, scope: !6989)
!6989 = !DILexicalBlockFile(scope: !6990, file: !537, discriminator: 1)
!6990 = distinct !DILexicalBlock(scope: !6986, file: !537, line: 303, column: 5)
!6991 = !DILocation(line: 303, column: 19, scope: !6989)
!6992 = !DILocation(line: 303, column: 5, scope: !6989)
!6993 = !DILocation(line: 304, column: 6, scope: !6994)
!6994 = distinct !DILexicalBlock(scope: !6995, file: !537, line: 304, column: 6)
!6995 = distinct !DILexicalBlock(scope: !6990, file: !537, line: 303, column: 29)
!6996 = !DILocation(line: 304, column: 6, scope: !6995)
!6997 = !DILocation(line: 305, column: 14, scope: !6994)
!6998 = !DILocation(line: 305, column: 6, scope: !6994)
!6999 = !DILocation(line: 305, column: 17, scope: !6994)
!7000 = !DILocation(line: 306, column: 11, scope: !7001)
!7001 = distinct !DILexicalBlock(scope: !6994, file: !537, line: 306, column: 11)
!7002 = !DILocation(line: 306, column: 11, scope: !6994)
!7003 = !DILocation(line: 307, column: 20, scope: !7001)
!7004 = !DILocation(line: 307, column: 14, scope: !7001)
!7005 = !DILocation(line: 307, column: 6, scope: !7001)
!7006 = !DILocation(line: 307, column: 17, scope: !7001)
!7007 = !DILocation(line: 308, column: 5, scope: !6995)
!7008 = !DILocation(line: 303, column: 25, scope: !7009)
!7009 = !DILexicalBlockFile(scope: !6990, file: !537, discriminator: 2)
!7010 = !DILocation(line: 303, column: 5, scope: !7009)
!7011 = !DILocation(line: 309, column: 19, scope: !7012)
!7012 = distinct !DILexicalBlock(scope: !607, file: !537, line: 309, column: 5)
!7013 = !DILocation(line: 309, column: 17, scope: !7012)
!7014 = !DILocation(line: 309, column: 28, scope: !7012)
!7015 = !DILocation(line: 309, column: 10, scope: !7012)
!7016 = !DILocation(line: 309, column: 33, scope: !7017)
!7017 = !DILexicalBlockFile(scope: !7018, file: !537, discriminator: 1)
!7018 = distinct !DILexicalBlock(scope: !7012, file: !537, line: 309, column: 5)
!7019 = !DILocation(line: 309, column: 35, scope: !7017)
!7020 = !DILocation(line: 309, column: 5, scope: !7017)
!7021 = !DILocation(line: 310, column: 16, scope: !7022)
!7022 = distinct !DILexicalBlock(scope: !7018, file: !537, line: 309, column: 48)
!7023 = !DILocation(line: 310, column: 8, scope: !7022)
!7024 = !DILocation(line: 310, column: 34, scope: !7022)
!7025 = !DILocation(line: 310, column: 36, scope: !7022)
!7026 = !DILocation(line: 310, column: 26, scope: !7022)
!7027 = !DILocation(line: 310, column: 24, scope: !7022)
!7028 = !DILocation(line: 310, column: 19, scope: !7022)
!7029 = !DILocation(line: 310, column: 6, scope: !7022)
!7030 = !DILocation(line: 311, column: 27, scope: !7022)
!7031 = !DILocation(line: 311, column: 34, scope: !7022)
!7032 = !DILocation(line: 311, column: 48, scope: !7022)
!7033 = !DILocation(line: 311, column: 8, scope: !7022)
!7034 = !DILocation(line: 311, column: 6, scope: !7022)
!7035 = !DILocation(line: 312, column: 12, scope: !7022)
!7036 = !DILocation(line: 312, column: 3, scope: !7022)
!7037 = !DILocation(line: 312, column: 10, scope: !7022)
!7038 = !DILocation(line: 313, column: 12, scope: !7022)
!7039 = !DILocation(line: 313, column: 16, scope: !7022)
!7040 = !DILocation(line: 313, column: 9, scope: !7022)
!7041 = !DILocation(line: 314, column: 5, scope: !7022)
!7042 = !DILocation(line: 309, column: 42, scope: !7043)
!7043 = !DILexicalBlockFile(scope: !7018, file: !537, discriminator: 2)
!7044 = !DILocation(line: 309, column: 5, scope: !7043)
!7045 = !DILocation(line: 315, column: 6, scope: !607)
!7046 = !DILocation(line: 315, column: 13, scope: !607)
!7047 = !DILocation(line: 316, column: 23, scope: !607)
!7048 = !DILocation(line: 316, column: 5, scope: !607)
!7049 = !DILocation(line: 318, column: 5, scope: !607)
!7050 = !DILocation(line: 319, column: 1, scope: !607)
!7051 = !DILocalVariable(name: "qname", arg: 1, scope: !610, file: !537, line: 325, type: !20)
!7052 = !DILocation(line: 325, column: 39, scope: !610)
!7053 = !DILocalVariable(name: "a6p", arg: 2, scope: !610, file: !537, line: 325, type: !613)
!7054 = !DILocation(line: 325, column: 63, scope: !610)
!7055 = !DILocalVariable(name: "cmpsiz", scope: !610, file: !537, line: 326, type: !6824)
!7056 = !DILocation(line: 326, column: 12, scope: !610)
!7057 = !DILocalVariable(name: "ip6len", scope: !610, file: !537, line: 327, type: !33)
!7058 = !DILocation(line: 327, column: 6, scope: !610)
!7059 = !DILocalVariable(name: "arpalen", scope: !610, file: !537, line: 327, type: !33)
!7060 = !DILocation(line: 327, column: 14, scope: !610)
!7061 = !DILocalVariable(name: "i", scope: !610, file: !537, line: 327, type: !33)
!7062 = !DILocation(line: 327, column: 23, scope: !610)
!7063 = !DILocation(line: 329, column: 9, scope: !7064)
!7064 = distinct !DILexicalBlock(scope: !610, file: !537, line: 329, column: 6)
!7065 = !DILocation(line: 329, column: 7, scope: !7064)
!7066 = !DILocation(line: 329, column: 19, scope: !7064)
!7067 = !DILocation(line: 329, column: 23, scope: !7068)
!7068 = !DILexicalBlockFile(scope: !7064, file: !537, discriminator: 1)
!7069 = !DILocation(line: 329, column: 22, scope: !7068)
!7070 = !DILocation(line: 329, column: 29, scope: !7068)
!7071 = !DILocation(line: 329, column: 6, scope: !7068)
!7072 = !DILocation(line: 330, column: 3, scope: !7064)
!7073 = !DILocation(line: 332, column: 9, scope: !610)
!7074 = !DILocation(line: 333, column: 10, scope: !610)
!7075 = !DILocation(line: 336, column: 7, scope: !7076)
!7076 = distinct !DILexicalBlock(scope: !610, file: !537, line: 336, column: 6)
!7077 = !DILocation(line: 336, column: 6, scope: !7076)
!7078 = !DILocation(line: 336, column: 13, scope: !7076)
!7079 = !DILocation(line: 336, column: 35, scope: !7076)
!7080 = !DILocation(line: 336, column: 40, scope: !7081)
!7081 = !DILexicalBlockFile(scope: !7076, file: !537, discriminator: 1)
!7082 = !DILocation(line: 336, column: 46, scope: !7081)
!7083 = !DILocation(line: 336, column: 38, scope: !7081)
!7084 = !DILocation(line: 336, column: 51, scope: !7081)
!7085 = !DILocation(line: 336, column: 6, scope: !7081)
!7086 = !DILocation(line: 337, column: 3, scope: !7076)
!7087 = !DILocation(line: 343, column: 9, scope: !610)
!7088 = !DILocation(line: 343, column: 2, scope: !610)
!7089 = !DILocation(line: 343, column: 14, scope: !610)
!7090 = !DILocation(line: 343, column: 20, scope: !610)
!7091 = !DILocation(line: 346, column: 8, scope: !610)
!7092 = !DILocation(line: 348, column: 7, scope: !7093)
!7093 = distinct !DILexicalBlock(scope: !610, file: !537, line: 348, column: 6)
!7094 = !DILocation(line: 348, column: 6, scope: !7093)
!7095 = !DILocation(line: 348, column: 16, scope: !7093)
!7096 = !DILocation(line: 348, column: 13, scope: !7093)
!7097 = !DILocation(line: 348, column: 23, scope: !7093)
!7098 = !DILocation(line: 348, column: 47, scope: !7099)
!7099 = !DILexicalBlockFile(scope: !7093, file: !537, discriminator: 1)
!7100 = !DILocation(line: 348, column: 53, scope: !7099)
!7101 = !DILocation(line: 348, column: 65, scope: !7099)
!7102 = !DILocation(line: 348, column: 27, scope: !7099)
!7103 = !DILocation(line: 349, column: 6, scope: !7093)
!7104 = !DILocation(line: 349, column: 29, scope: !7099)
!7105 = !DILocation(line: 349, column: 35, scope: !7099)
!7106 = !DILocation(line: 349, column: 47, scope: !7099)
!7107 = !DILocation(line: 349, column: 9, scope: !7099)
!7108 = !DILocation(line: 348, column: 6, scope: !7109)
!7109 = !DILexicalBlockFile(scope: !610, file: !537, discriminator: 2)
!7110 = !DILocation(line: 350, column: 3, scope: !7093)
!7111 = !DILocation(line: 352, column: 12, scope: !7093)
!7112 = !DILocation(line: 352, column: 19, scope: !7093)
!7113 = !DILocation(line: 352, column: 9, scope: !7093)
!7114 = !DILocation(line: 354, column: 7, scope: !7115)
!7115 = distinct !DILexicalBlock(scope: !610, file: !537, line: 354, column: 6)
!7116 = !DILocation(line: 354, column: 6, scope: !7115)
!7117 = !DILocation(line: 354, column: 16, scope: !7115)
!7118 = !DILocation(line: 354, column: 13, scope: !7115)
!7119 = !DILocation(line: 354, column: 24, scope: !7115)
!7120 = !DILocation(line: 355, column: 27, scope: !7115)
!7121 = !DILocation(line: 355, column: 33, scope: !7115)
!7122 = !DILocation(line: 355, column: 46, scope: !7115)
!7123 = !DILocation(line: 355, column: 7, scope: !7115)
!7124 = !DILocation(line: 355, column: 55, scope: !7115)
!7125 = !DILocation(line: 356, column: 27, scope: !7115)
!7126 = !DILocation(line: 356, column: 33, scope: !7115)
!7127 = !DILocation(line: 356, column: 46, scope: !7115)
!7128 = !DILocation(line: 356, column: 7, scope: !7115)
!7129 = !DILocation(line: 354, column: 6, scope: !7130)
!7130 = !DILexicalBlockFile(scope: !610, file: !537, discriminator: 1)
!7131 = !DILocation(line: 357, column: 3, scope: !7115)
!7132 = !DILocation(line: 359, column: 11, scope: !610)
!7133 = !DILocation(line: 359, column: 19, scope: !610)
!7134 = !DILocation(line: 359, column: 8, scope: !610)
!7135 = !DILocation(line: 360, column: 7, scope: !7136)
!7136 = distinct !DILexicalBlock(scope: !610, file: !537, line: 360, column: 6)
!7137 = !DILocation(line: 360, column: 6, scope: !7136)
!7138 = !DILocation(line: 360, column: 13, scope: !7136)
!7139 = !DILocation(line: 360, column: 6, scope: !610)
!7140 = !DILocation(line: 361, column: 3, scope: !7136)
!7141 = !DILocation(line: 364, column: 9, scope: !7142)
!7142 = distinct !DILexicalBlock(scope: !610, file: !537, line: 364, column: 2)
!7143 = !DILocation(line: 364, column: 7, scope: !7142)
!7144 = !DILocation(line: 364, column: 14, scope: !7145)
!7145 = !DILexicalBlockFile(scope: !7146, file: !537, discriminator: 1)
!7146 = distinct !DILexicalBlock(scope: !7142, file: !537, line: 364, column: 2)
!7147 = !DILocation(line: 364, column: 20, scope: !7145)
!7148 = !DILocation(line: 364, column: 16, scope: !7145)
!7149 = !DILocation(line: 364, column: 2, scope: !7145)
!7150 = !DILocation(line: 365, column: 15, scope: !7151)
!7151 = distinct !DILexicalBlock(scope: !7152, file: !537, line: 365, column: 7)
!7152 = distinct !DILexicalBlock(scope: !7146, file: !537, line: 364, column: 36)
!7153 = !DILocation(line: 365, column: 30, scope: !7151)
!7154 = !DILocation(line: 365, column: 21, scope: !7151)
!7155 = !DILocation(line: 365, column: 20, scope: !7151)
!7156 = !DILocation(line: 365, column: 8, scope: !7151)
!7157 = !DILocation(line: 365, column: 7, scope: !7152)
!7158 = !DILocation(line: 366, column: 4, scope: !7151)
!7159 = !DILocation(line: 367, column: 2, scope: !7152)
!7160 = !DILocation(line: 364, column: 32, scope: !7161)
!7161 = !DILexicalBlockFile(scope: !7146, file: !537, discriminator: 2)
!7162 = !DILocation(line: 364, column: 2, scope: !7161)
!7163 = !DILocation(line: 369, column: 2, scope: !610)
!7164 = !DILocation(line: 370, column: 1, scope: !610)
!7165 = !DILocalVariable(name: "qname", arg: 1, scope: !633, file: !537, line: 372, type: !20)
!7166 = !DILocation(line: 372, column: 36, scope: !633)
!7167 = !DILocalVariable(name: "a6", arg: 2, scope: !633, file: !537, line: 372, type: !613)
!7168 = !DILocation(line: 372, column: 60, scope: !633)
!7169 = !DILocalVariable(name: "len", scope: !633, file: !537, line: 373, type: !33)
!7170 = !DILocation(line: 373, column: 6, scope: !633)
!7171 = !DILocalVariable(name: "i", scope: !633, file: !537, line: 373, type: !33)
!7172 = !DILocation(line: 373, column: 11, scope: !633)
!7173 = !DILocation(line: 375, column: 7, scope: !7174)
!7174 = distinct !DILexicalBlock(scope: !633, file: !537, line: 375, column: 6)
!7175 = !DILocation(line: 375, column: 6, scope: !7174)
!7176 = !DILocation(line: 375, column: 13, scope: !7174)
!7177 = !DILocation(line: 375, column: 6, scope: !633)
!7178 = !DILocation(line: 376, column: 3, scope: !7174)
!7179 = !DILocation(line: 382, column: 9, scope: !7180)
!7180 = distinct !DILexicalBlock(scope: !633, file: !537, line: 382, column: 2)
!7181 = !DILocation(line: 382, column: 7, scope: !7180)
!7182 = !DILocation(line: 382, column: 14, scope: !7183)
!7183 = !DILexicalBlockFile(scope: !7184, file: !537, discriminator: 1)
!7184 = distinct !DILexicalBlock(scope: !7180, file: !537, line: 382, column: 2)
!7185 = !DILocation(line: 382, column: 16, scope: !7183)
!7186 = !DILocation(line: 382, column: 2, scope: !7183)
!7187 = !DILocation(line: 383, column: 26, scope: !7188)
!7188 = distinct !DILexicalBlock(scope: !7184, file: !537, line: 382, column: 26)
!7189 = !DILocation(line: 383, column: 32, scope: !7188)
!7190 = !DILocation(line: 383, column: 63, scope: !7188)
!7191 = !DILocation(line: 383, column: 61, scope: !7188)
!7192 = !DILocation(line: 383, column: 46, scope: !7188)
!7193 = !DILocation(line: 383, column: 50, scope: !7188)
!7194 = !DILocation(line: 383, column: 9, scope: !7188)
!7195 = !DILocation(line: 383, column: 7, scope: !7188)
!7196 = !DILocation(line: 384, column: 12, scope: !7188)
!7197 = !DILocation(line: 384, column: 4, scope: !7188)
!7198 = !DILocation(line: 384, column: 10, scope: !7188)
!7199 = !DILocation(line: 385, column: 12, scope: !7188)
!7200 = !DILocation(line: 385, column: 16, scope: !7188)
!7201 = !DILocation(line: 385, column: 9, scope: !7188)
!7202 = !DILocation(line: 386, column: 2, scope: !7188)
!7203 = !DILocation(line: 382, column: 22, scope: !7204)
!7204 = !DILexicalBlockFile(scope: !7184, file: !537, discriminator: 2)
!7205 = !DILocation(line: 382, column: 2, scope: !7204)
!7206 = !DILocation(line: 387, column: 18, scope: !633)
!7207 = !DILocation(line: 387, column: 2, scope: !633)
!7208 = !DILocation(line: 389, column: 2, scope: !633)
!7209 = !DILocation(line: 390, column: 1, scope: !633)
!7210 = !DILocalVariable(name: "srv_sock", arg: 1, scope: !741, file: !643, line: 24, type: !33)
!7211 = !DILocation(line: 24, column: 28, scope: !741)
!7212 = !DILocalVariable(name: "peer", scope: !741, file: !643, line: 25, type: !7213)
!7213 = !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr_storage", file: !9, line: 166, size: 1024, align: 64, elements: !7214)
!7214 = !{!7215, !7216, !7220}
!7215 = !DIDerivedType(tag: DW_TAG_member, name: "ss_family", scope: !7213, file: !9, line: 168, baseType: !12, size: 16, align: 16)
!7216 = !DIDerivedType(tag: DW_TAG_member, name: "__ss_padding", scope: !7213, file: !9, line: 169, baseType: !7217, size: 944, align: 8, offset: 16)
!7217 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6, size: 944, align: 8, elements: !7218)
!7218 = !{!7219}
!7219 = !DISubrange(count: 118)
!7220 = !DIDerivedType(tag: DW_TAG_member, name: "__ss_align", scope: !7213, file: !9, line: 170, baseType: !37, size: 64, align: 64, offset: 960)
!7221 = !DILocation(line: 25, column: 26, scope: !741)
!7222 = !DILocalVariable(name: "peer_len", scope: !741, file: !643, line: 26, type: !73)
!7223 = !DILocation(line: 26, column: 15, scope: !741)
!7224 = !DILocalVariable(name: "conn_sock", scope: !741, file: !643, line: 27, type: !33)
!7225 = !DILocation(line: 27, column: 6, scope: !741)
!7226 = !DILocation(line: 29, column: 8, scope: !7227)
!7227 = distinct !DILexicalBlock(scope: !741, file: !643, line: 29, column: 6)
!7228 = !DILocation(line: 29, column: 14, scope: !7227)
!7229 = !DILocation(line: 29, column: 6, scope: !741)
!7230 = !DILocation(line: 30, column: 56, scope: !7227)
!7231 = !DILocation(line: 30, column: 3, scope: !7227)
!7232 = !DILocation(line: 32, column: 11, scope: !741)
!7233 = !DILocation(line: 33, column: 22, scope: !741)
!7234 = !DILocation(line: 33, column: 32, scope: !741)
!7235 = !DILocation(line: 33, column: 14, scope: !741)
!7236 = !DILocation(line: 33, column: 12, scope: !741)
!7237 = !DILocation(line: 34, column: 6, scope: !7238)
!7238 = distinct !DILexicalBlock(scope: !741, file: !643, line: 34, column: 6)
!7239 = !DILocation(line: 34, column: 16, scope: !7238)
!7240 = !DILocation(line: 34, column: 6, scope: !741)
!7241 = !DILocation(line: 35, column: 3, scope: !7242)
!7242 = distinct !DILexicalBlock(scope: !7238, file: !643, line: 34, column: 21)
!7243 = !DILocation(line: 36, column: 3, scope: !7242)
!7244 = !DILocation(line: 39, column: 29, scope: !741)
!7245 = !DILocation(line: 39, column: 40, scope: !741)
!7246 = !DILocation(line: 39, column: 9, scope: !741)
!7247 = !DILocation(line: 39, column: 2, scope: !741)
!7248 = !DILocation(line: 40, column: 1, scope: !741)
!7249 = !DILocalVariable(name: "arg1", arg: 1, scope: !744, file: !643, line: 46, type: !26)
!7250 = !DILocation(line: 46, column: 29, scope: !744)
!7251 = !DILocalVariable(name: "arg2", arg: 2, scope: !744, file: !643, line: 46, type: !26)
!7252 = !DILocation(line: 46, column: 41, scope: !744)
!7253 = !DILocalVariable(name: "etcd_arg1", scope: !744, file: !643, line: 47, type: !650)
!7254 = !DILocation(line: 47, column: 22, scope: !744)
!7255 = !DILocalVariable(name: "etcd_arg2", scope: !744, file: !643, line: 48, type: !650)
!7256 = !DILocation(line: 48, column: 22, scope: !744)
!7257 = !DILocation(line: 50, column: 14, scope: !744)
!7258 = !DILocation(line: 50, column: 12, scope: !744)
!7259 = !DILocation(line: 51, column: 14, scope: !744)
!7260 = !DILocation(line: 51, column: 12, scope: !744)
!7261 = !DILocation(line: 53, column: 6, scope: !7262)
!7262 = distinct !DILexicalBlock(scope: !744, file: !643, line: 53, column: 6)
!7263 = !DILocation(line: 53, column: 17, scope: !7262)
!7264 = !DILocation(line: 53, column: 25, scope: !7262)
!7265 = !DILocation(line: 53, column: 36, scope: !7262)
!7266 = !DILocation(line: 53, column: 22, scope: !7262)
!7267 = !DILocation(line: 53, column: 6, scope: !744)
!7268 = !DILocation(line: 54, column: 3, scope: !7262)
!7269 = !DILocation(line: 56, column: 3, scope: !7262)
!7270 = !DILocation(line: 57, column: 1, scope: !744)
!7271 = !DILocalVariable(name: "gl", scope: !747, file: !643, line: 60, type: !666)
!7272 = !DILocation(line: 60, column: 10, scope: !747)
!7273 = !DILocation(line: 62, column: 7, scope: !747)
!7274 = !DILocation(line: 62, column: 5, scope: !747)
!7275 = !DILocation(line: 63, column: 7, scope: !7276)
!7276 = distinct !DILexicalBlock(scope: !747, file: !643, line: 63, column: 6)
!7277 = !DILocation(line: 63, column: 6, scope: !747)
!7278 = !DILocation(line: 64, column: 3, scope: !7276)
!7279 = !DILocation(line: 66, column: 2, scope: !747)
!7280 = !DILocation(line: 66, column: 6, scope: !747)
!7281 = !DILocation(line: 66, column: 16, scope: !747)
!7282 = !DILocation(line: 67, column: 9, scope: !747)
!7283 = !DILocation(line: 67, column: 2, scope: !747)
!7284 = !DILocation(line: 68, column: 1, scope: !747)
!7285 = !DILocalVariable(name: "gl", arg: 1, scope: !750, file: !643, line: 70, type: !666)
!7286 = !DILocation(line: 70, column: 37, scope: !750)
!7287 = !DILocalVariable(name: "sock", arg: 2, scope: !750, file: !643, line: 70, type: !33)
!7288 = !DILocation(line: 70, column: 45, scope: !750)
!7289 = !DILocalVariable(name: "cptr", arg: 3, scope: !750, file: !643, line: 70, type: !656)
!7290 = !DILocation(line: 70, column: 60, scope: !750)
!7291 = !DILocalVariable(name: "fn", scope: !750, file: !643, line: 71, type: !4)
!7292 = !DILocation(line: 71, column: 21, scope: !750)
!7293 = !DILocalVariable(name: "etcd_new", scope: !750, file: !643, line: 72, type: !650)
!7294 = !DILocation(line: 72, column: 22, scope: !750)
!7295 = !DILocation(line: 74, column: 8, scope: !7296)
!7296 = distinct !DILexicalBlock(scope: !750, file: !643, line: 74, column: 6)
!7297 = !DILocation(line: 74, column: 14, scope: !7296)
!7298 = !DILocation(line: 74, column: 6, scope: !750)
!7299 = !DILocation(line: 75, column: 39, scope: !7296)
!7300 = !DILocation(line: 75, column: 43, scope: !7296)
!7301 = !DILocation(line: 75, column: 3, scope: !7296)
!7302 = !DILocation(line: 77, column: 13, scope: !750)
!7303 = !DILocation(line: 77, column: 11, scope: !750)
!7304 = !DILocation(line: 78, column: 7, scope: !7305)
!7305 = distinct !DILexicalBlock(scope: !750, file: !643, line: 78, column: 6)
!7306 = !DILocation(line: 78, column: 6, scope: !750)
!7307 = !DILocation(line: 79, column: 3, scope: !7305)
!7308 = !DILocation(line: 81, column: 19, scope: !750)
!7309 = !DILocation(line: 81, column: 2, scope: !750)
!7310 = !DILocation(line: 81, column: 12, scope: !750)
!7311 = !DILocation(line: 81, column: 17, scope: !750)
!7312 = !DILocation(line: 82, column: 19, scope: !750)
!7313 = !DILocation(line: 82, column: 2, scope: !750)
!7314 = !DILocation(line: 82, column: 12, scope: !750)
!7315 = !DILocation(line: 82, column: 17, scope: !750)
!7316 = !DILocation(line: 84, column: 16, scope: !7317)
!7317 = distinct !DILexicalBlock(scope: !750, file: !643, line: 84, column: 6)
!7318 = !DILocation(line: 84, column: 20, scope: !7317)
!7319 = !DILocation(line: 84, column: 6, scope: !7317)
!7320 = !DILocation(line: 84, column: 30, scope: !7317)
!7321 = !DILocation(line: 84, column: 6, scope: !750)
!7322 = !DILocation(line: 85, column: 3, scope: !7317)
!7323 = !DILocation(line: 87, column: 2, scope: !750)
!7324 = !DILocation(line: 88, column: 1, scope: !750)
!7325 = !DILocalVariable(name: "gl", arg: 1, scope: !753, file: !643, line: 90, type: !666)
!7326 = !DILocation(line: 90, column: 35, scope: !753)
!7327 = !DILocalVariable(name: "sock", arg: 2, scope: !753, file: !643, line: 90, type: !33)
!7328 = !DILocation(line: 90, column: 43, scope: !753)
!7329 = !DILocalVariable(name: "fn", scope: !753, file: !643, line: 91, type: !4)
!7330 = !DILocation(line: 91, column: 21, scope: !753)
!7331 = !DILocalVariable(name: "etcd_tmp", scope: !753, file: !643, line: 92, type: !651)
!7332 = !DILocation(line: 92, column: 21, scope: !753)
!7333 = !DILocalVariable(name: "etcd_p", scope: !753, file: !643, line: 93, type: !650)
!7334 = !DILocation(line: 93, column: 22, scope: !753)
!7335 = !DILocalVariable(name: "gl_tmp", scope: !753, file: !643, line: 94, type: !666)
!7336 = !DILocation(line: 94, column: 10, scope: !753)
!7337 = !DILocation(line: 96, column: 8, scope: !7338)
!7338 = distinct !DILexicalBlock(scope: !753, file: !643, line: 96, column: 6)
!7339 = !DILocation(line: 96, column: 14, scope: !7338)
!7340 = !DILocation(line: 96, column: 6, scope: !753)
!7341 = !DILocation(line: 97, column: 39, scope: !7338)
!7342 = !DILocation(line: 97, column: 43, scope: !7338)
!7343 = !DILocation(line: 97, column: 3, scope: !7338)
!7344 = !DILocation(line: 99, column: 18, scope: !753)
!7345 = !DILocation(line: 99, column: 11, scope: !753)
!7346 = !DILocation(line: 99, column: 16, scope: !753)
!7347 = !DILocation(line: 100, column: 11, scope: !753)
!7348 = !DILocation(line: 100, column: 16, scope: !753)
!7349 = !DILocation(line: 102, column: 24, scope: !753)
!7350 = !DILocation(line: 102, column: 28, scope: !753)
!7351 = !DILocation(line: 102, column: 11, scope: !753)
!7352 = !DILocation(line: 102, column: 9, scope: !753)
!7353 = !DILocation(line: 103, column: 7, scope: !7354)
!7354 = distinct !DILexicalBlock(scope: !753, file: !643, line: 103, column: 6)
!7355 = !DILocation(line: 103, column: 6, scope: !753)
!7356 = !DILocation(line: 104, column: 3, scope: !7354)
!7357 = !DILocation(line: 106, column: 47, scope: !753)
!7358 = !DILocation(line: 106, column: 34, scope: !753)
!7359 = !DILocation(line: 106, column: 11, scope: !753)
!7360 = !DILocation(line: 106, column: 9, scope: !753)
!7361 = !DILocation(line: 107, column: 8, scope: !753)
!7362 = !DILocation(line: 107, column: 2, scope: !753)
!7363 = !DILocation(line: 109, column: 2, scope: !753)
!7364 = !DILocation(line: 110, column: 1, scope: !753)
!7365 = !DILocalVariable(name: "gl", arg: 1, scope: !756, file: !643, line: 112, type: !666)
!7366 = !DILocation(line: 112, column: 32, scope: !756)
!7367 = !DILocalVariable(name: "fds", arg: 2, scope: !756, file: !643, line: 112, type: !759)
!7368 = !DILocation(line: 112, column: 44, scope: !756)
!7369 = !DILocalVariable(name: "etcd_p", scope: !756, file: !643, line: 113, type: !650)
!7370 = !DILocation(line: 113, column: 22, scope: !756)
!7371 = !DILocalVariable(name: "gl_tmp", scope: !756, file: !643, line: 114, type: !666)
!7372 = !DILocation(line: 114, column: 10, scope: !756)
!7373 = !DILocalVariable(name: "maxid", scope: !756, file: !643, line: 115, type: !33)
!7374 = !DILocation(line: 115, column: 6, scope: !756)
!7375 = !DILocation(line: 117, column: 2, scope: !756)
!7376 = !DILocation(line: 117, column: 6, scope: !756)
!7377 = !DILocation(line: 117, column: 16, scope: !756)
!7378 = !DILocation(line: 118, column: 16, scope: !7379)
!7379 = distinct !DILexicalBlock(scope: !756, file: !643, line: 118, column: 2)
!7380 = !DILocation(line: 118, column: 20, scope: !7379)
!7381 = !DILocation(line: 118, column: 14, scope: !7379)
!7382 = !DILocation(line: 118, column: 7, scope: !7379)
!7383 = !DILocation(line: 118, column: 26, scope: !7384)
!7384 = !DILexicalBlockFile(scope: !7385, file: !643, discriminator: 1)
!7385 = distinct !DILexicalBlock(scope: !7379, file: !643, line: 118, column: 2)
!7386 = !DILocation(line: 118, column: 34, scope: !7384)
!7387 = !DILocation(line: 118, column: 2, scope: !7384)
!7388 = !DILocation(line: 119, column: 37, scope: !7389)
!7389 = distinct !DILexicalBlock(scope: !7385, file: !643, line: 118, column: 68)
!7390 = !DILocation(line: 119, column: 45, scope: !7389)
!7391 = !DILocation(line: 119, column: 13, scope: !7389)
!7392 = !DILocation(line: 119, column: 10, scope: !7389)
!7393 = !DILocation(line: 120, column: 9, scope: !7394)
!7394 = distinct !DILexicalBlock(scope: !7389, file: !643, line: 120, column: 7)
!7395 = !DILocation(line: 120, column: 15, scope: !7394)
!7396 = !DILocation(line: 120, column: 7, scope: !7389)
!7397 = !DILocation(line: 122, column: 5, scope: !7394)
!7398 = !DILocation(line: 122, column: 13, scope: !7394)
!7399 = !DILocation(line: 121, column: 4, scope: !7394)
!7400 = !DILocation(line: 123, column: 3, scope: !7389)
!7401 = !DILocation(line: 124, column: 11, scope: !7389)
!7402 = !DILocation(line: 124, column: 11, scope: !7403)
!7403 = !DILexicalBlockFile(scope: !7389, file: !643, discriminator: 1)
!7404 = !DILocation(line: 124, column: 11, scope: !7405)
!7405 = !DILexicalBlockFile(scope: !7389, file: !643, discriminator: 2)
!7406 = !DILocation(line: 124, column: 11, scope: !7407)
!7407 = !DILexicalBlockFile(scope: !7389, file: !643, discriminator: 3)
!7408 = !DILocation(line: 124, column: 9, scope: !7407)
!7409 = !DILocation(line: 125, column: 2, scope: !7389)
!7410 = !DILocation(line: 118, column: 54, scope: !7411)
!7411 = !DILexicalBlockFile(scope: !7385, file: !643, discriminator: 2)
!7412 = !DILocation(line: 118, column: 62, scope: !7411)
!7413 = !DILocation(line: 118, column: 52, scope: !7411)
!7414 = !DILocation(line: 118, column: 2, scope: !7411)
!7415 = !DILocation(line: 127, column: 9, scope: !756)
!7416 = !DILocation(line: 127, column: 2, scope: !756)
!7417 = !DILocalVariable(name: "gl", arg: 1, scope: !765, file: !643, line: 130, type: !666)
!7418 = !DILocation(line: 130, column: 37, scope: !765)
!7419 = !DILocalVariable(name: "fds", arg: 2, scope: !765, file: !643, line: 130, type: !759)
!7420 = !DILocation(line: 130, column: 49, scope: !765)
!7421 = !DILocalVariable(name: "gl_tmp", scope: !765, file: !643, line: 131, type: !666)
!7422 = !DILocation(line: 131, column: 10, scope: !765)
!7423 = !DILocalVariable(name: "cont", scope: !765, file: !643, line: 132, type: !656)
!7424 = !DILocation(line: 132, column: 11, scope: !765)
!7425 = !DILocalVariable(name: "etcd_p", scope: !765, file: !643, line: 133, type: !650)
!7426 = !DILocation(line: 133, column: 22, scope: !765)
!7427 = !DILocalVariable(name: "s_tmp", scope: !765, file: !643, line: 134, type: !33)
!7428 = !DILocation(line: 134, column: 6, scope: !765)
!7429 = !DILocation(line: 136, column: 16, scope: !7430)
!7430 = distinct !DILexicalBlock(scope: !765, file: !643, line: 136, column: 2)
!7431 = !DILocation(line: 136, column: 20, scope: !7430)
!7432 = !DILocation(line: 136, column: 14, scope: !7430)
!7433 = !DILocation(line: 136, column: 7, scope: !7430)
!7434 = !DILocation(line: 136, column: 26, scope: !7435)
!7435 = !DILexicalBlockFile(scope: !7436, file: !643, discriminator: 1)
!7436 = distinct !DILexicalBlock(scope: !7430, file: !643, line: 136, column: 2)
!7437 = !DILocation(line: 136, column: 34, scope: !7435)
!7438 = !DILocation(line: 136, column: 2, scope: !7435)
!7439 = !DILocation(line: 137, column: 36, scope: !7440)
!7440 = distinct !DILexicalBlock(scope: !7436, file: !643, line: 136, column: 68)
!7441 = !DILocation(line: 137, column: 44, scope: !7440)
!7442 = !DILocation(line: 137, column: 12, scope: !7440)
!7443 = !DILocation(line: 137, column: 10, scope: !7440)
!7444 = !DILocation(line: 138, column: 11, scope: !7440)
!7445 = !DILocation(line: 138, column: 19, scope: !7440)
!7446 = !DILocation(line: 138, column: 9, scope: !7440)
!7447 = !DILocation(line: 140, column: 7, scope: !7448)
!7448 = distinct !DILexicalBlock(scope: !7440, file: !643, line: 140, column: 7)
!7449 = !DILocation(line: 140, column: 7, scope: !7440)
!7450 = !DILocation(line: 141, column: 4, scope: !7451)
!7451 = distinct !DILexicalBlock(scope: !7448, file: !643, line: 140, column: 30)
!7452 = !DILocation(line: 147, column: 11, scope: !7451)
!7453 = !DILocation(line: 147, column: 19, scope: !7451)
!7454 = !DILocation(line: 147, column: 9, scope: !7451)
!7455 = !DILocation(line: 150, column: 11, scope: !7451)
!7456 = !DILocation(line: 150, column: 17, scope: !7451)
!7457 = !DILocation(line: 150, column: 26, scope: !7451)
!7458 = !DILocation(line: 150, column: 4, scope: !7451)
!7459 = !DILocation(line: 152, column: 2, scope: !7440)
!7460 = !DILocation(line: 136, column: 54, scope: !7461)
!7461 = !DILexicalBlockFile(scope: !7436, file: !643, discriminator: 2)
!7462 = !DILocation(line: 136, column: 62, scope: !7461)
!7463 = !DILocation(line: 136, column: 52, scope: !7461)
!7464 = !DILocation(line: 136, column: 2, scope: !7461)
!7465 = !DILocation(line: 153, column: 2, scope: !765)
!7466 = !DILocation(line: 154, column: 1, scope: !765)
!7467 = !DILocation(line: 161, column: 6, scope: !7468)
!7468 = distinct !DILexicalBlock(scope: !766, file: !643, line: 161, column: 6)
!7469 = !DILocation(line: 161, column: 6, scope: !766)
!7470 = !DILocation(line: 162, column: 3, scope: !7468)
!7471 = !DILocation(line: 164, column: 15, scope: !766)
!7472 = !DILocation(line: 164, column: 13, scope: !766)
!7473 = !DILocation(line: 165, column: 7, scope: !7474)
!7474 = distinct !DILexicalBlock(scope: !766, file: !643, line: 165, column: 6)
!7475 = !DILocation(line: 165, column: 6, scope: !766)
!7476 = !DILocation(line: 166, column: 3, scope: !7474)
!7477 = !DILocation(line: 167, column: 2, scope: !766)
!7478 = !DILocation(line: 168, column: 1, scope: !766)
!7479 = !DILocation(line: 171, column: 16, scope: !769)
!7480 = !DILocation(line: 171, column: 2, scope: !769)
!7481 = !DILocation(line: 172, column: 1, scope: !769)
!7482 = !DILocalVariable(name: "sock", arg: 1, scope: !772, file: !643, line: 174, type: !33)
!7483 = !DILocation(line: 174, column: 34, scope: !772)
!7484 = !DILocalVariable(name: "cptr", arg: 2, scope: !772, file: !643, line: 174, type: !656)
!7485 = !DILocation(line: 174, column: 49, scope: !772)
!7486 = !DILocation(line: 175, column: 8, scope: !7487)
!7487 = distinct !DILexicalBlock(scope: !772, file: !643, line: 175, column: 6)
!7488 = !DILocation(line: 175, column: 14, scope: !7487)
!7489 = !DILocation(line: 175, column: 6, scope: !772)
!7490 = !DILocation(line: 176, column: 3, scope: !7487)
!7491 = !DILocation(line: 177, column: 33, scope: !772)
!7492 = !DILocation(line: 177, column: 45, scope: !772)
!7493 = !DILocation(line: 177, column: 51, scope: !772)
!7494 = !DILocation(line: 177, column: 9, scope: !772)
!7495 = !DILocation(line: 177, column: 2, scope: !772)
!7496 = !DILocalVariable(name: "sock", arg: 1, scope: !775, file: !643, line: 180, type: !33)
!7497 = !DILocation(line: 180, column: 32, scope: !775)
!7498 = !DILocation(line: 181, column: 8, scope: !7499)
!7499 = distinct !DILexicalBlock(scope: !775, file: !643, line: 181, column: 6)
!7500 = !DILocation(line: 181, column: 14, scope: !7499)
!7501 = !DILocation(line: 181, column: 6, scope: !775)
!7502 = !DILocation(line: 182, column: 3, scope: !7499)
!7503 = !DILocation(line: 183, column: 31, scope: !775)
!7504 = !DILocation(line: 183, column: 43, scope: !775)
!7505 = !DILocation(line: 183, column: 9, scope: !775)
!7506 = !DILocation(line: 183, column: 2, scope: !775)
!7507 = !DILocalVariable(name: "fds", arg: 1, scope: !776, file: !643, line: 186, type: !759)
!7508 = !DILocation(line: 186, column: 33, scope: !776)
!7509 = !DILocation(line: 187, column: 8, scope: !7510)
!7510 = distinct !DILexicalBlock(scope: !776, file: !643, line: 187, column: 6)
!7511 = !DILocation(line: 187, column: 14, scope: !7510)
!7512 = !DILocation(line: 187, column: 6, scope: !776)
!7513 = !DILocation(line: 188, column: 3, scope: !7510)
!7514 = !DILocation(line: 189, column: 28, scope: !776)
!7515 = !DILocation(line: 189, column: 40, scope: !776)
!7516 = !DILocation(line: 189, column: 9, scope: !776)
!7517 = !DILocation(line: 189, column: 2, scope: !776)
!7518 = !DILocalVariable(name: "fds", arg: 1, scope: !779, file: !643, line: 192, type: !759)
!7519 = !DILocation(line: 192, column: 38, scope: !779)
!7520 = !DILocation(line: 193, column: 8, scope: !7521)
!7521 = distinct !DILexicalBlock(scope: !779, file: !643, line: 193, column: 6)
!7522 = !DILocation(line: 193, column: 14, scope: !7521)
!7523 = !DILocation(line: 193, column: 6, scope: !779)
!7524 = !DILocation(line: 194, column: 3, scope: !7521)
!7525 = !DILocation(line: 195, column: 33, scope: !779)
!7526 = !DILocation(line: 195, column: 45, scope: !779)
!7527 = !DILocation(line: 195, column: 9, scope: !779)
!7528 = !DILocation(line: 195, column: 2, scope: !779)
!7529 = !DILocation(line: 204, column: 6, scope: !7530)
!7530 = distinct !DILexicalBlock(scope: !780, file: !643, line: 204, column: 6)
!7531 = !DILocation(line: 204, column: 6, scope: !780)
!7532 = !DILocation(line: 205, column: 3, scope: !7530)
!7533 = !DILocation(line: 207, column: 14, scope: !780)
!7534 = !DILocation(line: 207, column: 12, scope: !780)
!7535 = !DILocation(line: 208, column: 7, scope: !7536)
!7536 = distinct !DILexicalBlock(scope: !780, file: !643, line: 208, column: 6)
!7537 = !DILocation(line: 208, column: 6, scope: !780)
!7538 = !DILocation(line: 209, column: 3, scope: !7536)
!7539 = !DILocation(line: 211, column: 2, scope: !780)
!7540 = !DILocation(line: 212, column: 1, scope: !780)
!7541 = !DILocation(line: 215, column: 16, scope: !781)
!7542 = !DILocation(line: 215, column: 2, scope: !781)
!7543 = !DILocation(line: 216, column: 1, scope: !781)
!7544 = !DILocalVariable(name: "sock", arg: 1, scope: !782, file: !643, line: 218, type: !33)
!7545 = !DILocation(line: 218, column: 30, scope: !782)
!7546 = !DILocalVariable(name: "cptr", arg: 2, scope: !782, file: !643, line: 218, type: !656)
!7547 = !DILocation(line: 218, column: 46, scope: !782)
!7548 = !DILocation(line: 219, column: 8, scope: !7549)
!7549 = distinct !DILexicalBlock(scope: !782, file: !643, line: 219, column: 6)
!7550 = !DILocation(line: 219, column: 14, scope: !7549)
!7551 = !DILocation(line: 219, column: 6, scope: !782)
!7552 = !DILocation(line: 220, column: 3, scope: !7549)
!7553 = !DILocation(line: 221, column: 33, scope: !782)
!7554 = !DILocation(line: 221, column: 44, scope: !782)
!7555 = !DILocation(line: 221, column: 50, scope: !782)
!7556 = !DILocation(line: 221, column: 9, scope: !782)
!7557 = !DILocation(line: 221, column: 2, scope: !782)
!7558 = !DILocalVariable(name: "sock", arg: 1, scope: !783, file: !643, line: 224, type: !33)
!7559 = !DILocation(line: 224, column: 28, scope: !783)
!7560 = !DILocation(line: 225, column: 8, scope: !7561)
!7561 = distinct !DILexicalBlock(scope: !783, file: !643, line: 225, column: 6)
!7562 = !DILocation(line: 225, column: 14, scope: !7561)
!7563 = !DILocation(line: 225, column: 6, scope: !783)
!7564 = !DILocation(line: 226, column: 3, scope: !7561)
!7565 = !DILocation(line: 227, column: 31, scope: !783)
!7566 = !DILocation(line: 227, column: 42, scope: !783)
!7567 = !DILocation(line: 227, column: 9, scope: !783)
!7568 = !DILocation(line: 227, column: 2, scope: !783)
!7569 = !DILocalVariable(name: "fds", arg: 1, scope: !784, file: !643, line: 230, type: !759)
!7570 = !DILocation(line: 230, column: 30, scope: !784)
!7571 = !DILocation(line: 231, column: 8, scope: !7572)
!7572 = distinct !DILexicalBlock(scope: !784, file: !643, line: 231, column: 6)
!7573 = !DILocation(line: 231, column: 14, scope: !7572)
!7574 = !DILocation(line: 231, column: 6, scope: !784)
!7575 = !DILocation(line: 232, column: 3, scope: !7572)
!7576 = !DILocation(line: 233, column: 28, scope: !784)
!7577 = !DILocation(line: 233, column: 39, scope: !784)
!7578 = !DILocation(line: 233, column: 9, scope: !784)
!7579 = !DILocation(line: 233, column: 2, scope: !784)
!7580 = !DILocalVariable(name: "fds", arg: 1, scope: !785, file: !643, line: 236, type: !759)
!7581 = !DILocation(line: 236, column: 35, scope: !785)
!7582 = !DILocation(line: 237, column: 8, scope: !7583)
!7583 = distinct !DILexicalBlock(scope: !785, file: !643, line: 237, column: 6)
!7584 = !DILocation(line: 237, column: 14, scope: !7583)
!7585 = !DILocation(line: 237, column: 6, scope: !785)
!7586 = !DILocation(line: 238, column: 3, scope: !7583)
!7587 = !DILocation(line: 239, column: 33, scope: !785)
!7588 = !DILocation(line: 239, column: 44, scope: !785)
!7589 = !DILocation(line: 239, column: 9, scope: !785)
!7590 = !DILocation(line: 239, column: 2, scope: !785)
!7591 = !DILocalVariable(name: "sa", arg: 1, scope: !855, file: !790, line: 16, type: !844)
!7592 = !DILocation(line: 16, column: 36, scope: !855)
!7593 = !DILocalVariable(name: "address_str", arg: 2, scope: !855, file: !790, line: 16, type: !19)
!7594 = !DILocation(line: 16, column: 46, scope: !855)
!7595 = !DILocalVariable(name: "tmp", scope: !855, file: !790, line: 17, type: !2723)
!7596 = !DILocation(line: 17, column: 10, scope: !855)
!7597 = !DILocation(line: 19, column: 2, scope: !855)
!7598 = !DILocation(line: 19, column: 17, scope: !855)
!7599 = !DILocation(line: 21, column: 10, scope: !7600)
!7600 = distinct !DILexicalBlock(scope: !855, file: !790, line: 21, column: 10)
!7601 = !DILocation(line: 21, column: 14, scope: !7600)
!7602 = !DILocation(line: 21, column: 24, scope: !7600)
!7603 = !DILocation(line: 21, column: 10, scope: !855)
!7604 = !DILocalVariable(name: "sin_p", scope: !7605, file: !790, line: 22, type: !805)
!7605 = distinct !DILexicalBlock(scope: !7600, file: !790, line: 21, column: 36)
!7606 = !DILocation(line: 22, column: 23, scope: !7605)
!7607 = !DILocation(line: 22, column: 54, scope: !7605)
!7608 = !DILocation(line: 22, column: 31, scope: !7605)
!7609 = !DILocation(line: 23, column: 14, scope: !7605)
!7610 = !DILocation(line: 23, column: 21, scope: !7605)
!7611 = !DILocation(line: 23, column: 43, scope: !7605)
!7612 = !DILocation(line: 23, column: 50, scope: !7605)
!7613 = !DILocation(line: 23, column: 33, scope: !7605)
!7614 = !DILocation(line: 23, column: 60, scope: !7605)
!7615 = !DILocation(line: 23, column: 3, scope: !7605)
!7616 = !DILocation(line: 25, column: 13, scope: !7605)
!7617 = !DILocation(line: 25, column: 48, scope: !7605)
!7618 = !DILocation(line: 26, column: 12, scope: !7605)
!7619 = !DILocation(line: 26, column: 19, scope: !7605)
!7620 = !DILocation(line: 26, column: 6, scope: !7605)
!7621 = !DILocation(line: 25, column: 3, scope: !7605)
!7622 = !DILocation(line: 27, column: 6, scope: !7605)
!7623 = !DILocation(line: 30, column: 10, scope: !7624)
!7624 = distinct !DILexicalBlock(scope: !855, file: !790, line: 30, column: 10)
!7625 = !DILocation(line: 30, column: 14, scope: !7624)
!7626 = !DILocation(line: 30, column: 24, scope: !7624)
!7627 = !DILocation(line: 30, column: 10, scope: !855)
!7628 = !DILocalVariable(name: "sin6_p", scope: !7629, file: !790, line: 31, type: !818)
!7629 = distinct !DILexicalBlock(scope: !7624, file: !790, line: 30, column: 37)
!7630 = !DILocation(line: 31, column: 24, scope: !7629)
!7631 = !DILocation(line: 31, column: 57, scope: !7629)
!7632 = !DILocation(line: 31, column: 33, scope: !7629)
!7633 = !DILocation(line: 32, column: 13, scope: !7629)
!7634 = !DILocation(line: 32, column: 21, scope: !7629)
!7635 = !DILocation(line: 32, column: 44, scope: !7629)
!7636 = !DILocation(line: 32, column: 52, scope: !7629)
!7637 = !DILocation(line: 32, column: 34, scope: !7629)
!7638 = !DILocation(line: 33, column: 6, scope: !7629)
!7639 = !DILocation(line: 32, column: 3, scope: !7629)
!7640 = !DILocation(line: 34, column: 13, scope: !7629)
!7641 = !DILocation(line: 34, column: 48, scope: !7629)
!7642 = !DILocation(line: 35, column: 12, scope: !7629)
!7643 = !DILocation(line: 35, column: 20, scope: !7629)
!7644 = !DILocation(line: 35, column: 6, scope: !7629)
!7645 = !DILocation(line: 34, column: 3, scope: !7629)
!7646 = !DILocation(line: 36, column: 6, scope: !7629)
!7647 = !DILocation(line: 38, column: 13, scope: !855)
!7648 = !DILocation(line: 38, column: 6, scope: !855)
!7649 = !DILocalVariable(name: "caddr", arg: 1, scope: !858, file: !790, line: 41, type: !19)
!7650 = !DILocation(line: 41, column: 46, scope: !858)
!7651 = !DILocalVariable(name: "port", arg: 2, scope: !858, file: !790, line: 41, type: !33)
!7652 = !DILocation(line: 41, column: 57, scope: !858)
!7653 = !DILocalVariable(name: "sa_len_ret", arg: 3, scope: !858, file: !790, line: 41, type: !514)
!7654 = !DILocation(line: 41, column: 68, scope: !858)
!7655 = !DILocalVariable(name: "address", scope: !858, file: !790, line: 42, type: !2723)
!7656 = !DILocation(line: 42, column: 7, scope: !858)
!7657 = !DILocalVariable(name: "sa_p", scope: !858, file: !790, line: 43, type: !844)
!7658 = !DILocation(line: 43, column: 19, scope: !858)
!7659 = !DILocalVariable(name: "sa_len", scope: !858, file: !790, line: 44, type: !33)
!7660 = !DILocation(line: 44, column: 6, scope: !858)
!7661 = !DILocalVariable(name: "af", scope: !858, file: !790, line: 44, type: !33)
!7662 = !DILocation(line: 44, column: 14, scope: !858)
!7663 = !DILocalVariable(name: "colon", scope: !858, file: !790, line: 45, type: !19)
!7664 = !DILocation(line: 45, column: 8, scope: !858)
!7665 = !DILocation(line: 48, column: 9, scope: !858)
!7666 = !DILocation(line: 49, column: 5, scope: !858)
!7667 = !DILocation(line: 53, column: 18, scope: !858)
!7668 = !DILocation(line: 53, column: 10, scope: !858)
!7669 = !DILocation(line: 53, column: 8, scope: !858)
!7670 = !DILocation(line: 54, column: 6, scope: !7671)
!7671 = distinct !DILexicalBlock(scope: !858, file: !790, line: 54, column: 6)
!7672 = !DILocation(line: 54, column: 12, scope: !7671)
!7673 = !DILocation(line: 54, column: 17, scope: !7674)
!7674 = !DILexicalBlockFile(scope: !7671, file: !790, discriminator: 1)
!7675 = !DILocation(line: 54, column: 15, scope: !7674)
!7676 = !DILocation(line: 54, column: 6, scope: !7674)
!7677 = !DILocation(line: 55, column: 10, scope: !7678)
!7678 = distinct !DILexicalBlock(scope: !7671, file: !790, line: 54, column: 29)
!7679 = !DILocation(line: 56, column: 6, scope: !7678)
!7680 = !DILocation(line: 57, column: 2, scope: !7678)
!7681 = !DILocation(line: 60, column: 7, scope: !7682)
!7682 = distinct !DILexicalBlock(scope: !858, file: !790, line: 60, column: 6)
!7683 = !DILocation(line: 60, column: 6, scope: !858)
!7684 = !DILocation(line: 61, column: 3, scope: !7682)
!7685 = !DILocation(line: 63, column: 17, scope: !858)
!7686 = !DILocation(line: 63, column: 9, scope: !858)
!7687 = !DILocation(line: 63, column: 7, scope: !858)
!7688 = !DILocation(line: 64, column: 7, scope: !7689)
!7689 = distinct !DILexicalBlock(scope: !858, file: !790, line: 64, column: 6)
!7690 = !DILocation(line: 64, column: 6, scope: !858)
!7691 = !DILocation(line: 65, column: 3, scope: !7689)
!7692 = !DILocation(line: 66, column: 19, scope: !858)
!7693 = !DILocation(line: 66, column: 2, scope: !858)
!7694 = !DILocation(line: 66, column: 28, scope: !858)
!7695 = !DILocation(line: 70, column: 20, scope: !858)
!7696 = !DILocation(line: 70, column: 2, scope: !858)
!7697 = !DILocation(line: 70, column: 8, scope: !858)
!7698 = !DILocation(line: 70, column: 18, scope: !858)
!7699 = !DILocation(line: 72, column: 7, scope: !7700)
!7700 = distinct !DILexicalBlock(scope: !858, file: !790, line: 72, column: 6)
!7701 = !DILocation(line: 72, column: 13, scope: !7700)
!7702 = !DILocation(line: 72, column: 18, scope: !7703)
!7703 = !DILexicalBlockFile(scope: !7700, file: !790, discriminator: 1)
!7704 = !DILocation(line: 72, column: 16, scope: !7703)
!7705 = !DILocation(line: 72, column: 6, scope: !7703)
!7706 = !DILocation(line: 73, column: 10, scope: !7700)
!7707 = !DILocation(line: 73, column: 3, scope: !7700)
!7708 = !DILocation(line: 75, column: 15, scope: !7709)
!7709 = distinct !DILexicalBlock(scope: !858, file: !790, line: 75, column: 6)
!7710 = !DILocation(line: 75, column: 24, scope: !7709)
!7711 = !DILocation(line: 75, column: 6, scope: !7709)
!7712 = !DILocation(line: 75, column: 42, scope: !7709)
!7713 = !DILocation(line: 75, column: 6, scope: !858)
!7714 = !DILocation(line: 76, column: 3, scope: !7709)
!7715 = !DILocation(line: 79, column: 6, scope: !7716)
!7716 = distinct !DILexicalBlock(scope: !858, file: !790, line: 79, column: 6)
!7717 = !DILocation(line: 79, column: 9, scope: !7716)
!7718 = !DILocation(line: 79, column: 6, scope: !858)
!7719 = !DILocalVariable(name: "sin_p", scope: !7720, file: !790, line: 80, type: !805)
!7720 = distinct !DILexicalBlock(scope: !7716, file: !790, line: 79, column: 21)
!7721 = !DILocation(line: 80, column: 23, scope: !7720)
!7722 = !DILocation(line: 82, column: 34, scope: !7720)
!7723 = !DILocation(line: 82, column: 11, scope: !7720)
!7724 = !DILocation(line: 82, column: 9, scope: !7720)
!7725 = !DILocation(line: 83, column: 28, scope: !7720)
!7726 = !DILocation(line: 83, column: 21, scope: !7720)
!7727 = !DILocation(line: 83, column: 3, scope: !7720)
!7728 = !DILocation(line: 83, column: 10, scope: !7720)
!7729 = !DILocation(line: 83, column: 19, scope: !7720)
!7730 = !DILocation(line: 84, column: 19, scope: !7731)
!7731 = distinct !DILexicalBlock(scope: !7720, file: !790, line: 84, column: 7)
!7732 = !DILocation(line: 84, column: 29, scope: !7731)
!7733 = !DILocation(line: 84, column: 36, scope: !7731)
!7734 = !DILocation(line: 84, column: 8, scope: !7731)
!7735 = !DILocation(line: 84, column: 7, scope: !7720)
!7736 = !DILocation(line: 85, column: 9, scope: !7737)
!7737 = distinct !DILexicalBlock(scope: !7731, file: !790, line: 84, column: 47)
!7738 = !DILocation(line: 85, column: 4, scope: !7737)
!7739 = !DILocation(line: 86, column: 4, scope: !7737)
!7740 = !DILocation(line: 88, column: 2, scope: !7720)
!7741 = !DILocation(line: 92, column: 6, scope: !7742)
!7742 = distinct !DILexicalBlock(scope: !858, file: !790, line: 92, column: 6)
!7743 = !DILocation(line: 92, column: 9, scope: !7742)
!7744 = !DILocation(line: 92, column: 6, scope: !858)
!7745 = !DILocalVariable(name: "hints", scope: !7746, file: !790, line: 93, type: !7747)
!7746 = distinct !DILexicalBlock(scope: !7742, file: !790, line: 92, column: 22)
!7747 = !DICompositeType(tag: DW_TAG_structure_type, name: "addrinfo", file: !7748, line: 567, size: 384, align: 64, elements: !7749)
!7748 = !DIFile(filename: "/usr/include/netdb.h", directory: "/home/muhammad/totd/totd")
!7749 = !{!7750, !7751, !7752, !7753, !7754, !7758, !7759, !7760}
!7750 = !DIDerivedType(tag: DW_TAG_member, name: "ai_flags", scope: !7747, file: !7748, line: 569, baseType: !33, size: 32, align: 32)
!7751 = !DIDerivedType(tag: DW_TAG_member, name: "ai_family", scope: !7747, file: !7748, line: 570, baseType: !33, size: 32, align: 32, offset: 32)
!7752 = !DIDerivedType(tag: DW_TAG_member, name: "ai_socktype", scope: !7747, file: !7748, line: 571, baseType: !33, size: 32, align: 32, offset: 64)
!7753 = !DIDerivedType(tag: DW_TAG_member, name: "ai_protocol", scope: !7747, file: !7748, line: 572, baseType: !33, size: 32, align: 32, offset: 96)
!7754 = !DIDerivedType(tag: DW_TAG_member, name: "ai_addrlen", scope: !7747, file: !7748, line: 573, baseType: !7755, size: 32, align: 32, offset: 128)
!7755 = !DIDerivedType(tag: DW_TAG_typedef, name: "socklen_t", file: !7756, line: 277, baseType: !7757)
!7756 = !DIFile(filename: "/usr/include/unistd.h", directory: "/home/muhammad/totd/totd")
!7757 = !DIDerivedType(tag: DW_TAG_typedef, name: "__socklen_t", file: !24, line: 189, baseType: !73)
!7758 = !DIDerivedType(tag: DW_TAG_member, name: "ai_addr", scope: !7747, file: !7748, line: 574, baseType: !844, size: 64, align: 64, offset: 192)
!7759 = !DIDerivedType(tag: DW_TAG_member, name: "ai_canonname", scope: !7747, file: !7748, line: 575, baseType: !19, size: 64, align: 64, offset: 256)
!7760 = !DIDerivedType(tag: DW_TAG_member, name: "ai_next", scope: !7747, file: !7748, line: 576, baseType: !7761, size: 64, align: 64, offset: 320)
!7761 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7747, size: 64, align: 64)
!7762 = !DILocation(line: 93, column: 19, scope: !7746)
!7763 = !DILocalVariable(name: "res", scope: !7746, file: !790, line: 93, type: !7761)
!7764 = !DILocation(line: 93, column: 27, scope: !7746)
!7765 = !DILocalVariable(name: "portstr", scope: !7746, file: !790, line: 94, type: !7766)
!7766 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6, size: 256, align: 8, elements: !7767)
!7767 = !{!7768}
!7768 = !DISubrange(count: 32)
!7769 = !DILocation(line: 94, column: 8, scope: !7746)
!7770 = !DILocalVariable(name: "error", scope: !7746, file: !790, line: 95, type: !33)
!7771 = !DILocation(line: 95, column: 7, scope: !7746)
!7772 = !DILocation(line: 97, column: 12, scope: !7746)
!7773 = !DILocation(line: 97, column: 39, scope: !7746)
!7774 = !DILocation(line: 97, column: 3, scope: !7746)
!7775 = !DILocation(line: 99, column: 3, scope: !7746)
!7776 = !DILocation(line: 100, column: 31, scope: !7746)
!7777 = !DILocation(line: 100, column: 19, scope: !7746)
!7778 = !DILocation(line: 100, column: 29, scope: !7746)
!7779 = !DILocation(line: 101, column: 9, scope: !7746)
!7780 = !DILocation(line: 101, column: 21, scope: !7746)
!7781 = !DILocation(line: 102, column: 9, scope: !7746)
!7782 = !DILocation(line: 102, column: 18, scope: !7746)
!7783 = !DILocation(line: 103, column: 33, scope: !7746)
!7784 = !DILocation(line: 103, column: 42, scope: !7746)
!7785 = !DILocation(line: 103, column: 21, scope: !7746)
!7786 = !DILocation(line: 103, column: 19, scope: !7746)
!7787 = !DILocation(line: 104, column: 17, scope: !7788)
!7788 = distinct !DILexicalBlock(scope: !7746, file: !790, line: 104, column: 17)
!7789 = !DILocation(line: 104, column: 17, scope: !7746)
!7790 = !DILocation(line: 105, column: 53, scope: !7791)
!7791 = distinct !DILexicalBlock(scope: !7788, file: !790, line: 104, column: 24)
!7792 = !DILocation(line: 105, column: 40, scope: !7791)
!7793 = !DILocation(line: 105, column: 18, scope: !7794)
!7794 = !DILexicalBlockFile(scope: !7791, file: !790, discriminator: 1)
!7795 = !DILocation(line: 106, column: 8, scope: !7796)
!7796 = distinct !DILexicalBlock(scope: !7791, file: !790, line: 106, column: 8)
!7797 = !DILocation(line: 106, column: 8, scope: !7791)
!7798 = !DILocation(line: 107, column: 18, scope: !7796)
!7799 = !DILocation(line: 107, column: 5, scope: !7796)
!7800 = !DILocation(line: 108, column: 4, scope: !7791)
!7801 = !DILocation(line: 110, column: 10, scope: !7746)
!7802 = !DILocation(line: 110, column: 3, scope: !7746)
!7803 = !DILocation(line: 110, column: 16, scope: !7746)
!7804 = !DILocation(line: 110, column: 21, scope: !7746)
!7805 = !DILocation(line: 110, column: 30, scope: !7746)
!7806 = !DILocation(line: 112, column: 7, scope: !7807)
!7807 = distinct !DILexicalBlock(scope: !7746, file: !790, line: 112, column: 7)
!7808 = !DILocation(line: 112, column: 7, scope: !7746)
!7809 = !DILocation(line: 113, column: 17, scope: !7807)
!7810 = !DILocation(line: 113, column: 4, scope: !7807)
!7811 = !DILocation(line: 114, column: 2, scope: !7746)
!7812 = !DILocation(line: 117, column: 6, scope: !7813)
!7813 = distinct !DILexicalBlock(scope: !858, file: !790, line: 117, column: 6)
!7814 = !DILocation(line: 117, column: 6, scope: !858)
!7815 = !DILocation(line: 118, column: 17, scope: !7813)
!7816 = !DILocation(line: 118, column: 4, scope: !7813)
!7817 = !DILocation(line: 118, column: 15, scope: !7813)
!7818 = !DILocation(line: 118, column: 3, scope: !7813)
!7819 = !DILocation(line: 120, column: 9, scope: !858)
!7820 = !DILocation(line: 120, column: 2, scope: !858)
!7821 = !DILocation(line: 121, column: 1, scope: !858)
!7822 = !DILocalVariable(name: "fwd_ptr", arg: 1, scope: !861, file: !790, line: 123, type: !834)
!7823 = !DILocation(line: 123, column: 21, scope: !861)
!7824 = !DILocation(line: 124, column: 9, scope: !7825)
!7825 = distinct !DILexicalBlock(scope: !861, file: !790, line: 124, column: 9)
!7826 = !DILocation(line: 124, column: 9, scope: !861)
!7827 = !DILocation(line: 125, column: 6, scope: !7828)
!7828 = distinct !DILexicalBlock(scope: !7829, file: !790, line: 125, column: 6)
!7829 = distinct !DILexicalBlock(scope: !7825, file: !790, line: 124, column: 18)
!7830 = !DILocation(line: 125, column: 15, scope: !7828)
!7831 = !DILocation(line: 125, column: 6, scope: !7829)
!7832 = !DILocation(line: 126, column: 12, scope: !7828)
!7833 = !DILocation(line: 126, column: 21, scope: !7828)
!7834 = !DILocation(line: 126, column: 6, scope: !7828)
!7835 = !DILocation(line: 128, column: 8, scope: !7829)
!7836 = !DILocation(line: 128, column: 2, scope: !7829)
!7837 = !DILocation(line: 129, column: 5, scope: !7829)
!7838 = !DILocation(line: 130, column: 5, scope: !861)
!7839 = !DILocalVariable(name: "fwd_p", arg: 1, scope: !864, file: !790, line: 133, type: !26)
!7840 = !DILocation(line: 133, column: 23, scope: !864)
!7841 = !DILocation(line: 134, column: 20, scope: !864)
!7842 = !DILocation(line: 134, column: 12, scope: !864)
!7843 = !DILocation(line: 134, column: 2, scope: !864)
!7844 = !DILocation(line: 135, column: 2, scope: !864)
!7845 = !DILocalVariable(name: "fwd_p", scope: !867, file: !790, line: 139, type: !834)
!7846 = !DILocation(line: 139, column: 7, scope: !867)
!7847 = !DILocalVariable(name: "fn", scope: !867, file: !790, line: 140, type: !19)
!7848 = !DILocation(line: 140, column: 8, scope: !867)
!7849 = !DILocation(line: 142, column: 10, scope: !867)
!7850 = !DILocation(line: 142, column: 8, scope: !867)
!7851 = !DILocation(line: 143, column: 7, scope: !7852)
!7852 = distinct !DILexicalBlock(scope: !867, file: !790, line: 143, column: 6)
!7853 = !DILocation(line: 143, column: 6, scope: !867)
!7854 = !DILocation(line: 144, column: 50, scope: !7855)
!7855 = distinct !DILexicalBlock(scope: !7852, file: !790, line: 143, column: 14)
!7856 = !DILocation(line: 144, column: 3, scope: !7855)
!7857 = !DILocation(line: 145, column: 3, scope: !7855)
!7858 = !DILocation(line: 147, column: 14, scope: !867)
!7859 = !DILocation(line: 147, column: 2, scope: !867)
!7860 = !DILocation(line: 147, column: 9, scope: !867)
!7861 = !DILocation(line: 147, column: 12, scope: !867)
!7862 = !DILocation(line: 148, column: 7, scope: !7863)
!7863 = distinct !DILexicalBlock(scope: !867, file: !790, line: 148, column: 6)
!7864 = !DILocation(line: 148, column: 14, scope: !7863)
!7865 = !DILocation(line: 148, column: 6, scope: !867)
!7866 = !DILocation(line: 149, column: 50, scope: !7867)
!7867 = distinct !DILexicalBlock(scope: !7863, file: !790, line: 148, column: 18)
!7868 = !DILocation(line: 149, column: 3, scope: !7867)
!7869 = !DILocation(line: 150, column: 3, scope: !7867)
!7870 = !DILocation(line: 153, column: 9, scope: !867)
!7871 = !DILocation(line: 153, column: 2, scope: !867)
!7872 = !DILocation(line: 156, column: 12, scope: !867)
!7873 = !DILocation(line: 156, column: 2, scope: !867)
!7874 = !DILocation(line: 157, column: 2, scope: !867)
!7875 = !DILocation(line: 158, column: 1, scope: !867)
!7876 = !DILocalVariable(name: "gl_tmp", scope: !870, file: !790, line: 161, type: !910)
!7877 = !DILocation(line: 161, column: 10, scope: !870)
!7878 = !DILocation(line: 163, column: 9, scope: !7879)
!7879 = distinct !DILexicalBlock(scope: !870, file: !790, line: 163, column: 6)
!7880 = !DILocation(line: 163, column: 7, scope: !7879)
!7881 = !DILocation(line: 163, column: 6, scope: !870)
!7882 = !DILocation(line: 164, column: 3, scope: !7879)
!7883 = !DILocation(line: 166, column: 18, scope: !7884)
!7884 = distinct !DILexicalBlock(scope: !870, file: !790, line: 166, column: 2)
!7885 = !DILocation(line: 166, column: 28, scope: !7884)
!7886 = !DILocation(line: 166, column: 14, scope: !7884)
!7887 = !DILocation(line: 166, column: 7, scope: !7884)
!7888 = !DILocation(line: 166, column: 34, scope: !7889)
!7889 = !DILexicalBlockFile(scope: !7890, file: !790, discriminator: 1)
!7890 = distinct !DILexicalBlock(scope: !7884, file: !790, line: 166, column: 2)
!7891 = !DILocation(line: 166, column: 42, scope: !7889)
!7892 = !DILocation(line: 166, column: 2, scope: !7889)
!7893 = !DILocalVariable(name: "sa_p", scope: !7894, file: !790, line: 167, type: !844)
!7894 = distinct !DILexicalBlock(scope: !7890, file: !790, line: 166, column: 76)
!7895 = !DILocation(line: 167, column: 27, scope: !7894)
!7896 = !DILocalVariable(name: "sa_p_len", scope: !7894, file: !790, line: 168, type: !33)
!7897 = !DILocation(line: 168, column: 14, scope: !7894)
!7898 = !DILocalVariable(name: "fwd_tmp", scope: !7894, file: !790, line: 169, type: !834)
!7899 = !DILocation(line: 169, column: 8, scope: !7894)
!7900 = !DILocation(line: 171, column: 22, scope: !7894)
!7901 = !DILocation(line: 171, column: 30, scope: !7894)
!7902 = !DILocation(line: 171, column: 13, scope: !7894)
!7903 = !DILocation(line: 171, column: 11, scope: !7894)
!7904 = !DILocation(line: 172, column: 3, scope: !7894)
!7905 = !DILocation(line: 172, column: 12, scope: !7894)
!7906 = !DILocation(line: 172, column: 25, scope: !7894)
!7907 = !DILocation(line: 173, column: 3, scope: !7894)
!7908 = !DILocation(line: 173, column: 12, scope: !7894)
!7909 = !DILocation(line: 173, column: 18, scope: !7894)
!7910 = !DILocation(line: 175, column: 32, scope: !7894)
!7911 = !DILocation(line: 175, column: 41, scope: !7894)
!7912 = !DILocation(line: 175, column: 51, scope: !7894)
!7913 = !DILocation(line: 175, column: 60, scope: !7894)
!7914 = !DILocation(line: 175, column: 10, scope: !7894)
!7915 = !DILocation(line: 175, column: 8, scope: !7894)
!7916 = !DILocation(line: 176, column: 7, scope: !7917)
!7917 = distinct !DILexicalBlock(scope: !7894, file: !790, line: 176, column: 7)
!7918 = !DILocation(line: 176, column: 7, scope: !7894)
!7919 = !DILocation(line: 177, column: 58, scope: !7920)
!7920 = distinct !DILexicalBlock(scope: !7917, file: !790, line: 176, column: 13)
!7921 = !DILocation(line: 177, column: 67, scope: !7920)
!7922 = !DILocation(line: 177, column: 77, scope: !7920)
!7923 = !DILocation(line: 177, column: 86, scope: !7920)
!7924 = !DILocation(line: 177, column: 4, scope: !7920)
!7925 = !DILocation(line: 178, column: 12, scope: !7920)
!7926 = !DILocation(line: 178, column: 21, scope: !7920)
!7927 = !DILocation(line: 178, column: 4, scope: !7920)
!7928 = !DILocation(line: 178, column: 25, scope: !7920)
!7929 = !DILocation(line: 178, column: 31, scope: !7920)
!7930 = !DILocation(line: 179, column: 22, scope: !7920)
!7931 = !DILocation(line: 179, column: 4, scope: !7920)
!7932 = !DILocation(line: 179, column: 13, scope: !7920)
!7933 = !DILocation(line: 179, column: 20, scope: !7920)
!7934 = !DILocation(line: 180, column: 3, scope: !7920)
!7935 = !DILocation(line: 181, column: 62, scope: !7936)
!7936 = distinct !DILexicalBlock(scope: !7917, file: !790, line: 180, column: 10)
!7937 = !DILocation(line: 181, column: 71, scope: !7936)
!7938 = !DILocation(line: 181, column: 81, scope: !7936)
!7939 = !DILocation(line: 181, column: 90, scope: !7936)
!7940 = !DILocation(line: 181, column: 4, scope: !7936)
!7941 = !DILocation(line: 182, column: 8, scope: !7942)
!7942 = distinct !DILexicalBlock(scope: !7936, file: !790, line: 182, column: 8)
!7943 = !DILocation(line: 182, column: 17, scope: !7942)
!7944 = !DILocation(line: 182, column: 8, scope: !7936)
!7945 = !DILocation(line: 183, column: 15, scope: !7942)
!7946 = !DILocation(line: 183, column: 24, scope: !7942)
!7947 = !DILocation(line: 183, column: 9, scope: !7942)
!7948 = !DILocation(line: 184, column: 4, scope: !7936)
!7949 = !DILocation(line: 184, column: 13, scope: !7936)
!7950 = !DILocation(line: 184, column: 16, scope: !7936)
!7951 = !DILocation(line: 185, column: 4, scope: !7936)
!7952 = !DILocation(line: 185, column: 13, scope: !7936)
!7953 = !DILocation(line: 185, column: 20, scope: !7936)
!7954 = !DILocation(line: 187, column: 2, scope: !7894)
!7955 = !DILocation(line: 166, column: 62, scope: !7956)
!7956 = !DILexicalBlockFile(scope: !7890, file: !790, discriminator: 2)
!7957 = !DILocation(line: 166, column: 70, scope: !7956)
!7958 = !DILocation(line: 166, column: 60, scope: !7956)
!7959 = !DILocation(line: 166, column: 2, scope: !7956)
!7960 = !DILocation(line: 188, column: 1, scope: !870)
!7961 = !DILocalVariable(name: "hostname", arg: 1, scope: !871, file: !790, line: 190, type: !19)
!7962 = !DILocation(line: 190, column: 20, scope: !871)
!7963 = !DILocalVariable(name: "port", arg: 2, scope: !871, file: !790, line: 190, type: !33)
!7964 = !DILocation(line: 190, column: 34, scope: !871)
!7965 = !DILocalVariable(name: "fwd_p", scope: !871, file: !790, line: 191, type: !834)
!7966 = !DILocation(line: 191, column: 7, scope: !871)
!7967 = !DILocation(line: 193, column: 2, scope: !871)
!7968 = !DILocation(line: 195, column: 9, scope: !7969)
!7969 = distinct !DILexicalBlock(scope: !871, file: !790, line: 195, column: 6)
!7970 = !DILocation(line: 195, column: 7, scope: !7969)
!7971 = !DILocation(line: 195, column: 6, scope: !871)
!7972 = !DILocation(line: 196, column: 3, scope: !7969)
!7973 = !DILocation(line: 198, column: 10, scope: !871)
!7974 = !DILocation(line: 198, column: 8, scope: !871)
!7975 = !DILocation(line: 199, column: 7, scope: !7976)
!7976 = distinct !DILexicalBlock(scope: !871, file: !790, line: 199, column: 6)
!7977 = !DILocation(line: 199, column: 6, scope: !871)
!7978 = !DILocation(line: 200, column: 3, scope: !7976)
!7979 = !DILocation(line: 202, column: 10, scope: !871)
!7980 = !DILocation(line: 202, column: 17, scope: !871)
!7981 = !DILocation(line: 202, column: 27, scope: !871)
!7982 = !DILocation(line: 202, column: 2, scope: !871)
!7983 = !DILocation(line: 203, column: 16, scope: !871)
!7984 = !DILocation(line: 203, column: 2, scope: !871)
!7985 = !DILocation(line: 203, column: 9, scope: !871)
!7986 = !DILocation(line: 203, column: 14, scope: !871)
!7987 = !DILocation(line: 205, column: 23, scope: !7988)
!7988 = distinct !DILexicalBlock(scope: !871, file: !790, line: 205, column: 6)
!7989 = !DILocation(line: 205, column: 33, scope: !7988)
!7990 = !DILocation(line: 205, column: 6, scope: !7988)
!7991 = !DILocation(line: 205, column: 40, scope: !7988)
!7992 = !DILocation(line: 205, column: 6, scope: !871)
!7993 = !DILocation(line: 206, column: 13, scope: !7994)
!7994 = distinct !DILexicalBlock(scope: !7988, file: !790, line: 205, column: 45)
!7995 = !DILocation(line: 206, column: 3, scope: !7994)
!7996 = !DILocation(line: 207, column: 3, scope: !7994)
!7997 = !DILocation(line: 209, column: 2, scope: !871)
!7998 = !DILocation(line: 210, column: 1, scope: !871)
!7999 = !DILocalVariable(name: "T", arg: 1, scope: !874, file: !790, line: 215, type: !877)
!8000 = !DILocation(line: 215, column: 35, scope: !874)
!8001 = !DILocalVariable(name: "fn", scope: !874, file: !790, line: 216, type: !19)
!8002 = !DILocation(line: 216, column: 8, scope: !874)
!8003 = !DILocalVariable(name: "astr", scope: !874, file: !790, line: 217, type: !2723)
!8004 = !DILocation(line: 217, column: 11, scope: !874)
!8005 = !DILocalVariable(name: "list_tmp", scope: !874, file: !790, line: 218, type: !910)
!8006 = !DILocation(line: 218, column: 10, scope: !874)
!8007 = !DILocalVariable(name: "fwd_tmp", scope: !874, file: !790, line: 219, type: !834)
!8008 = !DILocation(line: 219, column: 7, scope: !874)
!8009 = !DILocation(line: 221, column: 36, scope: !874)
!8010 = !DILocation(line: 221, column: 2, scope: !874)
!8011 = !DILocation(line: 223, column: 9, scope: !8012)
!8012 = distinct !DILexicalBlock(scope: !874, file: !790, line: 223, column: 6)
!8013 = !DILocation(line: 223, column: 7, scope: !8012)
!8014 = !DILocation(line: 223, column: 6, scope: !874)
!8015 = !DILocation(line: 225, column: 13, scope: !8016)
!8016 = distinct !DILexicalBlock(scope: !8017, file: !790, line: 225, column: 10)
!8017 = distinct !DILexicalBlock(scope: !8012, file: !790, line: 223, column: 22)
!8018 = !DILocation(line: 225, column: 11, scope: !8016)
!8019 = !DILocation(line: 225, column: 10, scope: !8017)
!8020 = !DILocation(line: 226, column: 10, scope: !8016)
!8021 = !DILocation(line: 226, column: 3, scope: !8016)
!8022 = !DILocation(line: 228, column: 24, scope: !8017)
!8023 = !DILocation(line: 228, column: 34, scope: !8017)
!8024 = !DILocation(line: 228, column: 8, scope: !8017)
!8025 = !DILocation(line: 228, column: 20, scope: !8017)
!8026 = !DILocation(line: 229, column: 25, scope: !8017)
!8027 = !DILocation(line: 229, column: 38, scope: !8017)
!8028 = !DILocation(line: 229, column: 16, scope: !8017)
!8029 = !DILocation(line: 229, column: 14, scope: !8017)
!8030 = !DILocation(line: 230, column: 6, scope: !8017)
!8031 = !DILocation(line: 230, column: 13, scope: !8032)
!8032 = !DILexicalBlockFile(scope: !8017, file: !790, discriminator: 1)
!8033 = !DILocation(line: 230, column: 21, scope: !8032)
!8034 = !DILocation(line: 230, column: 25, scope: !8035)
!8035 = !DILexicalBlockFile(scope: !8017, file: !790, discriminator: 2)
!8036 = !DILocation(line: 230, column: 34, scope: !8035)
!8037 = !DILocation(line: 230, column: 24, scope: !8035)
!8038 = !DILocation(line: 230, column: 6, scope: !8039)
!8039 = !DILexicalBlockFile(scope: !8017, file: !790, discriminator: 3)
!8040 = !DILocation(line: 231, column: 25, scope: !8041)
!8041 = distinct !DILexicalBlock(scope: !8017, file: !790, line: 230, column: 38)
!8042 = !DILocation(line: 231, column: 38, scope: !8041)
!8043 = !DILocation(line: 231, column: 9, scope: !8041)
!8044 = !DILocation(line: 231, column: 21, scope: !8041)
!8045 = !DILocation(line: 232, column: 29, scope: !8041)
!8046 = !DILocation(line: 232, column: 42, scope: !8041)
!8047 = !DILocation(line: 232, column: 20, scope: !8041)
!8048 = !DILocation(line: 232, column: 18, scope: !8041)
!8049 = !DILocation(line: 230, column: 6, scope: !8050)
!8050 = !DILexicalBlockFile(scope: !8017, file: !790, discriminator: 4)
!8051 = !DILocation(line: 235, column: 11, scope: !8052)
!8052 = distinct !DILexicalBlock(scope: !8017, file: !790, line: 235, column: 10)
!8053 = !DILocation(line: 235, column: 19, scope: !8052)
!8054 = !DILocation(line: 235, column: 23, scope: !8055)
!8055 = !DILexicalBlockFile(scope: !8052, file: !790, discriminator: 1)
!8056 = !DILocation(line: 235, column: 32, scope: !8055)
!8057 = !DILocation(line: 235, column: 10, scope: !8055)
!8058 = !DILocation(line: 237, column: 5, scope: !8059)
!8059 = distinct !DILexicalBlock(scope: !8052, file: !790, line: 235, column: 36)
!8060 = !DILocation(line: 237, column: 17, scope: !8059)
!8061 = !DILocation(line: 238, column: 7, scope: !8059)
!8062 = !DILocation(line: 239, column: 10, scope: !8059)
!8063 = !DILocation(line: 239, column: 3, scope: !8059)
!8064 = !DILocation(line: 242, column: 19, scope: !8017)
!8065 = !DILocation(line: 242, column: 28, scope: !8017)
!8066 = !DILocation(line: 242, column: 32, scope: !8017)
!8067 = !DILocation(line: 242, column: 7, scope: !8017)
!8068 = !DILocation(line: 241, column: 6, scope: !8017)
!8069 = !DILocation(line: 243, column: 2, scope: !8017)
!8070 = !DILocation(line: 243, column: 15, scope: !8071)
!8071 = !DILexicalBlockFile(scope: !8072, file: !790, discriminator: 1)
!8072 = distinct !DILexicalBlock(scope: !8012, file: !790, line: 243, column: 13)
!8073 = !DILocation(line: 243, column: 28, scope: !8071)
!8074 = !DILocation(line: 243, column: 34, scope: !8071)
!8075 = !DILocation(line: 243, column: 13, scope: !8071)
!8076 = !DILocalVariable(name: "waittime", scope: !8077, file: !790, line: 249, type: !103)
!8077 = distinct !DILexicalBlock(scope: !8072, file: !790, line: 243, column: 45)
!8078 = !DILocation(line: 249, column: 13, scope: !8077)
!8079 = !DILocalVariable(name: "downtime", scope: !8077, file: !790, line: 249, type: !103)
!8080 = !DILocation(line: 249, column: 23, scope: !8077)
!8081 = !DILocalVariable(name: "current_time", scope: !8077, file: !790, line: 249, type: !103)
!8082 = !DILocation(line: 249, column: 33, scope: !8077)
!8083 = !DILocation(line: 251, column: 21, scope: !8077)
!8084 = !DILocation(line: 251, column: 19, scope: !8077)
!8085 = !DILocation(line: 252, column: 19, scope: !8077)
!8086 = !DILocation(line: 252, column: 32, scope: !8077)
!8087 = !DILocation(line: 252, column: 15, scope: !8077)
!8088 = !DILocation(line: 253, column: 23, scope: !8077)
!8089 = !DILocation(line: 253, column: 33, scope: !8077)
!8090 = !DILocation(line: 253, column: 16, scope: !8077)
!8091 = !DILocation(line: 253, column: 14, scope: !8077)
!8092 = !DILocation(line: 254, column: 6, scope: !8077)
!8093 = !DILocation(line: 254, column: 13, scope: !8094)
!8094 = !DILexicalBlockFile(scope: !8077, file: !790, discriminator: 1)
!8095 = !DILocation(line: 254, column: 6, scope: !8094)
!8096 = !DILocation(line: 255, column: 15, scope: !8097)
!8097 = distinct !DILexicalBlock(scope: !8077, file: !790, line: 254, column: 22)
!8098 = !DILocation(line: 255, column: 30, scope: !8097)
!8099 = !DILocation(line: 255, column: 39, scope: !8097)
!8100 = !DILocation(line: 255, column: 28, scope: !8097)
!8101 = !DILocation(line: 255, column: 12, scope: !8097)
!8102 = !DILocation(line: 256, column: 26, scope: !8097)
!8103 = !DILocation(line: 256, column: 14, scope: !8097)
!8104 = !DILocation(line: 256, column: 12, scope: !8097)
!8105 = !DILocation(line: 258, column: 7, scope: !8106)
!8106 = distinct !DILexicalBlock(scope: !8097, file: !790, line: 258, column: 7)
!8107 = !DILocation(line: 258, column: 16, scope: !8106)
!8108 = !DILocation(line: 258, column: 19, scope: !8106)
!8109 = !DILocation(line: 258, column: 22, scope: !8110)
!8110 = !DILexicalBlockFile(scope: !8106, file: !790, discriminator: 1)
!8111 = !DILocation(line: 258, column: 33, scope: !8110)
!8112 = !DILocation(line: 258, column: 31, scope: !8110)
!8113 = !DILocation(line: 258, column: 7, scope: !8110)
!8114 = !DILocation(line: 261, column: 20, scope: !8115)
!8115 = distinct !DILexicalBlock(scope: !8106, file: !790, line: 258, column: 43)
!8116 = !DILocation(line: 261, column: 29, scope: !8115)
!8117 = !DILocation(line: 261, column: 33, scope: !8115)
!8118 = !DILocation(line: 261, column: 8, scope: !8115)
!8119 = !DILocation(line: 260, column: 7, scope: !8115)
!8120 = !DILocation(line: 263, column: 7, scope: !8115)
!8121 = !DILocation(line: 263, column: 16, scope: !8115)
!8122 = !DILocation(line: 263, column: 29, scope: !8115)
!8123 = !DILocation(line: 264, column: 11, scope: !8124)
!8124 = distinct !DILexicalBlock(scope: !8115, file: !790, line: 264, column: 11)
!8125 = !DILocation(line: 264, column: 20, scope: !8124)
!8126 = !DILocation(line: 264, column: 26, scope: !8124)
!8127 = !DILocation(line: 264, column: 11, scope: !8115)
!8128 = !DILocation(line: 265, column: 8, scope: !8124)
!8129 = !DILocation(line: 265, column: 17, scope: !8124)
!8130 = !DILocation(line: 265, column: 22, scope: !8124)
!8131 = !DILocation(line: 266, column: 23, scope: !8115)
!8132 = !DILocation(line: 266, column: 9, scope: !8115)
!8133 = !DILocation(line: 266, column: 21, scope: !8115)
!8134 = !DILocation(line: 268, column: 7, scope: !8115)
!8135 = !DILocation(line: 270, column: 14, scope: !8097)
!8136 = !DILocation(line: 270, column: 24, scope: !8097)
!8137 = !DILocation(line: 270, column: 12, scope: !8097)
!8138 = !DILocation(line: 271, column: 24, scope: !8097)
!8139 = !DILocation(line: 271, column: 34, scope: !8097)
!8140 = !DILocation(line: 271, column: 17, scope: !8097)
!8141 = !DILocation(line: 271, column: 15, scope: !8097)
!8142 = !DILocation(line: 254, column: 6, scope: !8143)
!8143 = !DILexicalBlockFile(scope: !8077, file: !790, discriminator: 2)
!8144 = !DILocation(line: 273, column: 2, scope: !8077)
!8145 = !DILocation(line: 276, column: 29, scope: !874)
!8146 = !DILocation(line: 276, column: 42, scope: !874)
!8147 = !DILocation(line: 276, column: 20, scope: !874)
!8148 = !DILocation(line: 276, column: 54, scope: !874)
!8149 = !DILocation(line: 276, column: 58, scope: !874)
!8150 = !DILocation(line: 276, column: 7, scope: !874)
!8151 = !DILocation(line: 275, column: 2, scope: !874)
!8152 = !DILocation(line: 277, column: 34, scope: !874)
!8153 = !DILocation(line: 277, column: 2, scope: !874)
!8154 = !DILocation(line: 278, column: 9, scope: !874)
!8155 = !DILocation(line: 278, column: 2, scope: !874)
!8156 = !DILocation(line: 279, column: 1, scope: !874)
!8157 = !DILocalVariable(name: "sa", arg: 1, scope: !931, file: !790, line: 294, type: !844)
!8158 = !DILocation(line: 294, column: 33, scope: !931)
!8159 = !DILocalVariable(name: "up", arg: 2, scope: !931, file: !790, line: 294, type: !33)
!8160 = !DILocation(line: 294, column: 41, scope: !931)
!8161 = !DILocalVariable(name: "fn", scope: !931, file: !790, line: 295, type: !19)
!8162 = !DILocation(line: 295, column: 8, scope: !931)
!8163 = !DILocalVariable(name: "astr", scope: !931, file: !790, line: 296, type: !2723)
!8164 = !DILocation(line: 296, column: 11, scope: !931)
!8165 = !DILocalVariable(name: "bstr", scope: !931, file: !790, line: 297, type: !2723)
!8166 = !DILocation(line: 297, column: 11, scope: !931)
!8167 = !DILocalVariable(name: "gl", scope: !931, file: !790, line: 298, type: !910)
!8168 = !DILocation(line: 298, column: 10, scope: !931)
!8169 = !DILocalVariable(name: "fwd", scope: !931, file: !790, line: 299, type: !834)
!8170 = !DILocation(line: 299, column: 7, scope: !931)
!8171 = !DILocation(line: 301, column: 36, scope: !931)
!8172 = !DILocation(line: 301, column: 2, scope: !931)
!8173 = !DILocation(line: 303, column: 9, scope: !8174)
!8174 = distinct !DILexicalBlock(scope: !931, file: !790, line: 303, column: 6)
!8175 = !DILocation(line: 303, column: 7, scope: !8174)
!8176 = !DILocation(line: 303, column: 18, scope: !8174)
!8177 = !DILocation(line: 303, column: 24, scope: !8178)
!8178 = !DILexicalBlockFile(scope: !8174, file: !790, discriminator: 1)
!8179 = !DILocation(line: 303, column: 22, scope: !8178)
!8180 = !DILocation(line: 303, column: 6, scope: !8178)
!8181 = !DILocation(line: 304, column: 3, scope: !8174)
!8182 = !DILocation(line: 306, column: 6, scope: !931)
!8183 = !DILocation(line: 307, column: 21, scope: !8184)
!8184 = distinct !DILexicalBlock(scope: !931, file: !790, line: 307, column: 9)
!8185 = !DILocation(line: 307, column: 31, scope: !8184)
!8186 = !DILocation(line: 307, column: 17, scope: !8184)
!8187 = !DILocation(line: 307, column: 14, scope: !8184)
!8188 = !DILocation(line: 307, column: 37, scope: !8189)
!8189 = !DILexicalBlockFile(scope: !8190, file: !790, discriminator: 1)
!8190 = distinct !DILexicalBlock(scope: !8184, file: !790, line: 307, column: 9)
!8191 = !DILocation(line: 307, column: 41, scope: !8189)
!8192 = !DILocation(line: 307, column: 9, scope: !8189)
!8193 = !DILocation(line: 308, column: 23, scope: !8194)
!8194 = distinct !DILexicalBlock(scope: !8190, file: !790, line: 307, column: 67)
!8195 = !DILocation(line: 308, column: 27, scope: !8194)
!8196 = !DILocation(line: 308, column: 16, scope: !8194)
!8197 = !DILocation(line: 308, column: 14, scope: !8194)
!8198 = !DILocation(line: 310, column: 7, scope: !8199)
!8199 = distinct !DILexicalBlock(scope: !8194, file: !790, line: 310, column: 7)
!8200 = !DILocation(line: 310, column: 11, scope: !8199)
!8201 = !DILocation(line: 310, column: 24, scope: !8199)
!8202 = !DILocation(line: 310, column: 29, scope: !8199)
!8203 = !DILocation(line: 310, column: 33, scope: !8199)
!8204 = !DILocation(line: 310, column: 21, scope: !8199)
!8205 = !DILocation(line: 310, column: 7, scope: !8194)
!8206 = !DILocation(line: 311, column: 4, scope: !8199)
!8207 = !DILocation(line: 314, column: 7, scope: !8208)
!8208 = distinct !DILexicalBlock(scope: !8194, file: !790, line: 314, column: 7)
!8209 = !DILocation(line: 314, column: 11, scope: !8208)
!8210 = !DILocation(line: 314, column: 21, scope: !8208)
!8211 = !DILocation(line: 314, column: 7, scope: !8194)
!8212 = !DILocalVariable(name: "sina", scope: !8213, file: !790, line: 315, type: !818)
!8213 = distinct !DILexicalBlock(scope: !8208, file: !790, line: 314, column: 34)
!8214 = !DILocation(line: 315, column: 25, scope: !8213)
!8215 = !DILocalVariable(name: "sinb", scope: !8213, file: !790, line: 315, type: !818)
!8216 = !DILocation(line: 315, column: 32, scope: !8213)
!8217 = !DILocation(line: 317, column: 36, scope: !8213)
!8218 = !DILocation(line: 317, column: 41, scope: !8213)
!8219 = !DILocation(line: 317, column: 11, scope: !8213)
!8220 = !DILocation(line: 317, column: 9, scope: !8213)
!8221 = !DILocation(line: 318, column: 35, scope: !8213)
!8222 = !DILocation(line: 318, column: 11, scope: !8213)
!8223 = !DILocation(line: 318, column: 9, scope: !8213)
!8224 = !DILocalVariable(name: "__a", scope: !8225, file: !790, line: 319, type: !852)
!8225 = distinct !DILexicalBlock(scope: !8226, file: !790, line: 319, column: 8)
!8226 = distinct !DILexicalBlock(scope: !8213, file: !790, line: 319, column: 8)
!8227 = !DILocation(line: 319, column: 8, scope: !8225)
!8228 = !DILocalVariable(name: "__b", scope: !8225, file: !790, line: 319, type: !852)
!8229 = !DILocation(line: 319, column: 8, scope: !8230)
!8230 = !DILexicalBlockFile(scope: !8225, file: !790, discriminator: 1)
!8231 = !DILocation(line: 319, column: 8, scope: !8232)
!8232 = !DILexicalBlockFile(scope: !8225, file: !790, discriminator: 2)
!8233 = !DILocation(line: 319, column: 8, scope: !8234)
!8234 = !DILexicalBlockFile(scope: !8225, file: !790, discriminator: 3)
!8235 = !DILocation(line: 319, column: 8, scope: !8236)
!8236 = !DILexicalBlockFile(scope: !8225, file: !790, discriminator: 4)
!8237 = !DILocation(line: 320, column: 8, scope: !8226)
!8238 = !DILocation(line: 320, column: 11, scope: !8239)
!8239 = !DILexicalBlockFile(scope: !8226, file: !790, discriminator: 1)
!8240 = !DILocation(line: 320, column: 17, scope: !8239)
!8241 = !DILocation(line: 320, column: 30, scope: !8239)
!8242 = !DILocation(line: 320, column: 36, scope: !8239)
!8243 = !DILocation(line: 320, column: 27, scope: !8239)
!8244 = !DILocation(line: 319, column: 8, scope: !8245)
!8245 = !DILexicalBlockFile(scope: !8213, file: !790, discriminator: 5)
!8246 = !DILocation(line: 321, column: 19, scope: !8247)
!8247 = distinct !DILexicalBlock(scope: !8226, file: !790, line: 320, column: 47)
!8248 = !DILocation(line: 321, column: 5, scope: !8247)
!8249 = !DILocation(line: 321, column: 10, scope: !8247)
!8250 = !DILocation(line: 321, column: 16, scope: !8247)
!8251 = !DILocation(line: 322, column: 5, scope: !8247)
!8252 = !DILocation(line: 324, column: 3, scope: !8213)
!8253 = !DILocation(line: 327, column: 7, scope: !8254)
!8254 = distinct !DILexicalBlock(scope: !8194, file: !790, line: 327, column: 7)
!8255 = !DILocation(line: 327, column: 11, scope: !8254)
!8256 = !DILocation(line: 327, column: 21, scope: !8254)
!8257 = !DILocation(line: 327, column: 7, scope: !8194)
!8258 = !DILocalVariable(name: "sina", scope: !8259, file: !790, line: 328, type: !805)
!8259 = distinct !DILexicalBlock(scope: !8254, file: !790, line: 327, column: 33)
!8260 = !DILocation(line: 328, column: 24, scope: !8259)
!8261 = !DILocalVariable(name: "sinb", scope: !8259, file: !790, line: 328, type: !805)
!8262 = !DILocation(line: 328, column: 31, scope: !8259)
!8263 = !DILocation(line: 330, column: 35, scope: !8259)
!8264 = !DILocation(line: 330, column: 40, scope: !8259)
!8265 = !DILocation(line: 330, column: 11, scope: !8259)
!8266 = !DILocation(line: 330, column: 9, scope: !8259)
!8267 = !DILocation(line: 331, column: 34, scope: !8259)
!8268 = !DILocation(line: 331, column: 11, scope: !8259)
!8269 = !DILocation(line: 331, column: 9, scope: !8259)
!8270 = !DILocation(line: 332, column: 8, scope: !8271)
!8271 = distinct !DILexicalBlock(scope: !8259, file: !790, line: 332, column: 8)
!8272 = !DILocation(line: 332, column: 14, scope: !8271)
!8273 = !DILocation(line: 332, column: 23, scope: !8271)
!8274 = !DILocation(line: 332, column: 33, scope: !8271)
!8275 = !DILocation(line: 332, column: 39, scope: !8271)
!8276 = !DILocation(line: 332, column: 48, scope: !8271)
!8277 = !DILocation(line: 332, column: 30, scope: !8271)
!8278 = !DILocation(line: 332, column: 55, scope: !8271)
!8279 = !DILocation(line: 333, column: 8, scope: !8271)
!8280 = !DILocation(line: 333, column: 14, scope: !8271)
!8281 = !DILocation(line: 333, column: 26, scope: !8271)
!8282 = !DILocation(line: 333, column: 32, scope: !8271)
!8283 = !DILocation(line: 333, column: 23, scope: !8271)
!8284 = !DILocation(line: 332, column: 8, scope: !8285)
!8285 = !DILexicalBlockFile(scope: !8259, file: !790, discriminator: 1)
!8286 = !DILocation(line: 334, column: 19, scope: !8287)
!8287 = distinct !DILexicalBlock(scope: !8271, file: !790, line: 333, column: 42)
!8288 = !DILocation(line: 334, column: 5, scope: !8287)
!8289 = !DILocation(line: 334, column: 10, scope: !8287)
!8290 = !DILocation(line: 334, column: 16, scope: !8287)
!8291 = !DILocation(line: 335, column: 5, scope: !8287)
!8292 = !DILocation(line: 337, column: 3, scope: !8259)
!8293 = !DILocation(line: 339, column: 2, scope: !8194)
!8294 = !DILocation(line: 307, column: 57, scope: !8295)
!8295 = !DILexicalBlockFile(scope: !8190, file: !790, discriminator: 2)
!8296 = !DILocation(line: 307, column: 61, scope: !8295)
!8297 = !DILocation(line: 307, column: 55, scope: !8295)
!8298 = !DILocation(line: 307, column: 9, scope: !8295)
!8299 = !DILocation(line: 341, column: 7, scope: !8300)
!8300 = distinct !DILexicalBlock(scope: !931, file: !790, line: 341, column: 6)
!8301 = !DILocation(line: 341, column: 6, scope: !931)
!8302 = !DILocation(line: 342, column: 3, scope: !8300)
!8303 = !DILocation(line: 344, column: 6, scope: !8304)
!8304 = distinct !DILexicalBlock(scope: !931, file: !790, line: 344, column: 6)
!8305 = !DILocation(line: 344, column: 11, scope: !8304)
!8306 = !DILocation(line: 344, column: 17, scope: !8304)
!8307 = !DILocation(line: 344, column: 6, scope: !931)
!8308 = !DILocation(line: 345, column: 3, scope: !8304)
!8309 = !DILocation(line: 345, column: 8, scope: !8304)
!8310 = !DILocation(line: 345, column: 14, scope: !8304)
!8311 = !DILocation(line: 347, column: 6, scope: !8312)
!8312 = distinct !DILexicalBlock(scope: !931, file: !790, line: 347, column: 6)
!8313 = !DILocation(line: 347, column: 10, scope: !8312)
!8314 = !DILocation(line: 347, column: 6, scope: !931)
!8315 = !DILocation(line: 348, column: 53, scope: !8312)
!8316 = !DILocation(line: 348, column: 58, scope: !8312)
!8317 = !DILocation(line: 349, column: 19, scope: !8312)
!8318 = !DILocation(line: 349, column: 23, scope: !8312)
!8319 = !DILocation(line: 349, column: 7, scope: !8312)
!8320 = !DILocation(line: 348, column: 3, scope: !8312)
!8321 = !DILocation(line: 351, column: 6, scope: !8322)
!8322 = distinct !DILexicalBlock(scope: !931, file: !790, line: 351, column: 6)
!8323 = !DILocation(line: 351, column: 11, scope: !8322)
!8324 = !DILocation(line: 351, column: 17, scope: !8322)
!8325 = !DILocation(line: 351, column: 6, scope: !931)
!8326 = !DILocation(line: 352, column: 3, scope: !8322)
!8327 = !DILocation(line: 354, column: 23, scope: !8322)
!8328 = !DILocation(line: 354, column: 3, scope: !8322)
!8329 = !DILocation(line: 354, column: 8, scope: !8322)
!8330 = !DILocation(line: 354, column: 21, scope: !8322)
!8331 = !DILocation(line: 356, column: 17, scope: !8332)
!8332 = distinct !DILexicalBlock(scope: !931, file: !790, line: 356, column: 6)
!8333 = !DILocation(line: 356, column: 30, scope: !8332)
!8334 = !DILocation(line: 356, column: 7, scope: !8332)
!8335 = !DILocation(line: 356, column: 43, scope: !8332)
!8336 = !DILocation(line: 356, column: 6, scope: !8332)
!8337 = !DILocation(line: 356, column: 6, scope: !931)
!8338 = !DILocalVariable(name: "new_fwd", scope: !8339, file: !790, line: 357, type: !910)
!8339 = distinct !DILexicalBlock(scope: !8332, file: !790, line: 356, column: 57)
!8340 = !DILocation(line: 357, column: 11, scope: !8339)
!8341 = !DILocalVariable(name: "fwd_tmp", scope: !8339, file: !790, line: 358, type: !834)
!8342 = !DILocation(line: 358, column: 8, scope: !8339)
!8343 = !DILocation(line: 364, column: 15, scope: !8339)
!8344 = !DILocation(line: 364, column: 28, scope: !8339)
!8345 = !DILocation(line: 364, column: 11, scope: !8339)
!8346 = !DILocation(line: 365, column: 20, scope: !8339)
!8347 = !DILocation(line: 365, column: 29, scope: !8339)
!8348 = !DILocation(line: 365, column: 13, scope: !8339)
!8349 = !DILocation(line: 365, column: 11, scope: !8339)
!8350 = !DILocation(line: 366, column: 3, scope: !8339)
!8351 = !DILocation(line: 366, column: 10, scope: !8352)
!8352 = !DILexicalBlockFile(scope: !8339, file: !790, discriminator: 1)
!8353 = !DILocation(line: 366, column: 3, scope: !8352)
!8354 = !DILocation(line: 367, column: 8, scope: !8355)
!8355 = distinct !DILexicalBlock(scope: !8356, file: !790, line: 367, column: 8)
!8356 = distinct !DILexicalBlock(scope: !8339, file: !790, line: 366, column: 19)
!8357 = !DILocation(line: 367, column: 17, scope: !8355)
!8358 = !DILocation(line: 367, column: 20, scope: !8355)
!8359 = !DILocation(line: 367, column: 24, scope: !8360)
!8360 = !DILexicalBlockFile(scope: !8355, file: !790, discriminator: 1)
!8361 = !DILocation(line: 367, column: 33, scope: !8360)
!8362 = !DILocation(line: 367, column: 8, scope: !8360)
!8363 = !DILocation(line: 368, column: 5, scope: !8355)
!8364 = !DILocation(line: 369, column: 14, scope: !8356)
!8365 = !DILocation(line: 369, column: 23, scope: !8356)
!8366 = !DILocation(line: 369, column: 12, scope: !8356)
!8367 = !DILocation(line: 370, column: 28, scope: !8356)
!8368 = !DILocation(line: 370, column: 37, scope: !8356)
!8369 = !DILocation(line: 370, column: 21, scope: !8356)
!8370 = !DILocation(line: 370, column: 19, scope: !8356)
!8371 = !DILocation(line: 366, column: 3, scope: !8372)
!8372 = !DILexicalBlockFile(scope: !8339, file: !790, discriminator: 2)
!8373 = !DILocation(line: 373, column: 8, scope: !8374)
!8374 = distinct !DILexicalBlock(scope: !8339, file: !790, line: 373, column: 7)
!8375 = !DILocation(line: 373, column: 16, scope: !8374)
!8376 = !DILocation(line: 373, column: 20, scope: !8377)
!8377 = !DILexicalBlockFile(scope: !8374, file: !790, discriminator: 1)
!8378 = !DILocation(line: 373, column: 29, scope: !8377)
!8379 = !DILocation(line: 373, column: 7, scope: !8377)
!8380 = !DILocation(line: 383, column: 16, scope: !8381)
!8381 = distinct !DILexicalBlock(scope: !8374, file: !790, line: 373, column: 33)
!8382 = !DILocation(line: 383, column: 26, scope: !8381)
!8383 = !DILocation(line: 383, column: 12, scope: !8381)
!8384 = !DILocation(line: 384, column: 21, scope: !8381)
!8385 = !DILocation(line: 384, column: 30, scope: !8381)
!8386 = !DILocation(line: 384, column: 14, scope: !8381)
!8387 = !DILocation(line: 384, column: 12, scope: !8381)
!8388 = !DILocation(line: 385, column: 4, scope: !8381)
!8389 = !DILocation(line: 385, column: 11, scope: !8390)
!8390 = !DILexicalBlockFile(scope: !8381, file: !790, discriminator: 1)
!8391 = !DILocation(line: 385, column: 4, scope: !8390)
!8392 = !DILocation(line: 387, column: 5, scope: !8393)
!8393 = distinct !DILexicalBlock(scope: !8381, file: !790, line: 385, column: 20)
!8394 = !DILocation(line: 387, column: 14, scope: !8393)
!8395 = !DILocation(line: 387, column: 20, scope: !8393)
!8396 = !DILocation(line: 388, column: 5, scope: !8393)
!8397 = !DILocation(line: 388, column: 14, scope: !8393)
!8398 = !DILocation(line: 388, column: 27, scope: !8393)
!8399 = !DILocation(line: 389, column: 15, scope: !8393)
!8400 = !DILocation(line: 389, column: 24, scope: !8393)
!8401 = !DILocation(line: 389, column: 13, scope: !8393)
!8402 = !DILocation(line: 390, column: 29, scope: !8393)
!8403 = !DILocation(line: 390, column: 38, scope: !8393)
!8404 = !DILocation(line: 390, column: 22, scope: !8393)
!8405 = !DILocation(line: 390, column: 20, scope: !8393)
!8406 = !DILocation(line: 385, column: 4, scope: !8407)
!8407 = !DILexicalBlockFile(scope: !8381, file: !790, discriminator: 2)
!8408 = !DILocation(line: 392, column: 4, scope: !8381)
!8409 = !DILocation(line: 396, column: 26, scope: !8339)
!8410 = !DILocation(line: 396, column: 39, scope: !8339)
!8411 = !DILocation(line: 396, column: 17, scope: !8339)
!8412 = !DILocation(line: 396, column: 51, scope: !8339)
!8413 = !DILocation(line: 396, column: 55, scope: !8339)
!8414 = !DILocation(line: 396, column: 4, scope: !8339)
!8415 = !DILocation(line: 397, column: 16, scope: !8339)
!8416 = !DILocation(line: 397, column: 25, scope: !8339)
!8417 = !DILocation(line: 397, column: 29, scope: !8339)
!8418 = !DILocation(line: 397, column: 4, scope: !8339)
!8419 = !DILocation(line: 395, column: 3, scope: !8339)
!8420 = !DILocation(line: 399, column: 19, scope: !8339)
!8421 = !DILocation(line: 399, column: 17, scope: !8339)
!8422 = !DILocation(line: 400, column: 2, scope: !8339)
!8423 = !DILocation(line: 401, column: 1, scope: !931)
!8424 = !DILocalVariable(name: "fn", scope: !934, file: !790, line: 404, type: !19)
!8425 = !DILocation(line: 404, column: 8, scope: !934)
!8426 = !DILocalVariable(name: "socklist", scope: !934, file: !790, line: 405, type: !910)
!8427 = !DILocation(line: 405, column: 10, scope: !934)
!8428 = !DILocalVariable(name: "gl", scope: !934, file: !790, line: 405, type: !910)
!8429 = !DILocation(line: 405, column: 21, scope: !934)
!8430 = !DILocalVariable(name: "fwd", scope: !934, file: !790, line: 406, type: !834)
!8431 = !DILocation(line: 406, column: 7, scope: !934)
!8432 = !DILocation(line: 408, column: 36, scope: !934)
!8433 = !DILocation(line: 408, column: 2, scope: !934)
!8434 = !DILocation(line: 410, column: 9, scope: !8435)
!8435 = distinct !DILexicalBlock(scope: !934, file: !790, line: 410, column: 6)
!8436 = !DILocation(line: 410, column: 7, scope: !8435)
!8437 = !DILocation(line: 410, column: 18, scope: !8435)
!8438 = !DILocation(line: 410, column: 24, scope: !8439)
!8439 = !DILexicalBlockFile(scope: !8435, file: !790, discriminator: 1)
!8440 = !DILocation(line: 410, column: 22, scope: !8439)
!8441 = !DILocation(line: 410, column: 6, scope: !8439)
!8442 = !DILocation(line: 411, column: 3, scope: !8435)
!8443 = !DILocation(line: 413, column: 13, scope: !934)
!8444 = !DILocation(line: 413, column: 11, scope: !934)
!8445 = !DILocation(line: 420, column: 21, scope: !8446)
!8446 = distinct !DILexicalBlock(scope: !934, file: !790, line: 420, column: 9)
!8447 = !DILocation(line: 420, column: 17, scope: !8446)
!8448 = !DILocation(line: 420, column: 14, scope: !8446)
!8449 = !DILocation(line: 420, column: 34, scope: !8450)
!8450 = !DILexicalBlockFile(scope: !8451, file: !790, discriminator: 1)
!8451 = distinct !DILexicalBlock(scope: !8446, file: !790, line: 420, column: 9)
!8452 = !DILocation(line: 420, column: 38, scope: !8450)
!8453 = !DILocation(line: 420, column: 48, scope: !8450)
!8454 = !DILocation(line: 420, column: 43, scope: !8450)
!8455 = !DILocation(line: 420, column: 9, scope: !8450)
!8456 = !DILocation(line: 421, column: 8, scope: !8457)
!8457 = distinct !DILexicalBlock(scope: !8458, file: !790, line: 421, column: 7)
!8458 = distinct !DILexicalBlock(scope: !8451, file: !790, line: 420, column: 76)
!8459 = !DILocation(line: 421, column: 12, scope: !8457)
!8460 = !DILocation(line: 421, column: 7, scope: !8458)
!8461 = !DILocation(line: 422, column: 4, scope: !8457)
!8462 = !DILocation(line: 424, column: 23, scope: !8458)
!8463 = !DILocation(line: 424, column: 27, scope: !8458)
!8464 = !DILocation(line: 424, column: 16, scope: !8458)
!8465 = !DILocation(line: 424, column: 14, scope: !8458)
!8466 = !DILocation(line: 425, column: 7, scope: !8467)
!8467 = distinct !DILexicalBlock(scope: !8458, file: !790, line: 425, column: 7)
!8468 = !DILocation(line: 425, column: 12, scope: !8467)
!8469 = !DILocation(line: 425, column: 15, scope: !8467)
!8470 = !DILocation(line: 425, column: 19, scope: !8471)
!8471 = !DILexicalBlockFile(scope: !8467, file: !790, discriminator: 1)
!8472 = !DILocation(line: 425, column: 24, scope: !8471)
!8473 = !DILocation(line: 425, column: 7, scope: !8471)
!8474 = !DILocalVariable(name: "sa", scope: !8475, file: !790, line: 426, type: !844)
!8475 = distinct !DILexicalBlock(scope: !8467, file: !790, line: 425, column: 39)
!8476 = !DILocation(line: 426, column: 21, scope: !8475)
!8477 = !DILocation(line: 428, column: 9, scope: !8475)
!8478 = !DILocation(line: 428, column: 7, scope: !8475)
!8479 = !DILocation(line: 429, column: 9, scope: !8480)
!8480 = distinct !DILexicalBlock(scope: !8475, file: !790, line: 429, column: 8)
!8481 = !DILocation(line: 429, column: 8, scope: !8475)
!8482 = !DILocation(line: 430, column: 5, scope: !8480)
!8483 = !DILocation(line: 432, column: 11, scope: !8475)
!8484 = !DILocation(line: 432, column: 4, scope: !8475)
!8485 = !DILocation(line: 432, column: 15, scope: !8475)
!8486 = !DILocation(line: 432, column: 20, scope: !8475)
!8487 = !DILocation(line: 432, column: 24, scope: !8475)
!8488 = !DILocation(line: 432, column: 24, scope: !8489)
!8489 = !DILexicalBlockFile(scope: !8475, file: !790, discriminator: 1)
!8490 = !DILocation(line: 432, column: 24, scope: !8491)
!8491 = !DILexicalBlockFile(scope: !8475, file: !790, discriminator: 2)
!8492 = !DILocation(line: 432, column: 24, scope: !8493)
!8493 = !DILexicalBlockFile(scope: !8475, file: !790, discriminator: 3)
!8494 = !DILocation(line: 432, column: 4, scope: !8493)
!8495 = !DILocation(line: 433, column: 18, scope: !8475)
!8496 = !DILocation(line: 433, column: 28, scope: !8475)
!8497 = !DILocation(line: 433, column: 4, scope: !8475)
!8498 = !DILocation(line: 434, column: 3, scope: !8475)
!8499 = !DILocation(line: 435, column: 2, scope: !8458)
!8500 = !DILocation(line: 420, column: 66, scope: !8501)
!8501 = !DILexicalBlockFile(scope: !8451, file: !790, discriminator: 2)
!8502 = !DILocation(line: 420, column: 70, scope: !8501)
!8503 = !DILocation(line: 420, column: 64, scope: !8501)
!8504 = !DILocation(line: 420, column: 9, scope: !8501)
!8505 = !DILocation(line: 437, column: 9, scope: !934)
!8506 = !DILocation(line: 437, column: 2, scope: !934)
!8507 = !DILocation(line: 438, column: 1, scope: !934)
!8508 = !DILocalVariable(name: "fn", scope: !941, file: !938, line: 16, type: !19)
!8509 = !DILocation(line: 16, column: 15, scope: !941)
!8510 = !DILocalVariable(name: "qs_tmp", scope: !941, file: !938, line: 17, type: !944)
!8511 = !DILocation(line: 17, column: 9, scope: !941)
!8512 = !DILocation(line: 19, column: 11, scope: !941)
!8513 = !DILocation(line: 19, column: 9, scope: !941)
!8514 = !DILocation(line: 20, column: 7, scope: !8515)
!8515 = distinct !DILexicalBlock(scope: !941, file: !938, line: 20, column: 6)
!8516 = !DILocation(line: 20, column: 6, scope: !941)
!8517 = !DILocation(line: 21, column: 50, scope: !8515)
!8518 = !DILocation(line: 21, column: 3, scope: !8515)
!8519 = !DILocation(line: 22, column: 43, scope: !8520)
!8520 = distinct !DILexicalBlock(scope: !8515, file: !938, line: 22, column: 11)
!8521 = !DILocation(line: 22, column: 28, scope: !8520)
!8522 = !DILocation(line: 22, column: 36, scope: !8520)
!8523 = !DILocation(line: 22, column: 41, scope: !8520)
!8524 = !DILocation(line: 22, column: 13, scope: !8520)
!8525 = !DILocation(line: 22, column: 21, scope: !8520)
!8526 = !DILocation(line: 22, column: 26, scope: !8520)
!8527 = !DILocation(line: 22, column: 11, scope: !8515)
!8528 = !DILocation(line: 23, column: 50, scope: !8529)
!8529 = distinct !DILexicalBlock(scope: !8520, file: !938, line: 22, column: 71)
!8530 = !DILocation(line: 23, column: 3, scope: !8529)
!8531 = !DILocation(line: 24, column: 9, scope: !8529)
!8532 = !DILocation(line: 24, column: 3, scope: !8529)
!8533 = !DILocation(line: 25, column: 2, scope: !8529)
!8534 = !DILocation(line: 26, column: 3, scope: !8535)
!8535 = distinct !DILexicalBlock(scope: !8520, file: !938, line: 25, column: 9)
!8536 = !DILocation(line: 26, column: 11, scope: !8535)
!8537 = !DILocation(line: 26, column: 17, scope: !8535)
!8538 = !DILocation(line: 26, column: 22, scope: !8535)
!8539 = !DILocation(line: 27, column: 3, scope: !8535)
!8540 = !DILocation(line: 27, column: 11, scope: !8535)
!8541 = !DILocation(line: 27, column: 17, scope: !8535)
!8542 = !DILocation(line: 27, column: 19, scope: !8535)
!8543 = !DILocation(line: 29, column: 10, scope: !8535)
!8544 = !DILocation(line: 29, column: 3, scope: !8535)
!8545 = !DILocation(line: 33, column: 2, scope: !941)
!8546 = !DILocation(line: 34, column: 1, scope: !941)
!8547 = !DILocalVariable(name: "qs", arg: 1, scope: !955, file: !938, line: 36, type: !944)
!8548 = !DILocation(line: 36, column: 21, scope: !955)
!8549 = !DILocalVariable(name: "p", arg: 2, scope: !955, file: !938, line: 36, type: !26)
!8550 = !DILocation(line: 36, column: 31, scope: !955)
!8551 = !DILocalVariable(name: "fn", scope: !955, file: !938, line: 37, type: !19)
!8552 = !DILocation(line: 37, column: 15, scope: !955)
!8553 = !DILocalVariable(name: "gq_tmp", scope: !955, file: !938, line: 38, type: !965)
!8554 = !DILocation(line: 38, column: 11, scope: !955)
!8555 = !DILocation(line: 40, column: 11, scope: !955)
!8556 = !DILocation(line: 40, column: 9, scope: !955)
!8557 = !DILocation(line: 41, column: 7, scope: !8558)
!8558 = distinct !DILexicalBlock(scope: !955, file: !938, line: 41, column: 6)
!8559 = !DILocation(line: 41, column: 6, scope: !955)
!8560 = !DILocation(line: 42, column: 50, scope: !8558)
!8561 = !DILocation(line: 42, column: 3, scope: !8558)
!8562 = !DILocation(line: 44, column: 3, scope: !8563)
!8563 = distinct !DILexicalBlock(scope: !8558, file: !938, line: 43, column: 7)
!8564 = !DILocation(line: 44, column: 11, scope: !8563)
!8565 = !DILocation(line: 44, column: 16, scope: !8563)
!8566 = !DILocation(line: 45, column: 3, scope: !8563)
!8567 = !DILocation(line: 45, column: 11, scope: !8563)
!8568 = !DILocation(line: 45, column: 13, scope: !8563)
!8569 = !DILocation(line: 47, column: 17, scope: !8563)
!8570 = !DILocation(line: 47, column: 3, scope: !8563)
!8571 = !DILocation(line: 47, column: 7, scope: !8563)
!8572 = !DILocation(line: 47, column: 13, scope: !8563)
!8573 = !DILocation(line: 47, column: 15, scope: !8563)
!8574 = !DILocation(line: 48, column: 20, scope: !8563)
!8575 = !DILocation(line: 48, column: 3, scope: !8563)
!8576 = !DILocation(line: 48, column: 7, scope: !8563)
!8577 = !DILocation(line: 48, column: 13, scope: !8563)
!8578 = !DILocation(line: 48, column: 18, scope: !8563)
!8579 = !DILocation(line: 49, column: 14, scope: !8563)
!8580 = !DILocation(line: 49, column: 3, scope: !8563)
!8581 = !DILocation(line: 49, column: 7, scope: !8563)
!8582 = !DILocation(line: 49, column: 12, scope: !8563)
!8583 = !DILocation(line: 52, column: 3, scope: !8563)
!8584 = !DILocation(line: 55, column: 2, scope: !955)
!8585 = !DILocation(line: 56, column: 1, scope: !955)
!8586 = !DILocalVariable(name: "qs", arg: 1, scope: !958, file: !938, line: 58, type: !944)
!8587 = !DILocation(line: 58, column: 23, scope: !958)
!8588 = !DILocalVariable(name: "p", scope: !958, file: !938, line: 59, type: !26)
!8589 = !DILocation(line: 59, column: 8, scope: !958)
!8590 = !DILocalVariable(name: "gq_tmp", scope: !958, file: !938, line: 60, type: !965)
!8591 = !DILocation(line: 60, column: 11, scope: !958)
!8592 = !DILocation(line: 62, column: 7, scope: !8593)
!8593 = distinct !DILexicalBlock(scope: !958, file: !938, line: 62, column: 6)
!8594 = !DILocation(line: 62, column: 11, scope: !8593)
!8595 = !DILocation(line: 62, column: 17, scope: !8593)
!8596 = !DILocation(line: 62, column: 6, scope: !958)
!8597 = !DILocation(line: 63, column: 3, scope: !8593)
!8598 = !DILocation(line: 65, column: 2, scope: !958)
!8599 = !DILocation(line: 66, column: 7, scope: !8600)
!8600 = distinct !DILexicalBlock(scope: !958, file: !938, line: 65, column: 5)
!8601 = !DILocation(line: 66, column: 11, scope: !8600)
!8602 = !DILocation(line: 66, column: 17, scope: !8600)
!8603 = !DILocation(line: 66, column: 5, scope: !8600)
!8604 = !DILocation(line: 67, column: 12, scope: !8600)
!8605 = !DILocation(line: 67, column: 16, scope: !8600)
!8606 = !DILocation(line: 67, column: 10, scope: !8600)
!8607 = !DILocation(line: 68, column: 14, scope: !8600)
!8608 = !DILocation(line: 68, column: 18, scope: !8600)
!8609 = !DILocation(line: 68, column: 24, scope: !8600)
!8610 = !DILocation(line: 68, column: 3, scope: !8600)
!8611 = !DILocation(line: 68, column: 7, scope: !8600)
!8612 = !DILocation(line: 68, column: 12, scope: !8600)
!8613 = !DILocation(line: 69, column: 9, scope: !8600)
!8614 = !DILocation(line: 69, column: 3, scope: !8600)
!8615 = !DILocation(line: 70, column: 2, scope: !8600)
!8616 = !DILocation(line: 70, column: 12, scope: !8617)
!8617 = !DILexicalBlockFile(scope: !958, file: !938, discriminator: 1)
!8618 = !DILocation(line: 70, column: 14, scope: !8617)
!8619 = !DILocation(line: 70, column: 17, scope: !8620)
!8620 = !DILexicalBlockFile(scope: !958, file: !938, discriminator: 2)
!8621 = !DILocation(line: 70, column: 21, scope: !8620)
!8622 = !DILocation(line: 70, column: 29, scope: !8620)
!8623 = !DILocation(line: 70, column: 33, scope: !8620)
!8624 = !DILocation(line: 70, column: 26, scope: !8620)
!8625 = !DILocation(line: 70, column: 2, scope: !8626)
!8626 = !DILexicalBlockFile(scope: !8600, file: !938, discriminator: 3)
!8627 = !DILocation(line: 72, column: 9, scope: !958)
!8628 = !DILocation(line: 72, column: 2, scope: !958)
!8629 = !DILocation(line: 73, column: 1, scope: !958)
!8630 = !DILocalVariable(name: "qs", arg: 1, scope: !961, file: !938, line: 75, type: !944)
!8631 = !DILocation(line: 75, column: 26, scope: !961)
!8632 = !DILocation(line: 77, column: 7, scope: !8633)
!8633 = distinct !DILexicalBlock(scope: !961, file: !938, line: 77, column: 6)
!8634 = !DILocation(line: 77, column: 11, scope: !8633)
!8635 = !DILocation(line: 77, column: 17, scope: !8633)
!8636 = !DILocation(line: 77, column: 6, scope: !961)
!8637 = !DILocation(line: 78, column: 3, scope: !8633)
!8638 = !DILocation(line: 80, column: 9, scope: !961)
!8639 = !DILocation(line: 80, column: 13, scope: !961)
!8640 = !DILocation(line: 80, column: 19, scope: !961)
!8641 = !DILocation(line: 80, column: 2, scope: !961)
!8642 = !DILocation(line: 81, column: 1, scope: !961)
!8643 = !DILocalVariable(name: "gq", arg: 1, scope: !962, file: !938, line: 83, type: !965)
!8644 = !DILocation(line: 83, column: 31, scope: !962)
!8645 = !DILocalVariable(name: "p", scope: !962, file: !938, line: 84, type: !26)
!8646 = !DILocation(line: 84, column: 8, scope: !962)
!8647 = !DILocation(line: 86, column: 6, scope: !962)
!8648 = !DILocation(line: 86, column: 10, scope: !962)
!8649 = !DILocation(line: 86, column: 4, scope: !962)
!8650 = !DILocation(line: 87, column: 2, scope: !962)
!8651 = !DILocation(line: 87, column: 6, scope: !962)
!8652 = !DILocation(line: 87, column: 8, scope: !962)
!8653 = !DILocation(line: 88, column: 9, scope: !962)
!8654 = !DILocation(line: 88, column: 2, scope: !962)
!8655 = !DILocalVariable(name: "qs", arg: 1, scope: !967, file: !938, line: 91, type: !944)
!8656 = !DILocation(line: 91, column: 28, scope: !967)
!8657 = !DILocalVariable(name: "freefnc", arg: 2, scope: !967, file: !938, line: 91, type: !970)
!8658 = !DILocation(line: 91, column: 39, scope: !967)
!8659 = !DILocalVariable(name: "p", scope: !967, file: !938, line: 92, type: !26)
!8660 = !DILocation(line: 92, column: 8, scope: !967)
!8661 = !DILocation(line: 94, column: 7, scope: !8662)
!8662 = distinct !DILexicalBlock(scope: !967, file: !938, line: 94, column: 6)
!8663 = !DILocation(line: 94, column: 6, scope: !967)
!8664 = !DILocation(line: 95, column: 3, scope: !8662)
!8665 = !DILocation(line: 97, column: 2, scope: !967)
!8666 = !DILocation(line: 97, column: 23, scope: !8667)
!8667 = !DILexicalBlockFile(scope: !967, file: !938, discriminator: 1)
!8668 = !DILocation(line: 97, column: 14, scope: !8667)
!8669 = !DILocation(line: 97, column: 12, scope: !8667)
!8670 = !DILocation(line: 97, column: 2, scope: !8667)
!8671 = !DILocation(line: 98, column: 5, scope: !967)
!8672 = !DILocation(line: 98, column: 15, scope: !967)
!8673 = !DILocation(line: 98, column: 3, scope: !967)
!8674 = !DILocation(line: 97, column: 2, scope: !8675)
!8675 = !DILexicalBlockFile(scope: !967, file: !938, discriminator: 2)
!8676 = !DILocation(line: 100, column: 6, scope: !8677)
!8677 = distinct !DILexicalBlock(scope: !967, file: !938, line: 100, column: 6)
!8678 = !DILocation(line: 100, column: 10, scope: !8677)
!8679 = !DILocation(line: 100, column: 6, scope: !967)
!8680 = !DILocation(line: 102, column: 9, scope: !8681)
!8681 = distinct !DILexicalBlock(scope: !8677, file: !938, line: 100, column: 16)
!8682 = !DILocation(line: 102, column: 13, scope: !8681)
!8683 = !DILocation(line: 102, column: 3, scope: !8681)
!8684 = !DILocation(line: 103, column: 2, scope: !8681)
!8685 = !DILocation(line: 104, column: 8, scope: !967)
!8686 = !DILocation(line: 104, column: 2, scope: !967)
!8687 = !DILocation(line: 105, column: 1, scope: !967)
!8688 = !DILocation(line: 105, column: 1, scope: !8667)
!8689 = !DILocalVariable(name: "config_file", arg: 1, scope: !975, file: !972, line: 40, type: !19)
!8690 = !DILocation(line: 40, column: 24, scope: !975)
!8691 = !DILocalVariable(name: "buf", scope: !975, file: !972, line: 41, type: !8692)
!8692 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6, size: 4096, align: 8, elements: !5850)
!8693 = !DILocation(line: 41, column: 7, scope: !975)
!8694 = !DILocalVariable(name: "cp", scope: !975, file: !972, line: 42, type: !19)
!8695 = !DILocation(line: 42, column: 8, scope: !975)
!8696 = !DILocalVariable(name: "config_fp", scope: !975, file: !972, line: 43, type: !8697)
!8697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8698, size: 64, align: 64)
!8698 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !8699, line: 48, baseType: !8700)
!8699 = !DIFile(filename: "/usr/include/stdio.h", directory: "/home/muhammad/totd/totd")
!8700 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !8701, line: 241, size: 1728, align: 64, elements: !8702)
!8701 = !DIFile(filename: "/usr/include/libio.h", directory: "/home/muhammad/totd/totd")
!8702 = !{!8703, !8704, !8705, !8706, !8707, !8708, !8709, !8710, !8711, !8712, !8713, !8714, !8715, !8723, !8724, !8725, !8726, !8728, !8729, !8731, !8735, !8738, !8740, !8741, !8742, !8743, !8744, !8745, !8746}
!8703 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !8700, file: !8701, line: 242, baseType: !33, size: 32, align: 32)
!8704 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !8700, file: !8701, line: 247, baseType: !19, size: 64, align: 64, offset: 64)
!8705 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !8700, file: !8701, line: 248, baseType: !19, size: 64, align: 64, offset: 128)
!8706 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !8700, file: !8701, line: 249, baseType: !19, size: 64, align: 64, offset: 192)
!8707 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !8700, file: !8701, line: 250, baseType: !19, size: 64, align: 64, offset: 256)
!8708 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !8700, file: !8701, line: 251, baseType: !19, size: 64, align: 64, offset: 320)
!8709 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !8700, file: !8701, line: 252, baseType: !19, size: 64, align: 64, offset: 384)
!8710 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !8700, file: !8701, line: 253, baseType: !19, size: 64, align: 64, offset: 448)
!8711 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !8700, file: !8701, line: 254, baseType: !19, size: 64, align: 64, offset: 512)
!8712 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !8700, file: !8701, line: 256, baseType: !19, size: 64, align: 64, offset: 576)
!8713 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !8700, file: !8701, line: 257, baseType: !19, size: 64, align: 64, offset: 640)
!8714 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !8700, file: !8701, line: 258, baseType: !19, size: 64, align: 64, offset: 704)
!8715 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !8700, file: !8701, line: 260, baseType: !8716, size: 64, align: 64, offset: 768)
!8716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8717, size: 64, align: 64)
!8717 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !8701, line: 156, size: 192, align: 64, elements: !8718)
!8718 = !{!8719, !8720, !8722}
!8719 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !8717, file: !8701, line: 157, baseType: !8716, size: 64, align: 64)
!8720 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !8717, file: !8701, line: 158, baseType: !8721, size: 64, align: 64, offset: 64)
!8721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8700, size: 64, align: 64)
!8722 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !8717, file: !8701, line: 162, baseType: !33, size: 32, align: 32, offset: 128)
!8723 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !8700, file: !8701, line: 262, baseType: !8721, size: 64, align: 64, offset: 832)
!8724 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !8700, file: !8701, line: 264, baseType: !33, size: 32, align: 32, offset: 896)
!8725 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !8700, file: !8701, line: 268, baseType: !33, size: 32, align: 32, offset: 928)
!8726 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !8700, file: !8701, line: 270, baseType: !8727, size: 64, align: 64, offset: 960)
!8727 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !24, line: 131, baseType: !106)
!8728 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !8700, file: !8701, line: 274, baseType: !14, size: 16, align: 16, offset: 1024)
!8729 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !8700, file: !8701, line: 275, baseType: !8730, size: 8, align: 8, offset: 1040)
!8730 = !DIBasicType(name: "signed char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!8731 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !8700, file: !8701, line: 276, baseType: !8732, size: 8, align: 8, offset: 1048)
!8732 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6, size: 8, align: 8, elements: !8733)
!8733 = !{!8734}
!8734 = !DISubrange(count: 1)
!8735 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !8700, file: !8701, line: 280, baseType: !8736, size: 64, align: 64, offset: 1088)
!8736 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8737, size: 64, align: 64)
!8737 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !8701, line: 150, baseType: null)
!8738 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !8700, file: !8701, line: 289, baseType: !8739, size: 64, align: 64, offset: 1152)
!8739 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !24, line: 132, baseType: !106)
!8740 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !8700, file: !8701, line: 297, baseType: !26, size: 64, align: 64, offset: 1216)
!8741 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !8700, file: !8701, line: 298, baseType: !26, size: 64, align: 64, offset: 1280)
!8742 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !8700, file: !8701, line: 299, baseType: !26, size: 64, align: 64, offset: 1344)
!8743 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !8700, file: !8701, line: 300, baseType: !26, size: 64, align: 64, offset: 1408)
!8744 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !8700, file: !8701, line: 302, baseType: !35, size: 64, align: 64, offset: 1472)
!8745 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !8700, file: !8701, line: 303, baseType: !33, size: 32, align: 32, offset: 1536)
!8746 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !8700, file: !8701, line: 305, baseType: !8747, size: 160, align: 8, offset: 1568)
!8747 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6, size: 160, align: 8, elements: !8748)
!8748 = !{!8749}
!8749 = !DISubrange(count: 20)
!8750 = !DILocation(line: 43, column: 8, scope: !975)
!8751 = !DILocalVariable(name: "args", scope: !975, file: !972, line: 44, type: !8752)
!8752 = !DICompositeType(tag: DW_TAG_array_type, baseType: !19, size: 1920, align: 64, elements: !927)
!8753 = !DILocation(line: 44, column: 8, scope: !975)
!8754 = !DILocalVariable(name: "argcnt", scope: !975, file: !972, line: 45, type: !33)
!8755 = !DILocation(line: 45, column: 6, scope: !975)
!8756 = !DILocalVariable(name: "errcnt", scope: !975, file: !972, line: 45, type: !33)
!8757 = !DILocation(line: 45, column: 14, scope: !975)
!8758 = !DILocalVariable(name: "linenum", scope: !975, file: !972, line: 45, type: !33)
!8759 = !DILocation(line: 45, column: 22, scope: !975)
!8760 = !DILocation(line: 55, column: 19, scope: !975)
!8761 = !DILocation(line: 55, column: 10, scope: !975)
!8762 = !DILocalVariable(name: "i", scope: !8763, file: !972, line: 58, type: !33)
!8763 = distinct !DILexicalBlock(scope: !975, file: !972, line: 58, column: 2)
!8764 = !DILocation(line: 58, column: 10, scope: !8763)
!8765 = !DILocation(line: 58, column: 6, scope: !8763)
!8766 = !DILocation(line: 58, column: 17, scope: !8767)
!8767 = !DILexicalBlockFile(scope: !8768, file: !972, discriminator: 1)
!8768 = distinct !DILexicalBlock(scope: !8763, file: !972, line: 58, column: 2)
!8769 = !DILocation(line: 58, column: 19, scope: !8767)
!8770 = !DILocation(line: 58, column: 2, scope: !8767)
!8771 = !DILocation(line: 59, column: 6, scope: !8772)
!8772 = distinct !DILexicalBlock(scope: !8773, file: !972, line: 59, column: 6)
!8773 = distinct !DILexicalBlock(scope: !8768, file: !972, line: 58, column: 30)
!8774 = !DILocation(line: 59, column: 8, scope: !8772)
!8775 = !DILocation(line: 59, column: 6, scope: !8773)
!8776 = !DILocation(line: 59, column: 15, scope: !8777)
!8777 = !DILexicalBlockFile(scope: !8772, file: !972, discriminator: 1)
!8778 = !DILocation(line: 60, column: 3, scope: !8773)
!8779 = !DILocation(line: 61, column: 3, scope: !8773)
!8780 = !DILocation(line: 61, column: 21, scope: !8773)
!8781 = !DILocation(line: 61, column: 15, scope: !8773)
!8782 = !DILocation(line: 62, column: 10, scope: !8773)
!8783 = !DILocation(line: 63, column: 63, scope: !8773)
!8784 = !DILocation(line: 63, column: 3, scope: !8773)
!8785 = !DILocation(line: 64, column: 16, scope: !8773)
!8786 = !DILocation(line: 64, column: 8, scope: !8773)
!8787 = !DILocation(line: 64, column: 6, scope: !8773)
!8788 = !DILocation(line: 65, column: 7, scope: !8789)
!8789 = distinct !DILexicalBlock(scope: !8773, file: !972, line: 65, column: 7)
!8790 = !DILocation(line: 65, column: 7, scope: !8773)
!8791 = !DILocation(line: 66, column: 5, scope: !8789)
!8792 = !DILocation(line: 66, column: 8, scope: !8789)
!8793 = !DILocation(line: 66, column: 4, scope: !8789)
!8794 = !DILocation(line: 67, column: 16, scope: !8773)
!8795 = !DILocation(line: 67, column: 8, scope: !8773)
!8796 = !DILocation(line: 67, column: 6, scope: !8773)
!8797 = !DILocation(line: 68, column: 7, scope: !8798)
!8798 = distinct !DILexicalBlock(scope: !8773, file: !972, line: 68, column: 7)
!8799 = !DILocation(line: 68, column: 7, scope: !8773)
!8800 = !DILocation(line: 69, column: 5, scope: !8798)
!8801 = !DILocation(line: 69, column: 8, scope: !8798)
!8802 = !DILocation(line: 69, column: 4, scope: !8798)
!8803 = !DILocation(line: 70, column: 16, scope: !8773)
!8804 = !DILocation(line: 70, column: 8, scope: !8773)
!8805 = !DILocation(line: 70, column: 6, scope: !8773)
!8806 = !DILocation(line: 71, column: 7, scope: !8807)
!8807 = distinct !DILexicalBlock(scope: !8773, file: !972, line: 71, column: 7)
!8808 = !DILocation(line: 71, column: 7, scope: !8773)
!8809 = !DILocation(line: 72, column: 5, scope: !8807)
!8810 = !DILocation(line: 72, column: 8, scope: !8807)
!8811 = !DILocation(line: 72, column: 4, scope: !8807)
!8812 = !DILocation(line: 73, column: 16, scope: !8773)
!8813 = !DILocation(line: 73, column: 8, scope: !8773)
!8814 = !DILocation(line: 73, column: 6, scope: !8773)
!8815 = !DILocation(line: 74, column: 7, scope: !8816)
!8816 = distinct !DILexicalBlock(scope: !8773, file: !972, line: 74, column: 7)
!8817 = !DILocation(line: 74, column: 7, scope: !8773)
!8818 = !DILocation(line: 75, column: 5, scope: !8816)
!8819 = !DILocation(line: 75, column: 8, scope: !8816)
!8820 = !DILocation(line: 75, column: 4, scope: !8816)
!8821 = !DILocalVariable(name: "temp", scope: !8773, file: !972, line: 78, type: !19)
!8822 = !DILocation(line: 78, column: 10, scope: !8773)
!8823 = !DILocation(line: 78, column: 17, scope: !8773)
!8824 = !DILocation(line: 79, column: 10, scope: !8773)
!8825 = !DILocation(line: 80, column: 6, scope: !8826)
!8826 = distinct !DILexicalBlock(scope: !8773, file: !972, line: 80, column: 6)
!8827 = !DILocation(line: 80, column: 13, scope: !8826)
!8828 = !DILocation(line: 80, column: 6, scope: !8773)
!8829 = !DILocation(line: 80, column: 22, scope: !8830)
!8830 = !DILexicalBlockFile(scope: !8826, file: !972, discriminator: 1)
!8831 = !DILocalVariable(name: "i", scope: !8832, file: !972, line: 81, type: !33)
!8832 = distinct !DILexicalBlock(scope: !8773, file: !972, line: 81, column: 3)
!8833 = !DILocation(line: 81, column: 11, scope: !8832)
!8834 = !DILocation(line: 81, column: 7, scope: !8832)
!8835 = !DILocation(line: 81, column: 18, scope: !8836)
!8836 = !DILexicalBlockFile(scope: !8837, file: !972, discriminator: 1)
!8837 = distinct !DILexicalBlock(scope: !8832, file: !972, line: 81, column: 3)
!8838 = !DILocation(line: 81, column: 20, scope: !8836)
!8839 = !DILocation(line: 81, column: 3, scope: !8836)
!8840 = !DILocation(line: 82, column: 12, scope: !8841)
!8841 = distinct !DILexicalBlock(scope: !8842, file: !972, line: 82, column: 7)
!8842 = distinct !DILexicalBlock(scope: !8837, file: !972, line: 81, column: 31)
!8843 = !DILocation(line: 82, column: 8, scope: !8841)
!8844 = !DILocation(line: 82, column: 7, scope: !8842)
!8845 = !DILocation(line: 82, column: 16, scope: !8846)
!8846 = !DILexicalBlockFile(scope: !8841, file: !972, discriminator: 1)
!8847 = !DILocation(line: 83, column: 4, scope: !8842)
!8848 = !DILocation(line: 84, column: 11, scope: !8849)
!8849 = distinct !DILexicalBlock(scope: !8842, file: !972, line: 84, column: 7)
!8850 = !DILocation(line: 84, column: 7, scope: !8849)
!8851 = !DILocation(line: 84, column: 14, scope: !8849)
!8852 = !DILocation(line: 84, column: 7, scope: !8842)
!8853 = !DILocalVariable(name: "orig", scope: !8854, file: !972, line: 85, type: !6)
!8854 = distinct !DILexicalBlock(scope: !8849, file: !972, line: 84, column: 22)
!8855 = !DILocation(line: 85, column: 10, scope: !8854)
!8856 = !DILocation(line: 85, column: 21, scope: !8854)
!8857 = !DILocation(line: 85, column: 17, scope: !8854)
!8858 = !DILocation(line: 86, column: 9, scope: !8854)
!8859 = !DILocation(line: 86, column: 5, scope: !8854)
!8860 = !DILocation(line: 86, column: 12, scope: !8854)
!8861 = !DILocation(line: 87, column: 20, scope: !8854)
!8862 = !DILocation(line: 87, column: 10, scope: !8854)
!8863 = !DILocation(line: 87, column: 5, scope: !8854)
!8864 = !DILocation(line: 87, column: 18, scope: !8854)
!8865 = !DILocation(line: 88, column: 11, scope: !8854)
!8866 = !DILocation(line: 89, column: 17, scope: !8854)
!8867 = !DILocation(line: 89, column: 19, scope: !8854)
!8868 = !DILocation(line: 89, column: 13, scope: !8854)
!8869 = !DILocation(line: 89, column: 10, scope: !8854)
!8870 = !DILocation(line: 90, column: 8, scope: !8871)
!8871 = distinct !DILexicalBlock(scope: !8854, file: !972, line: 90, column: 8)
!8872 = !DILocation(line: 90, column: 13, scope: !8871)
!8873 = !DILocation(line: 90, column: 8, scope: !8854)
!8874 = !DILocation(line: 90, column: 22, scope: !8875)
!8875 = !DILexicalBlockFile(scope: !8871, file: !972, discriminator: 1)
!8876 = !DILocation(line: 91, column: 4, scope: !8854)
!8877 = !DILocation(line: 92, column: 3, scope: !8842)
!8878 = !DILocation(line: 81, column: 27, scope: !8879)
!8879 = !DILexicalBlockFile(scope: !8837, file: !972, discriminator: 2)
!8880 = !DILocation(line: 81, column: 3, scope: !8879)
!8881 = !DILocation(line: 94, column: 18, scope: !8773)
!8882 = !DILocation(line: 94, column: 8, scope: !8773)
!8883 = !DILocation(line: 94, column: 3, scope: !8773)
!8884 = !DILocation(line: 94, column: 16, scope: !8773)
!8885 = !DILocation(line: 95, column: 9, scope: !8773)
!8886 = !DILocation(line: 96, column: 8, scope: !8887)
!8887 = distinct !DILexicalBlock(scope: !8773, file: !972, line: 96, column: 7)
!8888 = !DILocation(line: 96, column: 7, scope: !8773)
!8889 = !DILocation(line: 97, column: 4, scope: !8887)
!8890 = !DILocation(line: 99, column: 16, scope: !8891)
!8891 = distinct !DILexicalBlock(scope: !8773, file: !972, line: 99, column: 7)
!8892 = !DILocation(line: 99, column: 8, scope: !8891)
!8893 = !DILocation(line: 99, column: 7, scope: !8773)
!8894 = !DILocation(line: 100, column: 8, scope: !8895)
!8895 = distinct !DILexicalBlock(scope: !8896, file: !972, line: 100, column: 8)
!8896 = distinct !DILexicalBlock(scope: !8891, file: !972, line: 99, column: 39)
!8897 = !DILocation(line: 100, column: 15, scope: !8895)
!8898 = !DILocation(line: 100, column: 19, scope: !8895)
!8899 = !DILocation(line: 100, column: 22, scope: !8900)
!8900 = !DILexicalBlockFile(scope: !8895, file: !972, discriminator: 1)
!8901 = !DILocation(line: 100, column: 29, scope: !8900)
!8902 = !DILocation(line: 100, column: 8, scope: !8900)
!8903 = !DILocation(line: 101, column: 83, scope: !8904)
!8904 = distinct !DILexicalBlock(scope: !8895, file: !972, line: 100, column: 35)
!8905 = !DILocation(line: 101, column: 5, scope: !8904)
!8906 = !DILocation(line: 102, column: 11, scope: !8904)
!8907 = !DILocation(line: 103, column: 4, scope: !8904)
!8908 = !DILocalVariable(name: "port", scope: !8909, file: !972, line: 104, type: !33)
!8909 = distinct !DILexicalBlock(scope: !8895, file: !972, line: 103, column: 11)
!8910 = !DILocation(line: 104, column: 9, scope: !8909)
!8911 = !DILocalVariable(name: "i", scope: !8909, file: !972, line: 104, type: !33)
!8912 = !DILocation(line: 104, column: 25, scope: !8909)
!8913 = !DILocation(line: 106, column: 7, scope: !8909)
!8914 = !DILocation(line: 107, column: 9, scope: !8915)
!8915 = distinct !DILexicalBlock(scope: !8909, file: !972, line: 107, column: 9)
!8916 = !DILocation(line: 107, column: 18, scope: !8915)
!8917 = !DILocation(line: 107, column: 16, scope: !8915)
!8918 = !DILocation(line: 107, column: 9, scope: !8909)
!8919 = !DILocation(line: 108, column: 24, scope: !8920)
!8920 = distinct !DILexicalBlock(scope: !8921, file: !972, line: 108, column: 10)
!8921 = distinct !DILexicalBlock(scope: !8915, file: !972, line: 107, column: 21)
!8922 = !DILocation(line: 108, column: 19, scope: !8920)
!8923 = !DILocation(line: 108, column: 11, scope: !8920)
!8924 = !DILocation(line: 108, column: 10, scope: !8921)
!8925 = !DILocation(line: 109, column: 11, scope: !8926)
!8926 = distinct !DILexicalBlock(scope: !8927, file: !972, line: 109, column: 11)
!8927 = distinct !DILexicalBlock(scope: !8920, file: !972, line: 108, column: 37)
!8928 = !DILocation(line: 109, column: 21, scope: !8926)
!8929 = !DILocation(line: 109, column: 18, scope: !8926)
!8930 = !DILocation(line: 109, column: 11, scope: !8927)
!8931 = !DILocation(line: 110, column: 27, scope: !8932)
!8932 = distinct !DILexicalBlock(scope: !8926, file: !972, line: 109, column: 26)
!8933 = !DILocation(line: 110, column: 21, scope: !8932)
!8934 = !DILocation(line: 110, column: 15, scope: !8932)
!8935 = !DILocation(line: 110, column: 13, scope: !8932)
!8936 = !DILocation(line: 111, column: 7, scope: !8932)
!8937 = !DILocation(line: 112, column: 89, scope: !8938)
!8938 = distinct !DILexicalBlock(scope: !8926, file: !972, line: 111, column: 14)
!8939 = !DILocation(line: 112, column: 8, scope: !8938)
!8940 = !DILocation(line: 113, column: 14, scope: !8938)
!8941 = !DILocation(line: 114, column: 8, scope: !8938)
!8942 = !DILocation(line: 116, column: 6, scope: !8927)
!8943 = !DILocation(line: 117, column: 87, scope: !8944)
!8944 = distinct !DILexicalBlock(scope: !8920, file: !972, line: 116, column: 13)
!8945 = !DILocation(line: 117, column: 101, scope: !8944)
!8946 = !DILocation(line: 117, column: 96, scope: !8944)
!8947 = !DILocation(line: 117, column: 7, scope: !8944)
!8948 = !DILocation(line: 118, column: 13, scope: !8944)
!8949 = !DILocation(line: 119, column: 7, scope: !8944)
!8950 = !DILocation(line: 121, column: 5, scope: !8921)
!8951 = !DILocation(line: 122, column: 14, scope: !8909)
!8952 = !DILocation(line: 122, column: 23, scope: !8909)
!8953 = !DILocation(line: 122, column: 5, scope: !8909)
!8954 = !DILocation(line: 124, column: 3, scope: !8896)
!8955 = !DILocation(line: 124, column: 23, scope: !8956)
!8956 = !DILexicalBlockFile(scope: !8957, file: !972, discriminator: 1)
!8957 = distinct !DILexicalBlock(scope: !8891, file: !972, line: 124, column: 14)
!8958 = !DILocation(line: 124, column: 15, scope: !8956)
!8959 = !DILocation(line: 124, column: 14, scope: !8956)
!8960 = !DILocation(line: 125, column: 8, scope: !8961)
!8961 = distinct !DILexicalBlock(scope: !8962, file: !972, line: 125, column: 8)
!8962 = distinct !DILexicalBlock(scope: !8957, file: !972, line: 124, column: 43)
!8963 = !DILocation(line: 125, column: 15, scope: !8961)
!8964 = !DILocation(line: 125, column: 8, scope: !8962)
!8965 = !DILocation(line: 126, column: 70, scope: !8966)
!8966 = distinct !DILexicalBlock(scope: !8961, file: !972, line: 125, column: 21)
!8967 = !DILocation(line: 126, column: 5, scope: !8966)
!8968 = !DILocation(line: 127, column: 11, scope: !8966)
!8969 = !DILocation(line: 128, column: 4, scope: !8966)
!8970 = !DILocation(line: 129, column: 32, scope: !8971)
!8971 = distinct !DILexicalBlock(scope: !8961, file: !972, line: 128, column: 11)
!8972 = !DILocation(line: 129, column: 5, scope: !8971)
!8973 = !DILocation(line: 131, column: 3, scope: !8962)
!8974 = !DILocation(line: 131, column: 23, scope: !8975)
!8975 = !DILexicalBlockFile(scope: !8976, file: !972, discriminator: 1)
!8976 = distinct !DILexicalBlock(scope: !8957, file: !972, line: 131, column: 14)
!8977 = !DILocation(line: 131, column: 15, scope: !8975)
!8978 = !DILocation(line: 131, column: 14, scope: !8975)
!8979 = !DILocation(line: 132, column: 8, scope: !8980)
!8980 = distinct !DILexicalBlock(scope: !8981, file: !972, line: 132, column: 8)
!8981 = distinct !DILexicalBlock(scope: !8976, file: !972, line: 131, column: 42)
!8982 = !DILocation(line: 132, column: 15, scope: !8980)
!8983 = !DILocation(line: 132, column: 8, scope: !8981)
!8984 = !DILocation(line: 133, column: 69, scope: !8985)
!8985 = distinct !DILexicalBlock(scope: !8980, file: !972, line: 132, column: 21)
!8986 = !DILocation(line: 133, column: 5, scope: !8985)
!8987 = !DILocation(line: 134, column: 11, scope: !8985)
!8988 = !DILocation(line: 135, column: 4, scope: !8985)
!8989 = !DILocation(line: 142, column: 6, scope: !8990)
!8990 = distinct !DILexicalBlock(scope: !8980, file: !972, line: 135, column: 11)
!8991 = !DILocation(line: 144, column: 3, scope: !8981)
!8992 = !DILocation(line: 144, column: 23, scope: !8993)
!8993 = !DILexicalBlockFile(scope: !8994, file: !972, discriminator: 1)
!8994 = distinct !DILexicalBlock(scope: !8976, file: !972, line: 144, column: 14)
!8995 = !DILocation(line: 144, column: 15, scope: !8993)
!8996 = !DILocation(line: 144, column: 14, scope: !8993)
!8997 = !DILocation(line: 145, column: 8, scope: !8998)
!8998 = distinct !DILexicalBlock(scope: !8999, file: !972, line: 145, column: 8)
!8999 = distinct !DILexicalBlock(scope: !8994, file: !972, line: 144, column: 42)
!9000 = !DILocation(line: 145, column: 15, scope: !8998)
!9001 = !DILocation(line: 145, column: 8, scope: !8999)
!9002 = !DILocation(line: 146, column: 66, scope: !9003)
!9003 = distinct !DILexicalBlock(scope: !8998, file: !972, line: 145, column: 21)
!9004 = !DILocation(line: 146, column: 5, scope: !9003)
!9005 = !DILocation(line: 147, column: 11, scope: !9003)
!9006 = !DILocation(line: 148, column: 4, scope: !9003)
!9007 = !DILocation(line: 149, column: 29, scope: !9008)
!9008 = distinct !DILexicalBlock(scope: !8998, file: !972, line: 148, column: 11)
!9009 = !DILocation(line: 149, column: 24, scope: !9008)
!9010 = !DILocation(line: 149, column: 22, scope: !9008)
!9011 = !DILocation(line: 151, column: 3, scope: !8999)
!9012 = !DILocation(line: 151, column: 23, scope: !9013)
!9013 = !DILexicalBlockFile(scope: !9014, file: !972, discriminator: 1)
!9014 = distinct !DILexicalBlock(scope: !8994, file: !972, line: 151, column: 14)
!9015 = !DILocation(line: 151, column: 15, scope: !9013)
!9016 = !DILocation(line: 151, column: 14, scope: !9013)
!9017 = !DILocation(line: 152, column: 8, scope: !9018)
!9018 = distinct !DILexicalBlock(scope: !9019, file: !972, line: 152, column: 8)
!9019 = distinct !DILexicalBlock(scope: !9014, file: !972, line: 151, column: 44)
!9020 = !DILocation(line: 152, column: 15, scope: !9018)
!9021 = !DILocation(line: 152, column: 8, scope: !9019)
!9022 = !DILocation(line: 153, column: 69, scope: !9023)
!9023 = distinct !DILexicalBlock(scope: !9018, file: !972, line: 152, column: 21)
!9024 = !DILocation(line: 153, column: 5, scope: !9023)
!9025 = !DILocation(line: 154, column: 11, scope: !9023)
!9026 = !DILocation(line: 155, column: 4, scope: !9023)
!9027 = !DILocation(line: 156, column: 24, scope: !9028)
!9028 = distinct !DILexicalBlock(scope: !9018, file: !972, line: 155, column: 11)
!9029 = !DILocation(line: 156, column: 17, scope: !9028)
!9030 = !DILocation(line: 156, column: 15, scope: !9028)
!9031 = !DILocation(line: 158, column: 3, scope: !9019)
!9032 = !DILocation(line: 158, column: 23, scope: !9033)
!9033 = !DILexicalBlockFile(scope: !9034, file: !972, discriminator: 1)
!9034 = distinct !DILexicalBlock(scope: !9014, file: !972, line: 158, column: 14)
!9035 = !DILocation(line: 158, column: 15, scope: !9033)
!9036 = !DILocation(line: 158, column: 14, scope: !9033)
!9037 = !DILocalVariable(name: "i", scope: !9038, file: !972, line: 159, type: !33)
!9038 = distinct !DILexicalBlock(scope: !9034, file: !972, line: 158, column: 47)
!9039 = !DILocation(line: 159, column: 8, scope: !9038)
!9040 = !DILocation(line: 161, column: 8, scope: !9041)
!9041 = distinct !DILexicalBlock(scope: !9038, file: !972, line: 161, column: 8)
!9042 = !DILocation(line: 161, column: 15, scope: !9041)
!9043 = !DILocation(line: 161, column: 8, scope: !9038)
!9044 = !DILocation(line: 162, column: 77, scope: !9045)
!9045 = distinct !DILexicalBlock(scope: !9041, file: !972, line: 161, column: 20)
!9046 = !DILocation(line: 162, column: 5, scope: !9045)
!9047 = !DILocation(line: 163, column: 11, scope: !9045)
!9048 = !DILocation(line: 164, column: 4, scope: !9045)
!9049 = !DILocation(line: 166, column: 11, scope: !9050)
!9050 = distinct !DILexicalBlock(scope: !9038, file: !972, line: 166, column: 4)
!9051 = !DILocation(line: 166, column: 9, scope: !9050)
!9052 = !DILocation(line: 166, column: 25, scope: !9053)
!9053 = !DILexicalBlockFile(scope: !9054, file: !972, discriminator: 1)
!9054 = distinct !DILexicalBlock(scope: !9050, file: !972, line: 166, column: 4)
!9055 = !DILocation(line: 166, column: 16, scope: !9053)
!9056 = !DILocation(line: 166, column: 28, scope: !9053)
!9057 = !DILocation(line: 166, column: 31, scope: !9058)
!9058 = !DILexicalBlockFile(scope: !9054, file: !972, discriminator: 2)
!9059 = !DILocation(line: 166, column: 33, scope: !9058)
!9060 = !DILocation(line: 166, column: 4, scope: !9061)
!9061 = !DILexicalBlockFile(scope: !9050, file: !972, discriminator: 3)
!9062 = !DILocation(line: 167, column: 25, scope: !9063)
!9063 = distinct !DILexicalBlock(scope: !9054, file: !972, line: 166, column: 55)
!9064 = !DILocation(line: 166, column: 51, scope: !9065)
!9065 = !DILexicalBlockFile(scope: !9054, file: !972, discriminator: 4)
!9066 = !DILocation(line: 166, column: 4, scope: !9065)
!9067 = !DILocation(line: 169, column: 9, scope: !9068)
!9068 = distinct !DILexicalBlock(scope: !9038, file: !972, line: 169, column: 9)
!9069 = !DILocation(line: 169, column: 13, scope: !9068)
!9070 = !DILocation(line: 169, column: 11, scope: !9068)
!9071 = !DILocation(line: 169, column: 19, scope: !9068)
!9072 = !DILocation(line: 169, column: 22, scope: !9068)
!9073 = !DILocation(line: 169, column: 9, scope: !9038)
!9074 = !DILocation(line: 170, column: 67, scope: !9075)
!9075 = distinct !DILexicalBlock(scope: !9068, file: !972, line: 169, column: 39)
!9076 = !DILocation(line: 170, column: 5, scope: !9075)
!9077 = !DILocation(line: 171, column: 11, scope: !9075)
!9078 = !DILocation(line: 172, column: 4, scope: !9075)
!9079 = !DILocation(line: 173, column: 77, scope: !9080)
!9080 = distinct !DILexicalBlock(scope: !9068, file: !972, line: 172, column: 11)
!9081 = !DILocation(line: 173, column: 86, scope: !9080)
!9082 = !DILocation(line: 173, column: 92, scope: !9080)
!9083 = !DILocation(line: 173, column: 5, scope: !9080)
!9084 = !DILocation(line: 175, column: 14, scope: !9080)
!9085 = !DILocation(line: 175, column: 24, scope: !9080)
!9086 = !DILocation(line: 175, column: 16, scope: !9080)
!9087 = !DILocation(line: 175, column: 5, scope: !9080)
!9088 = !DILocation(line: 175, column: 28, scope: !9080)
!9089 = !DILocation(line: 176, column: 5, scope: !9080)
!9090 = !DILocation(line: 176, column: 12, scope: !9091)
!9091 = !DILexicalBlockFile(scope: !9080, file: !972, discriminator: 1)
!9092 = !DILocation(line: 176, column: 5, scope: !9091)
!9093 = !DILocation(line: 177, column: 23, scope: !9094)
!9094 = distinct !DILexicalBlock(scope: !9095, file: !972, line: 177, column: 10)
!9095 = distinct !DILexicalBlock(scope: !9080, file: !972, line: 176, column: 20)
!9096 = !DILocation(line: 177, column: 18, scope: !9094)
!9097 = !DILocation(line: 177, column: 11, scope: !9094)
!9098 = !DILocation(line: 177, column: 10, scope: !9095)
!9099 = !DILocation(line: 179, column: 19, scope: !9100)
!9100 = distinct !DILexicalBlock(scope: !9094, file: !972, line: 177, column: 38)
!9101 = !DILocation(line: 180, column: 18, scope: !9100)
!9102 = !DILocation(line: 181, column: 7, scope: !9100)
!9103 = !DILocation(line: 183, column: 41, scope: !9095)
!9104 = !DILocation(line: 183, column: 36, scope: !9095)
!9105 = !DILocation(line: 183, column: 29, scope: !9095)
!9106 = !DILocation(line: 183, column: 15, scope: !9095)
!9107 = !DILocation(line: 183, column: 17, scope: !9095)
!9108 = !DILocation(line: 183, column: 16, scope: !9095)
!9109 = !DILocation(line: 183, column: 23, scope: !9095)
!9110 = !DILocation(line: 183, column: 6, scope: !9095)
!9111 = !DILocation(line: 183, column: 27, scope: !9095)
!9112 = !DILocation(line: 184, column: 12, scope: !9095)
!9113 = !DILocation(line: 176, column: 5, scope: !9114)
!9114 = !DILexicalBlockFile(scope: !9080, file: !972, discriminator: 2)
!9115 = !DILocation(line: 186, column: 9, scope: !9116)
!9116 = distinct !DILexicalBlock(scope: !9080, file: !972, line: 186, column: 9)
!9117 = !DILocation(line: 186, column: 9, scope: !9080)
!9118 = !DILocation(line: 187, column: 17, scope: !9116)
!9119 = !DILocation(line: 187, column: 6, scope: !9116)
!9120 = !DILocation(line: 189, column: 3, scope: !9038)
!9121 = !DILocation(line: 189, column: 23, scope: !9122)
!9122 = !DILexicalBlockFile(scope: !9123, file: !972, discriminator: 1)
!9123 = distinct !DILexicalBlock(scope: !9034, file: !972, line: 189, column: 14)
!9124 = !DILocation(line: 189, column: 15, scope: !9122)
!9125 = !DILocation(line: 189, column: 14, scope: !9122)
!9126 = !DILocation(line: 190, column: 8, scope: !9127)
!9127 = distinct !DILexicalBlock(scope: !9128, file: !972, line: 190, column: 8)
!9128 = distinct !DILexicalBlock(scope: !9123, file: !972, line: 189, column: 41)
!9129 = !DILocation(line: 190, column: 15, scope: !9127)
!9130 = !DILocation(line: 190, column: 8, scope: !9128)
!9131 = !DILocation(line: 191, column: 65, scope: !9132)
!9132 = distinct !DILexicalBlock(scope: !9127, file: !972, line: 190, column: 21)
!9133 = !DILocation(line: 191, column: 5, scope: !9132)
!9134 = !DILocation(line: 192, column: 11, scope: !9132)
!9135 = !DILocation(line: 193, column: 4, scope: !9132)
!9136 = !DILocation(line: 194, column: 19, scope: !9137)
!9137 = distinct !DILexicalBlock(scope: !9127, file: !972, line: 193, column: 11)
!9138 = !DILocation(line: 194, column: 14, scope: !9137)
!9139 = !DILocation(line: 194, column: 12, scope: !9137)
!9140 = !DILocation(line: 196, column: 3, scope: !9128)
!9141 = !DILocation(line: 198, column: 20, scope: !9142)
!9142 = distinct !DILexicalBlock(scope: !9123, file: !972, line: 198, column: 12)
!9143 = !DILocation(line: 198, column: 13, scope: !9142)
!9144 = !DILocation(line: 198, column: 12, scope: !9123)
!9145 = !DILocation(line: 199, column: 8, scope: !9146)
!9146 = distinct !DILexicalBlock(scope: !9147, file: !972, line: 199, column: 8)
!9147 = distinct !DILexicalBlock(scope: !9142, file: !972, line: 198, column: 40)
!9148 = !DILocation(line: 199, column: 15, scope: !9146)
!9149 = !DILocation(line: 199, column: 8, scope: !9147)
!9150 = !DILocation(line: 200, column: 76, scope: !9151)
!9151 = distinct !DILexicalBlock(scope: !9146, file: !972, line: 199, column: 21)
!9152 = !DILocation(line: 200, column: 5, scope: !9151)
!9153 = !DILocation(line: 201, column: 11, scope: !9151)
!9154 = !DILocation(line: 202, column: 4, scope: !9151)
!9155 = !DILocation(line: 203, column: 26, scope: !9156)
!9156 = distinct !DILexicalBlock(scope: !9157, file: !972, line: 203, column: 9)
!9157 = distinct !DILexicalBlock(scope: !9146, file: !972, line: 202, column: 11)
!9158 = !DILocation(line: 203, column: 35, scope: !9156)
!9159 = !DILocation(line: 203, column: 49, scope: !9156)
!9160 = !DILocation(line: 203, column: 44, scope: !9156)
!9161 = !DILocation(line: 203, column: 9, scope: !9162)
!9162 = !DILexicalBlockFile(scope: !9156, file: !972, discriminator: 1)
!9163 = !DILocation(line: 203, column: 9, scope: !9156)
!9164 = !DILocation(line: 203, column: 9, scope: !9157)
!9165 = !DILocation(line: 205, column: 9, scope: !9166)
!9166 = distinct !DILexicalBlock(scope: !9156, file: !972, line: 203, column: 60)
!9167 = !DILocation(line: 205, column: 26, scope: !9166)
!9168 = !DILocation(line: 205, column: 35, scope: !9166)
!9169 = !DILocation(line: 205, column: 44, scope: !9166)
!9170 = !DILocation(line: 204, column: 6, scope: !9166)
!9171 = !DILocation(line: 206, column: 12, scope: !9166)
!9172 = !DILocation(line: 207, column: 5, scope: !9166)
!9173 = !DILocation(line: 209, column: 9, scope: !9174)
!9174 = distinct !DILexicalBlock(scope: !9156, file: !972, line: 207, column: 12)
!9175 = !DILocation(line: 209, column: 26, scope: !9174)
!9176 = !DILocation(line: 209, column: 35, scope: !9174)
!9177 = !DILocation(line: 209, column: 49, scope: !9174)
!9178 = !DILocation(line: 209, column: 44, scope: !9174)
!9179 = !DILocation(line: 208, column: 6, scope: !9174)
!9180 = !DILocation(line: 212, column: 3, scope: !9147)
!9181 = !DILocation(line: 226, column: 5, scope: !9182)
!9182 = distinct !DILexicalBlock(scope: !9142, file: !972, line: 224, column: 8)
!9183 = !DILocation(line: 226, column: 14, scope: !9182)
!9184 = !DILocation(line: 225, column: 4, scope: !9182)
!9185 = !DILocation(line: 227, column: 10, scope: !9182)
!9186 = !DILocation(line: 229, column: 2, scope: !8773)
!9187 = !DILocation(line: 58, column: 26, scope: !9188)
!9188 = !DILexicalBlockFile(scope: !8768, file: !972, discriminator: 2)
!9189 = !DILocation(line: 58, column: 2, scope: !9188)
!9190 = !DILocation(line: 233, column: 6, scope: !9191)
!9191 = distinct !DILexicalBlock(scope: !975, file: !972, line: 233, column: 6)
!9192 = !DILocation(line: 233, column: 6, scope: !975)
!9193 = !DILocation(line: 234, column: 67, scope: !9194)
!9194 = distinct !DILexicalBlock(scope: !9191, file: !972, line: 233, column: 14)
!9195 = !DILocation(line: 234, column: 6, scope: !9194)
!9196 = !DILocation(line: 235, column: 6, scope: !9194)
!9197 = !DILocation(line: 238, column: 6, scope: !9191)
!9198 = !DILocation(line: 240, column: 2, scope: !975)
!9199 = !DILocation(line: 241, column: 1, scope: !975)
!9200 = !DILocalVariable(name: "cont", arg: 1, scope: !992, file: !984, line: 16, type: !995)
!9201 = !DILocation(line: 16, column: 40, scope: !992)
!9202 = !DILocalVariable(name: "fn", scope: !992, file: !984, line: 17, type: !4)
!9203 = !DILocation(line: 17, column: 14, scope: !992)
!9204 = !DILocalVariable(name: "sa", scope: !992, file: !984, line: 18, type: !986)
!9205 = !DILocation(line: 18, column: 19, scope: !992)
!9206 = !DILocalVariable(name: "on", scope: !992, file: !984, line: 19, type: !6824)
!9207 = !DILocation(line: 19, column: 12, scope: !992)
!9208 = !DILocalVariable(name: "sock", scope: !992, file: !984, line: 20, type: !33)
!9209 = !DILocation(line: 20, column: 6, scope: !992)
!9210 = !DILocalVariable(name: "timeout", scope: !992, file: !984, line: 20, type: !33)
!9211 = !DILocation(line: 20, column: 12, scope: !992)
!9212 = !DILocation(line: 22, column: 34, scope: !992)
!9213 = !DILocation(line: 22, column: 2, scope: !992)
!9214 = !DILocation(line: 24, column: 2, scope: !992)
!9215 = !DILocation(line: 24, column: 8, scope: !992)
!9216 = !DILocation(line: 24, column: 16, scope: !992)
!9217 = !DILocation(line: 25, column: 2, scope: !992)
!9218 = !DILocation(line: 25, column: 8, scope: !992)
!9219 = !DILocation(line: 25, column: 14, scope: !992)
!9220 = !DILocation(line: 31, column: 10, scope: !992)
!9221 = !DILocation(line: 37, column: 27, scope: !992)
!9222 = !DILocation(line: 37, column: 33, scope: !992)
!9223 = !DILocation(line: 37, column: 45, scope: !992)
!9224 = !DILocation(line: 37, column: 7, scope: !992)
!9225 = !DILocation(line: 37, column: 5, scope: !992)
!9226 = !DILocation(line: 38, column: 17, scope: !992)
!9227 = !DILocation(line: 38, column: 21, scope: !992)
!9228 = !DILocation(line: 38, column: 9, scope: !992)
!9229 = !DILocation(line: 38, column: 7, scope: !992)
!9230 = !DILocation(line: 41, column: 6, scope: !9231)
!9231 = distinct !DILexicalBlock(scope: !992, file: !984, line: 41, column: 6)
!9232 = !DILocation(line: 41, column: 11, scope: !9231)
!9233 = !DILocation(line: 41, column: 17, scope: !9231)
!9234 = !DILocation(line: 41, column: 27, scope: !9235)
!9235 = !DILexicalBlockFile(scope: !9231, file: !984, discriminator: 1)
!9236 = !DILocation(line: 41, column: 42, scope: !9235)
!9237 = !DILocation(line: 41, column: 20, scope: !9235)
!9238 = !DILocation(line: 41, column: 56, scope: !9235)
!9239 = !DILocation(line: 41, column: 6, scope: !9235)
!9240 = !DILocation(line: 42, column: 53, scope: !9241)
!9241 = distinct !DILexicalBlock(scope: !9231, file: !984, line: 41, column: 63)
!9242 = !DILocation(line: 42, column: 3, scope: !9241)
!9243 = !DILocation(line: 44, column: 26, scope: !9241)
!9244 = !DILocation(line: 44, column: 11, scope: !9241)
!9245 = !DILocation(line: 44, column: 3, scope: !9241)
!9246 = !DILocation(line: 48, column: 16, scope: !9247)
!9247 = distinct !DILexicalBlock(scope: !992, file: !984, line: 48, column: 6)
!9248 = !DILocation(line: 48, column: 22, scope: !9247)
!9249 = !DILocation(line: 48, column: 26, scope: !9247)
!9250 = !DILocation(line: 48, column: 26, scope: !9251)
!9251 = !DILexicalBlockFile(scope: !9247, file: !984, discriminator: 1)
!9252 = !DILocation(line: 48, column: 26, scope: !9253)
!9253 = !DILexicalBlockFile(scope: !9247, file: !984, discriminator: 2)
!9254 = !DILocation(line: 48, column: 26, scope: !9255)
!9255 = !DILexicalBlockFile(scope: !9247, file: !984, discriminator: 3)
!9256 = !DILocation(line: 48, column: 7, scope: !9255)
!9257 = !DILocation(line: 48, column: 48, scope: !9255)
!9258 = !DILocation(line: 48, column: 51, scope: !9259)
!9259 = !DILexicalBlockFile(scope: !9247, file: !984, discriminator: 4)
!9260 = !DILocation(line: 48, column: 57, scope: !9259)
!9261 = !DILocation(line: 48, column: 6, scope: !9259)
!9262 = !DILocation(line: 49, column: 21, scope: !9263)
!9263 = distinct !DILexicalBlock(scope: !9247, file: !984, line: 48, column: 73)
!9264 = !DILocation(line: 49, column: 3, scope: !9263)
!9265 = !DILocation(line: 49, column: 9, scope: !9263)
!9266 = !DILocation(line: 49, column: 19, scope: !9263)
!9267 = !DILocation(line: 50, column: 13, scope: !9263)
!9268 = !DILocation(line: 50, column: 19, scope: !9263)
!9269 = !DILocation(line: 50, column: 11, scope: !9263)
!9270 = !DILocation(line: 52, column: 28, scope: !9271)
!9271 = distinct !DILexicalBlock(scope: !9263, file: !984, line: 52, column: 7)
!9272 = !DILocation(line: 52, column: 34, scope: !9271)
!9273 = !DILocation(line: 52, column: 7, scope: !9271)
!9274 = !DILocation(line: 52, column: 40, scope: !9271)
!9275 = !DILocation(line: 52, column: 7, scope: !9263)
!9276 = !DILocation(line: 53, column: 27, scope: !9271)
!9277 = !DILocation(line: 53, column: 12, scope: !9271)
!9278 = !DILocation(line: 53, column: 4, scope: !9271)
!9279 = !DILocation(line: 54, column: 2, scope: !9263)
!9280 = !DILocation(line: 55, column: 49, scope: !9281)
!9281 = distinct !DILexicalBlock(scope: !9247, file: !984, line: 54, column: 9)
!9282 = !DILocation(line: 55, column: 3, scope: !9281)
!9283 = !DILocation(line: 56, column: 25, scope: !9281)
!9284 = !DILocation(line: 59, column: 32, scope: !9285)
!9285 = distinct !DILexicalBlock(scope: !992, file: !984, line: 59, column: 6)
!9286 = !DILocation(line: 59, column: 38, scope: !9285)
!9287 = !DILocation(line: 59, column: 6, scope: !9285)
!9288 = !DILocation(line: 59, column: 47, scope: !9285)
!9289 = !DILocation(line: 59, column: 6, scope: !992)
!9290 = !DILocation(line: 60, column: 26, scope: !9285)
!9291 = !DILocation(line: 60, column: 11, scope: !9285)
!9292 = !DILocation(line: 60, column: 3, scope: !9285)
!9293 = !DILocation(line: 63, column: 4, scope: !992)
!9294 = !DILocation(line: 63, column: 8, scope: !992)
!9295 = !DILocation(line: 63, column: 14, scope: !992)
!9296 = !DILocation(line: 62, column: 2, scope: !992)
!9297 = !DILocation(line: 65, column: 2, scope: !992)
!9298 = !DILocation(line: 66, column: 1, scope: !992)
!9299 = !DILocalVariable(name: "cont", arg: 1, scope: !1073, file: !984, line: 68, type: !1076)
!9300 = !DILocation(line: 68, column: 48, scope: !1073)
!9301 = !DILocalVariable(name: "fn", scope: !1073, file: !984, line: 69, type: !19)
!9302 = !DILocation(line: 69, column: 8, scope: !1073)
!9303 = !DILocalVariable(name: "errlen", scope: !1073, file: !984, line: 70, type: !7755)
!9304 = !DILocation(line: 70, column: 12, scope: !1073)
!9305 = !DILocalVariable(name: "sockerr", scope: !1073, file: !984, line: 71, type: !33)
!9306 = !DILocation(line: 71, column: 6, scope: !1073)
!9307 = !DILocation(line: 73, column: 34, scope: !1073)
!9308 = !DILocation(line: 73, column: 2, scope: !1073)
!9309 = !DILocation(line: 76, column: 6, scope: !9310)
!9310 = distinct !DILexicalBlock(scope: !1073, file: !984, line: 76, column: 6)
!9311 = !DILocation(line: 76, column: 12, scope: !9310)
!9312 = !DILocation(line: 76, column: 6, scope: !1073)
!9313 = !DILocation(line: 77, column: 3, scope: !9310)
!9314 = !DILocation(line: 77, column: 9, scope: !9310)
!9315 = !DILocation(line: 77, column: 15, scope: !9310)
!9316 = !DILocation(line: 77, column: 23, scope: !9310)
!9317 = !DILocation(line: 80, column: 32, scope: !9318)
!9318 = distinct !DILexicalBlock(scope: !1073, file: !984, line: 80, column: 6)
!9319 = !DILocation(line: 80, column: 38, scope: !9318)
!9320 = !DILocation(line: 80, column: 44, scope: !9318)
!9321 = !DILocation(line: 80, column: 6, scope: !9318)
!9322 = !DILocation(line: 80, column: 6, scope: !1073)
!9323 = !DILocation(line: 81, column: 26, scope: !9318)
!9324 = !DILocation(line: 81, column: 11, scope: !9318)
!9325 = !DILocation(line: 81, column: 3, scope: !9318)
!9326 = !DILocation(line: 84, column: 9, scope: !1073)
!9327 = !DILocation(line: 85, column: 18, scope: !9328)
!9328 = distinct !DILexicalBlock(scope: !1073, file: !984, line: 85, column: 6)
!9329 = !DILocation(line: 85, column: 24, scope: !9328)
!9330 = !DILocation(line: 86, column: 4, scope: !9328)
!9331 = !DILocation(line: 85, column: 6, scope: !9328)
!9332 = !DILocation(line: 85, column: 6, scope: !1073)
!9333 = !DILocation(line: 87, column: 26, scope: !9328)
!9334 = !DILocation(line: 87, column: 11, scope: !9328)
!9335 = !DILocation(line: 87, column: 3, scope: !9328)
!9336 = !DILocation(line: 89, column: 10, scope: !1073)
!9337 = !DILocation(line: 89, column: 2, scope: !1073)
!9338 = !DILocation(line: 91, column: 51, scope: !9339)
!9339 = distinct !DILexicalBlock(scope: !1073, file: !984, line: 89, column: 19)
!9340 = !DILocation(line: 91, column: 3, scope: !9339)
!9341 = !DILocation(line: 93, column: 3, scope: !9339)
!9342 = !DILocation(line: 93, column: 9, scope: !9339)
!9343 = !DILocation(line: 93, column: 17, scope: !9339)
!9344 = !DILocation(line: 94, column: 3, scope: !9339)
!9345 = !DILocation(line: 94, column: 9, scope: !9339)
!9346 = !DILocation(line: 94, column: 15, scope: !9339)
!9347 = !DILocation(line: 100, column: 3, scope: !9339)
!9348 = !DILocation(line: 100, column: 9, scope: !9339)
!9349 = !DILocation(line: 100, column: 12, scope: !9339)
!9350 = !DILocation(line: 101, column: 3, scope: !9339)
!9351 = !DILocation(line: 103, column: 61, scope: !9339)
!9352 = !DILocation(line: 103, column: 3, scope: !9339)
!9353 = !DILocation(line: 104, column: 41, scope: !9339)
!9354 = !DILocation(line: 104, column: 10, scope: !9339)
!9355 = !DILocation(line: 104, column: 3, scope: !9339)
!9356 = !DILocation(line: 106, column: 3, scope: !9339)
!9357 = !DILocation(line: 107, column: 41, scope: !9339)
!9358 = !DILocation(line: 107, column: 10, scope: !9339)
!9359 = !DILocation(line: 107, column: 3, scope: !9339)
!9360 = !DILocation(line: 109, column: 3, scope: !9339)
!9361 = !DILocation(line: 110, column: 41, scope: !9339)
!9362 = !DILocation(line: 110, column: 10, scope: !9339)
!9363 = !DILocation(line: 110, column: 3, scope: !9339)
!9364 = !DILocation(line: 116, column: 26, scope: !9339)
!9365 = !DILocation(line: 116, column: 11, scope: !9339)
!9366 = !DILocation(line: 116, column: 3, scope: !9339)
!9367 = !DILocation(line: 118, column: 1, scope: !1073)
!9368 = !DILocalVariable(name: "cont", arg: 1, scope: !1079, file: !984, line: 186, type: !1076)
!9369 = !DILocation(line: 186, column: 43, scope: !1079)
!9370 = !DILocalVariable(name: "fn", scope: !1079, file: !984, line: 187, type: !19)
!9371 = !DILocation(line: 187, column: 15, scope: !1079)
!9372 = !DILocation(line: 189, column: 34, scope: !1079)
!9373 = !DILocation(line: 189, column: 2, scope: !1079)
!9374 = !DILocation(line: 192, column: 6, scope: !9375)
!9375 = distinct !DILexicalBlock(scope: !1079, file: !984, line: 192, column: 6)
!9376 = !DILocation(line: 192, column: 12, scope: !9375)
!9377 = !DILocation(line: 192, column: 6, scope: !1079)
!9378 = !DILocation(line: 193, column: 3, scope: !9375)
!9379 = !DILocation(line: 193, column: 9, scope: !9375)
!9380 = !DILocation(line: 193, column: 15, scope: !9375)
!9381 = !DILocation(line: 193, column: 23, scope: !9375)
!9382 = !DILocation(line: 195, column: 33, scope: !9383)
!9383 = distinct !DILexicalBlock(scope: !1079, file: !984, line: 195, column: 6)
!9384 = !DILocation(line: 195, column: 39, scope: !9383)
!9385 = !DILocation(line: 195, column: 45, scope: !9383)
!9386 = !DILocation(line: 195, column: 7, scope: !9383)
!9387 = !DILocation(line: 195, column: 6, scope: !1079)
!9388 = !DILocation(line: 196, column: 26, scope: !9389)
!9389 = distinct !DILexicalBlock(scope: !9383, file: !984, line: 195, column: 55)
!9390 = !DILocation(line: 196, column: 32, scope: !9389)
!9391 = !DILocation(line: 196, column: 38, scope: !9389)
!9392 = !DILocation(line: 196, column: 11, scope: !9389)
!9393 = !DILocation(line: 196, column: 3, scope: !9389)
!9394 = !DILocation(line: 198, column: 55, scope: !9395)
!9395 = distinct !DILexicalBlock(scope: !9389, file: !984, line: 196, column: 50)
!9396 = !DILocation(line: 198, column: 4, scope: !9395)
!9397 = !DILocation(line: 199, column: 4, scope: !9395)
!9398 = !DILocation(line: 201, column: 34, scope: !9399)
!9399 = distinct !DILexicalBlock(scope: !9395, file: !984, line: 201, column: 8)
!9400 = !DILocation(line: 201, column: 40, scope: !9399)
!9401 = !DILocation(line: 201, column: 51, scope: !9399)
!9402 = !DILocation(line: 201, column: 9, scope: !9399)
!9403 = !DILocation(line: 201, column: 8, scope: !9395)
!9404 = !DILocation(line: 203, column: 24, scope: !9405)
!9405 = distinct !DILexicalBlock(scope: !9399, file: !984, line: 201, column: 58)
!9406 = !DILocation(line: 203, column: 30, scope: !9405)
!9407 = !DILocation(line: 203, column: 5, scope: !9405)
!9408 = !DILocation(line: 206, column: 5, scope: !9405)
!9409 = !DILocation(line: 206, column: 11, scope: !9405)
!9410 = !DILocation(line: 206, column: 19, scope: !9405)
!9411 = !DILocation(line: 207, column: 5, scope: !9405)
!9412 = !DILocation(line: 207, column: 11, scope: !9405)
!9413 = !DILocation(line: 207, column: 17, scope: !9405)
!9414 = !DILocation(line: 210, column: 5, scope: !9405)
!9415 = !DILocation(line: 213, column: 4, scope: !9395)
!9416 = !DILocation(line: 216, column: 4, scope: !9395)
!9417 = !DILocation(line: 218, column: 2, scope: !9389)
!9418 = !DILocation(line: 220, column: 25, scope: !1079)
!9419 = !DILocation(line: 220, column: 10, scope: !1079)
!9420 = !DILocation(line: 220, column: 2, scope: !1079)
!9421 = !DILocation(line: 222, column: 1, scope: !1079)
!9422 = !DILocalVariable(name: "cont", arg: 1, scope: !1085, file: !984, line: 351, type: !1076)
!9423 = !DILocation(line: 351, column: 29, scope: !1085)
!9424 = !DILocalVariable(name: "sock", arg: 2, scope: !1085, file: !984, line: 351, type: !33)
!9425 = !DILocation(line: 351, column: 39, scope: !1085)
!9426 = !DILocalVariable(name: "fn", scope: !1085, file: !984, line: 352, type: !19)
!9427 = !DILocation(line: 352, column: 8, scope: !1085)
!9428 = !DILocalVariable(name: "lenbuf_nbo", scope: !1085, file: !984, line: 353, type: !48)
!9429 = !DILocation(line: 353, column: 11, scope: !1085)
!9430 = !DILocalVariable(name: "len", scope: !1085, file: !984, line: 354, type: !33)
!9431 = !DILocation(line: 354, column: 6, scope: !1085)
!9432 = !DILocation(line: 356, column: 7, scope: !9433)
!9433 = distinct !DILexicalBlock(scope: !1085, file: !984, line: 356, column: 6)
!9434 = !DILocation(line: 356, column: 13, scope: !9433)
!9435 = !DILocation(line: 356, column: 6, scope: !1085)
!9436 = !DILocation(line: 358, column: 23, scope: !9437)
!9437 = distinct !DILexicalBlock(scope: !9433, file: !984, line: 356, column: 17)
!9438 = !DILocation(line: 358, column: 29, scope: !9437)
!9439 = !DILocation(line: 358, column: 16, scope: !9437)
!9440 = !DILocation(line: 358, column: 14, scope: !9437)
!9441 = !DILocation(line: 359, column: 16, scope: !9437)
!9442 = !DILocation(line: 359, column: 22, scope: !9437)
!9443 = !DILocation(line: 359, column: 9, scope: !9437)
!9444 = !DILocation(line: 359, column: 7, scope: !9437)
!9445 = !DILocation(line: 360, column: 7, scope: !9446)
!9446 = distinct !DILexicalBlock(scope: !9437, file: !984, line: 360, column: 7)
!9447 = !DILocation(line: 360, column: 11, scope: !9446)
!9448 = !DILocation(line: 360, column: 7, scope: !9437)
!9449 = !DILocation(line: 361, column: 53, scope: !9450)
!9450 = distinct !DILexicalBlock(scope: !9446, file: !984, line: 360, column: 16)
!9451 = !DILocation(line: 361, column: 4, scope: !9450)
!9452 = !DILocation(line: 362, column: 4, scope: !9450)
!9453 = !DILocation(line: 364, column: 14, scope: !9437)
!9454 = !DILocation(line: 364, column: 20, scope: !9437)
!9455 = !DILocation(line: 364, column: 25, scope: !9437)
!9456 = !DILocation(line: 364, column: 3, scope: !9437)
!9457 = !DILocation(line: 364, column: 9, scope: !9437)
!9458 = !DILocation(line: 364, column: 12, scope: !9437)
!9459 = !DILocation(line: 365, column: 3, scope: !9437)
!9460 = !DILocation(line: 369, column: 15, scope: !1085)
!9461 = !DILocation(line: 369, column: 21, scope: !1085)
!9462 = !DILocation(line: 369, column: 27, scope: !1085)
!9463 = !DILocation(line: 370, column: 8, scope: !1085)
!9464 = !DILocation(line: 370, column: 14, scope: !1085)
!9465 = !DILocation(line: 370, column: 26, scope: !1085)
!9466 = !DILocation(line: 370, column: 32, scope: !1085)
!9467 = !DILocation(line: 370, column: 37, scope: !1085)
!9468 = !DILocation(line: 370, column: 43, scope: !1085)
!9469 = !DILocation(line: 370, column: 48, scope: !1085)
!9470 = !DILocation(line: 370, column: 35, scope: !1085)
!9471 = !DILocation(line: 370, column: 23, scope: !1085)
!9472 = !DILocation(line: 369, column: 8, scope: !1085)
!9473 = !DILocation(line: 369, column: 6, scope: !1085)
!9474 = !DILocation(line: 371, column: 6, scope: !9475)
!9475 = distinct !DILexicalBlock(scope: !1085, file: !984, line: 371, column: 6)
!9476 = !DILocation(line: 371, column: 10, scope: !9475)
!9477 = !DILocation(line: 371, column: 6, scope: !1085)
!9478 = !DILocation(line: 372, column: 45, scope: !9479)
!9479 = distinct !DILexicalBlock(scope: !9475, file: !984, line: 371, column: 15)
!9480 = !DILocation(line: 372, column: 3, scope: !9479)
!9481 = !DILocation(line: 373, column: 3, scope: !9479)
!9482 = !DILocation(line: 375, column: 14, scope: !1085)
!9483 = !DILocation(line: 375, column: 2, scope: !1085)
!9484 = !DILocation(line: 375, column: 8, scope: !1085)
!9485 = !DILocation(line: 375, column: 11, scope: !1085)
!9486 = !DILocation(line: 377, column: 6, scope: !9487)
!9487 = distinct !DILexicalBlock(scope: !1085, file: !984, line: 377, column: 6)
!9488 = !DILocation(line: 377, column: 12, scope: !9487)
!9489 = !DILocation(line: 377, column: 17, scope: !9487)
!9490 = !DILocation(line: 377, column: 23, scope: !9487)
!9491 = !DILocation(line: 377, column: 28, scope: !9487)
!9492 = !DILocation(line: 377, column: 32, scope: !9487)
!9493 = !DILocation(line: 377, column: 38, scope: !9487)
!9494 = !DILocation(line: 377, column: 30, scope: !9487)
!9495 = !DILocation(line: 377, column: 15, scope: !9487)
!9496 = !DILocation(line: 377, column: 6, scope: !1085)
!9497 = !DILocation(line: 378, column: 3, scope: !9487)
!9498 = !DILocation(line: 380, column: 3, scope: !9487)
!9499 = !DILocation(line: 384, column: 1, scope: !1085)
!9500 = !DILocalVariable(name: "cont", arg: 1, scope: !1081, file: !984, line: 229, type: !1076)
!9501 = !DILocation(line: 229, column: 43, scope: !1081)
!9502 = !DILocalVariable(name: "fn", scope: !1081, file: !984, line: 230, type: !19)
!9503 = !DILocation(line: 230, column: 8, scope: !1081)
!9504 = !DILocalVariable(name: "length_buf", scope: !1081, file: !984, line: 231, type: !48)
!9505 = !DILocation(line: 231, column: 11, scope: !1081)
!9506 = !DILocation(line: 233, column: 34, scope: !1081)
!9507 = !DILocation(line: 233, column: 2, scope: !1081)
!9508 = !DILocation(line: 236, column: 6, scope: !9509)
!9509 = distinct !DILexicalBlock(scope: !1081, file: !984, line: 236, column: 6)
!9510 = !DILocation(line: 236, column: 12, scope: !9509)
!9511 = !DILocation(line: 236, column: 6, scope: !1081)
!9512 = !DILocation(line: 237, column: 3, scope: !9509)
!9513 = !DILocation(line: 237, column: 9, scope: !9509)
!9514 = !DILocation(line: 237, column: 15, scope: !9509)
!9515 = !DILocation(line: 237, column: 23, scope: !9509)
!9516 = !DILocation(line: 239, column: 32, scope: !9517)
!9517 = distinct !DILexicalBlock(scope: !1081, file: !984, line: 239, column: 6)
!9518 = !DILocation(line: 239, column: 38, scope: !9517)
!9519 = !DILocation(line: 239, column: 44, scope: !9517)
!9520 = !DILocation(line: 239, column: 6, scope: !9517)
!9521 = !DILocation(line: 239, column: 53, scope: !9517)
!9522 = !DILocation(line: 239, column: 6, scope: !1081)
!9523 = !DILocation(line: 240, column: 26, scope: !9517)
!9524 = !DILocation(line: 240, column: 11, scope: !9517)
!9525 = !DILocation(line: 240, column: 3, scope: !9517)
!9526 = !DILocation(line: 243, column: 12, scope: !9527)
!9527 = distinct !DILexicalBlock(scope: !1081, file: !984, line: 243, column: 6)
!9528 = !DILocation(line: 243, column: 18, scope: !9527)
!9529 = !DILocation(line: 243, column: 29, scope: !9527)
!9530 = !DILocation(line: 243, column: 6, scope: !9527)
!9531 = !DILocation(line: 244, column: 6, scope: !9527)
!9532 = !DILocation(line: 243, column: 6, scope: !1081)
!9533 = !DILocation(line: 245, column: 3, scope: !9534)
!9534 = distinct !DILexicalBlock(scope: !9527, file: !984, line: 244, column: 27)
!9535 = !DILocation(line: 246, column: 26, scope: !9534)
!9536 = !DILocation(line: 246, column: 11, scope: !9534)
!9537 = !DILocation(line: 246, column: 3, scope: !9534)
!9538 = !DILocation(line: 248, column: 22, scope: !1081)
!9539 = !DILocation(line: 248, column: 15, scope: !1081)
!9540 = !DILocation(line: 248, column: 13, scope: !1081)
!9541 = !DILocation(line: 250, column: 45, scope: !1081)
!9542 = !DILocation(line: 250, column: 49, scope: !1081)
!9543 = !DILocation(line: 250, column: 2, scope: !1081)
!9544 = !DILocation(line: 252, column: 8, scope: !1081)
!9545 = !DILocation(line: 252, column: 14, scope: !1081)
!9546 = !DILocation(line: 252, column: 19, scope: !1081)
!9547 = !DILocation(line: 252, column: 2, scope: !1081)
!9548 = !DILocation(line: 253, column: 2, scope: !1081)
!9549 = !DILocation(line: 253, column: 8, scope: !1081)
!9550 = !DILocation(line: 253, column: 17, scope: !1081)
!9551 = !DILocation(line: 255, column: 25, scope: !1081)
!9552 = !DILocation(line: 255, column: 17, scope: !1081)
!9553 = !DILocation(line: 255, column: 2, scope: !1081)
!9554 = !DILocation(line: 255, column: 8, scope: !1081)
!9555 = !DILocation(line: 255, column: 13, scope: !1081)
!9556 = !DILocation(line: 255, column: 15, scope: !1081)
!9557 = !DILocation(line: 256, column: 7, scope: !9558)
!9558 = distinct !DILexicalBlock(scope: !1081, file: !984, line: 256, column: 6)
!9559 = !DILocation(line: 256, column: 13, scope: !9558)
!9560 = !DILocation(line: 256, column: 18, scope: !9558)
!9561 = !DILocation(line: 256, column: 6, scope: !1081)
!9562 = !DILocation(line: 257, column: 50, scope: !9563)
!9563 = distinct !DILexicalBlock(scope: !9558, file: !984, line: 256, column: 21)
!9564 = !DILocation(line: 257, column: 3, scope: !9563)
!9565 = !DILocation(line: 258, column: 26, scope: !9563)
!9566 = !DILocation(line: 258, column: 11, scope: !9563)
!9567 = !DILocation(line: 258, column: 3, scope: !9563)
!9568 = !DILocation(line: 260, column: 19, scope: !1081)
!9569 = !DILocation(line: 260, column: 2, scope: !1081)
!9570 = !DILocation(line: 260, column: 8, scope: !1081)
!9571 = !DILocation(line: 260, column: 17, scope: !1081)
!9572 = !DILocation(line: 261, column: 13, scope: !1081)
!9573 = !DILocation(line: 261, column: 19, scope: !1081)
!9574 = !DILocation(line: 261, column: 24, scope: !1081)
!9575 = !DILocation(line: 261, column: 2, scope: !1081)
!9576 = !DILocation(line: 261, column: 8, scope: !1081)
!9577 = !DILocation(line: 261, column: 11, scope: !1081)
!9578 = !DILocation(line: 264, column: 2, scope: !1081)
!9579 = !DILocation(line: 264, column: 8, scope: !1081)
!9580 = !DILocation(line: 264, column: 16, scope: !1081)
!9581 = !DILocation(line: 265, column: 2, scope: !1081)
!9582 = !DILocation(line: 265, column: 8, scope: !1081)
!9583 = !DILocation(line: 265, column: 14, scope: !1081)
!9584 = !DILocation(line: 266, column: 2, scope: !1081)
!9585 = !DILocation(line: 267, column: 1, scope: !1081)
!9586 = !DILocalVariable(name: "cont", arg: 1, scope: !1083, file: !984, line: 316, type: !1076)
!9587 = !DILocation(line: 316, column: 43, scope: !1083)
!9588 = !DILocalVariable(name: "fn", scope: !1083, file: !984, line: 317, type: !4)
!9589 = !DILocation(line: 317, column: 14, scope: !1083)
!9590 = !DILocation(line: 319, column: 34, scope: !1083)
!9591 = !DILocation(line: 319, column: 2, scope: !1083)
!9592 = !DILocation(line: 322, column: 6, scope: !9593)
!9593 = distinct !DILexicalBlock(scope: !1083, file: !984, line: 322, column: 6)
!9594 = !DILocation(line: 322, column: 12, scope: !9593)
!9595 = !DILocation(line: 322, column: 6, scope: !1083)
!9596 = !DILocation(line: 323, column: 3, scope: !9593)
!9597 = !DILocation(line: 323, column: 9, scope: !9593)
!9598 = !DILocation(line: 323, column: 15, scope: !9593)
!9599 = !DILocation(line: 323, column: 23, scope: !9593)
!9600 = !DILocation(line: 325, column: 33, scope: !9601)
!9601 = distinct !DILexicalBlock(scope: !1083, file: !984, line: 325, column: 6)
!9602 = !DILocation(line: 325, column: 39, scope: !9601)
!9603 = !DILocation(line: 325, column: 45, scope: !9601)
!9604 = !DILocation(line: 325, column: 7, scope: !9601)
!9605 = !DILocation(line: 325, column: 6, scope: !1083)
!9606 = !DILocalVariable(name: "len", scope: !9607, file: !984, line: 326, type: !33)
!9607 = distinct !DILexicalBlock(scope: !9601, file: !984, line: 325, column: 55)
!9608 = !DILocation(line: 326, column: 7, scope: !9607)
!9609 = !DILocation(line: 328, column: 15, scope: !9607)
!9610 = !DILocation(line: 328, column: 21, scope: !9607)
!9611 = !DILocation(line: 328, column: 32, scope: !9607)
!9612 = !DILocation(line: 328, column: 38, scope: !9607)
!9613 = !DILocation(line: 329, column: 8, scope: !9607)
!9614 = !DILocation(line: 329, column: 14, scope: !9607)
!9615 = !DILocation(line: 329, column: 26, scope: !9607)
!9616 = !DILocation(line: 329, column: 32, scope: !9607)
!9617 = !DILocation(line: 329, column: 37, scope: !9607)
!9618 = !DILocation(line: 329, column: 43, scope: !9607)
!9619 = !DILocation(line: 329, column: 48, scope: !9607)
!9620 = !DILocation(line: 329, column: 35, scope: !9607)
!9621 = !DILocation(line: 329, column: 23, scope: !9607)
!9622 = !DILocation(line: 328, column: 9, scope: !9607)
!9623 = !DILocation(line: 328, column: 7, scope: !9607)
!9624 = !DILocation(line: 331, column: 7, scope: !9625)
!9625 = distinct !DILexicalBlock(scope: !9607, file: !984, line: 331, column: 7)
!9626 = !DILocation(line: 331, column: 11, scope: !9625)
!9627 = !DILocation(line: 331, column: 7, scope: !9607)
!9628 = !DILocation(line: 332, column: 54, scope: !9625)
!9629 = !DILocation(line: 332, column: 4, scope: !9625)
!9630 = !DILocation(line: 334, column: 16, scope: !9631)
!9631 = distinct !DILexicalBlock(scope: !9625, file: !984, line: 333, column: 8)
!9632 = !DILocation(line: 334, column: 4, scope: !9631)
!9633 = !DILocation(line: 334, column: 10, scope: !9631)
!9634 = !DILocation(line: 334, column: 13, scope: !9631)
!9635 = !DILocation(line: 335, column: 8, scope: !9636)
!9636 = distinct !DILexicalBlock(scope: !9631, file: !984, line: 335, column: 8)
!9637 = !DILocation(line: 335, column: 14, scope: !9636)
!9638 = !DILocation(line: 335, column: 20, scope: !9636)
!9639 = !DILocation(line: 335, column: 26, scope: !9636)
!9640 = !DILocation(line: 335, column: 31, scope: !9636)
!9641 = !DILocation(line: 335, column: 35, scope: !9636)
!9642 = !DILocation(line: 335, column: 41, scope: !9636)
!9643 = !DILocation(line: 335, column: 33, scope: !9636)
!9644 = !DILocation(line: 335, column: 17, scope: !9636)
!9645 = !DILocation(line: 335, column: 8, scope: !9631)
!9646 = !DILocation(line: 336, column: 5, scope: !9636)
!9647 = !DILocation(line: 338, column: 28, scope: !9636)
!9648 = !DILocation(line: 338, column: 12, scope: !9636)
!9649 = !DILocation(line: 338, column: 5, scope: !9636)
!9650 = !DILocation(line: 340, column: 2, scope: !9607)
!9651 = !DILocation(line: 343, column: 25, scope: !1083)
!9652 = !DILocation(line: 343, column: 10, scope: !1083)
!9653 = !DILocation(line: 343, column: 2, scope: !1083)
!9654 = !DILocation(line: 344, column: 1, scope: !1083)
!9655 = !DILocalVariable(name: "cont", arg: 1, scope: !1084, file: !984, line: 346, type: !1076)
!9656 = !DILocation(line: 346, column: 41, scope: !1084)
!9657 = !DILocation(line: 347, column: 2, scope: !1084)
!9658 = !DILocation(line: 348, column: 25, scope: !1084)
!9659 = !DILocation(line: 348, column: 10, scope: !1084)
!9660 = !DILocation(line: 348, column: 2, scope: !1084)
!9661 = !DILocalVariable(name: "cont", arg: 1, scope: !1082, file: !984, line: 269, type: !1076)
!9662 = !DILocation(line: 269, column: 41, scope: !1082)
!9663 = !DILocalVariable(name: "fn", scope: !1082, file: !984, line: 270, type: !19)
!9664 = !DILocation(line: 270, column: 8, scope: !1082)
!9665 = !DILocation(line: 272, column: 2, scope: !1082)
!9666 = !DILocation(line: 275, column: 6, scope: !9667)
!9667 = distinct !DILexicalBlock(scope: !1082, file: !984, line: 275, column: 6)
!9668 = !DILocation(line: 275, column: 12, scope: !9667)
!9669 = !DILocation(line: 275, column: 19, scope: !9667)
!9670 = !DILocation(line: 275, column: 30, scope: !9667)
!9671 = !DILocation(line: 275, column: 33, scope: !9672)
!9672 = !DILexicalBlockFile(scope: !9667, file: !984, discriminator: 1)
!9673 = !DILocation(line: 275, column: 39, scope: !9672)
!9674 = !DILocation(line: 275, column: 46, scope: !9672)
!9675 = !DILocation(line: 275, column: 6, scope: !9672)
!9676 = !DILocation(line: 292, column: 3, scope: !9677)
!9677 = distinct !DILexicalBlock(scope: !9667, file: !984, line: 275, column: 56)
!9678 = !DILocation(line: 295, column: 17, scope: !9677)
!9679 = !DILocation(line: 295, column: 23, scope: !9677)
!9680 = !DILocation(line: 295, column: 3, scope: !9677)
!9681 = !DILocation(line: 296, column: 17, scope: !9677)
!9682 = !DILocation(line: 296, column: 23, scope: !9677)
!9683 = !DILocation(line: 296, column: 3, scope: !9677)
!9684 = !DILocation(line: 297, column: 17, scope: !9677)
!9685 = !DILocation(line: 297, column: 23, scope: !9677)
!9686 = !DILocation(line: 297, column: 3, scope: !9677)
!9687 = !DILocation(line: 298, column: 19, scope: !9677)
!9688 = !DILocation(line: 298, column: 3, scope: !9677)
!9689 = !DILocation(line: 298, column: 9, scope: !9677)
!9690 = !DILocation(line: 298, column: 17, scope: !9677)
!9691 = !DILocation(line: 299, column: 19, scope: !9677)
!9692 = !DILocation(line: 299, column: 3, scope: !9677)
!9693 = !DILocation(line: 299, column: 9, scope: !9677)
!9694 = !DILocation(line: 299, column: 17, scope: !9677)
!9695 = !DILocation(line: 300, column: 19, scope: !9677)
!9696 = !DILocation(line: 300, column: 3, scope: !9677)
!9697 = !DILocation(line: 300, column: 9, scope: !9677)
!9698 = !DILocation(line: 300, column: 17, scope: !9677)
!9699 = !DILocation(line: 301, column: 8, scope: !9700)
!9700 = distinct !DILexicalBlock(scope: !9677, file: !984, line: 301, column: 7)
!9701 = !DILocation(line: 301, column: 14, scope: !9700)
!9702 = !DILocation(line: 301, column: 22, scope: !9700)
!9703 = !DILocation(line: 301, column: 26, scope: !9704)
!9704 = !DILexicalBlockFile(scope: !9700, file: !984, discriminator: 1)
!9705 = !DILocation(line: 301, column: 32, scope: !9704)
!9706 = !DILocation(line: 301, column: 40, scope: !9704)
!9707 = !DILocation(line: 301, column: 44, scope: !9708)
!9708 = !DILexicalBlockFile(scope: !9700, file: !984, discriminator: 2)
!9709 = !DILocation(line: 301, column: 50, scope: !9708)
!9710 = !DILocation(line: 301, column: 7, scope: !9708)
!9711 = !DILocation(line: 302, column: 26, scope: !9700)
!9712 = !DILocation(line: 302, column: 11, scope: !9700)
!9713 = !DILocation(line: 302, column: 4, scope: !9700)
!9714 = !DILocation(line: 304, column: 7, scope: !9715)
!9715 = distinct !DILexicalBlock(scope: !9677, file: !984, line: 304, column: 7)
!9716 = !DILocation(line: 304, column: 13, scope: !9715)
!9717 = !DILocation(line: 304, column: 7, scope: !9677)
!9718 = !DILocation(line: 305, column: 53, scope: !9719)
!9719 = distinct !DILexicalBlock(scope: !9715, file: !984, line: 304, column: 21)
!9720 = !DILocation(line: 305, column: 4, scope: !9719)
!9721 = !DILocation(line: 306, column: 4, scope: !9719)
!9722 = !DILocation(line: 306, column: 10, scope: !9719)
!9723 = !DILocation(line: 306, column: 18, scope: !9719)
!9724 = !DILocation(line: 306, column: 27, scope: !9719)
!9725 = !DILocation(line: 306, column: 33, scope: !9719)
!9726 = !DILocation(line: 307, column: 3, scope: !9719)
!9727 = !DILocation(line: 310, column: 20, scope: !9677)
!9728 = !DILocation(line: 310, column: 3, scope: !9677)
!9729 = !DILocation(line: 311, column: 3, scope: !9677)
!9730 = !DILocation(line: 313, column: 25, scope: !1082)
!9731 = !DILocation(line: 313, column: 10, scope: !1082)
!9732 = !DILocation(line: 313, column: 2, scope: !1082)
!9733 = !DILocation(line: 314, column: 1, scope: !1082)
!9734 = !DILocalVariable(name: "cont", arg: 1, scope: !1080, file: !984, line: 224, type: !1076)
!9735 = !DILocation(line: 224, column: 41, scope: !1080)
!9736 = !DILocation(line: 225, column: 2, scope: !1080)
!9737 = !DILocation(line: 226, column: 25, scope: !1080)
!9738 = !DILocation(line: 226, column: 10, scope: !1080)
!9739 = !DILocation(line: 226, column: 2, scope: !1080)
!9740 = !DILocalVariable(name: "cont", arg: 1, scope: !1078, file: !984, line: 120, type: !1076)
!9741 = !DILocation(line: 120, column: 46, scope: !1078)
!9742 = !DILocalVariable(name: "fn", scope: !1078, file: !984, line: 121, type: !19)
!9743 = !DILocation(line: 121, column: 8, scope: !1078)
!9744 = !DILocalVariable(name: "sa", scope: !1078, file: !984, line: 122, type: !986)
!9745 = !DILocation(line: 122, column: 19, scope: !1078)
!9746 = !DILocalVariable(name: "on", scope: !1078, file: !984, line: 123, type: !6824)
!9747 = !DILocation(line: 123, column: 19, scope: !1078)
!9748 = !DILocalVariable(name: "sock", scope: !1078, file: !984, line: 124, type: !33)
!9749 = !DILocation(line: 124, column: 6, scope: !1078)
!9750 = !DILocalVariable(name: "timeout", scope: !1078, file: !984, line: 124, type: !33)
!9751 = !DILocation(line: 124, column: 12, scope: !1078)
!9752 = !DILocation(line: 126, column: 34, scope: !1078)
!9753 = !DILocation(line: 126, column: 2, scope: !1078)
!9754 = !DILocation(line: 129, column: 6, scope: !9755)
!9755 = distinct !DILexicalBlock(scope: !1078, file: !984, line: 129, column: 6)
!9756 = !DILocation(line: 129, column: 12, scope: !9755)
!9757 = !DILocation(line: 129, column: 6, scope: !1078)
!9758 = !DILocation(line: 130, column: 3, scope: !9755)
!9759 = !DILocation(line: 130, column: 9, scope: !9755)
!9760 = !DILocation(line: 130, column: 15, scope: !9755)
!9761 = !DILocation(line: 130, column: 23, scope: !9755)
!9762 = !DILocation(line: 133, column: 6, scope: !9763)
!9763 = distinct !DILexicalBlock(scope: !1078, file: !984, line: 133, column: 6)
!9764 = !DILocation(line: 133, column: 12, scope: !9763)
!9765 = !DILocation(line: 133, column: 22, scope: !9763)
!9766 = !DILocation(line: 133, column: 6, scope: !1078)
!9767 = !DILocation(line: 134, column: 22, scope: !9768)
!9768 = distinct !DILexicalBlock(scope: !9763, file: !984, line: 133, column: 28)
!9769 = !DILocation(line: 134, column: 28, scope: !9768)
!9770 = !DILocation(line: 134, column: 3, scope: !9768)
!9771 = !DILocation(line: 136, column: 10, scope: !9768)
!9772 = !DILocation(line: 136, column: 16, scope: !9768)
!9773 = !DILocation(line: 136, column: 3, scope: !9768)
!9774 = !DILocation(line: 137, column: 3, scope: !9768)
!9775 = !DILocation(line: 137, column: 9, scope: !9768)
!9776 = !DILocation(line: 137, column: 19, scope: !9768)
!9777 = !DILocation(line: 138, column: 2, scope: !9768)
!9778 = !DILocation(line: 140, column: 28, scope: !9779)
!9779 = distinct !DILexicalBlock(scope: !1078, file: !984, line: 140, column: 13)
!9780 = !DILocation(line: 140, column: 13, scope: !9779)
!9781 = !DILocation(line: 140, column: 34, scope: !9779)
!9782 = !DILocation(line: 140, column: 13, scope: !1078)
!9783 = !DILocation(line: 141, column: 40, scope: !9779)
!9784 = !DILocation(line: 141, column: 25, scope: !9779)
!9785 = !DILocation(line: 141, column: 17, scope: !9779)
!9786 = !DILocation(line: 147, column: 10, scope: !1078)
!9787 = !DILocation(line: 150, column: 27, scope: !1078)
!9788 = !DILocation(line: 150, column: 33, scope: !1078)
!9789 = !DILocation(line: 150, column: 45, scope: !1078)
!9790 = !DILocation(line: 150, column: 7, scope: !1078)
!9791 = !DILocation(line: 150, column: 5, scope: !1078)
!9792 = !DILocation(line: 151, column: 17, scope: !1078)
!9793 = !DILocation(line: 151, column: 21, scope: !1078)
!9794 = !DILocation(line: 151, column: 9, scope: !1078)
!9795 = !DILocation(line: 151, column: 7, scope: !1078)
!9796 = !DILocation(line: 153, column: 6, scope: !9797)
!9797 = distinct !DILexicalBlock(scope: !1078, file: !984, line: 153, column: 6)
!9798 = !DILocation(line: 153, column: 11, scope: !9797)
!9799 = !DILocation(line: 153, column: 17, scope: !9797)
!9800 = !DILocation(line: 153, column: 27, scope: !9801)
!9801 = !DILexicalBlockFile(scope: !9797, file: !984, discriminator: 1)
!9802 = !DILocation(line: 153, column: 42, scope: !9801)
!9803 = !DILocation(line: 153, column: 20, scope: !9801)
!9804 = !DILocation(line: 153, column: 56, scope: !9801)
!9805 = !DILocation(line: 153, column: 6, scope: !9801)
!9806 = !DILocation(line: 154, column: 53, scope: !9807)
!9807 = distinct !DILexicalBlock(scope: !9797, file: !984, line: 153, column: 63)
!9808 = !DILocation(line: 154, column: 3, scope: !9807)
!9809 = !DILocation(line: 155, column: 26, scope: !9807)
!9810 = !DILocation(line: 155, column: 11, scope: !9807)
!9811 = !DILocation(line: 155, column: 3, scope: !9807)
!9812 = !DILocation(line: 159, column: 16, scope: !9813)
!9813 = distinct !DILexicalBlock(scope: !1078, file: !984, line: 159, column: 6)
!9814 = !DILocation(line: 159, column: 22, scope: !9813)
!9815 = !DILocation(line: 159, column: 26, scope: !9813)
!9816 = !DILocation(line: 159, column: 26, scope: !9817)
!9817 = !DILexicalBlockFile(scope: !9813, file: !984, discriminator: 1)
!9818 = !DILocation(line: 159, column: 26, scope: !9819)
!9819 = !DILexicalBlockFile(scope: !9813, file: !984, discriminator: 2)
!9820 = !DILocation(line: 159, column: 26, scope: !9821)
!9821 = !DILexicalBlockFile(scope: !9813, file: !984, discriminator: 3)
!9822 = !DILocation(line: 159, column: 7, scope: !9821)
!9823 = !DILocation(line: 160, column: 6, scope: !9813)
!9824 = !DILocation(line: 160, column: 9, scope: !9817)
!9825 = !DILocation(line: 160, column: 15, scope: !9817)
!9826 = !DILocation(line: 159, column: 6, scope: !9827)
!9827 = !DILexicalBlockFile(scope: !1078, file: !984, discriminator: 4)
!9828 = !DILocation(line: 162, column: 21, scope: !9829)
!9829 = distinct !DILexicalBlock(scope: !9813, file: !984, line: 160, column: 31)
!9830 = !DILocation(line: 162, column: 3, scope: !9829)
!9831 = !DILocation(line: 162, column: 9, scope: !9829)
!9832 = !DILocation(line: 162, column: 19, scope: !9829)
!9833 = !DILocation(line: 163, column: 13, scope: !9829)
!9834 = !DILocation(line: 163, column: 19, scope: !9829)
!9835 = !DILocation(line: 163, column: 11, scope: !9829)
!9836 = !DILocation(line: 166, column: 28, scope: !9837)
!9837 = distinct !DILexicalBlock(scope: !9829, file: !984, line: 166, column: 7)
!9838 = !DILocation(line: 166, column: 34, scope: !9837)
!9839 = !DILocation(line: 166, column: 45, scope: !9837)
!9840 = !DILocation(line: 166, column: 7, scope: !9837)
!9841 = !DILocation(line: 166, column: 51, scope: !9837)
!9842 = !DILocation(line: 166, column: 7, scope: !9829)
!9843 = !DILocation(line: 167, column: 27, scope: !9837)
!9844 = !DILocation(line: 167, column: 12, scope: !9837)
!9845 = !DILocation(line: 167, column: 4, scope: !9837)
!9846 = !DILocation(line: 168, column: 2, scope: !9829)
!9847 = !DILocation(line: 170, column: 7, scope: !9848)
!9848 = distinct !DILexicalBlock(scope: !1078, file: !984, line: 170, column: 6)
!9849 = !DILocation(line: 170, column: 6, scope: !1078)
!9850 = !DILocation(line: 171, column: 53, scope: !9851)
!9851 = distinct !DILexicalBlock(scope: !9848, file: !984, line: 170, column: 16)
!9852 = !DILocation(line: 171, column: 3, scope: !9851)
!9853 = !DILocation(line: 172, column: 71, scope: !9851)
!9854 = !DILocation(line: 172, column: 17, scope: !9851)
!9855 = !DILocation(line: 173, column: 2, scope: !9851)
!9856 = !DILocation(line: 176, column: 32, scope: !9857)
!9857 = distinct !DILexicalBlock(scope: !1078, file: !984, line: 176, column: 6)
!9858 = !DILocation(line: 176, column: 38, scope: !9857)
!9859 = !DILocation(line: 176, column: 6, scope: !9857)
!9860 = !DILocation(line: 176, column: 47, scope: !9857)
!9861 = !DILocation(line: 176, column: 6, scope: !1078)
!9862 = !DILocation(line: 177, column: 26, scope: !9857)
!9863 = !DILocation(line: 177, column: 11, scope: !9857)
!9864 = !DILocation(line: 177, column: 3, scope: !9857)
!9865 = !DILocation(line: 180, column: 3, scope: !1078)
!9866 = !DILocation(line: 180, column: 7, scope: !1078)
!9867 = !DILocation(line: 180, column: 13, scope: !1078)
!9868 = !DILocation(line: 179, column: 2, scope: !1078)
!9869 = !DILocation(line: 183, column: 2, scope: !1078)
!9870 = !DILocation(line: 184, column: 1, scope: !1078)
!9871 = !DILocalVariable(name: "sock", arg: 1, scope: !1091, file: !1089, line: 17, type: !33)
!9872 = !DILocation(line: 17, column: 29, scope: !1091)
!9873 = !DILocalVariable(name: "sa_p", arg: 2, scope: !1091, file: !1089, line: 17, type: !1094)
!9874 = !DILocation(line: 17, column: 52, scope: !1091)
!9875 = !DILocalVariable(name: "fn", scope: !1091, file: !1089, line: 18, type: !4)
!9876 = !DILocation(line: 18, column: 14, scope: !1091)
!9877 = !DILocalVariable(name: "cont", scope: !1091, file: !1089, line: 19, type: !1102)
!9878 = !DILocation(line: 19, column: 11, scope: !1091)
!9879 = !DILocation(line: 21, column: 34, scope: !1091)
!9880 = !DILocation(line: 21, column: 2, scope: !1091)
!9881 = !DILocation(line: 23, column: 9, scope: !1091)
!9882 = !DILocation(line: 23, column: 7, scope: !1091)
!9883 = !DILocation(line: 24, column: 7, scope: !9884)
!9884 = distinct !DILexicalBlock(scope: !1091, file: !1089, line: 24, column: 6)
!9885 = !DILocation(line: 24, column: 6, scope: !1091)
!9886 = !DILocation(line: 25, column: 27, scope: !9884)
!9887 = !DILocation(line: 25, column: 11, scope: !9884)
!9888 = !DILocation(line: 25, column: 3, scope: !9884)
!9889 = !DILocation(line: 27, column: 2, scope: !1091)
!9890 = !DILocation(line: 27, column: 8, scope: !1091)
!9891 = !DILocation(line: 27, column: 16, scope: !1091)
!9892 = !DILocation(line: 28, column: 2, scope: !1091)
!9893 = !DILocation(line: 28, column: 8, scope: !1091)
!9894 = !DILocation(line: 28, column: 14, scope: !1091)
!9895 = !DILocation(line: 29, column: 10, scope: !1091)
!9896 = !DILocation(line: 29, column: 16, scope: !1091)
!9897 = !DILocation(line: 29, column: 2, scope: !1091)
!9898 = !DILocation(line: 29, column: 22, scope: !1091)
!9899 = !DILocation(line: 29, column: 28, scope: !1091)
!9900 = !DILocation(line: 29, column: 28, scope: !9901)
!9901 = !DILexicalBlockFile(scope: !1091, file: !1089, discriminator: 1)
!9902 = !DILocation(line: 29, column: 28, scope: !9903)
!9903 = !DILexicalBlockFile(scope: !1091, file: !1089, discriminator: 2)
!9904 = !DILocation(line: 29, column: 28, scope: !9905)
!9905 = !DILexicalBlockFile(scope: !1091, file: !1089, discriminator: 3)
!9906 = !DILocation(line: 29, column: 2, scope: !9905)
!9907 = !DILocation(line: 31, column: 20, scope: !1091)
!9908 = !DILocation(line: 31, column: 2, scope: !1091)
!9909 = !DILocation(line: 31, column: 8, scope: !1091)
!9910 = !DILocation(line: 31, column: 18, scope: !1091)
!9911 = !DILocation(line: 32, column: 2, scope: !1091)
!9912 = !DILocation(line: 32, column: 8, scope: !1091)
!9913 = !DILocation(line: 32, column: 16, scope: !1091)
!9914 = !DILocation(line: 34, column: 33, scope: !9915)
!9915 = distinct !DILexicalBlock(scope: !1091, file: !1089, line: 34, column: 6)
!9916 = !DILocation(line: 34, column: 39, scope: !9915)
!9917 = !DILocation(line: 34, column: 45, scope: !9915)
!9918 = !DILocation(line: 34, column: 7, scope: !9915)
!9919 = !DILocation(line: 34, column: 54, scope: !9915)
!9920 = !DILocation(line: 35, column: 32, scope: !9915)
!9921 = !DILocation(line: 35, column: 38, scope: !9915)
!9922 = !DILocation(line: 35, column: 49, scope: !9915)
!9923 = !DILocation(line: 35, column: 7, scope: !9915)
!9924 = !DILocation(line: 34, column: 6, scope: !9901)
!9925 = !DILocation(line: 36, column: 4, scope: !9915)
!9926 = !DILocation(line: 38, column: 26, scope: !1091)
!9927 = !DILocation(line: 38, column: 10, scope: !1091)
!9928 = !DILocation(line: 38, column: 2, scope: !1091)
!9929 = !DILocation(line: 39, column: 1, scope: !1091)
!9930 = !DILocalVariable(name: "cont", arg: 1, scope: !1099, file: !1089, line: 41, type: !1102)
!9931 = !DILocation(line: 41, column: 44, scope: !1099)
!9932 = !DILocalVariable(name: "fn", scope: !1099, file: !1089, line: 42, type: !4)
!9933 = !DILocation(line: 42, column: 14, scope: !1099)
!9934 = !DILocalVariable(name: "length_buf", scope: !1099, file: !1089, line: 43, type: !48)
!9935 = !DILocation(line: 43, column: 11, scope: !1099)
!9936 = !DILocation(line: 45, column: 34, scope: !1099)
!9937 = !DILocation(line: 45, column: 2, scope: !1099)
!9938 = !DILocation(line: 48, column: 6, scope: !9939)
!9939 = distinct !DILexicalBlock(scope: !1099, file: !1089, line: 48, column: 6)
!9940 = !DILocation(line: 48, column: 12, scope: !9939)
!9941 = !DILocation(line: 48, column: 6, scope: !1099)
!9942 = !DILocation(line: 49, column: 3, scope: !9939)
!9943 = !DILocation(line: 49, column: 9, scope: !9939)
!9944 = !DILocation(line: 49, column: 15, scope: !9939)
!9945 = !DILocation(line: 49, column: 23, scope: !9939)
!9946 = !DILocation(line: 51, column: 32, scope: !9947)
!9947 = distinct !DILexicalBlock(scope: !1099, file: !1089, line: 51, column: 6)
!9948 = !DILocation(line: 51, column: 38, scope: !9947)
!9949 = !DILocation(line: 51, column: 44, scope: !9947)
!9950 = !DILocation(line: 51, column: 6, scope: !9947)
!9951 = !DILocation(line: 51, column: 6, scope: !1099)
!9952 = !DILocation(line: 52, column: 27, scope: !9947)
!9953 = !DILocation(line: 52, column: 11, scope: !9947)
!9954 = !DILocation(line: 52, column: 3, scope: !9947)
!9955 = !DILocation(line: 57, column: 12, scope: !9956)
!9956 = distinct !DILexicalBlock(scope: !1099, file: !1089, line: 57, column: 6)
!9957 = !DILocation(line: 57, column: 18, scope: !9956)
!9958 = !DILocation(line: 57, column: 29, scope: !9956)
!9959 = !DILocation(line: 57, column: 6, scope: !9956)
!9960 = !DILocation(line: 58, column: 25, scope: !9956)
!9961 = !DILocation(line: 57, column: 6, scope: !1099)
!9962 = !DILocation(line: 59, column: 61, scope: !9963)
!9963 = distinct !DILexicalBlock(scope: !9956, file: !1089, line: 58, column: 46)
!9964 = !DILocation(line: 59, column: 3, scope: !9963)
!9965 = !DILocation(line: 60, column: 27, scope: !9963)
!9966 = !DILocation(line: 60, column: 11, scope: !9963)
!9967 = !DILocation(line: 60, column: 3, scope: !9963)
!9968 = !DILocation(line: 63, column: 22, scope: !1099)
!9969 = !DILocation(line: 63, column: 15, scope: !1099)
!9970 = !DILocation(line: 63, column: 13, scope: !1099)
!9971 = !DILocation(line: 64, column: 45, scope: !1099)
!9972 = !DILocation(line: 64, column: 49, scope: !1099)
!9973 = !DILocation(line: 64, column: 2, scope: !1099)
!9974 = !DILocation(line: 67, column: 6, scope: !9975)
!9975 = distinct !DILexicalBlock(scope: !1099, file: !1089, line: 67, column: 6)
!9976 = !DILocation(line: 67, column: 12, scope: !9975)
!9977 = !DILocation(line: 67, column: 17, scope: !9975)
!9978 = !DILocation(line: 67, column: 6, scope: !1099)
!9979 = !DILocation(line: 68, column: 9, scope: !9975)
!9980 = !DILocation(line: 68, column: 15, scope: !9975)
!9981 = !DILocation(line: 68, column: 20, scope: !9975)
!9982 = !DILocation(line: 68, column: 3, scope: !9975)
!9983 = !DILocation(line: 71, column: 25, scope: !1099)
!9984 = !DILocation(line: 71, column: 17, scope: !1099)
!9985 = !DILocation(line: 71, column: 2, scope: !1099)
!9986 = !DILocation(line: 71, column: 8, scope: !1099)
!9987 = !DILocation(line: 71, column: 13, scope: !1099)
!9988 = !DILocation(line: 71, column: 15, scope: !1099)
!9989 = !DILocation(line: 72, column: 7, scope: !9990)
!9990 = distinct !DILexicalBlock(scope: !1099, file: !1089, line: 72, column: 6)
!9991 = !DILocation(line: 72, column: 13, scope: !9990)
!9992 = !DILocation(line: 72, column: 18, scope: !9990)
!9993 = !DILocation(line: 72, column: 6, scope: !1099)
!9994 = !DILocation(line: 73, column: 27, scope: !9990)
!9995 = !DILocation(line: 73, column: 11, scope: !9990)
!9996 = !DILocation(line: 73, column: 3, scope: !9990)
!9997 = !DILocation(line: 75, column: 19, scope: !1099)
!9998 = !DILocation(line: 75, column: 2, scope: !1099)
!9999 = !DILocation(line: 75, column: 8, scope: !1099)
!10000 = !DILocation(line: 75, column: 17, scope: !1099)
!10001 = !DILocation(line: 76, column: 13, scope: !1099)
!10002 = !DILocation(line: 76, column: 19, scope: !1099)
!10003 = !DILocation(line: 76, column: 24, scope: !1099)
!10004 = !DILocation(line: 76, column: 2, scope: !1099)
!10005 = !DILocation(line: 76, column: 8, scope: !1099)
!10006 = !DILocation(line: 76, column: 11, scope: !1099)
!10007 = !DILocation(line: 79, column: 2, scope: !1099)
!10008 = !DILocation(line: 79, column: 8, scope: !1099)
!10009 = !DILocation(line: 79, column: 16, scope: !1099)
!10010 = !DILocation(line: 80, column: 2, scope: !1099)
!10011 = !DILocation(line: 80, column: 8, scope: !1099)
!10012 = !DILocation(line: 80, column: 14, scope: !1099)
!10013 = !DILocation(line: 83, column: 2, scope: !1099)
!10014 = !DILocation(line: 84, column: 1, scope: !1099)
!10015 = !DILocalVariable(name: "cont", arg: 1, scope: !1185, file: !1089, line: 93, type: !1102)
!10016 = !DILocation(line: 93, column: 44, scope: !1185)
!10017 = !DILocalVariable(name: "fn", scope: !1185, file: !1089, line: 94, type: !4)
!10018 = !DILocation(line: 94, column: 14, scope: !1185)
!10019 = !DILocalVariable(name: "len", scope: !1185, file: !1089, line: 95, type: !33)
!10020 = !DILocation(line: 95, column: 6, scope: !1185)
!10021 = !DILocation(line: 97, column: 34, scope: !1185)
!10022 = !DILocation(line: 97, column: 2, scope: !1185)
!10023 = !DILocation(line: 99, column: 6, scope: !10024)
!10024 = distinct !DILexicalBlock(scope: !1185, file: !1089, line: 99, column: 6)
!10025 = !DILocation(line: 99, column: 12, scope: !10024)
!10026 = !DILocation(line: 99, column: 6, scope: !1185)
!10027 = !DILocation(line: 100, column: 3, scope: !10024)
!10028 = !DILocation(line: 100, column: 9, scope: !10024)
!10029 = !DILocation(line: 100, column: 15, scope: !10024)
!10030 = !DILocation(line: 100, column: 23, scope: !10024)
!10031 = !DILocation(line: 102, column: 32, scope: !10032)
!10032 = distinct !DILexicalBlock(scope: !1185, file: !1089, line: 102, column: 6)
!10033 = !DILocation(line: 102, column: 38, scope: !10032)
!10034 = !DILocation(line: 102, column: 44, scope: !10032)
!10035 = !DILocation(line: 102, column: 6, scope: !10032)
!10036 = !DILocation(line: 102, column: 6, scope: !1185)
!10037 = !DILocation(line: 103, column: 26, scope: !10032)
!10038 = !DILocation(line: 103, column: 10, scope: !10032)
!10039 = !DILocation(line: 103, column: 3, scope: !10032)
!10040 = !DILocation(line: 105, column: 14, scope: !1185)
!10041 = !DILocation(line: 105, column: 20, scope: !1185)
!10042 = !DILocation(line: 105, column: 31, scope: !1185)
!10043 = !DILocation(line: 105, column: 37, scope: !1185)
!10044 = !DILocation(line: 106, column: 7, scope: !1185)
!10045 = !DILocation(line: 106, column: 13, scope: !1185)
!10046 = !DILocation(line: 106, column: 25, scope: !1185)
!10047 = !DILocation(line: 106, column: 31, scope: !1185)
!10048 = !DILocation(line: 106, column: 36, scope: !1185)
!10049 = !DILocation(line: 106, column: 42, scope: !1185)
!10050 = !DILocation(line: 106, column: 47, scope: !1185)
!10051 = !DILocation(line: 106, column: 34, scope: !1185)
!10052 = !DILocation(line: 106, column: 22, scope: !1185)
!10053 = !DILocation(line: 105, column: 8, scope: !1185)
!10054 = !DILocation(line: 105, column: 6, scope: !1185)
!10055 = !DILocation(line: 108, column: 6, scope: !10056)
!10056 = distinct !DILexicalBlock(scope: !1185, file: !1089, line: 108, column: 6)
!10057 = !DILocation(line: 108, column: 10, scope: !10056)
!10058 = !DILocation(line: 108, column: 6, scope: !1185)
!10059 = !DILocation(line: 109, column: 26, scope: !10056)
!10060 = !DILocation(line: 109, column: 10, scope: !10056)
!10061 = !DILocation(line: 109, column: 3, scope: !10056)
!10062 = !DILocation(line: 111, column: 14, scope: !1185)
!10063 = !DILocation(line: 111, column: 2, scope: !1185)
!10064 = !DILocation(line: 111, column: 8, scope: !1185)
!10065 = !DILocation(line: 111, column: 11, scope: !1185)
!10066 = !DILocation(line: 112, column: 6, scope: !10067)
!10067 = distinct !DILexicalBlock(scope: !1185, file: !1089, line: 112, column: 6)
!10068 = !DILocation(line: 112, column: 12, scope: !10067)
!10069 = !DILocation(line: 112, column: 18, scope: !10067)
!10070 = !DILocation(line: 112, column: 24, scope: !10067)
!10071 = !DILocation(line: 112, column: 29, scope: !10067)
!10072 = !DILocation(line: 112, column: 33, scope: !10067)
!10073 = !DILocation(line: 112, column: 39, scope: !10067)
!10074 = !DILocation(line: 112, column: 31, scope: !10067)
!10075 = !DILocation(line: 112, column: 15, scope: !10067)
!10076 = !DILocation(line: 112, column: 6, scope: !1185)
!10077 = !DILocation(line: 113, column: 57, scope: !10078)
!10078 = distinct !DILexicalBlock(scope: !10067, file: !1089, line: 112, column: 50)
!10079 = !DILocation(line: 114, column: 5, scope: !10078)
!10080 = !DILocation(line: 114, column: 11, scope: !10078)
!10081 = !DILocation(line: 114, column: 16, scope: !10078)
!10082 = !DILocation(line: 114, column: 20, scope: !10078)
!10083 = !DILocation(line: 114, column: 26, scope: !10078)
!10084 = !DILocation(line: 114, column: 18, scope: !10078)
!10085 = !DILocation(line: 114, column: 38, scope: !10078)
!10086 = !DILocation(line: 114, column: 44, scope: !10078)
!10087 = !DILocation(line: 114, column: 36, scope: !10078)
!10088 = !DILocation(line: 113, column: 3, scope: !10078)
!10089 = !DILocation(line: 117, column: 3, scope: !10078)
!10090 = !DILocation(line: 121, column: 25, scope: !1185)
!10091 = !DILocation(line: 121, column: 31, scope: !1185)
!10092 = !DILocation(line: 121, column: 2, scope: !1185)
!10093 = !DILocation(line: 123, column: 6, scope: !10094)
!10094 = distinct !DILexicalBlock(scope: !1185, file: !1089, line: 123, column: 6)
!10095 = !DILocation(line: 123, column: 12, scope: !10094)
!10096 = !DILocation(line: 123, column: 17, scope: !10094)
!10097 = !DILocation(line: 123, column: 22, scope: !10094)
!10098 = !DILocation(line: 123, column: 29, scope: !10094)
!10099 = !DILocation(line: 123, column: 6, scope: !1185)
!10100 = !DILocation(line: 124, column: 7, scope: !10101)
!10101 = distinct !DILexicalBlock(scope: !10102, file: !1089, line: 124, column: 7)
!10102 = distinct !DILexicalBlock(scope: !10094, file: !1089, line: 123, column: 42)
!10103 = !DILocation(line: 124, column: 13, scope: !10101)
!10104 = !DILocation(line: 124, column: 7, scope: !10102)
!10105 = !DILocation(line: 125, column: 4, scope: !10101)
!10106 = !DILocation(line: 125, column: 10, scope: !10101)
!10107 = !DILocation(line: 125, column: 16, scope: !10101)
!10108 = !DILocation(line: 125, column: 24, scope: !10101)
!10109 = !DILocation(line: 132, column: 26, scope: !10102)
!10110 = !DILocation(line: 132, column: 11, scope: !10102)
!10111 = !DILocation(line: 132, column: 3, scope: !10102)
!10112 = !DILocation(line: 140, column: 8, scope: !10113)
!10113 = distinct !DILexicalBlock(scope: !10114, file: !1089, line: 140, column: 8)
!10114 = distinct !DILexicalBlock(scope: !10102, file: !1089, line: 132, column: 44)
!10115 = !DILocation(line: 140, column: 14, scope: !10113)
!10116 = !DILocation(line: 140, column: 8, scope: !10114)
!10117 = !DILocation(line: 141, column: 5, scope: !10113)
!10118 = !DILocation(line: 141, column: 11, scope: !10113)
!10119 = !DILocation(line: 141, column: 17, scope: !10113)
!10120 = !DILocation(line: 141, column: 25, scope: !10113)
!10121 = !DILocation(line: 143, column: 4, scope: !10114)
!10122 = !DILocation(line: 143, column: 10, scope: !10114)
!10123 = !DILocation(line: 143, column: 18, scope: !10114)
!10124 = !DILocation(line: 144, column: 4, scope: !10114)
!10125 = !DILocation(line: 144, column: 10, scope: !10114)
!10126 = !DILocation(line: 144, column: 16, scope: !10114)
!10127 = !DILocation(line: 147, column: 4, scope: !10114)
!10128 = !DILocation(line: 150, column: 46, scope: !10114)
!10129 = !DILocation(line: 150, column: 4, scope: !10114)
!10130 = !DILocation(line: 151, column: 4, scope: !10114)
!10131 = !DILocation(line: 151, column: 10, scope: !10114)
!10132 = !DILocation(line: 151, column: 15, scope: !10114)
!10133 = !DILocation(line: 151, column: 20, scope: !10114)
!10134 = !DILocation(line: 151, column: 26, scope: !10114)
!10135 = !DILocation(line: 154, column: 43, scope: !10114)
!10136 = !DILocation(line: 154, column: 4, scope: !10114)
!10137 = !DILocation(line: 155, column: 4, scope: !10114)
!10138 = !DILocation(line: 155, column: 10, scope: !10114)
!10139 = !DILocation(line: 155, column: 15, scope: !10114)
!10140 = !DILocation(line: 155, column: 20, scope: !10114)
!10141 = !DILocation(line: 155, column: 26, scope: !10114)
!10142 = !DILocation(line: 156, column: 3, scope: !10114)
!10143 = !DILocation(line: 157, column: 2, scope: !10102)
!10144 = !DILocation(line: 158, column: 3, scope: !10094)
!10145 = !DILocation(line: 158, column: 9, scope: !10094)
!10146 = !DILocation(line: 158, column: 14, scope: !10094)
!10147 = !DILocation(line: 158, column: 19, scope: !10094)
!10148 = !DILocation(line: 158, column: 25, scope: !10094)
!10149 = !DILocation(line: 167, column: 28, scope: !10150)
!10150 = distinct !DILexicalBlock(scope: !1185, file: !1089, line: 167, column: 6)
!10151 = !DILocation(line: 167, column: 34, scope: !10150)
!10152 = !DILocation(line: 167, column: 45, scope: !10150)
!10153 = !DILocation(line: 167, column: 7, scope: !10150)
!10154 = !DILocation(line: 167, column: 6, scope: !1185)
!10155 = !DILocation(line: 168, column: 22, scope: !10156)
!10156 = distinct !DILexicalBlock(scope: !10150, file: !1089, line: 167, column: 52)
!10157 = !DILocation(line: 168, column: 3, scope: !10156)
!10158 = !DILocation(line: 171, column: 3, scope: !10156)
!10159 = !DILocation(line: 171, column: 9, scope: !10156)
!10160 = !DILocation(line: 171, column: 17, scope: !10156)
!10161 = !DILocation(line: 172, column: 3, scope: !10156)
!10162 = !DILocation(line: 172, column: 9, scope: !10156)
!10163 = !DILocation(line: 172, column: 15, scope: !10156)
!10164 = !DILocation(line: 173, column: 3, scope: !10156)
!10165 = !DILocation(line: 173, column: 9, scope: !10156)
!10166 = !DILocation(line: 173, column: 12, scope: !10156)
!10167 = !DILocation(line: 175, column: 44, scope: !10156)
!10168 = !DILocation(line: 175, column: 3, scope: !10156)
!10169 = !DILocation(line: 177, column: 3, scope: !10156)
!10170 = !DILocation(line: 181, column: 26, scope: !1185)
!10171 = !DILocation(line: 181, column: 10, scope: !1185)
!10172 = !DILocation(line: 181, column: 2, scope: !1185)
!10173 = !DILocation(line: 182, column: 1, scope: !1185)
!10174 = !DILocalVariable(name: "cont", arg: 1, scope: !1187, file: !1089, line: 188, type: !1102)
!10175 = !DILocation(line: 188, column: 46, scope: !1187)
!10176 = !DILocalVariable(name: "fn", scope: !1187, file: !1089, line: 189, type: !4)
!10177 = !DILocation(line: 189, column: 14, scope: !1187)
!10178 = !DILocation(line: 191, column: 34, scope: !1187)
!10179 = !DILocation(line: 191, column: 2, scope: !1187)
!10180 = !DILocation(line: 193, column: 29, scope: !1187)
!10181 = !DILocation(line: 193, column: 10, scope: !1187)
!10182 = !DILocation(line: 193, column: 2, scope: !1187)
!10183 = !DILocation(line: 195, column: 46, scope: !10184)
!10184 = distinct !DILexicalBlock(scope: !1187, file: !1089, line: 193, column: 36)
!10185 = !DILocation(line: 195, column: 3, scope: !10184)
!10186 = !DILocation(line: 198, column: 3, scope: !10184)
!10187 = !DILocation(line: 200, column: 22, scope: !10184)
!10188 = !DILocation(line: 200, column: 3, scope: !10184)
!10189 = !DILocation(line: 202, column: 7, scope: !10190)
!10190 = distinct !DILexicalBlock(scope: !10184, file: !1089, line: 202, column: 7)
!10191 = !DILocation(line: 202, column: 13, scope: !10190)
!10192 = !DILocation(line: 202, column: 22, scope: !10190)
!10193 = !DILocation(line: 202, column: 26, scope: !10190)
!10194 = !DILocation(line: 202, column: 29, scope: !10195)
!10195 = !DILexicalBlockFile(scope: !10190, file: !1089, discriminator: 1)
!10196 = !DILocation(line: 202, column: 35, scope: !10195)
!10197 = !DILocation(line: 202, column: 44, scope: !10195)
!10198 = !DILocation(line: 202, column: 7, scope: !10195)
!10199 = !DILocation(line: 203, column: 4, scope: !10200)
!10200 = distinct !DILexicalBlock(scope: !10190, file: !1089, line: 202, column: 58)
!10201 = !DILocation(line: 204, column: 28, scope: !10200)
!10202 = !DILocation(line: 204, column: 12, scope: !10200)
!10203 = !DILocation(line: 204, column: 4, scope: !10200)
!10204 = !DILocation(line: 207, column: 7, scope: !10205)
!10205 = distinct !DILexicalBlock(scope: !10184, file: !1089, line: 207, column: 7)
!10206 = !DILocation(line: 207, column: 13, scope: !10205)
!10207 = !DILocation(line: 207, column: 7, scope: !10184)
!10208 = !DILocation(line: 208, column: 4, scope: !10205)
!10209 = !DILocation(line: 208, column: 10, scope: !10205)
!10210 = !DILocation(line: 208, column: 16, scope: !10205)
!10211 = !DILocation(line: 208, column: 24, scope: !10205)
!10212 = !DILocation(line: 210, column: 33, scope: !10213)
!10213 = distinct !DILexicalBlock(scope: !10184, file: !1089, line: 210, column: 7)
!10214 = !DILocation(line: 210, column: 39, scope: !10213)
!10215 = !DILocation(line: 210, column: 45, scope: !10213)
!10216 = !DILocation(line: 210, column: 7, scope: !10213)
!10217 = !DILocation(line: 210, column: 7, scope: !10184)
!10218 = !DILocation(line: 211, column: 28, scope: !10213)
!10219 = !DILocation(line: 211, column: 12, scope: !10213)
!10220 = !DILocation(line: 211, column: 4, scope: !10213)
!10221 = !DILocation(line: 214, column: 28, scope: !10222)
!10222 = distinct !DILexicalBlock(scope: !10184, file: !1089, line: 214, column: 7)
!10223 = !DILocation(line: 214, column: 34, scope: !10222)
!10224 = !DILocation(line: 214, column: 45, scope: !10222)
!10225 = !DILocation(line: 214, column: 7, scope: !10222)
!10226 = !DILocation(line: 214, column: 7, scope: !10184)
!10227 = !DILocation(line: 215, column: 28, scope: !10222)
!10228 = !DILocation(line: 215, column: 12, scope: !10222)
!10229 = !DILocation(line: 215, column: 4, scope: !10222)
!10230 = !DILocation(line: 218, column: 3, scope: !10184)
!10231 = !DILocation(line: 218, column: 9, scope: !10184)
!10232 = !DILocation(line: 218, column: 17, scope: !10184)
!10233 = !DILocation(line: 219, column: 3, scope: !10184)
!10234 = !DILocation(line: 219, column: 9, scope: !10184)
!10235 = !DILocation(line: 219, column: 15, scope: !10184)
!10236 = !DILocation(line: 220, column: 3, scope: !10184)
!10237 = !DILocation(line: 220, column: 9, scope: !10184)
!10238 = !DILocation(line: 220, column: 12, scope: !10184)
!10239 = !DILocation(line: 222, column: 44, scope: !10184)
!10240 = !DILocation(line: 222, column: 3, scope: !10184)
!10241 = !DILocation(line: 225, column: 3, scope: !10184)
!10242 = !DILocation(line: 227, column: 27, scope: !10184)
!10243 = !DILocation(line: 227, column: 11, scope: !10184)
!10244 = !DILocation(line: 227, column: 3, scope: !10184)
!10245 = !DILocation(line: 229, column: 1, scope: !1187)
!10246 = !DILocalVariable(name: "cont", arg: 1, scope: !1189, file: !1089, line: 235, type: !1102)
!10247 = !DILocation(line: 235, column: 44, scope: !1189)
!10248 = !DILocalVariable(name: "fn", scope: !1189, file: !1089, line: 236, type: !4)
!10249 = !DILocation(line: 236, column: 14, scope: !1189)
!10250 = !DILocation(line: 238, column: 34, scope: !1189)
!10251 = !DILocation(line: 238, column: 2, scope: !1189)
!10252 = !DILocation(line: 241, column: 6, scope: !10253)
!10253 = distinct !DILexicalBlock(scope: !1189, file: !1089, line: 241, column: 6)
!10254 = !DILocation(line: 241, column: 12, scope: !10253)
!10255 = !DILocation(line: 241, column: 6, scope: !1189)
!10256 = !DILocation(line: 242, column: 3, scope: !10253)
!10257 = !DILocation(line: 242, column: 9, scope: !10253)
!10258 = !DILocation(line: 242, column: 15, scope: !10253)
!10259 = !DILocation(line: 242, column: 23, scope: !10253)
!10260 = !DILocation(line: 244, column: 32, scope: !10261)
!10261 = distinct !DILexicalBlock(scope: !1189, file: !1089, line: 244, column: 6)
!10262 = !DILocation(line: 244, column: 38, scope: !10261)
!10263 = !DILocation(line: 244, column: 44, scope: !10261)
!10264 = !DILocation(line: 244, column: 6, scope: !10261)
!10265 = !DILocation(line: 244, column: 6, scope: !1189)
!10266 = !DILocation(line: 245, column: 27, scope: !10261)
!10267 = !DILocation(line: 245, column: 11, scope: !10261)
!10268 = !DILocation(line: 245, column: 3, scope: !10261)
!10269 = !DILocation(line: 247, column: 25, scope: !1189)
!10270 = !DILocation(line: 247, column: 31, scope: !1189)
!10271 = !DILocation(line: 247, column: 37, scope: !1189)
!10272 = !DILocation(line: 247, column: 10, scope: !1189)
!10273 = !DILocation(line: 247, column: 2, scope: !1189)
!10274 = !DILocation(line: 250, column: 46, scope: !10275)
!10275 = distinct !DILexicalBlock(scope: !1189, file: !1089, line: 247, column: 49)
!10276 = !DILocation(line: 250, column: 3, scope: !10275)
!10277 = !DILocation(line: 253, column: 3, scope: !10275)
!10278 = !DILocation(line: 256, column: 3, scope: !10275)
!10279 = !DILocation(line: 256, column: 9, scope: !10275)
!10280 = !DILocation(line: 256, column: 17, scope: !10275)
!10281 = !DILocation(line: 257, column: 3, scope: !10275)
!10282 = !DILocation(line: 257, column: 9, scope: !10275)
!10283 = !DILocation(line: 257, column: 15, scope: !10275)
!10284 = !DILocation(line: 260, column: 22, scope: !10275)
!10285 = !DILocation(line: 260, column: 28, scope: !10275)
!10286 = !DILocation(line: 260, column: 3, scope: !10275)
!10287 = !DILocation(line: 261, column: 28, scope: !10275)
!10288 = !DILocation(line: 261, column: 34, scope: !10275)
!10289 = !DILocation(line: 261, column: 45, scope: !10275)
!10290 = !DILocation(line: 261, column: 3, scope: !10275)
!10291 = !DILocation(line: 263, column: 44, scope: !10275)
!10292 = !DILocation(line: 263, column: 3, scope: !10275)
!10293 = !DILocation(line: 266, column: 3, scope: !10275)
!10294 = !DILocation(line: 269, column: 27, scope: !10275)
!10295 = !DILocation(line: 269, column: 11, scope: !10275)
!10296 = !DILocation(line: 269, column: 3, scope: !10275)
!10297 = !DILocation(line: 271, column: 1, scope: !1189)
!10298 = !DILocalVariable(name: "cont", arg: 1, scope: !1191, file: !1089, line: 277, type: !1102)
!10299 = !DILocation(line: 277, column: 57, scope: !1191)
!10300 = !DILocalVariable(name: "fn", scope: !1191, file: !1089, line: 278, type: !4)
!10301 = !DILocation(line: 278, column: 14, scope: !1191)
!10302 = !DILocalVariable(name: "length_buf", scope: !1191, file: !1089, line: 279, type: !48)
!10303 = !DILocation(line: 279, column: 11, scope: !1191)
!10304 = !DILocalVariable(name: "i", scope: !1191, file: !1089, line: 280, type: !33)
!10305 = !DILocation(line: 280, column: 6, scope: !1191)
!10306 = !DILocation(line: 282, column: 34, scope: !1191)
!10307 = !DILocation(line: 282, column: 2, scope: !1191)
!10308 = !DILocation(line: 284, column: 12, scope: !1191)
!10309 = !DILocation(line: 284, column: 18, scope: !1191)
!10310 = !DILocation(line: 284, column: 29, scope: !1191)
!10311 = !DILocation(line: 284, column: 6, scope: !1191)
!10312 = !DILocation(line: 284, column: 4, scope: !1191)
!10313 = !DILocation(line: 286, column: 7, scope: !10314)
!10314 = distinct !DILexicalBlock(scope: !1191, file: !1089, line: 286, column: 6)
!10315 = !DILocation(line: 286, column: 6, scope: !1191)
!10316 = !DILocation(line: 287, column: 31, scope: !10314)
!10317 = !DILocation(line: 287, column: 10, scope: !10314)
!10318 = !DILocation(line: 287, column: 3, scope: !10314)
!10319 = !DILocation(line: 289, column: 6, scope: !10320)
!10320 = distinct !DILexicalBlock(scope: !1191, file: !1089, line: 289, column: 6)
!10321 = !DILocation(line: 289, column: 8, scope: !10320)
!10322 = !DILocation(line: 289, column: 6, scope: !1191)
!10323 = !DILocation(line: 291, column: 39, scope: !10324)
!10324 = distinct !DILexicalBlock(scope: !10320, file: !1089, line: 289, column: 29)
!10325 = !DILocation(line: 291, column: 3, scope: !10324)
!10326 = !DILocation(line: 292, column: 27, scope: !10324)
!10327 = !DILocation(line: 292, column: 11, scope: !10324)
!10328 = !DILocation(line: 292, column: 3, scope: !10324)
!10329 = !DILocation(line: 296, column: 22, scope: !1191)
!10330 = !DILocation(line: 296, column: 15, scope: !1191)
!10331 = !DILocation(line: 296, column: 13, scope: !1191)
!10332 = !DILocation(line: 297, column: 47, scope: !1191)
!10333 = !DILocation(line: 297, column: 51, scope: !1191)
!10334 = !DILocation(line: 297, column: 2, scope: !1191)
!10335 = !DILocation(line: 300, column: 6, scope: !10336)
!10336 = distinct !DILexicalBlock(scope: !1191, file: !1089, line: 300, column: 6)
!10337 = !DILocation(line: 300, column: 12, scope: !10336)
!10338 = !DILocation(line: 300, column: 17, scope: !10336)
!10339 = !DILocation(line: 300, column: 6, scope: !1191)
!10340 = !DILocation(line: 301, column: 9, scope: !10336)
!10341 = !DILocation(line: 301, column: 15, scope: !10336)
!10342 = !DILocation(line: 301, column: 20, scope: !10336)
!10343 = !DILocation(line: 301, column: 3, scope: !10336)
!10344 = !DILocation(line: 304, column: 25, scope: !1191)
!10345 = !DILocation(line: 304, column: 17, scope: !1191)
!10346 = !DILocation(line: 304, column: 2, scope: !1191)
!10347 = !DILocation(line: 304, column: 8, scope: !1191)
!10348 = !DILocation(line: 304, column: 13, scope: !1191)
!10349 = !DILocation(line: 304, column: 15, scope: !1191)
!10350 = !DILocation(line: 305, column: 7, scope: !10351)
!10351 = distinct !DILexicalBlock(scope: !1191, file: !1089, line: 305, column: 6)
!10352 = !DILocation(line: 305, column: 13, scope: !10351)
!10353 = !DILocation(line: 305, column: 18, scope: !10351)
!10354 = !DILocation(line: 305, column: 6, scope: !1191)
!10355 = !DILocation(line: 306, column: 3, scope: !10356)
!10356 = distinct !DILexicalBlock(scope: !10351, file: !1089, line: 305, column: 21)
!10357 = !DILocation(line: 306, column: 9, scope: !10356)
!10358 = !DILocation(line: 306, column: 18, scope: !10356)
!10359 = !DILocation(line: 307, column: 27, scope: !10356)
!10360 = !DILocation(line: 307, column: 11, scope: !10356)
!10361 = !DILocation(line: 307, column: 3, scope: !10356)
!10362 = !DILocation(line: 310, column: 19, scope: !1191)
!10363 = !DILocation(line: 310, column: 2, scope: !1191)
!10364 = !DILocation(line: 310, column: 8, scope: !1191)
!10365 = !DILocation(line: 310, column: 17, scope: !1191)
!10366 = !DILocation(line: 311, column: 13, scope: !1191)
!10367 = !DILocation(line: 311, column: 19, scope: !1191)
!10368 = !DILocation(line: 311, column: 24, scope: !1191)
!10369 = !DILocation(line: 311, column: 2, scope: !1191)
!10370 = !DILocation(line: 311, column: 8, scope: !1191)
!10371 = !DILocation(line: 311, column: 11, scope: !1191)
!10372 = !DILocation(line: 312, column: 2, scope: !1191)
!10373 = !DILocation(line: 312, column: 8, scope: !1191)
!10374 = !DILocation(line: 312, column: 16, scope: !1191)
!10375 = !DILocation(line: 315, column: 6, scope: !10376)
!10376 = distinct !DILexicalBlock(scope: !1191, file: !1089, line: 315, column: 6)
!10377 = !DILocation(line: 315, column: 12, scope: !10376)
!10378 = !DILocation(line: 315, column: 6, scope: !1191)
!10379 = !DILocation(line: 316, column: 3, scope: !10376)
!10380 = !DILocation(line: 316, column: 9, scope: !10376)
!10381 = !DILocation(line: 316, column: 15, scope: !10376)
!10382 = !DILocation(line: 316, column: 23, scope: !10376)
!10383 = !DILocation(line: 318, column: 32, scope: !10384)
!10384 = distinct !DILexicalBlock(scope: !1191, file: !1089, line: 318, column: 6)
!10385 = !DILocation(line: 318, column: 38, scope: !10384)
!10386 = !DILocation(line: 318, column: 44, scope: !10384)
!10387 = !DILocation(line: 318, column: 6, scope: !10384)
!10388 = !DILocation(line: 318, column: 6, scope: !1191)
!10389 = !DILocation(line: 319, column: 27, scope: !10384)
!10390 = !DILocation(line: 319, column: 11, scope: !10384)
!10391 = !DILocation(line: 319, column: 3, scope: !10384)
!10392 = !DILocation(line: 326, column: 2, scope: !1191)
!10393 = !DILocation(line: 326, column: 8, scope: !1191)
!10394 = !DILocation(line: 326, column: 16, scope: !1191)
!10395 = !DILocation(line: 327, column: 2, scope: !1191)
!10396 = !DILocation(line: 327, column: 8, scope: !1191)
!10397 = !DILocation(line: 327, column: 14, scope: !1191)
!10398 = !DILocation(line: 329, column: 53, scope: !1191)
!10399 = !DILocation(line: 329, column: 2, scope: !1191)
!10400 = !DILocation(line: 332, column: 2, scope: !1191)
!10401 = !DILocation(line: 333, column: 1, scope: !1191)
!10402 = !DILocalVariable(name: "cont", arg: 1, scope: !1193, file: !1089, line: 339, type: !1102)
!10403 = !DILocation(line: 339, column: 35, scope: !1193)
!10404 = !DILocation(line: 341, column: 2, scope: !1193)
!10405 = !DILocation(line: 343, column: 19, scope: !1193)
!10406 = !DILocation(line: 343, column: 2, scope: !1193)
!10407 = !DILocation(line: 344, column: 2, scope: !1193)
!10408 = !DILocalVariable(name: "cont", arg: 1, scope: !1186, file: !1089, line: 184, type: !1102)
!10409 = !DILocation(line: 184, column: 42, scope: !1186)
!10410 = !DILocation(line: 185, column: 26, scope: !1186)
!10411 = !DILocation(line: 185, column: 10, scope: !1186)
!10412 = !DILocation(line: 185, column: 2, scope: !1186)
!10413 = !DILocalVariable(name: "cont", arg: 1, scope: !1192, file: !1089, line: 335, type: !1102)
!10414 = !DILocation(line: 335, column: 55, scope: !1192)
!10415 = !DILocation(line: 336, column: 26, scope: !1192)
!10416 = !DILocation(line: 336, column: 10, scope: !1192)
!10417 = !DILocation(line: 336, column: 2, scope: !1192)
!10418 = !DILocalVariable(name: "cont", arg: 1, scope: !1190, file: !1089, line: 273, type: !1102)
!10419 = !DILocation(line: 273, column: 42, scope: !1190)
!10420 = !DILocation(line: 274, column: 26, scope: !1190)
!10421 = !DILocation(line: 274, column: 10, scope: !1190)
!10422 = !DILocation(line: 274, column: 2, scope: !1190)
!10423 = !DILocalVariable(name: "cont", arg: 1, scope: !1188, file: !1089, line: 231, type: !1102)
!10424 = !DILocation(line: 231, column: 44, scope: !1188)
!10425 = !DILocation(line: 232, column: 26, scope: !1188)
!10426 = !DILocation(line: 232, column: 10, scope: !1188)
!10427 = !DILocation(line: 232, column: 2, scope: !1188)
!10428 = !DILocalVariable(name: "cont", arg: 1, scope: !1184, file: !1089, line: 86, type: !1102)
!10429 = !DILocation(line: 86, column: 42, scope: !1184)
!10430 = !DILocalVariable(name: "fn", scope: !1184, file: !1089, line: 87, type: !4)
!10431 = !DILocation(line: 87, column: 14, scope: !1184)
!10432 = !DILocation(line: 89, column: 67, scope: !1184)
!10433 = !DILocation(line: 89, column: 2, scope: !1184)
!10434 = !DILocation(line: 90, column: 26, scope: !1184)
!10435 = !DILocation(line: 90, column: 10, scope: !1184)
!10436 = !DILocation(line: 90, column: 2, scope: !1184)
!10437 = !DILocalVariable(name: "i", scope: !1197, file: !1195, line: 45, type: !33)
!10438 = !DILocation(line: 45, column: 6, scope: !1197)
!10439 = !DILocation(line: 47, column: 9, scope: !10440)
!10440 = distinct !DILexicalBlock(scope: !1197, file: !1195, line: 47, column: 2)
!10441 = !DILocation(line: 47, column: 7, scope: !10440)
!10442 = !DILocation(line: 47, column: 14, scope: !10443)
!10443 = !DILexicalBlockFile(scope: !10444, file: !1195, discriminator: 1)
!10444 = distinct !DILexicalBlock(scope: !10440, file: !1195, line: 47, column: 2)
!10445 = !DILocation(line: 47, column: 16, scope: !10443)
!10446 = !DILocation(line: 47, column: 2, scope: !10443)
!10447 = !DILocation(line: 48, column: 24, scope: !10448)
!10448 = distinct !DILexicalBlock(scope: !10444, file: !1195, line: 47, column: 42)
!10449 = !DILocation(line: 48, column: 11, scope: !10448)
!10450 = !DILocation(line: 48, column: 27, scope: !10448)
!10451 = !DILocation(line: 48, column: 32, scope: !10448)
!10452 = !DILocation(line: 48, column: 3, scope: !10448)
!10453 = !DILocation(line: 49, column: 16, scope: !10448)
!10454 = !DILocation(line: 49, column: 3, scope: !10448)
!10455 = !DILocation(line: 49, column: 19, scope: !10448)
!10456 = !DILocation(line: 49, column: 28, scope: !10448)
!10457 = !DILocation(line: 50, column: 16, scope: !10448)
!10458 = !DILocation(line: 50, column: 3, scope: !10448)
!10459 = !DILocation(line: 50, column: 19, scope: !10448)
!10460 = !DILocation(line: 50, column: 22, scope: !10448)
!10461 = !DILocation(line: 51, column: 2, scope: !10448)
!10462 = !DILocation(line: 47, column: 38, scope: !10463)
!10463 = !DILexicalBlockFile(scope: !10444, file: !1195, discriminator: 2)
!10464 = !DILocation(line: 47, column: 2, scope: !10463)
!10465 = !DILocation(line: 52, column: 2, scope: !1197)
!10466 = !DILocalVariable(name: "sa", arg: 1, scope: !1198, file: !1195, line: 58, type: !1201)
!10467 = !DILocation(line: 58, column: 30, scope: !1198)
!10468 = !DILocalVariable(name: "sa_len", arg: 2, scope: !1198, file: !1195, line: 58, type: !48)
!10469 = !DILocation(line: 58, column: 43, scope: !1198)
!10470 = !DILocalVariable(name: "id", arg: 3, scope: !1198, file: !1195, line: 58, type: !48)
!10471 = !DILocation(line: 58, column: 60, scope: !1198)
!10472 = !DILocalVariable(name: "index", scope: !1198, file: !1195, line: 59, type: !33)
!10473 = !DILocation(line: 59, column: 6, scope: !1198)
!10474 = !DILocalVariable(name: "now", scope: !1198, file: !1195, line: 60, type: !103)
!10475 = !DILocation(line: 60, column: 9, scope: !1198)
!10476 = !DILocation(line: 62, column: 26, scope: !1198)
!10477 = !DILocation(line: 62, column: 30, scope: !1198)
!10478 = !DILocation(line: 62, column: 38, scope: !1198)
!10479 = !DILocation(line: 62, column: 10, scope: !1198)
!10480 = !DILocation(line: 62, column: 8, scope: !1198)
!10481 = !DILocation(line: 63, column: 8, scope: !10482)
!10482 = distinct !DILexicalBlock(scope: !1198, file: !1195, line: 63, column: 6)
!10483 = !DILocation(line: 63, column: 14, scope: !10482)
!10484 = !DILocation(line: 63, column: 6, scope: !1198)
!10485 = !DILocation(line: 64, column: 46, scope: !10486)
!10486 = distinct !DILexicalBlock(scope: !10482, file: !1195, line: 63, column: 19)
!10487 = !DILocation(line: 64, column: 3, scope: !10486)
!10488 = !DILocation(line: 65, column: 2, scope: !10486)
!10489 = !DILocation(line: 66, column: 8, scope: !1198)
!10490 = !DILocation(line: 66, column: 6, scope: !1198)
!10491 = !DILocation(line: 68, column: 11, scope: !1198)
!10492 = !DILocation(line: 68, column: 18, scope: !1198)
!10493 = !DILocation(line: 68, column: 11, scope: !10494)
!10494 = !DILexicalBlockFile(scope: !1198, file: !1195, discriminator: 1)
!10495 = !DILocation(line: 68, column: 54, scope: !10496)
!10496 = !DILexicalBlockFile(scope: !1198, file: !1195, discriminator: 2)
!10497 = !DILocation(line: 68, column: 11, scope: !10496)
!10498 = !DILocation(line: 68, column: 11, scope: !10499)
!10499 = !DILexicalBlockFile(scope: !1198, file: !1195, discriminator: 3)
!10500 = !DILocation(line: 68, column: 9, scope: !10499)
!10501 = !DILocation(line: 70, column: 19, scope: !10502)
!10502 = distinct !DILexicalBlock(scope: !1198, file: !1195, line: 70, column: 6)
!10503 = !DILocation(line: 70, column: 6, scope: !10502)
!10504 = !DILocation(line: 70, column: 26, scope: !10502)
!10505 = !DILocation(line: 70, column: 32, scope: !10502)
!10506 = !DILocation(line: 70, column: 29, scope: !10502)
!10507 = !DILocation(line: 70, column: 35, scope: !10502)
!10508 = !DILocation(line: 71, column: 19, scope: !10502)
!10509 = !DILocation(line: 71, column: 6, scope: !10502)
!10510 = !DILocation(line: 71, column: 26, scope: !10502)
!10511 = !DILocation(line: 71, column: 38, scope: !10502)
!10512 = !DILocation(line: 71, column: 35, scope: !10502)
!10513 = !DILocation(line: 71, column: 45, scope: !10502)
!10514 = !DILocation(line: 72, column: 30, scope: !10502)
!10515 = !DILocation(line: 72, column: 17, scope: !10502)
!10516 = !DILocation(line: 72, column: 37, scope: !10502)
!10517 = !DILocation(line: 72, column: 42, scope: !10502)
!10518 = !DILocation(line: 72, column: 15, scope: !10502)
!10519 = !DILocation(line: 72, column: 57, scope: !10502)
!10520 = !DILocation(line: 72, column: 46, scope: !10502)
!10521 = !DILocation(line: 72, column: 61, scope: !10502)
!10522 = !DILocation(line: 72, column: 7, scope: !10502)
!10523 = !DILocation(line: 72, column: 69, scope: !10502)
!10524 = !DILocation(line: 73, column: 6, scope: !10502)
!10525 = !DILocation(line: 73, column: 25, scope: !10502)
!10526 = !DILocation(line: 73, column: 12, scope: !10502)
!10527 = !DILocation(line: 73, column: 32, scope: !10502)
!10528 = !DILocation(line: 73, column: 10, scope: !10502)
!10529 = !DILocation(line: 70, column: 6, scope: !10494)
!10530 = !DILocation(line: 74, column: 3, scope: !10531)
!10531 = distinct !DILexicalBlock(scope: !10502, file: !1195, line: 73, column: 40)
!10532 = !DILocation(line: 75, column: 3, scope: !10531)
!10533 = !DILocation(line: 78, column: 28, scope: !10534)
!10534 = distinct !DILexicalBlock(scope: !10502, file: !1195, line: 76, column: 9)
!10535 = !DILocation(line: 78, column: 16, scope: !10534)
!10536 = !DILocation(line: 78, column: 3, scope: !10534)
!10537 = !DILocation(line: 78, column: 23, scope: !10534)
!10538 = !DILocation(line: 78, column: 26, scope: !10534)
!10539 = !DILocation(line: 79, column: 34, scope: !10534)
!10540 = !DILocation(line: 79, column: 16, scope: !10534)
!10541 = !DILocation(line: 79, column: 3, scope: !10534)
!10542 = !DILocation(line: 79, column: 23, scope: !10534)
!10543 = !DILocation(line: 79, column: 32, scope: !10534)
!10544 = !DILocation(line: 80, column: 24, scope: !10534)
!10545 = !DILocation(line: 80, column: 11, scope: !10534)
!10546 = !DILocation(line: 80, column: 31, scope: !10534)
!10547 = !DILocation(line: 80, column: 36, scope: !10534)
!10548 = !DILocation(line: 80, column: 3, scope: !10534)
!10549 = !DILocation(line: 80, column: 50, scope: !10534)
!10550 = !DILocation(line: 80, column: 54, scope: !10534)
!10551 = !DILocation(line: 81, column: 32, scope: !10534)
!10552 = !DILocation(line: 81, column: 44, scope: !10534)
!10553 = !DILocation(line: 81, column: 16, scope: !10534)
!10554 = !DILocation(line: 81, column: 3, scope: !10534)
!10555 = !DILocation(line: 81, column: 23, scope: !10534)
!10556 = !DILocation(line: 81, column: 30, scope: !10534)
!10557 = !DILocation(line: 82, column: 3, scope: !10534)
!10558 = !DILocation(line: 84, column: 1, scope: !1198)
!10559 = !DILocalVariable(name: "sa", arg: 1, scope: !1206, file: !1195, line: 28, type: !1201)
!10560 = !DILocation(line: 28, column: 45, scope: !1206)
!10561 = !DILocalVariable(name: "sa_len", arg: 2, scope: !1206, file: !1195, line: 28, type: !48)
!10562 = !DILocation(line: 28, column: 58, scope: !1206)
!10563 = !DILocalVariable(name: "id", arg: 3, scope: !1206, file: !1195, line: 28, type: !48)
!10564 = !DILocation(line: 28, column: 75, scope: !1206)
!10565 = !DILocalVariable(name: "hashval", scope: !1206, file: !1195, line: 29, type: !33)
!10566 = !DILocation(line: 29, column: 6, scope: !1206)
!10567 = !DILocalVariable(name: "cp", scope: !1206, file: !1195, line: 30, type: !20)
!10568 = !DILocation(line: 30, column: 10, scope: !1206)
!10569 = !DILocalVariable(name: "cp_tail", scope: !1206, file: !1195, line: 31, type: !20)
!10570 = !DILocation(line: 31, column: 10, scope: !1206)
!10571 = !DILocation(line: 33, column: 10, scope: !1206)
!10572 = !DILocation(line: 34, column: 23, scope: !10573)
!10573 = distinct !DILexicalBlock(scope: !1206, file: !1195, line: 34, column: 2)
!10574 = !DILocation(line: 34, column: 12, scope: !10573)
!10575 = !DILocation(line: 34, column: 10, scope: !10573)
!10576 = !DILocation(line: 34, column: 37, scope: !10573)
!10577 = !DILocation(line: 34, column: 42, scope: !10573)
!10578 = !DILocation(line: 34, column: 40, scope: !10573)
!10579 = !DILocation(line: 34, column: 35, scope: !10573)
!10580 = !DILocation(line: 34, column: 7, scope: !10573)
!10581 = !DILocation(line: 34, column: 50, scope: !10582)
!10582 = !DILexicalBlockFile(scope: !10583, file: !1195, discriminator: 1)
!10583 = distinct !DILexicalBlock(scope: !10573, file: !1195, line: 34, column: 2)
!10584 = !DILocation(line: 34, column: 55, scope: !10582)
!10585 = !DILocation(line: 34, column: 53, scope: !10582)
!10586 = !DILocation(line: 34, column: 2, scope: !10582)
!10587 = !DILocation(line: 35, column: 15, scope: !10583)
!10588 = !DILocation(line: 35, column: 14, scope: !10583)
!10589 = !DILocation(line: 35, column: 11, scope: !10583)
!10590 = !DILocation(line: 35, column: 3, scope: !10583)
!10591 = !DILocation(line: 34, column: 66, scope: !10592)
!10592 = !DILexicalBlockFile(scope: !10583, file: !1195, discriminator: 2)
!10593 = !DILocation(line: 34, column: 2, scope: !10592)
!10594 = !DILocation(line: 37, column: 13, scope: !1206)
!10595 = !DILocation(line: 37, column: 10, scope: !1206)
!10596 = !DILocation(line: 38, column: 9, scope: !1206)
!10597 = !DILocation(line: 38, column: 17, scope: !1206)
!10598 = !DILocation(line: 38, column: 2, scope: !1206)
!10599 = !DILocalVariable(name: "fn", scope: !1226, file: !1224, line: 17, type: !4)
!10600 = !DILocation(line: 17, column: 21, scope: !1226)
!10601 = !DILocalVariable(name: "gl_new", scope: !1226, file: !1224, line: 18, type: !1229)
!10602 = !DILocation(line: 18, column: 10, scope: !1226)
!10603 = !DILocation(line: 20, column: 11, scope: !1226)
!10604 = !DILocation(line: 20, column: 9, scope: !1226)
!10605 = !DILocation(line: 21, column: 6, scope: !10606)
!10606 = distinct !DILexicalBlock(scope: !1226, file: !1224, line: 21, column: 6)
!10607 = !DILocation(line: 21, column: 6, scope: !1226)
!10608 = !DILocation(line: 22, column: 18, scope: !10609)
!10609 = distinct !DILexicalBlock(scope: !10606, file: !1224, line: 21, column: 14)
!10610 = !DILocation(line: 22, column: 3, scope: !10609)
!10611 = !DILocation(line: 22, column: 11, scope: !10609)
!10612 = !DILocation(line: 22, column: 16, scope: !10609)
!10613 = !DILocation(line: 23, column: 18, scope: !10609)
!10614 = !DILocation(line: 23, column: 3, scope: !10609)
!10615 = !DILocation(line: 23, column: 11, scope: !10609)
!10616 = !DILocation(line: 23, column: 16, scope: !10609)
!10617 = !DILocation(line: 24, column: 3, scope: !10609)
!10618 = !DILocation(line: 24, column: 11, scope: !10609)
!10619 = !DILocation(line: 24, column: 21, scope: !10609)
!10620 = !DILocation(line: 25, column: 2, scope: !10609)
!10621 = !DILocation(line: 27, column: 8, scope: !10622)
!10622 = distinct !DILexicalBlock(scope: !1226, file: !1224, line: 27, column: 6)
!10623 = !DILocation(line: 27, column: 14, scope: !10622)
!10624 = !DILocation(line: 27, column: 6, scope: !1226)
!10625 = !DILocation(line: 28, column: 42, scope: !10622)
!10626 = !DILocation(line: 28, column: 54, scope: !10622)
!10627 = !DILocation(line: 28, column: 46, scope: !10622)
!10628 = !DILocation(line: 28, column: 3, scope: !10622)
!10629 = !DILocation(line: 30, column: 9, scope: !1226)
!10630 = !DILocation(line: 30, column: 2, scope: !1226)
!10631 = !DILocalVariable(name: "gl_head", arg: 1, scope: !1237, file: !1224, line: 33, type: !1229)
!10632 = !DILocation(line: 33, column: 23, scope: !1237)
!10633 = !DILocalVariable(name: "list_data", arg: 2, scope: !1237, file: !1224, line: 33, type: !26)
!10634 = !DILocation(line: 33, column: 38, scope: !1237)
!10635 = !DILocalVariable(name: "gl_new", scope: !1237, file: !1224, line: 34, type: !1229)
!10636 = !DILocation(line: 34, column: 10, scope: !1237)
!10637 = !DILocation(line: 36, column: 11, scope: !1237)
!10638 = !DILocation(line: 36, column: 9, scope: !1237)
!10639 = !DILocation(line: 37, column: 6, scope: !10640)
!10640 = distinct !DILexicalBlock(scope: !1237, file: !1224, line: 37, column: 6)
!10641 = !DILocation(line: 37, column: 6, scope: !1237)
!10642 = !DILocation(line: 38, column: 23, scope: !10643)
!10643 = distinct !DILexicalBlock(scope: !10640, file: !1224, line: 37, column: 14)
!10644 = !DILocation(line: 38, column: 3, scope: !10643)
!10645 = !DILocation(line: 38, column: 11, scope: !10643)
!10646 = !DILocation(line: 38, column: 21, scope: !10643)
!10647 = !DILocation(line: 39, column: 18, scope: !10643)
!10648 = !DILocation(line: 39, column: 27, scope: !10643)
!10649 = !DILocation(line: 39, column: 3, scope: !10643)
!10650 = !DILocation(line: 39, column: 11, scope: !10643)
!10651 = !DILocation(line: 39, column: 16, scope: !10643)
!10652 = !DILocation(line: 40, column: 18, scope: !10643)
!10653 = !DILocation(line: 40, column: 3, scope: !10643)
!10654 = !DILocation(line: 40, column: 11, scope: !10643)
!10655 = !DILocation(line: 40, column: 16, scope: !10643)
!10656 = !DILocation(line: 41, column: 25, scope: !10643)
!10657 = !DILocation(line: 41, column: 3, scope: !10643)
!10658 = !DILocation(line: 41, column: 12, scope: !10643)
!10659 = !DILocation(line: 41, column: 18, scope: !10643)
!10660 = !DILocation(line: 41, column: 23, scope: !10643)
!10661 = !DILocation(line: 42, column: 19, scope: !10643)
!10662 = !DILocation(line: 42, column: 3, scope: !10643)
!10663 = !DILocation(line: 42, column: 12, scope: !10643)
!10664 = !DILocation(line: 42, column: 17, scope: !10643)
!10665 = !DILocation(line: 44, column: 3, scope: !10643)
!10666 = !DILocation(line: 48, column: 2, scope: !1237)
!10667 = !DILocation(line: 49, column: 1, scope: !1237)
!10668 = !DILocalVariable(name: "gl_head", arg: 1, scope: !1240, file: !1224, line: 51, type: !1229)
!10669 = !DILocation(line: 51, column: 28, scope: !1240)
!10670 = !DILocalVariable(name: "list_data", arg: 2, scope: !1240, file: !1224, line: 51, type: !26)
!10671 = !DILocation(line: 51, column: 43, scope: !1240)
!10672 = !DILocalVariable(name: "gl_new", scope: !1240, file: !1224, line: 52, type: !1229)
!10673 = !DILocation(line: 52, column: 10, scope: !1240)
!10674 = !DILocation(line: 54, column: 11, scope: !1240)
!10675 = !DILocation(line: 54, column: 9, scope: !1240)
!10676 = !DILocation(line: 55, column: 6, scope: !10677)
!10677 = distinct !DILexicalBlock(scope: !1240, file: !1224, line: 55, column: 6)
!10678 = !DILocation(line: 55, column: 6, scope: !1240)
!10679 = !DILocation(line: 56, column: 23, scope: !10680)
!10680 = distinct !DILexicalBlock(scope: !10677, file: !1224, line: 55, column: 14)
!10681 = !DILocation(line: 56, column: 3, scope: !10680)
!10682 = !DILocation(line: 56, column: 11, scope: !10680)
!10683 = !DILocation(line: 56, column: 21, scope: !10680)
!10684 = !DILocation(line: 57, column: 18, scope: !10680)
!10685 = !DILocation(line: 57, column: 3, scope: !10680)
!10686 = !DILocation(line: 57, column: 11, scope: !10680)
!10687 = !DILocation(line: 57, column: 16, scope: !10680)
!10688 = !DILocation(line: 58, column: 18, scope: !10680)
!10689 = !DILocation(line: 58, column: 27, scope: !10680)
!10690 = !DILocation(line: 58, column: 3, scope: !10680)
!10691 = !DILocation(line: 58, column: 11, scope: !10680)
!10692 = !DILocation(line: 58, column: 16, scope: !10680)
!10693 = !DILocation(line: 59, column: 25, scope: !10680)
!10694 = !DILocation(line: 59, column: 3, scope: !10680)
!10695 = !DILocation(line: 59, column: 12, scope: !10680)
!10696 = !DILocation(line: 59, column: 18, scope: !10680)
!10697 = !DILocation(line: 59, column: 23, scope: !10680)
!10698 = !DILocation(line: 60, column: 19, scope: !10680)
!10699 = !DILocation(line: 60, column: 3, scope: !10680)
!10700 = !DILocation(line: 60, column: 12, scope: !10680)
!10701 = !DILocation(line: 60, column: 17, scope: !10680)
!10702 = !DILocation(line: 62, column: 3, scope: !10680)
!10703 = !DILocation(line: 66, column: 2, scope: !1240)
!10704 = !DILocation(line: 67, column: 1, scope: !1240)
!10705 = !DILocalVariable(name: "list_head", arg: 1, scope: !1241, file: !1224, line: 69, type: !1229)
!10706 = !DILocation(line: 69, column: 30, scope: !1241)
!10707 = !DILocalVariable(name: "data", arg: 2, scope: !1241, file: !1224, line: 69, type: !26)
!10708 = !DILocation(line: 69, column: 47, scope: !1241)
!10709 = !DILocalVariable(name: "fcmp", arg: 3, scope: !1241, file: !1224, line: 70, type: !1244)
!10710 = !DILocation(line: 70, column: 14, scope: !1241)
!10711 = !DILocalVariable(name: "gl", scope: !1241, file: !1224, line: 71, type: !1229)
!10712 = !DILocation(line: 71, column: 10, scope: !1241)
!10713 = !DILocation(line: 73, column: 25, scope: !1241)
!10714 = !DILocation(line: 73, column: 2, scope: !1241)
!10715 = !DILocation(line: 73, column: 13, scope: !1241)
!10716 = !DILocation(line: 73, column: 23, scope: !1241)
!10717 = !DILocation(line: 74, column: 12, scope: !10718)
!10718 = distinct !DILexicalBlock(scope: !1241, file: !1224, line: 74, column: 2)
!10719 = !DILocation(line: 74, column: 23, scope: !10718)
!10720 = !DILocation(line: 74, column: 10, scope: !10718)
!10721 = !DILocation(line: 74, column: 7, scope: !10718)
!10722 = !DILocation(line: 74, column: 31, scope: !10723)
!10723 = !DILexicalBlockFile(scope: !10724, file: !1224, discriminator: 1)
!10724 = distinct !DILexicalBlock(scope: !10718, file: !1224, line: 74, column: 2)
!10725 = !DILocation(line: 74, column: 37, scope: !10723)
!10726 = !DILocation(line: 74, column: 43, scope: !10723)
!10727 = !DILocation(line: 74, column: 47, scope: !10723)
!10728 = !DILocation(line: 74, column: 29, scope: !10723)
!10729 = !DILocation(line: 74, column: 2, scope: !10723)
!10730 = !DILocation(line: 74, column: 2, scope: !10731)
!10731 = !DILexicalBlockFile(scope: !10718, file: !1224, discriminator: 2)
!10732 = !DILocation(line: 74, column: 64, scope: !10733)
!10733 = !DILexicalBlockFile(scope: !10724, file: !1224, discriminator: 3)
!10734 = !DILocation(line: 74, column: 68, scope: !10733)
!10735 = !DILocation(line: 74, column: 62, scope: !10733)
!10736 = !DILocation(line: 74, column: 2, scope: !10733)
!10737 = !DILocation(line: 76, column: 2, scope: !1241)
!10738 = !DILocation(line: 76, column: 13, scope: !1241)
!10739 = !DILocation(line: 76, column: 23, scope: !1241)
!10740 = !DILocation(line: 77, column: 6, scope: !10741)
!10741 = distinct !DILexicalBlock(scope: !1241, file: !1224, line: 77, column: 6)
!10742 = !DILocation(line: 77, column: 12, scope: !10741)
!10743 = !DILocation(line: 77, column: 9, scope: !10741)
!10744 = !DILocation(line: 77, column: 6, scope: !1241)
!10745 = !DILocation(line: 78, column: 3, scope: !10741)
!10746 = !DILocation(line: 80, column: 10, scope: !10741)
!10747 = !DILocation(line: 80, column: 3, scope: !10741)
!10748 = !DILocation(line: 81, column: 1, scope: !1241)
!10749 = !DILocalVariable(name: "gl", arg: 1, scope: !1245, file: !1224, line: 83, type: !1229)
!10750 = !DILocation(line: 83, column: 28, scope: !1245)
!10751 = !DILocalVariable(name: "p", scope: !1245, file: !1224, line: 84, type: !26)
!10752 = !DILocation(line: 84, column: 8, scope: !1245)
!10753 = !DILocation(line: 86, column: 19, scope: !1245)
!10754 = !DILocation(line: 86, column: 23, scope: !1245)
!10755 = !DILocation(line: 86, column: 2, scope: !1245)
!10756 = !DILocation(line: 86, column: 6, scope: !1245)
!10757 = !DILocation(line: 86, column: 12, scope: !1245)
!10758 = !DILocation(line: 86, column: 17, scope: !1245)
!10759 = !DILocation(line: 87, column: 19, scope: !1245)
!10760 = !DILocation(line: 87, column: 23, scope: !1245)
!10761 = !DILocation(line: 87, column: 2, scope: !1245)
!10762 = !DILocation(line: 87, column: 6, scope: !1245)
!10763 = !DILocation(line: 87, column: 12, scope: !1245)
!10764 = !DILocation(line: 87, column: 17, scope: !1245)
!10765 = !DILocation(line: 89, column: 6, scope: !1245)
!10766 = !DILocation(line: 89, column: 10, scope: !1245)
!10767 = !DILocation(line: 89, column: 4, scope: !1245)
!10768 = !DILocation(line: 90, column: 8, scope: !1245)
!10769 = !DILocation(line: 90, column: 2, scope: !1245)
!10770 = !DILocation(line: 92, column: 9, scope: !1245)
!10771 = !DILocation(line: 92, column: 2, scope: !1245)
!10772 = !DILocalVariable(name: "gl", arg: 1, scope: !1248, file: !1224, line: 95, type: !1229)
!10773 = !DILocation(line: 95, column: 28, scope: !1248)
!10774 = !DILocalVariable(name: "freefnc", arg: 2, scope: !1248, file: !1224, line: 95, type: !970)
!10775 = !DILocation(line: 95, column: 39, scope: !1248)
!10776 = !DILocalVariable(name: "gl_tmp", scope: !1248, file: !1224, line: 97, type: !1229)
!10777 = !DILocation(line: 97, column: 10, scope: !1248)
!10778 = !DILocalVariable(name: "gl_next", scope: !1248, file: !1224, line: 98, type: !1229)
!10779 = !DILocation(line: 98, column: 10, scope: !1248)
!10780 = !DILocation(line: 100, column: 7, scope: !10781)
!10781 = distinct !DILexicalBlock(scope: !1248, file: !1224, line: 100, column: 6)
!10782 = !DILocation(line: 100, column: 6, scope: !1248)
!10783 = !DILocation(line: 101, column: 3, scope: !10781)
!10784 = !DILocation(line: 103, column: 16, scope: !10785)
!10785 = distinct !DILexicalBlock(scope: !1248, file: !1224, line: 103, column: 2)
!10786 = !DILocation(line: 103, column: 20, scope: !10785)
!10787 = !DILocation(line: 103, column: 14, scope: !10785)
!10788 = !DILocation(line: 103, column: 7, scope: !10785)
!10789 = !DILocation(line: 103, column: 26, scope: !10790)
!10790 = !DILexicalBlockFile(scope: !10791, file: !1224, discriminator: 1)
!10791 = distinct !DILexicalBlock(scope: !10785, file: !1224, line: 103, column: 2)
!10792 = !DILocation(line: 103, column: 36, scope: !10790)
!10793 = !DILocation(line: 103, column: 33, scope: !10790)
!10794 = !DILocation(line: 103, column: 2, scope: !10790)
!10795 = !DILocation(line: 104, column: 13, scope: !10796)
!10796 = distinct !DILexicalBlock(scope: !10791, file: !1224, line: 103, column: 58)
!10797 = !DILocation(line: 104, column: 21, scope: !10796)
!10798 = !DILocation(line: 104, column: 11, scope: !10796)
!10799 = !DILocation(line: 105, column: 7, scope: !10800)
!10800 = distinct !DILexicalBlock(scope: !10796, file: !1224, line: 105, column: 7)
!10801 = !DILocation(line: 105, column: 15, scope: !10800)
!10802 = !DILocation(line: 105, column: 7, scope: !10796)
!10803 = !DILocation(line: 106, column: 6, scope: !10800)
!10804 = !DILocation(line: 106, column: 16, scope: !10800)
!10805 = !DILocation(line: 106, column: 24, scope: !10800)
!10806 = !DILocation(line: 106, column: 4, scope: !10800)
!10807 = !DILocation(line: 108, column: 9, scope: !10796)
!10808 = !DILocation(line: 108, column: 3, scope: !10796)
!10809 = !DILocation(line: 109, column: 2, scope: !10796)
!10810 = !DILocation(line: 103, column: 49, scope: !10811)
!10811 = !DILexicalBlockFile(scope: !10791, file: !1224, discriminator: 2)
!10812 = !DILocation(line: 103, column: 47, scope: !10811)
!10813 = !DILocation(line: 103, column: 2, scope: !10811)
!10814 = !DILocation(line: 112, column: 8, scope: !1248)
!10815 = !DILocation(line: 112, column: 2, scope: !1248)
!10816 = !DILocation(line: 114, column: 2, scope: !1248)
!10817 = !DILocation(line: 115, column: 1, scope: !1248)
!10818 = !DILocalVariable(name: "gl", arg: 1, scope: !1251, file: !1224, line: 118, type: !1229)
!10819 = !DILocation(line: 118, column: 27, scope: !1251)
!10820 = !DILocalVariable(name: "freefunc", arg: 2, scope: !1251, file: !1224, line: 118, type: !970)
!10821 = !DILocation(line: 118, column: 37, scope: !1251)
!10822 = !DILocalVariable(name: "dupfunc", arg: 3, scope: !1251, file: !1224, line: 119, type: !1254)
!10823 = !DILocation(line: 119, column: 12, scope: !1251)
!10824 = !DILocalVariable(name: "gl_new", scope: !1251, file: !1224, line: 120, type: !1229)
!10825 = !DILocation(line: 120, column: 10, scope: !1251)
!10826 = !DILocalVariable(name: "gl_tmp", scope: !1251, file: !1224, line: 121, type: !1229)
!10827 = !DILocation(line: 121, column: 10, scope: !1251)
!10828 = !DILocalVariable(name: "p", scope: !1251, file: !1224, line: 122, type: !26)
!10829 = !DILocation(line: 122, column: 8, scope: !1251)
!10830 = !DILocation(line: 124, column: 11, scope: !1251)
!10831 = !DILocation(line: 124, column: 9, scope: !1251)
!10832 = !DILocation(line: 125, column: 7, scope: !10833)
!10833 = distinct !DILexicalBlock(scope: !1251, file: !1224, line: 125, column: 6)
!10834 = !DILocation(line: 125, column: 6, scope: !1251)
!10835 = !DILocation(line: 126, column: 3, scope: !10833)
!10836 = !DILocation(line: 128, column: 2, scope: !1251)
!10837 = !DILocation(line: 128, column: 6, scope: !1251)
!10838 = !DILocation(line: 128, column: 16, scope: !1251)
!10839 = !DILocation(line: 129, column: 16, scope: !10840)
!10840 = distinct !DILexicalBlock(scope: !1251, file: !1224, line: 129, column: 2)
!10841 = !DILocation(line: 129, column: 20, scope: !10840)
!10842 = !DILocation(line: 129, column: 14, scope: !10840)
!10843 = !DILocation(line: 129, column: 7, scope: !10840)
!10844 = !DILocation(line: 129, column: 26, scope: !10845)
!10845 = !DILexicalBlockFile(scope: !10846, file: !1224, discriminator: 1)
!10846 = distinct !DILexicalBlock(scope: !10840, file: !1224, line: 129, column: 2)
!10847 = !DILocation(line: 129, column: 34, scope: !10845)
!10848 = !DILocation(line: 129, column: 2, scope: !10845)
!10849 = !DILocation(line: 130, column: 9, scope: !10850)
!10850 = distinct !DILexicalBlock(scope: !10846, file: !1224, line: 129, column: 68)
!10851 = !DILocation(line: 130, column: 19, scope: !10850)
!10852 = !DILocation(line: 130, column: 27, scope: !10850)
!10853 = !DILocation(line: 130, column: 7, scope: !10850)
!10854 = !DILocation(line: 130, column: 5, scope: !10850)
!10855 = !DILocation(line: 131, column: 8, scope: !10856)
!10856 = distinct !DILexicalBlock(scope: !10850, file: !1224, line: 131, column: 7)
!10857 = !DILocation(line: 131, column: 7, scope: !10850)
!10858 = !DILocation(line: 132, column: 18, scope: !10859)
!10859 = distinct !DILexicalBlock(scope: !10856, file: !1224, line: 131, column: 11)
!10860 = !DILocation(line: 132, column: 26, scope: !10859)
!10861 = !DILocation(line: 132, column: 4, scope: !10859)
!10862 = !DILocation(line: 133, column: 4, scope: !10859)
!10863 = !DILocation(line: 135, column: 22, scope: !10864)
!10864 = distinct !DILexicalBlock(scope: !10850, file: !1224, line: 135, column: 7)
!10865 = !DILocation(line: 135, column: 30, scope: !10864)
!10866 = !DILocation(line: 135, column: 7, scope: !10864)
!10867 = !DILocation(line: 135, column: 33, scope: !10864)
!10868 = !DILocation(line: 135, column: 7, scope: !10850)
!10869 = !DILocation(line: 136, column: 18, scope: !10870)
!10870 = distinct !DILexicalBlock(scope: !10864, file: !1224, line: 135, column: 38)
!10871 = !DILocation(line: 136, column: 26, scope: !10870)
!10872 = !DILocation(line: 136, column: 4, scope: !10870)
!10873 = !DILocation(line: 137, column: 4, scope: !10870)
!10874 = !DILocation(line: 139, column: 2, scope: !10850)
!10875 = !DILocation(line: 129, column: 54, scope: !10876)
!10876 = !DILexicalBlockFile(scope: !10846, file: !1224, discriminator: 2)
!10877 = !DILocation(line: 129, column: 62, scope: !10876)
!10878 = !DILocation(line: 129, column: 52, scope: !10876)
!10879 = !DILocation(line: 129, column: 2, scope: !10876)
!10880 = !DILocation(line: 141, column: 9, scope: !1251)
!10881 = !DILocation(line: 141, column: 2, scope: !1251)
!10882 = !DILocation(line: 142, column: 1, scope: !1251)
!10883 = !DILocalVariable(name: "list", arg: 1, scope: !1257, file: !1224, line: 144, type: !1229)
!10884 = !DILocation(line: 144, column: 24, scope: !1257)
!10885 = !DILocalVariable(name: "toadd", arg: 2, scope: !1257, file: !1224, line: 144, type: !1229)
!10886 = !DILocation(line: 144, column: 38, scope: !1257)
!10887 = !DILocation(line: 146, column: 2, scope: !1257)
!10888 = !DILocation(line: 146, column: 9, scope: !1257)
!10889 = !DILocation(line: 146, column: 19, scope: !1257)
!10890 = !DILocation(line: 147, column: 6, scope: !10891)
!10891 = distinct !DILexicalBlock(scope: !1257, file: !1224, line: 147, column: 6)
!10892 = !DILocation(line: 147, column: 13, scope: !10891)
!10893 = !DILocation(line: 147, column: 19, scope: !10891)
!10894 = !DILocation(line: 147, column: 6, scope: !1257)
!10895 = !DILocation(line: 148, column: 22, scope: !10896)
!10896 = distinct !DILexicalBlock(scope: !10891, file: !1224, line: 147, column: 30)
!10897 = !DILocation(line: 148, column: 29, scope: !10896)
!10898 = !DILocation(line: 148, column: 3, scope: !10896)
!10899 = !DILocation(line: 148, column: 9, scope: !10896)
!10900 = !DILocation(line: 148, column: 15, scope: !10896)
!10901 = !DILocation(line: 148, column: 20, scope: !10896)
!10902 = !DILocation(line: 149, column: 23, scope: !10896)
!10903 = !DILocation(line: 149, column: 29, scope: !10896)
!10904 = !DILocation(line: 149, column: 3, scope: !10896)
!10905 = !DILocation(line: 149, column: 10, scope: !10896)
!10906 = !DILocation(line: 149, column: 16, scope: !10896)
!10907 = !DILocation(line: 149, column: 21, scope: !10896)
!10908 = !DILocation(line: 150, column: 16, scope: !10896)
!10909 = !DILocation(line: 150, column: 23, scope: !10896)
!10910 = !DILocation(line: 150, column: 3, scope: !10896)
!10911 = !DILocation(line: 150, column: 9, scope: !10896)
!10912 = !DILocation(line: 150, column: 14, scope: !10896)
!10913 = !DILocation(line: 151, column: 23, scope: !10896)
!10914 = !DILocation(line: 151, column: 3, scope: !10896)
!10915 = !DILocation(line: 151, column: 10, scope: !10896)
!10916 = !DILocation(line: 151, column: 16, scope: !10896)
!10917 = !DILocation(line: 151, column: 21, scope: !10896)
!10918 = !DILocation(line: 152, column: 17, scope: !10896)
!10919 = !DILocation(line: 152, column: 3, scope: !10896)
!10920 = !DILocation(line: 152, column: 10, scope: !10896)
!10921 = !DILocation(line: 152, column: 15, scope: !10896)
!10922 = !DILocation(line: 153, column: 17, scope: !10896)
!10923 = !DILocation(line: 153, column: 3, scope: !10896)
!10924 = !DILocation(line: 153, column: 10, scope: !10896)
!10925 = !DILocation(line: 153, column: 15, scope: !10896)
!10926 = !DILocation(line: 154, column: 2, scope: !10896)
!10927 = !DILocation(line: 155, column: 1, scope: !1257)
!10928 = !DILocalVariable(name: "ttl", arg: 1, scope: !1317, file: !1261, line: 16, type: !72)
!10929 = !DILocation(line: 16, column: 24, scope: !1317)
!10930 = !DILocalVariable(name: "rd_len", arg: 2, scope: !1317, file: !1261, line: 16, type: !33)
!10931 = !DILocation(line: 16, column: 33, scope: !1317)
!10932 = !DILocalVariable(name: "rdata", arg: 3, scope: !1317, file: !1261, line: 16, type: !20)
!10933 = !DILocation(line: 16, column: 49, scope: !1317)
!10934 = !DILocalVariable(name: "ret", scope: !1317, file: !1261, line: 17, type: !1263)
!10935 = !DILocation(line: 17, column: 6, scope: !1317)
!10936 = !DILocation(line: 19, column: 8, scope: !10937)
!10937 = distinct !DILexicalBlock(scope: !1317, file: !1261, line: 19, column: 6)
!10938 = !DILocation(line: 19, column: 14, scope: !10937)
!10939 = !DILocation(line: 19, column: 6, scope: !1317)
!10940 = !DILocation(line: 20, column: 65, scope: !10937)
!10941 = !DILocation(line: 20, column: 70, scope: !10937)
!10942 = !DILocation(line: 20, column: 3, scope: !10937)
!10943 = !DILocation(line: 22, column: 23, scope: !1317)
!10944 = !DILocation(line: 22, column: 30, scope: !1317)
!10945 = !DILocation(line: 22, column: 15, scope: !1317)
!10946 = !DILocation(line: 22, column: 8, scope: !1317)
!10947 = !DILocation(line: 22, column: 6, scope: !1317)
!10948 = !DILocation(line: 23, column: 7, scope: !10949)
!10949 = distinct !DILexicalBlock(scope: !1317, file: !1261, line: 23, column: 6)
!10950 = !DILocation(line: 23, column: 6, scope: !1317)
!10951 = !DILocation(line: 24, column: 3, scope: !10949)
!10952 = !DILocation(line: 26, column: 13, scope: !1317)
!10953 = !DILocation(line: 26, column: 2, scope: !1317)
!10954 = !DILocation(line: 26, column: 7, scope: !1317)
!10955 = !DILocation(line: 26, column: 11, scope: !1317)
!10956 = !DILocation(line: 27, column: 16, scope: !1317)
!10957 = !DILocation(line: 27, column: 2, scope: !1317)
!10958 = !DILocation(line: 27, column: 7, scope: !1317)
!10959 = !DILocation(line: 27, column: 14, scope: !1317)
!10960 = !DILocation(line: 29, column: 6, scope: !10961)
!10961 = distinct !DILexicalBlock(scope: !1317, file: !1261, line: 29, column: 6)
!10962 = !DILocation(line: 29, column: 6, scope: !1317)
!10963 = !DILocation(line: 30, column: 11, scope: !10961)
!10964 = !DILocation(line: 30, column: 27, scope: !10961)
!10965 = !DILocation(line: 30, column: 34, scope: !10961)
!10966 = !DILocation(line: 30, column: 39, scope: !10961)
!10967 = !DILocation(line: 30, column: 3, scope: !10961)
!10968 = !DILocation(line: 32, column: 9, scope: !1317)
!10969 = !DILocation(line: 32, column: 2, scope: !1317)
!10970 = !DILocation(line: 33, column: 1, scope: !1317)
!10971 = !DILocalVariable(name: "ret", scope: !1320, file: !1261, line: 36, type: !1269)
!10972 = !DILocation(line: 36, column: 11, scope: !1320)
!10973 = !DILocation(line: 38, column: 8, scope: !10974)
!10974 = distinct !DILexicalBlock(scope: !1320, file: !1261, line: 38, column: 6)
!10975 = !DILocation(line: 38, column: 14, scope: !10974)
!10976 = !DILocation(line: 38, column: 6, scope: !1320)
!10977 = !DILocation(line: 39, column: 3, scope: !10974)
!10978 = !DILocation(line: 41, column: 20, scope: !1320)
!10979 = !DILocation(line: 41, column: 8, scope: !1320)
!10980 = !DILocation(line: 41, column: 6, scope: !1320)
!10981 = !DILocation(line: 42, column: 7, scope: !10982)
!10982 = distinct !DILexicalBlock(scope: !1320, file: !1261, line: 42, column: 6)
!10983 = !DILocation(line: 42, column: 6, scope: !1320)
!10984 = !DILocation(line: 43, column: 3, scope: !10982)
!10985 = !DILocation(line: 45, column: 2, scope: !1320)
!10986 = !DILocation(line: 45, column: 7, scope: !1320)
!10987 = !DILocation(line: 45, column: 12, scope: !1320)
!10988 = !DILocation(line: 46, column: 2, scope: !1320)
!10989 = !DILocation(line: 46, column: 7, scope: !1320)
!10990 = !DILocation(line: 46, column: 11, scope: !1320)
!10991 = !DILocation(line: 47, column: 2, scope: !1320)
!10992 = !DILocation(line: 47, column: 7, scope: !1320)
!10993 = !DILocation(line: 47, column: 11, scope: !1320)
!10994 = !DILocation(line: 49, column: 9, scope: !1320)
!10995 = !DILocation(line: 49, column: 2, scope: !1320)
!10996 = !DILocation(line: 50, column: 1, scope: !1320)
!10997 = !DILocalVariable(name: "rrl", arg: 1, scope: !1323, file: !1261, line: 52, type: !1269)
!10998 = !DILocation(line: 52, column: 29, scope: !1323)
!10999 = !DILocalVariable(name: "fn", scope: !1323, file: !1261, line: 53, type: !19)
!11000 = !DILocation(line: 53, column: 15, scope: !1323)
!11001 = !DILocalVariable(name: "rrl_tmp", scope: !1323, file: !1261, line: 54, type: !1269)
!11002 = !DILocation(line: 54, column: 11, scope: !1323)
!11003 = !DILocation(line: 56, column: 7, scope: !11004)
!11004 = distinct !DILexicalBlock(scope: !1323, file: !1261, line: 56, column: 6)
!11005 = !DILocation(line: 56, column: 6, scope: !1323)
!11006 = !DILocation(line: 57, column: 9, scope: !11007)
!11007 = distinct !DILexicalBlock(scope: !11008, file: !1261, line: 57, column: 7)
!11008 = distinct !DILexicalBlock(scope: !11004, file: !1261, line: 56, column: 12)
!11009 = !DILocation(line: 57, column: 15, scope: !11007)
!11010 = !DILocation(line: 57, column: 7, scope: !11008)
!11011 = !DILocation(line: 58, column: 59, scope: !11007)
!11012 = !DILocation(line: 58, column: 4, scope: !11007)
!11013 = !DILocation(line: 59, column: 3, scope: !11008)
!11014 = !DILocation(line: 62, column: 8, scope: !11015)
!11015 = distinct !DILexicalBlock(scope: !1323, file: !1261, line: 62, column: 6)
!11016 = !DILocation(line: 62, column: 14, scope: !11015)
!11017 = !DILocation(line: 62, column: 6, scope: !1323)
!11018 = !DILocation(line: 63, column: 40, scope: !11015)
!11019 = !DILocation(line: 63, column: 44, scope: !11015)
!11020 = !DILocation(line: 63, column: 3, scope: !11015)
!11021 = !DILocation(line: 65, column: 2, scope: !1323)
!11022 = !DILocation(line: 65, column: 21, scope: !11023)
!11023 = !DILexicalBlockFile(scope: !11024, file: !1261, discriminator: 1)
!11024 = distinct !DILexicalBlock(scope: !11025, file: !1261, line: 65, column: 2)
!11025 = distinct !DILexicalBlock(scope: !1323, file: !1261, line: 65, column: 2)
!11026 = !DILocation(line: 65, column: 26, scope: !11023)
!11027 = !DILocation(line: 65, column: 2, scope: !11023)
!11028 = !DILocation(line: 66, column: 7, scope: !11029)
!11029 = distinct !DILexicalBlock(scope: !11030, file: !1261, line: 66, column: 7)
!11030 = distinct !DILexicalBlock(scope: !11024, file: !1261, line: 65, column: 47)
!11031 = !DILocation(line: 66, column: 12, scope: !11029)
!11032 = !DILocation(line: 66, column: 7, scope: !11030)
!11033 = !DILocation(line: 67, column: 10, scope: !11034)
!11034 = distinct !DILexicalBlock(scope: !11035, file: !1261, line: 67, column: 8)
!11035 = distinct !DILexicalBlock(scope: !11029, file: !1261, line: 66, column: 17)
!11036 = !DILocation(line: 67, column: 16, scope: !11034)
!11037 = !DILocation(line: 67, column: 8, scope: !11035)
!11038 = !DILocation(line: 68, column: 39, scope: !11034)
!11039 = !DILocation(line: 68, column: 43, scope: !11034)
!11040 = !DILocation(line: 68, column: 48, scope: !11034)
!11041 = !DILocation(line: 68, column: 5, scope: !11034)
!11042 = !DILocation(line: 69, column: 10, scope: !11035)
!11043 = !DILocation(line: 69, column: 15, scope: !11035)
!11044 = !DILocation(line: 69, column: 4, scope: !11035)
!11045 = !DILocation(line: 70, column: 3, scope: !11035)
!11046 = !DILocation(line: 71, column: 13, scope: !11030)
!11047 = !DILocation(line: 71, column: 18, scope: !11030)
!11048 = !DILocation(line: 71, column: 11, scope: !11030)
!11049 = !DILocation(line: 72, column: 9, scope: !11030)
!11050 = !DILocation(line: 72, column: 3, scope: !11030)
!11051 = !DILocation(line: 73, column: 2, scope: !11030)
!11052 = !DILocation(line: 65, column: 38, scope: !11053)
!11053 = !DILexicalBlockFile(scope: !11024, file: !1261, discriminator: 2)
!11054 = !DILocation(line: 65, column: 36, scope: !11053)
!11055 = !DILocation(line: 65, column: 2, scope: !11053)
!11056 = !DILocation(line: 74, column: 8, scope: !1323)
!11057 = !DILocation(line: 74, column: 2, scope: !1323)
!11058 = !DILocation(line: 76, column: 2, scope: !1323)
!11059 = !DILocation(line: 77, column: 1, scope: !1323)
!11060 = !DILocalVariable(name: "rrl", arg: 1, scope: !1326, file: !1261, line: 79, type: !1269)
!11061 = !DILocation(line: 79, column: 32, scope: !1326)
!11062 = !DILocalVariable(name: "ttl", arg: 2, scope: !1326, file: !1261, line: 79, type: !72)
!11063 = !DILocation(line: 79, column: 46, scope: !1326)
!11064 = !DILocalVariable(name: "rd_len", arg: 3, scope: !1326, file: !1261, line: 79, type: !33)
!11065 = !DILocation(line: 79, column: 55, scope: !1326)
!11066 = !DILocalVariable(name: "rdata", arg: 4, scope: !1326, file: !1261, line: 79, type: !20)
!11067 = !DILocation(line: 79, column: 71, scope: !1326)
!11068 = !DILocalVariable(name: "rrl_tmp", scope: !1326, file: !1261, line: 80, type: !1269)
!11069 = !DILocation(line: 80, column: 11, scope: !1326)
!11070 = !DILocation(line: 82, column: 8, scope: !11071)
!11071 = distinct !DILexicalBlock(scope: !1326, file: !1261, line: 82, column: 6)
!11072 = !DILocation(line: 82, column: 14, scope: !11071)
!11073 = !DILocation(line: 82, column: 6, scope: !1326)
!11074 = !DILocation(line: 83, column: 70, scope: !11071)
!11075 = !DILocation(line: 83, column: 75, scope: !11071)
!11076 = !DILocation(line: 83, column: 3, scope: !11071)
!11077 = !DILocation(line: 85, column: 24, scope: !1326)
!11078 = !DILocation(line: 85, column: 12, scope: !1326)
!11079 = !DILocation(line: 85, column: 10, scope: !1326)
!11080 = !DILocation(line: 86, column: 7, scope: !11081)
!11081 = distinct !DILexicalBlock(scope: !1326, file: !1261, line: 86, column: 6)
!11082 = !DILocation(line: 86, column: 6, scope: !1326)
!11083 = !DILocation(line: 87, column: 3, scope: !11081)
!11084 = !DILocation(line: 89, column: 27, scope: !1326)
!11085 = !DILocation(line: 89, column: 32, scope: !1326)
!11086 = !DILocation(line: 89, column: 40, scope: !1326)
!11087 = !DILocation(line: 89, column: 17, scope: !1326)
!11088 = !DILocation(line: 89, column: 2, scope: !1326)
!11089 = !DILocation(line: 89, column: 11, scope: !1326)
!11090 = !DILocation(line: 89, column: 15, scope: !1326)
!11091 = !DILocation(line: 90, column: 7, scope: !11092)
!11092 = distinct !DILexicalBlock(scope: !1326, file: !1261, line: 90, column: 6)
!11093 = !DILocation(line: 90, column: 16, scope: !11092)
!11094 = !DILocation(line: 90, column: 6, scope: !1326)
!11095 = !DILocation(line: 91, column: 9, scope: !11096)
!11096 = distinct !DILexicalBlock(scope: !11092, file: !1261, line: 90, column: 21)
!11097 = !DILocation(line: 91, column: 3, scope: !11096)
!11098 = !DILocation(line: 92, column: 3, scope: !11096)
!11099 = !DILocation(line: 94, column: 18, scope: !1326)
!11100 = !DILocation(line: 94, column: 2, scope: !1326)
!11101 = !DILocation(line: 94, column: 11, scope: !1326)
!11102 = !DILocation(line: 94, column: 16, scope: !1326)
!11103 = !DILocation(line: 95, column: 17, scope: !1326)
!11104 = !DILocation(line: 95, column: 22, scope: !1326)
!11105 = !DILocation(line: 95, column: 26, scope: !1326)
!11106 = !DILocation(line: 95, column: 2, scope: !1326)
!11107 = !DILocation(line: 95, column: 11, scope: !1326)
!11108 = !DILocation(line: 95, column: 15, scope: !1326)
!11109 = !DILocation(line: 97, column: 9, scope: !1326)
!11110 = !DILocation(line: 97, column: 2, scope: !1326)
!11111 = !DILocation(line: 98, column: 1, scope: !1326)
!11112 = !DILocalVariable(name: "n", arg: 1, scope: !1329, file: !1261, line: 100, type: !33)
!11113 = !DILocation(line: 100, column: 25, scope: !1329)
!11114 = !DILocalVariable(name: "rrset", arg: 2, scope: !1329, file: !1261, line: 100, type: !1278)
!11115 = !DILocation(line: 100, column: 35, scope: !1329)
!11116 = !DILocalVariable(name: "offset", scope: !1329, file: !1261, line: 101, type: !48)
!11117 = !DILocation(line: 101, column: 11, scope: !1329)
!11118 = !DILocation(line: 103, column: 37, scope: !1329)
!11119 = !DILocation(line: 103, column: 44, scope: !1329)
!11120 = !DILocation(line: 103, column: 49, scope: !1329)
!11121 = !DILocation(line: 103, column: 51, scope: !1329)
!11122 = !DILocation(line: 104, column: 27, scope: !1329)
!11123 = !DILocation(line: 104, column: 25, scope: !1329)
!11124 = !DILocation(line: 103, column: 71, scope: !1329)
!11125 = !DILocation(line: 103, column: 11, scope: !1329)
!11126 = !DILocation(line: 103, column: 9, scope: !1329)
!11127 = !DILocation(line: 105, column: 29, scope: !1329)
!11128 = !DILocation(line: 105, column: 36, scope: !1329)
!11129 = !DILocation(line: 105, column: 41, scope: !1329)
!11130 = !DILocation(line: 105, column: 46, scope: !1329)
!11131 = !DILocation(line: 105, column: 44, scope: !1329)
!11132 = !DILocation(line: 105, column: 9, scope: !1329)
!11133 = !DILocation(line: 105, column: 2, scope: !1329)
!11134 = !DILocalVariable(name: "rrsp", arg: 1, scope: !1332, file: !1261, line: 108, type: !1278)
!11135 = !DILocation(line: 108, column: 35, scope: !1332)
!11136 = !DILocalVariable(name: "rrl", scope: !1332, file: !1261, line: 109, type: !1269)
!11137 = !DILocation(line: 109, column: 11, scope: !1332)
!11138 = !DILocalVariable(name: "rrl_tmp", scope: !1332, file: !1261, line: 109, type: !1269)
!11139 = !DILocation(line: 109, column: 17, scope: !1332)
!11140 = !DILocalVariable(name: "rrp", scope: !1332, file: !1261, line: 110, type: !1263)
!11141 = !DILocation(line: 110, column: 6, scope: !1332)
!11142 = !DILocalVariable(name: "i", scope: !1332, file: !1261, line: 111, type: !33)
!11143 = !DILocation(line: 111, column: 6, scope: !1332)
!11144 = !DILocation(line: 113, column: 8, scope: !1332)
!11145 = !DILocation(line: 113, column: 6, scope: !1332)
!11146 = !DILocation(line: 114, column: 7, scope: !11147)
!11147 = distinct !DILexicalBlock(scope: !1332, file: !1261, line: 114, column: 6)
!11148 = !DILocation(line: 114, column: 6, scope: !1332)
!11149 = !DILocation(line: 115, column: 3, scope: !11147)
!11150 = !DILocation(line: 117, column: 7, scope: !11151)
!11151 = distinct !DILexicalBlock(scope: !1332, file: !1261, line: 117, column: 6)
!11152 = !DILocation(line: 117, column: 13, scope: !11151)
!11153 = !DILocation(line: 117, column: 18, scope: !11151)
!11154 = !DILocation(line: 117, column: 6, scope: !1332)
!11155 = !DILocation(line: 118, column: 10, scope: !11151)
!11156 = !DILocation(line: 118, column: 3, scope: !11151)
!11157 = !DILocation(line: 120, column: 9, scope: !11158)
!11158 = distinct !DILexicalBlock(scope: !1332, file: !1261, line: 120, column: 2)
!11159 = !DILocation(line: 120, column: 7, scope: !11158)
!11160 = !DILocation(line: 120, column: 14, scope: !11161)
!11161 = !DILexicalBlockFile(scope: !11162, file: !1261, discriminator: 1)
!11162 = distinct !DILexicalBlock(scope: !11158, file: !1261, line: 120, column: 2)
!11163 = !DILocation(line: 120, column: 18, scope: !11161)
!11164 = !DILocation(line: 120, column: 24, scope: !11161)
!11165 = !DILocation(line: 120, column: 29, scope: !11161)
!11166 = !DILocation(line: 120, column: 32, scope: !11161)
!11167 = !DILocation(line: 120, column: 16, scope: !11161)
!11168 = !DILocation(line: 120, column: 2, scope: !11161)
!11169 = !DILocation(line: 121, column: 17, scope: !11170)
!11170 = distinct !DILexicalBlock(scope: !11162, file: !1261, line: 120, column: 47)
!11171 = !DILocation(line: 121, column: 23, scope: !11170)
!11172 = !DILocation(line: 121, column: 28, scope: !11170)
!11173 = !DILocation(line: 121, column: 32, scope: !11170)
!11174 = !DILocation(line: 121, column: 30, scope: !11170)
!11175 = !DILocation(line: 121, column: 9, scope: !11170)
!11176 = !DILocation(line: 121, column: 7, scope: !11170)
!11177 = !DILocation(line: 122, column: 26, scope: !11170)
!11178 = !DILocation(line: 122, column: 31, scope: !11170)
!11179 = !DILocation(line: 122, column: 36, scope: !11170)
!11180 = !DILocation(line: 122, column: 41, scope: !11170)
!11181 = !DILocation(line: 122, column: 46, scope: !11170)
!11182 = !DILocation(line: 122, column: 54, scope: !11170)
!11183 = !DILocation(line: 122, column: 13, scope: !11170)
!11184 = !DILocation(line: 122, column: 11, scope: !11170)
!11185 = !DILocation(line: 123, column: 8, scope: !11186)
!11186 = distinct !DILexicalBlock(scope: !11170, file: !1261, line: 123, column: 7)
!11187 = !DILocation(line: 123, column: 7, scope: !11170)
!11188 = !DILocation(line: 124, column: 18, scope: !11189)
!11189 = distinct !DILexicalBlock(scope: !11186, file: !1261, line: 123, column: 17)
!11190 = !DILocation(line: 124, column: 4, scope: !11189)
!11191 = !DILocation(line: 125, column: 4, scope: !11189)
!11192 = !DILocation(line: 127, column: 9, scope: !11170)
!11193 = !DILocation(line: 127, column: 7, scope: !11170)
!11194 = !DILocation(line: 128, column: 2, scope: !11170)
!11195 = !DILocation(line: 120, column: 43, scope: !11196)
!11196 = !DILexicalBlockFile(scope: !11162, file: !1261, discriminator: 2)
!11197 = !DILocation(line: 120, column: 2, scope: !11196)
!11198 = !DILocation(line: 130, column: 9, scope: !1332)
!11199 = !DILocation(line: 130, column: 2, scope: !1332)
!11200 = !DILocation(line: 131, column: 1, scope: !1332)
!11201 = !DILocalVariable(name: "ret", scope: !1335, file: !1261, line: 134, type: !1278)
!11202 = !DILocation(line: 134, column: 9, scope: !1335)
!11203 = !DILocation(line: 136, column: 18, scope: !1335)
!11204 = !DILocation(line: 136, column: 8, scope: !1335)
!11205 = !DILocation(line: 136, column: 6, scope: !1335)
!11206 = !DILocation(line: 137, column: 7, scope: !11207)
!11207 = distinct !DILexicalBlock(scope: !1335, file: !1261, line: 137, column: 6)
!11208 = !DILocation(line: 137, column: 6, scope: !1335)
!11209 = !DILocation(line: 138, column: 3, scope: !11207)
!11210 = !DILocation(line: 140, column: 2, scope: !1335)
!11211 = !DILocation(line: 140, column: 7, scope: !1335)
!11212 = !DILocation(line: 140, column: 15, scope: !1335)
!11213 = !DILocation(line: 141, column: 2, scope: !1335)
!11214 = !DILocation(line: 141, column: 7, scope: !1335)
!11215 = !DILocation(line: 141, column: 11, scope: !1335)
!11216 = !DILocation(line: 141, column: 13, scope: !1335)
!11217 = !DILocation(line: 143, column: 2, scope: !1335)
!11218 = !DILocation(line: 143, column: 7, scope: !1335)
!11219 = !DILocation(line: 143, column: 16, scope: !1335)
!11220 = !DILocation(line: 144, column: 2, scope: !1335)
!11221 = !DILocation(line: 144, column: 7, scope: !1335)
!11222 = !DILocation(line: 144, column: 12, scope: !1335)
!11223 = !DILocation(line: 144, column: 14, scope: !1335)
!11224 = !DILocation(line: 146, column: 2, scope: !1335)
!11225 = !DILocation(line: 146, column: 7, scope: !1335)
!11226 = !DILocation(line: 146, column: 13, scope: !1335)
!11227 = !DILocation(line: 148, column: 8, scope: !11228)
!11228 = distinct !DILexicalBlock(scope: !1335, file: !1261, line: 148, column: 6)
!11229 = !DILocation(line: 148, column: 14, scope: !11228)
!11230 = !DILocation(line: 148, column: 6, scope: !1335)
!11231 = !DILocation(line: 149, column: 53, scope: !11228)
!11232 = !DILocation(line: 149, column: 3, scope: !11228)
!11233 = !DILocation(line: 151, column: 9, scope: !1335)
!11234 = !DILocation(line: 151, column: 2, scope: !1335)
!11235 = !DILocation(line: 152, column: 1, scope: !1335)
!11236 = !DILocalVariable(name: "r_type", arg: 1, scope: !1338, file: !1261, line: 154, type: !48)
!11237 = !DILocation(line: 154, column: 31, scope: !1338)
!11238 = !DILocalVariable(name: "r_class", arg: 2, scope: !1338, file: !1261, line: 154, type: !48)
!11239 = !DILocation(line: 154, column: 48, scope: !1338)
!11240 = !DILocalVariable(name: "owner_len", arg: 3, scope: !1338, file: !1261, line: 154, type: !48)
!11241 = !DILocation(line: 154, column: 66, scope: !1338)
!11242 = !DILocalVariable(name: "owner", arg: 4, scope: !1338, file: !1261, line: 155, type: !20)
!11243 = !DILocation(line: 155, column: 16, scope: !1338)
!11244 = !DILocalVariable(name: "rrl", arg: 5, scope: !1338, file: !1261, line: 155, type: !1269)
!11245 = !DILocation(line: 155, column: 32, scope: !1338)
!11246 = !DILocalVariable(name: "rrl_tmp", scope: !1338, file: !1261, line: 156, type: !1269)
!11247 = !DILocation(line: 156, column: 11, scope: !1338)
!11248 = !DILocalVariable(name: "len", scope: !1338, file: !1261, line: 157, type: !33)
!11249 = !DILocation(line: 157, column: 6, scope: !1338)
!11250 = !DILocalVariable(name: "rrs", scope: !1338, file: !1261, line: 158, type: !1278)
!11251 = !DILocation(line: 158, column: 9, scope: !1338)
!11252 = !DILocation(line: 160, column: 8, scope: !11253)
!11253 = distinct !DILexicalBlock(scope: !1338, file: !1261, line: 160, column: 6)
!11254 = !DILocation(line: 160, column: 14, scope: !11253)
!11255 = !DILocation(line: 160, column: 6, scope: !1338)
!11256 = !DILocation(line: 162, column: 22, scope: !11253)
!11257 = !DILocation(line: 162, column: 8, scope: !11253)
!11258 = !DILocation(line: 162, column: 46, scope: !11253)
!11259 = !DILocation(line: 162, column: 31, scope: !11260)
!11260 = !DILexicalBlockFile(scope: !11253, file: !1261, discriminator: 1)
!11261 = !DILocation(line: 161, column: 3, scope: !11253)
!11262 = !DILocation(line: 164, column: 8, scope: !1338)
!11263 = !DILocation(line: 164, column: 6, scope: !1338)
!11264 = !DILocation(line: 165, column: 7, scope: !11265)
!11265 = distinct !DILexicalBlock(scope: !1338, file: !1261, line: 165, column: 6)
!11266 = !DILocation(line: 165, column: 6, scope: !1338)
!11267 = !DILocation(line: 166, column: 3, scope: !11265)
!11268 = !DILocation(line: 169, column: 8, scope: !1338)
!11269 = !DILocation(line: 169, column: 18, scope: !1338)
!11270 = !DILocation(line: 169, column: 6, scope: !1338)
!11271 = !DILocation(line: 170, column: 23, scope: !1338)
!11272 = !DILocation(line: 170, column: 15, scope: !1338)
!11273 = !DILocation(line: 170, column: 2, scope: !1338)
!11274 = !DILocation(line: 170, column: 7, scope: !1338)
!11275 = !DILocation(line: 170, column: 11, scope: !1338)
!11276 = !DILocation(line: 170, column: 13, scope: !1338)
!11277 = !DILocation(line: 171, column: 7, scope: !11278)
!11278 = distinct !DILexicalBlock(scope: !1338, file: !1261, line: 171, column: 6)
!11279 = !DILocation(line: 171, column: 12, scope: !11278)
!11280 = !DILocation(line: 171, column: 16, scope: !11278)
!11281 = !DILocation(line: 171, column: 6, scope: !1338)
!11282 = !DILocation(line: 172, column: 15, scope: !11283)
!11283 = distinct !DILexicalBlock(scope: !11278, file: !1261, line: 171, column: 19)
!11284 = !DILocation(line: 172, column: 3, scope: !11283)
!11285 = !DILocation(line: 173, column: 3, scope: !11283)
!11286 = !DILocation(line: 176, column: 17, scope: !1338)
!11287 = !DILocation(line: 176, column: 2, scope: !1338)
!11288 = !DILocation(line: 176, column: 7, scope: !1338)
!11289 = !DILocation(line: 176, column: 15, scope: !1338)
!11290 = !DILocation(line: 177, column: 26, scope: !1338)
!11291 = !DILocation(line: 177, column: 2, scope: !1338)
!11292 = !DILocation(line: 177, column: 7, scope: !1338)
!11293 = !DILocation(line: 177, column: 11, scope: !1338)
!11294 = !DILocation(line: 177, column: 17, scope: !1338)
!11295 = !DILocation(line: 177, column: 24, scope: !1338)
!11296 = !DILocation(line: 178, column: 27, scope: !1338)
!11297 = !DILocation(line: 178, column: 2, scope: !1338)
!11298 = !DILocation(line: 178, column: 7, scope: !1338)
!11299 = !DILocation(line: 178, column: 11, scope: !1338)
!11300 = !DILocation(line: 178, column: 17, scope: !1338)
!11301 = !DILocation(line: 178, column: 25, scope: !1338)
!11302 = !DILocation(line: 179, column: 29, scope: !1338)
!11303 = !DILocation(line: 179, column: 2, scope: !1338)
!11304 = !DILocation(line: 179, column: 7, scope: !1338)
!11305 = !DILocation(line: 179, column: 11, scope: !1338)
!11306 = !DILocation(line: 179, column: 17, scope: !1338)
!11307 = !DILocation(line: 179, column: 27, scope: !1338)
!11308 = !DILocation(line: 180, column: 10, scope: !1338)
!11309 = !DILocation(line: 180, column: 29, scope: !1338)
!11310 = !DILocation(line: 180, column: 36, scope: !1338)
!11311 = !DILocation(line: 180, column: 2, scope: !1338)
!11312 = !DILocation(line: 183, column: 7, scope: !11313)
!11313 = distinct !DILexicalBlock(scope: !1338, file: !1261, line: 183, column: 6)
!11314 = !DILocation(line: 183, column: 6, scope: !1338)
!11315 = !DILocation(line: 184, column: 10, scope: !11313)
!11316 = !DILocation(line: 184, column: 3, scope: !11313)
!11317 = !DILocation(line: 187, column: 10, scope: !1338)
!11318 = !DILocation(line: 187, column: 15, scope: !1338)
!11319 = !DILocation(line: 187, column: 19, scope: !1338)
!11320 = !DILocation(line: 187, column: 9, scope: !1338)
!11321 = !DILocation(line: 187, column: 24, scope: !1338)
!11322 = !DILocation(line: 187, column: 43, scope: !1338)
!11323 = !DILocation(line: 187, column: 8, scope: !1338)
!11324 = !DILocation(line: 187, column: 6, scope: !1338)
!11325 = !DILocation(line: 188, column: 10, scope: !1338)
!11326 = !DILocation(line: 188, column: 14, scope: !1338)
!11327 = !DILocation(line: 188, column: 18, scope: !1338)
!11328 = !DILocation(line: 188, column: 9, scope: !1338)
!11329 = !DILocation(line: 188, column: 9, scope: !11330)
!11330 = !DILexicalBlockFile(scope: !1338, file: !1261, discriminator: 1)
!11331 = !DILocation(line: 188, column: 35, scope: !11332)
!11332 = !DILexicalBlockFile(scope: !1338, file: !1261, discriminator: 2)
!11333 = !DILocation(line: 188, column: 39, scope: !11332)
!11334 = !DILocation(line: 188, column: 33, scope: !11332)
!11335 = !DILocation(line: 188, column: 9, scope: !11332)
!11336 = !DILocation(line: 188, column: 9, scope: !11337)
!11337 = !DILexicalBlockFile(scope: !1338, file: !1261, discriminator: 3)
!11338 = !DILocation(line: 188, column: 6, scope: !11337)
!11339 = !DILocation(line: 189, column: 17, scope: !11340)
!11340 = distinct !DILexicalBlock(scope: !1338, file: !1261, line: 189, column: 2)
!11341 = !DILocation(line: 189, column: 15, scope: !11340)
!11342 = !DILocation(line: 189, column: 7, scope: !11340)
!11343 = !DILocation(line: 189, column: 22, scope: !11344)
!11344 = !DILexicalBlockFile(scope: !11345, file: !1261, discriminator: 1)
!11345 = distinct !DILexicalBlock(scope: !11340, file: !1261, line: 189, column: 2)
!11346 = !DILocation(line: 189, column: 31, scope: !11344)
!11347 = !DILocation(line: 189, column: 2, scope: !11344)
!11348 = !DILocation(line: 190, column: 21, scope: !11349)
!11349 = distinct !DILexicalBlock(scope: !11345, file: !1261, line: 189, column: 62)
!11350 = !DILocation(line: 190, column: 3, scope: !11349)
!11351 = !DILocation(line: 190, column: 12, scope: !11349)
!11352 = !DILocation(line: 190, column: 19, scope: !11349)
!11353 = !DILocation(line: 192, column: 24, scope: !11349)
!11354 = !DILocation(line: 192, column: 33, scope: !11349)
!11355 = !DILocation(line: 192, column: 38, scope: !11349)
!11356 = !DILocation(line: 192, column: 22, scope: !11349)
!11357 = !DILocation(line: 192, column: 7, scope: !11349)
!11358 = !DILocation(line: 193, column: 11, scope: !11349)
!11359 = !DILocation(line: 193, column: 15, scope: !11349)
!11360 = !DILocation(line: 193, column: 19, scope: !11349)
!11361 = !DILocation(line: 193, column: 10, scope: !11349)
!11362 = !DILocation(line: 193, column: 10, scope: !11363)
!11363 = !DILexicalBlockFile(scope: !11349, file: !1261, discriminator: 1)
!11364 = !DILocation(line: 193, column: 36, scope: !11365)
!11365 = !DILexicalBlockFile(scope: !11349, file: !1261, discriminator: 2)
!11366 = !DILocation(line: 193, column: 40, scope: !11365)
!11367 = !DILocation(line: 193, column: 34, scope: !11365)
!11368 = !DILocation(line: 193, column: 10, scope: !11365)
!11369 = !DILocation(line: 193, column: 10, scope: !11370)
!11370 = !DILexicalBlockFile(scope: !11349, file: !1261, discriminator: 3)
!11371 = !DILocation(line: 193, column: 7, scope: !11370)
!11372 = !DILocation(line: 194, column: 2, scope: !11349)
!11373 = !DILocation(line: 189, column: 47, scope: !11374)
!11374 = !DILexicalBlockFile(scope: !11345, file: !1261, discriminator: 2)
!11375 = !DILocation(line: 189, column: 56, scope: !11374)
!11376 = !DILocation(line: 189, column: 45, scope: !11374)
!11377 = !DILocation(line: 189, column: 2, scope: !11374)
!11378 = !DILocation(line: 196, column: 8, scope: !11379)
!11379 = distinct !DILexicalBlock(scope: !1338, file: !1261, line: 196, column: 6)
!11380 = !DILocation(line: 196, column: 14, scope: !11379)
!11381 = !DILocation(line: 196, column: 6, scope: !1338)
!11382 = !DILocation(line: 197, column: 55, scope: !11379)
!11383 = !DILocation(line: 197, column: 3, scope: !11379)
!11384 = !DILocation(line: 199, column: 24, scope: !1338)
!11385 = !DILocation(line: 199, column: 16, scope: !1338)
!11386 = !DILocation(line: 199, column: 2, scope: !1338)
!11387 = !DILocation(line: 199, column: 7, scope: !1338)
!11388 = !DILocation(line: 199, column: 12, scope: !1338)
!11389 = !DILocation(line: 199, column: 14, scope: !1338)
!11390 = !DILocation(line: 200, column: 7, scope: !11391)
!11391 = distinct !DILexicalBlock(scope: !1338, file: !1261, line: 200, column: 6)
!11392 = !DILocation(line: 200, column: 12, scope: !11391)
!11393 = !DILocation(line: 200, column: 17, scope: !11391)
!11394 = !DILocation(line: 200, column: 6, scope: !1338)
!11395 = !DILocation(line: 201, column: 15, scope: !11396)
!11396 = distinct !DILexicalBlock(scope: !11391, file: !1261, line: 200, column: 20)
!11397 = !DILocation(line: 201, column: 3, scope: !11396)
!11398 = !DILocation(line: 202, column: 3, scope: !11396)
!11399 = !DILocation(line: 204, column: 18, scope: !1338)
!11400 = !DILocation(line: 204, column: 2, scope: !1338)
!11401 = !DILocation(line: 204, column: 7, scope: !1338)
!11402 = !DILocation(line: 204, column: 16, scope: !1338)
!11403 = !DILocation(line: 207, column: 26, scope: !1338)
!11404 = !DILocation(line: 207, column: 31, scope: !1338)
!11405 = !DILocation(line: 207, column: 35, scope: !1338)
!11406 = !DILocation(line: 207, column: 2, scope: !1338)
!11407 = !DILocation(line: 207, column: 7, scope: !1338)
!11408 = !DILocation(line: 207, column: 12, scope: !1338)
!11409 = !DILocation(line: 207, column: 15, scope: !1338)
!11410 = !DILocation(line: 207, column: 24, scope: !1338)
!11411 = !DILocation(line: 208, column: 17, scope: !11412)
!11412 = distinct !DILexicalBlock(scope: !1338, file: !1261, line: 208, column: 2)
!11413 = !DILocation(line: 208, column: 15, scope: !11412)
!11414 = !DILocation(line: 208, column: 7, scope: !11412)
!11415 = !DILocation(line: 208, column: 22, scope: !11416)
!11416 = !DILexicalBlockFile(scope: !11417, file: !1261, discriminator: 1)
!11417 = distinct !DILexicalBlock(scope: !11412, file: !1261, line: 208, column: 2)
!11418 = !DILocation(line: 208, column: 31, scope: !11416)
!11419 = !DILocation(line: 208, column: 2, scope: !11416)
!11420 = !DILocation(line: 209, column: 45, scope: !11421)
!11421 = distinct !DILexicalBlock(scope: !11417, file: !1261, line: 208, column: 62)
!11422 = !DILocation(line: 209, column: 54, scope: !11421)
!11423 = !DILocation(line: 209, column: 3, scope: !11421)
!11424 = !DILocation(line: 209, column: 43, scope: !11421)
!11425 = !DILocation(line: 210, column: 11, scope: !11421)
!11426 = !DILocation(line: 210, column: 16, scope: !11421)
!11427 = !DILocation(line: 210, column: 21, scope: !11421)
!11428 = !DILocation(line: 210, column: 25, scope: !11421)
!11429 = !DILocation(line: 210, column: 34, scope: !11421)
!11430 = !DILocation(line: 210, column: 23, scope: !11421)
!11431 = !DILocation(line: 210, column: 53, scope: !11421)
!11432 = !DILocation(line: 210, column: 62, scope: !11421)
!11433 = !DILocation(line: 210, column: 3, scope: !11421)
!11434 = !DILocation(line: 210, column: 67, scope: !11421)
!11435 = !DILocation(line: 210, column: 76, scope: !11421)
!11436 = !DILocation(line: 210, column: 81, scope: !11421)
!11437 = !DILocation(line: 210, column: 88, scope: !11421)
!11438 = !DILocation(line: 211, column: 2, scope: !11421)
!11439 = !DILocation(line: 208, column: 47, scope: !11440)
!11440 = !DILexicalBlockFile(scope: !11417, file: !1261, discriminator: 2)
!11441 = !DILocation(line: 208, column: 56, scope: !11440)
!11442 = !DILocation(line: 208, column: 45, scope: !11440)
!11443 = !DILocation(line: 208, column: 2, scope: !11440)
!11444 = !DILocation(line: 213, column: 9, scope: !1338)
!11445 = !DILocation(line: 213, column: 2, scope: !1338)
!11446 = !DILocation(line: 214, column: 1, scope: !1338)
!11447 = !DILocalVariable(name: "rrset", arg: 1, scope: !1345, file: !1261, line: 248, type: !1278)
!11448 = !DILocation(line: 248, column: 25, scope: !1345)
!11449 = !DILocation(line: 250, column: 6, scope: !11450)
!11450 = distinct !DILexicalBlock(scope: !1345, file: !1261, line: 250, column: 6)
!11451 = !DILocation(line: 250, column: 13, scope: !11450)
!11452 = !DILocation(line: 250, column: 19, scope: !11450)
!11453 = !DILocation(line: 250, column: 6, scope: !1345)
!11454 = !DILocation(line: 251, column: 9, scope: !11455)
!11455 = distinct !DILexicalBlock(scope: !11456, file: !1261, line: 251, column: 7)
!11456 = distinct !DILexicalBlock(scope: !11450, file: !1261, line: 250, column: 25)
!11457 = !DILocation(line: 251, column: 15, scope: !11455)
!11458 = !DILocation(line: 251, column: 7, scope: !11456)
!11459 = !DILocation(line: 253, column: 5, scope: !11455)
!11460 = !DILocation(line: 253, column: 12, scope: !11455)
!11461 = !DILocation(line: 253, column: 19, scope: !11455)
!11462 = !DILocation(line: 252, column: 4, scope: !11455)
!11463 = !DILocation(line: 255, column: 7, scope: !11464)
!11464 = distinct !DILexicalBlock(scope: !11456, file: !1261, line: 255, column: 7)
!11465 = !DILocation(line: 255, column: 14, scope: !11464)
!11466 = !DILocation(line: 255, column: 18, scope: !11464)
!11467 = !DILocation(line: 255, column: 7, scope: !11456)
!11468 = !DILocation(line: 256, column: 10, scope: !11464)
!11469 = !DILocation(line: 256, column: 17, scope: !11464)
!11470 = !DILocation(line: 256, column: 21, scope: !11464)
!11471 = !DILocation(line: 256, column: 4, scope: !11464)
!11472 = !DILocation(line: 258, column: 7, scope: !11473)
!11473 = distinct !DILexicalBlock(scope: !11456, file: !1261, line: 258, column: 7)
!11474 = !DILocation(line: 258, column: 14, scope: !11473)
!11475 = !DILocation(line: 258, column: 19, scope: !11473)
!11476 = !DILocation(line: 258, column: 7, scope: !11456)
!11477 = !DILocation(line: 259, column: 10, scope: !11473)
!11478 = !DILocation(line: 259, column: 17, scope: !11473)
!11479 = !DILocation(line: 259, column: 22, scope: !11473)
!11480 = !DILocation(line: 259, column: 4, scope: !11473)
!11481 = !DILocation(line: 261, column: 9, scope: !11456)
!11482 = !DILocation(line: 261, column: 3, scope: !11456)
!11483 = !DILocation(line: 262, column: 2, scope: !11456)
!11484 = !DILocation(line: 263, column: 9, scope: !11485)
!11485 = distinct !DILexicalBlock(scope: !11486, file: !1261, line: 263, column: 7)
!11486 = distinct !DILexicalBlock(scope: !11450, file: !1261, line: 262, column: 9)
!11487 = !DILocation(line: 263, column: 15, scope: !11485)
!11488 = !DILocation(line: 263, column: 7, scope: !11486)
!11489 = !DILocation(line: 265, column: 5, scope: !11485)
!11490 = !DILocation(line: 265, column: 12, scope: !11485)
!11491 = !DILocation(line: 265, column: 19, scope: !11485)
!11492 = !DILocation(line: 265, column: 26, scope: !11485)
!11493 = !DILocation(line: 265, column: 33, scope: !11485)
!11494 = !DILocation(line: 265, column: 39, scope: !11485)
!11495 = !DILocation(line: 264, column: 4, scope: !11485)
!11496 = !DILocation(line: 266, column: 3, scope: !11486)
!11497 = !DILocation(line: 266, column: 10, scope: !11486)
!11498 = !DILocation(line: 266, column: 15, scope: !11486)
!11499 = !DILocation(line: 268, column: 1, scope: !1345)
!11500 = !DILocalVariable(name: "dname", arg: 1, scope: !1341, file: !1261, line: 216, type: !20)
!11501 = !DILocation(line: 216, column: 37, scope: !1341)
!11502 = !DILocalVariable(name: "dname_len", arg: 2, scope: !1341, file: !1261, line: 216, type: !33)
!11503 = !DILocation(line: 216, column: 48, scope: !1341)
!11504 = !DILocalVariable(name: "rtype", arg: 3, scope: !1341, file: !1261, line: 216, type: !48)
!11505 = !DILocation(line: 216, column: 68, scope: !1341)
!11506 = !DILocalVariable(name: "rclass", arg: 4, scope: !1341, file: !1261, line: 217, type: !48)
!11507 = !DILocation(line: 217, column: 24, scope: !1341)
!11508 = !DILocalVariable(name: "ttl", arg: 5, scope: !1341, file: !1261, line: 217, type: !72)
!11509 = !DILocation(line: 217, column: 41, scope: !1341)
!11510 = !DILocalVariable(name: "rd_len", arg: 6, scope: !1341, file: !1261, line: 217, type: !48)
!11511 = !DILocation(line: 217, column: 55, scope: !1341)
!11512 = !DILocalVariable(name: "rd", arg: 7, scope: !1341, file: !1261, line: 218, type: !20)
!11513 = !DILocation(line: 218, column: 23, scope: !1341)
!11514 = !DILocalVariable(name: "rrlp", scope: !1341, file: !1261, line: 219, type: !1269)
!11515 = !DILocation(line: 219, column: 11, scope: !1341)
!11516 = !DILocalVariable(name: "rrlp_tmp", scope: !1341, file: !1261, line: 220, type: !1269)
!11517 = !DILocation(line: 220, column: 11, scope: !1341)
!11518 = !DILocalVariable(name: "rrsp", scope: !1341, file: !1261, line: 221, type: !1278)
!11519 = !DILocation(line: 221, column: 9, scope: !1341)
!11520 = !DILocation(line: 223, column: 9, scope: !1341)
!11521 = !DILocation(line: 223, column: 7, scope: !1341)
!11522 = !DILocation(line: 224, column: 7, scope: !11523)
!11523 = distinct !DILexicalBlock(scope: !1341, file: !1261, line: 224, column: 6)
!11524 = !DILocation(line: 224, column: 6, scope: !1341)
!11525 = !DILocation(line: 225, column: 3, scope: !11523)
!11526 = !DILocation(line: 227, column: 26, scope: !1341)
!11527 = !DILocation(line: 227, column: 32, scope: !1341)
!11528 = !DILocation(line: 227, column: 37, scope: !1341)
!11529 = !DILocation(line: 227, column: 45, scope: !1341)
!11530 = !DILocation(line: 227, column: 13, scope: !1341)
!11531 = !DILocation(line: 227, column: 11, scope: !1341)
!11532 = !DILocation(line: 228, column: 7, scope: !11533)
!11533 = distinct !DILexicalBlock(scope: !1341, file: !1261, line: 228, column: 6)
!11534 = !DILocation(line: 228, column: 6, scope: !1341)
!11535 = !DILocation(line: 229, column: 17, scope: !11536)
!11536 = distinct !DILexicalBlock(scope: !11533, file: !1261, line: 228, column: 17)
!11537 = !DILocation(line: 229, column: 3, scope: !11536)
!11538 = !DILocation(line: 230, column: 3, scope: !11536)
!11539 = !DILocation(line: 232, column: 9, scope: !1341)
!11540 = !DILocation(line: 232, column: 7, scope: !1341)
!11541 = !DILocation(line: 233, column: 23, scope: !1341)
!11542 = !DILocation(line: 233, column: 30, scope: !1341)
!11543 = !DILocation(line: 233, column: 38, scope: !1341)
!11544 = !DILocation(line: 233, column: 49, scope: !1341)
!11545 = !DILocation(line: 233, column: 56, scope: !1341)
!11546 = !DILocation(line: 233, column: 9, scope: !1341)
!11547 = !DILocation(line: 233, column: 7, scope: !1341)
!11548 = !DILocation(line: 234, column: 7, scope: !11549)
!11549 = distinct !DILexicalBlock(scope: !1341, file: !1261, line: 234, column: 6)
!11550 = !DILocation(line: 234, column: 6, scope: !1341)
!11551 = !DILocation(line: 235, column: 17, scope: !11552)
!11552 = distinct !DILexicalBlock(scope: !11549, file: !1261, line: 234, column: 13)
!11553 = !DILocation(line: 235, column: 3, scope: !11552)
!11554 = !DILocation(line: 236, column: 3, scope: !11552)
!11555 = !DILocation(line: 238, column: 16, scope: !1341)
!11556 = !DILocation(line: 238, column: 2, scope: !1341)
!11557 = !DILocation(line: 240, column: 9, scope: !1341)
!11558 = !DILocation(line: 240, column: 2, scope: !1341)
!11559 = !DILocation(line: 241, column: 1, scope: !1341)
!11560 = !DILocalVariable(name: "p", arg: 1, scope: !1344, file: !1261, line: 243, type: !26)
!11561 = !DILocation(line: 243, column: 25, scope: !1344)
!11562 = !DILocation(line: 244, column: 24, scope: !1344)
!11563 = !DILocation(line: 244, column: 14, scope: !1344)
!11564 = !DILocation(line: 244, column: 2, scope: !1344)
!11565 = !DILocation(line: 245, column: 2, scope: !1344)
!11566 = !DILocalVariable(name: "rrset", arg: 1, scope: !1348, file: !1261, line: 270, type: !1278)
!11567 = !DILocation(line: 270, column: 27, scope: !1348)
!11568 = !DILocation(line: 271, column: 8, scope: !11569)
!11569 = distinct !DILexicalBlock(scope: !1348, file: !1261, line: 271, column: 6)
!11570 = !DILocation(line: 271, column: 14, scope: !11569)
!11571 = !DILocation(line: 271, column: 6, scope: !1348)
!11572 = !DILocation(line: 272, column: 55, scope: !11569)
!11573 = !DILocation(line: 273, column: 8, scope: !11569)
!11574 = !DILocation(line: 273, column: 15, scope: !11569)
!11575 = !DILocation(line: 273, column: 22, scope: !11569)
!11576 = !DILocation(line: 273, column: 29, scope: !11569)
!11577 = !DILocation(line: 273, column: 35, scope: !11569)
!11578 = !DILocation(line: 272, column: 3, scope: !11569)
!11579 = !DILocation(line: 275, column: 2, scope: !1348)
!11580 = !DILocation(line: 275, column: 9, scope: !1348)
!11581 = !DILocation(line: 275, column: 14, scope: !1348)
!11582 = !DILocation(line: 276, column: 9, scope: !1348)
!11583 = !DILocation(line: 276, column: 2, scope: !1348)
!11584 = !DILocalVariable(name: "rrsetv", arg: 1, scope: !1351, file: !1261, line: 279, type: !26)
!11585 = !DILocation(line: 279, column: 26, scope: !1351)
!11586 = !DILocation(line: 280, column: 40, scope: !1351)
!11587 = !DILocation(line: 280, column: 30, scope: !1351)
!11588 = !DILocation(line: 280, column: 18, scope: !1351)
!11589 = !DILocation(line: 280, column: 9, scope: !1351)
!11590 = !DILocation(line: 280, column: 2, scope: !1351)
!11591 = !DILocalVariable(name: "rrsetv", arg: 1, scope: !1352, file: !1261, line: 283, type: !26)
!11592 = !DILocation(line: 283, column: 25, scope: !1352)
!11593 = !DILocation(line: 284, column: 39, scope: !1352)
!11594 = !DILocation(line: 284, column: 29, scope: !1352)
!11595 = !DILocation(line: 284, column: 18, scope: !1352)
!11596 = !DILocation(line: 284, column: 9, scope: !1352)
!11597 = !DILocation(line: 284, column: 2, scope: !1352)
!11598 = !DILocalVariable(name: "rrset", arg: 1, scope: !1353, file: !1261, line: 287, type: !1278)
!11599 = !DILocation(line: 287, column: 26, scope: !1353)
!11600 = !DILocalVariable(name: "rrsp_new", scope: !1353, file: !1261, line: 288, type: !1278)
!11601 = !DILocation(line: 288, column: 9, scope: !1353)
!11602 = !DILocation(line: 290, column: 13, scope: !1353)
!11603 = !DILocation(line: 290, column: 11, scope: !1353)
!11604 = !DILocation(line: 291, column: 7, scope: !11605)
!11605 = distinct !DILexicalBlock(scope: !1353, file: !1261, line: 291, column: 6)
!11606 = !DILocation(line: 291, column: 6, scope: !1353)
!11607 = !DILocation(line: 292, column: 3, scope: !11605)
!11608 = !DILocation(line: 294, column: 2, scope: !1353)
!11609 = !DILocation(line: 294, column: 12, scope: !1353)
!11610 = !DILocation(line: 294, column: 16, scope: !1353)
!11611 = !DILocation(line: 294, column: 18, scope: !1353)
!11612 = !DILocation(line: 295, column: 2, scope: !1353)
!11613 = !DILocation(line: 295, column: 12, scope: !1353)
!11614 = !DILocation(line: 295, column: 17, scope: !1353)
!11615 = !DILocation(line: 295, column: 19, scope: !1353)
!11616 = !DILocation(line: 297, column: 6, scope: !11617)
!11617 = distinct !DILexicalBlock(scope: !1353, file: !1261, line: 297, column: 6)
!11618 = !DILocation(line: 297, column: 13, scope: !11617)
!11619 = !DILocation(line: 297, column: 17, scope: !11617)
!11620 = !DILocation(line: 297, column: 6, scope: !1353)
!11621 = !DILocation(line: 298, column: 29, scope: !11622)
!11622 = distinct !DILexicalBlock(scope: !11617, file: !1261, line: 297, column: 20)
!11623 = !DILocation(line: 298, column: 36, scope: !11622)
!11624 = !DILocation(line: 298, column: 21, scope: !11622)
!11625 = !DILocation(line: 298, column: 3, scope: !11622)
!11626 = !DILocation(line: 298, column: 13, scope: !11622)
!11627 = !DILocation(line: 298, column: 17, scope: !11622)
!11628 = !DILocation(line: 298, column: 19, scope: !11622)
!11629 = !DILocation(line: 299, column: 8, scope: !11630)
!11630 = distinct !DILexicalBlock(scope: !11622, file: !1261, line: 299, column: 7)
!11631 = !DILocation(line: 299, column: 18, scope: !11630)
!11632 = !DILocation(line: 299, column: 22, scope: !11630)
!11633 = !DILocation(line: 299, column: 7, scope: !11622)
!11634 = !DILocation(line: 300, column: 10, scope: !11635)
!11635 = distinct !DILexicalBlock(scope: !11630, file: !1261, line: 299, column: 25)
!11636 = !DILocation(line: 300, column: 4, scope: !11635)
!11637 = !DILocation(line: 301, column: 4, scope: !11635)
!11638 = !DILocation(line: 304, column: 11, scope: !11622)
!11639 = !DILocation(line: 304, column: 21, scope: !11622)
!11640 = !DILocation(line: 304, column: 25, scope: !11622)
!11641 = !DILocation(line: 304, column: 28, scope: !11622)
!11642 = !DILocation(line: 304, column: 35, scope: !11622)
!11643 = !DILocation(line: 304, column: 39, scope: !11622)
!11644 = !DILocation(line: 304, column: 42, scope: !11622)
!11645 = !DILocation(line: 304, column: 49, scope: !11622)
!11646 = !DILocation(line: 304, column: 3, scope: !11622)
!11647 = !DILocation(line: 305, column: 23, scope: !11622)
!11648 = !DILocation(line: 305, column: 30, scope: !11622)
!11649 = !DILocation(line: 305, column: 3, scope: !11622)
!11650 = !DILocation(line: 305, column: 13, scope: !11622)
!11651 = !DILocation(line: 305, column: 21, scope: !11622)
!11652 = !DILocation(line: 306, column: 2, scope: !11622)
!11653 = !DILocation(line: 307, column: 6, scope: !11654)
!11654 = distinct !DILexicalBlock(scope: !1353, file: !1261, line: 307, column: 6)
!11655 = !DILocation(line: 307, column: 13, scope: !11654)
!11656 = !DILocation(line: 307, column: 18, scope: !11654)
!11657 = !DILocation(line: 307, column: 6, scope: !1353)
!11658 = !DILocation(line: 308, column: 30, scope: !11659)
!11659 = distinct !DILexicalBlock(scope: !11654, file: !1261, line: 307, column: 21)
!11660 = !DILocation(line: 308, column: 37, scope: !11659)
!11661 = !DILocation(line: 308, column: 22, scope: !11659)
!11662 = !DILocation(line: 308, column: 3, scope: !11659)
!11663 = !DILocation(line: 308, column: 13, scope: !11659)
!11664 = !DILocation(line: 308, column: 18, scope: !11659)
!11665 = !DILocation(line: 308, column: 20, scope: !11659)
!11666 = !DILocation(line: 309, column: 8, scope: !11667)
!11667 = distinct !DILexicalBlock(scope: !11659, file: !1261, line: 309, column: 7)
!11668 = !DILocation(line: 309, column: 18, scope: !11667)
!11669 = !DILocation(line: 309, column: 23, scope: !11667)
!11670 = !DILocation(line: 309, column: 7, scope: !11659)
!11671 = !DILocation(line: 310, column: 8, scope: !11672)
!11672 = distinct !DILexicalBlock(scope: !11673, file: !1261, line: 310, column: 8)
!11673 = distinct !DILexicalBlock(scope: !11667, file: !1261, line: 309, column: 26)
!11674 = !DILocation(line: 310, column: 18, scope: !11672)
!11675 = !DILocation(line: 310, column: 22, scope: !11672)
!11676 = !DILocation(line: 310, column: 8, scope: !11673)
!11677 = !DILocation(line: 311, column: 11, scope: !11672)
!11678 = !DILocation(line: 311, column: 21, scope: !11672)
!11679 = !DILocation(line: 311, column: 25, scope: !11672)
!11680 = !DILocation(line: 311, column: 5, scope: !11672)
!11681 = !DILocation(line: 312, column: 10, scope: !11673)
!11682 = !DILocation(line: 312, column: 4, scope: !11673)
!11683 = !DILocation(line: 313, column: 4, scope: !11673)
!11684 = !DILocation(line: 316, column: 11, scope: !11659)
!11685 = !DILocation(line: 316, column: 21, scope: !11659)
!11686 = !DILocation(line: 316, column: 26, scope: !11659)
!11687 = !DILocation(line: 316, column: 29, scope: !11659)
!11688 = !DILocation(line: 316, column: 36, scope: !11659)
!11689 = !DILocation(line: 316, column: 41, scope: !11659)
!11690 = !DILocation(line: 316, column: 44, scope: !11659)
!11691 = !DILocation(line: 316, column: 51, scope: !11659)
!11692 = !DILocation(line: 316, column: 3, scope: !11659)
!11693 = !DILocation(line: 317, column: 24, scope: !11659)
!11694 = !DILocation(line: 317, column: 31, scope: !11659)
!11695 = !DILocation(line: 317, column: 3, scope: !11659)
!11696 = !DILocation(line: 317, column: 13, scope: !11659)
!11697 = !DILocation(line: 317, column: 22, scope: !11659)
!11698 = !DILocation(line: 318, column: 2, scope: !11659)
!11699 = !DILocation(line: 319, column: 9, scope: !1353)
!11700 = !DILocation(line: 319, column: 2, scope: !1353)
!11701 = !DILocation(line: 320, column: 1, scope: !1353)
!11702 = !DILocalVariable(name: "rc", arg: 1, scope: !1354, file: !1261, line: 322, type: !1310)
!11703 = !DILocation(line: 322, column: 40, scope: !1354)
!11704 = !DILocation(line: 324, column: 6, scope: !11705)
!11705 = distinct !DILexicalBlock(scope: !1354, file: !1261, line: 324, column: 6)
!11706 = !DILocation(line: 324, column: 10, scope: !11705)
!11707 = !DILocation(line: 324, column: 6, scope: !1354)
!11708 = !DILocation(line: 325, column: 15, scope: !11705)
!11709 = !DILocation(line: 325, column: 19, scope: !11705)
!11710 = !DILocation(line: 325, column: 3, scope: !11705)
!11711 = !DILocation(line: 326, column: 6, scope: !11712)
!11712 = distinct !DILexicalBlock(scope: !1354, file: !1261, line: 326, column: 6)
!11713 = !DILocation(line: 326, column: 10, scope: !11712)
!11714 = !DILocation(line: 326, column: 6, scope: !1354)
!11715 = !DILocation(line: 327, column: 17, scope: !11712)
!11716 = !DILocation(line: 327, column: 21, scope: !11712)
!11717 = !DILocation(line: 327, column: 3, scope: !11712)
!11718 = !DILocation(line: 329, column: 8, scope: !1354)
!11719 = !DILocation(line: 329, column: 2, scope: !1354)
!11720 = !DILocation(line: 330, column: 1, scope: !1354)
!11721 = !DILocalVariable(name: "rcv", arg: 1, scope: !1357, file: !1261, line: 332, type: !26)
!11722 = !DILocation(line: 332, column: 32, scope: !1357)
!11723 = !DILocation(line: 333, column: 38, scope: !1357)
!11724 = !DILocation(line: 333, column: 21, scope: !1357)
!11725 = !DILocation(line: 333, column: 2, scope: !1357)
!11726 = !DILocation(line: 334, column: 1, scope: !1357)
!11727 = !DILocalVariable(name: "cont", arg: 1, scope: !1367, file: !1359, line: 25, type: !1370)
!11728 = !DILocation(line: 25, column: 40, scope: !1367)
!11729 = !DILocalVariable(name: "fn", scope: !1367, file: !1359, line: 26, type: !19)
!11730 = !DILocation(line: 26, column: 8, scope: !1367)
!11731 = !DILocalVariable(name: "sa", scope: !1367, file: !1359, line: 27, type: !1361)
!11732 = !DILocation(line: 27, column: 19, scope: !1367)
!11733 = !DILocalVariable(name: "timeout", scope: !1367, file: !1359, line: 28, type: !33)
!11734 = !DILocation(line: 28, column: 6, scope: !1367)
!11735 = !DILocation(line: 30, column: 34, scope: !1367)
!11736 = !DILocation(line: 30, column: 2, scope: !1367)
!11737 = !DILocation(line: 32, column: 9, scope: !1367)
!11738 = !DILocation(line: 32, column: 15, scope: !1367)
!11739 = !DILocation(line: 32, column: 23, scope: !1367)
!11740 = !DILocation(line: 33, column: 9, scope: !1367)
!11741 = !DILocation(line: 33, column: 15, scope: !1367)
!11742 = !DILocation(line: 33, column: 21, scope: !1367)
!11743 = !DILocation(line: 35, column: 6, scope: !11744)
!11744 = distinct !DILexicalBlock(scope: !1367, file: !1359, line: 35, column: 6)
!11745 = !DILocation(line: 35, column: 12, scope: !11744)
!11746 = !DILocation(line: 35, column: 21, scope: !11744)
!11747 = !DILocation(line: 35, column: 6, scope: !1367)
!11748 = !DILocation(line: 36, column: 3, scope: !11749)
!11749 = distinct !DILexicalBlock(scope: !11744, file: !1359, line: 35, column: 35)
!11750 = !DILocation(line: 37, column: 26, scope: !11749)
!11751 = !DILocation(line: 37, column: 11, scope: !11749)
!11752 = !DILocation(line: 37, column: 3, scope: !11749)
!11753 = !DILocation(line: 40, column: 27, scope: !1367)
!11754 = !DILocation(line: 40, column: 33, scope: !1367)
!11755 = !DILocation(line: 40, column: 45, scope: !1367)
!11756 = !DILocation(line: 40, column: 7, scope: !1367)
!11757 = !DILocation(line: 40, column: 5, scope: !1367)
!11758 = !DILocation(line: 41, column: 27, scope: !11759)
!11759 = distinct !DILexicalBlock(scope: !1367, file: !1359, line: 41, column: 6)
!11760 = !DILocation(line: 41, column: 33, scope: !11759)
!11761 = !DILocation(line: 41, column: 38, scope: !11759)
!11762 = !DILocation(line: 41, column: 41, scope: !11759)
!11763 = !DILocation(line: 41, column: 47, scope: !11759)
!11764 = !DILocation(line: 41, column: 57, scope: !11759)
!11765 = !DILocation(line: 41, column: 6, scope: !11759)
!11766 = !DILocation(line: 41, column: 61, scope: !11759)
!11767 = !DILocation(line: 41, column: 6, scope: !1367)
!11768 = !DILocation(line: 42, column: 3, scope: !11769)
!11769 = distinct !DILexicalBlock(scope: !11759, file: !1359, line: 41, column: 66)
!11770 = !DILocation(line: 45, column: 11, scope: !11769)
!11771 = !DILocation(line: 46, column: 57, scope: !11769)
!11772 = !DILocation(line: 46, column: 3, scope: !11769)
!11773 = !DILocation(line: 47, column: 2, scope: !11769)
!11774 = !DILocation(line: 49, column: 27, scope: !11775)
!11775 = distinct !DILexicalBlock(scope: !11776, file: !1359, line: 49, column: 7)
!11776 = distinct !DILexicalBlock(scope: !11759, file: !1359, line: 47, column: 9)
!11777 = !DILocation(line: 49, column: 33, scope: !11775)
!11778 = !DILocation(line: 50, column: 6, scope: !11775)
!11779 = !DILocation(line: 50, column: 6, scope: !11780)
!11780 = !DILexicalBlockFile(scope: !11775, file: !1359, discriminator: 1)
!11781 = !DILocation(line: 50, column: 6, scope: !11782)
!11782 = !DILexicalBlockFile(scope: !11775, file: !1359, discriminator: 2)
!11783 = !DILocation(line: 50, column: 6, scope: !11784)
!11784 = !DILexicalBlockFile(scope: !11775, file: !1359, discriminator: 3)
!11785 = !DILocation(line: 50, column: 29, scope: !11784)
!11786 = !DILocation(line: 50, column: 35, scope: !11784)
!11787 = !DILocation(line: 49, column: 7, scope: !11780)
!11788 = !DILocation(line: 50, column: 41, scope: !11784)
!11789 = !DILocation(line: 51, column: 27, scope: !11775)
!11790 = !DILocation(line: 51, column: 12, scope: !11775)
!11791 = !DILocation(line: 51, column: 4, scope: !11775)
!11792 = !DILocation(line: 53, column: 13, scope: !11776)
!11793 = !DILocation(line: 53, column: 19, scope: !11776)
!11794 = !DILocation(line: 53, column: 11, scope: !11776)
!11795 = !DILocation(line: 54, column: 55, scope: !11776)
!11796 = !DILocation(line: 54, column: 3, scope: !11776)
!11797 = !DILocation(line: 58, column: 32, scope: !11798)
!11798 = distinct !DILexicalBlock(scope: !1367, file: !1359, line: 58, column: 6)
!11799 = !DILocation(line: 58, column: 38, scope: !11798)
!11800 = !DILocation(line: 58, column: 6, scope: !11798)
!11801 = !DILocation(line: 58, column: 47, scope: !11798)
!11802 = !DILocation(line: 58, column: 6, scope: !1367)
!11803 = !DILocation(line: 59, column: 26, scope: !11798)
!11804 = !DILocation(line: 59, column: 11, scope: !11798)
!11805 = !DILocation(line: 59, column: 3, scope: !11798)
!11806 = !DILocation(line: 61, column: 32, scope: !1367)
!11807 = !DILocation(line: 61, column: 2, scope: !1367)
!11808 = !DILocation(line: 63, column: 2, scope: !1367)
!11809 = !DILocation(line: 64, column: 1, scope: !1367)
!11810 = !DILocalVariable(name: "cont", arg: 1, scope: !1448, file: !1359, line: 66, type: !1451)
!11811 = !DILocation(line: 66, column: 35, scope: !1448)
!11812 = !DILocalVariable(name: "fn", scope: !1448, file: !1359, line: 67, type: !19)
!11813 = !DILocation(line: 67, column: 8, scope: !1448)
!11814 = !DILocalVariable(name: "sa", scope: !1448, file: !1359, line: 68, type: !1361)
!11815 = !DILocation(line: 68, column: 19, scope: !1448)
!11816 = !DILocation(line: 70, column: 34, scope: !1448)
!11817 = !DILocation(line: 70, column: 2, scope: !1448)
!11818 = !DILocation(line: 82, column: 6, scope: !11819)
!11819 = distinct !DILexicalBlock(scope: !1448, file: !1359, line: 82, column: 6)
!11820 = !DILocation(line: 82, column: 12, scope: !11819)
!11821 = !DILocation(line: 82, column: 6, scope: !1448)
!11822 = !DILocation(line: 83, column: 3, scope: !11819)
!11823 = !DILocation(line: 83, column: 9, scope: !11819)
!11824 = !DILocation(line: 83, column: 15, scope: !11819)
!11825 = !DILocation(line: 83, column: 23, scope: !11819)
!11826 = !DILocation(line: 86, column: 27, scope: !1448)
!11827 = !DILocation(line: 86, column: 33, scope: !1448)
!11828 = !DILocation(line: 86, column: 45, scope: !1448)
!11829 = !DILocation(line: 86, column: 7, scope: !1448)
!11830 = !DILocation(line: 86, column: 5, scope: !1448)
!11831 = !DILocation(line: 87, column: 24, scope: !11832)
!11832 = distinct !DILexicalBlock(scope: !1448, file: !1359, line: 87, column: 6)
!11833 = !DILocation(line: 87, column: 28, scope: !11832)
!11834 = !DILocation(line: 87, column: 34, scope: !11832)
!11835 = !DILocation(line: 87, column: 6, scope: !11832)
!11836 = !DILocation(line: 87, column: 40, scope: !11832)
!11837 = !DILocation(line: 87, column: 6, scope: !1448)
!11838 = !DILocation(line: 88, column: 26, scope: !11832)
!11839 = !DILocation(line: 88, column: 11, scope: !11832)
!11840 = !DILocation(line: 88, column: 3, scope: !11832)
!11841 = !DILocation(line: 90, column: 26, scope: !11832)
!11842 = !DILocation(line: 90, column: 10, scope: !11832)
!11843 = !DILocation(line: 90, column: 3, scope: !11832)
!11844 = !DILocation(line: 91, column: 1, scope: !1448)
!11845 = !DILocalVariable(name: "cont", arg: 1, scope: !1453, file: !1359, line: 93, type: !1451)
!11846 = !DILocation(line: 93, column: 33, scope: !1453)
!11847 = !DILocalVariable(name: "fn", scope: !1453, file: !1359, line: 94, type: !19)
!11848 = !DILocation(line: 94, column: 8, scope: !1453)
!11849 = !DILocalVariable(name: "sa", scope: !1453, file: !1359, line: 95, type: !1361)
!11850 = !DILocation(line: 95, column: 19, scope: !1453)
!11851 = !DILocalVariable(name: "len", scope: !1453, file: !1359, line: 96, type: !33)
!11852 = !DILocation(line: 96, column: 6, scope: !1453)
!11853 = !DILocalVariable(name: "timeout", scope: !1453, file: !1359, line: 96, type: !33)
!11854 = !DILocation(line: 96, column: 11, scope: !1453)
!11855 = !DILocation(line: 98, column: 34, scope: !1453)
!11856 = !DILocation(line: 98, column: 2, scope: !1453)
!11857 = !DILocation(line: 101, column: 27, scope: !1453)
!11858 = !DILocation(line: 101, column: 33, scope: !1453)
!11859 = !DILocation(line: 101, column: 45, scope: !1453)
!11860 = !DILocation(line: 101, column: 7, scope: !1453)
!11861 = !DILocation(line: 101, column: 5, scope: !1453)
!11862 = !DILocation(line: 102, column: 20, scope: !1453)
!11863 = !DILocation(line: 102, column: 24, scope: !1453)
!11864 = !DILocation(line: 102, column: 30, scope: !1453)
!11865 = !DILocation(line: 102, column: 2, scope: !1453)
!11866 = !DILocation(line: 110, column: 6, scope: !11867)
!11867 = distinct !DILexicalBlock(scope: !1453, file: !1359, line: 110, column: 6)
!11868 = !DILocation(line: 110, column: 12, scope: !11867)
!11869 = !DILocation(line: 110, column: 19, scope: !11867)
!11870 = !DILocation(line: 110, column: 30, scope: !11867)
!11871 = !DILocation(line: 110, column: 33, scope: !11872)
!11872 = !DILexicalBlockFile(scope: !11867, file: !1359, discriminator: 1)
!11873 = !DILocation(line: 110, column: 39, scope: !11872)
!11874 = !DILocation(line: 110, column: 46, scope: !11872)
!11875 = !DILocation(line: 110, column: 6, scope: !11872)
!11876 = !DILocation(line: 127, column: 3, scope: !11877)
!11877 = distinct !DILexicalBlock(scope: !11867, file: !1359, line: 110, column: 56)
!11878 = !DILocation(line: 130, column: 17, scope: !11877)
!11879 = !DILocation(line: 130, column: 23, scope: !11877)
!11880 = !DILocation(line: 130, column: 3, scope: !11877)
!11881 = !DILocation(line: 131, column: 17, scope: !11877)
!11882 = !DILocation(line: 131, column: 23, scope: !11877)
!11883 = !DILocation(line: 131, column: 3, scope: !11877)
!11884 = !DILocation(line: 132, column: 17, scope: !11877)
!11885 = !DILocation(line: 132, column: 23, scope: !11877)
!11886 = !DILocation(line: 132, column: 3, scope: !11877)
!11887 = !DILocation(line: 133, column: 19, scope: !11877)
!11888 = !DILocation(line: 133, column: 3, scope: !11877)
!11889 = !DILocation(line: 133, column: 9, scope: !11877)
!11890 = !DILocation(line: 133, column: 17, scope: !11877)
!11891 = !DILocation(line: 134, column: 19, scope: !11877)
!11892 = !DILocation(line: 134, column: 3, scope: !11877)
!11893 = !DILocation(line: 134, column: 9, scope: !11877)
!11894 = !DILocation(line: 134, column: 17, scope: !11877)
!11895 = !DILocation(line: 135, column: 19, scope: !11877)
!11896 = !DILocation(line: 135, column: 3, scope: !11877)
!11897 = !DILocation(line: 135, column: 9, scope: !11877)
!11898 = !DILocation(line: 135, column: 17, scope: !11877)
!11899 = !DILocation(line: 136, column: 8, scope: !11900)
!11900 = distinct !DILexicalBlock(scope: !11877, file: !1359, line: 136, column: 7)
!11901 = !DILocation(line: 136, column: 14, scope: !11900)
!11902 = !DILocation(line: 136, column: 22, scope: !11900)
!11903 = !DILocation(line: 136, column: 26, scope: !11904)
!11904 = !DILexicalBlockFile(scope: !11900, file: !1359, discriminator: 1)
!11905 = !DILocation(line: 136, column: 32, scope: !11904)
!11906 = !DILocation(line: 136, column: 40, scope: !11904)
!11907 = !DILocation(line: 136, column: 44, scope: !11908)
!11908 = !DILexicalBlockFile(scope: !11900, file: !1359, discriminator: 2)
!11909 = !DILocation(line: 136, column: 50, scope: !11908)
!11910 = !DILocation(line: 136, column: 7, scope: !11908)
!11911 = !DILocation(line: 137, column: 26, scope: !11900)
!11912 = !DILocation(line: 137, column: 11, scope: !11900)
!11913 = !DILocation(line: 137, column: 4, scope: !11900)
!11914 = !DILocation(line: 139, column: 7, scope: !11915)
!11915 = distinct !DILexicalBlock(scope: !11877, file: !1359, line: 139, column: 7)
!11916 = !DILocation(line: 139, column: 13, scope: !11915)
!11917 = !DILocation(line: 139, column: 7, scope: !11877)
!11918 = !DILocation(line: 140, column: 53, scope: !11919)
!11919 = distinct !DILexicalBlock(scope: !11915, file: !1359, line: 139, column: 21)
!11920 = !DILocation(line: 140, column: 4, scope: !11919)
!11921 = !DILocation(line: 141, column: 4, scope: !11919)
!11922 = !DILocation(line: 141, column: 10, scope: !11919)
!11923 = !DILocation(line: 141, column: 18, scope: !11919)
!11924 = !DILocation(line: 141, column: 27, scope: !11919)
!11925 = !DILocation(line: 141, column: 33, scope: !11919)
!11926 = !DILocation(line: 142, column: 3, scope: !11919)
!11927 = !DILocation(line: 145, column: 20, scope: !11877)
!11928 = !DILocation(line: 145, column: 3, scope: !11877)
!11929 = !DILocation(line: 147, column: 44, scope: !11877)
!11930 = !DILocation(line: 147, column: 3, scope: !11877)
!11931 = !DILocation(line: 148, column: 3, scope: !11877)
!11932 = !DILocation(line: 151, column: 21, scope: !11933)
!11933 = distinct !DILexicalBlock(scope: !1453, file: !1359, line: 151, column: 6)
!11934 = !DILocation(line: 151, column: 6, scope: !11933)
!11935 = !DILocation(line: 151, column: 27, scope: !11933)
!11936 = !DILocation(line: 151, column: 6, scope: !1453)
!11937 = !DILocation(line: 152, column: 26, scope: !11933)
!11938 = !DILocation(line: 152, column: 11, scope: !11933)
!11939 = !DILocation(line: 152, column: 3, scope: !11933)
!11940 = !DILocation(line: 155, column: 27, scope: !1453)
!11941 = !DILocation(line: 155, column: 33, scope: !1453)
!11942 = !DILocation(line: 155, column: 45, scope: !1453)
!11943 = !DILocation(line: 155, column: 7, scope: !1453)
!11944 = !DILocation(line: 155, column: 5, scope: !1453)
!11945 = !DILocation(line: 156, column: 29, scope: !1453)
!11946 = !DILocation(line: 156, column: 35, scope: !1453)
!11947 = !DILocation(line: 156, column: 40, scope: !1453)
!11948 = !DILocation(line: 156, column: 43, scope: !1453)
!11949 = !DILocation(line: 156, column: 49, scope: !1453)
!11950 = !DILocation(line: 156, column: 59, scope: !1453)
!11951 = !DILocation(line: 156, column: 8, scope: !1453)
!11952 = !DILocation(line: 156, column: 6, scope: !1453)
!11953 = !DILocation(line: 157, column: 6, scope: !11954)
!11954 = distinct !DILexicalBlock(scope: !1453, file: !1359, line: 157, column: 6)
!11955 = !DILocation(line: 157, column: 12, scope: !11954)
!11956 = !DILocation(line: 157, column: 18, scope: !11954)
!11957 = !DILocation(line: 157, column: 10, scope: !11954)
!11958 = !DILocation(line: 157, column: 6, scope: !1453)
!11959 = !DILocation(line: 158, column: 7, scope: !11960)
!11960 = distinct !DILexicalBlock(scope: !11961, file: !1359, line: 158, column: 7)
!11961 = distinct !DILexicalBlock(scope: !11954, file: !1359, line: 157, column: 28)
!11962 = !DILocation(line: 158, column: 11, scope: !11960)
!11963 = !DILocation(line: 158, column: 7, scope: !11961)
!11964 = !DILocation(line: 159, column: 4, scope: !11960)
!11965 = !DILocation(line: 161, column: 4, scope: !11960)
!11966 = !DILocation(line: 163, column: 11, scope: !11961)
!11967 = !DILocation(line: 164, column: 2, scope: !11961)
!11968 = !DILocation(line: 166, column: 13, scope: !11969)
!11969 = distinct !DILexicalBlock(scope: !11954, file: !1359, line: 164, column: 9)
!11970 = !DILocation(line: 166, column: 19, scope: !11969)
!11971 = !DILocation(line: 166, column: 11, scope: !11969)
!11972 = !DILocation(line: 168, column: 27, scope: !11973)
!11973 = distinct !DILexicalBlock(scope: !11969, file: !1359, line: 168, column: 7)
!11974 = !DILocation(line: 168, column: 33, scope: !11973)
!11975 = !DILocation(line: 169, column: 8, scope: !11973)
!11976 = !DILocation(line: 169, column: 8, scope: !11977)
!11977 = !DILexicalBlockFile(scope: !11973, file: !1359, discriminator: 1)
!11978 = !DILocation(line: 169, column: 8, scope: !11979)
!11979 = !DILexicalBlockFile(scope: !11973, file: !1359, discriminator: 2)
!11980 = !DILocation(line: 169, column: 8, scope: !11981)
!11981 = !DILexicalBlockFile(scope: !11973, file: !1359, discriminator: 3)
!11982 = !DILocation(line: 169, column: 31, scope: !11981)
!11983 = !DILocation(line: 169, column: 37, scope: !11981)
!11984 = !DILocation(line: 168, column: 7, scope: !11977)
!11985 = !DILocation(line: 169, column: 43, scope: !11981)
!11986 = !DILocation(line: 170, column: 27, scope: !11973)
!11987 = !DILocation(line: 170, column: 12, scope: !11973)
!11988 = !DILocation(line: 170, column: 4, scope: !11973)
!11989 = !DILocation(line: 174, column: 32, scope: !11990)
!11990 = distinct !DILexicalBlock(scope: !1453, file: !1359, line: 174, column: 6)
!11991 = !DILocation(line: 174, column: 38, scope: !11990)
!11992 = !DILocation(line: 174, column: 6, scope: !11990)
!11993 = !DILocation(line: 174, column: 47, scope: !11990)
!11994 = !DILocation(line: 174, column: 6, scope: !1453)
!11995 = !DILocation(line: 175, column: 26, scope: !11990)
!11996 = !DILocation(line: 175, column: 11, scope: !11990)
!11997 = !DILocation(line: 175, column: 3, scope: !11990)
!11998 = !DILocation(line: 178, column: 32, scope: !1453)
!11999 = !DILocation(line: 178, column: 2, scope: !1453)
!12000 = !DILocation(line: 179, column: 2, scope: !1453)
!12001 = !DILocation(line: 180, column: 1, scope: !1453)
!12002 = !DILocation(line: 20, column: 6, scope: !12003)
!12003 = distinct !DILexicalBlock(scope: !1545, file: !1455, line: 20, column: 6)
!12004 = !DILocation(line: 20, column: 6, scope: !1545)
!12005 = !DILocation(line: 21, column: 3, scope: !12003)
!12006 = !DILocation(line: 23, column: 16, scope: !1545)
!12007 = !DILocation(line: 23, column: 14, scope: !1545)
!12008 = !DILocation(line: 24, column: 7, scope: !12009)
!12009 = distinct !DILexicalBlock(scope: !1545, file: !1455, line: 24, column: 6)
!12010 = !DILocation(line: 24, column: 6, scope: !1545)
!12011 = !DILocation(line: 25, column: 3, scope: !12009)
!12012 = !DILocation(line: 27, column: 2, scope: !1545)
!12013 = !DILocation(line: 28, column: 1, scope: !1545)
!12014 = !DILocalVariable(name: "td", arg: 1, scope: !1546, file: !1455, line: 30, type: !1457)
!12015 = !DILocation(line: 30, column: 33, scope: !1546)
!12016 = !DILocalVariable(name: "fn", scope: !1546, file: !1455, line: 31, type: !19)
!12017 = !DILocation(line: 31, column: 8, scope: !1546)
!12018 = !DILocalVariable(name: "gq_new", scope: !1546, file: !1455, line: 32, type: !12019)
!12019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12020, size: 64, align: 64)
!12020 = !DIDerivedType(tag: DW_TAG_typedef, name: "G_Queue", file: !29, line: 32, baseType: !1568)
!12021 = !DILocation(line: 32, column: 11, scope: !1546)
!12022 = !DILocalVariable(name: "gq_tmp", scope: !1546, file: !1455, line: 32, type: !12019)
!12023 = !DILocation(line: 32, column: 20, scope: !1546)
!12024 = !DILocalVariable(name: "gq_prev", scope: !1546, file: !1455, line: 32, type: !12019)
!12025 = !DILocation(line: 32, column: 29, scope: !1546)
!12026 = !DILocation(line: 34, column: 11, scope: !1546)
!12027 = !DILocation(line: 34, column: 9, scope: !1546)
!12028 = !DILocation(line: 35, column: 7, scope: !12029)
!12029 = distinct !DILexicalBlock(scope: !1546, file: !1455, line: 35, column: 6)
!12030 = !DILocation(line: 35, column: 6, scope: !1546)
!12031 = !DILocation(line: 36, column: 57, scope: !12029)
!12032 = !DILocation(line: 36, column: 10, scope: !12029)
!12033 = !DILocation(line: 38, column: 11, scope: !12034)
!12034 = distinct !DILexicalBlock(scope: !12029, file: !1455, line: 37, column: 7)
!12035 = !DILocation(line: 40, column: 17, scope: !12036)
!12036 = distinct !DILexicalBlock(scope: !12034, file: !1455, line: 40, column: 3)
!12037 = !DILocation(line: 40, column: 30, scope: !12036)
!12038 = !DILocation(line: 40, column: 15, scope: !12036)
!12039 = !DILocation(line: 40, column: 8, scope: !12036)
!12040 = !DILocation(line: 40, column: 36, scope: !12041)
!12041 = !DILexicalBlockFile(scope: !12042, file: !1455, discriminator: 1)
!12042 = distinct !DILexicalBlock(scope: !12036, file: !1455, line: 40, column: 3)
!12043 = !DILocation(line: 40, column: 44, scope: !12041)
!12044 = !DILocation(line: 40, column: 49, scope: !12041)
!12045 = !DILocation(line: 41, column: 25, scope: !12042)
!12046 = !DILocation(line: 41, column: 33, scope: !12042)
!12047 = !DILocation(line: 41, column: 9, scope: !12042)
!12048 = !DILocation(line: 41, column: 38, scope: !12042)
!12049 = !DILocation(line: 41, column: 43, scope: !12042)
!12050 = !DILocation(line: 41, column: 47, scope: !12042)
!12051 = !DILocation(line: 41, column: 41, scope: !12042)
!12052 = !DILocation(line: 40, column: 3, scope: !12053)
!12053 = !DILexicalBlockFile(scope: !12036, file: !1455, discriminator: 2)
!12054 = !DILocation(line: 43, column: 14, scope: !12042)
!12055 = !DILocation(line: 43, column: 12, scope: !12042)
!12056 = !DILocation(line: 43, column: 4, scope: !12042)
!12057 = !DILocation(line: 42, column: 17, scope: !12042)
!12058 = !DILocation(line: 42, column: 25, scope: !12042)
!12059 = !DILocation(line: 42, column: 15, scope: !12042)
!12060 = !DILocation(line: 40, column: 3, scope: !12061)
!12061 = !DILexicalBlockFile(scope: !12042, file: !1455, discriminator: 3)
!12062 = !DILocation(line: 45, column: 8, scope: !12063)
!12063 = distinct !DILexicalBlock(scope: !12034, file: !1455, line: 45, column: 7)
!12064 = !DILocation(line: 45, column: 7, scope: !12034)
!12065 = !DILocation(line: 46, column: 10, scope: !12066)
!12066 = distinct !DILexicalBlock(scope: !12067, file: !1455, line: 46, column: 8)
!12067 = distinct !DILexicalBlock(scope: !12063, file: !1455, line: 45, column: 17)
!12068 = !DILocation(line: 46, column: 16, scope: !12066)
!12069 = !DILocation(line: 46, column: 8, scope: !12067)
!12070 = !DILocation(line: 47, column: 49, scope: !12066)
!12071 = !DILocation(line: 47, column: 5, scope: !12066)
!12072 = !DILocation(line: 48, column: 25, scope: !12067)
!12073 = !DILocation(line: 48, column: 16, scope: !12067)
!12074 = !DILocation(line: 48, column: 4, scope: !12067)
!12075 = !DILocation(line: 48, column: 12, scope: !12067)
!12076 = !DILocation(line: 48, column: 14, scope: !12067)
!12077 = !DILocation(line: 49, column: 19, scope: !12067)
!12078 = !DILocation(line: 49, column: 32, scope: !12067)
!12079 = !DILocation(line: 49, column: 4, scope: !12067)
!12080 = !DILocation(line: 49, column: 12, scope: !12067)
!12081 = !DILocation(line: 49, column: 17, scope: !12067)
!12082 = !DILocation(line: 50, column: 24, scope: !12067)
!12083 = !DILocation(line: 50, column: 4, scope: !12067)
!12084 = !DILocation(line: 50, column: 17, scope: !12067)
!12085 = !DILocation(line: 50, column: 22, scope: !12067)
!12086 = !DILocation(line: 51, column: 3, scope: !12067)
!12087 = !DILocation(line: 52, column: 4, scope: !12088)
!12088 = distinct !DILexicalBlock(scope: !12063, file: !1455, line: 51, column: 10)
!12089 = !DILocation(line: 52, column: 11, scope: !12090)
!12090 = !DILexicalBlockFile(scope: !12088, file: !1455, discriminator: 1)
!12091 = !DILocation(line: 52, column: 19, scope: !12090)
!12092 = !DILocation(line: 52, column: 21, scope: !12090)
!12093 = !DILocation(line: 53, column: 29, scope: !12088)
!12094 = !DILocation(line: 53, column: 37, scope: !12088)
!12095 = !DILocation(line: 53, column: 13, scope: !12088)
!12096 = !DILocation(line: 53, column: 42, scope: !12088)
!12097 = !DILocation(line: 53, column: 48, scope: !12088)
!12098 = !DILocation(line: 53, column: 52, scope: !12088)
!12099 = !DILocation(line: 53, column: 45, scope: !12088)
!12100 = !DILocation(line: 52, column: 4, scope: !12101)
!12101 = !DILexicalBlockFile(scope: !12088, file: !1455, discriminator: 2)
!12102 = !DILocation(line: 54, column: 15, scope: !12103)
!12103 = distinct !DILexicalBlock(scope: !12088, file: !1455, line: 53, column: 57)
!12104 = !DILocation(line: 54, column: 13, scope: !12103)
!12105 = !DILocation(line: 55, column: 14, scope: !12103)
!12106 = !DILocation(line: 55, column: 22, scope: !12103)
!12107 = !DILocation(line: 55, column: 12, scope: !12103)
!12108 = !DILocation(line: 52, column: 4, scope: !12109)
!12109 = !DILexicalBlockFile(scope: !12088, file: !1455, discriminator: 3)
!12110 = !DILocation(line: 58, column: 9, scope: !12111)
!12111 = distinct !DILexicalBlock(scope: !12088, file: !1455, line: 58, column: 8)
!12112 = !DILocation(line: 58, column: 17, scope: !12111)
!12113 = !DILocation(line: 58, column: 8, scope: !12088)
!12114 = !DILocation(line: 59, column: 11, scope: !12115)
!12115 = distinct !DILexicalBlock(scope: !12116, file: !1455, line: 59, column: 9)
!12116 = distinct !DILexicalBlock(scope: !12111, file: !1455, line: 58, column: 20)
!12117 = !DILocation(line: 59, column: 17, scope: !12115)
!12118 = !DILocation(line: 59, column: 9, scope: !12116)
!12119 = !DILocation(line: 61, column: 7, scope: !12115)
!12120 = !DILocation(line: 60, column: 6, scope: !12115)
!12121 = !DILocation(line: 62, column: 37, scope: !12116)
!12122 = !DILocation(line: 62, column: 28, scope: !12116)
!12123 = !DILocation(line: 62, column: 5, scope: !12116)
!12124 = !DILocation(line: 62, column: 18, scope: !12116)
!12125 = !DILocation(line: 62, column: 24, scope: !12116)
!12126 = !DILocation(line: 62, column: 26, scope: !12116)
!12127 = !DILocation(line: 63, column: 31, scope: !12116)
!12128 = !DILocation(line: 63, column: 5, scope: !12116)
!12129 = !DILocation(line: 63, column: 18, scope: !12116)
!12130 = !DILocation(line: 63, column: 24, scope: !12116)
!12131 = !DILocation(line: 63, column: 29, scope: !12116)
!12132 = !DILocation(line: 64, column: 5, scope: !12116)
!12133 = !DILocation(line: 64, column: 13, scope: !12116)
!12134 = !DILocation(line: 64, column: 15, scope: !12116)
!12135 = !DILocation(line: 65, column: 5, scope: !12116)
!12136 = !DILocation(line: 65, column: 13, scope: !12116)
!12137 = !DILocation(line: 65, column: 18, scope: !12116)
!12138 = !DILocation(line: 66, column: 25, scope: !12116)
!12139 = !DILocation(line: 66, column: 5, scope: !12116)
!12140 = !DILocation(line: 66, column: 18, scope: !12116)
!12141 = !DILocation(line: 66, column: 23, scope: !12116)
!12142 = !DILocation(line: 67, column: 4, scope: !12116)
!12143 = !DILocation(line: 68, column: 11, scope: !12144)
!12144 = distinct !DILexicalBlock(scope: !12145, file: !1455, line: 68, column: 9)
!12145 = distinct !DILexicalBlock(scope: !12111, file: !1455, line: 67, column: 11)
!12146 = !DILocation(line: 68, column: 17, scope: !12144)
!12147 = !DILocation(line: 68, column: 9, scope: !12145)
!12148 = !DILocation(line: 70, column: 7, scope: !12144)
!12149 = !DILocation(line: 69, column: 6, scope: !12144)
!12150 = !DILocation(line: 71, column: 26, scope: !12145)
!12151 = !DILocation(line: 71, column: 17, scope: !12145)
!12152 = !DILocation(line: 71, column: 5, scope: !12145)
!12153 = !DILocation(line: 71, column: 13, scope: !12145)
!12154 = !DILocation(line: 71, column: 15, scope: !12145)
!12155 = !DILocation(line: 72, column: 21, scope: !12145)
!12156 = !DILocation(line: 72, column: 5, scope: !12145)
!12157 = !DILocation(line: 72, column: 14, scope: !12145)
!12158 = !DILocation(line: 72, column: 19, scope: !12145)
!12159 = !DILocation(line: 73, column: 20, scope: !12145)
!12160 = !DILocation(line: 73, column: 5, scope: !12145)
!12161 = !DILocation(line: 73, column: 13, scope: !12145)
!12162 = !DILocation(line: 73, column: 18, scope: !12145)
!12163 = !DILocation(line: 77, column: 3, scope: !12034)
!12164 = !DILocation(line: 81, column: 2, scope: !1546)
!12165 = !DILocation(line: 82, column: 1, scope: !1546)
!12166 = !DILocalVariable(name: "fn", scope: !1549, file: !1455, line: 85, type: !19)
!12167 = !DILocation(line: 85, column: 8, scope: !1549)
!12168 = !DILocalVariable(name: "td_tmp", scope: !1549, file: !1455, line: 86, type: !1457)
!12169 = !DILocation(line: 86, column: 14, scope: !1549)
!12170 = !DILocation(line: 88, column: 2, scope: !1549)
!12171 = !DILocation(line: 88, column: 46, scope: !12172)
!12172 = !DILexicalBlockFile(scope: !1549, file: !1455, discriminator: 1)
!12173 = !DILocation(line: 88, column: 34, scope: !12172)
!12174 = !DILocation(line: 88, column: 19, scope: !12172)
!12175 = !DILocation(line: 88, column: 17, scope: !12172)
!12176 = !DILocation(line: 89, column: 9, scope: !1549)
!12177 = !DILocation(line: 89, column: 13, scope: !12172)
!12178 = !DILocation(line: 89, column: 21, scope: !12172)
!12179 = !DILocation(line: 89, column: 27, scope: !12172)
!12180 = !DILocation(line: 89, column: 24, scope: !12172)
!12181 = !DILocation(line: 88, column: 2, scope: !12182)
!12182 = !DILexicalBlockFile(scope: !1549, file: !1455, discriminator: 2)
!12183 = !DILocation(line: 91, column: 21, scope: !12184)
!12184 = distinct !DILexicalBlock(scope: !1549, file: !1455, line: 89, column: 41)
!12185 = !DILocation(line: 91, column: 12, scope: !12184)
!12186 = !DILocation(line: 91, column: 10, scope: !12184)
!12187 = !DILocation(line: 93, column: 7, scope: !12188)
!12188 = distinct !DILexicalBlock(scope: !12184, file: !1455, line: 93, column: 7)
!12189 = !DILocation(line: 93, column: 15, scope: !12188)
!12190 = !DILocation(line: 93, column: 7, scope: !12184)
!12191 = !DILocation(line: 94, column: 10, scope: !12192)
!12192 = distinct !DILexicalBlock(scope: !12193, file: !1455, line: 94, column: 8)
!12193 = distinct !DILexicalBlock(scope: !12188, file: !1455, line: 93, column: 24)
!12194 = !DILocation(line: 94, column: 16, scope: !12192)
!12195 = !DILocation(line: 94, column: 8, scope: !12193)
!12196 = !DILocation(line: 96, column: 6, scope: !12192)
!12197 = !DILocation(line: 95, column: 5, scope: !12192)
!12198 = !DILocation(line: 97, column: 5, scope: !12193)
!12199 = !DILocation(line: 97, column: 13, scope: !12193)
!12200 = !DILocation(line: 97, column: 23, scope: !12193)
!12201 = !DILocation(line: 97, column: 4, scope: !12193)
!12202 = !DILocation(line: 98, column: 3, scope: !12193)
!12203 = !DILocation(line: 99, column: 10, scope: !12204)
!12204 = distinct !DILexicalBlock(scope: !12188, file: !1455, line: 99, column: 8)
!12205 = !DILocation(line: 99, column: 16, scope: !12204)
!12206 = !DILocation(line: 99, column: 8, scope: !12188)
!12207 = !DILocation(line: 101, column: 6, scope: !12204)
!12208 = !DILocation(line: 100, column: 5, scope: !12204)
!12209 = !DILocation(line: 102, column: 20, scope: !12184)
!12210 = !DILocation(line: 102, column: 3, scope: !12184)
!12211 = !DILocation(line: 88, column: 2, scope: !12212)
!12212 = !DILexicalBlockFile(scope: !1549, file: !1455, discriminator: 3)
!12213 = !DILocation(line: 105, column: 38, scope: !1549)
!12214 = !DILocation(line: 105, column: 26, scope: !1549)
!12215 = !DILocation(line: 105, column: 11, scope: !1549)
!12216 = !DILocation(line: 105, column: 9, scope: !1549)
!12217 = !DILocation(line: 106, column: 6, scope: !12218)
!12218 = distinct !DILexicalBlock(scope: !1549, file: !1455, line: 106, column: 6)
!12219 = !DILocation(line: 106, column: 6, scope: !1549)
!12220 = !DILocation(line: 107, column: 10, scope: !12218)
!12221 = !DILocation(line: 107, column: 18, scope: !12218)
!12222 = !DILocation(line: 107, column: 3, scope: !12218)
!12223 = !DILocation(line: 109, column: 3, scope: !12218)
!12224 = !DILocation(line: 110, column: 1, scope: !1549)
!12225 = !DILocalVariable(name: "td", arg: 1, scope: !1552, file: !1455, line: 112, type: !1457)
!12226 = !DILocation(line: 112, column: 35, scope: !1552)
!12227 = !DILocalVariable(name: "fn", scope: !1552, file: !1455, line: 113, type: !19)
!12228 = !DILocation(line: 113, column: 8, scope: !1552)
!12229 = !DILocation(line: 115, column: 10, scope: !1552)
!12230 = !DILocation(line: 115, column: 14, scope: !1552)
!12231 = !DILocation(line: 115, column: 2, scope: !1552)
!12232 = !DILocation(line: 117, column: 7, scope: !12233)
!12233 = distinct !DILexicalBlock(scope: !12234, file: !1455, line: 117, column: 7)
!12234 = distinct !DILexicalBlock(scope: !1552, file: !1455, line: 115, column: 20)
!12235 = !DILocation(line: 117, column: 11, scope: !12233)
!12236 = !DILocation(line: 117, column: 16, scope: !12233)
!12237 = !DILocation(line: 117, column: 7, scope: !12234)
!12238 = !DILocation(line: 118, column: 10, scope: !12233)
!12239 = !DILocation(line: 118, column: 14, scope: !12233)
!12240 = !DILocation(line: 118, column: 19, scope: !12233)
!12241 = !DILocation(line: 118, column: 4, scope: !12233)
!12242 = !DILocation(line: 119, column: 3, scope: !12234)
!12243 = !DILocation(line: 125, column: 3, scope: !12234)
!12244 = !DILocation(line: 127, column: 59, scope: !12234)
!12245 = !DILocation(line: 127, column: 3, scope: !12234)
!12246 = !DILocation(line: 128, column: 3, scope: !12234)
!12247 = !DILocation(line: 131, column: 8, scope: !1552)
!12248 = !DILocation(line: 131, column: 2, scope: !1552)
!12249 = !DILocation(line: 132, column: 1, scope: !1552)
!12250 = !DILocalVariable(name: "td_v", arg: 1, scope: !1555, file: !1455, line: 134, type: !26)
!12251 = !DILocation(line: 134, column: 31, scope: !1555)
!12252 = !DILocation(line: 135, column: 34, scope: !1555)
!12253 = !DILocation(line: 135, column: 19, scope: !1555)
!12254 = !DILocation(line: 135, column: 2, scope: !1555)
!12255 = !DILocation(line: 136, column: 1, scope: !1555)
!12256 = !DILocation(line: 139, column: 17, scope: !1556)
!12257 = !DILocation(line: 139, column: 2, scope: !1556)
!12258 = !DILocation(line: 140, column: 1, scope: !1556)
!12259 = !DILocalVariable(name: "type", arg: 1, scope: !1557, file: !1455, line: 142, type: !33)
!12260 = !DILocation(line: 142, column: 23, scope: !1557)
!12261 = !DILocalVariable(name: "gqp", scope: !1557, file: !1455, line: 143, type: !12019)
!12262 = !DILocation(line: 143, column: 11, scope: !1557)
!12263 = !DILocalVariable(name: "etdp", scope: !1557, file: !1455, line: 144, type: !1457)
!12264 = !DILocation(line: 144, column: 14, scope: !1557)
!12265 = !DILocation(line: 147, column: 13, scope: !12266)
!12266 = distinct !DILexicalBlock(scope: !1557, file: !1455, line: 147, column: 2)
!12267 = !DILocation(line: 147, column: 26, scope: !12266)
!12268 = !DILocation(line: 147, column: 11, scope: !12266)
!12269 = !DILocation(line: 147, column: 7, scope: !12266)
!12270 = !DILocation(line: 147, column: 32, scope: !12271)
!12271 = !DILexicalBlockFile(scope: !12272, file: !1455, discriminator: 1)
!12272 = distinct !DILexicalBlock(scope: !12266, file: !1455, line: 147, column: 2)
!12273 = !DILocation(line: 147, column: 37, scope: !12271)
!12274 = !DILocation(line: 147, column: 2, scope: !12271)
!12275 = !DILocation(line: 148, column: 7, scope: !12276)
!12276 = distinct !DILexicalBlock(scope: !12277, file: !1455, line: 148, column: 7)
!12277 = distinct !DILexicalBlock(scope: !12272, file: !1455, line: 147, column: 60)
!12278 = !DILocation(line: 148, column: 12, scope: !12276)
!12279 = !DILocation(line: 148, column: 7, scope: !12277)
!12280 = !DILocation(line: 149, column: 27, scope: !12281)
!12281 = distinct !DILexicalBlock(scope: !12276, file: !1455, line: 148, column: 15)
!12282 = !DILocation(line: 149, column: 32, scope: !12281)
!12283 = !DILocation(line: 149, column: 11, scope: !12281)
!12284 = !DILocation(line: 149, column: 9, scope: !12281)
!12285 = !DILocation(line: 150, column: 8, scope: !12286)
!12286 = distinct !DILexicalBlock(scope: !12281, file: !1455, line: 150, column: 8)
!12287 = !DILocation(line: 150, column: 14, scope: !12286)
!12288 = !DILocation(line: 150, column: 22, scope: !12286)
!12289 = !DILocation(line: 150, column: 19, scope: !12286)
!12290 = !DILocation(line: 150, column: 8, scope: !12281)
!12291 = !DILocation(line: 151, column: 9, scope: !12292)
!12292 = distinct !DILexicalBlock(scope: !12293, file: !1455, line: 151, column: 9)
!12293 = distinct !DILexicalBlock(scope: !12286, file: !1455, line: 150, column: 28)
!12294 = !DILocation(line: 151, column: 15, scope: !12292)
!12295 = !DILocation(line: 151, column: 9, scope: !12293)
!12296 = !DILocation(line: 152, column: 7, scope: !12292)
!12297 = !DILocation(line: 152, column: 13, scope: !12292)
!12298 = !DILocation(line: 152, column: 23, scope: !12292)
!12299 = !DILocation(line: 152, column: 6, scope: !12292)
!12300 = !DILocation(line: 153, column: 5, scope: !12293)
!12301 = !DILocation(line: 153, column: 11, scope: !12293)
!12302 = !DILocation(line: 153, column: 19, scope: !12293)
!12303 = !DILocation(line: 154, column: 4, scope: !12293)
!12304 = !DILocation(line: 155, column: 3, scope: !12281)
!12305 = !DILocation(line: 156, column: 2, scope: !12277)
!12306 = !DILocation(line: 147, column: 49, scope: !12307)
!12307 = !DILexicalBlockFile(scope: !12272, file: !1455, discriminator: 2)
!12308 = !DILocation(line: 147, column: 54, scope: !12307)
!12309 = !DILocation(line: 147, column: 47, scope: !12307)
!12310 = !DILocation(line: 147, column: 2, scope: !12307)
!12311 = !DILocation(line: 157, column: 2, scope: !1557)
!12312 = !DILocalVariable(name: "fn", scope: !1558, file: !1455, line: 161, type: !19)
!12313 = !DILocation(line: 161, column: 8, scope: !1558)
!12314 = !DILocalVariable(name: "td_new", scope: !1558, file: !1455, line: 162, type: !1457)
!12315 = !DILocation(line: 162, column: 14, scope: !1558)
!12316 = !DILocation(line: 164, column: 8, scope: !12317)
!12317 = distinct !DILexicalBlock(scope: !1558, file: !1455, line: 164, column: 6)
!12318 = !DILocation(line: 164, column: 14, scope: !12317)
!12319 = !DILocation(line: 164, column: 6, scope: !1558)
!12320 = !DILocation(line: 165, column: 35, scope: !12317)
!12321 = !DILocation(line: 165, column: 3, scope: !12317)
!12322 = !DILocation(line: 167, column: 7, scope: !12323)
!12323 = distinct !DILexicalBlock(scope: !1558, file: !1455, line: 167, column: 6)
!12324 = !DILocation(line: 167, column: 6, scope: !1558)
!12325 = !DILocation(line: 168, column: 3, scope: !12323)
!12326 = !DILocation(line: 170, column: 11, scope: !1558)
!12327 = !DILocation(line: 170, column: 9, scope: !1558)
!12328 = !DILocation(line: 171, column: 7, scope: !12329)
!12329 = distinct !DILexicalBlock(scope: !1558, file: !1455, line: 171, column: 6)
!12330 = !DILocation(line: 171, column: 6, scope: !1558)
!12331 = !DILocation(line: 172, column: 52, scope: !12332)
!12332 = distinct !DILexicalBlock(scope: !12329, file: !1455, line: 171, column: 15)
!12333 = !DILocation(line: 172, column: 3, scope: !12332)
!12334 = !DILocation(line: 173, column: 3, scope: !12332)
!12335 = !DILocation(line: 175, column: 15, scope: !1558)
!12336 = !DILocation(line: 175, column: 27, scope: !1558)
!12337 = !DILocation(line: 175, column: 2, scope: !1558)
!12338 = !DILocation(line: 175, column: 10, scope: !1558)
!12339 = !DILocation(line: 175, column: 13, scope: !1558)
!12340 = !DILocation(line: 176, column: 2, scope: !1558)
!12341 = !DILocation(line: 176, column: 10, scope: !1558)
!12342 = !DILocation(line: 176, column: 18, scope: !1558)
!12343 = !DILocation(line: 177, column: 2, scope: !1558)
!12344 = !DILocation(line: 177, column: 10, scope: !1558)
!12345 = !DILocation(line: 177, column: 15, scope: !1558)
!12346 = !DILocation(line: 178, column: 2, scope: !1558)
!12347 = !DILocation(line: 178, column: 10, scope: !1558)
!12348 = !DILocation(line: 178, column: 15, scope: !1558)
!12349 = !DILocation(line: 178, column: 17, scope: !1558)
!12350 = !DILocation(line: 180, column: 18, scope: !1558)
!12351 = !DILocation(line: 180, column: 2, scope: !1558)
!12352 = !DILocation(line: 181, column: 2, scope: !1558)
!12353 = !DILocation(line: 182, column: 1, scope: !1558)
!12354 = !DILocalVariable(name: "td", arg: 1, scope: !1559, file: !1455, line: 184, type: !1457)
!12355 = !DILocation(line: 184, column: 40, scope: !1559)
!12356 = !DILocalVariable(name: "fn", scope: !1559, file: !1455, line: 185, type: !19)
!12357 = !DILocation(line: 185, column: 8, scope: !1559)
!12358 = !DILocation(line: 187, column: 8, scope: !12359)
!12359 = distinct !DILexicalBlock(scope: !1559, file: !1455, line: 187, column: 6)
!12360 = !DILocation(line: 187, column: 14, scope: !12359)
!12361 = !DILocation(line: 187, column: 6, scope: !1559)
!12362 = !DILocation(line: 188, column: 35, scope: !12359)
!12363 = !DILocation(line: 188, column: 3, scope: !12359)
!12364 = !DILocation(line: 190, column: 6, scope: !12365)
!12365 = distinct !DILexicalBlock(scope: !1559, file: !1455, line: 190, column: 6)
!12366 = !DILocation(line: 190, column: 6, scope: !1559)
!12367 = !DILocation(line: 191, column: 36, scope: !12368)
!12368 = distinct !DILexicalBlock(scope: !12365, file: !1455, line: 190, column: 10)
!12369 = !DILocation(line: 191, column: 11, scope: !12368)
!12370 = !DILocation(line: 191, column: 3, scope: !12368)
!12371 = !DILocation(line: 194, column: 57, scope: !12372)
!12372 = distinct !DILexicalBlock(scope: !12368, file: !1455, line: 191, column: 46)
!12373 = !DILocation(line: 194, column: 4, scope: !12372)
!12374 = !DILocation(line: 195, column: 4, scope: !12372)
!12375 = !DILocation(line: 198, column: 50, scope: !12372)
!12376 = !DILocation(line: 198, column: 4, scope: !12372)
!12377 = !DILocation(line: 199, column: 4, scope: !12372)
!12378 = !DILocation(line: 201, column: 55, scope: !12372)
!12379 = !DILocation(line: 201, column: 4, scope: !12372)
!12380 = !DILocation(line: 202, column: 3, scope: !12372)
!12381 = !DILocation(line: 203, column: 2, scope: !12368)
!12382 = !DILocation(line: 206, column: 10, scope: !1559)
!12383 = !DILocation(line: 206, column: 2, scope: !1559)
!12384 = !DILocalVariable(name: "mesg_buf", arg: 1, scope: !1576, file: !1574, line: 31, type: !20)
!12385 = !DILocation(line: 31, column: 33, scope: !1576)
!12386 = !DILocalVariable(name: "mesg_len", arg: 2, scope: !1576, file: !1574, line: 31, type: !33)
!12387 = !DILocation(line: 31, column: 47, scope: !1576)
!12388 = !DILocalVariable(name: "sa_p", arg: 3, scope: !1576, file: !1574, line: 31, type: !1579)
!12389 = !DILocation(line: 31, column: 74, scope: !1576)
!12390 = !DILocalVariable(name: "inif", arg: 4, scope: !1576, file: !1574, line: 32, type: !1584)
!12391 = !DILocation(line: 32, column: 9, scope: !1576)
!12392 = !DILocalVariable(name: "fn", scope: !1576, file: !1574, line: 33, type: !4)
!12393 = !DILocation(line: 33, column: 14, scope: !1576)
!12394 = !DILocalVariable(name: "cont", scope: !1576, file: !1574, line: 34, type: !1594)
!12395 = !DILocation(line: 34, column: 11, scope: !1576)
!12396 = !DILocation(line: 36, column: 34, scope: !1576)
!12397 = !DILocation(line: 36, column: 2, scope: !1576)
!12398 = !DILocation(line: 39, column: 9, scope: !1576)
!12399 = !DILocation(line: 39, column: 7, scope: !1576)
!12400 = !DILocation(line: 40, column: 7, scope: !12401)
!12401 = distinct !DILexicalBlock(scope: !1576, file: !1574, line: 40, column: 6)
!12402 = !DILocation(line: 40, column: 6, scope: !1576)
!12403 = !DILocation(line: 41, column: 27, scope: !12401)
!12404 = !DILocation(line: 41, column: 11, scope: !12401)
!12405 = !DILocation(line: 41, column: 3, scope: !12401)
!12406 = !DILocation(line: 43, column: 17, scope: !1576)
!12407 = !DILocation(line: 43, column: 2, scope: !1576)
!12408 = !DILocation(line: 43, column: 8, scope: !1576)
!12409 = !DILocation(line: 43, column: 13, scope: !1576)
!12410 = !DILocation(line: 43, column: 15, scope: !1576)
!12411 = !DILocation(line: 44, column: 19, scope: !1576)
!12412 = !DILocation(line: 44, column: 2, scope: !1576)
!12413 = !DILocation(line: 44, column: 8, scope: !1576)
!12414 = !DILocation(line: 44, column: 17, scope: !1576)
!12415 = !DILocation(line: 45, column: 13, scope: !1576)
!12416 = !DILocation(line: 45, column: 24, scope: !1576)
!12417 = !DILocation(line: 45, column: 22, scope: !1576)
!12418 = !DILocation(line: 45, column: 2, scope: !1576)
!12419 = !DILocation(line: 45, column: 8, scope: !1576)
!12420 = !DILocation(line: 45, column: 11, scope: !1576)
!12421 = !DILocation(line: 46, column: 15, scope: !1576)
!12422 = !DILocation(line: 46, column: 21, scope: !1576)
!12423 = !DILocation(line: 46, column: 26, scope: !1576)
!12424 = !DILocation(line: 46, column: 31, scope: !1576)
!12425 = !DILocation(line: 46, column: 2, scope: !1576)
!12426 = !DILocation(line: 46, column: 8, scope: !1576)
!12427 = !DILocation(line: 46, column: 13, scope: !1576)
!12428 = !DILocation(line: 47, column: 30, scope: !1576)
!12429 = !DILocation(line: 47, column: 20, scope: !1576)
!12430 = !DILocation(line: 47, column: 2, scope: !1576)
!12431 = !DILocation(line: 47, column: 8, scope: !1576)
!12432 = !DILocation(line: 47, column: 18, scope: !1576)
!12433 = !DILocation(line: 48, column: 10, scope: !1576)
!12434 = !DILocation(line: 48, column: 16, scope: !1576)
!12435 = !DILocation(line: 48, column: 2, scope: !1576)
!12436 = !DILocation(line: 48, column: 22, scope: !1576)
!12437 = !DILocation(line: 48, column: 28, scope: !1576)
!12438 = !DILocation(line: 48, column: 28, scope: !12439)
!12439 = !DILexicalBlockFile(scope: !1576, file: !1574, discriminator: 1)
!12440 = !DILocation(line: 48, column: 28, scope: !12441)
!12441 = !DILexicalBlockFile(scope: !1576, file: !1574, discriminator: 2)
!12442 = !DILocation(line: 48, column: 28, scope: !12443)
!12443 = !DILexicalBlockFile(scope: !1576, file: !1574, discriminator: 3)
!12444 = !DILocation(line: 48, column: 2, scope: !12443)
!12445 = !DILocation(line: 50, column: 6, scope: !12446)
!12446 = distinct !DILexicalBlock(scope: !1576, file: !1574, line: 50, column: 6)
!12447 = !DILocation(line: 50, column: 12, scope: !12446)
!12448 = !DILocation(line: 50, column: 17, scope: !12446)
!12449 = !DILocation(line: 50, column: 22, scope: !12446)
!12450 = !DILocation(line: 50, column: 29, scope: !12446)
!12451 = !DILocation(line: 50, column: 6, scope: !1576)
!12452 = !DILocation(line: 51, column: 47, scope: !12453)
!12453 = distinct !DILexicalBlock(scope: !12446, file: !1574, line: 50, column: 42)
!12454 = !DILocation(line: 51, column: 3, scope: !12453)
!12455 = !DILocation(line: 54, column: 3, scope: !12453)
!12456 = !DILocation(line: 54, column: 9, scope: !12453)
!12457 = !DILocation(line: 54, column: 17, scope: !12453)
!12458 = !DILocation(line: 55, column: 3, scope: !12453)
!12459 = !DILocation(line: 55, column: 9, scope: !12453)
!12460 = !DILocation(line: 55, column: 15, scope: !12453)
!12461 = !DILocation(line: 58, column: 26, scope: !12453)
!12462 = !DILocation(line: 58, column: 11, scope: !12453)
!12463 = !DILocation(line: 58, column: 3, scope: !12453)
!12464 = !DILocation(line: 64, column: 4, scope: !12465)
!12465 = distinct !DILexicalBlock(scope: !12453, file: !1574, line: 58, column: 44)
!12466 = !DILocation(line: 67, column: 4, scope: !12465)
!12467 = !DILocation(line: 67, column: 10, scope: !12465)
!12468 = !DILocation(line: 67, column: 15, scope: !12465)
!12469 = !DILocation(line: 67, column: 20, scope: !12465)
!12470 = !DILocation(line: 67, column: 26, scope: !12465)
!12471 = !DILocation(line: 68, column: 33, scope: !12465)
!12472 = !DILocation(line: 68, column: 12, scope: !12465)
!12473 = !DILocation(line: 68, column: 4, scope: !12465)
!12474 = !DILocation(line: 71, column: 4, scope: !12465)
!12475 = !DILocation(line: 71, column: 10, scope: !12465)
!12476 = !DILocation(line: 71, column: 15, scope: !12465)
!12477 = !DILocation(line: 71, column: 20, scope: !12465)
!12478 = !DILocation(line: 71, column: 26, scope: !12465)
!12479 = !DILocation(line: 72, column: 33, scope: !12465)
!12480 = !DILocation(line: 72, column: 12, scope: !12465)
!12481 = !DILocation(line: 72, column: 4, scope: !12465)
!12482 = !DILocation(line: 75, column: 49, scope: !12483)
!12483 = distinct !DILexicalBlock(scope: !12446, file: !1574, line: 74, column: 9)
!12484 = !DILocation(line: 76, column: 4, scope: !12483)
!12485 = !DILocation(line: 76, column: 10, scope: !12483)
!12486 = !DILocation(line: 76, column: 15, scope: !12483)
!12487 = !DILocation(line: 76, column: 20, scope: !12483)
!12488 = !DILocation(line: 75, column: 3, scope: !12483)
!12489 = !DILocation(line: 77, column: 3, scope: !12483)
!12490 = !DILocation(line: 77, column: 9, scope: !12483)
!12491 = !DILocation(line: 77, column: 14, scope: !12483)
!12492 = !DILocation(line: 77, column: 19, scope: !12483)
!12493 = !DILocation(line: 77, column: 25, scope: !12483)
!12494 = !DILocation(line: 78, column: 31, scope: !12483)
!12495 = !DILocation(line: 78, column: 10, scope: !12483)
!12496 = !DILocation(line: 78, column: 3, scope: !12483)
!12497 = !DILocation(line: 83, column: 1, scope: !1576)
!12498 = !DILocalVariable(name: "cont", arg: 1, scope: !1591, file: !1574, line: 85, type: !1594)
!12499 = !DILocation(line: 85, column: 46, scope: !1591)
!12500 = !DILocation(line: 86, column: 29, scope: !1591)
!12501 = !DILocation(line: 86, column: 10, scope: !1591)
!12502 = !DILocation(line: 86, column: 2, scope: !1591)
!12503 = !DILocation(line: 89, column: 3, scope: !12504)
!12504 = distinct !DILexicalBlock(scope: !1591, file: !1574, line: 86, column: 36)
!12505 = !DILocation(line: 92, column: 31, scope: !12504)
!12506 = !DILocation(line: 92, column: 10, scope: !12504)
!12507 = !DILocation(line: 92, column: 3, scope: !12504)
!12508 = !DILocation(line: 95, column: 3, scope: !12504)
!12509 = !DILocation(line: 95, column: 9, scope: !12504)
!12510 = !DILocation(line: 95, column: 14, scope: !12504)
!12511 = !DILocation(line: 95, column: 19, scope: !12504)
!12512 = !DILocation(line: 95, column: 25, scope: !12504)
!12513 = !DILocation(line: 96, column: 31, scope: !12504)
!12514 = !DILocation(line: 96, column: 10, scope: !12504)
!12515 = !DILocation(line: 96, column: 3, scope: !12504)
!12516 = !DILocation(line: 98, column: 1, scope: !1591)
!12517 = !DILocalVariable(name: "cont", arg: 1, scope: !1670, file: !1574, line: 105, type: !1594)
!12518 = !DILocation(line: 105, column: 35, scope: !1670)
!12519 = !DILocalVariable(name: "fn", scope: !1670, file: !1574, line: 106, type: !4)
!12520 = !DILocation(line: 106, column: 21, scope: !1670)
!12521 = !DILocalVariable(name: "len", scope: !1670, file: !1574, line: 107, type: !33)
!12522 = !DILocation(line: 107, column: 6, scope: !1670)
!12523 = !DILocation(line: 109, column: 34, scope: !1670)
!12524 = !DILocation(line: 109, column: 2, scope: !1670)
!12525 = !DILocation(line: 125, column: 21, scope: !1670)
!12526 = !DILocation(line: 125, column: 2, scope: !1670)
!12527 = !DILocation(line: 126, column: 6, scope: !12528)
!12528 = distinct !DILexicalBlock(scope: !1670, file: !1574, line: 126, column: 6)
!12529 = !DILocation(line: 126, column: 12, scope: !12528)
!12530 = !DILocation(line: 126, column: 21, scope: !12528)
!12531 = !DILocation(line: 126, column: 25, scope: !12528)
!12532 = !DILocation(line: 126, column: 28, scope: !12533)
!12533 = !DILexicalBlockFile(scope: !12528, file: !1574, discriminator: 1)
!12534 = !DILocation(line: 126, column: 34, scope: !12533)
!12535 = !DILocation(line: 126, column: 43, scope: !12533)
!12536 = !DILocation(line: 126, column: 6, scope: !12533)
!12537 = !DILocation(line: 128, column: 17, scope: !12538)
!12538 = distinct !DILexicalBlock(scope: !12528, file: !1574, line: 126, column: 57)
!12539 = !DILocation(line: 128, column: 23, scope: !12538)
!12540 = !DILocation(line: 128, column: 3, scope: !12538)
!12541 = !DILocation(line: 129, column: 3, scope: !12538)
!12542 = !DILocation(line: 129, column: 9, scope: !12538)
!12543 = !DILocation(line: 129, column: 17, scope: !12538)
!12544 = !DILocation(line: 130, column: 3, scope: !12538)
!12545 = !DILocation(line: 131, column: 22, scope: !12538)
!12546 = !DILocation(line: 131, column: 3, scope: !12538)
!12547 = !DILocation(line: 132, column: 2, scope: !12538)
!12548 = !DILocation(line: 133, column: 6, scope: !12549)
!12549 = distinct !DILexicalBlock(scope: !1670, file: !1574, line: 133, column: 6)
!12550 = !DILocation(line: 133, column: 12, scope: !12549)
!12551 = !DILocation(line: 133, column: 21, scope: !12549)
!12552 = !DILocation(line: 133, column: 25, scope: !12549)
!12553 = !DILocation(line: 133, column: 28, scope: !12554)
!12554 = !DILexicalBlockFile(scope: !12549, file: !1574, discriminator: 1)
!12555 = !DILocation(line: 133, column: 34, scope: !12554)
!12556 = !DILocation(line: 133, column: 43, scope: !12554)
!12557 = !DILocation(line: 133, column: 6, scope: !12554)
!12558 = !DILocation(line: 139, column: 17, scope: !12559)
!12559 = distinct !DILexicalBlock(scope: !12549, file: !1574, line: 133, column: 57)
!12560 = !DILocation(line: 139, column: 23, scope: !12559)
!12561 = !DILocation(line: 139, column: 3, scope: !12559)
!12562 = !DILocation(line: 140, column: 3, scope: !12559)
!12563 = !DILocation(line: 140, column: 9, scope: !12559)
!12564 = !DILocation(line: 140, column: 17, scope: !12559)
!12565 = !DILocation(line: 141, column: 3, scope: !12559)
!12566 = !DILocation(line: 142, column: 22, scope: !12559)
!12567 = !DILocation(line: 142, column: 3, scope: !12559)
!12568 = !DILocation(line: 143, column: 2, scope: !12559)
!12569 = !DILocation(line: 144, column: 6, scope: !12570)
!12570 = distinct !DILexicalBlock(scope: !1670, file: !1574, line: 144, column: 6)
!12571 = !DILocation(line: 144, column: 12, scope: !12570)
!12572 = !DILocation(line: 144, column: 21, scope: !12570)
!12573 = !DILocation(line: 144, column: 25, scope: !12570)
!12574 = !DILocation(line: 144, column: 28, scope: !12575)
!12575 = !DILexicalBlockFile(scope: !12570, file: !1574, discriminator: 1)
!12576 = !DILocation(line: 144, column: 34, scope: !12575)
!12577 = !DILocation(line: 144, column: 43, scope: !12575)
!12578 = !DILocation(line: 144, column: 6, scope: !12575)
!12579 = !DILocation(line: 146, column: 17, scope: !12580)
!12580 = distinct !DILexicalBlock(scope: !12570, file: !1574, line: 144, column: 57)
!12581 = !DILocation(line: 146, column: 23, scope: !12580)
!12582 = !DILocation(line: 146, column: 3, scope: !12580)
!12583 = !DILocation(line: 147, column: 3, scope: !12580)
!12584 = !DILocation(line: 147, column: 9, scope: !12580)
!12585 = !DILocation(line: 147, column: 17, scope: !12580)
!12586 = !DILocation(line: 148, column: 22, scope: !12580)
!12587 = !DILocation(line: 148, column: 3, scope: !12580)
!12588 = !DILocation(line: 149, column: 3, scope: !12580)
!12589 = !DILocation(line: 149, column: 9, scope: !12580)
!12590 = !DILocation(line: 149, column: 14, scope: !12580)
!12591 = !DILocation(line: 149, column: 19, scope: !12580)
!12592 = !DILocation(line: 149, column: 22, scope: !12580)
!12593 = !DILocation(line: 150, column: 3, scope: !12580)
!12594 = !DILocation(line: 151, column: 2, scope: !12580)
!12595 = !DILocation(line: 152, column: 6, scope: !12596)
!12596 = distinct !DILexicalBlock(scope: !1670, file: !1574, line: 152, column: 6)
!12597 = !DILocation(line: 152, column: 12, scope: !12596)
!12598 = !DILocation(line: 152, column: 21, scope: !12596)
!12599 = !DILocation(line: 152, column: 25, scope: !12596)
!12600 = !DILocation(line: 152, column: 28, scope: !12601)
!12601 = !DILexicalBlockFile(scope: !12596, file: !1574, discriminator: 1)
!12602 = !DILocation(line: 152, column: 34, scope: !12601)
!12603 = !DILocation(line: 152, column: 43, scope: !12601)
!12604 = !DILocation(line: 152, column: 6, scope: !12601)
!12605 = !DILocation(line: 153, column: 3, scope: !12606)
!12606 = distinct !DILexicalBlock(scope: !12596, file: !1574, line: 152, column: 57)
!12607 = !DILocation(line: 154, column: 27, scope: !12606)
!12608 = !DILocation(line: 154, column: 11, scope: !12606)
!12609 = !DILocation(line: 154, column: 3, scope: !12606)
!12610 = !DILocation(line: 158, column: 23, scope: !1670)
!12611 = !DILocation(line: 158, column: 29, scope: !1670)
!12612 = !DILocation(line: 158, column: 40, scope: !1670)
!12613 = !DILocation(line: 158, column: 46, scope: !1670)
!12614 = !DILocation(line: 158, column: 51, scope: !1670)
!12615 = !DILocation(line: 158, column: 54, scope: !1670)
!12616 = !DILocation(line: 158, column: 60, scope: !1670)
!12617 = !DILocation(line: 159, column: 9, scope: !1670)
!12618 = !DILocation(line: 159, column: 15, scope: !1670)
!12619 = !DILocation(line: 158, column: 8, scope: !1670)
!12620 = !DILocation(line: 158, column: 6, scope: !1670)
!12621 = !DILocation(line: 161, column: 6, scope: !12622)
!12622 = distinct !DILexicalBlock(scope: !1670, file: !1574, line: 161, column: 6)
!12623 = !DILocation(line: 161, column: 12, scope: !12622)
!12624 = !DILocation(line: 161, column: 18, scope: !12622)
!12625 = !DILocation(line: 161, column: 10, scope: !12622)
!12626 = !DILocation(line: 161, column: 6, scope: !1670)
!12627 = !DILocation(line: 162, column: 3, scope: !12628)
!12628 = distinct !DILexicalBlock(scope: !12622, file: !1574, line: 161, column: 28)
!12629 = !DILocation(line: 163, column: 27, scope: !12628)
!12630 = !DILocation(line: 163, column: 11, scope: !12628)
!12631 = !DILocation(line: 163, column: 3, scope: !12628)
!12632 = !DILocation(line: 166, column: 26, scope: !1670)
!12633 = !DILocation(line: 166, column: 9, scope: !1670)
!12634 = !DILocation(line: 167, column: 2, scope: !1670)
!12635 = !DILocation(line: 168, column: 1, scope: !1670)
!12636 = !DILocalVariable(name: "cont", arg: 1, scope: !1669, file: !1574, line: 100, type: !1594)
!12637 = !DILocation(line: 100, column: 44, scope: !1669)
!12638 = !DILocation(line: 101, column: 2, scope: !1669)
!12639 = !DILocation(line: 102, column: 25, scope: !1669)
!12640 = !DILocation(line: 102, column: 9, scope: !1669)
!12641 = !DILocation(line: 102, column: 2, scope: !1669)
!12642 = !DILocalVariable(name: "sig", arg: 1, scope: !1684, file: !1672, line: 53, type: !33)
!12643 = !DILocation(line: 53, column: 46, scope: !1684)
!12644 = !DILocalVariable(name: "i", scope: !1684, file: !1672, line: 54, type: !33)
!12645 = !DILocation(line: 54, column: 6, scope: !1684)
!12646 = !DILocalVariable(name: "sd_tmp", scope: !1684, file: !1672, line: 55, type: !1674)
!12647 = !DILocation(line: 55, column: 15, scope: !1684)
!12648 = !DILocation(line: 57, column: 8, scope: !12649)
!12649 = distinct !DILexicalBlock(scope: !1684, file: !1672, line: 57, column: 6)
!12650 = !DILocation(line: 57, column: 14, scope: !12649)
!12651 = !DILocation(line: 57, column: 6, scope: !1684)
!12652 = !DILocation(line: 58, column: 3, scope: !12653)
!12653 = distinct !DILexicalBlock(scope: !12649, file: !1672, line: 57, column: 19)
!12654 = !DILocation(line: 59, column: 2, scope: !12653)
!12655 = !DILocation(line: 61, column: 7, scope: !12656)
!12656 = distinct !DILexicalBlock(scope: !1684, file: !1672, line: 61, column: 6)
!12657 = !DILocation(line: 61, column: 6, scope: !1684)
!12658 = !DILocation(line: 62, column: 3, scope: !12659)
!12659 = distinct !DILexicalBlock(scope: !12656, file: !1672, line: 61, column: 24)
!12660 = !DILocation(line: 63, column: 3, scope: !12659)
!12661 = !DILocation(line: 65, column: 9, scope: !12662)
!12662 = distinct !DILexicalBlock(scope: !1684, file: !1672, line: 65, column: 2)
!12663 = !DILocation(line: 65, column: 7, scope: !12662)
!12664 = !DILocation(line: 65, column: 24, scope: !12665)
!12665 = !DILexicalBlockFile(scope: !12666, file: !1672, discriminator: 1)
!12666 = distinct !DILexicalBlock(scope: !12662, file: !1672, line: 65, column: 2)
!12667 = !DILocation(line: 65, column: 14, scope: !12665)
!12668 = !DILocation(line: 65, column: 27, scope: !12665)
!12669 = !DILocation(line: 65, column: 37, scope: !12665)
!12670 = !DILocation(line: 65, column: 41, scope: !12665)
!12671 = !DILocation(line: 65, column: 54, scope: !12672)
!12672 = !DILexicalBlockFile(scope: !12666, file: !1672, discriminator: 2)
!12673 = !DILocation(line: 65, column: 44, scope: !12672)
!12674 = !DILocation(line: 65, column: 57, scope: !12672)
!12675 = !DILocation(line: 65, column: 70, scope: !12672)
!12676 = !DILocation(line: 65, column: 67, scope: !12672)
!12677 = !DILocation(line: 65, column: 2, scope: !12678)
!12678 = !DILexicalBlockFile(scope: !12662, file: !1672, discriminator: 3)
!12679 = !DILocation(line: 65, column: 2, scope: !12680)
!12680 = !DILexicalBlockFile(scope: !12662, file: !1672, discriminator: 4)
!12681 = !DILocation(line: 65, column: 76, scope: !12682)
!12682 = !DILexicalBlockFile(scope: !12666, file: !1672, discriminator: 5)
!12683 = !DILocation(line: 65, column: 2, scope: !12682)
!12684 = !DILocation(line: 67, column: 11, scope: !1684)
!12685 = !DILocation(line: 67, column: 9, scope: !1684)
!12686 = !DILocation(line: 68, column: 7, scope: !12687)
!12687 = distinct !DILexicalBlock(scope: !1684, file: !1672, line: 68, column: 6)
!12688 = !DILocation(line: 68, column: 6, scope: !1684)
!12689 = !DILocation(line: 69, column: 3, scope: !12690)
!12690 = distinct !DILexicalBlock(scope: !12687, file: !1672, line: 68, column: 15)
!12691 = !DILocation(line: 70, column: 3, scope: !12690)
!12692 = !DILocation(line: 72, column: 30, scope: !1684)
!12693 = !DILocation(line: 72, column: 20, scope: !1684)
!12694 = !DILocation(line: 72, column: 33, scope: !1684)
!12695 = !DILocation(line: 72, column: 2, scope: !1684)
!12696 = !DILocation(line: 72, column: 10, scope: !1684)
!12697 = !DILocation(line: 72, column: 18, scope: !1684)
!12698 = !DILocation(line: 74, column: 15, scope: !12699)
!12699 = distinct !DILexicalBlock(scope: !1684, file: !1672, line: 74, column: 6)
!12700 = !DILocation(line: 74, column: 41, scope: !12699)
!12701 = !DILocation(line: 74, column: 32, scope: !12699)
!12702 = !DILocation(line: 74, column: 6, scope: !12699)
!12703 = !DILocation(line: 74, column: 49, scope: !12699)
!12704 = !DILocation(line: 74, column: 6, scope: !1684)
!12705 = !DILocation(line: 75, column: 3, scope: !12699)
!12706 = !DILocation(line: 77, column: 2, scope: !1684)
!12707 = !DILocation(line: 78, column: 1, scope: !1684)
!12708 = !DILocation(line: 92, column: 2, scope: !1687)
!12709 = !DILocation(line: 93, column: 1, scope: !1687)
!12710 = !DILocation(line: 84, column: 2, scope: !1685)
!12711 = !DILocation(line: 85, column: 1, scope: !1685)
!12712 = !DILocation(line: 88, column: 2, scope: !1686)
!12713 = !DILocation(line: 89, column: 1, scope: !1686)
!12714 = !DILocalVariable(name: "i", scope: !1681, file: !1672, line: 101, type: !33)
!12715 = !DILocation(line: 101, column: 6, scope: !1681)
!12716 = !DILocation(line: 104, column: 9, scope: !12717)
!12717 = distinct !DILexicalBlock(scope: !1681, file: !1672, line: 104, column: 2)
!12718 = !DILocation(line: 104, column: 7, scope: !12717)
!12719 = !DILocation(line: 104, column: 24, scope: !12720)
!12720 = !DILexicalBlockFile(scope: !12721, file: !1672, discriminator: 1)
!12721 = distinct !DILexicalBlock(scope: !12717, file: !1672, line: 104, column: 2)
!12722 = !DILocation(line: 104, column: 14, scope: !12720)
!12723 = !DILocation(line: 104, column: 27, scope: !12720)
!12724 = !DILocation(line: 104, column: 37, scope: !12720)
!12725 = !DILocation(line: 104, column: 2, scope: !12720)
!12726 = !DILocation(line: 105, column: 21, scope: !12721)
!12727 = !DILocation(line: 105, column: 11, scope: !12721)
!12728 = !DILocation(line: 105, column: 24, scope: !12721)
!12729 = !DILocation(line: 105, column: 45, scope: !12721)
!12730 = !DILocation(line: 105, column: 35, scope: !12721)
!12731 = !DILocation(line: 105, column: 48, scope: !12721)
!12732 = !DILocation(line: 105, column: 3, scope: !12721)
!12733 = !DILocation(line: 104, column: 43, scope: !12734)
!12734 = !DILexicalBlockFile(scope: !12721, file: !1672, discriminator: 2)
!12735 = !DILocation(line: 104, column: 2, scope: !12734)
!12736 = !DILocation(line: 108, column: 20, scope: !1681)
!12737 = !DILocation(line: 108, column: 18, scope: !1681)
!12738 = !DILocation(line: 109, column: 7, scope: !12739)
!12739 = distinct !DILexicalBlock(scope: !1681, file: !1672, line: 109, column: 6)
!12740 = !DILocation(line: 109, column: 6, scope: !1681)
!12741 = !DILocation(line: 110, column: 3, scope: !12739)
!12742 = !DILocation(line: 112, column: 2, scope: !1681)
!12743 = !DILocation(line: 113, column: 1, scope: !1681)
!12744 = !DILocalVariable(name: "sd_tmp", scope: !1682, file: !1672, line: 119, type: !1674)
!12745 = !DILocation(line: 119, column: 15, scope: !1682)
!12746 = !DILocation(line: 121, column: 6, scope: !12747)
!12747 = distinct !DILexicalBlock(scope: !1682, file: !1672, line: 121, column: 6)
!12748 = !DILocation(line: 121, column: 6, scope: !1682)
!12749 = !DILocation(line: 122, column: 3, scope: !12747)
!12750 = !DILocation(line: 122, column: 45, scope: !12751)
!12751 = !DILexicalBlockFile(scope: !12747, file: !1672, discriminator: 1)
!12752 = !DILocation(line: 122, column: 36, scope: !12751)
!12753 = !DILocation(line: 122, column: 20, scope: !12751)
!12754 = !DILocation(line: 122, column: 18, scope: !12751)
!12755 = !DILocation(line: 122, column: 3, scope: !12751)
!12756 = !DILocation(line: 123, column: 5, scope: !12757)
!12757 = distinct !DILexicalBlock(scope: !12747, file: !1672, line: 122, column: 64)
!12758 = !DILocation(line: 123, column: 13, scope: !12757)
!12759 = !DILocation(line: 123, column: 4, scope: !12757)
!12760 = !DILocation(line: 124, column: 10, scope: !12757)
!12761 = !DILocation(line: 124, column: 4, scope: !12757)
!12762 = !DILocation(line: 122, column: 3, scope: !12763)
!12763 = !DILexicalBlockFile(scope: !12747, file: !1672, discriminator: 2)
!12764 = !DILocation(line: 122, column: 3, scope: !12765)
!12765 = !DILexicalBlockFile(scope: !12747, file: !1672, discriminator: 3)
!12766 = !DILocation(line: 127, column: 3, scope: !12747)
!12767 = !DILocation(line: 128, column: 1, scope: !1682)
!12768 = !DILocation(line: 135, column: 17, scope: !1683)
!12769 = !DILocation(line: 135, column: 2, scope: !1683)
!12770 = !DILocation(line: 136, column: 18, scope: !1683)
!12771 = !DILocation(line: 137, column: 1, scope: !1683)
!12772 = !DILocalVariable(name: "arg1", arg: 1, scope: !1810, file: !1713, line: 18, type: !26)
!12773 = !DILocation(line: 18, column: 25, scope: !1810)
!12774 = !DILocalVariable(name: "arg2", arg: 2, scope: !1810, file: !1713, line: 18, type: !26)
!12775 = !DILocation(line: 18, column: 37, scope: !1810)
!12776 = !DILocalVariable(name: "e1", scope: !1810, file: !1713, line: 19, type: !1715)
!12777 = !DILocation(line: 19, column: 18, scope: !1810)
!12778 = !DILocalVariable(name: "e2", scope: !1810, file: !1713, line: 20, type: !1715)
!12779 = !DILocation(line: 20, column: 18, scope: !1810)
!12780 = !DILocalVariable(name: "len1", scope: !1810, file: !1713, line: 21, type: !33)
!12781 = !DILocation(line: 21, column: 6, scope: !1810)
!12782 = !DILocalVariable(name: "len2", scope: !1810, file: !1713, line: 21, type: !33)
!12783 = !DILocation(line: 21, column: 12, scope: !1810)
!12784 = !DILocation(line: 23, column: 26, scope: !1810)
!12785 = !DILocation(line: 23, column: 7, scope: !1810)
!12786 = !DILocation(line: 23, column: 5, scope: !1810)
!12787 = !DILocation(line: 24, column: 26, scope: !1810)
!12788 = !DILocation(line: 24, column: 7, scope: !1810)
!12789 = !DILocation(line: 24, column: 5, scope: !1810)
!12790 = !DILocation(line: 26, column: 7, scope: !12791)
!12791 = distinct !DILexicalBlock(scope: !1810, file: !1713, line: 26, column: 6)
!12792 = !DILocation(line: 26, column: 10, scope: !12791)
!12793 = !DILocation(line: 26, column: 14, scope: !12794)
!12794 = !DILexicalBlockFile(scope: !12791, file: !1713, discriminator: 1)
!12795 = !DILocation(line: 26, column: 17, scope: !12794)
!12796 = !DILocation(line: 26, column: 21, scope: !12797)
!12797 = !DILexicalBlockFile(scope: !12791, file: !1713, discriminator: 2)
!12798 = !DILocation(line: 26, column: 25, scope: !12797)
!12799 = !DILocation(line: 26, column: 30, scope: !12797)
!12800 = !DILocation(line: 26, column: 34, scope: !12801)
!12801 = !DILexicalBlockFile(scope: !12791, file: !1713, discriminator: 3)
!12802 = !DILocation(line: 26, column: 38, scope: !12801)
!12803 = !DILocation(line: 26, column: 6, scope: !12801)
!12804 = !DILocation(line: 27, column: 3, scope: !12791)
!12805 = !DILocation(line: 29, column: 9, scope: !1810)
!12806 = !DILocation(line: 29, column: 9, scope: !12807)
!12807 = !DILexicalBlockFile(scope: !1810, file: !1713, discriminator: 1)
!12808 = !DILocation(line: 29, column: 9, scope: !12809)
!12809 = !DILexicalBlockFile(scope: !1810, file: !1713, discriminator: 2)
!12810 = !DILocation(line: 29, column: 9, scope: !12811)
!12811 = !DILexicalBlockFile(scope: !1810, file: !1713, discriminator: 3)
!12812 = !DILocation(line: 29, column: 7, scope: !12811)
!12813 = !DILocation(line: 30, column: 9, scope: !1810)
!12814 = !DILocation(line: 30, column: 9, scope: !12807)
!12815 = !DILocation(line: 30, column: 9, scope: !12809)
!12816 = !DILocation(line: 30, column: 9, scope: !12811)
!12817 = !DILocation(line: 30, column: 7, scope: !12811)
!12818 = !DILocation(line: 32, column: 6, scope: !12819)
!12819 = distinct !DILexicalBlock(scope: !1810, file: !1713, line: 32, column: 6)
!12820 = !DILocation(line: 32, column: 10, scope: !12819)
!12821 = !DILocation(line: 32, column: 16, scope: !12819)
!12822 = !DILocation(line: 32, column: 20, scope: !12819)
!12823 = !DILocation(line: 32, column: 13, scope: !12819)
!12824 = !DILocation(line: 32, column: 23, scope: !12819)
!12825 = !DILocation(line: 32, column: 26, scope: !12826)
!12826 = !DILexicalBlockFile(scope: !12819, file: !1713, discriminator: 1)
!12827 = !DILocation(line: 32, column: 34, scope: !12826)
!12828 = !DILocation(line: 32, column: 31, scope: !12826)
!12829 = !DILocation(line: 32, column: 39, scope: !12826)
!12830 = !DILocation(line: 33, column: 15, scope: !12819)
!12831 = !DILocation(line: 33, column: 19, scope: !12819)
!12832 = !DILocation(line: 33, column: 25, scope: !12819)
!12833 = !DILocation(line: 33, column: 29, scope: !12819)
!12834 = !DILocation(line: 33, column: 35, scope: !12819)
!12835 = !DILocation(line: 33, column: 7, scope: !12819)
!12836 = !DILocation(line: 32, column: 6, scope: !12809)
!12837 = !DILocation(line: 34, column: 3, scope: !12819)
!12838 = !DILocation(line: 36, column: 3, scope: !12819)
!12839 = !DILocation(line: 37, column: 1, scope: !1810)
!12840 = !DILocalVariable(name: "euid_p", arg: 1, scope: !1811, file: !1713, line: 39, type: !1715)
!12841 = !DILocation(line: 39, column: 43, scope: !1811)
!12842 = !DILocation(line: 41, column: 6, scope: !12843)
!12843 = distinct !DILexicalBlock(scope: !1811, file: !1713, line: 41, column: 6)
!12844 = !DILocation(line: 41, column: 6, scope: !1811)
!12845 = !DILocation(line: 42, column: 7, scope: !12846)
!12846 = distinct !DILexicalBlock(scope: !12847, file: !1713, line: 42, column: 7)
!12847 = distinct !DILexicalBlock(scope: !12843, file: !1713, line: 41, column: 14)
!12848 = !DILocation(line: 42, column: 15, scope: !12846)
!12849 = !DILocation(line: 42, column: 7, scope: !12847)
!12850 = !DILocation(line: 43, column: 10, scope: !12846)
!12851 = !DILocation(line: 43, column: 18, scope: !12846)
!12852 = !DILocation(line: 43, column: 4, scope: !12846)
!12853 = !DILocation(line: 44, column: 9, scope: !12847)
!12854 = !DILocation(line: 44, column: 3, scope: !12847)
!12855 = !DILocation(line: 45, column: 2, scope: !12847)
!12856 = !DILocation(line: 46, column: 2, scope: !1811)
!12857 = !DILocalVariable(name: "euid_vp", arg: 1, scope: !1814, file: !1713, line: 49, type: !26)
!12858 = !DILocation(line: 49, column: 35, scope: !1814)
!12859 = !DILocation(line: 51, column: 42, scope: !1814)
!12860 = !DILocation(line: 51, column: 23, scope: !1814)
!12861 = !DILocation(line: 51, column: 2, scope: !1814)
!12862 = !DILocation(line: 52, column: 2, scope: !1814)
!12863 = !DILocation(line: 57, column: 6, scope: !12864)
!12864 = distinct !DILexicalBlock(scope: !1815, file: !1713, line: 57, column: 6)
!12865 = !DILocation(line: 57, column: 6, scope: !1815)
!12866 = !DILocation(line: 58, column: 3, scope: !12864)
!12867 = !DILocation(line: 60, column: 14, scope: !1815)
!12868 = !DILocation(line: 60, column: 12, scope: !1815)
!12869 = !DILocation(line: 61, column: 7, scope: !12870)
!12870 = distinct !DILexicalBlock(scope: !1815, file: !1713, line: 61, column: 6)
!12871 = !DILocation(line: 61, column: 6, scope: !1815)
!12872 = !DILocation(line: 62, column: 3, scope: !12870)
!12873 = !DILocation(line: 64, column: 14, scope: !1815)
!12874 = !DILocation(line: 64, column: 12, scope: !1815)
!12875 = !DILocation(line: 65, column: 2, scope: !1815)
!12876 = !DILocation(line: 65, column: 13, scope: !1815)
!12877 = !DILocation(line: 65, column: 23, scope: !1815)
!12878 = !DILocation(line: 67, column: 2, scope: !1815)
!12879 = !DILocation(line: 68, column: 1, scope: !1815)
!12880 = !DILocation(line: 71, column: 2, scope: !1816)
!12881 = !DILocation(line: 72, column: 16, scope: !1816)
!12882 = !DILocation(line: 72, column: 2, scope: !1816)
!12883 = !DILocation(line: 73, column: 1, scope: !1816)
!12884 = !DILocalVariable(name: "cptr", arg: 1, scope: !1817, file: !1713, line: 75, type: !1720)
!12885 = !DILocation(line: 75, column: 34, scope: !1817)
!12886 = !DILocalVariable(name: "sa_p", arg: 2, scope: !1817, file: !1713, line: 75, type: !1796)
!12887 = !DILocation(line: 75, column: 57, scope: !1817)
!12888 = !DILocalVariable(name: "sa_len", arg: 3, scope: !1817, file: !1713, line: 75, type: !33)
!12889 = !DILocation(line: 75, column: 67, scope: !1817)
!12890 = !DILocalVariable(name: "id", arg: 4, scope: !1817, file: !1713, line: 76, type: !48)
!12891 = !DILocation(line: 76, column: 13, scope: !1817)
!12892 = !DILocalVariable(name: "fn", scope: !1817, file: !1713, line: 77, type: !4)
!12893 = !DILocation(line: 77, column: 14, scope: !1817)
!12894 = !DILocalVariable(name: "euid_new", scope: !1817, file: !1713, line: 78, type: !1715)
!12895 = !DILocation(line: 78, column: 18, scope: !1817)
!12896 = !DILocation(line: 80, column: 8, scope: !12897)
!12897 = distinct !DILexicalBlock(scope: !1817, file: !1713, line: 80, column: 6)
!12898 = !DILocation(line: 80, column: 14, scope: !12897)
!12899 = !DILocation(line: 80, column: 6, scope: !1817)
!12900 = !DILocation(line: 81, column: 35, scope: !12897)
!12901 = !DILocation(line: 81, column: 39, scope: !12897)
!12902 = !DILocation(line: 81, column: 3, scope: !12897)
!12903 = !DILocation(line: 83, column: 13, scope: !1817)
!12904 = !DILocation(line: 83, column: 11, scope: !1817)
!12905 = !DILocation(line: 84, column: 7, scope: !12906)
!12906 = distinct !DILexicalBlock(scope: !1817, file: !1713, line: 84, column: 6)
!12907 = !DILocation(line: 84, column: 6, scope: !1817)
!12908 = !DILocation(line: 85, column: 3, scope: !12906)
!12909 = !DILocation(line: 87, column: 27, scope: !1817)
!12910 = !DILocation(line: 87, column: 19, scope: !1817)
!12911 = !DILocation(line: 87, column: 2, scope: !1817)
!12912 = !DILocation(line: 87, column: 12, scope: !1817)
!12913 = !DILocation(line: 87, column: 17, scope: !1817)
!12914 = !DILocation(line: 88, column: 7, scope: !12915)
!12915 = distinct !DILexicalBlock(scope: !1817, file: !1713, line: 88, column: 6)
!12916 = !DILocation(line: 88, column: 17, scope: !12915)
!12917 = !DILocation(line: 88, column: 6, scope: !1817)
!12918 = !DILocation(line: 89, column: 9, scope: !12919)
!12919 = distinct !DILexicalBlock(scope: !12915, file: !1713, line: 88, column: 23)
!12920 = !DILocation(line: 89, column: 3, scope: !12919)
!12921 = !DILocation(line: 90, column: 3, scope: !12919)
!12922 = !DILocation(line: 93, column: 10, scope: !1817)
!12923 = !DILocation(line: 93, column: 20, scope: !1817)
!12924 = !DILocation(line: 93, column: 2, scope: !1817)
!12925 = !DILocation(line: 93, column: 26, scope: !1817)
!12926 = !DILocation(line: 93, column: 32, scope: !1817)
!12927 = !DILocation(line: 94, column: 19, scope: !1817)
!12928 = !DILocation(line: 94, column: 2, scope: !1817)
!12929 = !DILocation(line: 94, column: 12, scope: !1817)
!12930 = !DILocation(line: 94, column: 17, scope: !1817)
!12931 = !DILocation(line: 95, column: 17, scope: !1817)
!12932 = !DILocation(line: 95, column: 2, scope: !1817)
!12933 = !DILocation(line: 95, column: 12, scope: !1817)
!12934 = !DILocation(line: 95, column: 15, scope: !1817)
!12935 = !DILocation(line: 97, column: 17, scope: !12936)
!12936 = distinct !DILexicalBlock(scope: !1817, file: !1713, line: 97, column: 6)
!12937 = !DILocation(line: 97, column: 28, scope: !12936)
!12938 = !DILocation(line: 97, column: 7, scope: !12936)
!12939 = !DILocation(line: 97, column: 6, scope: !1817)
!12940 = !DILocation(line: 98, column: 9, scope: !12941)
!12941 = distinct !DILexicalBlock(scope: !12942, file: !1713, line: 98, column: 7)
!12942 = distinct !DILexicalBlock(scope: !12936, file: !1713, line: 97, column: 39)
!12943 = !DILocation(line: 98, column: 15, scope: !12941)
!12944 = !DILocation(line: 98, column: 7, scope: !12942)
!12945 = !DILocation(line: 99, column: 33, scope: !12941)
!12946 = !DILocation(line: 99, column: 37, scope: !12941)
!12947 = !DILocation(line: 99, column: 4, scope: !12941)
!12948 = !DILocation(line: 101, column: 3, scope: !12942)
!12949 = !DILocation(line: 103, column: 24, scope: !12950)
!12950 = distinct !DILexicalBlock(scope: !12936, file: !1713, line: 102, column: 9)
!12951 = !DILocation(line: 103, column: 3, scope: !12950)
!12952 = !DILocation(line: 104, column: 3, scope: !12950)
!12953 = !DILocation(line: 106, column: 1, scope: !1817)
!12954 = !DILocalVariable(name: "sa_p", arg: 1, scope: !1820, file: !1713, line: 108, type: !1796)
!12955 = !DILocation(line: 108, column: 40, scope: !1820)
!12956 = !DILocalVariable(name: "id", arg: 2, scope: !1820, file: !1713, line: 108, type: !33)
!12957 = !DILocation(line: 108, column: 50, scope: !1820)
!12958 = !DILocalVariable(name: "euid_tmp", scope: !1820, file: !1713, line: 109, type: !1716)
!12959 = !DILocation(line: 109, column: 17, scope: !1820)
!12960 = !DILocalVariable(name: "euid_p", scope: !1820, file: !1713, line: 110, type: !1715)
!12961 = !DILocation(line: 110, column: 18, scope: !1820)
!12962 = !DILocalVariable(name: "gl_tmp", scope: !1820, file: !1713, line: 111, type: !1730)
!12963 = !DILocation(line: 111, column: 10, scope: !1820)
!12964 = !DILocation(line: 113, column: 18, scope: !1820)
!12965 = !DILocation(line: 113, column: 11, scope: !1820)
!12966 = !DILocation(line: 113, column: 16, scope: !1820)
!12967 = !DILocation(line: 114, column: 16, scope: !1820)
!12968 = !DILocation(line: 114, column: 11, scope: !1820)
!12969 = !DILocation(line: 114, column: 14, scope: !1820)
!12970 = !DILocation(line: 116, column: 24, scope: !1820)
!12971 = !DILocation(line: 116, column: 35, scope: !1820)
!12972 = !DILocation(line: 116, column: 11, scope: !1820)
!12973 = !DILocation(line: 116, column: 9, scope: !1820)
!12974 = !DILocation(line: 117, column: 7, scope: !12975)
!12975 = distinct !DILexicalBlock(scope: !1820, file: !1713, line: 117, column: 6)
!12976 = !DILocation(line: 117, column: 6, scope: !1820)
!12977 = !DILocation(line: 118, column: 3, scope: !12975)
!12978 = !DILocation(line: 120, column: 43, scope: !1820)
!12979 = !DILocation(line: 120, column: 30, scope: !1820)
!12980 = !DILocation(line: 120, column: 11, scope: !1820)
!12981 = !DILocation(line: 120, column: 9, scope: !1820)
!12982 = !DILocation(line: 121, column: 23, scope: !1820)
!12983 = !DILocation(line: 121, column: 2, scope: !1820)
!12984 = !DILocation(line: 123, column: 2, scope: !1820)
!12985 = !DILocation(line: 124, column: 1, scope: !1820)
!12986 = !DILocalVariable(name: "sock", arg: 1, scope: !1823, file: !1713, line: 133, type: !33)
!12987 = !DILocation(line: 133, column: 25, scope: !1823)
!12988 = !DILocalVariable(name: "fn", scope: !1823, file: !1713, line: 134, type: !4)
!12989 = !DILocation(line: 134, column: 14, scope: !1823)
!12990 = !DILocalVariable(name: "sa", scope: !1823, file: !1713, line: 135, type: !12991)
!12991 = !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr_storage", file: !9, line: 166, size: 1024, align: 64, elements: !12992)
!12992 = !{!12993, !12994, !12995}
!12993 = !DIDerivedType(tag: DW_TAG_member, name: "ss_family", scope: !12991, file: !9, line: 168, baseType: !12, size: 16, align: 16)
!12994 = !DIDerivedType(tag: DW_TAG_member, name: "__ss_padding", scope: !12991, file: !9, line: 169, baseType: !7217, size: 944, align: 8, offset: 16)
!12995 = !DIDerivedType(tag: DW_TAG_member, name: "__ss_align", scope: !12991, file: !9, line: 170, baseType: !37, size: 64, align: 64, offset: 960)
!12996 = !DILocation(line: 135, column: 26, scope: !1823)
!12997 = !DILocalVariable(name: "newbuf", scope: !1823, file: !1713, line: 136, type: !20)
!12998 = !DILocation(line: 136, column: 10, scope: !1823)
!12999 = !DILocalVariable(name: "mesg", scope: !1823, file: !1713, line: 137, type: !1770)
!13000 = !DILocation(line: 137, column: 12, scope: !1823)
!13001 = !DILocalVariable(name: "mesg_len", scope: !1823, file: !1713, line: 138, type: !33)
!13002 = !DILocation(line: 138, column: 6, scope: !1823)
!13003 = !DILocalVariable(name: "sa_len", scope: !1823, file: !1713, line: 140, type: !73)
!13004 = !DILocation(line: 140, column: 15, scope: !1823)
!13005 = !DILocalVariable(name: "gl_tmp", scope: !1823, file: !1713, line: 141, type: !1730)
!13006 = !DILocation(line: 141, column: 10, scope: !1823)
!13007 = !DILocalVariable(name: "euid", scope: !1823, file: !1713, line: 142, type: !1716)
!13008 = !DILocation(line: 142, column: 17, scope: !1823)
!13009 = !DILocalVariable(name: "ni_l", scope: !1823, file: !1713, line: 143, type: !1791)
!13010 = !DILocation(line: 143, column: 7, scope: !1823)
!13011 = !DILocation(line: 146, column: 11, scope: !1823)
!13012 = !DILocation(line: 146, column: 9, scope: !1823)
!13013 = !DILocation(line: 147, column: 7, scope: !13014)
!13014 = distinct !DILexicalBlock(scope: !1823, file: !1713, line: 147, column: 6)
!13015 = !DILocation(line: 147, column: 6, scope: !1823)
!13016 = !DILocation(line: 148, column: 3, scope: !13014)
!13017 = !DILocation(line: 149, column: 22, scope: !1823)
!13018 = !DILocation(line: 149, column: 9, scope: !1823)
!13019 = !DILocation(line: 149, column: 7, scope: !1823)
!13020 = !DILocation(line: 152, column: 9, scope: !1823)
!13021 = !DILocation(line: 153, column: 2, scope: !1823)
!13022 = !DILocation(line: 153, column: 27, scope: !1823)
!13023 = !DILocation(line: 154, column: 23, scope: !1823)
!13024 = !DILocation(line: 154, column: 29, scope: !1823)
!13025 = !DILocation(line: 155, column: 9, scope: !1823)
!13026 = !DILocation(line: 154, column: 13, scope: !1823)
!13027 = !DILocation(line: 154, column: 11, scope: !1823)
!13028 = !DILocation(line: 156, column: 6, scope: !13029)
!13029 = distinct !DILexicalBlock(scope: !1823, file: !1713, line: 156, column: 6)
!13030 = !DILocation(line: 156, column: 15, scope: !13029)
!13031 = !DILocation(line: 156, column: 6, scope: !1823)
!13032 = !DILocation(line: 157, column: 3, scope: !13033)
!13033 = distinct !DILexicalBlock(scope: !13029, file: !1713, line: 156, column: 20)
!13034 = !DILocation(line: 158, column: 7, scope: !13035)
!13035 = distinct !DILexicalBlock(scope: !13033, file: !1713, line: 158, column: 7)
!13036 = !DILocation(line: 158, column: 7, scope: !13033)
!13037 = !DILocation(line: 159, column: 10, scope: !13035)
!13038 = !DILocation(line: 159, column: 4, scope: !13035)
!13039 = !DILocation(line: 160, column: 3, scope: !13033)
!13040 = !DILocation(line: 163, column: 8, scope: !13041)
!13041 = distinct !DILexicalBlock(scope: !1823, file: !1713, line: 163, column: 6)
!13042 = !DILocation(line: 163, column: 14, scope: !13041)
!13043 = !DILocation(line: 163, column: 6, scope: !1823)
!13044 = !DILocation(line: 164, column: 58, scope: !13041)
!13045 = !DILocation(line: 165, column: 4, scope: !13041)
!13046 = !DILocation(line: 165, column: 10, scope: !13041)
!13047 = !DILocation(line: 164, column: 3, scope: !13041)
!13048 = !DILocation(line: 167, column: 6, scope: !13049)
!13049 = distinct !DILexicalBlock(scope: !1823, file: !1713, line: 167, column: 6)
!13050 = !DILocation(line: 167, column: 15, scope: !13049)
!13051 = !DILocation(line: 167, column: 6, scope: !1823)
!13052 = !DILocation(line: 168, column: 3, scope: !13053)
!13053 = distinct !DILexicalBlock(scope: !13049, file: !1713, line: 167, column: 36)
!13054 = !DILocation(line: 169, column: 7, scope: !13055)
!13055 = distinct !DILexicalBlock(scope: !13053, file: !1713, line: 169, column: 7)
!13056 = !DILocation(line: 169, column: 7, scope: !13053)
!13057 = !DILocation(line: 170, column: 10, scope: !13055)
!13058 = !DILocation(line: 170, column: 4, scope: !13055)
!13059 = !DILocation(line: 171, column: 3, scope: !13053)
!13060 = !DILocation(line: 180, column: 14, scope: !13061)
!13061 = distinct !DILexicalBlock(scope: !1823, file: !1713, line: 180, column: 6)
!13062 = !DILocation(line: 180, column: 39, scope: !13061)
!13063 = !DILocation(line: 180, column: 47, scope: !13061)
!13064 = !DILocation(line: 180, column: 53, scope: !13061)
!13065 = !DILocation(line: 180, column: 6, scope: !13061)
!13066 = !DILocation(line: 180, column: 57, scope: !13061)
!13067 = !DILocation(line: 180, column: 6, scope: !1823)
!13068 = !DILocation(line: 182, column: 9, scope: !13069)
!13069 = distinct !DILexicalBlock(scope: !13070, file: !1713, line: 182, column: 7)
!13070 = distinct !DILexicalBlock(scope: !13061, file: !1713, line: 180, column: 62)
!13071 = !DILocation(line: 182, column: 15, scope: !13069)
!13072 = !DILocation(line: 182, column: 7, scope: !13070)
!13073 = !DILocation(line: 183, column: 56, scope: !13069)
!13074 = !DILocation(line: 183, column: 4, scope: !13069)
!13075 = !DILocation(line: 184, column: 7, scope: !13076)
!13076 = distinct !DILexicalBlock(scope: !13070, file: !1713, line: 184, column: 7)
!13077 = !DILocation(line: 184, column: 7, scope: !13070)
!13078 = !DILocation(line: 185, column: 10, scope: !13076)
!13079 = !DILocation(line: 185, column: 4, scope: !13076)
!13080 = !DILocation(line: 186, column: 3, scope: !13070)
!13081 = !DILocation(line: 190, column: 12, scope: !1823)
!13082 = !DILocation(line: 190, column: 18, scope: !1823)
!13083 = !DILocation(line: 190, column: 7, scope: !1823)
!13084 = !DILocation(line: 190, column: 10, scope: !1823)
!13085 = !DILocation(line: 191, column: 14, scope: !1823)
!13086 = !DILocation(line: 191, column: 7, scope: !1823)
!13087 = !DILocation(line: 191, column: 12, scope: !1823)
!13088 = !DILocation(line: 192, column: 24, scope: !1823)
!13089 = !DILocation(line: 192, column: 35, scope: !1823)
!13090 = !DILocation(line: 192, column: 11, scope: !1823)
!13091 = !DILocation(line: 192, column: 9, scope: !1823)
!13092 = !DILocation(line: 194, column: 7, scope: !13093)
!13093 = distinct !DILexicalBlock(scope: !1823, file: !1713, line: 194, column: 6)
!13094 = !DILocation(line: 194, column: 6, scope: !1823)
!13095 = !DILocation(line: 195, column: 7, scope: !13096)
!13096 = distinct !DILexicalBlock(scope: !13097, file: !1713, line: 195, column: 7)
!13097 = distinct !DILexicalBlock(scope: !13093, file: !1713, line: 194, column: 15)
!13098 = !DILocation(line: 195, column: 13, scope: !13096)
!13099 = !DILocation(line: 195, column: 16, scope: !13096)
!13100 = !DILocation(line: 195, column: 7, scope: !13097)
!13101 = !DILocation(line: 196, column: 10, scope: !13102)
!13102 = distinct !DILexicalBlock(scope: !13103, file: !1713, line: 196, column: 8)
!13103 = distinct !DILexicalBlock(scope: !13096, file: !1713, line: 195, column: 22)
!13104 = !DILocation(line: 196, column: 16, scope: !13102)
!13105 = !DILocation(line: 196, column: 8, scope: !13103)
!13106 = !DILocation(line: 198, column: 11, scope: !13102)
!13107 = !DILocation(line: 197, column: 5, scope: !13102)
!13108 = !DILocation(line: 199, column: 8, scope: !13109)
!13109 = distinct !DILexicalBlock(scope: !13103, file: !1713, line: 199, column: 8)
!13110 = !DILocation(line: 199, column: 8, scope: !13103)
!13111 = !DILocation(line: 200, column: 11, scope: !13109)
!13112 = !DILocation(line: 200, column: 5, scope: !13109)
!13113 = !DILocation(line: 201, column: 4, scope: !13103)
!13114 = !DILocation(line: 204, column: 9, scope: !13115)
!13115 = distinct !DILexicalBlock(scope: !13097, file: !1713, line: 204, column: 7)
!13116 = !DILocation(line: 204, column: 15, scope: !13115)
!13117 = !DILocation(line: 204, column: 7, scope: !13097)
!13118 = !DILocation(line: 205, column: 53, scope: !13115)
!13119 = !DILocation(line: 205, column: 4, scope: !13115)
!13120 = !DILocation(line: 207, column: 28, scope: !13097)
!13121 = !DILocation(line: 207, column: 10, scope: !13097)
!13122 = !DILocation(line: 207, column: 8, scope: !13097)
!13123 = !DILocation(line: 208, column: 8, scope: !13124)
!13124 = distinct !DILexicalBlock(scope: !13097, file: !1713, line: 208, column: 7)
!13125 = !DILocation(line: 208, column: 7, scope: !13097)
!13126 = !DILocation(line: 209, column: 4, scope: !13127)
!13127 = distinct !DILexicalBlock(scope: !13124, file: !1713, line: 208, column: 14)
!13128 = !DILocation(line: 210, column: 8, scope: !13129)
!13129 = distinct !DILexicalBlock(scope: !13127, file: !1713, line: 210, column: 8)
!13130 = !DILocation(line: 210, column: 8, scope: !13127)
!13131 = !DILocation(line: 211, column: 11, scope: !13129)
!13132 = !DILocation(line: 211, column: 5, scope: !13129)
!13133 = !DILocation(line: 212, column: 4, scope: !13127)
!13134 = !DILocation(line: 214, column: 30, scope: !13097)
!13135 = !DILocation(line: 214, column: 38, scope: !13097)
!13136 = !DILocation(line: 215, column: 5, scope: !13097)
!13137 = !DILocation(line: 215, column: 30, scope: !13097)
!13138 = !DILocation(line: 214, column: 10, scope: !13097)
!13139 = !DILocation(line: 214, column: 3, scope: !13097)
!13140 = !DILocalVariable(name: "cont", scope: !13141, file: !1713, line: 217, type: !1720)
!13141 = distinct !DILexicalBlock(scope: !13093, file: !1713, line: 216, column: 9)
!13142 = !DILocation(line: 217, column: 12, scope: !13141)
!13143 = !DILocation(line: 219, column: 9, scope: !13144)
!13144 = distinct !DILexicalBlock(scope: !13141, file: !1713, line: 219, column: 7)
!13145 = !DILocation(line: 219, column: 15, scope: !13144)
!13146 = !DILocation(line: 219, column: 7, scope: !13141)
!13147 = !DILocation(line: 220, column: 49, scope: !13144)
!13148 = !DILocation(line: 220, column: 4, scope: !13144)
!13149 = !DILocation(line: 222, column: 30, scope: !13141)
!13150 = !DILocation(line: 222, column: 38, scope: !13141)
!13151 = !DILocation(line: 222, column: 11, scope: !13141)
!13152 = !DILocation(line: 222, column: 50, scope: !13141)
!13153 = !DILocation(line: 222, column: 8, scope: !13141)
!13154 = !DILocation(line: 225, column: 7, scope: !13155)
!13155 = distinct !DILexicalBlock(scope: !13141, file: !1713, line: 225, column: 7)
!13156 = !DILocation(line: 225, column: 13, scope: !13155)
!13157 = !DILocation(line: 225, column: 18, scope: !13155)
!13158 = !DILocation(line: 225, column: 7, scope: !13141)
!13159 = !DILocation(line: 226, column: 10, scope: !13155)
!13160 = !DILocation(line: 226, column: 16, scope: !13155)
!13161 = !DILocation(line: 226, column: 21, scope: !13155)
!13162 = !DILocation(line: 226, column: 4, scope: !13155)
!13163 = !DILocation(line: 229, column: 18, scope: !13141)
!13164 = !DILocation(line: 229, column: 3, scope: !13141)
!13165 = !DILocation(line: 229, column: 9, scope: !13141)
!13166 = !DILocation(line: 229, column: 14, scope: !13141)
!13167 = !DILocation(line: 229, column: 16, scope: !13141)
!13168 = !DILocation(line: 230, column: 20, scope: !13141)
!13169 = !DILocation(line: 230, column: 3, scope: !13141)
!13170 = !DILocation(line: 230, column: 9, scope: !13141)
!13171 = !DILocation(line: 230, column: 18, scope: !13141)
!13172 = !DILocation(line: 235, column: 3, scope: !13141)
!13173 = !DILocation(line: 235, column: 9, scope: !13141)
!13174 = !DILocation(line: 235, column: 12, scope: !13141)
!13175 = !DILocation(line: 240, column: 11, scope: !13141)
!13176 = !DILocation(line: 240, column: 17, scope: !13141)
!13177 = !DILocation(line: 240, column: 27, scope: !13141)
!13178 = !DILocation(line: 240, column: 10, scope: !13141)
!13179 = !DILocation(line: 240, column: 3, scope: !13141)
!13180 = !DILocation(line: 245, column: 1, scope: !1823)
!13181 = !DILocalVariable(name: "ni", arg: 1, scope: !1903, file: !1828, line: 147, type: !26)
!13182 = !DILocation(line: 147, column: 29, scope: !1903)
!13183 = !DILocation(line: 148, column: 18, scope: !1903)
!13184 = !DILocation(line: 148, column: 11, scope: !1903)
!13185 = !DILocation(line: 148, column: 2, scope: !1903)
!13186 = !DILocation(line: 149, column: 1, scope: !1903)
!13187 = !DILocalVariable(name: "ni", arg: 1, scope: !1904, file: !1828, line: 151, type: !1830)
!13188 = !DILocation(line: 151, column: 21, scope: !1904)
!13189 = !DILocalVariable(name: "close_flag", arg: 2, scope: !1904, file: !1828, line: 151, type: !33)
!13190 = !DILocation(line: 151, column: 29, scope: !1904)
!13191 = !DILocalVariable(name: "fn", scope: !1904, file: !1828, line: 152, type: !4)
!13192 = !DILocation(line: 152, column: 14, scope: !1904)
!13193 = !DILocation(line: 154, column: 6, scope: !13194)
!13194 = distinct !DILexicalBlock(scope: !1904, file: !1828, line: 154, column: 6)
!13195 = !DILocation(line: 154, column: 10, scope: !13194)
!13196 = !DILocation(line: 154, column: 6, scope: !1904)
!13197 = !DILocation(line: 155, column: 9, scope: !13194)
!13198 = !DILocation(line: 155, column: 13, scope: !13194)
!13199 = !DILocation(line: 155, column: 3, scope: !13194)
!13200 = !DILocation(line: 157, column: 6, scope: !13201)
!13201 = distinct !DILexicalBlock(scope: !1904, file: !1828, line: 157, column: 6)
!13202 = !DILocation(line: 157, column: 10, scope: !13201)
!13203 = !DILocation(line: 157, column: 19, scope: !13201)
!13204 = !DILocation(line: 157, column: 24, scope: !13201)
!13205 = !DILocation(line: 157, column: 27, scope: !13206)
!13206 = !DILexicalBlockFile(scope: !13201, file: !1828, discriminator: 1)
!13207 = !DILocation(line: 157, column: 6, scope: !13206)
!13208 = !DILocation(line: 158, column: 9, scope: !13209)
!13209 = distinct !DILexicalBlock(scope: !13210, file: !1828, line: 158, column: 7)
!13210 = distinct !DILexicalBlock(scope: !13201, file: !1828, line: 157, column: 39)
!13211 = !DILocation(line: 158, column: 15, scope: !13209)
!13212 = !DILocation(line: 158, column: 7, scope: !13210)
!13213 = !DILocation(line: 160, column: 5, scope: !13209)
!13214 = !DILocation(line: 160, column: 9, scope: !13209)
!13215 = !DILocation(line: 160, column: 13, scope: !13209)
!13216 = !DILocation(line: 159, column: 4, scope: !13209)
!13217 = !DILocation(line: 161, column: 10, scope: !13210)
!13218 = !DILocation(line: 161, column: 14, scope: !13210)
!13219 = !DILocation(line: 161, column: 3, scope: !13210)
!13220 = !DILocation(line: 162, column: 2, scope: !13210)
!13221 = !DILocation(line: 164, column: 6, scope: !13222)
!13222 = distinct !DILexicalBlock(scope: !1904, file: !1828, line: 164, column: 6)
!13223 = !DILocation(line: 164, column: 10, scope: !13222)
!13224 = !DILocation(line: 164, column: 19, scope: !13222)
!13225 = !DILocation(line: 164, column: 24, scope: !13222)
!13226 = !DILocation(line: 164, column: 27, scope: !13227)
!13227 = !DILexicalBlockFile(scope: !13222, file: !1828, discriminator: 1)
!13228 = !DILocation(line: 164, column: 6, scope: !13227)
!13229 = !DILocation(line: 165, column: 9, scope: !13230)
!13230 = distinct !DILexicalBlock(scope: !13231, file: !1828, line: 165, column: 7)
!13231 = distinct !DILexicalBlock(scope: !13222, file: !1828, line: 164, column: 39)
!13232 = !DILocation(line: 165, column: 15, scope: !13230)
!13233 = !DILocation(line: 165, column: 7, scope: !13231)
!13234 = !DILocation(line: 167, column: 5, scope: !13230)
!13235 = !DILocation(line: 167, column: 9, scope: !13230)
!13236 = !DILocation(line: 167, column: 13, scope: !13230)
!13237 = !DILocation(line: 166, column: 4, scope: !13230)
!13238 = !DILocation(line: 168, column: 10, scope: !13231)
!13239 = !DILocation(line: 168, column: 14, scope: !13231)
!13240 = !DILocation(line: 168, column: 3, scope: !13231)
!13241 = !DILocation(line: 169, column: 2, scope: !13231)
!13242 = !DILocation(line: 171, column: 8, scope: !1904)
!13243 = !DILocation(line: 171, column: 2, scope: !1904)
!13244 = !DILocation(line: 172, column: 1, scope: !1904)
!13245 = !DILocalVariable(name: "ni", arg: 1, scope: !1907, file: !1828, line: 174, type: !1830)
!13246 = !DILocation(line: 174, column: 21, scope: !1907)
!13247 = !DILocation(line: 175, column: 7, scope: !13248)
!13248 = distinct !DILexicalBlock(scope: !1907, file: !1828, line: 175, column: 6)
!13249 = !DILocation(line: 175, column: 6, scope: !1907)
!13250 = !DILocation(line: 176, column: 3, scope: !13248)
!13251 = !DILocation(line: 178, column: 20, scope: !1907)
!13252 = !DILocation(line: 178, column: 24, scope: !1907)
!13253 = !DILocation(line: 178, column: 30, scope: !1907)
!13254 = !DILocation(line: 178, column: 34, scope: !1907)
!13255 = !DILocation(line: 178, column: 44, scope: !1907)
!13256 = !DILocation(line: 178, column: 48, scope: !1907)
!13257 = !DILocation(line: 178, column: 9, scope: !1907)
!13258 = !DILocation(line: 178, column: 2, scope: !1907)
!13259 = !DILocation(line: 179, column: 1, scope: !1907)
!13260 = !DILocalVariable(name: "sa_p", arg: 1, scope: !1937, file: !1828, line: 118, type: !1835)
!13261 = !DILocation(line: 118, column: 41, scope: !1937)
!13262 = !DILocalVariable(name: "usock", arg: 2, scope: !1937, file: !1828, line: 118, type: !33)
!13263 = !DILocation(line: 118, column: 51, scope: !1937)
!13264 = !DILocalVariable(name: "tsock", arg: 3, scope: !1937, file: !1828, line: 118, type: !33)
!13265 = !DILocation(line: 118, column: 62, scope: !1937)
!13266 = !DILocalVariable(name: "ni", scope: !1937, file: !1828, line: 119, type: !1830)
!13267 = !DILocation(line: 119, column: 7, scope: !1937)
!13268 = !DILocation(line: 121, column: 15, scope: !1937)
!13269 = !DILocation(line: 121, column: 7, scope: !1937)
!13270 = !DILocation(line: 121, column: 5, scope: !1937)
!13271 = !DILocation(line: 122, column: 7, scope: !13272)
!13272 = distinct !DILexicalBlock(scope: !1937, file: !1828, line: 122, column: 6)
!13273 = !DILocation(line: 122, column: 6, scope: !1937)
!13274 = !DILocation(line: 123, column: 3, scope: !13272)
!13275 = !DILocation(line: 125, column: 6, scope: !13276)
!13276 = distinct !DILexicalBlock(scope: !1937, file: !1828, line: 125, column: 6)
!13277 = !DILocation(line: 125, column: 6, scope: !1937)
!13278 = !DILocation(line: 127, column: 32, scope: !13279)
!13279 = distinct !DILexicalBlock(scope: !13276, file: !1828, line: 125, column: 12)
!13280 = !DILocation(line: 127, column: 32, scope: !13281)
!13281 = !DILexicalBlockFile(scope: !13279, file: !1828, discriminator: 1)
!13282 = !DILocation(line: 127, column: 32, scope: !13283)
!13283 = !DILexicalBlockFile(scope: !13279, file: !1828, discriminator: 2)
!13284 = !DILocation(line: 127, column: 32, scope: !13285)
!13285 = !DILexicalBlockFile(scope: !13279, file: !1828, discriminator: 3)
!13286 = !DILocation(line: 127, column: 24, scope: !13285)
!13287 = !DILocation(line: 127, column: 4, scope: !13285)
!13288 = !DILocation(line: 126, column: 3, scope: !13279)
!13289 = !DILocation(line: 126, column: 7, scope: !13279)
!13290 = !DILocation(line: 126, column: 12, scope: !13279)
!13291 = !DILocation(line: 128, column: 8, scope: !13292)
!13292 = distinct !DILexicalBlock(scope: !13279, file: !1828, line: 128, column: 7)
!13293 = !DILocation(line: 128, column: 12, scope: !13292)
!13294 = !DILocation(line: 128, column: 7, scope: !13279)
!13295 = !DILocation(line: 129, column: 10, scope: !13296)
!13296 = distinct !DILexicalBlock(scope: !13292, file: !1828, line: 128, column: 18)
!13297 = !DILocation(line: 129, column: 4, scope: !13296)
!13298 = !DILocation(line: 130, column: 4, scope: !13296)
!13299 = !DILocation(line: 132, column: 11, scope: !13279)
!13300 = !DILocation(line: 132, column: 15, scope: !13279)
!13301 = !DILocation(line: 132, column: 3, scope: !13279)
!13302 = !DILocation(line: 132, column: 21, scope: !13279)
!13303 = !DILocation(line: 132, column: 27, scope: !13279)
!13304 = !DILocation(line: 132, column: 27, scope: !13281)
!13305 = !DILocation(line: 132, column: 27, scope: !13283)
!13306 = !DILocation(line: 132, column: 27, scope: !13285)
!13307 = !DILocation(line: 132, column: 3, scope: !13285)
!13308 = !DILocation(line: 133, column: 2, scope: !13279)
!13309 = !DILocation(line: 134, column: 3, scope: !13276)
!13310 = !DILocation(line: 134, column: 7, scope: !13276)
!13311 = !DILocation(line: 134, column: 12, scope: !13276)
!13312 = !DILocation(line: 136, column: 17, scope: !1937)
!13313 = !DILocation(line: 136, column: 2, scope: !1937)
!13314 = !DILocation(line: 136, column: 6, scope: !1937)
!13315 = !DILocation(line: 136, column: 15, scope: !1937)
!13316 = !DILocation(line: 137, column: 17, scope: !1937)
!13317 = !DILocation(line: 137, column: 2, scope: !1937)
!13318 = !DILocation(line: 137, column: 6, scope: !1937)
!13319 = !DILocation(line: 137, column: 15, scope: !1937)
!13320 = !DILocation(line: 138, column: 9, scope: !1937)
!13321 = !DILocation(line: 138, column: 2, scope: !1937)
!13322 = !DILocation(line: 139, column: 1, scope: !1937)
!13323 = !DILocalVariable(name: "sock_id", arg: 1, scope: !1910, file: !1828, line: 181, type: !33)
!13324 = !DILocation(line: 181, column: 28, scope: !1910)
!13325 = !DILocalVariable(name: "gl", scope: !1910, file: !1828, line: 182, type: !1943)
!13326 = !DILocation(line: 182, column: 10, scope: !1910)
!13327 = !DILocalVariable(name: "ni", scope: !1910, file: !1828, line: 183, type: !1830)
!13328 = !DILocation(line: 183, column: 7, scope: !1910)
!13329 = !DILocation(line: 185, column: 12, scope: !13330)
!13330 = distinct !DILexicalBlock(scope: !1910, file: !1828, line: 185, column: 2)
!13331 = !DILocation(line: 185, column: 21, scope: !13330)
!13332 = !DILocation(line: 185, column: 10, scope: !13330)
!13333 = !DILocation(line: 185, column: 7, scope: !13330)
!13334 = !DILocation(line: 185, column: 27, scope: !13335)
!13335 = !DILexicalBlockFile(scope: !13336, file: !1828, discriminator: 1)
!13336 = distinct !DILexicalBlock(scope: !13330, file: !1828, line: 185, column: 2)
!13337 = !DILocation(line: 185, column: 31, scope: !13335)
!13338 = !DILocation(line: 185, column: 2, scope: !13335)
!13339 = !DILocation(line: 186, column: 16, scope: !13340)
!13340 = distinct !DILexicalBlock(scope: !13336, file: !1828, line: 185, column: 57)
!13341 = !DILocation(line: 186, column: 20, scope: !13340)
!13342 = !DILocation(line: 186, column: 8, scope: !13340)
!13343 = !DILocation(line: 186, column: 6, scope: !13340)
!13344 = !DILocation(line: 188, column: 8, scope: !13345)
!13345 = distinct !DILexicalBlock(scope: !13340, file: !1828, line: 188, column: 7)
!13346 = !DILocation(line: 188, column: 12, scope: !13345)
!13347 = !DILocation(line: 188, column: 7, scope: !13340)
!13348 = !DILocation(line: 189, column: 4, scope: !13345)
!13349 = !DILocation(line: 191, column: 7, scope: !13350)
!13350 = distinct !DILexicalBlock(scope: !13340, file: !1828, line: 191, column: 7)
!13351 = !DILocation(line: 191, column: 11, scope: !13350)
!13352 = !DILocation(line: 191, column: 23, scope: !13350)
!13353 = !DILocation(line: 191, column: 20, scope: !13350)
!13354 = !DILocation(line: 191, column: 7, scope: !13340)
!13355 = !DILocation(line: 192, column: 11, scope: !13350)
!13356 = !DILocation(line: 192, column: 4, scope: !13350)
!13357 = !DILocation(line: 193, column: 7, scope: !13358)
!13358 = distinct !DILexicalBlock(scope: !13340, file: !1828, line: 193, column: 7)
!13359 = !DILocation(line: 193, column: 11, scope: !13358)
!13360 = !DILocation(line: 193, column: 23, scope: !13358)
!13361 = !DILocation(line: 193, column: 20, scope: !13358)
!13362 = !DILocation(line: 193, column: 7, scope: !13340)
!13363 = !DILocation(line: 194, column: 11, scope: !13358)
!13364 = !DILocation(line: 194, column: 4, scope: !13358)
!13365 = !DILocation(line: 195, column: 2, scope: !13340)
!13366 = !DILocation(line: 185, column: 47, scope: !13367)
!13367 = !DILexicalBlockFile(scope: !13336, file: !1828, discriminator: 2)
!13368 = !DILocation(line: 185, column: 51, scope: !13367)
!13369 = !DILocation(line: 185, column: 45, scope: !13367)
!13370 = !DILocation(line: 185, column: 2, scope: !13367)
!13371 = !DILocation(line: 197, column: 2, scope: !1910)
!13372 = !DILocation(line: 198, column: 1, scope: !1910)
!13373 = !DILocalVariable(name: "fds", arg: 1, scope: !1913, file: !1828, line: 200, type: !1916)
!13374 = !DILocation(line: 200, column: 27, scope: !1913)
!13375 = !DILocalVariable(name: "max_fd", arg: 2, scope: !1913, file: !1828, line: 200, type: !514)
!13376 = !DILocation(line: 200, column: 37, scope: !1913)
!13377 = !DILocalVariable(name: "fn", scope: !1913, file: !1828, line: 201, type: !4)
!13378 = !DILocation(line: 201, column: 14, scope: !1913)
!13379 = !DILocalVariable(name: "gl", scope: !1913, file: !1828, line: 202, type: !1943)
!13380 = !DILocation(line: 202, column: 10, scope: !1913)
!13381 = !DILocalVariable(name: "ni", scope: !1913, file: !1828, line: 203, type: !1830)
!13382 = !DILocation(line: 203, column: 7, scope: !1913)
!13383 = !DILocation(line: 205, column: 7, scope: !13384)
!13384 = distinct !DILexicalBlock(scope: !1913, file: !1828, line: 205, column: 6)
!13385 = !DILocation(line: 205, column: 6, scope: !1913)
!13386 = !DILocation(line: 206, column: 3, scope: !13384)
!13387 = !DILocation(line: 208, column: 12, scope: !13388)
!13388 = distinct !DILexicalBlock(scope: !1913, file: !1828, line: 208, column: 2)
!13389 = !DILocation(line: 208, column: 21, scope: !13388)
!13390 = !DILocation(line: 208, column: 10, scope: !13388)
!13391 = !DILocation(line: 208, column: 7, scope: !13388)
!13392 = !DILocation(line: 208, column: 27, scope: !13393)
!13393 = !DILexicalBlockFile(scope: !13394, file: !1828, discriminator: 1)
!13394 = distinct !DILexicalBlock(scope: !13388, file: !1828, line: 208, column: 2)
!13395 = !DILocation(line: 208, column: 31, scope: !13393)
!13396 = !DILocation(line: 208, column: 2, scope: !13393)
!13397 = !DILocation(line: 209, column: 16, scope: !13398)
!13398 = distinct !DILexicalBlock(scope: !13394, file: !1828, line: 208, column: 57)
!13399 = !DILocation(line: 209, column: 20, scope: !13398)
!13400 = !DILocation(line: 209, column: 8, scope: !13398)
!13401 = !DILocation(line: 209, column: 6, scope: !13398)
!13402 = !DILocation(line: 211, column: 8, scope: !13403)
!13403 = distinct !DILexicalBlock(scope: !13398, file: !1828, line: 211, column: 7)
!13404 = !DILocation(line: 211, column: 12, scope: !13403)
!13405 = !DILocation(line: 211, column: 7, scope: !13398)
!13406 = !DILocation(line: 212, column: 4, scope: !13403)
!13407 = !DILocation(line: 214, column: 7, scope: !13408)
!13408 = distinct !DILexicalBlock(scope: !13398, file: !1828, line: 214, column: 7)
!13409 = !DILocation(line: 214, column: 11, scope: !13408)
!13410 = !DILocation(line: 214, column: 20, scope: !13408)
!13411 = !DILocation(line: 214, column: 7, scope: !13398)
!13412 = !DILocation(line: 215, column: 10, scope: !13413)
!13413 = distinct !DILexicalBlock(scope: !13414, file: !1828, line: 215, column: 8)
!13414 = distinct !DILexicalBlock(scope: !13408, file: !1828, line: 214, column: 26)
!13415 = !DILocation(line: 215, column: 16, scope: !13413)
!13416 = !DILocation(line: 215, column: 8, scope: !13414)
!13417 = !DILocation(line: 216, column: 42, scope: !13413)
!13418 = !DILocation(line: 217, column: 6, scope: !13413)
!13419 = !DILocation(line: 217, column: 10, scope: !13413)
!13420 = !DILocation(line: 216, column: 5, scope: !13413)
!13421 = !DILocation(line: 218, column: 4, scope: !13414)
!13422 = !DILocation(line: 219, column: 8, scope: !13423)
!13423 = distinct !DILexicalBlock(scope: !13414, file: !1828, line: 219, column: 8)
!13424 = !DILocation(line: 219, column: 8, scope: !13414)
!13425 = !DILocation(line: 220, column: 15, scope: !13423)
!13426 = !DILocation(line: 220, column: 15, scope: !13427)
!13427 = !DILexicalBlockFile(scope: !13423, file: !1828, discriminator: 1)
!13428 = !DILocation(line: 220, column: 15, scope: !13429)
!13429 = !DILexicalBlockFile(scope: !13423, file: !1828, discriminator: 2)
!13430 = !DILocation(line: 220, column: 15, scope: !13431)
!13431 = !DILexicalBlockFile(scope: !13423, file: !1828, discriminator: 3)
!13432 = !DILocation(line: 220, column: 6, scope: !13431)
!13433 = !DILocation(line: 220, column: 13, scope: !13431)
!13434 = !DILocation(line: 220, column: 5, scope: !13431)
!13435 = !DILocation(line: 221, column: 3, scope: !13414)
!13436 = !DILocation(line: 223, column: 7, scope: !13437)
!13437 = distinct !DILexicalBlock(scope: !13398, file: !1828, line: 223, column: 7)
!13438 = !DILocation(line: 223, column: 11, scope: !13437)
!13439 = !DILocation(line: 223, column: 20, scope: !13437)
!13440 = !DILocation(line: 223, column: 7, scope: !13398)
!13441 = !DILocation(line: 224, column: 10, scope: !13442)
!13442 = distinct !DILexicalBlock(scope: !13443, file: !1828, line: 224, column: 8)
!13443 = distinct !DILexicalBlock(scope: !13437, file: !1828, line: 223, column: 26)
!13444 = !DILocation(line: 224, column: 16, scope: !13442)
!13445 = !DILocation(line: 224, column: 8, scope: !13443)
!13446 = !DILocation(line: 225, column: 42, scope: !13442)
!13447 = !DILocation(line: 226, column: 6, scope: !13442)
!13448 = !DILocation(line: 226, column: 10, scope: !13442)
!13449 = !DILocation(line: 225, column: 5, scope: !13442)
!13450 = !DILocation(line: 227, column: 4, scope: !13443)
!13451 = !DILocation(line: 228, column: 8, scope: !13452)
!13452 = distinct !DILexicalBlock(scope: !13443, file: !1828, line: 228, column: 8)
!13453 = !DILocation(line: 228, column: 8, scope: !13443)
!13454 = !DILocation(line: 229, column: 15, scope: !13452)
!13455 = !DILocation(line: 229, column: 15, scope: !13456)
!13456 = !DILexicalBlockFile(scope: !13452, file: !1828, discriminator: 1)
!13457 = !DILocation(line: 229, column: 15, scope: !13458)
!13458 = !DILexicalBlockFile(scope: !13452, file: !1828, discriminator: 2)
!13459 = !DILocation(line: 229, column: 15, scope: !13460)
!13460 = !DILexicalBlockFile(scope: !13452, file: !1828, discriminator: 3)
!13461 = !DILocation(line: 229, column: 6, scope: !13460)
!13462 = !DILocation(line: 229, column: 13, scope: !13460)
!13463 = !DILocation(line: 229, column: 5, scope: !13460)
!13464 = !DILocation(line: 230, column: 3, scope: !13443)
!13465 = !DILocation(line: 231, column: 2, scope: !13398)
!13466 = !DILocation(line: 208, column: 47, scope: !13467)
!13467 = !DILexicalBlockFile(scope: !13394, file: !1828, discriminator: 2)
!13468 = !DILocation(line: 208, column: 51, scope: !13467)
!13469 = !DILocation(line: 208, column: 45, scope: !13467)
!13470 = !DILocation(line: 208, column: 2, scope: !13467)
!13471 = !DILocation(line: 233, column: 2, scope: !1913)
!13472 = !DILocation(line: 234, column: 1, scope: !1913)
!13473 = !DILocalVariable(name: "fds", arg: 1, scope: !1921, file: !1828, line: 236, type: !1916)
!13474 = !DILocation(line: 236, column: 28, scope: !1921)
!13475 = !DILocalVariable(name: "sock", arg: 2, scope: !1921, file: !1828, line: 236, type: !514)
!13476 = !DILocation(line: 236, column: 38, scope: !1921)
!13477 = !DILocalVariable(name: "fn", scope: !1921, file: !1828, line: 237, type: !4)
!13478 = !DILocation(line: 237, column: 14, scope: !1921)
!13479 = !DILocalVariable(name: "gl", scope: !1921, file: !1828, line: 238, type: !1943)
!13480 = !DILocation(line: 238, column: 10, scope: !1921)
!13481 = !DILocalVariable(name: "ni", scope: !1921, file: !1828, line: 239, type: !1830)
!13482 = !DILocation(line: 239, column: 7, scope: !1921)
!13483 = !DILocation(line: 241, column: 3, scope: !1921)
!13484 = !DILocation(line: 241, column: 8, scope: !1921)
!13485 = !DILocation(line: 243, column: 7, scope: !13486)
!13486 = distinct !DILexicalBlock(scope: !1921, file: !1828, line: 243, column: 6)
!13487 = !DILocation(line: 243, column: 6, scope: !1921)
!13488 = !DILocation(line: 244, column: 3, scope: !13486)
!13489 = !DILocation(line: 246, column: 12, scope: !13490)
!13490 = distinct !DILexicalBlock(scope: !1921, file: !1828, line: 246, column: 2)
!13491 = !DILocation(line: 246, column: 21, scope: !13490)
!13492 = !DILocation(line: 246, column: 10, scope: !13490)
!13493 = !DILocation(line: 246, column: 7, scope: !13490)
!13494 = !DILocation(line: 246, column: 27, scope: !13495)
!13495 = !DILexicalBlockFile(scope: !13496, file: !1828, discriminator: 1)
!13496 = distinct !DILexicalBlock(scope: !13490, file: !1828, line: 246, column: 2)
!13497 = !DILocation(line: 246, column: 31, scope: !13495)
!13498 = !DILocation(line: 246, column: 2, scope: !13495)
!13499 = !DILocation(line: 247, column: 16, scope: !13500)
!13500 = distinct !DILexicalBlock(scope: !13496, file: !1828, line: 246, column: 57)
!13501 = !DILocation(line: 247, column: 20, scope: !13500)
!13502 = !DILocation(line: 247, column: 8, scope: !13500)
!13503 = !DILocation(line: 247, column: 6, scope: !13500)
!13504 = !DILocation(line: 249, column: 8, scope: !13505)
!13505 = distinct !DILexicalBlock(scope: !13500, file: !1828, line: 249, column: 7)
!13506 = !DILocation(line: 249, column: 12, scope: !13505)
!13507 = !DILocation(line: 249, column: 7, scope: !13500)
!13508 = !DILocation(line: 250, column: 4, scope: !13505)
!13509 = !DILocation(line: 252, column: 7, scope: !13510)
!13510 = distinct !DILexicalBlock(scope: !13500, file: !1828, line: 252, column: 7)
!13511 = !DILocation(line: 252, column: 11, scope: !13510)
!13512 = !DILocation(line: 252, column: 20, scope: !13510)
!13513 = !DILocation(line: 252, column: 25, scope: !13510)
!13514 = !DILocation(line: 252, column: 28, scope: !13515)
!13515 = !DILexicalBlockFile(scope: !13510, file: !1828, discriminator: 1)
!13516 = !DILocation(line: 252, column: 7, scope: !13515)
!13517 = !DILocation(line: 253, column: 10, scope: !13518)
!13518 = distinct !DILexicalBlock(scope: !13519, file: !1828, line: 253, column: 8)
!13519 = distinct !DILexicalBlock(scope: !13510, file: !1828, line: 252, column: 58)
!13520 = !DILocation(line: 253, column: 16, scope: !13518)
!13521 = !DILocation(line: 253, column: 8, scope: !13519)
!13522 = !DILocation(line: 255, column: 6, scope: !13518)
!13523 = !DILocation(line: 255, column: 10, scope: !13518)
!13524 = !DILocation(line: 255, column: 14, scope: !13518)
!13525 = !DILocation(line: 254, column: 5, scope: !13518)
!13526 = !DILocation(line: 256, column: 4, scope: !13519)
!13527 = !DILocation(line: 257, column: 12, scope: !13519)
!13528 = !DILocation(line: 257, column: 16, scope: !13519)
!13529 = !DILocation(line: 257, column: 5, scope: !13519)
!13530 = !DILocation(line: 257, column: 10, scope: !13519)
!13531 = !DILocation(line: 258, column: 4, scope: !13519)
!13532 = !DILocation(line: 261, column: 7, scope: !13533)
!13533 = distinct !DILexicalBlock(scope: !13500, file: !1828, line: 261, column: 7)
!13534 = !DILocation(line: 261, column: 11, scope: !13533)
!13535 = !DILocation(line: 261, column: 20, scope: !13533)
!13536 = !DILocation(line: 261, column: 25, scope: !13533)
!13537 = !DILocation(line: 261, column: 28, scope: !13538)
!13538 = !DILexicalBlockFile(scope: !13533, file: !1828, discriminator: 1)
!13539 = !DILocation(line: 261, column: 7, scope: !13538)
!13540 = !DILocation(line: 262, column: 10, scope: !13541)
!13541 = distinct !DILexicalBlock(scope: !13542, file: !1828, line: 262, column: 8)
!13542 = distinct !DILexicalBlock(scope: !13533, file: !1828, line: 261, column: 58)
!13543 = !DILocation(line: 262, column: 16, scope: !13541)
!13544 = !DILocation(line: 262, column: 8, scope: !13542)
!13545 = !DILocation(line: 264, column: 6, scope: !13541)
!13546 = !DILocation(line: 264, column: 10, scope: !13541)
!13547 = !DILocation(line: 264, column: 14, scope: !13541)
!13548 = !DILocation(line: 263, column: 5, scope: !13541)
!13549 = !DILocation(line: 265, column: 4, scope: !13542)
!13550 = !DILocation(line: 266, column: 12, scope: !13542)
!13551 = !DILocation(line: 266, column: 16, scope: !13542)
!13552 = !DILocation(line: 266, column: 5, scope: !13542)
!13553 = !DILocation(line: 266, column: 10, scope: !13542)
!13554 = !DILocation(line: 267, column: 4, scope: !13542)
!13555 = !DILocation(line: 269, column: 2, scope: !13500)
!13556 = !DILocation(line: 246, column: 47, scope: !13557)
!13557 = !DILexicalBlockFile(scope: !13496, file: !1828, discriminator: 2)
!13558 = !DILocation(line: 246, column: 51, scope: !13557)
!13559 = !DILocation(line: 246, column: 45, scope: !13557)
!13560 = !DILocation(line: 246, column: 2, scope: !13557)
!13561 = !DILocation(line: 271, column: 2, scope: !1921)
!13562 = !DILocation(line: 272, column: 1, scope: !1921)
!13563 = !DILocalVariable(name: "port", arg: 1, scope: !1924, file: !1828, line: 331, type: !33)
!13564 = !DILocation(line: 331, column: 30, scope: !1924)
!13565 = !DILocation(line: 333, column: 12, scope: !1924)
!13566 = !DILocation(line: 333, column: 10, scope: !1924)
!13567 = !DILocation(line: 334, column: 7, scope: !13568)
!13568 = distinct !DILexicalBlock(scope: !1924, file: !1828, line: 334, column: 6)
!13569 = !DILocation(line: 334, column: 6, scope: !1924)
!13570 = !DILocation(line: 335, column: 3, scope: !13568)
!13571 = !DILocation(line: 337, column: 8, scope: !13572)
!13572 = distinct !DILexicalBlock(scope: !1924, file: !1828, line: 337, column: 6)
!13573 = !DILocation(line: 337, column: 6, scope: !13572)
!13574 = !DILocation(line: 337, column: 6, scope: !1924)
!13575 = !DILocation(line: 338, column: 21, scope: !13572)
!13576 = !DILocation(line: 338, column: 32, scope: !13572)
!13577 = !DILocation(line: 338, column: 3, scope: !13572)
!13578 = !DILocation(line: 341, column: 21, scope: !13579)
!13579 = distinct !DILexicalBlock(scope: !13572, file: !1828, line: 339, column: 7)
!13580 = !DILocation(line: 341, column: 3, scope: !13579)
!13581 = !DILocation(line: 342, column: 24, scope: !13582)
!13582 = distinct !DILexicalBlock(scope: !13579, file: !1828, line: 342, column: 7)
!13583 = !DILocation(line: 342, column: 33, scope: !13582)
!13584 = !DILocation(line: 342, column: 7, scope: !13582)
!13585 = !DILocation(line: 342, column: 39, scope: !13582)
!13586 = !DILocation(line: 342, column: 7, scope: !13579)
!13587 = !DILocation(line: 343, column: 4, scope: !13582)
!13588 = !DILocation(line: 346, column: 2, scope: !1924)
!13589 = !DILocation(line: 347, column: 1, scope: !1924)
!13590 = !DILocalVariable(name: "list_head", arg: 1, scope: !1940, file: !1828, line: 274, type: !1943)
!13591 = !DILocation(line: 274, column: 38, scope: !1940)
!13592 = !DILocalVariable(name: "port", arg: 2, scope: !1940, file: !1828, line: 274, type: !33)
!13593 = !DILocation(line: 274, column: 53, scope: !1940)
!13594 = !DILocalVariable(name: "ni", scope: !1940, file: !1828, line: 275, type: !1830)
!13595 = !DILocation(line: 275, column: 7, scope: !1940)
!13596 = !DILocation(line: 278, column: 9, scope: !13597)
!13597 = distinct !DILexicalBlock(scope: !1940, file: !1828, line: 278, column: 6)
!13598 = !DILocation(line: 278, column: 7, scope: !13597)
!13599 = !DILocation(line: 278, column: 6, scope: !1940)
!13600 = !DILocalVariable(name: "sin", scope: !13601, file: !1828, line: 279, type: !1843)
!13601 = distinct !DILexicalBlock(scope: !13597, file: !1828, line: 278, column: 21)
!13602 = !DILocation(line: 279, column: 22, scope: !13601)
!13603 = !DILocation(line: 281, column: 3, scope: !13601)
!13604 = !DILocation(line: 285, column: 7, scope: !13601)
!13605 = !DILocation(line: 285, column: 18, scope: !13601)
!13606 = !DILocation(line: 286, column: 24, scope: !13601)
!13607 = !DILocation(line: 286, column: 18, scope: !13601)
!13608 = !DILocation(line: 286, column: 7, scope: !13601)
!13609 = !DILocation(line: 286, column: 16, scope: !13601)
!13610 = !DILocation(line: 287, column: 7, scope: !13601)
!13611 = !DILocation(line: 287, column: 16, scope: !13601)
!13612 = !DILocation(line: 287, column: 23, scope: !13601)
!13613 = !DILocation(line: 289, column: 18, scope: !13601)
!13614 = !DILocation(line: 289, column: 8, scope: !13601)
!13615 = !DILocation(line: 289, column: 6, scope: !13601)
!13616 = !DILocation(line: 290, column: 8, scope: !13617)
!13617 = distinct !DILexicalBlock(scope: !13601, file: !1828, line: 290, column: 7)
!13618 = !DILocation(line: 290, column: 7, scope: !13601)
!13619 = !DILocation(line: 291, column: 4, scope: !13617)
!13620 = !DILocation(line: 293, column: 17, scope: !13621)
!13621 = distinct !DILexicalBlock(scope: !13601, file: !1828, line: 293, column: 7)
!13622 = !DILocation(line: 293, column: 28, scope: !13621)
!13623 = !DILocation(line: 293, column: 7, scope: !13621)
!13624 = !DILocation(line: 293, column: 32, scope: !13621)
!13625 = !DILocation(line: 293, column: 7, scope: !13601)
!13626 = !DILocation(line: 294, column: 14, scope: !13627)
!13627 = distinct !DILexicalBlock(scope: !13621, file: !1828, line: 293, column: 37)
!13628 = !DILocation(line: 294, column: 4, scope: !13627)
!13629 = !DILocation(line: 295, column: 4, scope: !13627)
!13630 = !DILocation(line: 298, column: 17, scope: !13601)
!13631 = !DILocation(line: 298, column: 28, scope: !13601)
!13632 = !DILocation(line: 298, column: 15, scope: !13601)
!13633 = !DILocation(line: 299, column: 2, scope: !13601)
!13634 = !DILocalVariable(name: "sin6", scope: !13635, file: !1828, line: 304, type: !1887)
!13635 = distinct !DILexicalBlock(scope: !13636, file: !1828, line: 303, column: 9)
!13636 = distinct !DILexicalBlock(scope: !1940, file: !1828, line: 303, column: 6)
!13637 = !DILocation(line: 304, column: 23, scope: !13635)
!13638 = !DILocation(line: 306, column: 3, scope: !13635)
!13639 = !DILocation(line: 310, column: 8, scope: !13635)
!13640 = !DILocation(line: 310, column: 20, scope: !13635)
!13641 = !DILocation(line: 311, column: 26, scope: !13635)
!13642 = !DILocation(line: 311, column: 20, scope: !13635)
!13643 = !DILocation(line: 311, column: 8, scope: !13635)
!13644 = !DILocation(line: 311, column: 18, scope: !13635)
!13645 = !DILocation(line: 312, column: 8, scope: !13635)
!13646 = !DILocation(line: 312, column: 20, scope: !13635)
!13647 = !DILocation(line: 314, column: 18, scope: !13635)
!13648 = !DILocation(line: 314, column: 8, scope: !13635)
!13649 = !DILocation(line: 314, column: 6, scope: !13635)
!13650 = !DILocation(line: 315, column: 8, scope: !13651)
!13651 = distinct !DILexicalBlock(scope: !13635, file: !1828, line: 315, column: 7)
!13652 = !DILocation(line: 315, column: 7, scope: !13635)
!13653 = !DILocation(line: 316, column: 4, scope: !13651)
!13654 = !DILocation(line: 318, column: 17, scope: !13655)
!13655 = distinct !DILexicalBlock(scope: !13635, file: !1828, line: 318, column: 7)
!13656 = !DILocation(line: 318, column: 28, scope: !13655)
!13657 = !DILocation(line: 318, column: 7, scope: !13655)
!13658 = !DILocation(line: 318, column: 32, scope: !13655)
!13659 = !DILocation(line: 318, column: 7, scope: !13635)
!13660 = !DILocation(line: 319, column: 14, scope: !13661)
!13661 = distinct !DILexicalBlock(scope: !13655, file: !1828, line: 318, column: 37)
!13662 = !DILocation(line: 319, column: 4, scope: !13661)
!13663 = !DILocation(line: 320, column: 4, scope: !13661)
!13664 = !DILocation(line: 323, column: 18, scope: !13635)
!13665 = !DILocation(line: 323, column: 29, scope: !13635)
!13666 = !DILocation(line: 323, column: 16, scope: !13635)
!13667 = !DILocation(line: 328, column: 2, scope: !1940)
!13668 = !DILocation(line: 329, column: 1, scope: !1940)
!13669 = !DILocalVariable(name: "list_head", arg: 1, scope: !1954, file: !1828, line: 423, type: !1943)
!13670 = !DILocation(line: 423, column: 37, scope: !1954)
!13671 = !DILocalVariable(name: "port", arg: 2, scope: !1954, file: !1828, line: 423, type: !33)
!13672 = !DILocation(line: 423, column: 52, scope: !1954)
!13673 = !DILocalVariable(name: "fn", scope: !1954, file: !1828, line: 424, type: !4)
!13674 = !DILocation(line: 424, column: 14, scope: !1954)
!13675 = !DILocalVariable(name: "ifc", scope: !1954, file: !1828, line: 426, type: !1959)
!13676 = !DILocation(line: 426, column: 16, scope: !1954)
!13677 = !DILocalVariable(name: "dummy_sock", scope: !1954, file: !1828, line: 427, type: !33)
!13678 = !DILocation(line: 427, column: 6, scope: !1954)
!13679 = !DILocalVariable(name: "status", scope: !1954, file: !1828, line: 427, type: !33)
!13680 = !DILocation(line: 427, column: 23, scope: !1954)
!13681 = !DILocalVariable(name: "buf", scope: !1954, file: !1828, line: 428, type: !13682)
!13682 = !DICompositeType(tag: DW_TAG_array_type, baseType: !21, size: 65536, align: 8, elements: !13683)
!13683 = !{!13684}
!13684 = !DISubrange(count: 8192)
!13685 = !DILocation(line: 428, column: 9, scope: !1954)
!13686 = !DILocalVariable(name: "cp", scope: !1954, file: !1828, line: 429, type: !20)
!13687 = !DILocation(line: 429, column: 10, scope: !1954)
!13688 = !DILocation(line: 431, column: 2, scope: !1954)
!13689 = !DILocation(line: 432, column: 6, scope: !1954)
!13690 = !DILocation(line: 432, column: 14, scope: !1954)
!13691 = !DILocation(line: 433, column: 24, scope: !1954)
!13692 = !DILocation(line: 433, column: 6, scope: !1954)
!13693 = !DILocation(line: 433, column: 14, scope: !1954)
!13694 = !DILocation(line: 436, column: 6, scope: !13695)
!13695 = distinct !DILexicalBlock(scope: !1954, file: !1828, line: 436, column: 6)
!13696 = !DILocation(line: 436, column: 17, scope: !13695)
!13697 = !DILocation(line: 436, column: 6, scope: !1954)
!13698 = !DILocation(line: 437, column: 16, scope: !13695)
!13699 = !DILocation(line: 437, column: 14, scope: !13695)
!13700 = !DILocation(line: 437, column: 3, scope: !13695)
!13701 = !DILocation(line: 440, column: 6, scope: !13702)
!13702 = distinct !DILexicalBlock(scope: !1954, file: !1828, line: 440, column: 6)
!13703 = !DILocation(line: 440, column: 17, scope: !13702)
!13704 = !DILocation(line: 440, column: 6, scope: !1954)
!13705 = !DILocation(line: 441, column: 16, scope: !13702)
!13706 = !DILocation(line: 441, column: 14, scope: !13702)
!13707 = !DILocation(line: 441, column: 3, scope: !13702)
!13708 = !DILocation(line: 443, column: 6, scope: !13709)
!13709 = distinct !DILexicalBlock(scope: !1954, file: !1828, line: 443, column: 6)
!13710 = !DILocation(line: 443, column: 17, scope: !13709)
!13711 = !DILocation(line: 443, column: 6, scope: !1954)
!13712 = !DILocation(line: 444, column: 3, scope: !13709)
!13713 = !DILocation(line: 449, column: 13, scope: !13714)
!13714 = distinct !DILexicalBlock(scope: !1954, file: !1828, line: 449, column: 6)
!13715 = !DILocation(line: 449, column: 38, scope: !13714)
!13716 = !DILocation(line: 449, column: 6, scope: !13714)
!13717 = !DILocation(line: 449, column: 53, scope: !13714)
!13718 = !DILocation(line: 449, column: 6, scope: !1954)
!13719 = !DILocation(line: 450, column: 9, scope: !13720)
!13720 = distinct !DILexicalBlock(scope: !13714, file: !1828, line: 449, column: 58)
!13721 = !DILocation(line: 450, column: 3, scope: !13720)
!13722 = !DILocation(line: 451, column: 48, scope: !13720)
!13723 = !DILocation(line: 451, column: 3, scope: !13720)
!13724 = !DILocation(line: 452, column: 3, scope: !13720)
!13725 = !DILocation(line: 454, column: 8, scope: !1954)
!13726 = !DILocation(line: 454, column: 2, scope: !1954)
!13727 = !DILocation(line: 456, column: 9, scope: !1954)
!13728 = !DILocation(line: 457, column: 14, scope: !13729)
!13729 = distinct !DILexicalBlock(scope: !1954, file: !1828, line: 457, column: 6)
!13730 = !DILocation(line: 457, column: 6, scope: !13729)
!13731 = !DILocation(line: 457, column: 6, scope: !1954)
!13732 = !DILocation(line: 458, column: 12, scope: !13733)
!13733 = distinct !DILexicalBlock(scope: !13729, file: !1828, line: 457, column: 23)
!13734 = !DILocation(line: 458, column: 10, scope: !13733)
!13735 = !DILocation(line: 459, column: 55, scope: !13733)
!13736 = !DILocation(line: 459, column: 59, scope: !13733)
!13737 = !DILocation(line: 459, column: 3, scope: !13733)
!13738 = !DILocation(line: 460, column: 2, scope: !13733)
!13739 = !DILocation(line: 467, column: 7, scope: !1954)
!13740 = !DILocation(line: 467, column: 5, scope: !1954)
!13741 = !DILocation(line: 468, column: 2, scope: !1954)
!13742 = !DILocation(line: 468, column: 10, scope: !13743)
!13743 = !DILexicalBlockFile(scope: !1954, file: !1828, discriminator: 1)
!13744 = !DILocation(line: 468, column: 9, scope: !13743)
!13745 = !DILocation(line: 468, column: 2, scope: !13743)
!13746 = !DILocalVariable(name: "valid_address", scope: !13747, file: !1828, line: 469, type: !33)
!13747 = distinct !DILexicalBlock(scope: !1954, file: !1828, line: 468, column: 14)
!13748 = !DILocation(line: 469, column: 7, scope: !13747)
!13749 = !DILocalVariable(name: "astr", scope: !13747, file: !1828, line: 470, type: !2723)
!13750 = !DILocation(line: 470, column: 8, scope: !13747)
!13751 = !DILocalVariable(name: "ifr_p", scope: !13747, file: !1828, line: 471, type: !1852)
!13752 = !DILocation(line: 471, column: 17, scope: !13747)
!13753 = !DILocation(line: 473, column: 28, scope: !13747)
!13754 = !DILocation(line: 473, column: 11, scope: !13747)
!13755 = !DILocation(line: 473, column: 9, scope: !13747)
!13756 = !DILocation(line: 474, column: 16, scope: !13747)
!13757 = !DILocation(line: 474, column: 23, scope: !13747)
!13758 = !DILocation(line: 474, column: 33, scope: !13747)
!13759 = !DILocation(line: 474, column: 3, scope: !13747)
!13760 = !DILocation(line: 477, column: 9, scope: !13761)
!13761 = distinct !DILexicalBlock(scope: !13747, file: !1828, line: 477, column: 7)
!13762 = !DILocation(line: 477, column: 7, scope: !13761)
!13763 = !DILocation(line: 477, column: 13, scope: !13761)
!13764 = !DILocation(line: 477, column: 16, scope: !13765)
!13765 = !DILexicalBlockFile(scope: !13761, file: !1828, discriminator: 1)
!13766 = !DILocation(line: 477, column: 23, scope: !13765)
!13767 = !DILocation(line: 477, column: 32, scope: !13765)
!13768 = !DILocation(line: 477, column: 42, scope: !13765)
!13769 = !DILocation(line: 477, column: 7, scope: !13765)
!13770 = !DILocation(line: 478, column: 30, scope: !13771)
!13771 = distinct !DILexicalBlock(scope: !13761, file: !1828, line: 478, column: 8)
!13772 = !DILocation(line: 478, column: 37, scope: !13771)
!13773 = !DILocation(line: 478, column: 8, scope: !13771)
!13774 = !DILocation(line: 478, column: 8, scope: !13761)
!13775 = !DILocation(line: 479, column: 19, scope: !13771)
!13776 = !DILocation(line: 479, column: 5, scope: !13771)
!13777 = !DILocation(line: 478, column: 45, scope: !13778)
!13778 = !DILexicalBlockFile(scope: !13771, file: !1828, discriminator: 1)
!13779 = !DILocation(line: 482, column: 9, scope: !13780)
!13780 = distinct !DILexicalBlock(scope: !13747, file: !1828, line: 482, column: 7)
!13781 = !DILocation(line: 482, column: 7, scope: !13780)
!13782 = !DILocation(line: 482, column: 13, scope: !13780)
!13783 = !DILocation(line: 482, column: 16, scope: !13784)
!13784 = !DILexicalBlockFile(scope: !13780, file: !1828, discriminator: 1)
!13785 = !DILocation(line: 482, column: 23, scope: !13784)
!13786 = !DILocation(line: 482, column: 32, scope: !13784)
!13787 = !DILocation(line: 482, column: 42, scope: !13784)
!13788 = !DILocation(line: 482, column: 7, scope: !13784)
!13789 = !DILocation(line: 483, column: 10, scope: !13790)
!13790 = distinct !DILexicalBlock(scope: !13780, file: !1828, line: 483, column: 8)
!13791 = !DILocation(line: 483, column: 8, scope: !13790)
!13792 = !DILocation(line: 483, column: 14, scope: !13790)
!13793 = !DILocation(line: 483, column: 39, scope: !13794)
!13794 = !DILexicalBlockFile(scope: !13790, file: !1828, discriminator: 1)
!13795 = !DILocation(line: 483, column: 46, scope: !13794)
!13796 = !DILocation(line: 483, column: 17, scope: !13794)
!13797 = !DILocation(line: 483, column: 8, scope: !13794)
!13798 = !DILocation(line: 484, column: 19, scope: !13790)
!13799 = !DILocation(line: 484, column: 5, scope: !13790)
!13800 = !DILocation(line: 483, column: 54, scope: !13801)
!13801 = !DILexicalBlockFile(scope: !13790, file: !1828, discriminator: 2)
!13802 = !DILocation(line: 487, column: 7, scope: !13803)
!13803 = distinct !DILexicalBlock(scope: !13747, file: !1828, line: 487, column: 7)
!13804 = !DILocation(line: 487, column: 7, scope: !13747)
!13805 = !DILocalVariable(name: "ni", scope: !13806, file: !1828, line: 488, type: !1830)
!13806 = distinct !DILexicalBlock(scope: !13803, file: !1828, line: 487, column: 22)
!13807 = !DILocation(line: 488, column: 9, scope: !13806)
!13808 = !DILocation(line: 490, column: 21, scope: !13806)
!13809 = !DILocation(line: 490, column: 28, scope: !13806)
!13810 = !DILocation(line: 490, column: 9, scope: !13806)
!13811 = !DILocation(line: 490, column: 7, scope: !13806)
!13812 = !DILocation(line: 491, column: 9, scope: !13813)
!13813 = distinct !DILexicalBlock(scope: !13806, file: !1828, line: 491, column: 8)
!13814 = !DILocation(line: 491, column: 8, scope: !13806)
!13815 = !DILocation(line: 492, column: 5, scope: !13813)
!13816 = !DILocation(line: 495, column: 10, scope: !13817)
!13817 = distinct !DILexicalBlock(scope: !13806, file: !1828, line: 495, column: 8)
!13818 = !DILocation(line: 495, column: 8, scope: !13817)
!13819 = !DILocation(line: 495, column: 14, scope: !13817)
!13820 = !DILocation(line: 495, column: 17, scope: !13821)
!13821 = !DILexicalBlockFile(scope: !13817, file: !1828, discriminator: 1)
!13822 = !DILocation(line: 495, column: 21, scope: !13821)
!13823 = !DILocation(line: 495, column: 27, scope: !13821)
!13824 = !DILocation(line: 495, column: 37, scope: !13821)
!13825 = !DILocation(line: 495, column: 8, scope: !13821)
!13826 = !DILocalVariable(name: "sa_p", scope: !13827, file: !1828, line: 496, type: !1886)
!13827 = distinct !DILexicalBlock(scope: !13817, file: !1828, line: 495, column: 50)
!13828 = !DILocation(line: 496, column: 26, scope: !13827)
!13829 = !DILocation(line: 498, column: 36, scope: !13827)
!13830 = !DILocation(line: 498, column: 40, scope: !13827)
!13831 = !DILocation(line: 498, column: 12, scope: !13827)
!13832 = !DILocation(line: 498, column: 10, scope: !13827)
!13833 = !DILocation(line: 499, column: 30, scope: !13827)
!13834 = !DILocation(line: 499, column: 23, scope: !13827)
!13835 = !DILocation(line: 499, column: 5, scope: !13827)
!13836 = !DILocation(line: 499, column: 11, scope: !13827)
!13837 = !DILocation(line: 499, column: 21, scope: !13827)
!13838 = !DILocation(line: 500, column: 4, scope: !13827)
!13839 = !DILocation(line: 504, column: 10, scope: !13840)
!13840 = distinct !DILexicalBlock(scope: !13806, file: !1828, line: 504, column: 8)
!13841 = !DILocation(line: 504, column: 8, scope: !13840)
!13842 = !DILocation(line: 504, column: 14, scope: !13840)
!13843 = !DILocation(line: 504, column: 17, scope: !13844)
!13844 = !DILexicalBlockFile(scope: !13840, file: !1828, discriminator: 1)
!13845 = !DILocation(line: 504, column: 21, scope: !13844)
!13846 = !DILocation(line: 504, column: 27, scope: !13844)
!13847 = !DILocation(line: 504, column: 37, scope: !13844)
!13848 = !DILocation(line: 504, column: 8, scope: !13844)
!13849 = !DILocalVariable(name: "sa_p", scope: !13850, file: !1828, line: 505, type: !1842)
!13850 = distinct !DILexicalBlock(scope: !13840, file: !1828, line: 504, column: 49)
!13851 = !DILocation(line: 505, column: 25, scope: !13850)
!13852 = !DILocation(line: 507, column: 35, scope: !13850)
!13853 = !DILocation(line: 507, column: 39, scope: !13850)
!13854 = !DILocation(line: 507, column: 12, scope: !13850)
!13855 = !DILocation(line: 507, column: 10, scope: !13850)
!13856 = !DILocation(line: 508, column: 29, scope: !13850)
!13857 = !DILocation(line: 508, column: 22, scope: !13850)
!13858 = !DILocation(line: 508, column: 5, scope: !13850)
!13859 = !DILocation(line: 508, column: 11, scope: !13850)
!13860 = !DILocation(line: 508, column: 20, scope: !13850)
!13861 = !DILocation(line: 509, column: 4, scope: !13850)
!13862 = !DILocation(line: 512, column: 8, scope: !13863)
!13863 = distinct !DILexicalBlock(scope: !13806, file: !1828, line: 512, column: 8)
!13864 = !DILocation(line: 512, column: 14, scope: !13863)
!13865 = !DILocation(line: 512, column: 19, scope: !13866)
!13866 = !DILexicalBlockFile(scope: !13863, file: !1828, discriminator: 1)
!13867 = !DILocation(line: 512, column: 25, scope: !13866)
!13868 = !DILocation(line: 512, column: 8, scope: !13866)
!13869 = !DILocation(line: 514, column: 6, scope: !13863)
!13870 = !DILocation(line: 514, column: 12, scope: !13863)
!13871 = !DILocation(line: 514, column: 19, scope: !13863)
!13872 = !DILocation(line: 513, column: 5, scope: !13863)
!13873 = !DILocation(line: 517, column: 18, scope: !13874)
!13874 = distinct !DILexicalBlock(scope: !13806, file: !1828, line: 517, column: 8)
!13875 = !DILocation(line: 517, column: 29, scope: !13874)
!13876 = !DILocation(line: 517, column: 8, scope: !13874)
!13877 = !DILocation(line: 517, column: 33, scope: !13874)
!13878 = !DILocation(line: 517, column: 8, scope: !13806)
!13879 = !DILocation(line: 518, column: 26, scope: !13874)
!13880 = !DILocation(line: 520, column: 3, scope: !13806)
!13881 = !DILocation(line: 520, column: 14, scope: !13882)
!13882 = !DILexicalBlockFile(scope: !13883, file: !1828, discriminator: 1)
!13883 = distinct !DILexicalBlock(scope: !13803, file: !1828, line: 520, column: 14)
!13884 = !DILocation(line: 520, column: 20, scope: !13882)
!13885 = !DILocation(line: 520, column: 25, scope: !13886)
!13886 = !DILexicalBlockFile(scope: !13883, file: !1828, discriminator: 2)
!13887 = !DILocation(line: 520, column: 31, scope: !13886)
!13888 = !DILocation(line: 520, column: 14, scope: !13886)
!13889 = !DILocation(line: 522, column: 5, scope: !13883)
!13890 = !DILocation(line: 522, column: 11, scope: !13883)
!13891 = !DILocation(line: 522, column: 18, scope: !13883)
!13892 = !DILocation(line: 521, column: 4, scope: !13883)
!13893 = !DILocation(line: 525, column: 8, scope: !13747)
!13894 = !DILocation(line: 525, column: 11, scope: !13747)
!13895 = !DILocation(line: 525, column: 24, scope: !13747)
!13896 = !DILocation(line: 525, column: 24, scope: !13897)
!13897 = !DILexicalBlockFile(scope: !13747, file: !1828, discriminator: 1)
!13898 = !DILocation(line: 525, column: 24, scope: !13899)
!13899 = !DILexicalBlockFile(scope: !13747, file: !1828, discriminator: 2)
!13900 = !DILocation(line: 525, column: 24, scope: !13901)
!13901 = !DILexicalBlockFile(scope: !13747, file: !1828, discriminator: 3)
!13902 = !DILocation(line: 525, column: 22, scope: !13901)
!13903 = !DILocation(line: 525, column: 6, scope: !13901)
!13904 = !DILocation(line: 468, column: 2, scope: !13905)
!13905 = !DILexicalBlockFile(scope: !1954, file: !1828, discriminator: 2)
!13906 = !DILocation(line: 532, column: 14, scope: !13907)
!13907 = distinct !DILexicalBlock(scope: !1954, file: !1828, line: 532, column: 6)
!13908 = !DILocation(line: 532, column: 6, scope: !13907)
!13909 = !DILocation(line: 532, column: 6, scope: !1954)
!13910 = !DILocation(line: 533, column: 17, scope: !13907)
!13911 = !DILocation(line: 533, column: 3, scope: !13907)
!13912 = !DILocation(line: 535, column: 32, scope: !1954)
!13913 = !DILocation(line: 535, column: 28, scope: !1954)
!13914 = !DILocation(line: 535, column: 20, scope: !1954)
!13915 = !DILocation(line: 535, column: 18, scope: !1954)
!13916 = !DILocation(line: 536, column: 14, scope: !13917)
!13917 = distinct !DILexicalBlock(scope: !1954, file: !1828, line: 536, column: 6)
!13918 = !DILocation(line: 536, column: 6, scope: !13917)
!13919 = !DILocation(line: 536, column: 6, scope: !1954)
!13920 = !DILocation(line: 537, column: 19, scope: !13921)
!13921 = distinct !DILexicalBlock(scope: !13917, file: !1828, line: 536, column: 23)
!13922 = !DILocation(line: 537, column: 3, scope: !13921)
!13923 = !DILocation(line: 537, column: 37, scope: !13921)
!13924 = !DILocation(line: 537, column: 33, scope: !13921)
!13925 = !DILocation(line: 538, column: 25, scope: !13921)
!13926 = !DILocation(line: 538, column: 19, scope: !13921)
!13927 = !DILocation(line: 539, column: 2, scope: !13921)
!13928 = !DILocation(line: 541, column: 9, scope: !1954)
!13929 = !DILocation(line: 541, column: 2, scope: !1954)
!13930 = !DILocation(line: 542, column: 1, scope: !1954)
!13931 = !DILocalVariable(name: "ifc1", arg: 1, scope: !1955, file: !1828, line: 60, type: !1958)
!13932 = !DILocation(line: 60, column: 40, scope: !1955)
!13933 = !DILocalVariable(name: "ifc2", arg: 2, scope: !1955, file: !1828, line: 60, type: !1958)
!13934 = !DILocation(line: 60, column: 61, scope: !1955)
!13935 = !DILocalVariable(name: "ifr_p1", scope: !1955, file: !1828, line: 61, type: !1852)
!13936 = !DILocation(line: 61, column: 16, scope: !1955)
!13937 = !DILocalVariable(name: "ifr_p2", scope: !1955, file: !1828, line: 62, type: !1852)
!13938 = !DILocation(line: 62, column: 16, scope: !1955)
!13939 = !DILocalVariable(name: "cp1", scope: !1955, file: !1828, line: 63, type: !20)
!13940 = !DILocation(line: 63, column: 10, scope: !1955)
!13941 = !DILocalVariable(name: "cp2", scope: !1955, file: !1828, line: 64, type: !20)
!13942 = !DILocation(line: 64, column: 10, scope: !1955)
!13943 = !DILocation(line: 66, column: 6, scope: !13944)
!13944 = distinct !DILexicalBlock(scope: !1955, file: !1828, line: 66, column: 6)
!13945 = !DILocation(line: 66, column: 12, scope: !13944)
!13946 = !DILocation(line: 66, column: 23, scope: !13944)
!13947 = !DILocation(line: 66, column: 29, scope: !13944)
!13948 = !DILocation(line: 66, column: 20, scope: !13944)
!13949 = !DILocation(line: 66, column: 6, scope: !1955)
!13950 = !DILocation(line: 67, column: 9, scope: !13951)
!13951 = distinct !DILexicalBlock(scope: !13952, file: !1828, line: 67, column: 7)
!13952 = distinct !DILexicalBlock(scope: !13944, file: !1828, line: 66, column: 38)
!13953 = !DILocation(line: 67, column: 15, scope: !13951)
!13954 = !DILocation(line: 67, column: 7, scope: !13952)
!13955 = !DILocation(line: 68, column: 4, scope: !13951)
!13956 = !DILocation(line: 69, column: 3, scope: !13952)
!13957 = !DILocation(line: 72, column: 18, scope: !1955)
!13958 = !DILocation(line: 72, column: 24, scope: !1955)
!13959 = !DILocation(line: 72, column: 6, scope: !1955)
!13960 = !DILocation(line: 73, column: 18, scope: !1955)
!13961 = !DILocation(line: 73, column: 24, scope: !1955)
!13962 = !DILocation(line: 73, column: 6, scope: !1955)
!13963 = !DILocation(line: 75, column: 2, scope: !1955)
!13964 = !DILocation(line: 75, column: 10, scope: !13965)
!13965 = !DILexicalBlockFile(scope: !1955, file: !1828, discriminator: 1)
!13966 = !DILocation(line: 75, column: 9, scope: !13965)
!13967 = !DILocation(line: 75, column: 14, scope: !13965)
!13968 = !DILocation(line: 75, column: 18, scope: !13969)
!13969 = !DILexicalBlockFile(scope: !1955, file: !1828, discriminator: 2)
!13970 = !DILocation(line: 75, column: 17, scope: !13969)
!13971 = !DILocation(line: 75, column: 14, scope: !13969)
!13972 = !DILocation(line: 75, column: 2, scope: !13973)
!13973 = !DILexicalBlockFile(scope: !1955, file: !1828, discriminator: 3)
!13974 = !DILocation(line: 76, column: 29, scope: !13975)
!13975 = distinct !DILexicalBlock(scope: !1955, file: !1828, line: 75, column: 23)
!13976 = !DILocation(line: 76, column: 12, scope: !13975)
!13977 = !DILocation(line: 76, column: 10, scope: !13975)
!13978 = !DILocation(line: 77, column: 29, scope: !13975)
!13979 = !DILocation(line: 77, column: 12, scope: !13975)
!13980 = !DILocation(line: 77, column: 10, scope: !13975)
!13981 = !DILocation(line: 79, column: 9, scope: !13975)
!13982 = !DILocation(line: 79, column: 13, scope: !13975)
!13983 = !DILocation(line: 79, column: 26, scope: !13975)
!13984 = !DILocation(line: 79, column: 26, scope: !13985)
!13985 = !DILexicalBlockFile(scope: !13975, file: !1828, discriminator: 1)
!13986 = !DILocation(line: 79, column: 26, scope: !13987)
!13987 = !DILexicalBlockFile(scope: !13975, file: !1828, discriminator: 2)
!13988 = !DILocation(line: 79, column: 26, scope: !13989)
!13989 = !DILexicalBlockFile(scope: !13975, file: !1828, discriminator: 3)
!13990 = !DILocation(line: 79, column: 24, scope: !13989)
!13991 = !DILocation(line: 79, column: 7, scope: !13989)
!13992 = !DILocation(line: 80, column: 9, scope: !13975)
!13993 = !DILocation(line: 80, column: 13, scope: !13975)
!13994 = !DILocation(line: 80, column: 26, scope: !13975)
!13995 = !DILocation(line: 80, column: 26, scope: !13985)
!13996 = !DILocation(line: 80, column: 26, scope: !13987)
!13997 = !DILocation(line: 80, column: 26, scope: !13989)
!13998 = !DILocation(line: 80, column: 24, scope: !13989)
!13999 = !DILocation(line: 80, column: 7, scope: !13989)
!14000 = !DILocation(line: 82, column: 9, scope: !14001)
!14001 = distinct !DILexicalBlock(scope: !13975, file: !1828, line: 82, column: 7)
!14002 = !DILocation(line: 82, column: 15, scope: !14001)
!14003 = !DILocation(line: 82, column: 7, scope: !13975)
!14004 = !DILocalVariable(name: "astr", scope: !14005, file: !1828, line: 83, type: !2723)
!14005 = distinct !DILexicalBlock(scope: !14001, file: !1828, line: 82, column: 20)
!14006 = !DILocation(line: 83, column: 9, scope: !14005)
!14007 = !DILocalVariable(name: "bstr", scope: !14005, file: !1828, line: 83, type: !2723)
!14008 = !DILocation(line: 83, column: 26, scope: !14005)
!14009 = !DILocation(line: 85, column: 17, scope: !14005)
!14010 = !DILocation(line: 85, column: 25, scope: !14005)
!14011 = !DILocation(line: 85, column: 35, scope: !14005)
!14012 = !DILocation(line: 85, column: 4, scope: !14005)
!14013 = !DILocation(line: 86, column: 17, scope: !14005)
!14014 = !DILocation(line: 86, column: 25, scope: !14005)
!14015 = !DILocation(line: 86, column: 35, scope: !14005)
!14016 = !DILocation(line: 86, column: 4, scope: !14005)
!14017 = !DILocation(line: 89, column: 38, scope: !14005)
!14018 = !DILocation(line: 89, column: 46, scope: !14005)
!14019 = !DILocation(line: 89, column: 56, scope: !14005)
!14020 = !DILocation(line: 89, column: 64, scope: !14005)
!14021 = !DILocation(line: 89, column: 74, scope: !14005)
!14022 = !DILocation(line: 90, column: 9, scope: !14005)
!14023 = !DILocation(line: 90, column: 18, scope: !14005)
!14024 = !DILocation(line: 90, column: 29, scope: !14005)
!14025 = !DILocation(line: 90, column: 37, scope: !14005)
!14026 = !DILocation(line: 90, column: 46, scope: !14005)
!14027 = !DILocation(line: 90, column: 57, scope: !14005)
!14028 = !DILocation(line: 90, column: 63, scope: !14005)
!14029 = !DILocation(line: 88, column: 4, scope: !14005)
!14030 = !DILocation(line: 91, column: 3, scope: !14005)
!14031 = !DILocation(line: 94, column: 7, scope: !14032)
!14032 = distinct !DILexicalBlock(scope: !13975, file: !1828, line: 94, column: 7)
!14033 = !DILocation(line: 94, column: 15, scope: !14032)
!14034 = !DILocation(line: 94, column: 24, scope: !14032)
!14035 = !DILocation(line: 94, column: 34, scope: !14032)
!14036 = !DILocation(line: 94, column: 45, scope: !14032)
!14037 = !DILocation(line: 95, column: 7, scope: !14032)
!14038 = !DILocation(line: 95, column: 15, scope: !14032)
!14039 = !DILocation(line: 95, column: 24, scope: !14032)
!14040 = !DILocation(line: 95, column: 34, scope: !14032)
!14041 = !DILocation(line: 94, column: 7, scope: !13985)
!14042 = !DILocation(line: 98, column: 8, scope: !14043)
!14043 = distinct !DILexicalBlock(scope: !14032, file: !1828, line: 98, column: 8)
!14044 = !DILocation(line: 98, column: 16, scope: !14043)
!14045 = !DILocation(line: 98, column: 25, scope: !14043)
!14046 = !DILocation(line: 98, column: 35, scope: !14043)
!14047 = !DILocation(line: 98, column: 47, scope: !14043)
!14048 = !DILocation(line: 99, column: 12, scope: !14043)
!14049 = !DILocation(line: 99, column: 20, scope: !14043)
!14050 = !DILocation(line: 99, column: 29, scope: !14043)
!14051 = !DILocation(line: 99, column: 39, scope: !14043)
!14052 = !DILocation(line: 98, column: 8, scope: !14053)
!14053 = !DILexicalBlockFile(scope: !14032, file: !1828, discriminator: 1)
!14054 = !DILocation(line: 101, column: 5, scope: !14043)
!14055 = !DILocation(line: 99, column: 42, scope: !14056)
!14056 = !DILexicalBlockFile(scope: !14043, file: !1828, discriminator: 1)
!14057 = !DILocation(line: 104, column: 7, scope: !14058)
!14058 = distinct !DILexicalBlock(scope: !13975, file: !1828, line: 104, column: 7)
!14059 = !DILocation(line: 104, column: 15, scope: !14058)
!14060 = !DILocation(line: 104, column: 24, scope: !14058)
!14061 = !DILocation(line: 104, column: 37, scope: !14058)
!14062 = !DILocation(line: 104, column: 45, scope: !14058)
!14063 = !DILocation(line: 104, column: 54, scope: !14058)
!14064 = !DILocation(line: 104, column: 34, scope: !14058)
!14065 = !DILocation(line: 104, column: 7, scope: !13975)
!14066 = !DILocation(line: 105, column: 4, scope: !14058)
!14067 = !DILocation(line: 107, column: 15, scope: !14068)
!14068 = distinct !DILexicalBlock(scope: !13975, file: !1828, line: 107, column: 7)
!14069 = !DILocation(line: 107, column: 23, scope: !14068)
!14070 = !DILocation(line: 107, column: 33, scope: !14068)
!14071 = !DILocation(line: 107, column: 41, scope: !14068)
!14072 = !DILocation(line: 107, column: 7, scope: !14068)
!14073 = !DILocation(line: 107, column: 7, scope: !13975)
!14074 = !DILocation(line: 108, column: 4, scope: !14068)
!14075 = !DILocation(line: 110, column: 17, scope: !14076)
!14076 = distinct !DILexicalBlock(scope: !13975, file: !1828, line: 110, column: 7)
!14077 = !DILocation(line: 110, column: 25, scope: !14076)
!14078 = !DILocation(line: 110, column: 15, scope: !14076)
!14079 = !DILocation(line: 110, column: 38, scope: !14076)
!14080 = !DILocation(line: 110, column: 46, scope: !14076)
!14081 = !DILocation(line: 110, column: 36, scope: !14076)
!14082 = !DILocation(line: 111, column: 8, scope: !14076)
!14083 = !DILocation(line: 111, column: 8, scope: !14084)
!14084 = !DILexicalBlockFile(scope: !14076, file: !1828, discriminator: 1)
!14085 = !DILocation(line: 111, column: 8, scope: !14086)
!14086 = !DILexicalBlockFile(scope: !14076, file: !1828, discriminator: 2)
!14087 = !DILocation(line: 111, column: 8, scope: !14088)
!14088 = !DILexicalBlockFile(scope: !14076, file: !1828, discriminator: 3)
!14089 = !DILocation(line: 110, column: 7, scope: !14084)
!14090 = !DILocation(line: 112, column: 4, scope: !14076)
!14091 = !DILocation(line: 75, column: 2, scope: !14092)
!14092 = !DILexicalBlockFile(scope: !1955, file: !1828, discriminator: 4)
!14093 = !DILocation(line: 115, column: 2, scope: !1955)
!14094 = !DILocation(line: 116, column: 1, scope: !1955)
!14095 = !DILocalVariable(name: "ifname", arg: 1, scope: !1967, file: !1828, line: 44, type: !19)
!14096 = !DILocation(line: 44, column: 40, scope: !1967)
!14097 = !DILocalVariable(name: "ifp", scope: !1967, file: !1828, line: 45, type: !2219)
!14098 = !DILocation(line: 45, column: 9, scope: !1967)
!14099 = !DILocation(line: 47, column: 6, scope: !1967)
!14100 = !DILocation(line: 48, column: 2, scope: !1967)
!14101 = !DILocation(line: 48, column: 10, scope: !14102)
!14102 = !DILexicalBlockFile(scope: !1967, file: !1828, discriminator: 1)
!14103 = !DILocation(line: 48, column: 9, scope: !14102)
!14104 = !DILocation(line: 48, column: 2, scope: !14102)
!14105 = !DILocation(line: 49, column: 23, scope: !14106)
!14106 = distinct !DILexicalBlock(scope: !14107, file: !1828, line: 49, column: 7)
!14107 = distinct !DILexicalBlock(scope: !1967, file: !1828, line: 48, column: 15)
!14108 = !DILocation(line: 49, column: 22, scope: !14106)
!14109 = !DILocation(line: 49, column: 8, scope: !14106)
!14110 = !DILocation(line: 49, column: 7, scope: !14107)
!14111 = !DILocation(line: 50, column: 4, scope: !14106)
!14112 = !DILocation(line: 51, column: 23, scope: !14113)
!14113 = distinct !DILexicalBlock(scope: !14107, file: !1828, line: 51, column: 7)
!14114 = !DILocation(line: 51, column: 22, scope: !14113)
!14115 = !DILocation(line: 51, column: 8, scope: !14113)
!14116 = !DILocation(line: 51, column: 7, scope: !14107)
!14117 = !DILocation(line: 52, column: 4, scope: !14113)
!14118 = !DILocation(line: 53, column: 15, scope: !14119)
!14119 = distinct !DILexicalBlock(scope: !14107, file: !1828, line: 53, column: 7)
!14120 = !DILocation(line: 53, column: 24, scope: !14119)
!14121 = !DILocation(line: 53, column: 23, scope: !14119)
!14122 = !DILocation(line: 53, column: 8, scope: !14119)
!14123 = !DILocation(line: 53, column: 7, scope: !14107)
!14124 = !DILocation(line: 54, column: 4, scope: !14119)
!14125 = !DILocation(line: 55, column: 6, scope: !14107)
!14126 = !DILocation(line: 48, column: 2, scope: !14127)
!14127 = !DILexicalBlockFile(scope: !1967, file: !1828, discriminator: 2)
!14128 = !DILocation(line: 57, column: 2, scope: !1967)
!14129 = !DILocation(line: 58, column: 1, scope: !1967)
!14130 = !DILocalVariable(name: "port", arg: 1, scope: !1925, file: !1828, line: 349, type: !33)
!14131 = !DILocation(line: 349, column: 32, scope: !1925)
!14132 = !DILocalVariable(name: "force_update", arg: 2, scope: !1925, file: !1828, line: 349, type: !33)
!14133 = !DILocation(line: 349, column: 42, scope: !1925)
!14134 = !DILocalVariable(name: "newlist", scope: !1925, file: !1828, line: 350, type: !1943)
!14135 = !DILocation(line: 350, column: 10, scope: !1925)
!14136 = !DILocation(line: 352, column: 12, scope: !1925)
!14137 = !DILocation(line: 352, column: 10, scope: !1925)
!14138 = !DILocation(line: 353, column: 7, scope: !14139)
!14139 = distinct !DILexicalBlock(scope: !1925, file: !1828, line: 353, column: 6)
!14140 = !DILocation(line: 353, column: 6, scope: !1925)
!14141 = !DILocation(line: 354, column: 3, scope: !14139)
!14142 = !DILocation(line: 356, column: 8, scope: !14143)
!14143 = distinct !DILexicalBlock(scope: !1925, file: !1828, line: 356, column: 6)
!14144 = !DILocation(line: 356, column: 6, scope: !14143)
!14145 = !DILocation(line: 356, column: 6, scope: !1925)
!14146 = !DILocation(line: 357, column: 7, scope: !14147)
!14147 = distinct !DILexicalBlock(scope: !14148, file: !1828, line: 357, column: 7)
!14148 = distinct !DILexicalBlock(scope: !14143, file: !1828, line: 356, column: 18)
!14149 = !DILocation(line: 357, column: 7, scope: !14148)
!14150 = !DILocation(line: 358, column: 22, scope: !14151)
!14151 = distinct !DILexicalBlock(scope: !14147, file: !1828, line: 357, column: 21)
!14152 = !DILocation(line: 358, column: 4, scope: !14151)
!14153 = !DILocation(line: 359, column: 22, scope: !14151)
!14154 = !DILocation(line: 359, column: 33, scope: !14151)
!14155 = !DILocation(line: 359, column: 4, scope: !14151)
!14156 = !DILocation(line: 360, column: 14, scope: !14151)
!14157 = !DILocation(line: 360, column: 12, scope: !14151)
!14158 = !DILocation(line: 361, column: 4, scope: !14151)
!14159 = !DILocation(line: 362, column: 4, scope: !14151)
!14160 = !DILocation(line: 364, column: 22, scope: !14161)
!14161 = distinct !DILexicalBlock(scope: !14147, file: !1828, line: 363, column: 10)
!14162 = !DILocation(line: 364, column: 4, scope: !14161)
!14163 = !DILocation(line: 365, column: 4, scope: !14161)
!14164 = !DILocation(line: 369, column: 27, scope: !1925)
!14165 = !DILocation(line: 369, column: 36, scope: !1925)
!14166 = !DILocation(line: 369, column: 10, scope: !1925)
!14167 = !DILocation(line: 369, column: 2, scope: !1925)
!14168 = !DILocation(line: 371, column: 8, scope: !14169)
!14169 = distinct !DILexicalBlock(scope: !14170, file: !1828, line: 371, column: 7)
!14170 = distinct !DILexicalBlock(scope: !1925, file: !1828, line: 369, column: 43)
!14171 = !DILocation(line: 371, column: 7, scope: !14170)
!14172 = !DILocation(line: 372, column: 22, scope: !14173)
!14173 = distinct !DILexicalBlock(scope: !14169, file: !1828, line: 371, column: 22)
!14174 = !DILocation(line: 372, column: 4, scope: !14173)
!14175 = !DILocation(line: 373, column: 4, scope: !14173)
!14176 = !DILocation(line: 371, column: 8, scope: !14177)
!14177 = !DILexicalBlockFile(scope: !14169, file: !1828, discriminator: 1)
!14178 = !DILocation(line: 377, column: 21, scope: !14170)
!14179 = !DILocation(line: 377, column: 3, scope: !14170)
!14180 = !DILocation(line: 379, column: 21, scope: !14170)
!14181 = !DILocation(line: 379, column: 3, scope: !14170)
!14182 = !DILocation(line: 380, column: 13, scope: !14170)
!14183 = !DILocation(line: 380, column: 11, scope: !14170)
!14184 = !DILocation(line: 381, column: 3, scope: !14170)
!14185 = !DILocation(line: 382, column: 3, scope: !14170)
!14186 = !DILocation(line: 384, column: 21, scope: !14170)
!14187 = !DILocation(line: 384, column: 3, scope: !14170)
!14188 = !DILocation(line: 385, column: 3, scope: !14170)
!14189 = !DILocation(line: 387, column: 1, scope: !1925)
!14190 = !DILocalVariable(name: "list_head", arg: 1, scope: !1951, file: !1828, line: 141, type: !1943)
!14191 = !DILocation(line: 141, column: 39, scope: !1951)
!14192 = !DILocation(line: 143, column: 15, scope: !1951)
!14193 = !DILocation(line: 143, column: 2, scope: !1951)
!14194 = !DILocation(line: 144, column: 2, scope: !1951)
!14195 = !DILocalVariable(name: "gl", scope: !1928, file: !1828, line: 391, type: !1943)
!14196 = !DILocation(line: 391, column: 10, scope: !1928)
!14197 = !DILocalVariable(name: "ni", scope: !1928, file: !1828, line: 392, type: !1830)
!14198 = !DILocation(line: 392, column: 7, scope: !1928)
!14199 = !DILocalVariable(name: "s", scope: !1928, file: !1828, line: 393, type: !33)
!14200 = !DILocation(line: 393, column: 6, scope: !1928)
!14201 = !DILocation(line: 395, column: 7, scope: !14202)
!14202 = distinct !DILexicalBlock(scope: !1928, file: !1828, line: 395, column: 6)
!14203 = !DILocation(line: 395, column: 6, scope: !1928)
!14204 = !DILocation(line: 396, column: 3, scope: !14202)
!14205 = !DILocation(line: 398, column: 4, scope: !1928)
!14206 = !DILocation(line: 399, column: 12, scope: !14207)
!14207 = distinct !DILexicalBlock(scope: !1928, file: !1828, line: 399, column: 2)
!14208 = !DILocation(line: 399, column: 21, scope: !14207)
!14209 = !DILocation(line: 399, column: 10, scope: !14207)
!14210 = !DILocation(line: 399, column: 7, scope: !14207)
!14211 = !DILocation(line: 399, column: 27, scope: !14212)
!14212 = !DILexicalBlockFile(scope: !14213, file: !1828, discriminator: 1)
!14213 = distinct !DILexicalBlock(scope: !14207, file: !1828, line: 399, column: 2)
!14214 = !DILocation(line: 399, column: 31, scope: !14212)
!14215 = !DILocation(line: 399, column: 2, scope: !14212)
!14216 = !DILocation(line: 400, column: 16, scope: !14217)
!14217 = distinct !DILexicalBlock(scope: !14213, file: !1828, line: 399, column: 57)
!14218 = !DILocation(line: 400, column: 20, scope: !14217)
!14219 = !DILocation(line: 400, column: 8, scope: !14217)
!14220 = !DILocation(line: 400, column: 6, scope: !14217)
!14221 = !DILocation(line: 402, column: 8, scope: !14222)
!14222 = distinct !DILexicalBlock(scope: !14217, file: !1828, line: 402, column: 7)
!14223 = !DILocation(line: 402, column: 12, scope: !14222)
!14224 = !DILocation(line: 402, column: 7, scope: !14217)
!14225 = !DILocation(line: 403, column: 4, scope: !14222)
!14226 = !DILocation(line: 405, column: 24, scope: !14227)
!14227 = distinct !DILexicalBlock(scope: !14217, file: !1828, line: 405, column: 7)
!14228 = !DILocation(line: 405, column: 7, scope: !14227)
!14229 = !DILocation(line: 405, column: 28, scope: !14227)
!14230 = !DILocation(line: 405, column: 7, scope: !14217)
!14231 = !DILocation(line: 406, column: 5, scope: !14227)
!14232 = !DILocation(line: 406, column: 4, scope: !14227)
!14233 = !DILocation(line: 407, column: 26, scope: !14234)
!14234 = distinct !DILexicalBlock(scope: !14217, file: !1828, line: 407, column: 7)
!14235 = !DILocation(line: 407, column: 7, scope: !14234)
!14236 = !DILocation(line: 407, column: 30, scope: !14234)
!14237 = !DILocation(line: 407, column: 7, scope: !14217)
!14238 = !DILocation(line: 408, column: 5, scope: !14234)
!14239 = !DILocation(line: 408, column: 4, scope: !14234)
!14240 = !DILocation(line: 409, column: 2, scope: !14217)
!14241 = !DILocation(line: 399, column: 47, scope: !14242)
!14242 = !DILexicalBlockFile(scope: !14213, file: !1828, discriminator: 2)
!14243 = !DILocation(line: 399, column: 51, scope: !14242)
!14244 = !DILocation(line: 399, column: 45, scope: !14242)
!14245 = !DILocation(line: 399, column: 2, scope: !14242)
!14246 = !DILocation(line: 411, column: 9, scope: !1928)
!14247 = !DILocation(line: 411, column: 2, scope: !1928)
!14248 = !DILocation(line: 412, column: 1, scope: !1928)
!14249 = !DILocalVariable(name: "ni", arg: 1, scope: !1933, file: !1828, line: 579, type: !1830)
!14250 = !DILocation(line: 579, column: 27, scope: !1933)
!14251 = !DILocalVariable(name: "fn", scope: !1933, file: !1828, line: 580, type: !4)
!14252 = !DILocation(line: 580, column: 14, scope: !1933)
!14253 = !DILocalVariable(name: "astr", scope: !1933, file: !1828, line: 581, type: !2723)
!14254 = !DILocation(line: 581, column: 7, scope: !1933)
!14255 = !DILocalVariable(name: "on", scope: !1933, file: !1828, line: 582, type: !6824)
!14256 = !DILocation(line: 582, column: 12, scope: !1933)
!14257 = !DILocalVariable(name: "sock", scope: !1933, file: !1828, line: 583, type: !33)
!14258 = !DILocation(line: 583, column: 6, scope: !1933)
!14259 = !DILocation(line: 585, column: 2, scope: !1933)
!14260 = !DILocation(line: 585, column: 6, scope: !1933)
!14261 = !DILocation(line: 585, column: 15, scope: !1933)
!14262 = !DILocation(line: 587, column: 17, scope: !1933)
!14263 = !DILocation(line: 587, column: 21, scope: !1933)
!14264 = !DILocation(line: 587, column: 27, scope: !1933)
!14265 = !DILocation(line: 587, column: 9, scope: !1933)
!14266 = !DILocation(line: 587, column: 7, scope: !1933)
!14267 = !DILocation(line: 588, column: 6, scope: !14268)
!14268 = distinct !DILexicalBlock(scope: !1933, file: !1828, line: 588, column: 6)
!14269 = !DILocation(line: 588, column: 11, scope: !14268)
!14270 = !DILocation(line: 588, column: 6, scope: !1933)
!14271 = !DILocation(line: 589, column: 50, scope: !14272)
!14272 = distinct !DILexicalBlock(scope: !14268, file: !1828, line: 588, column: 16)
!14273 = !DILocation(line: 589, column: 3, scope: !14272)
!14274 = !DILocation(line: 590, column: 3, scope: !14272)
!14275 = !DILocation(line: 592, column: 8, scope: !14276)
!14276 = distinct !DILexicalBlock(scope: !1933, file: !1828, line: 592, column: 6)
!14277 = !DILocation(line: 592, column: 14, scope: !14276)
!14278 = !DILocation(line: 592, column: 6, scope: !1933)
!14279 = !DILocation(line: 593, column: 50, scope: !14276)
!14280 = !DILocation(line: 593, column: 54, scope: !14276)
!14281 = !DILocation(line: 593, column: 3, scope: !14276)
!14282 = !DILocation(line: 595, column: 18, scope: !14283)
!14283 = distinct !DILexicalBlock(scope: !1933, file: !1828, line: 595, column: 6)
!14284 = !DILocation(line: 596, column: 4, scope: !14283)
!14285 = !DILocation(line: 595, column: 6, scope: !14283)
!14286 = !DILocation(line: 595, column: 6, scope: !1933)
!14287 = !DILocation(line: 597, column: 3, scope: !14283)
!14288 = !DILocation(line: 600, column: 12, scope: !14289)
!14289 = distinct !DILexicalBlock(scope: !1933, file: !1828, line: 600, column: 6)
!14290 = !DILocation(line: 600, column: 18, scope: !14289)
!14291 = !DILocation(line: 600, column: 22, scope: !14289)
!14292 = !DILocation(line: 600, column: 28, scope: !14289)
!14293 = !DILocation(line: 600, column: 28, scope: !14294)
!14294 = !DILexicalBlockFile(scope: !14289, file: !1828, discriminator: 1)
!14295 = !DILocation(line: 600, column: 28, scope: !14296)
!14296 = !DILexicalBlockFile(scope: !14289, file: !1828, discriminator: 2)
!14297 = !DILocation(line: 600, column: 28, scope: !14298)
!14298 = !DILexicalBlockFile(scope: !14289, file: !1828, discriminator: 3)
!14299 = !DILocation(line: 600, column: 6, scope: !14298)
!14300 = !DILocation(line: 600, column: 57, scope: !14298)
!14301 = !DILocation(line: 601, column: 3, scope: !14302)
!14302 = distinct !DILexicalBlock(scope: !14289, file: !1828, line: 600, column: 62)
!14303 = !DILocation(line: 602, column: 10, scope: !14302)
!14304 = !DILocation(line: 602, column: 3, scope: !14302)
!14305 = !DILocation(line: 603, column: 3, scope: !14302)
!14306 = !DILocation(line: 607, column: 29, scope: !14307)
!14307 = distinct !DILexicalBlock(scope: !1933, file: !1828, line: 607, column: 6)
!14308 = !DILocation(line: 607, column: 33, scope: !14307)
!14309 = !DILocation(line: 607, column: 40, scope: !14307)
!14310 = !DILocation(line: 607, column: 6, scope: !14307)
!14311 = !DILocation(line: 607, column: 6, scope: !1933)
!14312 = !DILocation(line: 608, column: 15, scope: !14313)
!14313 = distinct !DILexicalBlock(scope: !14307, file: !1828, line: 607, column: 50)
!14314 = !DILocation(line: 608, column: 19, scope: !14313)
!14315 = !DILocation(line: 608, column: 25, scope: !14313)
!14316 = !DILocation(line: 608, column: 3, scope: !14313)
!14317 = !DILocation(line: 609, column: 50, scope: !14313)
!14318 = !DILocation(line: 609, column: 3, scope: !14313)
!14319 = !DILocation(line: 610, column: 2, scope: !14313)
!14320 = !DILocation(line: 624, column: 17, scope: !1933)
!14321 = !DILocation(line: 624, column: 2, scope: !1933)
!14322 = !DILocation(line: 624, column: 6, scope: !1933)
!14323 = !DILocation(line: 624, column: 15, scope: !1933)
!14324 = !DILocation(line: 625, column: 9, scope: !1933)
!14325 = !DILocation(line: 625, column: 2, scope: !1933)
!14326 = !DILocation(line: 626, column: 1, scope: !1933)
!14327 = !DILocalVariable(name: "ni", arg: 1, scope: !1936, file: !1828, line: 628, type: !1830)
!14328 = !DILocation(line: 628, column: 29, scope: !1936)
!14329 = !DILocalVariable(name: "fn", scope: !1936, file: !1828, line: 629, type: !4)
!14330 = !DILocation(line: 629, column: 14, scope: !1936)
!14331 = !DILocalVariable(name: "astr", scope: !1936, file: !1828, line: 630, type: !2723)
!14332 = !DILocation(line: 630, column: 7, scope: !1936)
!14333 = !DILocalVariable(name: "on", scope: !1936, file: !1828, line: 631, type: !6824)
!14334 = !DILocation(line: 631, column: 12, scope: !1936)
!14335 = !DILocalVariable(name: "sock", scope: !1936, file: !1828, line: 632, type: !33)
!14336 = !DILocation(line: 632, column: 6, scope: !1936)
!14337 = !DILocation(line: 634, column: 2, scope: !1936)
!14338 = !DILocation(line: 634, column: 6, scope: !1936)
!14339 = !DILocation(line: 634, column: 15, scope: !1936)
!14340 = !DILocation(line: 637, column: 30, scope: !14341)
!14341 = distinct !DILexicalBlock(scope: !1936, file: !1828, line: 637, column: 6)
!14342 = !DILocation(line: 637, column: 34, scope: !14341)
!14343 = !DILocation(line: 637, column: 41, scope: !14341)
!14344 = !DILocation(line: 637, column: 7, scope: !14341)
!14345 = !DILocation(line: 637, column: 6, scope: !1936)
!14346 = !DILocation(line: 638, column: 3, scope: !14341)
!14347 = !DILocation(line: 640, column: 17, scope: !1936)
!14348 = !DILocation(line: 640, column: 21, scope: !1936)
!14349 = !DILocation(line: 640, column: 27, scope: !1936)
!14350 = !DILocation(line: 640, column: 9, scope: !1936)
!14351 = !DILocation(line: 640, column: 7, scope: !1936)
!14352 = !DILocation(line: 641, column: 6, scope: !14353)
!14353 = distinct !DILexicalBlock(scope: !1936, file: !1828, line: 641, column: 6)
!14354 = !DILocation(line: 641, column: 11, scope: !14353)
!14355 = !DILocation(line: 641, column: 6, scope: !1936)
!14356 = !DILocation(line: 642, column: 50, scope: !14357)
!14357 = distinct !DILexicalBlock(scope: !14353, file: !1828, line: 641, column: 16)
!14358 = !DILocation(line: 642, column: 3, scope: !14357)
!14359 = !DILocation(line: 643, column: 3, scope: !14357)
!14360 = !DILocation(line: 645, column: 8, scope: !14361)
!14361 = distinct !DILexicalBlock(scope: !1936, file: !1828, line: 645, column: 6)
!14362 = !DILocation(line: 645, column: 14, scope: !14361)
!14363 = !DILocation(line: 645, column: 6, scope: !1936)
!14364 = !DILocation(line: 646, column: 50, scope: !14361)
!14365 = !DILocation(line: 646, column: 54, scope: !14361)
!14366 = !DILocation(line: 646, column: 3, scope: !14361)
!14367 = !DILocation(line: 648, column: 18, scope: !14368)
!14368 = distinct !DILexicalBlock(scope: !1936, file: !1828, line: 648, column: 6)
!14369 = !DILocation(line: 649, column: 4, scope: !14368)
!14370 = !DILocation(line: 648, column: 6, scope: !14368)
!14371 = !DILocation(line: 648, column: 6, scope: !1936)
!14372 = !DILocation(line: 650, column: 3, scope: !14368)
!14373 = !DILocation(line: 652, column: 12, scope: !14374)
!14374 = distinct !DILexicalBlock(scope: !1936, file: !1828, line: 652, column: 6)
!14375 = !DILocation(line: 652, column: 18, scope: !14374)
!14376 = !DILocation(line: 652, column: 22, scope: !14374)
!14377 = !DILocation(line: 652, column: 28, scope: !14374)
!14378 = !DILocation(line: 652, column: 28, scope: !14379)
!14379 = !DILexicalBlockFile(scope: !14374, file: !1828, discriminator: 1)
!14380 = !DILocation(line: 652, column: 28, scope: !14381)
!14381 = !DILexicalBlockFile(scope: !14374, file: !1828, discriminator: 2)
!14382 = !DILocation(line: 652, column: 28, scope: !14383)
!14383 = !DILexicalBlockFile(scope: !14374, file: !1828, discriminator: 3)
!14384 = !DILocation(line: 652, column: 6, scope: !14383)
!14385 = !DILocation(line: 652, column: 57, scope: !14383)
!14386 = !DILocation(line: 653, column: 3, scope: !14387)
!14387 = distinct !DILexicalBlock(scope: !14374, file: !1828, line: 652, column: 63)
!14388 = !DILocation(line: 654, column: 10, scope: !14387)
!14389 = !DILocation(line: 654, column: 3, scope: !14387)
!14390 = !DILocation(line: 655, column: 3, scope: !14387)
!14391 = !DILocation(line: 658, column: 13, scope: !14392)
!14392 = distinct !DILexicalBlock(scope: !1936, file: !1828, line: 658, column: 6)
!14393 = !DILocation(line: 658, column: 28, scope: !14392)
!14394 = !DILocation(line: 658, column: 6, scope: !14392)
!14395 = !DILocation(line: 658, column: 42, scope: !14392)
!14396 = !DILocation(line: 658, column: 6, scope: !1936)
!14397 = !DILocation(line: 659, column: 3, scope: !14398)
!14398 = distinct !DILexicalBlock(scope: !14392, file: !1828, line: 658, column: 47)
!14399 = !DILocation(line: 660, column: 3, scope: !14398)
!14400 = !DILocation(line: 663, column: 14, scope: !14401)
!14401 = distinct !DILexicalBlock(scope: !1936, file: !1828, line: 663, column: 6)
!14402 = !DILocation(line: 663, column: 6, scope: !14401)
!14403 = !DILocation(line: 663, column: 23, scope: !14401)
!14404 = !DILocation(line: 663, column: 6, scope: !1936)
!14405 = !DILocation(line: 664, column: 3, scope: !14406)
!14406 = distinct !DILexicalBlock(scope: !14401, file: !1828, line: 663, column: 29)
!14407 = !DILocation(line: 665, column: 10, scope: !14406)
!14408 = !DILocation(line: 665, column: 3, scope: !14406)
!14409 = !DILocation(line: 666, column: 3, scope: !14406)
!14410 = !DILocation(line: 669, column: 14, scope: !1936)
!14411 = !DILocation(line: 669, column: 18, scope: !1936)
!14412 = !DILocation(line: 669, column: 24, scope: !1936)
!14413 = !DILocation(line: 669, column: 2, scope: !1936)
!14414 = !DILocation(line: 670, column: 49, scope: !1936)
!14415 = !DILocation(line: 670, column: 2, scope: !1936)
!14416 = !DILocation(line: 672, column: 17, scope: !1936)
!14417 = !DILocation(line: 672, column: 2, scope: !1936)
!14418 = !DILocation(line: 672, column: 6, scope: !1936)
!14419 = !DILocation(line: 672, column: 15, scope: !1936)
!14420 = !DILocation(line: 673, column: 9, scope: !1936)
!14421 = !DILocation(line: 673, column: 2, scope: !1936)
!14422 = !DILocation(line: 674, column: 1, scope: !1936)
!14423 = !DILocation(line: 417, column: 20, scope: !1929)
!14424 = !DILocation(line: 417, column: 2, scope: !1929)
!14425 = !DILocation(line: 418, column: 39, scope: !1929)
!14426 = !DILocation(line: 418, column: 24, scope: !1929)
!14427 = !DILocation(line: 418, column: 10, scope: !1929)
!14428 = !DILocation(line: 420, column: 2, scope: !1929)
!14429 = !DILocalVariable(name: "ni", arg: 1, scope: !1930, file: !1828, line: 544, type: !1830)
!14430 = !DILocation(line: 544, column: 25, scope: !1930)
!14431 = !DILocalVariable(name: "mesg", arg: 2, scope: !1930, file: !1828, line: 544, type: !20)
!14432 = !DILocation(line: 544, column: 37, scope: !1930)
!14433 = !DILocalVariable(name: "mesg_len", arg: 3, scope: !1930, file: !1828, line: 544, type: !33)
!14434 = !DILocation(line: 544, column: 47, scope: !1930)
!14435 = !DILocalVariable(name: "sa_p", arg: 4, scope: !1930, file: !1828, line: 545, type: !1835)
!14436 = !DILocation(line: 545, column: 23, scope: !1930)
!14437 = !DILocalVariable(name: "fn", scope: !1930, file: !1828, line: 546, type: !4)
!14438 = !DILocation(line: 546, column: 14, scope: !1930)
!14439 = !DILocation(line: 548, column: 7, scope: !14440)
!14440 = distinct !DILexicalBlock(scope: !1930, file: !1828, line: 548, column: 6)
!14441 = !DILocation(line: 548, column: 6, scope: !1930)
!14442 = !DILocation(line: 550, column: 7, scope: !14443)
!14443 = distinct !DILexicalBlock(scope: !14444, file: !1828, line: 550, column: 7)
!14444 = distinct !DILexicalBlock(scope: !14440, file: !1828, line: 548, column: 11)
!14445 = !DILocation(line: 550, column: 13, scope: !14443)
!14446 = !DILocation(line: 550, column: 23, scope: !14443)
!14447 = !DILocation(line: 550, column: 7, scope: !14444)
!14448 = !DILocation(line: 551, column: 17, scope: !14443)
!14449 = !DILocation(line: 551, column: 30, scope: !14443)
!14450 = !DILocation(line: 551, column: 9, scope: !14443)
!14451 = !DILocation(line: 551, column: 7, scope: !14443)
!14452 = !DILocation(line: 551, column: 4, scope: !14443)
!14453 = !DILocation(line: 554, column: 7, scope: !14454)
!14454 = distinct !DILexicalBlock(scope: !14444, file: !1828, line: 554, column: 7)
!14455 = !DILocation(line: 554, column: 13, scope: !14454)
!14456 = !DILocation(line: 554, column: 23, scope: !14454)
!14457 = !DILocation(line: 554, column: 7, scope: !14444)
!14458 = !DILocation(line: 555, column: 17, scope: !14454)
!14459 = !DILocation(line: 555, column: 31, scope: !14454)
!14460 = !DILocation(line: 555, column: 9, scope: !14454)
!14461 = !DILocation(line: 555, column: 7, scope: !14454)
!14462 = !DILocation(line: 555, column: 4, scope: !14454)
!14463 = !DILocation(line: 557, column: 2, scope: !14444)
!14464 = !DILocation(line: 559, column: 7, scope: !14465)
!14465 = distinct !DILexicalBlock(scope: !1930, file: !1828, line: 559, column: 6)
!14466 = !DILocation(line: 559, column: 10, scope: !14465)
!14467 = !DILocation(line: 559, column: 13, scope: !14468)
!14468 = !DILexicalBlockFile(scope: !14465, file: !1828, discriminator: 1)
!14469 = !DILocation(line: 559, column: 17, scope: !14468)
!14470 = !DILocation(line: 559, column: 26, scope: !14468)
!14471 = !DILocation(line: 559, column: 6, scope: !14468)
!14472 = !DILocation(line: 560, column: 62, scope: !14473)
!14473 = distinct !DILexicalBlock(scope: !14465, file: !1828, line: 559, column: 31)
!14474 = !DILocation(line: 560, column: 3, scope: !14473)
!14475 = !DILocation(line: 561, column: 3, scope: !14473)
!14476 = !DILocation(line: 565, column: 6, scope: !14477)
!14477 = distinct !DILexicalBlock(scope: !1930, file: !1828, line: 565, column: 6)
!14478 = !DILocation(line: 565, column: 10, scope: !14477)
!14479 = !DILocation(line: 565, column: 16, scope: !14477)
!14480 = !DILocation(line: 565, column: 26, scope: !14477)
!14481 = !DILocation(line: 565, column: 37, scope: !14477)
!14482 = !DILocation(line: 565, column: 40, scope: !14483)
!14483 = !DILexicalBlockFile(scope: !14477, file: !1828, discriminator: 1)
!14484 = !DILocation(line: 565, column: 46, scope: !14483)
!14485 = !DILocation(line: 565, column: 56, scope: !14483)
!14486 = !DILocation(line: 565, column: 6, scope: !14483)
!14487 = !DILocation(line: 566, column: 18, scope: !14477)
!14488 = !DILocation(line: 566, column: 22, scope: !14477)
!14489 = !DILocation(line: 566, column: 32, scope: !14477)
!14490 = !DILocation(line: 566, column: 38, scope: !14477)
!14491 = !DILocation(line: 566, column: 51, scope: !14477)
!14492 = !DILocation(line: 567, column: 11, scope: !14477)
!14493 = !DILocation(line: 567, column: 11, scope: !14483)
!14494 = !DILocation(line: 567, column: 11, scope: !14495)
!14495 = !DILexicalBlockFile(scope: !14477, file: !1828, discriminator: 2)
!14496 = !DILocation(line: 567, column: 11, scope: !14497)
!14497 = !DILexicalBlockFile(scope: !14477, file: !1828, discriminator: 3)
!14498 = !DILocation(line: 566, column: 10, scope: !14483)
!14499 = !DILocation(line: 566, column: 3, scope: !14483)
!14500 = !DILocation(line: 571, column: 6, scope: !14501)
!14501 = distinct !DILexicalBlock(scope: !1930, file: !1828, line: 571, column: 6)
!14502 = !DILocation(line: 571, column: 10, scope: !14501)
!14503 = !DILocation(line: 571, column: 16, scope: !14501)
!14504 = !DILocation(line: 571, column: 26, scope: !14501)
!14505 = !DILocation(line: 571, column: 38, scope: !14501)
!14506 = !DILocation(line: 571, column: 41, scope: !14507)
!14507 = !DILexicalBlockFile(scope: !14501, file: !1828, discriminator: 1)
!14508 = !DILocation(line: 571, column: 47, scope: !14507)
!14509 = !DILocation(line: 571, column: 57, scope: !14507)
!14510 = !DILocation(line: 571, column: 6, scope: !14507)
!14511 = !DILocation(line: 572, column: 18, scope: !14501)
!14512 = !DILocation(line: 572, column: 22, scope: !14501)
!14513 = !DILocation(line: 572, column: 32, scope: !14501)
!14514 = !DILocation(line: 572, column: 38, scope: !14501)
!14515 = !DILocation(line: 572, column: 51, scope: !14501)
!14516 = !DILocation(line: 573, column: 11, scope: !14501)
!14517 = !DILocation(line: 573, column: 11, scope: !14507)
!14518 = !DILocation(line: 573, column: 11, scope: !14519)
!14519 = !DILexicalBlockFile(scope: !14501, file: !1828, discriminator: 2)
!14520 = !DILocation(line: 573, column: 11, scope: !14521)
!14521 = !DILexicalBlockFile(scope: !14501, file: !1828, discriminator: 3)
!14522 = !DILocation(line: 572, column: 10, scope: !14507)
!14523 = !DILocation(line: 572, column: 3, scope: !14507)
!14524 = !DILocation(line: 576, column: 2, scope: !1930)
!14525 = !DILocation(line: 577, column: 1, scope: !1930)
!14526 = !DILocalVariable(name: "context", arg: 1, scope: !2027, file: !1974, line: 21, type: !2030)
!14527 = !DILocation(line: 21, column: 32, scope: !2027)
!14528 = !DILocalVariable(name: "me", scope: !2027, file: !1974, line: 22, type: !1976)
!14529 = !DILocation(line: 22, column: 23, scope: !2027)
!14530 = !DILocalVariable(name: "peer", scope: !2027, file: !1974, line: 23, type: !1976)
!14531 = !DILocation(line: 23, column: 23, scope: !2027)
!14532 = !DILocalVariable(name: "ni", scope: !2027, file: !1974, line: 25, type: !2101)
!14533 = !DILocation(line: 25, column: 7, scope: !2027)
!14534 = !DILocation(line: 27, column: 2, scope: !2027)
!14535 = !DILocation(line: 29, column: 7, scope: !2027)
!14536 = !DILocation(line: 29, column: 16, scope: !2027)
!14537 = !DILocation(line: 29, column: 5, scope: !2027)
!14538 = !DILocation(line: 30, column: 7, scope: !14539)
!14539 = distinct !DILexicalBlock(scope: !2027, file: !1974, line: 30, column: 6)
!14540 = !DILocation(line: 30, column: 10, scope: !14539)
!14541 = !DILocation(line: 30, column: 14, scope: !14542)
!14542 = !DILexicalBlockFile(scope: !14539, file: !1974, discriminator: 1)
!14543 = !DILocation(line: 30, column: 18, scope: !14542)
!14544 = !DILocation(line: 30, column: 6, scope: !14542)
!14545 = !DILocation(line: 31, column: 3, scope: !14539)
!14546 = !DILocation(line: 33, column: 29, scope: !2027)
!14547 = !DILocation(line: 33, column: 33, scope: !2027)
!14548 = !DILocation(line: 33, column: 6, scope: !2027)
!14549 = !DILocation(line: 33, column: 5, scope: !2027)
!14550 = !DILocation(line: 34, column: 6, scope: !14551)
!14551 = distinct !DILexicalBlock(scope: !2027, file: !1974, line: 34, column: 6)
!14552 = !DILocation(line: 34, column: 10, scope: !14551)
!14553 = !DILocation(line: 34, column: 22, scope: !14551)
!14554 = !DILocation(line: 34, column: 6, scope: !2027)
!14555 = !DILocation(line: 35, column: 3, scope: !14551)
!14556 = !DILocalVariable(name: "__a", scope: !14557, file: !1974, line: 37, type: !1992)
!14557 = distinct !DILexicalBlock(scope: !14558, file: !1974, line: 37, column: 6)
!14558 = distinct !DILexicalBlock(scope: !2027, file: !1974, line: 37, column: 6)
!14559 = !DILocation(line: 37, column: 6, scope: !14557)
!14560 = !DILocalVariable(name: "__b", scope: !14557, file: !1974, line: 37, type: !1992)
!14561 = !DILocation(line: 37, column: 6, scope: !14562)
!14562 = !DILexicalBlockFile(scope: !14557, file: !1974, discriminator: 1)
!14563 = !DILocation(line: 37, column: 6, scope: !14564)
!14564 = !DILexicalBlockFile(scope: !14557, file: !1974, discriminator: 2)
!14565 = !DILocation(line: 37, column: 6, scope: !14566)
!14566 = !DILexicalBlockFile(scope: !14557, file: !1974, discriminator: 3)
!14567 = !DILocation(line: 37, column: 6, scope: !14568)
!14568 = !DILexicalBlockFile(scope: !14557, file: !1974, discriminator: 4)
!14569 = !DILocation(line: 39, column: 8, scope: !14570)
!14570 = distinct !DILexicalBlock(scope: !14571, file: !1974, line: 39, column: 7)
!14571 = distinct !DILexicalBlock(scope: !14558, file: !1974, line: 37, column: 56)
!14572 = !DILocation(line: 39, column: 7, scope: !14571)
!14573 = !DILocation(line: 40, column: 4, scope: !14570)
!14574 = !DILocation(line: 42, column: 10, scope: !14571)
!14575 = !DILocation(line: 43, column: 3, scope: !14571)
!14576 = !DILocation(line: 46, column: 32, scope: !2027)
!14577 = !DILocation(line: 46, column: 41, scope: !2027)
!14578 = !DILocation(line: 46, column: 9, scope: !2027)
!14579 = !DILocation(line: 46, column: 7, scope: !2027)
!14580 = !DILocation(line: 47, column: 6, scope: !14581)
!14581 = distinct !DILexicalBlock(scope: !2027, file: !1974, line: 47, column: 6)
!14582 = !DILocation(line: 47, column: 12, scope: !14581)
!14583 = !DILocation(line: 47, column: 24, scope: !14581)
!14584 = !DILocation(line: 47, column: 6, scope: !2027)
!14585 = !DILocation(line: 48, column: 3, scope: !14581)
!14586 = !DILocalVariable(name: "__a", scope: !14587, file: !1974, line: 50, type: !1992)
!14587 = distinct !DILexicalBlock(scope: !14588, file: !1974, line: 50, column: 6)
!14588 = distinct !DILexicalBlock(scope: !2027, file: !1974, line: 50, column: 6)
!14589 = !DILocation(line: 50, column: 6, scope: !14587)
!14590 = !DILocation(line: 50, column: 6, scope: !14591)
!14591 = !DILexicalBlockFile(scope: !14587, file: !1974, discriminator: 2)
!14592 = !DILocation(line: 50, column: 6, scope: !14588)
!14593 = !DILocation(line: 50, column: 44, scope: !14588)
!14594 = !DILocalVariable(name: "__a", scope: !14595, file: !1974, line: 51, type: !1992)
!14595 = distinct !DILexicalBlock(scope: !14588, file: !1974, line: 51, column: 6)
!14596 = !DILocation(line: 51, column: 6, scope: !14595)
!14597 = !DILocation(line: 51, column: 6, scope: !14598)
!14598 = !DILexicalBlockFile(scope: !14595, file: !1974, discriminator: 1)
!14599 = !DILocation(line: 51, column: 6, scope: !14588)
!14600 = !DILocation(line: 50, column: 6, scope: !14601)
!14601 = !DILexicalBlockFile(scope: !2027, file: !1974, discriminator: 1)
!14602 = !DILocation(line: 53, column: 11, scope: !14603)
!14603 = distinct !DILexicalBlock(scope: !14604, file: !1974, line: 53, column: 11)
!14604 = distinct !DILexicalBlock(scope: !14588, file: !1974, line: 51, column: 47)
!14605 = !DILocation(line: 53, column: 15, scope: !14603)
!14606 = !DILocation(line: 53, column: 32, scope: !14603)
!14607 = !DILocation(line: 53, column: 38, scope: !14603)
!14608 = !DILocation(line: 53, column: 29, scope: !14603)
!14609 = !DILocation(line: 53, column: 11, scope: !14604)
!14610 = !DILocation(line: 54, column: 4, scope: !14603)
!14611 = !DILocation(line: 55, column: 7, scope: !14612)
!14612 = distinct !DILexicalBlock(scope: !14604, file: !1974, line: 55, column: 7)
!14613 = !DILocation(line: 55, column: 11, scope: !14612)
!14614 = !DILocation(line: 55, column: 7, scope: !14604)
!14615 = !DILocation(line: 56, column: 4, scope: !14612)
!14616 = !DILocation(line: 65, column: 8, scope: !14617)
!14617 = distinct !DILexicalBlock(scope: !14604, file: !1974, line: 65, column: 7)
!14618 = !DILocation(line: 65, column: 7, scope: !14604)
!14619 = !DILocation(line: 66, column: 4, scope: !14617)
!14620 = !DILocation(line: 68, column: 10, scope: !14604)
!14621 = !DILocation(line: 70, column: 13, scope: !14622)
!14622 = distinct !DILexicalBlock(scope: !14604, file: !1974, line: 70, column: 11)
!14623 = !DILocation(line: 70, column: 17, scope: !14622)
!14624 = !DILocation(line: 70, column: 29, scope: !14622)
!14625 = !DILocation(line: 70, column: 11, scope: !14622)
!14626 = !DILocation(line: 70, column: 43, scope: !14622)
!14627 = !DILocation(line: 70, column: 49, scope: !14622)
!14628 = !DILocation(line: 70, column: 40, scope: !14622)
!14629 = !DILocation(line: 70, column: 11, scope: !14604)
!14630 = !DILocation(line: 71, column: 4, scope: !14622)
!14631 = !DILocation(line: 72, column: 3, scope: !14604)
!14632 = !DILocalVariable(name: "__a", scope: !14633, file: !1974, line: 78, type: !1992)
!14633 = distinct !DILexicalBlock(scope: !14634, file: !1974, line: 78, column: 6)
!14634 = distinct !DILexicalBlock(scope: !2027, file: !1974, line: 78, column: 6)
!14635 = !DILocation(line: 78, column: 6, scope: !14633)
!14636 = !DILocation(line: 78, column: 6, scope: !14637)
!14637 = !DILexicalBlockFile(scope: !14633, file: !1974, discriminator: 2)
!14638 = !DILocation(line: 78, column: 6, scope: !14634)
!14639 = !DILocation(line: 78, column: 44, scope: !14634)
!14640 = !DILocalVariable(name: "__a", scope: !14641, file: !1974, line: 79, type: !1992)
!14641 = distinct !DILexicalBlock(scope: !14634, file: !1974, line: 79, column: 6)
!14642 = !DILocation(line: 79, column: 6, scope: !14641)
!14643 = !DILocation(line: 79, column: 6, scope: !14644)
!14644 = !DILexicalBlockFile(scope: !14641, file: !1974, discriminator: 1)
!14645 = !DILocation(line: 79, column: 6, scope: !14634)
!14646 = !DILocation(line: 78, column: 6, scope: !14601)
!14647 = !DILocation(line: 81, column: 11, scope: !14648)
!14648 = distinct !DILexicalBlock(scope: !14649, file: !1974, line: 81, column: 11)
!14649 = distinct !DILexicalBlock(scope: !14634, file: !1974, line: 79, column: 47)
!14650 = !DILocation(line: 81, column: 15, scope: !14648)
!14651 = !DILocation(line: 81, column: 32, scope: !14648)
!14652 = !DILocation(line: 81, column: 38, scope: !14648)
!14653 = !DILocation(line: 81, column: 29, scope: !14648)
!14654 = !DILocation(line: 81, column: 11, scope: !14649)
!14655 = !DILocation(line: 82, column: 4, scope: !14648)
!14656 = !DILocation(line: 83, column: 7, scope: !14657)
!14657 = distinct !DILexicalBlock(scope: !14649, file: !1974, line: 83, column: 7)
!14658 = !DILocation(line: 83, column: 11, scope: !14657)
!14659 = !DILocation(line: 83, column: 7, scope: !14649)
!14660 = !DILocation(line: 84, column: 4, scope: !14657)
!14661 = !DILocation(line: 93, column: 8, scope: !14662)
!14662 = distinct !DILexicalBlock(scope: !14649, file: !1974, line: 93, column: 7)
!14663 = !DILocation(line: 93, column: 7, scope: !14649)
!14664 = !DILocation(line: 94, column: 4, scope: !14662)
!14665 = !DILocation(line: 96, column: 10, scope: !14649)
!14666 = !DILocation(line: 98, column: 13, scope: !14667)
!14667 = distinct !DILexicalBlock(scope: !14649, file: !1974, line: 98, column: 11)
!14668 = !DILocation(line: 98, column: 17, scope: !14667)
!14669 = !DILocation(line: 98, column: 29, scope: !14667)
!14670 = !DILocation(line: 98, column: 11, scope: !14667)
!14671 = !DILocation(line: 98, column: 43, scope: !14667)
!14672 = !DILocation(line: 98, column: 49, scope: !14667)
!14673 = !DILocation(line: 98, column: 40, scope: !14667)
!14674 = !DILocation(line: 98, column: 11, scope: !14649)
!14675 = !DILocation(line: 99, column: 4, scope: !14667)
!14676 = !DILocation(line: 100, column: 3, scope: !14649)
!14677 = !DILocation(line: 106, column: 2, scope: !2027)
!14678 = !DILocation(line: 107, column: 1, scope: !2027)
!14679 = !DILocalVariable(name: "rrsl", arg: 1, scope: !2117, file: !1974, line: 216, type: !2040)
!14680 = !DILocation(line: 216, column: 31, scope: !2117)
!14681 = !DILocalVariable(name: "fn", scope: !2117, file: !1974, line: 217, type: !4)
!14682 = !DILocation(line: 217, column: 14, scope: !2117)
!14683 = !DILocalVariable(name: "rrsp", scope: !2117, file: !1974, line: 218, type: !1994)
!14684 = !DILocation(line: 218, column: 16, scope: !2117)
!14685 = !DILocalVariable(name: "rrsp_new", scope: !2117, file: !1974, line: 218, type: !1994)
!14686 = !DILocation(line: 218, column: 23, scope: !2117)
!14687 = !DILocalVariable(name: "gl_tmp", scope: !2117, file: !1974, line: 219, type: !2040)
!14688 = !DILocation(line: 219, column: 10, scope: !2117)
!14689 = !DILocation(line: 221, column: 33, scope: !2117)
!14690 = !DILocation(line: 221, column: 2, scope: !2117)
!14691 = !DILocation(line: 223, column: 2, scope: !2117)
!14692 = !DILocation(line: 223, column: 8, scope: !2117)
!14693 = !DILocation(line: 223, column: 18, scope: !2117)
!14694 = !DILocation(line: 224, column: 16, scope: !14695)
!14695 = distinct !DILexicalBlock(scope: !2117, file: !1974, line: 224, column: 2)
!14696 = !DILocation(line: 224, column: 22, scope: !14695)
!14697 = !DILocation(line: 224, column: 14, scope: !14695)
!14698 = !DILocation(line: 224, column: 7, scope: !14695)
!14699 = !DILocation(line: 224, column: 28, scope: !14700)
!14700 = !DILexicalBlockFile(scope: !14701, file: !1974, discriminator: 1)
!14701 = distinct !DILexicalBlock(scope: !14695, file: !1974, line: 224, column: 2)
!14702 = !DILocation(line: 224, column: 36, scope: !14700)
!14703 = !DILocation(line: 224, column: 2, scope: !14700)
!14704 = !DILocation(line: 225, column: 18, scope: !14705)
!14705 = distinct !DILexicalBlock(scope: !14701, file: !1974, line: 224, column: 70)
!14706 = !DILocation(line: 225, column: 26, scope: !14705)
!14707 = !DILocation(line: 225, column: 9, scope: !14705)
!14708 = !DILocation(line: 225, column: 8, scope: !14705)
!14709 = !DILocation(line: 226, column: 7, scope: !14710)
!14710 = distinct !DILexicalBlock(scope: !14705, file: !1974, line: 226, column: 7)
!14711 = !DILocation(line: 226, column: 13, scope: !14710)
!14712 = !DILocation(line: 226, column: 17, scope: !14710)
!14713 = !DILocation(line: 226, column: 23, scope: !14710)
!14714 = !DILocation(line: 226, column: 30, scope: !14710)
!14715 = !DILocation(line: 226, column: 7, scope: !14705)
!14716 = !DILocation(line: 227, column: 4, scope: !14710)
!14717 = !DILocation(line: 230, column: 32, scope: !14705)
!14718 = !DILocation(line: 230, column: 14, scope: !14705)
!14719 = !DILocation(line: 230, column: 12, scope: !14705)
!14720 = !DILocation(line: 231, column: 8, scope: !14721)
!14721 = distinct !DILexicalBlock(scope: !14705, file: !1974, line: 231, column: 7)
!14722 = !DILocation(line: 231, column: 7, scope: !14705)
!14723 = !DILocation(line: 232, column: 4, scope: !14724)
!14724 = distinct !DILexicalBlock(scope: !14721, file: !1974, line: 231, column: 18)
!14725 = !DILocation(line: 233, column: 3, scope: !14724)
!14726 = !DILocation(line: 234, column: 15, scope: !14727)
!14727 = distinct !DILexicalBlock(scope: !14721, file: !1974, line: 233, column: 10)
!14728 = !DILocation(line: 234, column: 4, scope: !14727)
!14729 = !DILocation(line: 235, column: 24, scope: !14727)
!14730 = !DILocation(line: 235, column: 4, scope: !14727)
!14731 = !DILocation(line: 235, column: 12, scope: !14727)
!14732 = !DILocation(line: 235, column: 22, scope: !14727)
!14733 = !DILocation(line: 236, column: 13, scope: !14727)
!14734 = !DILocation(line: 238, column: 2, scope: !14705)
!14735 = !DILocation(line: 224, column: 56, scope: !14736)
!14736 = !DILexicalBlockFile(scope: !14701, file: !1974, discriminator: 2)
!14737 = !DILocation(line: 224, column: 64, scope: !14736)
!14738 = !DILocation(line: 224, column: 54, scope: !14736)
!14739 = !DILocation(line: 224, column: 2, scope: !14736)
!14740 = !DILocation(line: 240, column: 34, scope: !2117)
!14741 = !DILocation(line: 240, column: 2, scope: !2117)
!14742 = !DILocation(line: 241, column: 2, scope: !2117)
!14743 = !DILocalVariable(name: "rrs_old", arg: 1, scope: !2130, file: !1974, line: 109, type: !1994)
!14744 = !DILocation(line: 109, column: 40, scope: !2130)
!14745 = !DILocalVariable(name: "rrl", scope: !2130, file: !1974, line: 110, type: !14746)
!14746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14747, size: 64, align: 64)
!14747 = !DIDerivedType(tag: DW_TAG_typedef, name: "RR_List", file: !29, line: 128, baseType: !14748)
!14748 = !DICompositeType(tag: DW_TAG_structure_type, name: "rr_list", file: !29, line: 123, size: 192, align: 64, elements: !14749)
!14749 = !{!14750, !14752, !14753, !14754}
!14750 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !14748, file: !29, line: 124, baseType: !14751, size: 64, align: 64)
!14751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14748, size: 64, align: 64)
!14752 = !DIDerivedType(tag: DW_TAG_member, name: "cnt", scope: !14748, file: !29, line: 125, baseType: !33, size: 32, align: 32, offset: 64)
!14753 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !14748, file: !29, line: 126, baseType: !33, size: 32, align: 32, offset: 96)
!14754 = !DIDerivedType(tag: DW_TAG_member, name: "rrp", scope: !14748, file: !29, line: 127, baseType: !14755, size: 64, align: 64, offset: 128)
!14755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14756, size: 64, align: 64)
!14756 = !DIDerivedType(tag: DW_TAG_typedef, name: "RR", file: !29, line: 120, baseType: !14757)
!14757 = !DICompositeType(tag: DW_TAG_structure_type, name: "rr", file: !29, line: 117, size: 64, align: 32, elements: !14758)
!14758 = !{!14759, !14760}
!14759 = !DIDerivedType(tag: DW_TAG_member, name: "ttl", scope: !14757, file: !29, line: 118, baseType: !72, size: 32, align: 32)
!14760 = !DIDerivedType(tag: DW_TAG_member, name: "rd_len", scope: !14757, file: !29, line: 119, baseType: !48, size: 16, align: 16, offset: 32)
!14761 = !DILocation(line: 110, column: 11, scope: !2130)
!14762 = !DILocalVariable(name: "rrl_tmp", scope: !2130, file: !1974, line: 110, type: !14746)
!14763 = !DILocation(line: 110, column: 24, scope: !2130)
!14764 = !DILocalVariable(name: "ret_val", scope: !2130, file: !1974, line: 111, type: !1994)
!14765 = !DILocation(line: 111, column: 9, scope: !2130)
!14766 = !DILocalVariable(name: "rrs_new", scope: !2130, file: !1974, line: 111, type: !1994)
!14767 = !DILocation(line: 111, column: 26, scope: !2130)
!14768 = !DILocalVariable(name: "rd", scope: !2130, file: !1974, line: 112, type: !20)
!14769 = !DILocation(line: 112, column: 10, scope: !2130)
!14770 = !DILocalVariable(name: "rd_new", scope: !2130, file: !1974, line: 112, type: !20)
!14771 = !DILocation(line: 112, column: 22, scope: !2130)
!14772 = !DILocalVariable(name: "sentinel", scope: !2130, file: !1974, line: 113, type: !14747)
!14773 = !DILocation(line: 113, column: 10, scope: !2130)
!14774 = !DILocalVariable(name: "cur", scope: !2130, file: !1974, line: 113, type: !14746)
!14775 = !DILocation(line: 113, column: 21, scope: !2130)
!14776 = !DILocalVariable(name: "i", scope: !2130, file: !1974, line: 114, type: !33)
!14777 = !DILocation(line: 114, column: 6, scope: !2130)
!14778 = !DILocation(line: 116, column: 2, scope: !2130)
!14779 = !DILocation(line: 118, column: 9, scope: !14780)
!14780 = distinct !DILexicalBlock(scope: !2130, file: !1974, line: 118, column: 6)
!14781 = !DILocation(line: 118, column: 7, scope: !14780)
!14782 = !DILocation(line: 118, column: 6, scope: !2130)
!14783 = !DILocation(line: 119, column: 11, scope: !14784)
!14784 = distinct !DILexicalBlock(scope: !14780, file: !1974, line: 118, column: 26)
!14785 = !DILocation(line: 120, column: 3, scope: !14784)
!14786 = !DILocation(line: 123, column: 2, scope: !2130)
!14787 = !DILocation(line: 124, column: 6, scope: !2130)
!14788 = !DILocation(line: 126, column: 6, scope: !14789)
!14789 = distinct !DILexicalBlock(scope: !2130, file: !1974, line: 126, column: 6)
!14790 = !DILocation(line: 126, column: 15, scope: !14789)
!14791 = !DILocation(line: 126, column: 19, scope: !14789)
!14792 = !DILocation(line: 126, column: 25, scope: !14789)
!14793 = !DILocation(line: 126, column: 32, scope: !14789)
!14794 = !DILocation(line: 126, column: 6, scope: !2130)
!14795 = !DILocation(line: 127, column: 11, scope: !14796)
!14796 = distinct !DILexicalBlock(scope: !14789, file: !1974, line: 126, column: 44)
!14797 = !DILocation(line: 128, column: 3, scope: !14796)
!14798 = !DILocation(line: 131, column: 25, scope: !2130)
!14799 = !DILocation(line: 131, column: 8, scope: !2130)
!14800 = !DILocation(line: 131, column: 6, scope: !2130)
!14801 = !DILocation(line: 132, column: 7, scope: !14802)
!14802 = distinct !DILexicalBlock(scope: !2130, file: !1974, line: 132, column: 6)
!14803 = !DILocation(line: 132, column: 6, scope: !2130)
!14804 = !DILocation(line: 133, column: 11, scope: !14805)
!14805 = distinct !DILexicalBlock(scope: !14802, file: !1974, line: 132, column: 12)
!14806 = !DILocation(line: 134, column: 3, scope: !14805)
!14807 = !DILocation(line: 137, column: 17, scope: !14808)
!14808 = distinct !DILexicalBlock(scope: !2130, file: !1974, line: 137, column: 2)
!14809 = !DILocation(line: 137, column: 15, scope: !14808)
!14810 = !DILocation(line: 137, column: 7, scope: !14808)
!14811 = !DILocation(line: 137, column: 22, scope: !14812)
!14812 = !DILexicalBlockFile(scope: !14813, file: !1974, discriminator: 1)
!14813 = distinct !DILexicalBlock(scope: !14808, file: !1974, line: 137, column: 2)
!14814 = !DILocation(line: 137, column: 31, scope: !14812)
!14815 = !DILocation(line: 137, column: 2, scope: !14812)
!14816 = !DILocation(line: 138, column: 8, scope: !14817)
!14817 = distinct !DILexicalBlock(scope: !14813, file: !1974, line: 137, column: 62)
!14818 = !DILocation(line: 138, column: 6, scope: !14817)
!14819 = !DILocation(line: 140, column: 10, scope: !14820)
!14820 = distinct !DILexicalBlock(scope: !14817, file: !1974, line: 140, column: 3)
!14821 = !DILocation(line: 140, column: 8, scope: !14820)
!14822 = !DILocation(line: 140, column: 15, scope: !14823)
!14823 = !DILexicalBlockFile(scope: !14824, file: !1974, discriminator: 1)
!14824 = distinct !DILexicalBlock(scope: !14820, file: !1974, line: 140, column: 3)
!14825 = !DILocation(line: 140, column: 21, scope: !14823)
!14826 = !DILocation(line: 140, column: 17, scope: !14823)
!14827 = !DILocation(line: 140, column: 3, scope: !14823)
!14828 = !DILocation(line: 141, column: 16, scope: !14829)
!14829 = distinct !DILexicalBlock(scope: !14830, file: !1974, line: 141, column: 8)
!14830 = distinct !DILexicalBlock(scope: !14824, file: !1974, line: 140, column: 43)
!14831 = !DILocation(line: 141, column: 35, scope: !14829)
!14832 = !DILocation(line: 141, column: 21, scope: !14829)
!14833 = !DILocation(line: 141, column: 20, scope: !14829)
!14834 = !DILocation(line: 141, column: 53, scope: !14829)
!14835 = !DILocation(line: 141, column: 39, scope: !14829)
!14836 = !DILocation(line: 141, column: 55, scope: !14829)
!14837 = !DILocation(line: 141, column: 9, scope: !14829)
!14838 = !DILocation(line: 141, column: 8, scope: !14830)
!14839 = !DILocation(line: 142, column: 5, scope: !14829)
!14840 = !DILocation(line: 143, column: 3, scope: !14830)
!14841 = !DILocation(line: 140, column: 39, scope: !14842)
!14842 = !DILexicalBlockFile(scope: !14824, file: !1974, discriminator: 2)
!14843 = !DILocation(line: 140, column: 3, scope: !14842)
!14844 = !DILocation(line: 144, column: 7, scope: !14845)
!14845 = distinct !DILexicalBlock(scope: !14817, file: !1974, line: 144, column: 7)
!14846 = !DILocation(line: 144, column: 14, scope: !14845)
!14847 = !DILocation(line: 144, column: 9, scope: !14845)
!14848 = !DILocation(line: 144, column: 7, scope: !14817)
!14849 = !DILocation(line: 145, column: 4, scope: !14845)
!14850 = !DILocation(line: 148, column: 15, scope: !14817)
!14851 = !DILocation(line: 148, column: 3, scope: !14817)
!14852 = !DILocation(line: 148, column: 8, scope: !14817)
!14853 = !DILocation(line: 148, column: 13, scope: !14817)
!14854 = !DILocation(line: 149, column: 5, scope: !14817)
!14855 = !DILocation(line: 149, column: 10, scope: !14817)
!14856 = !DILocation(line: 149, column: 19, scope: !14817)
!14857 = !DILocation(line: 149, column: 18, scope: !14817)
!14858 = !DILocation(line: 150, column: 3, scope: !14817)
!14859 = !DILocation(line: 150, column: 8, scope: !14817)
!14860 = !DILocation(line: 150, column: 14, scope: !14817)
!14861 = !DILocation(line: 150, column: 18, scope: !14817)
!14862 = !DILocation(line: 151, column: 3, scope: !14817)
!14863 = !DILocation(line: 151, column: 8, scope: !14817)
!14864 = !DILocation(line: 151, column: 14, scope: !14817)
!14865 = !DILocation(line: 151, column: 19, scope: !14817)
!14866 = !DILocation(line: 153, column: 12, scope: !14817)
!14867 = !DILocation(line: 153, column: 10, scope: !14817)
!14868 = !DILocation(line: 154, column: 8, scope: !14869)
!14869 = distinct !DILexicalBlock(scope: !14817, file: !1974, line: 154, column: 7)
!14870 = !DILocation(line: 154, column: 7, scope: !14817)
!14871 = !DILocation(line: 155, column: 17, scope: !14872)
!14872 = distinct !DILexicalBlock(scope: !14869, file: !1974, line: 154, column: 16)
!14873 = !DILocation(line: 155, column: 22, scope: !14872)
!14874 = !DILocation(line: 155, column: 4, scope: !14872)
!14875 = !DILocation(line: 156, column: 4, scope: !14872)
!14876 = !DILocation(line: 156, column: 9, scope: !14872)
!14877 = !DILocation(line: 156, column: 14, scope: !14872)
!14878 = !DILocation(line: 157, column: 4, scope: !14872)
!14879 = !DILocation(line: 160, column: 10, scope: !14817)
!14880 = !DILocation(line: 160, column: 31, scope: !14817)
!14881 = !DILocation(line: 160, column: 19, scope: !14817)
!14882 = !DILocation(line: 160, column: 3, scope: !14817)
!14883 = !DILocation(line: 160, column: 49, scope: !14817)
!14884 = !DILocation(line: 160, column: 35, scope: !14817)
!14885 = !DILocation(line: 160, column: 52, scope: !14817)
!14886 = !DILocation(line: 161, column: 10, scope: !14817)
!14887 = !DILocation(line: 161, column: 33, scope: !14817)
!14888 = !DILocation(line: 161, column: 19, scope: !14817)
!14889 = !DILocation(line: 161, column: 36, scope: !14817)
!14890 = !DILocation(line: 161, column: 17, scope: !14817)
!14891 = !DILocation(line: 161, column: 41, scope: !14817)
!14892 = !DILocation(line: 161, column: 60, scope: !14817)
!14893 = !DILocation(line: 161, column: 46, scope: !14817)
!14894 = !DILocation(line: 161, column: 63, scope: !14817)
!14895 = !DILocation(line: 161, column: 44, scope: !14817)
!14896 = !DILocation(line: 162, column: 50, scope: !14817)
!14897 = !DILocation(line: 162, column: 36, scope: !14817)
!14898 = !DILocation(line: 162, column: 53, scope: !14817)
!14899 = !DILocation(line: 162, column: 34, scope: !14817)
!14900 = !DILocation(line: 161, column: 3, scope: !14817)
!14901 = !DILocation(line: 164, column: 29, scope: !14817)
!14902 = !DILocation(line: 164, column: 38, scope: !14817)
!14903 = !DILocation(line: 164, column: 43, scope: !14817)
!14904 = !DILocation(line: 165, column: 33, scope: !14817)
!14905 = !DILocation(line: 164, column: 20, scope: !14817)
!14906 = !DILocation(line: 164, column: 3, scope: !14817)
!14907 = !DILocation(line: 164, column: 8, scope: !14817)
!14908 = !DILocation(line: 164, column: 14, scope: !14817)
!14909 = !DILocation(line: 164, column: 18, scope: !14817)
!14910 = !DILocation(line: 167, column: 7, scope: !14911)
!14911 = distinct !DILexicalBlock(scope: !14817, file: !1974, line: 167, column: 7)
!14912 = !DILocation(line: 167, column: 7, scope: !14817)
!14913 = !DILocation(line: 168, column: 10, scope: !14911)
!14914 = !DILocation(line: 168, column: 4, scope: !14911)
!14915 = !DILocation(line: 169, column: 10, scope: !14817)
!14916 = !DILocation(line: 171, column: 8, scope: !14917)
!14917 = distinct !DILexicalBlock(scope: !14817, file: !1974, line: 171, column: 7)
!14918 = !DILocation(line: 171, column: 13, scope: !14917)
!14919 = !DILocation(line: 171, column: 19, scope: !14917)
!14920 = !DILocation(line: 171, column: 7, scope: !14817)
!14921 = !DILocation(line: 172, column: 17, scope: !14922)
!14922 = distinct !DILexicalBlock(scope: !14917, file: !1974, line: 171, column: 24)
!14923 = !DILocation(line: 172, column: 22, scope: !14922)
!14924 = !DILocation(line: 172, column: 4, scope: !14922)
!14925 = !DILocation(line: 173, column: 4, scope: !14922)
!14926 = !DILocation(line: 173, column: 9, scope: !14922)
!14927 = !DILocation(line: 173, column: 14, scope: !14922)
!14928 = !DILocation(line: 174, column: 4, scope: !14922)
!14929 = !DILocation(line: 177, column: 3, scope: !14817)
!14930 = !DILocation(line: 177, column: 10, scope: !14931)
!14931 = !DILexicalBlockFile(scope: !14817, file: !1974, discriminator: 1)
!14932 = !DILocation(line: 177, column: 14, scope: !14931)
!14933 = !DILocation(line: 177, column: 17, scope: !14934)
!14934 = !DILexicalBlockFile(scope: !14817, file: !1974, discriminator: 2)
!14935 = !DILocation(line: 177, column: 22, scope: !14934)
!14936 = !DILocation(line: 177, column: 14, scope: !14934)
!14937 = !DILocation(line: 177, column: 3, scope: !14938)
!14938 = !DILexicalBlockFile(scope: !14817, file: !1974, discriminator: 3)
!14939 = !DILocation(line: 178, column: 10, scope: !14817)
!14940 = !DILocation(line: 178, column: 15, scope: !14817)
!14941 = !DILocation(line: 178, column: 8, scope: !14817)
!14942 = !DILocation(line: 177, column: 3, scope: !14943)
!14943 = !DILexicalBlockFile(scope: !14817, file: !1974, discriminator: 4)
!14944 = !DILocation(line: 179, column: 2, scope: !14817)
!14945 = !DILocation(line: 137, column: 47, scope: !14946)
!14946 = !DILexicalBlockFile(scope: !14813, file: !1974, discriminator: 2)
!14947 = !DILocation(line: 137, column: 56, scope: !14946)
!14948 = !DILocation(line: 137, column: 45, scope: !14946)
!14949 = !DILocation(line: 137, column: 2, scope: !14946)
!14950 = !DILocation(line: 181, column: 14, scope: !2130)
!14951 = !DILocation(line: 181, column: 2, scope: !2130)
!14952 = !DILocation(line: 181, column: 7, scope: !2130)
!14953 = !DILocation(line: 181, column: 12, scope: !2130)
!14954 = !DILocation(line: 184, column: 4, scope: !2130)
!14955 = !DILocation(line: 185, column: 22, scope: !14956)
!14956 = distinct !DILexicalBlock(scope: !2130, file: !1974, line: 185, column: 2)
!14957 = !DILocation(line: 185, column: 11, scope: !14956)
!14958 = !DILocation(line: 185, column: 7, scope: !14956)
!14959 = !DILocation(line: 185, column: 28, scope: !14960)
!14960 = !DILexicalBlockFile(scope: !14961, file: !1974, discriminator: 1)
!14961 = distinct !DILexicalBlock(scope: !14956, file: !1974, line: 185, column: 2)
!14962 = !DILocation(line: 185, column: 2, scope: !14960)
!14963 = !DILocation(line: 186, column: 4, scope: !14961)
!14964 = !DILocation(line: 186, column: 3, scope: !14961)
!14965 = !DILocation(line: 185, column: 39, scope: !14966)
!14966 = !DILexicalBlockFile(scope: !14961, file: !1974, discriminator: 2)
!14967 = !DILocation(line: 185, column: 44, scope: !14966)
!14968 = !DILocation(line: 185, column: 37, scope: !14966)
!14969 = !DILocation(line: 185, column: 2, scope: !14966)
!14970 = !DILocation(line: 187, column: 4, scope: !2130)
!14971 = !DILocation(line: 188, column: 22, scope: !14972)
!14972 = distinct !DILexicalBlock(scope: !2130, file: !1974, line: 188, column: 2)
!14973 = !DILocation(line: 188, column: 11, scope: !14972)
!14974 = !DILocation(line: 188, column: 7, scope: !14972)
!14975 = !DILocation(line: 188, column: 28, scope: !14976)
!14976 = !DILexicalBlockFile(scope: !14977, file: !1974, discriminator: 1)
!14977 = distinct !DILexicalBlock(scope: !14972, file: !1974, line: 188, column: 2)
!14978 = !DILocation(line: 188, column: 2, scope: !14976)
!14979 = !DILocation(line: 189, column: 15, scope: !14977)
!14980 = !DILocation(line: 189, column: 3, scope: !14977)
!14981 = !DILocation(line: 189, column: 8, scope: !14977)
!14982 = !DILocation(line: 189, column: 12, scope: !14977)
!14983 = !DILocation(line: 188, column: 39, scope: !14984)
!14984 = !DILexicalBlockFile(scope: !14977, file: !1974, discriminator: 2)
!14985 = !DILocation(line: 188, column: 44, scope: !14984)
!14986 = !DILocation(line: 188, column: 37, scope: !14984)
!14987 = !DILocation(line: 188, column: 2, scope: !14984)
!14988 = !DILocation(line: 192, column: 34, scope: !2130)
!14989 = !DILocation(line: 192, column: 43, scope: !2130)
!14990 = !DILocation(line: 192, column: 47, scope: !2130)
!14991 = !DILocation(line: 192, column: 53, scope: !2130)
!14992 = !DILocation(line: 193, column: 6, scope: !2130)
!14993 = !DILocation(line: 193, column: 15, scope: !2130)
!14994 = !DILocation(line: 193, column: 19, scope: !2130)
!14995 = !DILocation(line: 193, column: 25, scope: !2130)
!14996 = !DILocation(line: 194, column: 6, scope: !2130)
!14997 = !DILocation(line: 194, column: 37, scope: !2130)
!14998 = !DILocation(line: 192, column: 12, scope: !2130)
!14999 = !DILocation(line: 192, column: 10, scope: !2130)
!15000 = !DILocation(line: 195, column: 7, scope: !15001)
!15001 = distinct !DILexicalBlock(scope: !2130, file: !1974, line: 195, column: 6)
!15002 = !DILocation(line: 195, column: 6, scope: !2130)
!15003 = !DILocation(line: 196, column: 11, scope: !15004)
!15004 = distinct !DILexicalBlock(scope: !15001, file: !1974, line: 195, column: 16)
!15005 = !DILocation(line: 197, column: 3, scope: !15004)
!15006 = !DILocation(line: 201, column: 12, scope: !2130)
!15007 = !DILocation(line: 201, column: 10, scope: !2130)
!15008 = !DILocation(line: 202, column: 10, scope: !2130)
!15009 = !DILocation(line: 202, column: 2, scope: !2130)
!15010 = !DILocation(line: 205, column: 6, scope: !15011)
!15011 = distinct !DILexicalBlock(scope: !2130, file: !1974, line: 205, column: 6)
!15012 = !DILocation(line: 205, column: 6, scope: !2130)
!15013 = !DILocation(line: 206, column: 14, scope: !15011)
!15014 = !DILocation(line: 206, column: 3, scope: !15011)
!15015 = !DILocation(line: 207, column: 15, scope: !15016)
!15016 = distinct !DILexicalBlock(scope: !2130, file: !1974, line: 207, column: 6)
!15017 = !DILocation(line: 207, column: 6, scope: !15016)
!15018 = !DILocation(line: 207, column: 6, scope: !2130)
!15019 = !DILocation(line: 208, column: 25, scope: !15016)
!15020 = !DILocation(line: 208, column: 3, scope: !15016)
!15021 = !DILocation(line: 209, column: 6, scope: !15022)
!15022 = distinct !DILexicalBlock(scope: !2130, file: !1974, line: 209, column: 6)
!15023 = !DILocation(line: 209, column: 6, scope: !2130)
!15024 = !DILocation(line: 210, column: 8, scope: !15022)
!15025 = !DILocation(line: 210, column: 3, scope: !15022)
!15026 = !DILocation(line: 212, column: 2, scope: !2130)
!15027 = !DILocation(line: 213, column: 9, scope: !2130)
!15028 = !DILocation(line: 213, column: 2, scope: !2130)
!15029 = !DILocalVariable(name: "from", arg: 1, scope: !2120, file: !1974, line: 244, type: !4)
!15030 = !DILocation(line: 244, column: 34, scope: !2120)
!15031 = !DILocalVariable(name: "to", arg: 2, scope: !2120, file: !1974, line: 244, type: !4)
!15032 = !DILocation(line: 244, column: 52, scope: !2120)
!15033 = !DILocalVariable(name: "plen", arg: 3, scope: !2120, file: !1974, line: 244, type: !33)
!15034 = !DILocation(line: 244, column: 60, scope: !2120)
!15035 = !DILocalVariable(name: "fn", scope: !2120, file: !1974, line: 245, type: !4)
!15036 = !DILocation(line: 245, column: 14, scope: !2120)
!15037 = !DILocalVariable(name: "max", scope: !2120, file: !1974, line: 246, type: !6824)
!15038 = !DILocation(line: 246, column: 12, scope: !2120)
!15039 = !DILocation(line: 248, column: 8, scope: !15040)
!15040 = distinct !DILexicalBlock(scope: !2120, file: !1974, line: 248, column: 6)
!15041 = !DILocation(line: 248, column: 24, scope: !15040)
!15042 = !DILocation(line: 248, column: 6, scope: !2120)
!15043 = !DILocation(line: 250, column: 10, scope: !15044)
!15044 = distinct !DILexicalBlock(scope: !15040, file: !1974, line: 248, column: 32)
!15045 = !DILocation(line: 249, column: 3, scope: !15044)
!15046 = !DILocation(line: 251, column: 3, scope: !15044)
!15047 = !DILocation(line: 253, column: 6, scope: !15048)
!15048 = distinct !DILexicalBlock(scope: !2120, file: !1974, line: 253, column: 6)
!15049 = !DILocation(line: 253, column: 11, scope: !15048)
!15050 = !DILocation(line: 253, column: 6, scope: !2120)
!15051 = !DILocation(line: 254, column: 57, scope: !15052)
!15052 = distinct !DILexicalBlock(scope: !15048, file: !1974, line: 253, column: 16)
!15053 = !DILocation(line: 254, column: 3, scope: !15052)
!15054 = !DILocation(line: 255, column: 3, scope: !15052)
!15055 = !DILocation(line: 258, column: 26, scope: !15056)
!15056 = distinct !DILexicalBlock(scope: !2120, file: !1974, line: 258, column: 6)
!15057 = !DILocation(line: 258, column: 49, scope: !15056)
!15058 = !DILocation(line: 258, column: 33, scope: !15056)
!15059 = !DILocation(line: 258, column: 32, scope: !15056)
!15060 = !DILocation(line: 258, column: 6, scope: !15056)
!15061 = !DILocation(line: 258, column: 67, scope: !15056)
!15062 = !DILocation(line: 258, column: 6, scope: !2120)
!15063 = !DILocation(line: 259, column: 46, scope: !15064)
!15064 = distinct !DILexicalBlock(scope: !15056, file: !1974, line: 258, column: 73)
!15065 = !DILocation(line: 259, column: 3, scope: !15064)
!15066 = !DILocation(line: 260, column: 3, scope: !15064)
!15067 = !DILocation(line: 262, column: 26, scope: !15068)
!15068 = distinct !DILexicalBlock(scope: !2120, file: !1974, line: 262, column: 6)
!15069 = !DILocation(line: 262, column: 45, scope: !15068)
!15070 = !DILocation(line: 262, column: 31, scope: !15068)
!15071 = !DILocation(line: 262, column: 30, scope: !15068)
!15072 = !DILocation(line: 262, column: 6, scope: !15068)
!15073 = !DILocation(line: 262, column: 63, scope: !15068)
!15074 = !DILocation(line: 262, column: 6, scope: !2120)
!15075 = !DILocation(line: 263, column: 44, scope: !15076)
!15076 = distinct !DILexicalBlock(scope: !15068, file: !1974, line: 262, column: 69)
!15077 = !DILocation(line: 263, column: 3, scope: !15076)
!15078 = !DILocation(line: 264, column: 3, scope: !15076)
!15079 = !DILocation(line: 266, column: 37, scope: !2120)
!15080 = !DILocation(line: 266, column: 18, scope: !2120)
!15081 = !DILocation(line: 266, column: 2, scope: !2120)
!15082 = !DILocation(line: 266, column: 35, scope: !2120)
!15083 = !DILocation(line: 268, column: 33, scope: !2120)
!15084 = !DILocation(line: 268, column: 37, scope: !2120)
!15085 = !DILocation(line: 268, column: 43, scope: !2120)
!15086 = !DILocation(line: 268, column: 2, scope: !2120)
!15087 = !DILocation(line: 270, column: 19, scope: !2120)
!15088 = !DILocation(line: 271, column: 2, scope: !2120)
!15089 = !DILocation(line: 272, column: 1, scope: !2120)
!15090 = !DILocalVariable(name: "rrsl", arg: 1, scope: !2123, file: !1974, line: 274, type: !2040)
!15091 = !DILocation(line: 274, column: 30, scope: !2123)
!15092 = !DILocalVariable(name: "qname", arg: 2, scope: !2123, file: !1974, line: 274, type: !20)
!15093 = !DILocation(line: 274, column: 44, scope: !2123)
!15094 = !DILocalVariable(name: "gl_tmp", scope: !2123, file: !1974, line: 275, type: !2040)
!15095 = !DILocation(line: 275, column: 10, scope: !2123)
!15096 = !DILocalVariable(name: "rk", scope: !2123, file: !1974, line: 276, type: !2001)
!15097 = !DILocation(line: 276, column: 8, scope: !2123)
!15098 = !DILocalVariable(name: "idx", scope: !2123, file: !1974, line: 277, type: !33)
!15099 = !DILocation(line: 277, column: 6, scope: !2123)
!15100 = !DILocalVariable(name: "p", scope: !2123, file: !1974, line: 278, type: !20)
!15101 = !DILocation(line: 278, column: 10, scope: !2123)
!15102 = !DILocalVariable(name: "q", scope: !2123, file: !1974, line: 278, type: !20)
!15103 = !DILocation(line: 278, column: 14, scope: !2123)
!15104 = !DILocalVariable(name: "off", scope: !2123, file: !1974, line: 279, type: !33)
!15105 = !DILocation(line: 279, column: 6, scope: !2123)
!15106 = !DILocation(line: 281, column: 2, scope: !2123)
!15107 = !DILocation(line: 283, column: 9, scope: !15108)
!15108 = distinct !DILexicalBlock(scope: !2123, file: !1974, line: 283, column: 6)
!15109 = !DILocation(line: 283, column: 7, scope: !15108)
!15110 = !DILocation(line: 283, column: 6, scope: !2123)
!15111 = !DILocation(line: 284, column: 3, scope: !15112)
!15112 = distinct !DILexicalBlock(scope: !15108, file: !1974, line: 283, column: 26)
!15113 = !DILocation(line: 285, column: 3, scope: !15112)
!15114 = !DILocation(line: 288, column: 27, scope: !2123)
!15115 = !DILocation(line: 288, column: 8, scope: !2123)
!15116 = !DILocation(line: 288, column: 6, scope: !2123)
!15117 = !DILocation(line: 289, column: 6, scope: !15118)
!15118 = distinct !DILexicalBlock(scope: !2123, file: !1974, line: 289, column: 6)
!15119 = !DILocation(line: 289, column: 10, scope: !15118)
!15120 = !DILocation(line: 289, column: 6, scope: !2123)
!15121 = !DILocation(line: 290, column: 3, scope: !15118)
!15122 = !DILocation(line: 292, column: 2, scope: !2123)
!15123 = !DILocation(line: 292, column: 8, scope: !2123)
!15124 = !DILocation(line: 292, column: 18, scope: !2123)
!15125 = !DILocation(line: 293, column: 16, scope: !15126)
!15126 = distinct !DILexicalBlock(scope: !2123, file: !1974, line: 293, column: 2)
!15127 = !DILocation(line: 293, column: 22, scope: !15126)
!15128 = !DILocation(line: 293, column: 14, scope: !15126)
!15129 = !DILocation(line: 293, column: 7, scope: !15126)
!15130 = !DILocation(line: 293, column: 28, scope: !15131)
!15131 = !DILexicalBlockFile(scope: !15132, file: !1974, discriminator: 1)
!15132 = distinct !DILexicalBlock(scope: !15126, file: !1974, line: 293, column: 2)
!15133 = !DILocation(line: 293, column: 36, scope: !15131)
!15134 = !DILocation(line: 293, column: 2, scope: !15131)
!15135 = !DILocation(line: 294, column: 19, scope: !15136)
!15136 = distinct !DILexicalBlock(scope: !15132, file: !1974, line: 293, column: 70)
!15137 = !DILocation(line: 294, column: 27, scope: !15136)
!15138 = !DILocation(line: 294, column: 9, scope: !15136)
!15139 = !DILocation(line: 294, column: 39, scope: !15136)
!15140 = !DILocation(line: 295, column: 10, scope: !15141)
!15141 = distinct !DILexicalBlock(scope: !15136, file: !1974, line: 295, column: 7)
!15142 = !DILocation(line: 295, column: 16, scope: !15141)
!15143 = !DILocation(line: 295, column: 7, scope: !15141)
!15144 = !DILocation(line: 295, column: 23, scope: !15141)
!15145 = !DILocation(line: 295, column: 7, scope: !15136)
!15146 = !DILocation(line: 296, column: 4, scope: !15141)
!15147 = !DILocation(line: 299, column: 10, scope: !15136)
!15148 = !DILocation(line: 299, column: 12, scope: !15136)
!15149 = !DILocation(line: 299, column: 5, scope: !15136)
!15150 = !DILocation(line: 300, column: 20, scope: !15136)
!15151 = !DILocation(line: 300, column: 8, scope: !15136)
!15152 = !DILocation(line: 300, column: 25, scope: !15136)
!15153 = !DILocation(line: 300, column: 5, scope: !15136)
!15154 = !DILocation(line: 301, column: 12, scope: !15155)
!15155 = distinct !DILexicalBlock(scope: !15136, file: !1974, line: 301, column: 3)
!15156 = !DILocation(line: 301, column: 8, scope: !15155)
!15157 = !DILocation(line: 301, column: 17, scope: !15158)
!15158 = !DILexicalBlockFile(scope: !15159, file: !1974, discriminator: 1)
!15159 = distinct !DILexicalBlock(scope: !15155, file: !1974, line: 301, column: 3)
!15160 = !DILocation(line: 301, column: 37, scope: !15158)
!15161 = !DILocation(line: 301, column: 23, scope: !15158)
!15162 = !DILocation(line: 301, column: 42, scope: !15158)
!15163 = !DILocation(line: 301, column: 21, scope: !15158)
!15164 = !DILocation(line: 301, column: 3, scope: !15158)
!15165 = !DILocation(line: 302, column: 37, scope: !15166)
!15166 = distinct !DILexicalBlock(scope: !15159, file: !1974, line: 301, column: 54)
!15167 = !DILocation(line: 302, column: 35, scope: !15166)
!15168 = !DILocation(line: 302, column: 42, scope: !15166)
!15169 = !DILocation(line: 302, column: 48, scope: !15166)
!15170 = !DILocation(line: 302, column: 30, scope: !15166)
!15171 = !DILocation(line: 302, column: 15, scope: !15166)
!15172 = !DILocation(line: 302, column: 19, scope: !15166)
!15173 = !DILocation(line: 302, column: 13, scope: !15166)
!15174 = !DILocation(line: 302, column: 23, scope: !15166)
!15175 = !DILocation(line: 302, column: 4, scope: !15166)
!15176 = !DILocation(line: 302, column: 28, scope: !15166)
!15177 = !DILocation(line: 303, column: 36, scope: !15166)
!15178 = !DILocation(line: 303, column: 34, scope: !15166)
!15179 = !DILocation(line: 303, column: 41, scope: !15166)
!15180 = !DILocation(line: 303, column: 30, scope: !15166)
!15181 = !DILocation(line: 303, column: 15, scope: !15166)
!15182 = !DILocation(line: 303, column: 19, scope: !15166)
!15183 = !DILocation(line: 303, column: 13, scope: !15166)
!15184 = !DILocation(line: 303, column: 23, scope: !15166)
!15185 = !DILocation(line: 303, column: 4, scope: !15166)
!15186 = !DILocation(line: 303, column: 28, scope: !15166)
!15187 = !DILocation(line: 304, column: 3, scope: !15166)
!15188 = !DILocation(line: 301, column: 50, scope: !15189)
!15189 = !DILexicalBlockFile(scope: !15159, file: !1974, discriminator: 2)
!15190 = !DILocation(line: 301, column: 3, scope: !15189)
!15191 = !DILocation(line: 305, column: 2, scope: !15136)
!15192 = !DILocation(line: 293, column: 56, scope: !15193)
!15193 = !DILexicalBlockFile(scope: !15132, file: !1974, discriminator: 2)
!15194 = !DILocation(line: 293, column: 64, scope: !15193)
!15195 = !DILocation(line: 293, column: 54, scope: !15193)
!15196 = !DILocation(line: 293, column: 2, scope: !15193)
!15197 = !DILocation(line: 307, column: 2, scope: !2123)
!15198 = !DILocation(line: 308, column: 2, scope: !2123)
!15199 = !DILocation(line: 309, column: 1, scope: !2123)
!15200 = !DILocalVariable(name: "qname", arg: 1, scope: !2126, file: !1974, line: 317, type: !20)
!15201 = !DILocation(line: 317, column: 32, scope: !2126)
!15202 = !DILocalVariable(name: "to", arg: 2, scope: !2126, file: !1974, line: 317, type: !33)
!15203 = !DILocation(line: 317, column: 43, scope: !2126)
!15204 = !DILocalVariable(name: "qname6", scope: !2126, file: !1974, line: 318, type: !20)
!15205 = !DILocation(line: 318, column: 10, scope: !2126)
!15206 = !DILocalVariable(name: "q6", scope: !2126, file: !1974, line: 318, type: !20)
!15207 = !DILocation(line: 318, column: 19, scope: !2126)
!15208 = !DILocalVariable(name: "a6", scope: !2126, file: !1974, line: 319, type: !1983)
!15209 = !DILocation(line: 319, column: 18, scope: !2126)
!15210 = !DILocalVariable(name: "p", scope: !2126, file: !1974, line: 320, type: !20)
!15211 = !DILocation(line: 320, column: 10, scope: !2126)
!15212 = !DILocalVariable(name: "val", scope: !2126, file: !1974, line: 321, type: !73)
!15213 = !DILocation(line: 321, column: 15, scope: !2126)
!15214 = !DILocalVariable(name: "buf", scope: !2126, file: !1974, line: 322, type: !15215)
!15215 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6, size: 24, align: 8, elements: !6816)
!15216 = !DILocation(line: 322, column: 7, scope: !2126)
!15217 = !DILocalVariable(name: "i", scope: !2126, file: !1974, line: 323, type: !33)
!15218 = !DILocation(line: 323, column: 6, scope: !2126)
!15219 = !DILocation(line: 325, column: 9, scope: !15220)
!15220 = distinct !DILexicalBlock(scope: !2126, file: !1974, line: 325, column: 6)
!15221 = !DILocation(line: 325, column: 7, scope: !15220)
!15222 = !DILocation(line: 325, column: 25, scope: !15220)
!15223 = !DILocation(line: 325, column: 29, scope: !15224)
!15224 = !DILexicalBlockFile(scope: !15220, file: !1974, discriminator: 1)
!15225 = !DILocation(line: 325, column: 28, scope: !15224)
!15226 = !DILocation(line: 325, column: 35, scope: !15224)
!15227 = !DILocation(line: 325, column: 6, scope: !15224)
!15228 = !DILocation(line: 326, column: 3, scope: !15220)
!15229 = !DILocation(line: 328, column: 23, scope: !15230)
!15230 = distinct !DILexicalBlock(scope: !2126, file: !1974, line: 328, column: 6)
!15231 = !DILocation(line: 328, column: 8, scope: !15230)
!15232 = !DILocation(line: 328, column: 37, scope: !15230)
!15233 = !DILocation(line: 328, column: 55, scope: !15234)
!15234 = !DILexicalBlockFile(scope: !15230, file: !1974, discriminator: 1)
!15235 = !DILocation(line: 328, column: 40, scope: !15234)
!15236 = !DILocation(line: 328, column: 6, scope: !15234)
!15237 = !DILocation(line: 329, column: 3, scope: !15230)
!15238 = !DILocation(line: 330, column: 36, scope: !2126)
!15239 = !DILocation(line: 330, column: 21, scope: !2126)
!15240 = !DILocation(line: 330, column: 9, scope: !2126)
!15241 = !DILocation(line: 331, column: 7, scope: !15242)
!15242 = distinct !DILexicalBlock(scope: !2126, file: !1974, line: 331, column: 6)
!15243 = !DILocation(line: 331, column: 6, scope: !2126)
!15244 = !DILocation(line: 332, column: 37, scope: !15242)
!15245 = !DILocation(line: 332, column: 22, scope: !15242)
!15246 = !DILocation(line: 332, column: 10, scope: !15242)
!15247 = !DILocation(line: 332, column: 3, scope: !15242)
!15248 = !DILocation(line: 333, column: 7, scope: !15249)
!15249 = distinct !DILexicalBlock(scope: !2126, file: !1974, line: 333, column: 6)
!15250 = !DILocation(line: 333, column: 6, scope: !2126)
!15251 = !DILocation(line: 334, column: 3, scope: !15249)
!15252 = !DILocation(line: 336, column: 2, scope: !2126)
!15253 = !DILocation(line: 337, column: 8, scope: !2126)
!15254 = !DILocation(line: 338, column: 6, scope: !15255)
!15255 = distinct !DILexicalBlock(scope: !2126, file: !1974, line: 338, column: 6)
!15256 = !DILocation(line: 338, column: 15, scope: !15255)
!15257 = !DILocation(line: 338, column: 13, scope: !15255)
!15258 = !DILocation(line: 338, column: 21, scope: !15255)
!15259 = !DILocation(line: 338, column: 6, scope: !2126)
!15260 = !DILocation(line: 339, column: 3, scope: !15255)
!15261 = !DILocation(line: 340, column: 8, scope: !2126)
!15262 = !DILocation(line: 341, column: 7, scope: !2126)
!15263 = !DILocation(line: 341, column: 5, scope: !2126)
!15264 = !DILocation(line: 342, column: 10, scope: !2126)
!15265 = !DILocation(line: 342, column: 7, scope: !2126)
!15266 = !DILocation(line: 342, column: 4, scope: !2126)
!15267 = !DILocation(line: 343, column: 2, scope: !2126)
!15268 = !DILocation(line: 343, column: 9, scope: !15269)
!15269 = !DILexicalBlockFile(scope: !2126, file: !1974, discriminator: 1)
!15270 = !DILocation(line: 343, column: 12, scope: !15269)
!15271 = !DILocation(line: 343, column: 19, scope: !15269)
!15272 = !DILocation(line: 343, column: 16, scope: !15269)
!15273 = !DILocation(line: 343, column: 2, scope: !15269)
!15274 = !DILocation(line: 344, column: 15, scope: !15275)
!15275 = distinct !DILexicalBlock(scope: !2126, file: !1974, line: 343, column: 26)
!15276 = !DILocation(line: 344, column: 12, scope: !15275)
!15277 = !DILocation(line: 344, column: 3, scope: !15275)
!15278 = !DILocation(line: 344, column: 10, scope: !15275)
!15279 = !DILocation(line: 345, column: 10, scope: !15280)
!15280 = distinct !DILexicalBlock(scope: !15275, file: !1974, line: 345, column: 7)
!15281 = !DILocation(line: 345, column: 7, scope: !15280)
!15282 = !DILocation(line: 345, column: 13, scope: !15280)
!15283 = !DILocation(line: 345, column: 7, scope: !15275)
!15284 = !DILocation(line: 346, column: 4, scope: !15280)
!15285 = !DILocation(line: 347, column: 15, scope: !15275)
!15286 = !DILocation(line: 347, column: 12, scope: !15275)
!15287 = !DILocation(line: 347, column: 3, scope: !15275)
!15288 = !DILocation(line: 347, column: 10, scope: !15275)
!15289 = !DILocation(line: 348, column: 10, scope: !15290)
!15290 = distinct !DILexicalBlock(scope: !15275, file: !1974, line: 348, column: 7)
!15291 = !DILocation(line: 348, column: 7, scope: !15290)
!15292 = !DILocation(line: 348, column: 13, scope: !15290)
!15293 = !DILocation(line: 348, column: 7, scope: !15275)
!15294 = !DILocation(line: 349, column: 4, scope: !15290)
!15295 = !DILocation(line: 350, column: 3, scope: !15275)
!15296 = !DILocation(line: 350, column: 10, scope: !15275)
!15297 = !DILocation(line: 351, column: 10, scope: !15275)
!15298 = !DILocation(line: 351, column: 3, scope: !15275)
!15299 = !DILocation(line: 352, column: 8, scope: !15275)
!15300 = !DILocation(line: 352, column: 12, scope: !15275)
!15301 = !DILocation(line: 352, column: 4, scope: !15275)
!15302 = !DILocation(line: 352, column: 6, scope: !15275)
!15303 = !DILocation(line: 354, column: 4, scope: !15275)
!15304 = !DILocation(line: 343, column: 2, scope: !15305)
!15305 = !DILexicalBlockFile(scope: !2126, file: !1974, discriminator: 2)
!15306 = !DILocation(line: 357, column: 9, scope: !15307)
!15307 = distinct !DILexicalBlock(scope: !2126, file: !1974, line: 357, column: 2)
!15308 = !DILocation(line: 357, column: 7, scope: !15307)
!15309 = !DILocation(line: 357, column: 14, scope: !15310)
!15310 = !DILexicalBlockFile(scope: !15311, file: !1974, discriminator: 1)
!15311 = distinct !DILexicalBlock(scope: !15307, file: !1974, line: 357, column: 2)
!15312 = !DILocation(line: 357, column: 20, scope: !15310)
!15313 = !DILocation(line: 357, column: 16, scope: !15310)
!15314 = !DILocation(line: 357, column: 2, scope: !15310)
!15315 = !DILocation(line: 358, column: 15, scope: !15316)
!15316 = distinct !DILexicalBlock(scope: !15317, file: !1974, line: 358, column: 7)
!15317 = distinct !DILexicalBlock(scope: !15311, file: !1974, line: 357, column: 42)
!15318 = !DILocation(line: 358, column: 20, scope: !15316)
!15319 = !DILocation(line: 358, column: 38, scope: !15320)
!15320 = !DILexicalBlockFile(scope: !15316, file: !1974, discriminator: 1)
!15321 = !DILocation(line: 358, column: 26, scope: !15320)
!15322 = !DILocation(line: 358, column: 20, scope: !15320)
!15323 = !DILocation(line: 358, column: 58, scope: !15324)
!15324 = !DILexicalBlockFile(scope: !15316, file: !1974, discriminator: 2)
!15325 = !DILocation(line: 358, column: 44, scope: !15324)
!15326 = !DILocation(line: 358, column: 20, scope: !15324)
!15327 = !DILocation(line: 358, column: 20, scope: !15328)
!15328 = !DILexicalBlockFile(scope: !15316, file: !1974, discriminator: 3)
!15329 = !DILocation(line: 359, column: 19, scope: !15316)
!15330 = !DILocation(line: 359, column: 5, scope: !15316)
!15331 = !DILocation(line: 359, column: 22, scope: !15316)
!15332 = !DILocation(line: 358, column: 8, scope: !15328)
!15333 = !DILocation(line: 358, column: 7, scope: !15328)
!15334 = !DILocation(line: 360, column: 11, scope: !15316)
!15335 = !DILocation(line: 360, column: 4, scope: !15316)
!15336 = !DILocation(line: 361, column: 2, scope: !15317)
!15337 = !DILocation(line: 357, column: 38, scope: !15338)
!15338 = !DILexicalBlockFile(scope: !15311, file: !1974, discriminator: 2)
!15339 = !DILocation(line: 357, column: 2, scope: !15338)
!15340 = !DILocation(line: 362, column: 2, scope: !2126)
!15341 = !DILocation(line: 363, column: 1, scope: !2126)
!15342 = !DILocalVariable(name: "qname", arg: 1, scope: !2129, file: !1974, line: 365, type: !20)
!15343 = !DILocation(line: 365, column: 33, scope: !2129)
!15344 = !DILocalVariable(name: "p", scope: !2129, file: !1974, line: 366, type: !20)
!15345 = !DILocation(line: 366, column: 10, scope: !2129)
!15346 = !DILocalVariable(name: "q", scope: !2129, file: !1974, line: 366, type: !20)
!15347 = !DILocation(line: 366, column: 14, scope: !2129)
!15348 = !DILocalVariable(name: "off", scope: !2129, file: !1974, line: 367, type: !33)
!15349 = !DILocation(line: 367, column: 6, scope: !2129)
!15350 = !DILocalVariable(name: "idx", scope: !2129, file: !1974, line: 367, type: !33)
!15351 = !DILocation(line: 367, column: 11, scope: !2129)
!15352 = !DILocation(line: 369, column: 27, scope: !2129)
!15353 = !DILocation(line: 369, column: 8, scope: !2129)
!15354 = !DILocation(line: 369, column: 6, scope: !2129)
!15355 = !DILocation(line: 370, column: 6, scope: !15356)
!15356 = distinct !DILexicalBlock(scope: !2129, file: !1974, line: 370, column: 6)
!15357 = !DILocation(line: 370, column: 10, scope: !15356)
!15358 = !DILocation(line: 370, column: 6, scope: !2129)
!15359 = !DILocation(line: 371, column: 3, scope: !15356)
!15360 = !DILocation(line: 374, column: 6, scope: !2129)
!15361 = !DILocation(line: 374, column: 4, scope: !2129)
!15362 = !DILocation(line: 375, column: 21, scope: !2129)
!15363 = !DILocation(line: 375, column: 7, scope: !2129)
!15364 = !DILocation(line: 375, column: 26, scope: !2129)
!15365 = !DILocation(line: 375, column: 4, scope: !2129)
!15366 = !DILocation(line: 376, column: 11, scope: !15367)
!15367 = distinct !DILexicalBlock(scope: !2129, file: !1974, line: 376, column: 2)
!15368 = !DILocation(line: 376, column: 7, scope: !15367)
!15369 = !DILocation(line: 376, column: 16, scope: !15370)
!15370 = !DILexicalBlockFile(scope: !15371, file: !1974, discriminator: 1)
!15371 = distinct !DILexicalBlock(scope: !15367, file: !1974, line: 376, column: 2)
!15372 = !DILocation(line: 376, column: 36, scope: !15370)
!15373 = !DILocation(line: 376, column: 22, scope: !15370)
!15374 = !DILocation(line: 376, column: 41, scope: !15370)
!15375 = !DILocation(line: 376, column: 20, scope: !15370)
!15376 = !DILocation(line: 376, column: 2, scope: !15370)
!15377 = !DILocation(line: 377, column: 36, scope: !15378)
!15378 = distinct !DILexicalBlock(scope: !15371, file: !1974, line: 376, column: 53)
!15379 = !DILocation(line: 377, column: 34, scope: !15378)
!15380 = !DILocation(line: 377, column: 41, scope: !15378)
!15381 = !DILocation(line: 377, column: 47, scope: !15378)
!15382 = !DILocation(line: 377, column: 29, scope: !15378)
!15383 = !DILocation(line: 377, column: 14, scope: !15378)
!15384 = !DILocation(line: 377, column: 18, scope: !15378)
!15385 = !DILocation(line: 377, column: 12, scope: !15378)
!15386 = !DILocation(line: 377, column: 22, scope: !15378)
!15387 = !DILocation(line: 377, column: 3, scope: !15378)
!15388 = !DILocation(line: 377, column: 27, scope: !15378)
!15389 = !DILocation(line: 378, column: 35, scope: !15378)
!15390 = !DILocation(line: 378, column: 33, scope: !15378)
!15391 = !DILocation(line: 378, column: 40, scope: !15378)
!15392 = !DILocation(line: 378, column: 29, scope: !15378)
!15393 = !DILocation(line: 378, column: 14, scope: !15378)
!15394 = !DILocation(line: 378, column: 18, scope: !15378)
!15395 = !DILocation(line: 378, column: 12, scope: !15378)
!15396 = !DILocation(line: 378, column: 22, scope: !15378)
!15397 = !DILocation(line: 378, column: 3, scope: !15378)
!15398 = !DILocation(line: 378, column: 27, scope: !15378)
!15399 = !DILocation(line: 379, column: 2, scope: !15378)
!15400 = !DILocation(line: 376, column: 49, scope: !15401)
!15401 = !DILexicalBlockFile(scope: !15371, file: !1974, discriminator: 2)
!15402 = !DILocation(line: 376, column: 2, scope: !15401)
!15403 = !DILocation(line: 380, column: 1, scope: !2129)
!15404 = !DILocalVariable(name: "rrs", arg: 1, scope: !2171, file: !2136, line: 20, type: !2138)
!15405 = !DILocation(line: 20, column: 37, scope: !2171)
!15406 = !DILocalVariable(name: "fn", scope: !2171, file: !2136, line: 21, type: !4)
!15407 = !DILocation(line: 21, column: 21, scope: !2171)
!15408 = !DILocalVariable(name: "owner", scope: !2171, file: !2136, line: 22, type: !123)
!15409 = !DILocation(line: 22, column: 9, scope: !2171)
!15410 = !DILocalVariable(name: "str", scope: !2171, file: !2136, line: 22, type: !123)
!15411 = !DILocation(line: 22, column: 27, scope: !2171)
!15412 = !DILocalVariable(name: "own", scope: !2171, file: !2136, line: 23, type: !20)
!15413 = !DILocation(line: 23, column: 10, scope: !2171)
!15414 = !DILocalVariable(name: "ostop", scope: !2171, file: !2136, line: 23, type: !20)
!15415 = !DILocation(line: 23, column: 16, scope: !2171)
!15416 = !DILocalVariable(name: "op", scope: !2171, file: !2136, line: 23, type: !20)
!15417 = !DILocation(line: 23, column: 24, scope: !2171)
!15418 = !DILocalVariable(name: "owner_len", scope: !2171, file: !2136, line: 24, type: !33)
!15419 = !DILocation(line: 24, column: 6, scope: !2171)
!15420 = !DILocalVariable(name: "i", scope: !2171, file: !2136, line: 24, type: !33)
!15421 = !DILocation(line: 24, column: 17, scope: !2171)
!15422 = !DILocalVariable(name: "val", scope: !2171, file: !2136, line: 24, type: !33)
!15423 = !DILocation(line: 24, column: 20, scope: !2171)
!15424 = !DILocalVariable(name: "rrs_new", scope: !2171, file: !2136, line: 25, type: !2138)
!15425 = !DILocation(line: 25, column: 9, scope: !2171)
!15426 = !DILocalVariable(name: "rrl", scope: !2171, file: !2136, line: 26, type: !15427)
!15427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15428, size: 64, align: 64)
!15428 = !DIDerivedType(tag: DW_TAG_typedef, name: "RR_List", file: !29, line: 128, baseType: !15429)
!15429 = !DICompositeType(tag: DW_TAG_structure_type, name: "rr_list", file: !29, line: 123, size: 192, align: 64, elements: !15430)
!15430 = !{!15431, !15433, !15434, !15435}
!15431 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !15429, file: !29, line: 124, baseType: !15432, size: 64, align: 64)
!15432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15429, size: 64, align: 64)
!15433 = !DIDerivedType(tag: DW_TAG_member, name: "cnt", scope: !15429, file: !29, line: 125, baseType: !33, size: 32, align: 32, offset: 64)
!15434 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !15429, file: !29, line: 126, baseType: !33, size: 32, align: 32, offset: 96)
!15435 = !DIDerivedType(tag: DW_TAG_member, name: "rrp", scope: !15429, file: !29, line: 127, baseType: !15436, size: 64, align: 64, offset: 128)
!15436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15437, size: 64, align: 64)
!15437 = !DIDerivedType(tag: DW_TAG_typedef, name: "RR", file: !29, line: 120, baseType: !15438)
!15438 = !DICompositeType(tag: DW_TAG_structure_type, name: "rr", file: !29, line: 117, size: 64, align: 32, elements: !15439)
!15439 = !{!15440, !15441}
!15440 = !DIDerivedType(tag: DW_TAG_member, name: "ttl", scope: !15438, file: !29, line: 118, baseType: !72, size: 32, align: 32)
!15441 = !DIDerivedType(tag: DW_TAG_member, name: "rd_len", scope: !15438, file: !29, line: 119, baseType: !48, size: 16, align: 16, offset: 32)
!15442 = !DILocation(line: 26, column: 11, scope: !2171)
!15443 = !DILocalVariable(name: "buf", scope: !2171, file: !2136, line: 27, type: !15444)
!15444 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6, size: 32, align: 8, elements: !631)
!15445 = !DILocation(line: 27, column: 7, scope: !2171)
!15446 = !DILocation(line: 29, column: 34, scope: !2171)
!15447 = !DILocation(line: 29, column: 2, scope: !2171)
!15448 = !DILocation(line: 31, column: 6, scope: !15449)
!15449 = distinct !DILexicalBlock(scope: !2171, file: !2136, line: 31, column: 6)
!15450 = !DILocation(line: 31, column: 11, scope: !15449)
!15451 = !DILocation(line: 31, column: 15, scope: !15449)
!15452 = !DILocation(line: 31, column: 21, scope: !15449)
!15453 = !DILocation(line: 31, column: 28, scope: !15449)
!15454 = !DILocation(line: 31, column: 38, scope: !15449)
!15455 = !DILocation(line: 32, column: 6, scope: !15449)
!15456 = !DILocation(line: 32, column: 11, scope: !15449)
!15457 = !DILocation(line: 32, column: 15, scope: !15449)
!15458 = !DILocation(line: 32, column: 21, scope: !15449)
!15459 = !DILocation(line: 32, column: 28, scope: !15449)
!15460 = !DILocation(line: 31, column: 6, scope: !15461)
!15461 = !DILexicalBlockFile(scope: !2171, file: !2136, discriminator: 1)
!15462 = !DILocation(line: 33, column: 3, scope: !15449)
!15463 = !DILocation(line: 36, column: 26, scope: !2171)
!15464 = !DILocation(line: 36, column: 8, scope: !2171)
!15465 = !DILocation(line: 36, column: 6, scope: !2171)
!15466 = !DILocation(line: 37, column: 7, scope: !15467)
!15467 = distinct !DILexicalBlock(scope: !2171, file: !2136, line: 37, column: 6)
!15468 = !DILocation(line: 37, column: 6, scope: !2171)
!15469 = !DILocation(line: 38, column: 3, scope: !15467)
!15470 = !DILocation(line: 40, column: 8, scope: !2171)
!15471 = !DILocation(line: 40, column: 6, scope: !2171)
!15472 = !DILocation(line: 43, column: 36, scope: !2171)
!15473 = !DILocation(line: 43, column: 21, scope: !2171)
!15474 = !DILocation(line: 43, column: 8, scope: !2171)
!15475 = !DILocation(line: 44, column: 7, scope: !15476)
!15476 = distinct !DILexicalBlock(scope: !2171, file: !2136, line: 44, column: 6)
!15477 = !DILocation(line: 44, column: 6, scope: !2171)
!15478 = !DILocation(line: 45, column: 37, scope: !15476)
!15479 = !DILocation(line: 45, column: 21, scope: !15476)
!15480 = !DILocation(line: 45, column: 9, scope: !15476)
!15481 = !DILocation(line: 45, column: 3, scope: !15476)
!15482 = !DILocation(line: 47, column: 7, scope: !15483)
!15483 = distinct !DILexicalBlock(scope: !2171, file: !2136, line: 47, column: 6)
!15484 = !DILocation(line: 47, column: 6, scope: !2171)
!15485 = !DILocation(line: 52, column: 15, scope: !15486)
!15486 = distinct !DILexicalBlock(scope: !15483, file: !2136, line: 47, column: 14)
!15487 = !DILocation(line: 52, column: 20, scope: !15486)
!15488 = !DILocation(line: 52, column: 24, scope: !15486)
!15489 = !DILocation(line: 52, column: 30, scope: !15486)
!15490 = !DILocation(line: 52, column: 13, scope: !15486)
!15491 = !DILocation(line: 53, column: 3, scope: !15486)
!15492 = !DILocation(line: 53, column: 17, scope: !15486)
!15493 = !DILocation(line: 53, column: 22, scope: !15486)
!15494 = !DILocation(line: 54, column: 9, scope: !15495)
!15495 = distinct !DILexicalBlock(scope: !15486, file: !2136, line: 54, column: 7)
!15496 = !DILocation(line: 54, column: 7, scope: !15495)
!15497 = !DILocation(line: 54, column: 7, scope: !15486)
!15498 = !DILocation(line: 55, column: 22, scope: !15499)
!15499 = distinct !DILexicalBlock(scope: !15495, file: !2136, line: 54, column: 16)
!15500 = !DILocation(line: 55, column: 38, scope: !15499)
!15501 = !DILocation(line: 55, column: 4, scope: !15499)
!15502 = !DILocation(line: 56, column: 51, scope: !15499)
!15503 = !DILocation(line: 56, column: 55, scope: !15499)
!15504 = !DILocation(line: 56, column: 4, scope: !15499)
!15505 = !DILocation(line: 57, column: 3, scope: !15499)
!15506 = !DILocation(line: 58, column: 2, scope: !15486)
!15507 = !DILocation(line: 59, column: 8, scope: !15508)
!15508 = distinct !DILexicalBlock(scope: !15483, file: !2136, line: 58, column: 9)
!15509 = !DILocation(line: 59, column: 6, scope: !15508)
!15510 = !DILocation(line: 60, column: 3, scope: !15508)
!15511 = !DILocation(line: 60, column: 10, scope: !15512)
!15512 = !DILexicalBlockFile(scope: !15508, file: !2136, discriminator: 1)
!15513 = !DILocation(line: 60, column: 16, scope: !15512)
!15514 = !DILocation(line: 60, column: 14, scope: !15512)
!15515 = !DILocation(line: 60, column: 3, scope: !15512)
!15516 = !DILocation(line: 61, column: 11, scope: !15517)
!15517 = distinct !DILexicalBlock(scope: !15518, file: !2136, line: 61, column: 4)
!15518 = distinct !DILexicalBlock(scope: !15508, file: !2136, line: 60, column: 23)
!15519 = !DILocation(line: 61, column: 9, scope: !15517)
!15520 = !DILocation(line: 61, column: 16, scope: !15521)
!15521 = !DILexicalBlockFile(scope: !15522, file: !2136, discriminator: 1)
!15522 = distinct !DILexicalBlock(scope: !15517, file: !2136, line: 61, column: 4)
!15523 = !DILocation(line: 61, column: 21, scope: !15521)
!15524 = !DILocation(line: 61, column: 20, scope: !15521)
!15525 = !DILocation(line: 61, column: 18, scope: !15521)
!15526 = !DILocation(line: 61, column: 4, scope: !15521)
!15527 = !DILocation(line: 62, column: 16, scope: !15522)
!15528 = !DILocation(line: 62, column: 22, scope: !15522)
!15529 = !DILocation(line: 62, column: 20, scope: !15522)
!15530 = !DILocation(line: 62, column: 24, scope: !15522)
!15531 = !DILocation(line: 62, column: 14, scope: !15522)
!15532 = !DILocation(line: 62, column: 9, scope: !15522)
!15533 = !DILocation(line: 62, column: 5, scope: !15522)
!15534 = !DILocation(line: 62, column: 12, scope: !15522)
!15535 = !DILocation(line: 61, column: 27, scope: !15536)
!15536 = !DILexicalBlockFile(scope: !15522, file: !2136, discriminator: 2)
!15537 = !DILocation(line: 61, column: 4, scope: !15536)
!15538 = !DILocation(line: 64, column: 8, scope: !15518)
!15539 = !DILocation(line: 64, column: 4, scope: !15518)
!15540 = !DILocation(line: 64, column: 11, scope: !15518)
!15541 = !DILocation(line: 65, column: 11, scope: !15518)
!15542 = !DILocation(line: 65, column: 4, scope: !15518)
!15543 = !DILocation(line: 66, column: 13, scope: !15518)
!15544 = !DILocation(line: 66, column: 39, scope: !15518)
!15545 = !DILocation(line: 66, column: 43, scope: !15518)
!15546 = !DILocation(line: 66, column: 4, scope: !15518)
!15547 = !DILocation(line: 69, column: 12, scope: !15518)
!15548 = !DILocation(line: 69, column: 14, scope: !15518)
!15549 = !DILocation(line: 69, column: 18, scope: !15518)
!15550 = !DILocation(line: 69, column: 5, scope: !15518)
!15551 = !DILocation(line: 69, column: 8, scope: !15518)
!15552 = !DILocation(line: 72, column: 14, scope: !15518)
!15553 = !DILocation(line: 72, column: 6, scope: !15518)
!15554 = !DILocation(line: 72, column: 8, scope: !15518)
!15555 = !DILocation(line: 72, column: 12, scope: !15518)
!15556 = !DILocation(line: 74, column: 14, scope: !15518)
!15557 = !DILocation(line: 74, column: 6, scope: !15518)
!15558 = !DILocation(line: 74, column: 8, scope: !15518)
!15559 = !DILocation(line: 74, column: 12, scope: !15518)
!15560 = !DILocation(line: 76, column: 7, scope: !15518)
!15561 = !DILocation(line: 77, column: 12, scope: !15518)
!15562 = !DILocation(line: 77, column: 11, scope: !15518)
!15563 = !DILocation(line: 77, column: 16, scope: !15518)
!15564 = !DILocation(line: 77, column: 8, scope: !15518)
!15565 = !DILocation(line: 60, column: 3, scope: !15566)
!15566 = !DILexicalBlockFile(scope: !15508, file: !2136, discriminator: 2)
!15567 = !DILocation(line: 80, column: 19, scope: !15508)
!15568 = !DILocation(line: 80, column: 3, scope: !15508)
!15569 = !DILocation(line: 82, column: 6, scope: !15508)
!15570 = !DILocation(line: 83, column: 15, scope: !15508)
!15571 = !DILocation(line: 83, column: 20, scope: !15508)
!15572 = !DILocation(line: 83, column: 18, scope: !15508)
!15573 = !DILocation(line: 83, column: 13, scope: !15508)
!15574 = !DILocation(line: 85, column: 9, scope: !15575)
!15575 = distinct !DILexicalBlock(scope: !15508, file: !2136, line: 85, column: 7)
!15576 = !DILocation(line: 85, column: 7, scope: !15575)
!15577 = !DILocation(line: 85, column: 7, scope: !15508)
!15578 = !DILocation(line: 86, column: 22, scope: !15579)
!15579 = distinct !DILexicalBlock(scope: !15575, file: !2136, line: 85, column: 16)
!15580 = !DILocation(line: 86, column: 38, scope: !15579)
!15581 = !DILocation(line: 86, column: 4, scope: !15579)
!15582 = !DILocation(line: 87, column: 47, scope: !15579)
!15583 = !DILocation(line: 87, column: 51, scope: !15579)
!15584 = !DILocation(line: 87, column: 4, scope: !15579)
!15585 = !DILocation(line: 88, column: 3, scope: !15579)
!15586 = !DILocation(line: 92, column: 26, scope: !2171)
!15587 = !DILocation(line: 92, column: 31, scope: !2171)
!15588 = !DILocation(line: 92, column: 35, scope: !2171)
!15589 = !DILocation(line: 92, column: 41, scope: !2171)
!15590 = !DILocation(line: 93, column: 5, scope: !2171)
!15591 = !DILocation(line: 93, column: 10, scope: !2171)
!15592 = !DILocation(line: 93, column: 14, scope: !2171)
!15593 = !DILocation(line: 93, column: 20, scope: !2171)
!15594 = !DILocation(line: 94, column: 5, scope: !2171)
!15595 = !DILocation(line: 94, column: 16, scope: !2171)
!15596 = !DILocation(line: 94, column: 23, scope: !2171)
!15597 = !DILocation(line: 92, column: 12, scope: !2171)
!15598 = !DILocation(line: 92, column: 10, scope: !2171)
!15599 = !DILocation(line: 95, column: 16, scope: !2171)
!15600 = !DILocation(line: 95, column: 2, scope: !2171)
!15601 = !DILocation(line: 97, column: 39, scope: !2171)
!15602 = !DILocation(line: 97, column: 51, scope: !2171)
!15603 = !DILocation(line: 97, column: 43, scope: !2171)
!15604 = !DILocation(line: 97, column: 2, scope: !2171)
!15605 = !DILocation(line: 98, column: 10, scope: !2171)
!15606 = !DILocation(line: 98, column: 2, scope: !2171)
!15607 = !DILocation(line: 99, column: 1, scope: !2171)
!15608 = !DILocalVariable(name: "rrsl", arg: 1, scope: !2174, file: !2136, line: 101, type: !2177)
!15609 = !DILocation(line: 101, column: 32, scope: !2174)
!15610 = !DILocalVariable(name: "fn", scope: !2174, file: !2136, line: 102, type: !4)
!15611 = !DILocation(line: 102, column: 21, scope: !2174)
!15612 = !DILocalVariable(name: "rrsp", scope: !2174, file: !2136, line: 103, type: !2138)
!15613 = !DILocation(line: 103, column: 16, scope: !2174)
!15614 = !DILocalVariable(name: "rrsp_tmp", scope: !2174, file: !2136, line: 103, type: !2138)
!15615 = !DILocation(line: 103, column: 23, scope: !2174)
!15616 = !DILocalVariable(name: "gl_tmp", scope: !2174, file: !2136, line: 104, type: !2177)
!15617 = !DILocation(line: 104, column: 10, scope: !2174)
!15618 = !DILocation(line: 106, column: 34, scope: !2174)
!15619 = !DILocation(line: 106, column: 2, scope: !2174)
!15620 = !DILocation(line: 108, column: 11, scope: !2174)
!15621 = !DILocation(line: 109, column: 2, scope: !2174)
!15622 = !DILocation(line: 109, column: 8, scope: !2174)
!15623 = !DILocation(line: 109, column: 18, scope: !2174)
!15624 = !DILocation(line: 110, column: 16, scope: !15625)
!15625 = distinct !DILexicalBlock(scope: !2174, file: !2136, line: 110, column: 2)
!15626 = !DILocation(line: 110, column: 22, scope: !15625)
!15627 = !DILocation(line: 110, column: 14, scope: !15625)
!15628 = !DILocation(line: 110, column: 7, scope: !15625)
!15629 = !DILocation(line: 110, column: 28, scope: !15630)
!15630 = !DILexicalBlockFile(scope: !15631, file: !2136, discriminator: 1)
!15631 = distinct !DILexicalBlock(scope: !15625, file: !2136, line: 110, column: 2)
!15632 = !DILocation(line: 110, column: 36, scope: !15630)
!15633 = !DILocation(line: 110, column: 2, scope: !15630)
!15634 = !DILocation(line: 111, column: 20, scope: !15635)
!15635 = distinct !DILexicalBlock(scope: !15631, file: !2136, line: 110, column: 70)
!15636 = !DILocation(line: 111, column: 28, scope: !15635)
!15637 = !DILocation(line: 111, column: 10, scope: !15635)
!15638 = !DILocation(line: 111, column: 8, scope: !15635)
!15639 = !DILocation(line: 112, column: 37, scope: !15635)
!15640 = !DILocation(line: 113, column: 17, scope: !15635)
!15641 = !DILocation(line: 113, column: 23, scope: !15635)
!15642 = !DILocation(line: 113, column: 27, scope: !15635)
!15643 = !DILocation(line: 113, column: 33, scope: !15635)
!15644 = !DILocation(line: 113, column: 4, scope: !15635)
!15645 = !DILocation(line: 112, column: 3, scope: !15635)
!15646 = !DILocation(line: 115, column: 7, scope: !15647)
!15647 = distinct !DILexicalBlock(scope: !15635, file: !2136, line: 115, column: 7)
!15648 = !DILocation(line: 115, column: 13, scope: !15647)
!15649 = !DILocation(line: 115, column: 17, scope: !15647)
!15650 = !DILocation(line: 115, column: 23, scope: !15647)
!15651 = !DILocation(line: 115, column: 30, scope: !15647)
!15652 = !DILocation(line: 115, column: 7, scope: !15635)
!15653 = !DILocation(line: 116, column: 37, scope: !15647)
!15654 = !DILocation(line: 116, column: 15, scope: !15647)
!15655 = !DILocation(line: 116, column: 13, scope: !15647)
!15656 = !DILocation(line: 116, column: 4, scope: !15647)
!15657 = !DILocation(line: 117, column: 7, scope: !15658)
!15658 = distinct !DILexicalBlock(scope: !15635, file: !2136, line: 117, column: 7)
!15659 = !DILocation(line: 117, column: 13, scope: !15658)
!15660 = !DILocation(line: 117, column: 17, scope: !15658)
!15661 = !DILocation(line: 117, column: 23, scope: !15658)
!15662 = !DILocation(line: 117, column: 30, scope: !15658)
!15663 = !DILocation(line: 117, column: 7, scope: !15635)
!15664 = !DILocation(line: 118, column: 37, scope: !15658)
!15665 = !DILocation(line: 118, column: 15, scope: !15658)
!15666 = !DILocation(line: 118, column: 13, scope: !15658)
!15667 = !DILocation(line: 118, column: 4, scope: !15658)
!15668 = !DILocation(line: 119, column: 7, scope: !15669)
!15669 = distinct !DILexicalBlock(scope: !15635, file: !2136, line: 119, column: 7)
!15670 = !DILocation(line: 119, column: 7, scope: !15635)
!15671 = !DILocation(line: 120, column: 16, scope: !15672)
!15672 = distinct !DILexicalBlock(scope: !15669, file: !2136, line: 119, column: 17)
!15673 = !DILocation(line: 120, column: 4, scope: !15672)
!15674 = !DILocation(line: 121, column: 24, scope: !15672)
!15675 = !DILocation(line: 121, column: 4, scope: !15672)
!15676 = !DILocation(line: 121, column: 12, scope: !15672)
!15677 = !DILocation(line: 121, column: 22, scope: !15672)
!15678 = !DILocation(line: 122, column: 13, scope: !15672)
!15679 = !DILocation(line: 123, column: 3, scope: !15672)
!15680 = !DILocation(line: 124, column: 2, scope: !15635)
!15681 = !DILocation(line: 110, column: 56, scope: !15682)
!15682 = !DILexicalBlockFile(scope: !15631, file: !2136, discriminator: 2)
!15683 = !DILocation(line: 110, column: 64, scope: !15682)
!15684 = !DILocation(line: 110, column: 54, scope: !15682)
!15685 = !DILocation(line: 110, column: 2, scope: !15682)
!15686 = !DILocation(line: 126, column: 2, scope: !2174)
!15687 = !DILocalVariable(name: "qname", arg: 1, scope: !2185, file: !2136, line: 129, type: !20)
!15688 = !DILocation(line: 129, column: 27, scope: !2185)
!15689 = !DILocalVariable(name: "fn", scope: !2185, file: !2136, line: 130, type: !4)
!15690 = !DILocation(line: 130, column: 21, scope: !2185)
!15691 = !DILocalVariable(name: "off", scope: !2185, file: !2136, line: 131, type: !6824)
!15692 = !DILocation(line: 131, column: 19, scope: !2185)
!15693 = !DILocalVariable(name: "qname4", scope: !2185, file: !2136, line: 132, type: !123)
!15694 = !DILocation(line: 132, column: 9, scope: !2185)
!15695 = !DILocalVariable(name: "str", scope: !2185, file: !2136, line: 132, type: !123)
!15696 = !DILocation(line: 132, column: 28, scope: !2185)
!15697 = !DILocalVariable(name: "qn6", scope: !2185, file: !2136, line: 133, type: !20)
!15698 = !DILocation(line: 133, column: 10, scope: !2185)
!15699 = !DILocalVariable(name: "qn4", scope: !2185, file: !2136, line: 133, type: !20)
!15700 = !DILocation(line: 133, column: 16, scope: !2185)
!15701 = !DILocalVariable(name: "val", scope: !2185, file: !2136, line: 134, type: !33)
!15702 = !DILocation(line: 134, column: 6, scope: !2185)
!15703 = !DILocalVariable(name: "qname_len", scope: !2185, file: !2136, line: 134, type: !33)
!15704 = !DILocation(line: 134, column: 11, scope: !2185)
!15705 = !DILocation(line: 136, column: 34, scope: !2185)
!15706 = !DILocation(line: 136, column: 2, scope: !2185)
!15707 = !DILocation(line: 139, column: 21, scope: !15708)
!15708 = distinct !DILexicalBlock(scope: !2185, file: !2136, line: 139, column: 6)
!15709 = !DILocation(line: 139, column: 6, scope: !15708)
!15710 = !DILocation(line: 139, column: 28, scope: !15708)
!15711 = !DILocation(line: 139, column: 6, scope: !2185)
!15712 = !DILocation(line: 140, column: 3, scope: !15708)
!15713 = !DILocation(line: 142, column: 8, scope: !2185)
!15714 = !DILocation(line: 142, column: 6, scope: !2185)
!15715 = !DILocation(line: 143, column: 29, scope: !2185)
!15716 = !DILocation(line: 143, column: 14, scope: !2185)
!15717 = !DILocation(line: 143, column: 36, scope: !2185)
!15718 = !DILocation(line: 143, column: 12, scope: !2185)
!15719 = !DILocation(line: 144, column: 8, scope: !2185)
!15720 = !DILocation(line: 144, column: 16, scope: !2185)
!15721 = !DILocation(line: 144, column: 14, scope: !2185)
!15722 = !DILocation(line: 144, column: 26, scope: !2185)
!15723 = !DILocation(line: 144, column: 34, scope: !2185)
!15724 = !DILocation(line: 144, column: 6, scope: !2185)
!15725 = !DILocation(line: 145, column: 6, scope: !15726)
!15726 = distinct !DILexicalBlock(scope: !2185, file: !2136, line: 145, column: 6)
!15727 = !DILocation(line: 145, column: 12, scope: !15726)
!15728 = !DILocation(line: 145, column: 10, scope: !15726)
!15729 = !DILocation(line: 145, column: 6, scope: !2185)
!15730 = !DILocation(line: 146, column: 9, scope: !15726)
!15731 = !DILocation(line: 146, column: 15, scope: !15726)
!15732 = !DILocation(line: 146, column: 7, scope: !15726)
!15733 = !DILocation(line: 146, column: 3, scope: !15726)
!15734 = !DILocation(line: 148, column: 2, scope: !2185)
!15735 = !DILocation(line: 148, column: 9, scope: !15736)
!15736 = !DILexicalBlockFile(scope: !2185, file: !2136, discriminator: 1)
!15737 = !DILocation(line: 148, column: 15, scope: !15736)
!15738 = !DILocation(line: 148, column: 23, scope: !15736)
!15739 = !DILocation(line: 148, column: 21, scope: !15736)
!15740 = !DILocation(line: 148, column: 33, scope: !15736)
!15741 = !DILocation(line: 148, column: 47, scope: !15736)
!15742 = !DILocation(line: 148, column: 13, scope: !15736)
!15743 = !DILocation(line: 148, column: 2, scope: !15736)
!15744 = !DILocation(line: 149, column: 7, scope: !15745)
!15745 = distinct !DILexicalBlock(scope: !2185, file: !2136, line: 148, column: 52)
!15746 = !DILocation(line: 150, column: 21, scope: !15747)
!15747 = distinct !DILexicalBlock(scope: !15745, file: !2136, line: 150, column: 21)
!15748 = !DILocation(line: 150, column: 21, scope: !15745)
!15749 = !DILocation(line: 151, column: 11, scope: !15747)
!15750 = !DILocation(line: 151, column: 10, scope: !15747)
!15751 = !DILocation(line: 151, column: 15, scope: !15747)
!15752 = !DILocation(line: 151, column: 8, scope: !15747)
!15753 = !DILocation(line: 151, column: 4, scope: !15747)
!15754 = !DILocation(line: 152, column: 26, scope: !15755)
!15755 = distinct !DILexicalBlock(scope: !15747, file: !2136, line: 152, column: 26)
!15756 = !DILocation(line: 152, column: 26, scope: !15747)
!15757 = !DILocation(line: 153, column: 32, scope: !15755)
!15758 = !DILocation(line: 153, column: 31, scope: !15755)
!15759 = !DILocation(line: 153, column: 39, scope: !15755)
!15760 = !DILocation(line: 153, column: 36, scope: !15755)
!15761 = !DILocation(line: 153, column: 29, scope: !15755)
!15762 = !DILocation(line: 153, column: 25, scope: !15755)
!15763 = !DILocation(line: 154, column: 6, scope: !15745)
!15764 = !DILocation(line: 156, column: 8, scope: !15765)
!15765 = distinct !DILexicalBlock(scope: !15745, file: !2136, line: 156, column: 7)
!15766 = !DILocation(line: 156, column: 7, scope: !15765)
!15767 = !DILocation(line: 156, column: 12, scope: !15765)
!15768 = !DILocation(line: 156, column: 7, scope: !15745)
!15769 = !DILocation(line: 156, column: 18, scope: !15770)
!15770 = !DILexicalBlockFile(scope: !15765, file: !2136, discriminator: 1)
!15771 = !DILocation(line: 157, column: 6, scope: !15745)
!15772 = !DILocation(line: 159, column: 21, scope: !15773)
!15773 = distinct !DILexicalBlock(scope: !15745, file: !2136, line: 159, column: 21)
!15774 = !DILocation(line: 159, column: 21, scope: !15745)
!15775 = !DILocation(line: 160, column: 18, scope: !15773)
!15776 = !DILocation(line: 160, column: 17, scope: !15773)
!15777 = !DILocation(line: 160, column: 22, scope: !15773)
!15778 = !DILocation(line: 160, column: 14, scope: !15773)
!15779 = !DILocation(line: 160, column: 8, scope: !15773)
!15780 = !DILocation(line: 160, column: 4, scope: !15773)
!15781 = !DILocation(line: 161, column: 26, scope: !15782)
!15782 = distinct !DILexicalBlock(scope: !15773, file: !2136, line: 161, column: 26)
!15783 = !DILocation(line: 161, column: 26, scope: !15773)
!15784 = !DILocation(line: 162, column: 39, scope: !15782)
!15785 = !DILocation(line: 162, column: 38, scope: !15782)
!15786 = !DILocation(line: 162, column: 46, scope: !15782)
!15787 = !DILocation(line: 162, column: 43, scope: !15782)
!15788 = !DILocation(line: 162, column: 35, scope: !15782)
!15789 = !DILocation(line: 162, column: 29, scope: !15782)
!15790 = !DILocation(line: 162, column: 25, scope: !15782)
!15791 = !DILocation(line: 163, column: 6, scope: !15745)
!15792 = !DILocation(line: 165, column: 8, scope: !15793)
!15793 = distinct !DILexicalBlock(scope: !15745, file: !2136, line: 165, column: 7)
!15794 = !DILocation(line: 165, column: 7, scope: !15793)
!15795 = !DILocation(line: 165, column: 12, scope: !15793)
!15796 = !DILocation(line: 165, column: 7, scope: !15745)
!15797 = !DILocation(line: 165, column: 18, scope: !15798)
!15798 = !DILexicalBlockFile(scope: !15793, file: !2136, discriminator: 1)
!15799 = !DILocation(line: 166, column: 6, scope: !15745)
!15800 = !DILocation(line: 168, column: 27, scope: !15745)
!15801 = !DILocation(line: 168, column: 31, scope: !15745)
!15802 = !DILocation(line: 168, column: 45, scope: !15745)
!15803 = !DILocation(line: 168, column: 49, scope: !15745)
!15804 = !DILocation(line: 168, column: 10, scope: !15745)
!15805 = !DILocation(line: 168, column: 4, scope: !15745)
!15806 = !DILocation(line: 168, column: 8, scope: !15745)
!15807 = !DILocation(line: 169, column: 9, scope: !15745)
!15808 = !DILocation(line: 169, column: 16, scope: !15745)
!15809 = !DILocation(line: 169, column: 15, scope: !15745)
!15810 = !DILocation(line: 169, column: 13, scope: !15745)
!15811 = !DILocation(line: 169, column: 20, scope: !15745)
!15812 = !DILocation(line: 169, column: 7, scope: !15745)
!15813 = !DILocation(line: 148, column: 2, scope: !15814)
!15814 = !DILexicalBlockFile(scope: !2185, file: !2136, discriminator: 2)
!15815 = !DILocation(line: 171, column: 18, scope: !2185)
!15816 = !DILocation(line: 171, column: 2, scope: !2185)
!15817 = !DILocation(line: 172, column: 18, scope: !2185)
!15818 = !DILocation(line: 172, column: 33, scope: !2185)
!15819 = !DILocation(line: 172, column: 2, scope: !2185)
!15820 = !DILocation(line: 174, column: 8, scope: !15821)
!15821 = distinct !DILexicalBlock(scope: !2185, file: !2136, line: 174, column: 6)
!15822 = !DILocation(line: 174, column: 6, scope: !15821)
!15823 = !DILocation(line: 174, column: 6, scope: !2185)
!15824 = !DILocation(line: 175, column: 21, scope: !15825)
!15825 = distinct !DILexicalBlock(scope: !15821, file: !2136, line: 174, column: 15)
!15826 = !DILocation(line: 175, column: 37, scope: !15825)
!15827 = !DILocation(line: 175, column: 3, scope: !15825)
!15828 = !DILocation(line: 176, column: 47, scope: !15825)
!15829 = !DILocation(line: 176, column: 51, scope: !15825)
!15830 = !DILocation(line: 176, column: 3, scope: !15825)
!15831 = !DILocation(line: 177, column: 2, scope: !15825)
!15832 = !DILocation(line: 179, column: 2, scope: !2185)
!15833 = !DILocation(line: 180, column: 1, scope: !2185)
!15834 = !DILocalVariable(name: "qname", arg: 1, scope: !2186, file: !2136, line: 185, type: !20)
!15835 = !DILocation(line: 185, column: 34, scope: !2186)
!15836 = !DILocalVariable(name: "qname6", scope: !2186, file: !2136, line: 186, type: !20)
!15837 = !DILocation(line: 186, column: 10, scope: !2186)
!15838 = !DILocation(line: 189, column: 23, scope: !15839)
!15839 = distinct !DILexicalBlock(scope: !2186, file: !2136, line: 189, column: 6)
!15840 = !DILocation(line: 189, column: 8, scope: !15839)
!15841 = !DILocation(line: 189, column: 37, scope: !15839)
!15842 = !DILocation(line: 189, column: 55, scope: !15843)
!15843 = !DILexicalBlockFile(scope: !15839, file: !2136, discriminator: 1)
!15844 = !DILocation(line: 189, column: 40, scope: !15843)
!15845 = !DILocation(line: 189, column: 6, scope: !15843)
!15846 = !DILocation(line: 190, column: 3, scope: !15839)
!15847 = !DILocation(line: 192, column: 37, scope: !2186)
!15848 = !DILocation(line: 192, column: 22, scope: !2186)
!15849 = !DILocation(line: 192, column: 9, scope: !2186)
!15850 = !DILocation(line: 193, column: 7, scope: !15851)
!15851 = distinct !DILexicalBlock(scope: !2186, file: !2136, line: 193, column: 6)
!15852 = !DILocation(line: 193, column: 6, scope: !2186)
!15853 = !DILocation(line: 194, column: 38, scope: !15851)
!15854 = !DILocation(line: 194, column: 23, scope: !15851)
!15855 = !DILocation(line: 194, column: 10, scope: !15851)
!15856 = !DILocation(line: 194, column: 3, scope: !15851)
!15857 = !DILocation(line: 195, column: 7, scope: !15858)
!15858 = distinct !DILexicalBlock(scope: !2186, file: !2136, line: 195, column: 6)
!15859 = !DILocation(line: 195, column: 6, scope: !2186)
!15860 = !DILocation(line: 196, column: 3, scope: !15858)
!15861 = !DILocation(line: 198, column: 11, scope: !2186)
!15862 = !DILocation(line: 198, column: 18, scope: !2186)
!15863 = !DILocation(line: 198, column: 9, scope: !2186)
!15864 = !DILocation(line: 200, column: 13, scope: !15865)
!15865 = distinct !DILexicalBlock(scope: !2186, file: !2136, line: 200, column: 6)
!15866 = !DILocation(line: 200, column: 6, scope: !15865)
!15867 = !DILocation(line: 200, column: 16, scope: !15865)
!15868 = !DILocation(line: 200, column: 6, scope: !2186)
!15869 = !DILocation(line: 201, column: 3, scope: !15865)
!15870 = !DILocation(line: 202, column: 13, scope: !15871)
!15871 = distinct !DILexicalBlock(scope: !2186, file: !2136, line: 202, column: 6)
!15872 = !DILocation(line: 202, column: 6, scope: !15871)
!15873 = !DILocation(line: 202, column: 16, scope: !15871)
!15874 = !DILocation(line: 202, column: 6, scope: !2186)
!15875 = !DILocation(line: 203, column: 3, scope: !15871)
!15876 = !DILocation(line: 204, column: 13, scope: !15877)
!15877 = distinct !DILexicalBlock(scope: !2186, file: !2136, line: 204, column: 6)
!15878 = !DILocation(line: 204, column: 6, scope: !15877)
!15879 = !DILocation(line: 204, column: 16, scope: !15877)
!15880 = !DILocation(line: 204, column: 6, scope: !2186)
!15881 = !DILocation(line: 205, column: 3, scope: !15877)
!15882 = !DILocation(line: 206, column: 13, scope: !15883)
!15883 = distinct !DILexicalBlock(scope: !2186, file: !2136, line: 206, column: 6)
!15884 = !DILocation(line: 206, column: 6, scope: !15883)
!15885 = !DILocation(line: 206, column: 16, scope: !15883)
!15886 = !DILocation(line: 206, column: 6, scope: !2186)
!15887 = !DILocation(line: 207, column: 3, scope: !15883)
!15888 = !DILocation(line: 208, column: 13, scope: !15889)
!15889 = distinct !DILexicalBlock(scope: !2186, file: !2136, line: 208, column: 6)
!15890 = !DILocation(line: 208, column: 6, scope: !15889)
!15891 = !DILocation(line: 208, column: 16, scope: !15889)
!15892 = !DILocation(line: 208, column: 6, scope: !2186)
!15893 = !DILocation(line: 209, column: 3, scope: !15889)
!15894 = !DILocation(line: 210, column: 13, scope: !15895)
!15895 = distinct !DILexicalBlock(scope: !2186, file: !2136, line: 210, column: 6)
!15896 = !DILocation(line: 210, column: 6, scope: !15895)
!15897 = !DILocation(line: 210, column: 16, scope: !15895)
!15898 = !DILocation(line: 210, column: 6, scope: !2186)
!15899 = !DILocation(line: 211, column: 3, scope: !15895)
!15900 = !DILocation(line: 212, column: 13, scope: !15901)
!15901 = distinct !DILexicalBlock(scope: !2186, file: !2136, line: 212, column: 6)
!15902 = !DILocation(line: 212, column: 6, scope: !15901)
!15903 = !DILocation(line: 212, column: 16, scope: !15901)
!15904 = !DILocation(line: 212, column: 6, scope: !2186)
!15905 = !DILocation(line: 213, column: 3, scope: !15901)
!15906 = !DILocation(line: 214, column: 13, scope: !15907)
!15907 = distinct !DILexicalBlock(scope: !2186, file: !2136, line: 214, column: 6)
!15908 = !DILocation(line: 214, column: 6, scope: !15907)
!15909 = !DILocation(line: 214, column: 16, scope: !15907)
!15910 = !DILocation(line: 214, column: 6, scope: !2186)
!15911 = !DILocation(line: 215, column: 3, scope: !15907)
!15912 = !DILocation(line: 216, column: 2, scope: !2186)
!15913 = !DILocation(line: 217, column: 1, scope: !2186)
!15914 = !DILocalVariable(name: "dst", arg: 1, scope: !2190, file: !2188, line: 42, type: !19)
!15915 = !DILocation(line: 42, column: 8, scope: !2190)
!15916 = !DILocalVariable(name: "src", arg: 2, scope: !2190, file: !2188, line: 43, type: !4)
!15917 = !DILocation(line: 43, column: 14, scope: !2190)
!15918 = !DILocalVariable(name: "siz", arg: 3, scope: !2190, file: !2188, line: 44, type: !35)
!15919 = !DILocation(line: 44, column: 9, scope: !2190)
!15920 = !DILocalVariable(name: "d", scope: !2190, file: !2188, line: 46, type: !19)
!15921 = !DILocation(line: 46, column: 8, scope: !2190)
!15922 = !DILocation(line: 46, column: 12, scope: !2190)
!15923 = !DILocalVariable(name: "s", scope: !2190, file: !2188, line: 47, type: !4)
!15924 = !DILocation(line: 47, column: 14, scope: !2190)
!15925 = !DILocation(line: 47, column: 18, scope: !2190)
!15926 = !DILocalVariable(name: "n", scope: !2190, file: !2188, line: 48, type: !35)
!15927 = !DILocation(line: 48, column: 9, scope: !2190)
!15928 = !DILocation(line: 48, column: 13, scope: !2190)
!15929 = !DILocation(line: 51, column: 6, scope: !15930)
!15930 = distinct !DILexicalBlock(scope: !2190, file: !2188, line: 51, column: 6)
!15931 = !DILocation(line: 51, column: 8, scope: !15930)
!15932 = !DILocation(line: 51, column: 13, scope: !15930)
!15933 = !DILocation(line: 51, column: 16, scope: !15934)
!15934 = !DILexicalBlockFile(scope: !15930, file: !2188, discriminator: 1)
!15935 = !DILocation(line: 51, column: 20, scope: !15934)
!15936 = !DILocation(line: 51, column: 6, scope: !15934)
!15937 = !DILocation(line: 52, column: 3, scope: !15938)
!15938 = distinct !DILexicalBlock(scope: !15930, file: !2188, line: 51, column: 26)
!15939 = !DILocation(line: 53, column: 18, scope: !15940)
!15940 = distinct !DILexicalBlock(scope: !15941, file: !2188, line: 53, column: 8)
!15941 = distinct !DILexicalBlock(scope: !15938, file: !2188, line: 52, column: 6)
!15942 = !DILocation(line: 53, column: 16, scope: !15940)
!15943 = !DILocation(line: 53, column: 11, scope: !15940)
!15944 = !DILocation(line: 53, column: 14, scope: !15940)
!15945 = !DILocation(line: 53, column: 8, scope: !15940)
!15946 = !DILocation(line: 53, column: 22, scope: !15940)
!15947 = !DILocation(line: 53, column: 8, scope: !15941)
!15948 = !DILocation(line: 54, column: 5, scope: !15940)
!15949 = !DILocation(line: 55, column: 3, scope: !15941)
!15950 = !DILocation(line: 55, column: 12, scope: !15951)
!15951 = !DILexicalBlockFile(scope: !15938, file: !2188, discriminator: 1)
!15952 = !DILocation(line: 55, column: 16, scope: !15951)
!15953 = !DILocation(line: 55, column: 3, scope: !15951)
!15954 = !DILocation(line: 56, column: 2, scope: !15938)
!15955 = !DILocation(line: 59, column: 6, scope: !15956)
!15956 = distinct !DILexicalBlock(scope: !2190, file: !2188, line: 59, column: 6)
!15957 = !DILocation(line: 59, column: 8, scope: !15956)
!15958 = !DILocation(line: 59, column: 6, scope: !2190)
!15959 = !DILocation(line: 60, column: 7, scope: !15960)
!15960 = distinct !DILexicalBlock(scope: !15961, file: !2188, line: 60, column: 7)
!15961 = distinct !DILexicalBlock(scope: !15956, file: !2188, line: 59, column: 14)
!15962 = !DILocation(line: 60, column: 11, scope: !15960)
!15963 = !DILocation(line: 60, column: 7, scope: !15961)
!15964 = !DILocation(line: 61, column: 5, scope: !15960)
!15965 = !DILocation(line: 61, column: 7, scope: !15960)
!15966 = !DILocation(line: 61, column: 4, scope: !15960)
!15967 = !DILocation(line: 62, column: 3, scope: !15961)
!15968 = !DILocation(line: 62, column: 12, scope: !15969)
!15969 = !DILexicalBlockFile(scope: !15961, file: !2188, discriminator: 1)
!15970 = !DILocation(line: 62, column: 10, scope: !15969)
!15971 = !DILocation(line: 62, column: 3, scope: !15969)
!15972 = !DILocation(line: 62, column: 3, scope: !15973)
!15973 = !DILexicalBlockFile(scope: !15961, file: !2188, discriminator: 2)
!15974 = !DILocation(line: 64, column: 2, scope: !15961)
!15975 = !DILocation(line: 66, column: 9, scope: !2190)
!15976 = !DILocation(line: 66, column: 13, scope: !2190)
!15977 = !DILocation(line: 66, column: 11, scope: !2190)
!15978 = !DILocation(line: 66, column: 17, scope: !2190)
!15979 = !DILocation(line: 66, column: 2, scope: !2190)
!15980 = !DILocalVariable(name: "dst", arg: 1, scope: !2196, file: !2194, line: 44, type: !19)
!15981 = !DILocation(line: 44, column: 8, scope: !2196)
!15982 = !DILocalVariable(name: "src", arg: 2, scope: !2196, file: !2194, line: 45, type: !4)
!15983 = !DILocation(line: 45, column: 14, scope: !2196)
!15984 = !DILocalVariable(name: "siz", arg: 3, scope: !2196, file: !2194, line: 46, type: !35)
!15985 = !DILocation(line: 46, column: 9, scope: !2196)
!15986 = !DILocalVariable(name: "d", scope: !2196, file: !2194, line: 48, type: !19)
!15987 = !DILocation(line: 48, column: 8, scope: !2196)
!15988 = !DILocation(line: 48, column: 12, scope: !2196)
!15989 = !DILocalVariable(name: "s", scope: !2196, file: !2194, line: 49, type: !4)
!15990 = !DILocation(line: 49, column: 14, scope: !2196)
!15991 = !DILocation(line: 49, column: 18, scope: !2196)
!15992 = !DILocalVariable(name: "n", scope: !2196, file: !2194, line: 50, type: !35)
!15993 = !DILocation(line: 50, column: 9, scope: !2196)
!15994 = !DILocation(line: 50, column: 13, scope: !2196)
!15995 = !DILocalVariable(name: "dlen", scope: !2196, file: !2194, line: 51, type: !35)
!15996 = !DILocation(line: 51, column: 9, scope: !2196)
!15997 = !DILocation(line: 54, column: 2, scope: !2196)
!15998 = !DILocation(line: 54, column: 10, scope: !15999)
!15999 = !DILexicalBlockFile(scope: !2196, file: !2194, discriminator: 1)
!16000 = !DILocation(line: 54, column: 13, scope: !15999)
!16001 = !DILocation(line: 54, column: 18, scope: !15999)
!16002 = !DILocation(line: 54, column: 22, scope: !16003)
!16003 = !DILexicalBlockFile(scope: !2196, file: !2194, discriminator: 2)
!16004 = !DILocation(line: 54, column: 21, scope: !16003)
!16005 = !DILocation(line: 54, column: 24, scope: !16003)
!16006 = !DILocation(line: 54, column: 2, scope: !16007)
!16007 = !DILexicalBlockFile(scope: !2196, file: !2194, discriminator: 3)
!16008 = !DILocation(line: 55, column: 4, scope: !2196)
!16009 = !DILocation(line: 54, column: 2, scope: !16010)
!16010 = !DILexicalBlockFile(scope: !2196, file: !2194, discriminator: 4)
!16011 = !DILocation(line: 56, column: 9, scope: !2196)
!16012 = !DILocation(line: 56, column: 13, scope: !2196)
!16013 = !DILocation(line: 56, column: 11, scope: !2196)
!16014 = !DILocation(line: 56, column: 7, scope: !2196)
!16015 = !DILocation(line: 57, column: 6, scope: !2196)
!16016 = !DILocation(line: 57, column: 12, scope: !2196)
!16017 = !DILocation(line: 57, column: 10, scope: !2196)
!16018 = !DILocation(line: 57, column: 4, scope: !2196)
!16019 = !DILocation(line: 59, column: 6, scope: !16020)
!16020 = distinct !DILexicalBlock(scope: !2196, file: !2194, line: 59, column: 6)
!16021 = !DILocation(line: 59, column: 8, scope: !16020)
!16022 = !DILocation(line: 59, column: 6, scope: !2196)
!16023 = !DILocation(line: 60, column: 10, scope: !16020)
!16024 = !DILocation(line: 60, column: 24, scope: !16020)
!16025 = !DILocation(line: 60, column: 17, scope: !16020)
!16026 = !DILocation(line: 60, column: 15, scope: !16020)
!16027 = !DILocation(line: 60, column: 3, scope: !16020)
!16028 = !DILocation(line: 61, column: 2, scope: !2196)
!16029 = !DILocation(line: 61, column: 10, scope: !15999)
!16030 = !DILocation(line: 61, column: 9, scope: !15999)
!16031 = !DILocation(line: 61, column: 12, scope: !15999)
!16032 = !DILocation(line: 61, column: 2, scope: !15999)
!16033 = !DILocation(line: 62, column: 7, scope: !16034)
!16034 = distinct !DILexicalBlock(scope: !16035, file: !2194, line: 62, column: 7)
!16035 = distinct !DILexicalBlock(scope: !2196, file: !2194, line: 61, column: 21)
!16036 = !DILocation(line: 62, column: 9, scope: !16034)
!16037 = !DILocation(line: 62, column: 7, scope: !16035)
!16038 = !DILocation(line: 63, column: 12, scope: !16039)
!16039 = distinct !DILexicalBlock(scope: !16034, file: !2194, line: 62, column: 15)
!16040 = !DILocation(line: 63, column: 11, scope: !16039)
!16041 = !DILocation(line: 63, column: 6, scope: !16039)
!16042 = !DILocation(line: 63, column: 9, scope: !16039)
!16043 = !DILocation(line: 64, column: 5, scope: !16039)
!16044 = !DILocation(line: 65, column: 3, scope: !16039)
!16045 = !DILocation(line: 66, column: 4, scope: !16035)
!16046 = !DILocation(line: 61, column: 2, scope: !16003)
!16047 = !DILocation(line: 68, column: 3, scope: !2196)
!16048 = !DILocation(line: 68, column: 5, scope: !2196)
!16049 = !DILocation(line: 70, column: 9, scope: !2196)
!16050 = !DILocation(line: 70, column: 17, scope: !2196)
!16051 = !DILocation(line: 70, column: 21, scope: !2196)
!16052 = !DILocation(line: 70, column: 19, scope: !2196)
!16053 = !DILocation(line: 70, column: 14, scope: !2196)
!16054 = !DILocation(line: 70, column: 2, scope: !2196)
!16055 = !DILocation(line: 71, column: 1, scope: !2196)
!16056 = !DILocalVariable(name: "str", arg: 1, scope: !2209, file: !2204, line: 61, type: !19)
!16057 = !DILocation(line: 61, column: 22, scope: !2209)
!16058 = !DILocalVariable(name: "newStr", scope: !2209, file: !2204, line: 62, type: !19)
!16059 = !DILocation(line: 62, column: 9, scope: !2209)
!16060 = !DILocation(line: 62, column: 18, scope: !2209)
!16061 = !DILocation(line: 63, column: 9, scope: !2209)
!16062 = !DILocation(line: 63, column: 2, scope: !2209)
!16063 = !DILocation(line: 64, column: 9, scope: !2209)
!16064 = !DILocation(line: 64, column: 17, scope: !2209)
!16065 = !DILocation(line: 64, column: 29, scope: !2209)
!16066 = !DILocation(line: 64, column: 22, scope: !2209)
!16067 = !DILocation(line: 64, column: 2, scope: !16068)
!16068 = !DILexicalBlockFile(scope: !2209, file: !2204, discriminator: 1)
!16069 = !DILocation(line: 65, column: 9, scope: !2209)
!16070 = !DILocation(line: 65, column: 2, scope: !2209)
!16071 = !DILocation(line: 39, column: 3, scope: !2207)
!16072 = !DILocation(line: 41, column: 6, scope: !2207)
!16073 = !DILocation(line: 41, column: 3, scope: !2207)
!16074 = !DILocation(line: 42, column: 6, scope: !2207)
!16075 = !DILocation(line: 42, column: 3, scope: !2207)
!16076 = !DILocation(line: 20, column: 2, scope: !2207)
!16077 = !DILocation(line: 49, column: 2, scope: !2207)
!16078 = !DILocation(line: 50, column: 1, scope: !2207)
!16079 = !DILocalVariable(name: "status", arg: 1, scope: !2221, file: !2204, line: 601, type: !33)
!16080 = !DILocation(line: 601, column: 20, scope: !2221)
!16081 = !DILocation(line: 604, column: 2, scope: !2221)
!16082 = !DILocation(line: 605, column: 2, scope: !2221)
!16083 = !DILocation(line: 606, column: 2, scope: !2221)
!16084 = !DILocation(line: 608, column: 2, scope: !2221)
!16085 = !DILocation(line: 609, column: 2, scope: !2221)
!16086 = !DILocation(line: 610, column: 15, scope: !16087)
!16087 = distinct !DILexicalBlock(scope: !2221, file: !2204, line: 610, column: 13)
!16088 = !DILocation(line: 610, column: 13, scope: !16087)
!16089 = !DILocation(line: 610, column: 13, scope: !2221)
!16090 = !DILocation(line: 611, column: 33, scope: !16087)
!16091 = !DILocation(line: 611, column: 17, scope: !16087)
!16092 = !DILocation(line: 613, column: 8, scope: !16093)
!16093 = distinct !DILexicalBlock(scope: !2221, file: !2204, line: 613, column: 6)
!16094 = !DILocation(line: 613, column: 6, scope: !16093)
!16095 = !DILocation(line: 613, column: 6, scope: !2221)
!16096 = !DILocation(line: 614, column: 13, scope: !16093)
!16097 = !DILocation(line: 614, column: 3, scope: !16093)
!16098 = !DILocation(line: 616, column: 6, scope: !16099)
!16099 = distinct !DILexicalBlock(scope: !2221, file: !2204, line: 616, column: 6)
!16100 = !DILocation(line: 616, column: 13, scope: !16099)
!16101 = !DILocation(line: 616, column: 6, scope: !2221)
!16102 = !DILocation(line: 617, column: 3, scope: !16103)
!16103 = distinct !DILexicalBlock(scope: !16099, file: !2204, line: 616, column: 30)
!16104 = !DILocation(line: 618, column: 12, scope: !16103)
!16105 = !DILocation(line: 618, column: 3, scope: !16103)
!16106 = !DILocation(line: 620, column: 2, scope: !16103)
!16107 = !DILocation(line: 622, column: 8, scope: !2221)
!16108 = !DILocation(line: 622, column: 2, scope: !2221)
!16109 = !DILocation(line: 623, column: 1, scope: !2221)
!16110 = !DILocalVariable(name: "count", arg: 1, scope: !2208, file: !2204, line: 54, type: !33)
!16111 = !DILocation(line: 54, column: 48, scope: !2208)
!16112 = !DILocation(line: 55, column: 44, scope: !2208)
!16113 = !DILocation(line: 55, column: 3, scope: !2208)
!16114 = !DILocation(line: 56, column: 1, scope: !2208)
!16115 = !DILocalVariable(name: "level", arg: 1, scope: !2212, file: !2204, line: 68, type: !33)
!16116 = !DILocation(line: 68, column: 30, scope: !2212)
!16117 = !DILocation(line: 69, column: 40, scope: !2212)
!16118 = !DILocation(line: 69, column: 2, scope: !2212)
!16119 = !DILocation(line: 70, column: 1, scope: !2212)
!16120 = !DILocalVariable(name: "str", arg: 1, scope: !2213, file: !2204, line: 72, type: !19)
!16121 = !DILocation(line: 72, column: 36, scope: !2213)
!16122 = !DILocation(line: 73, column: 15, scope: !2213)
!16123 = !DILocation(line: 73, column: 2, scope: !2213)
!16124 = !DILocation(line: 74, column: 1, scope: !2213)
!16125 = !DILocalVariable(name: "argc", arg: 1, scope: !2216, file: !2204, line: 76, type: !33)
!16126 = !DILocation(line: 76, column: 15, scope: !2216)
!16127 = !DILocalVariable(name: "argv", arg: 2, scope: !2216, file: !2204, line: 76, type: !2219)
!16128 = !DILocation(line: 76, column: 28, scope: !2216)
!16129 = !DILocalVariable(name: "pwd_p", scope: !2216, file: !2204, line: 77, type: !16130)
!16130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16131, size: 64, align: 64)
!16131 = !DICompositeType(tag: DW_TAG_structure_type, name: "passwd", file: !16132, line: 49, size: 384, align: 64, elements: !16133)
!16132 = !DIFile(filename: "/usr/include/pwd.h", directory: "/home/muhammad/totd/totd")
!16133 = !{!16134, !16135, !16136, !16137, !16138, !16139, !16140}
!16134 = !DIDerivedType(tag: DW_TAG_member, name: "pw_name", scope: !16131, file: !16132, line: 51, baseType: !19, size: 64, align: 64)
!16135 = !DIDerivedType(tag: DW_TAG_member, name: "pw_passwd", scope: !16131, file: !16132, line: 52, baseType: !19, size: 64, align: 64, offset: 64)
!16136 = !DIDerivedType(tag: DW_TAG_member, name: "pw_uid", scope: !16131, file: !16132, line: 53, baseType: !887, size: 32, align: 32, offset: 128)
!16137 = !DIDerivedType(tag: DW_TAG_member, name: "pw_gid", scope: !16131, file: !16132, line: 54, baseType: !890, size: 32, align: 32, offset: 160)
!16138 = !DIDerivedType(tag: DW_TAG_member, name: "pw_gecos", scope: !16131, file: !16132, line: 55, baseType: !19, size: 64, align: 64, offset: 192)
!16139 = !DIDerivedType(tag: DW_TAG_member, name: "pw_dir", scope: !16131, file: !16132, line: 56, baseType: !19, size: 64, align: 64, offset: 256)
!16140 = !DIDerivedType(tag: DW_TAG_member, name: "pw_shell", scope: !16131, file: !16132, line: 57, baseType: !19, size: 64, align: 64, offset: 320)
!16141 = !DILocation(line: 77, column: 17, scope: !2216)
!16142 = !DILocalVariable(name: "i", scope: !2216, file: !2204, line: 78, type: !33)
!16143 = !DILocation(line: 78, column: 6, scope: !2216)
!16144 = !DILocation(line: 81, column: 10, scope: !2216)
!16145 = !DILocation(line: 81, column: 8, scope: !2216)
!16146 = !DILocation(line: 82, column: 10, scope: !2216)
!16147 = !DILocation(line: 82, column: 8, scope: !2216)
!16148 = !DILocation(line: 84, column: 9, scope: !2216)
!16149 = !DILocation(line: 85, column: 10, scope: !2216)
!16150 = !DILocation(line: 86, column: 12, scope: !2216)
!16151 = !DILocation(line: 89, column: 8, scope: !2216)
!16152 = !DILocation(line: 90, column: 8, scope: !2216)
!16153 = !DILocation(line: 91, column: 15, scope: !2216)
!16154 = !DILocation(line: 92, column: 10, scope: !2216)
!16155 = !DILocation(line: 93, column: 10, scope: !2216)
!16156 = !DILocation(line: 94, column: 14, scope: !2216)
!16157 = !DILocation(line: 95, column: 18, scope: !2216)
!16158 = !DILocation(line: 96, column: 8, scope: !2216)
!16159 = !DILocation(line: 97, column: 19, scope: !2216)
!16160 = !DILocation(line: 98, column: 9, scope: !2216)
!16161 = !DILocation(line: 99, column: 14, scope: !2216)
!16162 = !DILocation(line: 100, column: 13, scope: !2216)
!16163 = !DILocation(line: 101, column: 13, scope: !2216)
!16164 = !DILocation(line: 102, column: 12, scope: !2216)
!16165 = !DILocation(line: 103, column: 17, scope: !2216)
!16166 = !DILocation(line: 103, column: 15, scope: !2216)
!16167 = !DILocation(line: 104, column: 16, scope: !2216)
!16168 = !DILocation(line: 107, column: 2, scope: !2216)
!16169 = !DILocation(line: 108, column: 9, scope: !16170)
!16170 = distinct !DILexicalBlock(scope: !2216, file: !2204, line: 108, column: 2)
!16171 = !DILocation(line: 108, column: 7, scope: !16170)
!16172 = !DILocation(line: 108, column: 14, scope: !16173)
!16173 = !DILexicalBlockFile(scope: !16174, file: !2204, discriminator: 1)
!16174 = distinct !DILexicalBlock(scope: !16170, file: !2204, line: 108, column: 2)
!16175 = !DILocation(line: 108, column: 16, scope: !16173)
!16176 = !DILocation(line: 108, column: 2, scope: !16173)
!16177 = !DILocation(line: 109, column: 3, scope: !16178)
!16178 = distinct !DILexicalBlock(scope: !16174, file: !2204, line: 108, column: 27)
!16179 = !DILocation(line: 110, column: 12, scope: !16178)
!16180 = !DILocation(line: 110, column: 3, scope: !16178)
!16181 = !DILocation(line: 110, column: 18, scope: !16178)
!16182 = !DILocation(line: 111, column: 2, scope: !16178)
!16183 = !DILocation(line: 108, column: 23, scope: !16184)
!16184 = !DILexicalBlockFile(scope: !16174, file: !2204, discriminator: 2)
!16185 = !DILocation(line: 108, column: 2, scope: !16184)
!16186 = !DILocation(line: 114, column: 15, scope: !2216)
!16187 = !DILocation(line: 114, column: 13, scope: !2216)
!16188 = !DILocation(line: 115, column: 9, scope: !16189)
!16189 = distinct !DILexicalBlock(scope: !2216, file: !2204, line: 115, column: 6)
!16190 = !DILocation(line: 115, column: 7, scope: !16189)
!16191 = !DILocation(line: 115, column: 6, scope: !2216)
!16192 = !DILocation(line: 116, column: 3, scope: !16189)
!16193 = !DILocation(line: 119, column: 9, scope: !16194)
!16194 = distinct !DILexicalBlock(scope: !2216, file: !2204, line: 119, column: 2)
!16195 = !DILocation(line: 119, column: 7, scope: !16194)
!16196 = !DILocation(line: 119, column: 14, scope: !16197)
!16197 = !DILexicalBlockFile(scope: !16198, file: !2204, discriminator: 1)
!16198 = distinct !DILexicalBlock(scope: !16194, file: !2204, line: 119, column: 2)
!16199 = !DILocation(line: 119, column: 16, scope: !16197)
!16200 = !DILocation(line: 119, column: 2, scope: !16197)
!16201 = !DILocation(line: 120, column: 3, scope: !16202)
!16202 = distinct !DILexicalBlock(scope: !16198, file: !2204, line: 119, column: 27)
!16203 = !DILocation(line: 121, column: 6, scope: !16204)
!16204 = distinct !DILexicalBlock(scope: !16202, file: !2204, line: 121, column: 6)
!16205 = !DILocation(line: 121, column: 11, scope: !16204)
!16206 = !DILocation(line: 121, column: 8, scope: !16204)
!16207 = !DILocation(line: 121, column: 6, scope: !16202)
!16208 = !DILocation(line: 121, column: 17, scope: !16209)
!16209 = !DILexicalBlockFile(scope: !16204, file: !2204, discriminator: 1)
!16210 = !DILocation(line: 122, column: 22, scope: !16211)
!16211 = distinct !DILexicalBlock(scope: !16202, file: !2204, line: 122, column: 7)
!16212 = !DILocation(line: 122, column: 17, scope: !16211)
!16213 = !DILocation(line: 122, column: 8, scope: !16211)
!16214 = !DILocation(line: 122, column: 7, scope: !16202)
!16215 = !DILocation(line: 124, column: 25, scope: !16216)
!16216 = distinct !DILexicalBlock(scope: !16211, file: !2204, line: 122, column: 37)
!16217 = !DILocation(line: 124, column: 20, scope: !16216)
!16218 = !DILocation(line: 124, column: 14, scope: !16216)
!16219 = !DILocation(line: 124, column: 12, scope: !16216)
!16220 = !DILocation(line: 125, column: 50, scope: !16216)
!16221 = !DILocation(line: 125, column: 4, scope: !16216)
!16222 = !DILocation(line: 126, column: 3, scope: !16216)
!16223 = !DILocation(line: 126, column: 28, scope: !16224)
!16224 = !DILexicalBlockFile(scope: !16225, file: !2204, discriminator: 1)
!16225 = distinct !DILexicalBlock(scope: !16211, file: !2204, line: 126, column: 14)
!16226 = !DILocation(line: 126, column: 23, scope: !16224)
!16227 = !DILocation(line: 126, column: 15, scope: !16224)
!16228 = !DILocation(line: 126, column: 14, scope: !16224)
!16229 = !DILocation(line: 127, column: 10, scope: !16225)
!16230 = !DILocation(line: 127, column: 4, scope: !16225)
!16231 = !DILocation(line: 128, column: 26, scope: !16232)
!16232 = distinct !DILexicalBlock(scope: !16225, file: !2204, line: 128, column: 12)
!16233 = !DILocation(line: 128, column: 21, scope: !16232)
!16234 = !DILocation(line: 128, column: 13, scope: !16232)
!16235 = !DILocation(line: 128, column: 12, scope: !16225)
!16236 = !DILocation(line: 129, column: 10, scope: !16232)
!16237 = !DILocation(line: 129, column: 4, scope: !16232)
!16238 = !DILocation(line: 130, column: 26, scope: !16239)
!16239 = distinct !DILexicalBlock(scope: !16232, file: !2204, line: 130, column: 12)
!16240 = !DILocation(line: 130, column: 21, scope: !16239)
!16241 = !DILocation(line: 130, column: 13, scope: !16239)
!16242 = !DILocation(line: 130, column: 37, scope: !16239)
!16243 = !DILocation(line: 130, column: 54, scope: !16244)
!16244 = !DILexicalBlockFile(scope: !16239, file: !2204, discriminator: 1)
!16245 = !DILocation(line: 130, column: 49, scope: !16244)
!16246 = !DILocation(line: 130, column: 41, scope: !16244)
!16247 = !DILocation(line: 130, column: 12, scope: !16244)
!16248 = !DILocation(line: 131, column: 10, scope: !16239)
!16249 = !DILocation(line: 131, column: 21, scope: !16239)
!16250 = !DILocation(line: 131, column: 4, scope: !16239)
!16251 = !DILocation(line: 132, column: 26, scope: !16252)
!16252 = distinct !DILexicalBlock(scope: !16239, file: !2204, line: 132, column: 12)
!16253 = !DILocation(line: 132, column: 21, scope: !16252)
!16254 = !DILocation(line: 132, column: 13, scope: !16252)
!16255 = !DILocation(line: 132, column: 12, scope: !16239)
!16256 = !DILocation(line: 133, column: 10, scope: !16252)
!16257 = !DILocation(line: 133, column: 4, scope: !16252)
!16258 = !DILocation(line: 134, column: 26, scope: !16259)
!16259 = distinct !DILexicalBlock(scope: !16252, file: !2204, line: 134, column: 12)
!16260 = !DILocation(line: 134, column: 21, scope: !16259)
!16261 = !DILocation(line: 134, column: 13, scope: !16259)
!16262 = !DILocation(line: 134, column: 12, scope: !16252)
!16263 = !DILocation(line: 135, column: 10, scope: !16259)
!16264 = !DILocation(line: 135, column: 4, scope: !16259)
!16265 = !DILocation(line: 136, column: 26, scope: !16266)
!16266 = distinct !DILexicalBlock(scope: !16259, file: !2204, line: 136, column: 12)
!16267 = !DILocation(line: 136, column: 21, scope: !16266)
!16268 = !DILocation(line: 136, column: 13, scope: !16266)
!16269 = !DILocation(line: 136, column: 12, scope: !16259)
!16270 = !DILocation(line: 137, column: 31, scope: !16266)
!16271 = !DILocation(line: 137, column: 26, scope: !16266)
!16272 = !DILocation(line: 137, column: 19, scope: !16266)
!16273 = !DILocation(line: 137, column: 17, scope: !16266)
!16274 = !DILocation(line: 137, column: 4, scope: !16266)
!16275 = !DILocation(line: 138, column: 26, scope: !16276)
!16276 = distinct !DILexicalBlock(scope: !16266, file: !2204, line: 138, column: 12)
!16277 = !DILocation(line: 138, column: 21, scope: !16276)
!16278 = !DILocation(line: 138, column: 13, scope: !16276)
!16279 = !DILocation(line: 138, column: 12, scope: !16266)
!16280 = !DILocation(line: 139, column: 39, scope: !16281)
!16281 = distinct !DILexicalBlock(scope: !16282, file: !2204, line: 139, column: 8)
!16282 = distinct !DILexicalBlock(scope: !16276, file: !2204, line: 138, column: 37)
!16283 = !DILocation(line: 139, column: 34, scope: !16281)
!16284 = !DILocation(line: 139, column: 8, scope: !16281)
!16285 = !DILocation(line: 139, column: 8, scope: !16282)
!16286 = !DILocation(line: 140, column: 68, scope: !16287)
!16287 = distinct !DILexicalBlock(scope: !16281, file: !2204, line: 139, column: 46)
!16288 = !DILocation(line: 140, column: 63, scope: !16287)
!16289 = !DILocation(line: 140, column: 8, scope: !16287)
!16290 = !DILocation(line: 141, column: 8, scope: !16287)
!16291 = !DILocation(line: 142, column: 4, scope: !16287)
!16292 = !DILocation(line: 143, column: 3, scope: !16282)
!16293 = !DILocation(line: 144, column: 26, scope: !16294)
!16294 = distinct !DILexicalBlock(scope: !16276, file: !2204, line: 144, column: 12)
!16295 = !DILocation(line: 144, column: 21, scope: !16294)
!16296 = !DILocation(line: 144, column: 13, scope: !16294)
!16297 = !DILocation(line: 144, column: 12, scope: !16276)
!16298 = !DILocation(line: 145, column: 28, scope: !16299)
!16299 = distinct !DILexicalBlock(scope: !16294, file: !2204, line: 144, column: 45)
!16300 = !DILocation(line: 145, column: 23, scope: !16299)
!16301 = !DILocation(line: 145, column: 18, scope: !16299)
!16302 = !DILocation(line: 145, column: 16, scope: !16299)
!16303 = !DILocation(line: 146, column: 11, scope: !16304)
!16304 = distinct !DILexicalBlock(scope: !16299, file: !2204, line: 146, column: 8)
!16305 = !DILocation(line: 146, column: 9, scope: !16304)
!16306 = !DILocation(line: 146, column: 8, scope: !16299)
!16307 = !DILocation(line: 147, column: 52, scope: !16308)
!16308 = distinct !DILexicalBlock(scope: !16304, file: !2204, line: 146, column: 22)
!16309 = !DILocation(line: 147, column: 47, scope: !16308)
!16310 = !DILocation(line: 147, column: 5, scope: !16308)
!16311 = !DILocation(line: 148, column: 5, scope: !16308)
!16312 = !DILocation(line: 149, column: 4, scope: !16308)
!16313 = !DILocation(line: 150, column: 3, scope: !16299)
!16314 = !DILocation(line: 150, column: 28, scope: !16315)
!16315 = !DILexicalBlockFile(scope: !16316, file: !2204, discriminator: 1)
!16316 = distinct !DILexicalBlock(scope: !16294, file: !2204, line: 150, column: 14)
!16317 = !DILocation(line: 150, column: 23, scope: !16315)
!16318 = !DILocation(line: 150, column: 15, scope: !16315)
!16319 = !DILocation(line: 150, column: 14, scope: !16315)
!16320 = !DILocation(line: 151, column: 25, scope: !16316)
!16321 = !DILocation(line: 151, column: 20, scope: !16316)
!16322 = !DILocation(line: 151, column: 13, scope: !16316)
!16323 = !DILocation(line: 151, column: 11, scope: !16316)
!16324 = !DILocation(line: 151, column: 4, scope: !16316)
!16325 = !DILocation(line: 152, column: 26, scope: !16326)
!16326 = distinct !DILexicalBlock(scope: !16316, file: !2204, line: 152, column: 12)
!16327 = !DILocation(line: 152, column: 21, scope: !16326)
!16328 = !DILocation(line: 152, column: 13, scope: !16326)
!16329 = !DILocation(line: 152, column: 12, scope: !16316)
!16330 = !DILocation(line: 153, column: 26, scope: !16326)
!16331 = !DILocation(line: 153, column: 21, scope: !16326)
!16332 = !DILocation(line: 153, column: 14, scope: !16326)
!16333 = !DILocation(line: 153, column: 12, scope: !16326)
!16334 = !DILocation(line: 153, column: 4, scope: !16326)
!16335 = !DILocation(line: 154, column: 26, scope: !16336)
!16336 = distinct !DILexicalBlock(scope: !16326, file: !2204, line: 154, column: 12)
!16337 = !DILocation(line: 154, column: 21, scope: !16336)
!16338 = !DILocation(line: 154, column: 13, scope: !16336)
!16339 = !DILocation(line: 154, column: 12, scope: !16326)
!16340 = !DILocation(line: 155, column: 28, scope: !16336)
!16341 = !DILocation(line: 155, column: 23, scope: !16336)
!16342 = !DILocation(line: 155, column: 16, scope: !16336)
!16343 = !DILocation(line: 155, column: 14, scope: !16336)
!16344 = !DILocation(line: 155, column: 4, scope: !16336)
!16345 = !DILocation(line: 156, column: 26, scope: !16346)
!16346 = distinct !DILexicalBlock(scope: !16336, file: !2204, line: 156, column: 12)
!16347 = !DILocation(line: 156, column: 21, scope: !16346)
!16348 = !DILocation(line: 156, column: 13, scope: !16346)
!16349 = !DILocation(line: 156, column: 12, scope: !16336)
!16350 = !DILocation(line: 157, column: 4, scope: !16346)
!16351 = !DILocation(line: 158, column: 26, scope: !16352)
!16352 = distinct !DILexicalBlock(scope: !16346, file: !2204, line: 158, column: 12)
!16353 = !DILocation(line: 158, column: 21, scope: !16352)
!16354 = !DILocation(line: 158, column: 13, scope: !16352)
!16355 = !DILocation(line: 158, column: 12, scope: !16346)
!16356 = !DILocation(line: 159, column: 12, scope: !16352)
!16357 = !DILocation(line: 159, column: 4, scope: !16352)
!16358 = !DILocation(line: 160, column: 26, scope: !16359)
!16359 = distinct !DILexicalBlock(scope: !16352, file: !2204, line: 160, column: 12)
!16360 = !DILocation(line: 160, column: 21, scope: !16359)
!16361 = !DILocation(line: 160, column: 13, scope: !16359)
!16362 = !DILocation(line: 160, column: 12, scope: !16352)
!16363 = !DILocation(line: 161, column: 12, scope: !16359)
!16364 = !DILocation(line: 161, column: 4, scope: !16359)
!16365 = !DILocation(line: 163, column: 47, scope: !16366)
!16366 = distinct !DILexicalBlock(scope: !16359, file: !2204, line: 162, column: 8)
!16367 = !DILocation(line: 163, column: 42, scope: !16366)
!16368 = !DILocation(line: 163, column: 4, scope: !16366)
!16369 = !DILocation(line: 164, column: 4, scope: !16366)
!16370 = !DILocation(line: 166, column: 2, scope: !16202)
!16371 = !DILocation(line: 119, column: 23, scope: !16372)
!16372 = !DILexicalBlockFile(scope: !16198, file: !2204, discriminator: 2)
!16373 = !DILocation(line: 119, column: 2, scope: !16372)
!16374 = !DILocation(line: 172, column: 8, scope: !16375)
!16375 = distinct !DILexicalBlock(scope: !2216, file: !2204, line: 172, column: 6)
!16376 = !DILocation(line: 172, column: 14, scope: !16375)
!16377 = !DILocation(line: 172, column: 6, scope: !2216)
!16378 = !DILocation(line: 173, column: 6, scope: !16375)
!16379 = !DILocation(line: 175, column: 6, scope: !16375)
!16380 = !DILocation(line: 177, column: 28, scope: !2216)
!16381 = !DILocation(line: 177, column: 2, scope: !2216)
!16382 = !DILocation(line: 179, column: 8, scope: !16383)
!16383 = distinct !DILexicalBlock(scope: !2216, file: !2204, line: 179, column: 6)
!16384 = !DILocation(line: 179, column: 6, scope: !16383)
!16385 = !DILocation(line: 179, column: 6, scope: !2216)
!16386 = !DILocation(line: 180, column: 9, scope: !16387)
!16387 = distinct !DILexicalBlock(scope: !16388, file: !2204, line: 180, column: 7)
!16388 = distinct !DILexicalBlock(scope: !16383, file: !2204, line: 179, column: 15)
!16389 = !DILocation(line: 180, column: 15, scope: !16387)
!16390 = !DILocation(line: 180, column: 7, scope: !16388)
!16391 = !DILocation(line: 181, column: 4, scope: !16387)
!16392 = !DILocation(line: 182, column: 15, scope: !16393)
!16393 = distinct !DILexicalBlock(scope: !16387, file: !2204, line: 182, column: 12)
!16394 = !DILocation(line: 182, column: 13, scope: !16393)
!16395 = !DILocation(line: 182, column: 12, scope: !16387)
!16396 = !DILocation(line: 183, column: 3, scope: !16393)
!16397 = !DILocation(line: 185, column: 4, scope: !16393)
!16398 = !DILocation(line: 186, column: 2, scope: !16388)
!16399 = !DILocation(line: 187, column: 9, scope: !16400)
!16400 = distinct !DILexicalBlock(scope: !16401, file: !2204, line: 187, column: 7)
!16401 = distinct !DILexicalBlock(scope: !16383, file: !2204, line: 186, column: 9)
!16402 = !DILocation(line: 187, column: 15, scope: !16400)
!16403 = !DILocation(line: 187, column: 7, scope: !16401)
!16404 = !DILocation(line: 188, column: 4, scope: !16400)
!16405 = !DILocation(line: 189, column: 15, scope: !16406)
!16406 = distinct !DILexicalBlock(scope: !16400, file: !2204, line: 189, column: 12)
!16407 = !DILocation(line: 189, column: 13, scope: !16406)
!16408 = !DILocation(line: 189, column: 12, scope: !16400)
!16409 = !DILocation(line: 190, column: 4, scope: !16406)
!16410 = !DILocation(line: 191, column: 14, scope: !16411)
!16411 = distinct !DILexicalBlock(scope: !16406, file: !2204, line: 191, column: 12)
!16412 = !DILocation(line: 191, column: 20, scope: !16411)
!16413 = !DILocation(line: 191, column: 12, scope: !16406)
!16414 = !DILocation(line: 192, column: 11, scope: !16411)
!16415 = !DILocation(line: 195, column: 8, scope: !16416)
!16416 = distinct !DILexicalBlock(scope: !2216, file: !2204, line: 195, column: 6)
!16417 = !DILocation(line: 195, column: 6, scope: !16416)
!16418 = !DILocation(line: 195, column: 6, scope: !2216)
!16419 = !DILocation(line: 196, column: 21, scope: !16420)
!16420 = distinct !DILexicalBlock(scope: !16421, file: !2204, line: 196, column: 21)
!16421 = distinct !DILexicalBlock(scope: !16416, file: !2204, line: 195, column: 14)
!16422 = !DILocation(line: 196, column: 21, scope: !16421)
!16423 = !DILocation(line: 197, column: 19, scope: !16424)
!16424 = distinct !DILexicalBlock(scope: !16420, file: !2204, line: 196, column: 56)
!16425 = !DILocation(line: 197, column: 12, scope: !16424)
!16426 = !DILocation(line: 197, column: 10, scope: !16424)
!16427 = !DILocation(line: 198, column: 10, scope: !16424)
!16428 = !DILocation(line: 199, column: 3, scope: !16424)
!16429 = !DILocation(line: 200, column: 24, scope: !16430)
!16430 = distinct !DILexicalBlock(scope: !16420, file: !2204, line: 199, column: 10)
!16431 = !DILocation(line: 200, column: 12, scope: !16430)
!16432 = !DILocation(line: 200, column: 10, scope: !16430)
!16433 = !DILocation(line: 202, column: 2, scope: !16421)
!16434 = !DILocation(line: 203, column: 23, scope: !16416)
!16435 = !DILocation(line: 203, column: 11, scope: !16416)
!16436 = !DILocation(line: 203, column: 9, scope: !16416)
!16437 = !DILocation(line: 205, column: 6, scope: !16438)
!16438 = distinct !DILexicalBlock(scope: !2216, file: !2204, line: 205, column: 6)
!16439 = !DILocation(line: 205, column: 6, scope: !2216)
!16440 = !DILocation(line: 207, column: 4, scope: !16441)
!16441 = distinct !DILexicalBlock(scope: !16438, file: !2204, line: 205, column: 13)
!16442 = !DILocation(line: 207, column: 11, scope: !16441)
!16443 = !DILocation(line: 207, column: 20, scope: !16441)
!16444 = !DILocation(line: 207, column: 27, scope: !16441)
!16445 = !DILocation(line: 207, column: 35, scope: !16441)
!16446 = !DILocation(line: 207, column: 42, scope: !16441)
!16447 = !DILocation(line: 206, column: 3, scope: !16441)
!16448 = !DILocation(line: 208, column: 9, scope: !16449)
!16449 = distinct !DILexicalBlock(scope: !16441, file: !2204, line: 208, column: 7)
!16450 = !DILocation(line: 208, column: 7, scope: !16449)
!16451 = !DILocation(line: 208, column: 13, scope: !16449)
!16452 = !DILocation(line: 208, column: 18, scope: !16453)
!16453 = !DILexicalBlockFile(scope: !16449, file: !2204, discriminator: 1)
!16454 = !DILocation(line: 208, column: 25, scope: !16453)
!16455 = !DILocation(line: 208, column: 32, scope: !16453)
!16456 = !DILocation(line: 208, column: 22, scope: !16453)
!16457 = !DILocation(line: 208, column: 7, scope: !16453)
!16458 = !DILocation(line: 210, column: 12, scope: !16459)
!16459 = distinct !DILexicalBlock(scope: !16449, file: !2204, line: 208, column: 40)
!16460 = !DILocation(line: 209, column: 4, scope: !16459)
!16461 = !DILocation(line: 211, column: 4, scope: !16459)
!16462 = !DILocation(line: 212, column: 3, scope: !16459)
!16463 = !DILocation(line: 213, column: 12, scope: !16464)
!16464 = distinct !DILexicalBlock(scope: !16449, file: !2204, line: 212, column: 10)
!16465 = !DILocation(line: 213, column: 19, scope: !16464)
!16466 = !DILocation(line: 213, column: 10, scope: !16464)
!16467 = !DILocation(line: 215, column: 2, scope: !16441)
!16468 = !DILocation(line: 216, column: 55, scope: !16469)
!16469 = distinct !DILexicalBlock(scope: !16438, file: !2204, line: 215, column: 9)
!16470 = !DILocation(line: 216, column: 3, scope: !16469)
!16471 = !DILocation(line: 219, column: 8, scope: !16472)
!16472 = distinct !DILexicalBlock(scope: !2216, file: !2204, line: 219, column: 6)
!16473 = !DILocation(line: 219, column: 6, scope: !16472)
!16474 = !DILocation(line: 219, column: 6, scope: !2216)
!16475 = !DILocation(line: 220, column: 7, scope: !16476)
!16476 = distinct !DILexicalBlock(scope: !16477, file: !2204, line: 220, column: 7)
!16477 = distinct !DILexicalBlock(scope: !16472, file: !2204, line: 219, column: 15)
!16478 = !DILocation(line: 220, column: 7, scope: !16477)
!16479 = !DILocation(line: 221, column: 19, scope: !16480)
!16480 = distinct !DILexicalBlock(scope: !16476, file: !2204, line: 220, column: 43)
!16481 = !DILocation(line: 221, column: 12, scope: !16480)
!16482 = !DILocation(line: 221, column: 10, scope: !16480)
!16483 = !DILocation(line: 222, column: 3, scope: !16480)
!16484 = !DILocalVariable(name: "grp_p", scope: !16485, file: !2204, line: 223, type: !16486)
!16485 = distinct !DILexicalBlock(scope: !16476, file: !2204, line: 222, column: 10)
!16486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16487, size: 64, align: 64)
!16487 = !DICompositeType(tag: DW_TAG_structure_type, name: "group", file: !16488, line: 42, size: 256, align: 64, elements: !16489)
!16488 = !DIFile(filename: "/usr/include/grp.h", directory: "/home/muhammad/totd/totd")
!16489 = !{!16490, !16491, !16492, !16493}
!16490 = !DIDerivedType(tag: DW_TAG_member, name: "gr_name", scope: !16487, file: !16488, line: 44, baseType: !19, size: 64, align: 64)
!16491 = !DIDerivedType(tag: DW_TAG_member, name: "gr_passwd", scope: !16487, file: !16488, line: 45, baseType: !19, size: 64, align: 64, offset: 64)
!16492 = !DIDerivedType(tag: DW_TAG_member, name: "gr_gid", scope: !16487, file: !16488, line: 46, baseType: !890, size: 32, align: 32, offset: 128)
!16493 = !DIDerivedType(tag: DW_TAG_member, name: "gr_mem", scope: !16487, file: !16488, line: 47, baseType: !2219, size: 64, align: 64, offset: 192)
!16494 = !DILocation(line: 223, column: 25, scope: !16485)
!16495 = !DILocation(line: 225, column: 23, scope: !16485)
!16496 = !DILocation(line: 225, column: 12, scope: !16485)
!16497 = !DILocation(line: 225, column: 10, scope: !16485)
!16498 = !DILocation(line: 226, column: 9, scope: !16499)
!16499 = distinct !DILexicalBlock(scope: !16485, file: !2204, line: 226, column: 8)
!16500 = !DILocation(line: 226, column: 8, scope: !16485)
!16501 = !DILocation(line: 227, column: 45, scope: !16502)
!16502 = distinct !DILexicalBlock(scope: !16499, file: !2204, line: 226, column: 16)
!16503 = !DILocation(line: 227, column: 5, scope: !16502)
!16504 = !DILocation(line: 228, column: 5, scope: !16502)
!16505 = !DILocation(line: 229, column: 4, scope: !16502)
!16506 = !DILocation(line: 230, column: 12, scope: !16485)
!16507 = !DILocation(line: 230, column: 19, scope: !16485)
!16508 = !DILocation(line: 230, column: 10, scope: !16485)
!16509 = !DILocation(line: 232, column: 2, scope: !16477)
!16510 = !DILocation(line: 233, column: 7, scope: !16511)
!16511 = distinct !DILexicalBlock(scope: !16512, file: !2204, line: 233, column: 7)
!16512 = distinct !DILexicalBlock(scope: !16472, file: !2204, line: 232, column: 9)
!16513 = !DILocation(line: 233, column: 7, scope: !16512)
!16514 = !DILocation(line: 234, column: 12, scope: !16511)
!16515 = !DILocation(line: 234, column: 19, scope: !16511)
!16516 = !DILocation(line: 234, column: 10, scope: !16511)
!16517 = !DILocation(line: 234, column: 4, scope: !16511)
!16518 = !DILocation(line: 236, column: 12, scope: !16511)
!16519 = !DILocation(line: 236, column: 10, scope: !16511)
!16520 = !DILocation(line: 240, column: 2, scope: !2216)
!16521 = !DILocation(line: 241, column: 2, scope: !2216)
!16522 = !DILocation(line: 244, column: 8, scope: !16523)
!16523 = distinct !DILexicalBlock(scope: !2216, file: !2204, line: 244, column: 6)
!16524 = !DILocation(line: 244, column: 6, scope: !16523)
!16525 = !DILocation(line: 244, column: 6, scope: !2216)
!16526 = !DILocation(line: 245, column: 30, scope: !16527)
!16527 = distinct !DILexicalBlock(scope: !16528, file: !2204, line: 245, column: 21)
!16528 = distinct !DILexicalBlock(scope: !16523, file: !2204, line: 244, column: 17)
!16529 = !DILocation(line: 245, column: 21, scope: !16527)
!16530 = !DILocation(line: 245, column: 39, scope: !16527)
!16531 = !DILocation(line: 245, column: 21, scope: !16528)
!16532 = !DILocation(line: 246, column: 68, scope: !16533)
!16533 = distinct !DILexicalBlock(scope: !16527, file: !2204, line: 245, column: 44)
!16534 = !DILocation(line: 246, column: 25, scope: !16533)
!16535 = !DILocation(line: 247, column: 25, scope: !16533)
!16536 = !DILocation(line: 248, column: 17, scope: !16533)
!16537 = !DILocation(line: 249, column: 55, scope: !16528)
!16538 = !DILocation(line: 249, column: 17, scope: !16528)
!16539 = !DILocation(line: 250, column: 21, scope: !16540)
!16540 = distinct !DILexicalBlock(scope: !16528, file: !2204, line: 250, column: 21)
!16541 = !DILocation(line: 250, column: 32, scope: !16540)
!16542 = !DILocation(line: 250, column: 21, scope: !16528)
!16543 = !DILocation(line: 251, column: 25, scope: !16544)
!16544 = distinct !DILexicalBlock(scope: !16540, file: !2204, line: 250, column: 37)
!16545 = !DILocation(line: 252, column: 25, scope: !16544)
!16546 = !DILocation(line: 253, column: 17, scope: !16544)
!16547 = !DILocation(line: 254, column: 2, scope: !16528)
!16548 = !DILocation(line: 268, column: 38, scope: !2216)
!16549 = !DILocation(line: 268, column: 3, scope: !2216)
!16550 = !DILocation(line: 270, column: 21, scope: !16551)
!16551 = distinct !DILexicalBlock(scope: !2216, file: !2204, line: 270, column: 6)
!16552 = !DILocation(line: 270, column: 6, scope: !16551)
!16553 = !DILocation(line: 270, column: 6, scope: !2216)
!16554 = !DILocation(line: 271, column: 6, scope: !16555)
!16555 = distinct !DILexicalBlock(scope: !16551, file: !2204, line: 270, column: 34)
!16556 = !DILocation(line: 272, column: 6, scope: !16555)
!16557 = !DILocation(line: 273, column: 6, scope: !16555)
!16558 = !DILocation(line: 274, column: 2, scope: !16555)
!16559 = !DILocation(line: 275, column: 3, scope: !2216)
!16560 = !DILocation(line: 277, column: 8, scope: !16561)
!16561 = distinct !DILexicalBlock(scope: !2216, file: !2204, line: 277, column: 6)
!16562 = !DILocation(line: 277, column: 22, scope: !16561)
!16563 = !DILocation(line: 277, column: 27, scope: !16561)
!16564 = !DILocation(line: 277, column: 32, scope: !16565)
!16565 = !DILexicalBlockFile(scope: !16561, file: !2204, discriminator: 1)
!16566 = !DILocation(line: 277, column: 30, scope: !16565)
!16567 = !DILocation(line: 277, column: 36, scope: !16565)
!16568 = !DILocation(line: 277, column: 41, scope: !16569)
!16569 = !DILexicalBlockFile(scope: !16561, file: !2204, discriminator: 2)
!16570 = !DILocation(line: 277, column: 46, scope: !16569)
!16571 = !DILocation(line: 277, column: 6, scope: !16569)
!16572 = !DILocation(line: 278, column: 3, scope: !16573)
!16573 = distinct !DILexicalBlock(scope: !16561, file: !2204, line: 277, column: 65)
!16574 = !DILocation(line: 279, column: 19, scope: !16573)
!16575 = !DILocation(line: 280, column: 2, scope: !16573)
!16576 = !DILocation(line: 283, column: 8, scope: !16577)
!16577 = distinct !DILexicalBlock(scope: !2216, file: !2204, line: 283, column: 6)
!16578 = !DILocation(line: 283, column: 6, scope: !16577)
!16579 = !DILocation(line: 283, column: 6, scope: !2216)
!16580 = !DILocalVariable(name: "pid_fp", scope: !16581, file: !2204, line: 284, type: !16582)
!16581 = distinct !DILexicalBlock(scope: !16577, file: !2204, line: 283, column: 17)
!16582 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16583, size: 64, align: 64)
!16583 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !8699, line: 48, baseType: !16584)
!16584 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !8701, line: 241, size: 1728, align: 64, elements: !16585)
!16585 = !{!16586, !16587, !16588, !16589, !16590, !16591, !16592, !16593, !16594, !16595, !16596, !16597, !16598, !16606, !16607, !16608, !16609, !16610, !16611, !16612, !16613, !16614, !16615, !16616, !16617, !16618, !16619, !16620, !16621}
!16586 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !16584, file: !8701, line: 242, baseType: !33, size: 32, align: 32)
!16587 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !16584, file: !8701, line: 247, baseType: !19, size: 64, align: 64, offset: 64)
!16588 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !16584, file: !8701, line: 248, baseType: !19, size: 64, align: 64, offset: 128)
!16589 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !16584, file: !8701, line: 249, baseType: !19, size: 64, align: 64, offset: 192)
!16590 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !16584, file: !8701, line: 250, baseType: !19, size: 64, align: 64, offset: 256)
!16591 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !16584, file: !8701, line: 251, baseType: !19, size: 64, align: 64, offset: 320)
!16592 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !16584, file: !8701, line: 252, baseType: !19, size: 64, align: 64, offset: 384)
!16593 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !16584, file: !8701, line: 253, baseType: !19, size: 64, align: 64, offset: 448)
!16594 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !16584, file: !8701, line: 254, baseType: !19, size: 64, align: 64, offset: 512)
!16595 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !16584, file: !8701, line: 256, baseType: !19, size: 64, align: 64, offset: 576)
!16596 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !16584, file: !8701, line: 257, baseType: !19, size: 64, align: 64, offset: 640)
!16597 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !16584, file: !8701, line: 258, baseType: !19, size: 64, align: 64, offset: 704)
!16598 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !16584, file: !8701, line: 260, baseType: !16599, size: 64, align: 64, offset: 768)
!16599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16600, size: 64, align: 64)
!16600 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !8701, line: 156, size: 192, align: 64, elements: !16601)
!16601 = !{!16602, !16603, !16605}
!16602 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !16600, file: !8701, line: 157, baseType: !16599, size: 64, align: 64)
!16603 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !16600, file: !8701, line: 158, baseType: !16604, size: 64, align: 64, offset: 64)
!16604 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16584, size: 64, align: 64)
!16605 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !16600, file: !8701, line: 162, baseType: !33, size: 32, align: 32, offset: 128)
!16606 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !16584, file: !8701, line: 262, baseType: !16604, size: 64, align: 64, offset: 832)
!16607 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !16584, file: !8701, line: 264, baseType: !33, size: 32, align: 32, offset: 896)
!16608 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !16584, file: !8701, line: 268, baseType: !33, size: 32, align: 32, offset: 928)
!16609 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !16584, file: !8701, line: 270, baseType: !8727, size: 64, align: 64, offset: 960)
!16610 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !16584, file: !8701, line: 274, baseType: !14, size: 16, align: 16, offset: 1024)
!16611 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !16584, file: !8701, line: 275, baseType: !8730, size: 8, align: 8, offset: 1040)
!16612 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !16584, file: !8701, line: 276, baseType: !8732, size: 8, align: 8, offset: 1048)
!16613 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !16584, file: !8701, line: 280, baseType: !8736, size: 64, align: 64, offset: 1088)
!16614 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !16584, file: !8701, line: 289, baseType: !8739, size: 64, align: 64, offset: 1152)
!16615 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !16584, file: !8701, line: 297, baseType: !26, size: 64, align: 64, offset: 1216)
!16616 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !16584, file: !8701, line: 298, baseType: !26, size: 64, align: 64, offset: 1280)
!16617 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !16584, file: !8701, line: 299, baseType: !26, size: 64, align: 64, offset: 1344)
!16618 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !16584, file: !8701, line: 300, baseType: !26, size: 64, align: 64, offset: 1408)
!16619 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !16584, file: !8701, line: 302, baseType: !35, size: 64, align: 64, offset: 1472)
!16620 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !16584, file: !8701, line: 303, baseType: !33, size: 32, align: 32, offset: 1536)
!16621 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !16584, file: !8701, line: 305, baseType: !8747, size: 160, align: 8, offset: 1568)
!16622 = !DILocation(line: 284, column: 9, scope: !16581)
!16623 = !DILocalVariable(name: "pid", scope: !16581, file: !2204, line: 285, type: !16624)
!16624 = !DIDerivedType(tag: DW_TAG_typedef, name: "pid_t", file: !22, line: 98, baseType: !16625)
!16625 = !DIDerivedType(tag: DW_TAG_typedef, name: "__pid_t", file: !24, line: 133, baseType: !33)
!16626 = !DILocation(line: 285, column: 9, scope: !16581)
!16627 = !DILocation(line: 288, column: 21, scope: !16581)
!16628 = !DILocation(line: 288, column: 12, scope: !16581)
!16629 = !DILocation(line: 288, column: 10, scope: !16581)
!16630 = !DILocation(line: 289, column: 7, scope: !16631)
!16631 = distinct !DILexicalBlock(scope: !16581, file: !2204, line: 289, column: 7)
!16632 = !DILocation(line: 289, column: 7, scope: !16581)
!16633 = !DILocation(line: 290, column: 16, scope: !16634)
!16634 = distinct !DILexicalBlock(scope: !16635, file: !2204, line: 290, column: 8)
!16635 = distinct !DILexicalBlock(scope: !16631, file: !2204, line: 289, column: 15)
!16636 = !DILocation(line: 290, column: 8, scope: !16634)
!16637 = !DILocation(line: 290, column: 36, scope: !16634)
!16638 = !DILocation(line: 290, column: 8, scope: !16635)
!16639 = !DILocation(line: 291, column: 5, scope: !16640)
!16640 = distinct !DILexicalBlock(scope: !16634, file: !2204, line: 290, column: 42)
!16641 = !DILocation(line: 292, column: 15, scope: !16640)
!16642 = !DILocation(line: 292, column: 5, scope: !16640)
!16643 = !DILocation(line: 293, column: 4, scope: !16640)
!16644 = !DILocation(line: 293, column: 21, scope: !16645)
!16645 = !DILexicalBlockFile(scope: !16646, file: !2204, discriminator: 1)
!16646 = distinct !DILexicalBlock(scope: !16634, file: !2204, line: 293, column: 15)
!16647 = !DILocation(line: 293, column: 15, scope: !16645)
!16648 = !DILocation(line: 293, column: 29, scope: !16645)
!16649 = !DILocation(line: 293, column: 35, scope: !16645)
!16650 = !DILocation(line: 293, column: 49, scope: !16651)
!16651 = !DILexicalBlockFile(scope: !16646, file: !2204, discriminator: 2)
!16652 = !DILocation(line: 293, column: 39, scope: !16651)
!16653 = !DILocation(line: 293, column: 15, scope: !16651)
!16654 = !DILocation(line: 294, column: 5, scope: !16655)
!16655 = distinct !DILexicalBlock(scope: !16646, file: !2204, line: 293, column: 59)
!16656 = !DILocation(line: 295, column: 4, scope: !16655)
!16657 = !DILocation(line: 297, column: 8, scope: !16658)
!16658 = distinct !DILexicalBlock(scope: !16646, file: !2204, line: 295, column: 11)
!16659 = !DILocation(line: 296, column: 5, scope: !16658)
!16660 = !DILocation(line: 300, column: 28, scope: !16658)
!16661 = !DILocation(line: 298, column: 5, scope: !16658)
!16662 = !DILocation(line: 301, column: 13, scope: !16658)
!16663 = !DILocation(line: 301, column: 5, scope: !16658)
!16664 = !DILocation(line: 302, column: 5, scope: !16658)
!16665 = !DILocation(line: 304, column: 12, scope: !16635)
!16666 = !DILocation(line: 304, column: 4, scope: !16635)
!16667 = !DILocation(line: 305, column: 3, scope: !16635)
!16668 = !DILocation(line: 306, column: 2, scope: !16581)
!16669 = !DILocation(line: 308, column: 9, scope: !16670)
!16670 = distinct !DILexicalBlock(scope: !2216, file: !2204, line: 308, column: 6)
!16671 = !DILocation(line: 308, column: 7, scope: !16670)
!16672 = !DILocation(line: 308, column: 13, scope: !16670)
!16673 = !DILocation(line: 308, column: 18, scope: !16674)
!16674 = !DILexicalBlockFile(scope: !16670, file: !2204, discriminator: 1)
!16675 = !DILocation(line: 308, column: 16, scope: !16674)
!16676 = !DILocation(line: 308, column: 6, scope: !16674)
!16677 = !DILocation(line: 316, column: 3, scope: !16678)
!16678 = distinct !DILexicalBlock(scope: !16670, file: !2204, line: 308, column: 23)
!16679 = !DILocation(line: 318, column: 3, scope: !16678)
!16680 = !DILocation(line: 320, column: 3, scope: !16678)
!16681 = !DILocation(line: 322, column: 2, scope: !16678)
!16682 = !DILocation(line: 324, column: 8, scope: !16683)
!16683 = distinct !DILexicalBlock(scope: !2216, file: !2204, line: 324, column: 6)
!16684 = !DILocation(line: 324, column: 6, scope: !16683)
!16685 = !DILocation(line: 324, column: 12, scope: !16683)
!16686 = !DILocation(line: 324, column: 17, scope: !16687)
!16687 = !DILexicalBlockFile(scope: !16683, file: !2204, discriminator: 1)
!16688 = !DILocation(line: 324, column: 15, scope: !16687)
!16689 = !DILocation(line: 324, column: 6, scope: !16687)
!16690 = !DILocation(line: 326, column: 10, scope: !16691)
!16691 = distinct !DILexicalBlock(scope: !16692, file: !2204, line: 326, column: 7)
!16692 = distinct !DILexicalBlock(scope: !16683, file: !2204, line: 324, column: 22)
!16693 = !DILocation(line: 326, column: 8, scope: !16691)
!16694 = !DILocation(line: 326, column: 7, scope: !16692)
!16695 = !DILocation(line: 327, column: 4, scope: !16696)
!16696 = distinct !DILexicalBlock(scope: !16691, file: !2204, line: 326, column: 20)
!16697 = !DILocation(line: 329, column: 4, scope: !16696)
!16698 = !DILocation(line: 331, column: 4, scope: !16696)
!16699 = !DILocation(line: 332, column: 3, scope: !16696)
!16700 = !DILocation(line: 335, column: 3, scope: !16692)
!16701 = !DILocation(line: 337, column: 16, scope: !16692)
!16702 = !DILocation(line: 339, column: 2, scope: !16692)
!16703 = !DILocation(line: 341, column: 8, scope: !16704)
!16704 = distinct !DILexicalBlock(scope: !2216, file: !2204, line: 341, column: 6)
!16705 = !DILocation(line: 341, column: 6, scope: !16704)
!16706 = !DILocation(line: 341, column: 6, scope: !2216)
!16707 = !DILocation(line: 343, column: 3, scope: !16708)
!16708 = distinct !DILexicalBlock(scope: !16704, file: !2204, line: 341, column: 13)
!16709 = !DILocation(line: 348, column: 2, scope: !16708)
!16710 = !DILocation(line: 350, column: 8, scope: !16711)
!16711 = distinct !DILexicalBlock(scope: !2216, file: !2204, line: 350, column: 6)
!16712 = !DILocation(line: 350, column: 6, scope: !16711)
!16713 = !DILocation(line: 350, column: 6, scope: !2216)
!16714 = !DILocation(line: 352, column: 3, scope: !16715)
!16715 = distinct !DILexicalBlock(scope: !16711, file: !2204, line: 350, column: 13)
!16716 = !DILocation(line: 357, column: 2, scope: !16715)
!16717 = !DILocation(line: 359, column: 9, scope: !16718)
!16718 = distinct !DILexicalBlock(scope: !2216, file: !2204, line: 359, column: 6)
!16719 = !DILocation(line: 359, column: 7, scope: !16718)
!16720 = !DILocation(line: 359, column: 13, scope: !16718)
!16721 = !DILocation(line: 359, column: 19, scope: !16722)
!16722 = !DILexicalBlockFile(scope: !16718, file: !2204, discriminator: 1)
!16723 = !DILocation(line: 359, column: 17, scope: !16722)
!16724 = !DILocation(line: 359, column: 6, scope: !16722)
!16725 = !DILocation(line: 360, column: 3, scope: !16726)
!16726 = distinct !DILexicalBlock(scope: !16718, file: !2204, line: 359, column: 24)
!16727 = !DILocation(line: 362, column: 3, scope: !16726)
!16728 = !DILocation(line: 363, column: 2, scope: !16726)
!16729 = !DILocation(line: 366, column: 8, scope: !16730)
!16730 = distinct !DILexicalBlock(scope: !2216, file: !2204, line: 366, column: 6)
!16731 = !DILocation(line: 366, column: 6, scope: !16730)
!16732 = !DILocation(line: 366, column: 17, scope: !16730)
!16733 = !DILocation(line: 366, column: 22, scope: !16734)
!16734 = !DILexicalBlockFile(scope: !16730, file: !2204, discriminator: 1)
!16735 = !DILocation(line: 366, column: 20, scope: !16734)
!16736 = !DILocation(line: 366, column: 6, scope: !16734)
!16737 = !DILocation(line: 367, column: 3, scope: !16738)
!16738 = distinct !DILexicalBlock(scope: !16730, file: !2204, line: 366, column: 39)
!16739 = !DILocation(line: 370, column: 3, scope: !16738)
!16740 = !DILocation(line: 371, column: 2, scope: !16738)
!16741 = !DILocation(line: 374, column: 2, scope: !2216)
!16742 = !DILocation(line: 375, column: 6, scope: !2216)
!16743 = !DILocation(line: 375, column: 6, scope: !16744)
!16744 = !DILexicalBlockFile(scope: !2216, file: !2204, discriminator: 1)
!16745 = !DILocation(line: 376, column: 9, scope: !16746)
!16746 = distinct !DILexicalBlock(scope: !2216, file: !2204, line: 376, column: 6)
!16747 = !DILocation(line: 376, column: 7, scope: !16746)
!16748 = !DILocation(line: 376, column: 6, scope: !2216)
!16749 = !DILocation(line: 377, column: 6, scope: !16750)
!16750 = distinct !DILexicalBlock(scope: !16746, file: !2204, line: 376, column: 22)
!16751 = !DILocation(line: 378, column: 6, scope: !16750)
!16752 = !DILocation(line: 382, column: 2, scope: !2216)
!16753 = !DILocation(line: 383, column: 6, scope: !16754)
!16754 = distinct !DILexicalBlock(scope: !2216, file: !2204, line: 383, column: 6)
!16755 = !DILocation(line: 383, column: 24, scope: !16754)
!16756 = !DILocation(line: 383, column: 6, scope: !2216)
!16757 = !DILocation(line: 384, column: 3, scope: !16758)
!16758 = distinct !DILexicalBlock(scope: !16754, file: !2204, line: 383, column: 29)
!16759 = !DILocation(line: 385, column: 3, scope: !16758)
!16760 = !DILocation(line: 386, column: 2, scope: !16758)
!16761 = !DILocation(line: 388, column: 6, scope: !16762)
!16762 = distinct !DILexicalBlock(scope: !2216, file: !2204, line: 388, column: 6)
!16763 = !DILocation(line: 388, column: 20, scope: !16762)
!16764 = !DILocation(line: 388, column: 6, scope: !2216)
!16765 = !DILocation(line: 389, column: 3, scope: !16766)
!16766 = distinct !DILexicalBlock(scope: !16762, file: !2204, line: 388, column: 25)
!16767 = !DILocation(line: 390, column: 3, scope: !16766)
!16768 = !DILocation(line: 391, column: 2, scope: !16766)
!16769 = !DILocation(line: 393, column: 6, scope: !16770)
!16770 = distinct !DILexicalBlock(scope: !2216, file: !2204, line: 393, column: 6)
!16771 = !DILocation(line: 393, column: 29, scope: !16770)
!16772 = !DILocation(line: 393, column: 6, scope: !2216)
!16773 = !DILocation(line: 394, column: 3, scope: !16774)
!16774 = distinct !DILexicalBlock(scope: !16770, file: !2204, line: 393, column: 34)
!16775 = !DILocation(line: 395, column: 3, scope: !16774)
!16776 = !DILocation(line: 396, column: 2, scope: !16774)
!16777 = !DILocation(line: 398, column: 28, scope: !16778)
!16778 = distinct !DILexicalBlock(scope: !2216, file: !2204, line: 398, column: 6)
!16779 = !DILocation(line: 398, column: 6, scope: !16778)
!16780 = !DILocation(line: 398, column: 34, scope: !16778)
!16781 = !DILocation(line: 398, column: 6, scope: !2216)
!16782 = !DILocation(line: 399, column: 3, scope: !16783)
!16783 = distinct !DILexicalBlock(scope: !16778, file: !2204, line: 398, column: 39)
!16784 = !DILocation(line: 400, column: 3, scope: !16783)
!16785 = !DILocation(line: 401, column: 2, scope: !16783)
!16786 = !DILocation(line: 403, column: 6, scope: !16787)
!16787 = distinct !DILexicalBlock(scope: !2216, file: !2204, line: 403, column: 6)
!16788 = !DILocation(line: 403, column: 28, scope: !16787)
!16789 = !DILocation(line: 403, column: 6, scope: !2216)
!16790 = !DILocation(line: 404, column: 10, scope: !16791)
!16791 = distinct !DILexicalBlock(scope: !16792, file: !2204, line: 404, column: 7)
!16792 = distinct !DILexicalBlock(scope: !16787, file: !2204, line: 403, column: 34)
!16793 = !DILocation(line: 404, column: 8, scope: !16791)
!16794 = !DILocation(line: 404, column: 7, scope: !16792)
!16795 = !DILocation(line: 405, column: 4, scope: !16796)
!16796 = distinct !DILexicalBlock(scope: !16791, file: !2204, line: 404, column: 25)
!16797 = !DILocation(line: 406, column: 4, scope: !16796)
!16798 = !DILocation(line: 407, column: 3, scope: !16796)
!16799 = !DILocation(line: 408, column: 4, scope: !16800)
!16800 = distinct !DILexicalBlock(scope: !16791, file: !2204, line: 407, column: 10)
!16801 = !DILocation(line: 409, column: 4, scope: !16800)
!16802 = !DILocation(line: 411, column: 2, scope: !16792)
!16803 = !DILocation(line: 413, column: 6, scope: !16804)
!16804 = distinct !DILexicalBlock(scope: !2216, file: !2204, line: 413, column: 6)
!16805 = !DILocation(line: 413, column: 24, scope: !16804)
!16806 = !DILocation(line: 413, column: 6, scope: !2216)
!16807 = !DILocation(line: 414, column: 3, scope: !16808)
!16808 = distinct !DILexicalBlock(scope: !16804, file: !2204, line: 413, column: 29)
!16809 = !DILocation(line: 415, column: 3, scope: !16808)
!16810 = !DILocation(line: 416, column: 2, scope: !16808)
!16811 = !DILocation(line: 417, column: 6, scope: !16812)
!16812 = distinct !DILexicalBlock(scope: !2216, file: !2204, line: 417, column: 6)
!16813 = !DILocation(line: 417, column: 25, scope: !16812)
!16814 = !DILocation(line: 417, column: 6, scope: !2216)
!16815 = !DILocation(line: 418, column: 3, scope: !16816)
!16816 = distinct !DILexicalBlock(scope: !16812, file: !2204, line: 417, column: 30)
!16817 = !DILocation(line: 419, column: 3, scope: !16816)
!16818 = !DILocation(line: 420, column: 2, scope: !16816)
!16819 = !DILocation(line: 423, column: 15, scope: !16820)
!16820 = distinct !DILexicalBlock(scope: !2216, file: !2204, line: 423, column: 6)
!16821 = !DILocation(line: 423, column: 6, scope: !16820)
!16822 = !DILocation(line: 423, column: 20, scope: !16820)
!16823 = !DILocation(line: 423, column: 6, scope: !2216)
!16824 = !DILocation(line: 424, column: 45, scope: !16825)
!16825 = distinct !DILexicalBlock(scope: !16820, file: !2204, line: 423, column: 25)
!16826 = !DILocation(line: 424, column: 3, scope: !16825)
!16827 = !DILocation(line: 425, column: 3, scope: !16825)
!16828 = !DILocation(line: 426, column: 2, scope: !16825)
!16829 = !DILocation(line: 427, column: 15, scope: !16830)
!16830 = distinct !DILexicalBlock(scope: !2216, file: !2204, line: 427, column: 6)
!16831 = !DILocation(line: 427, column: 6, scope: !16830)
!16832 = !DILocation(line: 427, column: 20, scope: !16830)
!16833 = !DILocation(line: 427, column: 6, scope: !2216)
!16834 = !DILocation(line: 428, column: 45, scope: !16835)
!16835 = distinct !DILexicalBlock(scope: !16830, file: !2204, line: 427, column: 25)
!16836 = !DILocation(line: 428, column: 3, scope: !16835)
!16837 = !DILocation(line: 429, column: 3, scope: !16835)
!16838 = !DILocation(line: 430, column: 2, scope: !16835)
!16839 = !DILocation(line: 432, column: 8, scope: !16840)
!16840 = distinct !DILexicalBlock(scope: !2216, file: !2204, line: 432, column: 6)
!16841 = !DILocation(line: 432, column: 6, scope: !16840)
!16842 = !DILocation(line: 432, column: 6, scope: !2216)
!16843 = !DILocation(line: 433, column: 7, scope: !16844)
!16844 = distinct !DILexicalBlock(scope: !16845, file: !2204, line: 433, column: 7)
!16845 = distinct !DILexicalBlock(scope: !16840, file: !2204, line: 432, column: 23)
!16846 = !DILocation(line: 433, column: 33, scope: !16844)
!16847 = !DILocation(line: 433, column: 7, scope: !16845)
!16848 = !DILocation(line: 434, column: 4, scope: !16849)
!16849 = distinct !DILexicalBlock(scope: !16844, file: !2204, line: 433, column: 38)
!16850 = !DILocation(line: 435, column: 4, scope: !16849)
!16851 = !DILocation(line: 436, column: 3, scope: !16849)
!16852 = !DILocation(line: 437, column: 2, scope: !16845)
!16853 = !DILocation(line: 439, column: 9, scope: !16854)
!16854 = distinct !DILexicalBlock(scope: !2216, file: !2204, line: 439, column: 6)
!16855 = !DILocation(line: 439, column: 7, scope: !16854)
!16856 = !DILocation(line: 439, column: 6, scope: !2216)
!16857 = !DILocation(line: 440, column: 7, scope: !16858)
!16858 = distinct !DILexicalBlock(scope: !16859, file: !2204, line: 440, column: 7)
!16859 = distinct !DILexicalBlock(scope: !16854, file: !2204, line: 439, column: 16)
!16860 = !DILocation(line: 440, column: 7, scope: !16859)
!16861 = !DILocation(line: 441, column: 4, scope: !16858)
!16862 = !DILocation(line: 443, column: 4, scope: !16858)
!16863 = !DILocation(line: 444, column: 2, scope: !16859)
!16864 = !DILocation(line: 447, column: 8, scope: !16865)
!16865 = distinct !DILexicalBlock(scope: !2216, file: !2204, line: 447, column: 6)
!16866 = !DILocation(line: 447, column: 6, scope: !16865)
!16867 = !DILocation(line: 447, column: 6, scope: !2216)
!16868 = !DILocalVariable(name: "pid_fp", scope: !16869, file: !2204, line: 448, type: !16582)
!16869 = distinct !DILexicalBlock(scope: !16865, file: !2204, line: 447, column: 17)
!16870 = !DILocation(line: 448, column: 9, scope: !16869)
!16871 = !DILocation(line: 449, column: 21, scope: !16869)
!16872 = !DILocation(line: 449, column: 12, scope: !16869)
!16873 = !DILocation(line: 449, column: 10, scope: !16869)
!16874 = !DILocation(line: 450, column: 8, scope: !16875)
!16875 = distinct !DILexicalBlock(scope: !16869, file: !2204, line: 450, column: 7)
!16876 = !DILocation(line: 450, column: 7, scope: !16869)
!16877 = !DILocation(line: 451, column: 53, scope: !16878)
!16878 = distinct !DILexicalBlock(scope: !16875, file: !2204, line: 450, column: 16)
!16879 = !DILocation(line: 451, column: 4, scope: !16878)
!16880 = !DILocation(line: 452, column: 4, scope: !16878)
!16881 = !DILocation(line: 453, column: 3, scope: !16878)
!16882 = !DILocation(line: 454, column: 12, scope: !16869)
!16883 = !DILocation(line: 454, column: 26, scope: !16869)
!16884 = !DILocation(line: 454, column: 3, scope: !16885)
!16885 = !DILexicalBlockFile(scope: !16869, file: !2204, discriminator: 1)
!16886 = !DILocation(line: 455, column: 48, scope: !16869)
!16887 = !DILocation(line: 455, column: 61, scope: !16869)
!16888 = !DILocation(line: 455, column: 3, scope: !16885)
!16889 = !DILocation(line: 456, column: 11, scope: !16869)
!16890 = !DILocation(line: 456, column: 3, scope: !16869)
!16891 = !DILocation(line: 457, column: 2, scope: !16869)
!16892 = !DILocation(line: 468, column: 2, scope: !2216)
!16893 = !DILocation(line: 469, column: 2, scope: !2216)
!16894 = !DILocation(line: 470, column: 10, scope: !2216)
!16895 = !DILocation(line: 470, column: 2, scope: !2216)
!16896 = !DILocation(line: 471, column: 1, scope: !2216)
!16897 = !DILocalVariable(name: "fn", scope: !2220, file: !2204, line: 474, type: !4)
!16898 = !DILocation(line: 474, column: 14, scope: !2220)
!16899 = !DILocalVariable(name: "tv_out", scope: !2220, file: !2204, line: 475, type: !16900)
!16900 = !DICompositeType(tag: DW_TAG_structure_type, name: "timeval", file: !16901, line: 30, size: 128, align: 64, elements: !16902)
!16901 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/time.h", directory: "/home/muhammad/totd/totd")
!16902 = !{!16903, !16904}
!16903 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !16900, file: !16901, line: 32, baseType: !105, size: 64, align: 64)
!16904 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !16900, file: !16901, line: 33, baseType: !16905, size: 64, align: 64, offset: 64)
!16905 = !DIDerivedType(tag: DW_TAG_typedef, name: "__suseconds_t", file: !24, line: 141, baseType: !106)
!16906 = !DILocation(line: 475, column: 17, scope: !2220)
!16907 = !DILocalVariable(name: "tvp", scope: !2220, file: !2204, line: 475, type: !16908)
!16908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16900, size: 64, align: 64)
!16909 = !DILocation(line: 475, column: 26, scope: !2220)
!16910 = !DILocalVariable(name: "fd_read", scope: !2220, file: !2204, line: 476, type: !16911)
!16911 = !DIDerivedType(tag: DW_TAG_typedef, name: "fd_set", file: !739, line: 75, baseType: !16912)
!16912 = !DICompositeType(tag: DW_TAG_structure_type, file: !739, line: 64, size: 1024, align: 64, elements: !16913)
!16913 = !{!16914}
!16914 = !DIDerivedType(tag: DW_TAG_member, name: "__fds_bits", scope: !16912, file: !739, line: 72, baseType: !764, size: 1024, align: 64)
!16915 = !DILocation(line: 476, column: 9, scope: !2220)
!16916 = !DILocalVariable(name: "fd_write", scope: !2220, file: !2204, line: 476, type: !16911)
!16917 = !DILocation(line: 476, column: 18, scope: !2220)
!16918 = !DILocalVariable(name: "max_fd", scope: !2220, file: !2204, line: 477, type: !33)
!16919 = !DILocation(line: 477, column: 6, scope: !2220)
!16920 = !DILocalVariable(name: "fdnum", scope: !2220, file: !2204, line: 477, type: !33)
!16921 = !DILocation(line: 477, column: 14, scope: !2220)
!16922 = !DILocalVariable(name: "i", scope: !2220, file: !2204, line: 477, type: !33)
!16923 = !DILocation(line: 477, column: 21, scope: !2220)
!16924 = !DILocalVariable(name: "next_timeout", scope: !2220, file: !2204, line: 478, type: !103)
!16925 = !DILocation(line: 478, column: 9, scope: !2220)
!16926 = !DILocation(line: 489, column: 2, scope: !2220)
!16927 = !DILocation(line: 490, column: 9, scope: !16928)
!16928 = distinct !DILexicalBlock(scope: !16929, file: !2204, line: 490, column: 7)
!16929 = distinct !DILexicalBlock(scope: !2220, file: !2204, line: 489, column: 12)
!16930 = !DILocation(line: 490, column: 15, scope: !16928)
!16931 = !DILocation(line: 490, column: 7, scope: !16929)
!16932 = !DILocation(line: 491, column: 4, scope: !16928)
!16933 = !DILocation(line: 494, column: 3, scope: !16929)
!16934 = !DILocation(line: 513, column: 3, scope: !16929)
!16935 = !DILocation(line: 524, column: 19, scope: !16936)
!16936 = distinct !DILexicalBlock(scope: !16929, file: !2204, line: 523, column: 3)
!16937 = !DILocation(line: 524, column: 17, scope: !16936)
!16938 = !DILocation(line: 525, column: 9, scope: !16939)
!16939 = distinct !DILexicalBlock(scope: !16936, file: !2204, line: 525, column: 8)
!16940 = !DILocation(line: 525, column: 8, scope: !16936)
!16941 = !DILocation(line: 526, column: 11, scope: !16942)
!16942 = distinct !DILexicalBlock(scope: !16943, file: !2204, line: 526, column: 9)
!16943 = distinct !DILexicalBlock(scope: !16939, file: !2204, line: 525, column: 23)
!16944 = !DILocation(line: 526, column: 17, scope: !16942)
!16945 = !DILocation(line: 526, column: 9, scope: !16943)
!16946 = !DILocation(line: 527, column: 6, scope: !16942)
!16947 = !DILocation(line: 528, column: 9, scope: !16943)
!16948 = !DILocation(line: 529, column: 4, scope: !16943)
!16949 = !DILocation(line: 530, column: 12, scope: !16950)
!16950 = distinct !DILexicalBlock(scope: !16939, file: !2204, line: 529, column: 11)
!16951 = !DILocation(line: 530, column: 20, scope: !16950)
!16952 = !DILocation(line: 531, column: 21, scope: !16950)
!16953 = !DILocation(line: 531, column: 36, scope: !16950)
!16954 = !DILocation(line: 531, column: 34, scope: !16950)
!16955 = !DILocation(line: 531, column: 12, scope: !16950)
!16956 = !DILocation(line: 531, column: 19, scope: !16950)
!16957 = !DILocation(line: 532, column: 9, scope: !16950)
!16958 = !DILocation(line: 533, column: 11, scope: !16959)
!16959 = distinct !DILexicalBlock(scope: !16950, file: !2204, line: 533, column: 9)
!16960 = !DILocation(line: 533, column: 17, scope: !16959)
!16961 = !DILocation(line: 533, column: 9, scope: !16950)
!16962 = !DILocation(line: 535, column: 14, scope: !16959)
!16963 = !DILocation(line: 534, column: 6, scope: !16959)
!16964 = !DILocation(line: 540, column: 10, scope: !16929)
!16965 = !DILocation(line: 541, column: 3, scope: !16929)
!16966 = !DILocalVariable(name: "__d0", scope: !16967, file: !2204, line: 541, type: !33)
!16967 = distinct !DILexicalBlock(scope: !16929, file: !2204, line: 541, column: 3)
!16968 = !DILocation(line: 541, column: 3, scope: !16967)
!16969 = !DILocalVariable(name: "__d1", scope: !16967, file: !2204, line: 541, type: !33)
!16970 = !DILocation(line: 541, column: 3, scope: !16971)
!16971 = !DILexicalBlockFile(scope: !16967, file: !2204, discriminator: 1)
!16972 = !{i32 -2146485034}
!16973 = !DILocation(line: 542, column: 3, scope: !16929)
!16974 = !DILocalVariable(name: "__d0", scope: !16975, file: !2204, line: 542, type: !33)
!16975 = distinct !DILexicalBlock(scope: !16929, file: !2204, line: 542, column: 3)
!16976 = !DILocation(line: 542, column: 3, scope: !16975)
!16977 = !DILocalVariable(name: "__d1", scope: !16975, file: !2204, line: 542, type: !33)
!16978 = !DILocation(line: 542, column: 3, scope: !16979)
!16979 = !DILexicalBlockFile(scope: !16975, file: !2204, discriminator: 1)
!16980 = !{i32 -2146484625}
!16981 = !DILocation(line: 544, column: 9, scope: !16982)
!16982 = distinct !DILexicalBlock(scope: !16929, file: !2204, line: 544, column: 7)
!16983 = !DILocation(line: 544, column: 15, scope: !16982)
!16984 = !DILocation(line: 544, column: 7, scope: !16929)
!16985 = !DILocation(line: 545, column: 4, scope: !16982)
!16986 = !DILocation(line: 547, column: 3, scope: !16929)
!16987 = !DILocation(line: 549, column: 9, scope: !16988)
!16988 = distinct !DILexicalBlock(scope: !16929, file: !2204, line: 549, column: 7)
!16989 = !DILocation(line: 549, column: 15, scope: !16988)
!16990 = !DILocation(line: 549, column: 7, scope: !16929)
!16991 = !DILocation(line: 550, column: 4, scope: !16988)
!16992 = !DILocation(line: 551, column: 7, scope: !16929)
!16993 = !DILocation(line: 551, column: 5, scope: !16929)
!16994 = !DILocation(line: 552, column: 12, scope: !16929)
!16995 = !DILocation(line: 552, column: 12, scope: !16996)
!16996 = !DILexicalBlockFile(scope: !16929, file: !2204, discriminator: 1)
!16997 = !DILocation(line: 552, column: 12, scope: !16998)
!16998 = !DILexicalBlockFile(scope: !16929, file: !2204, discriminator: 2)
!16999 = !DILocation(line: 552, column: 12, scope: !17000)
!17000 = !DILexicalBlockFile(scope: !16929, file: !2204, discriminator: 3)
!17001 = !DILocation(line: 552, column: 10, scope: !17000)
!17002 = !DILocation(line: 554, column: 9, scope: !17003)
!17003 = distinct !DILexicalBlock(scope: !16929, file: !2204, line: 554, column: 7)
!17004 = !DILocation(line: 554, column: 15, scope: !17003)
!17005 = !DILocation(line: 554, column: 7, scope: !16929)
!17006 = !DILocation(line: 555, column: 4, scope: !17003)
!17007 = !DILocation(line: 556, column: 7, scope: !16929)
!17008 = !DILocation(line: 556, column: 5, scope: !16929)
!17009 = !DILocation(line: 557, column: 12, scope: !16929)
!17010 = !DILocation(line: 557, column: 12, scope: !16996)
!17011 = !DILocation(line: 557, column: 12, scope: !16998)
!17012 = !DILocation(line: 557, column: 12, scope: !17000)
!17013 = !DILocation(line: 557, column: 10, scope: !17000)
!17014 = !DILocation(line: 559, column: 9, scope: !17015)
!17015 = distinct !DILexicalBlock(scope: !16929, file: !2204, line: 559, column: 7)
!17016 = !DILocation(line: 559, column: 15, scope: !17015)
!17017 = !DILocation(line: 559, column: 7, scope: !16929)
!17018 = !DILocation(line: 560, column: 42, scope: !17015)
!17019 = !DILocation(line: 560, column: 46, scope: !17015)
!17020 = !DILocation(line: 560, column: 4, scope: !17015)
!17021 = !DILocation(line: 563, column: 9, scope: !17022)
!17022 = distinct !DILexicalBlock(scope: !16929, file: !2204, line: 563, column: 7)
!17023 = !DILocation(line: 563, column: 15, scope: !17022)
!17024 = !DILocation(line: 563, column: 7, scope: !16929)
!17025 = !DILocation(line: 564, column: 4, scope: !17022)
!17026 = !DILocation(line: 566, column: 19, scope: !16929)
!17027 = !DILocation(line: 566, column: 26, scope: !16929)
!17028 = !DILocation(line: 566, column: 58, scope: !16929)
!17029 = !DILocation(line: 566, column: 11, scope: !16929)
!17030 = !DILocation(line: 566, column: 9, scope: !16929)
!17031 = !DILocation(line: 567, column: 7, scope: !17032)
!17032 = distinct !DILexicalBlock(scope: !16929, file: !2204, line: 567, column: 7)
!17033 = !DILocation(line: 567, column: 13, scope: !17032)
!17034 = !DILocation(line: 567, column: 7, scope: !16929)
!17035 = !DILocation(line: 568, column: 8, scope: !17036)
!17036 = distinct !DILexicalBlock(scope: !17037, file: !2204, line: 568, column: 8)
!17037 = distinct !DILexicalBlock(scope: !17032, file: !2204, line: 567, column: 18)
!17038 = !DILocation(line: 568, column: 14, scope: !17036)
!17039 = !DILocation(line: 568, column: 8, scope: !17037)
!17040 = !DILocation(line: 570, column: 6, scope: !17041)
!17041 = distinct !DILexicalBlock(scope: !17036, file: !2204, line: 568, column: 24)
!17042 = !DILocation(line: 569, column: 5, scope: !17041)
!17043 = !DILocation(line: 571, column: 5, scope: !17041)
!17044 = !DILocation(line: 573, column: 42, scope: !17045)
!17045 = distinct !DILexicalBlock(scope: !17036, file: !2204, line: 572, column: 11)
!17046 = !DILocation(line: 573, column: 5, scope: !17045)
!17047 = !DILocation(line: 574, column: 34, scope: !17048)
!17048 = distinct !DILexicalBlock(scope: !17045, file: !2204, line: 574, column: 9)
!17049 = !DILocation(line: 574, column: 9, scope: !17048)
!17050 = !DILocation(line: 574, column: 43, scope: !17048)
!17051 = !DILocation(line: 574, column: 9, scope: !17045)
!17052 = !DILocation(line: 575, column: 6, scope: !17048)
!17053 = !DILocation(line: 576, column: 5, scope: !17045)
!17054 = !DILocation(line: 578, column: 3, scope: !17037)
!17055 = !DILocalVariable(name: "sock", scope: !17056, file: !2204, line: 579, type: !33)
!17056 = distinct !DILexicalBlock(scope: !17032, file: !2204, line: 578, column: 10)
!17057 = !DILocation(line: 579, column: 8, scope: !17056)
!17058 = !DILocation(line: 581, column: 12, scope: !17056)
!17059 = !DILocation(line: 581, column: 4, scope: !17056)
!17060 = !DILocation(line: 583, column: 25, scope: !17061)
!17061 = distinct !DILexicalBlock(scope: !17062, file: !2204, line: 583, column: 9)
!17062 = distinct !DILexicalBlock(scope: !17056, file: !2204, line: 581, column: 45)
!17063 = !DILocation(line: 583, column: 9, scope: !17061)
!17064 = !DILocation(line: 583, column: 31, scope: !17061)
!17065 = !DILocation(line: 583, column: 9, scope: !17062)
!17066 = !DILocation(line: 584, column: 6, scope: !17061)
!17067 = !DILocation(line: 585, column: 5, scope: !17062)
!17068 = !DILocation(line: 587, column: 28, scope: !17069)
!17069 = distinct !DILexicalBlock(scope: !17062, file: !2204, line: 587, column: 9)
!17070 = !DILocation(line: 587, column: 9, scope: !17069)
!17071 = !DILocation(line: 587, column: 34, scope: !17069)
!17072 = !DILocation(line: 587, column: 9, scope: !17062)
!17073 = !DILocation(line: 588, column: 6, scope: !17069)
!17074 = !DILocation(line: 589, column: 5, scope: !17062)
!17075 = !DILocation(line: 591, column: 9, scope: !17076)
!17076 = distinct !DILexicalBlock(scope: !17062, file: !2204, line: 591, column: 9)
!17077 = !DILocation(line: 591, column: 41, scope: !17076)
!17078 = !DILocation(line: 591, column: 9, scope: !17062)
!17079 = !DILocation(line: 592, column: 6, scope: !17076)
!17080 = !DILocation(line: 594, column: 9, scope: !17081)
!17081 = distinct !DILexicalBlock(scope: !17062, file: !2204, line: 594, column: 9)
!17082 = !DILocation(line: 594, column: 44, scope: !17081)
!17083 = !DILocation(line: 594, column: 9, scope: !17062)
!17084 = !DILocation(line: 595, column: 6, scope: !17081)
!17085 = !DILocation(line: 596, column: 4, scope: !17062)
!17086 = !DILocation(line: 489, column: 2, scope: !17087)
!17087 = !DILexicalBlockFile(scope: !2220, file: !2204, discriminator: 1)
!17088 = !DILocation(line: 599, column: 1, scope: !2220)
